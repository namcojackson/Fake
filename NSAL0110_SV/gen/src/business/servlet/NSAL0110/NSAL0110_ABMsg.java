//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20170130113203000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0110_ABMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NSAL0110;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL0110 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL0110_ABMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** DS_CONTR_PK_RS*/
	public final EZDBBigDecimalItem              dsContrPk_RS;

    /** DS_CONTR_NUM_RS*/
	public final EZDBStringItem              dsContrNum_RS;

    /** DS_CONTR_NM_RS*/
	public final EZDBStringItem              dsContrNm_RS;

    /** DS_CONTR_DTL_PK_RS*/
	public final EZDBBigDecimalItem              dsContrDtlPk_RS;

    /** DS_CONTR_CTRL_STS_NM_HS*/
	public final EZDBStringItem              dsContrCtrlStsNm_HS;

    /** DS_ACCT_NUM_RS*/
	public final EZDBStringItem              dsAcctNum_RS;

    /** DS_ACCT_NM_RS*/
	public final EZDBStringItem              dsAcctNm_RS;

    /** DS_CONTR_CATG_DESC_TXT_RS*/
	public final EZDBStringItem              dsContrCatgDescTxt_RS;

    /** DS_CONTR_CTRL_STS_NM_DS*/
	public final EZDBStringItem              dsContrCtrlStsNm_DS;

    /** DS_CONTR_DTL_TP_DESC_TXT_RS*/
	public final EZDBStringItem              dsContrDtlTpDescTxt_RS;

    /** CONTR_VRSN_EFF_FROM_DT_RS*/
	public final EZDBDateItem              contrVrsnEffFromDt_RS;

    /** CONTR_VRSN_EFF_THRU_DT_RS*/
	public final EZDBDateItem              contrVrsnEffThruDt_RS;

    /** SER_NUM_RS*/
	public final EZDBStringItem              serNum_RS;

    /** MDL_NM_RS*/
	public final EZDBStringItem              mdlNm_RS;


	/**
	 * NSAL0110_ABMsg is constructor.
	 * The initialization when the instance of NSAL0110_ABMsg is generated.
	 */
	public NSAL0110_ABMsg() {
		this(false, -1);
	}

	/**
	 * NSAL0110_ABMsg is constructor.
	 * The initialization when the instance of NSAL0110_ABMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL0110_ABMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		dsContrPk_RS = (EZDBBigDecimalItem)newItem("dsContrPk_RS");
		dsContrNum_RS = (EZDBStringItem)newItem("dsContrNum_RS");
		dsContrNm_RS = (EZDBStringItem)newItem("dsContrNm_RS");
		dsContrDtlPk_RS = (EZDBBigDecimalItem)newItem("dsContrDtlPk_RS");
		dsContrCtrlStsNm_HS = (EZDBStringItem)newItem("dsContrCtrlStsNm_HS");
		dsAcctNum_RS = (EZDBStringItem)newItem("dsAcctNum_RS");
		dsAcctNm_RS = (EZDBStringItem)newItem("dsAcctNm_RS");
		dsContrCatgDescTxt_RS = (EZDBStringItem)newItem("dsContrCatgDescTxt_RS");
		dsContrCtrlStsNm_DS = (EZDBStringItem)newItem("dsContrCtrlStsNm_DS");
		dsContrDtlTpDescTxt_RS = (EZDBStringItem)newItem("dsContrDtlTpDescTxt_RS");
		contrVrsnEffFromDt_RS = (EZDBDateItem)newItem("contrVrsnEffFromDt_RS");
		contrVrsnEffThruDt_RS = (EZDBDateItem)newItem("contrVrsnEffThruDt_RS");
		serNum_RS = (EZDBStringItem)newItem("serNum_RS");
		mdlNm_RS = (EZDBStringItem)newItem("mdlNm_RS");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL0110_ABMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL0110_ABMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"dsContrPk_RS", "dsContrPk_RS", "RS", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrNum_RS", "dsContrNum_RS", "RS", null, TYPE_HANKAKUEISU, "30", null},
	{"dsContrNm_RS", "dsContrNm_RS", "RS", null, TYPE_HANKAKUEISU, "60", null},
	{"dsContrDtlPk_RS", "dsContrDtlPk_RS", "RS", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrCtrlStsNm_HS", "dsContrCtrlStsNm_HS", "HS", null, TYPE_HANKAKUEISU, "50", null},
	{"dsAcctNum_RS", "dsAcctNum_RS", "RS", null, TYPE_HANKAKUEISU, "20", null},
	{"dsAcctNm_RS", "dsAcctNm_RS", "RS", null, TYPE_HANKAKUEISU, "360", null},
	{"dsContrCatgDescTxt_RS", "dsContrCatgDescTxt_RS", "RS", null, TYPE_HANKAKUEISU, "50", null},
	{"dsContrCtrlStsNm_DS", "dsContrCtrlStsNm_DS", "DS", null, TYPE_HANKAKUEISU, "50", null},
	{"dsContrDtlTpDescTxt_RS", "dsContrDtlTpDescTxt_RS", "RS", null, TYPE_HANKAKUEISU, "50", null},
	{"contrVrsnEffFromDt_RS", "contrVrsnEffFromDt_RS", "RS", null, TYPE_NENTSUKIHI, "8", null},
	{"contrVrsnEffThruDt_RS", "contrVrsnEffThruDt_RS", "RS", null, TYPE_NENTSUKIHI, "8", null},
	{"serNum_RS", "serNum_RS", "RS", null, TYPE_HANKAKUEISU, "30", null},
	{"mdlNm_RS", "mdlNm_RS", "RS", null, TYPE_HANKAKUEISU, "50", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"DS_CONTR_PK",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrPk_RS
        {"DS_CONTR_NUM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrNum_RS
        {"DS_CONTR_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrNm_RS
        {"DS_CONTR_DTL_PK",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrDtlPk_RS
        {"DS_CONTR_CTRL_STS_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrCtrlStsNm_HS
        {"DS_ACCT_NUM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctNum_RS
        {"DS_ACCT_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctNm_RS
        {"DS_CONTR_CATG_DESC_TXT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrCatgDescTxt_RS
        {"DS_CONTR_CTRL_STS_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrCtrlStsNm_DS
        {"DS_CONTR_DTL_TP_DESC_TXT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrDtlTpDescTxt_RS
        {"CONTR_VRSN_EFF_FROM_DT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//contrVrsnEffFromDt_RS
        {"CONTR_VRSN_EFF_THRU_DT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//contrVrsnEffThruDt_RS
        {"SER_NUM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNum_RS
        {"MDL_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdlNm_RS
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

