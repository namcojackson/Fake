<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<sqlMap namespace="NFDL0060Query">
	<typeAlias alias="NFDL0060_ASMsg"    type="business.blap.NFDL0060.NFDL0060_ASMsg"/>

	<resultMap id="result.NFDL0060_ASMsg" class="NFDL0060_ASMsg">
		<result property="cltItemTpDescTxt_A1"		column="ITEM_TYPE"			javaType="EZDSStringItem"/>
		<result property="cltTaskPk_A1"				column="WORK_ITEM_NUM"		javaType="EZDSStringItem"/>
		<result property="cltTaskRwsdDt_A1"			column="RWSD_DT"			javaType="EZDSStringItem"/>
		<result property="cltStrgyNm_A1"			column="STRGY_NM"			javaType="EZDSStringItem"/>
		<result property="xxScrItem130Txt_A1"		column="ITEM_NM"			javaType="EZDSStringItem"/>
		<result property="cltPsnNm_A1"				column="OWNER"				javaType="EZDSStringItem"/>
		<result property="cltPtfoNm_A1"				column="CLT_PTFO_NM"		javaType="EZDSStringItem"/>
		<result property="cltTaskTpDescTxt_A1"		column="TYPE"				javaType="EZDSStringItem"/>
		<result property="cltTaskStsDescTxt_A1"		column="STATUS"				javaType="EZDSStringItem"/>
		<result property="cltTaskPrtyDescTxt_A1"	column="PRIORITY"			javaType="EZDSStringItem"/>
		<result property="dsAcctNum_A1"				column="DS_ACCT_NUM"		javaType="EZDSStringItem"/>
		<result property="dsAcctNm_A1"				column="DS_ACCT_NM"			javaType="EZDSStringItem"/>
		<result property="xxScrItem130Txt_A3"		column="CREATED_BY"			javaType="EZDSStringItem"/>
		<result property="xxTotAmt_A1"				column="AMOUNT"				javaType="EZDSBigDecimalItem"/>
	</resultMap>

	<statement id="getTaskList" parameterClass="Map" resultMap="result.NFDL0060_ASMsg">
        WITH SUB_DAC AS (
            SELECT
                 STC.GLBL_CMPY_CD
                ,STC.SELL_TO_CUST_CD AS DS_ACCT_NUM
                ,STC.DS_ACCT_NM
                ,STC.CLT_PTFO_PK
                ,CP3.CLT_PTFO_NM
                ,CP3.CLT_PSN_CD
                ,CP3.CLT_PSN_NM
            FROM
                 SELL_TO_CUST STC
                ,(
                    SELECT
                    DISTINCT
                         CP2.CLT_PTFO_PK
                        ,CP2.CLT_PTFO_NM
                        ,CP2.CLT_PSN_CD
                        ,CP2.CLT_PSN_NM
                    FROM
                        (
                            SELECT
                                 CP1.CLT_PTFO_PK
                                ,CP1.CLT_PTFO_NM
                                ,CP1.CLT_PSN_CD
                                ,CP1.CLT_PSN_NM
                            FROM
                                CLT_PTFO CP1
                            WHERE
                                    CP1.GLBL_CMPY_CD = #glblCmpyCd#
                                AND CP1.EZCANCELFLAG = '0'
                                <isEqual property="cMsg.cltDispTpCd_H3" compareValue="01">
                                AND CP1.CLT_PSN_CD  = #cltPsnCd#
                                </isEqual>
                                <isNull property="cMsg.cltDispTpCd_H3">
                                <iterate property="cltPsnCdList" var="cltPsnCd[]" open="AND CP1.CLT_PSN_CD IN (" close=")" conjunction=",">
                                    #cltPsnCd[]#
                                </iterate>
                                </isNull>
                                <isNotNull property="collectorNm">
                                AND UPPER(CP1.CLT_PSN_NM) LIKE #collectorNm#
                                </isNotNull>
                                <isNotNull property="cltPtfoNm">
                                AND UPPER(CP1.CLT_PTFO_NM) LIKE #cltPtfoNm#
                                </isNotNull>
                                <isEqual property="cMsg.cltDispTpCd_H3" compareValue="02">
                                <isNotNull property="cltPsnCdList">
                                    <iterate property="cltPsnCdList" var="cltPsnCd[]" open="START WITH CP1.CLT_PSN_CD IN (" close=")" conjunction=",">
                                    #cltPsnCd[]#
                                    </iterate>
                                </isNotNull>
                                <isNull property="cltPsnCdList">
                                START WITH CP1.CLT_PSN_CD = #srchPsnCd#
                                </isNull>
                                </isEqual>
                                CONNECT BY CP1.REL_CLT_PTFO_PK = PRIOR CP1.CLT_PTFO_PK
                        ) CP2
                ) CP3
            WHERE
                    STC.GLBL_CMPY_CD = #glblCmpyCd#
                AND STC.CLT_PTFO_PK  = CP3.CLT_PTFO_PK
                <iterate property="dsAcctNumList" var="dsAcctNum[]" open="AND STC.SELL_TO_CUST_CD IN (" close=")" conjunction=",">
                 #dsAcctNum[]#
                </iterate>
                <isNotNull property="dsAcctNm">
                AND UPPER(STC.DS_ACCT_NM) LIKE #dsAcctNm#
                </isNotNull>
                AND STC.EZCANCELFLAG = '0'
        )
        SELECT
             ITEM_TYPE
            ,GLBL_CMPY_CD
            ,WORK_ITEM_NUM
            ,RWSD_DT
            ,STRGY_NM
            ,ITEM_NM
            ,OWNER
            ,CLT_PTFO_NM
            ,TYPE
            ,STATUS
            ,PRIORITY
            ,PRIORITY_SORT_NUM
            ,DS_ACCT_NUM
            ,DS_ACCT_NM
            ,CREATED_BY
            ,AMOUNT
        FROM
            (
                SELECT
                     A.ITEM_TYPE
                    ,A.GLBL_CMPY_CD
                    ,A.WORK_ITEM_NUM
                    ,A.RWSD_DT
                    ,A.STRGY_NM
                    ,A.ITEM_NM
                    ,MAX(A.OWNER)       AS OWNER
                    ,MAX(A.CLT_PTFO_NM) AS CLT_PTFO_NM
                    ,A.TYPE
                    ,A.STATUS
                    ,A.PRIORITY
                    ,A.PRIORITY_SORT_NUM
                    ,A.DS_ACCT_NUM
                    ,A.DS_ACCT_NM
                    ,A.CREATED_BY
                    ,A.AMOUNT
	FROM
	(
	<isEqual property="showTaskFlg" compareValue="Y">
		SELECT
			#itemTypeTask#					AS ITEM_TYPE
		,	CT.GLBL_CMPY_CD					AS GLBL_CMPY_CD
		,	CT.CLT_TASK_PK					AS WORK_ITEM_NUM
		,	CT.CLT_TASK_RWSD_DT				AS RWSD_DT
		,	''								AS STRGY_NM
		,	CT.CLT_TASK_SUBJ_TXT			AS ITEM_NM
		,	CASE WHEN CT.CLT_TASK_OWNR_ID IS NOT NULL THEN UPPER(AP_OWNR.LAST_NM || ',' || AP_OWNR.FIRST_NM) ELSE '' END AS OWNER
		,	CP.CLT_PTFO_NM					AS CLT_PTFO_NM
		,	CTT.CLT_TASK_TP_DESC_TXT		AS TYPE
		,	CTS.CLT_TASK_STS_DESC_TXT		AS STATUS
		,	CTP.CLT_TASK_PRTY_DESC_TXT		AS PRIORITY
		,	CTP.CLT_TASK_PRTY_SORT_NUM		AS PRIORITY_SORT_NUM
		,	SD.DS_ACCT_NUM
		,	SD.DS_ACCT_NM
		,	CASE WHEN CT.CRAT_USR_ID IS NOT NULL THEN UPPER(AP_CRAT.LAST_NM || ',' || AP_CRAT.FIRST_NM) ELSE '' END AS CREATED_BY
		,	(
		      SELECT SUM(BAL_AMT.RCP_AMT) + SUM(BAL_AMT.AMT) AS DEAL_RMNG_BAL_GRS_AMT
		      FROM (
                SELECT
                    CASE WHEN ATB.AR_TRX_TP_CD   = #TrxTpRcp#                          AND ATB.AR_TRX_DT  &lt; #salesDt# THEN NVL(DEAL_RMNG_BAL_GRS_AMT, 0) * -1   ELSE 0 END RCP_AMT
                   ,CASE WHEN ATB.AR_TRX_TP_CD IN (#TrxTpInv#, #TrxTpDed#, #TrxTpAcc#) AND ATB.INV_DUE_DT &lt; #salesDt# THEN NVL(DEAL_RMNG_BAL_GRS_AMT, 0)        ELSE 0 END AMT
                FROM
                    AR_TRX_BAL ATB
                WHERE
                        ATB.GLBL_CMPY_CD            = CT.GLBL_CMPY_CD
                    <iterate property="arTrxTpCdList" var="arTrxTpCdList[]" open="AND ATB.AR_TRX_TP_CD IN (" close=")" conjunction=",">
                    #arTrxTpCdList[]#
                    </iterate>
                    <iterate property="arCashApplyStsCdList" var="arCashApplyStsCdList[]" open="AND ATB.AR_CASH_APPLY_STS_CD IN (" close=")" conjunction=",">
                    #arCashApplyStsCdList[]#
                    </iterate>
                    AND ATB.BILL_TO_CUST_ACCT_CD    = CT.CLT_ACCT_CD
                    AND ATB.EZCANCELFLAG            = '0'
                 ) BAL_AMT
			) AS AMOUNT
		,	CT.EZINTIME						AS EZINTIME
		,	CT.CLT_TASK_PK					AS DATA_PK
		FROM
            SUB_DAC             SD
		,	CLT_TASK			CT
		,	CLT_TASK_TP			CTT
		,	CLT_TASK_STS		CTS
		,	CLT_TASK_PRTY		CTP
		,	CLT_PTFO			CP
		,	AUTH_PSN			AP_CRAT
		,	AUTH_PSN			AP_OWNR
		WHERE
		    SD.GLBL_CMPY_CD				=		#glblCmpyCd#
        AND SD.GLBL_CMPY_CD             =       CT.GLBL_CMPY_CD
        AND SD.DS_ACCT_NUM              =       CT.CLT_ACCT_CD
        AND SD.CLT_PSN_CD               =       CT.CLT_TASK_OWNR_ID
		AND	CT.EZCANCELFLAG				=		'0'
        <isNotNull property="collectorNm">
        AND (UPPER(AP_OWNR.LAST_NM) LIKE #collectorNm#
            OR UPPER(AP_OWNR.FIRST_NM) LIKE #collectorNm#)
        </isNotNull>
		<isNotNull property="xxFromDt">
		AND	CT.CLT_TASK_RWSD_DT		&gt;=		#xxFromDt#
		</isNotNull>
		<isNotNull property="xxToDt">
		AND	CT.CLT_TASK_RWSD_DT		&lt;=		#xxToDt#
		</isNotNull>
		<isNotNull property="cltTaskStsCd">
		AND	CT.CLT_TASK_STS_CD			=		#cltTaskStsCd#
		</isNotNull>

		AND	CT.GLBL_CMPY_CD				=		CTT.GLBL_CMPY_CD
		AND	CT.CLT_TASK_TP_CD			=		CTT.CLT_TASK_TP_CD
		AND	CTT.EZCANCELFLAG			=		'0'
		
		AND	CT.GLBL_CMPY_CD				=		CTS.GLBL_CMPY_CD
		AND	CT.CLT_TASK_STS_CD			=		CTS.CLT_TASK_STS_CD
		AND	CTS.EZCANCELFLAG			=		'0'

		AND	CT.GLBL_CMPY_CD				=		CTP.GLBL_CMPY_CD(+)
		AND	CT.CLT_TASK_PRTY_CD			=		CTP.CLT_TASK_PRTY_CD(+)
		AND	CTP.EZCANCELFLAG(+)			=		'0'

		AND	SD.GLBL_CMPY_CD				=		CP.GLBL_CMPY_CD
		AND	SD.CLT_PTFO_PK				=		CP.CLT_PTFO_PK
		AND	CP.EZCANCELFLAG				=		'0'

		AND	CT.GLBL_CMPY_CD				=		AP_CRAT.GLBL_CMPY_CD(+)
		AND	CT.CRAT_USR_ID				=		AP_CRAT.USR_NM(+)
		AND	AP_CRAT.EZCANCELFLAG(+)		=		'0'

		AND	CT.GLBL_CMPY_CD				=		AP_OWNR.GLBL_CMPY_CD(+)
		AND	CT.CLT_TASK_OWNR_ID			=		AP_OWNR.USR_NM(+)
		AND	AP_OWNR.EZCANCELFLAG(+)		=		'0'
	UNION
		SELECT
			#itemTypeTask#					AS ITEM_TYPE
		,	CT.GLBL_CMPY_CD					AS GLBL_CMPY_CD
		,	CT.CLT_TASK_PK					AS WORK_ITEM_NUM
		,	CT.CLT_TASK_RWSD_DT				AS RWSD_DT
		,	''								AS STRGY_NM
		,	CT.CLT_TASK_SUBJ_TXT			AS ITEM_NM
		,	CASE WHEN CT.CLT_TASK_OWNR_ID IS NOT NULL THEN UPPER(AP_OWNR.LAST_NM || ',' || AP_OWNR.FIRST_NM) ELSE '' END AS OWNER
		,	CP.CLT_PTFO_NM					AS CLT_PTFO_NM
		,	CTT.CLT_TASK_TP_DESC_TXT		AS TYPE
		,	CTS.CLT_TASK_STS_DESC_TXT		AS STATUS
		,	CTP.CLT_TASK_PRTY_DESC_TXT		AS PRIORITY
		,	CTP.CLT_TASK_PRTY_SORT_NUM		AS PRIORITY_SORT_NUM
		,	SD.SELL_TO_CUST_CD				AS DS_ACCT_NUM
		,	SD.DS_ACCT_NM
		,	CASE WHEN CT.CRAT_USR_ID IS NOT NULL THEN UPPER(AP_CRAT.LAST_NM || ',' || AP_CRAT.FIRST_NM) ELSE '' END AS CREATED_BY
		,	(
              SELECT SUM(BAL_AMT.RCP_AMT) + SUM(BAL_AMT.AMT) AS DEAL_RMNG_BAL_GRS_AMT
		      FROM (
                SELECT
                    CASE WHEN ATB.AR_TRX_TP_CD   = #TrxTpRcp#                          AND ATB.AR_TRX_DT  &lt; #salesDt# THEN NVL(DEAL_RMNG_BAL_GRS_AMT, 0) * -1   ELSE 0 END RCP_AMT
                   ,CASE WHEN ATB.AR_TRX_TP_CD IN (#TrxTpInv#, #TrxTpDed#, #TrxTpAcc#) AND ATB.INV_DUE_DT &lt; #salesDt# THEN NVL(DEAL_RMNG_BAL_GRS_AMT, 0)        ELSE 0 END AMT
                FROM
                    AR_TRX_BAL ATB
                WHERE
                        ATB.GLBL_CMPY_CD            = CT.GLBL_CMPY_CD
                    <iterate property="arTrxTpCdList" var="arTrxTpCdList[]" open="AND ATB.AR_TRX_TP_CD IN (" close=")" conjunction=",">
                    #arTrxTpCdList[]#
                    </iterate>
                    <iterate property="arCashApplyStsCdList" var="arCashApplyStsCdList[]" open="AND ATB.AR_CASH_APPLY_STS_CD IN (" close=")" conjunction=",">
                    #arCashApplyStsCdList[]#
                    </iterate>
                    AND ATB.BILL_TO_CUST_ACCT_CD    = CT.CLT_ACCT_CD
                    AND ATB.EZCANCELFLAG            = '0'
              ) BAL_AMT
			) AS AMOUNT
		,	CT.EZINTIME						AS EZINTIME
		,	CT.CLT_TASK_PK					AS DATA_PK
		FROM
		    SUB_DAC             SDA
		,	CLT_TASK			CT
		,	CLT_TASK_TP			CTT
		,	CLT_TASK_STS		CTS
		,	CLT_TASK_PRTY		CTP
		,	CLT_PTFO			CP
		,	AUTH_PSN			AP_CRAT
		,	AUTH_PSN			AP_OWNR
		,	SELL_TO_CUST		SD
		WHERE
			SDA.GLBL_CMPY_CD			=		#glblCmpyCd#
		AND SDA.GLBL_CMPY_CD            =       CT.GLBL_CMPY_CD
		AND SDA.CLT_PSN_CD              =       CT.CLT_TASK_OWNR_ID
        <isNotNull property="collectorNm">
        AND (UPPER(AP_OWNR.LAST_NM) LIKE #collectorNm#
            OR UPPER(AP_OWNR.FIRST_NM) LIKE #collectorNm#)
        </isNotNull>
		<isNotNull property="xxFromDt">
		AND	CT.CLT_TASK_RWSD_DT		&gt;=		#xxFromDt#
		</isNotNull>
		<isNotNull property="xxToDt">
		AND	CT.CLT_TASK_RWSD_DT		&lt;=		#xxToDt#
		</isNotNull>
		<isNotNull property="cltTaskStsCd">
		AND	CT.CLT_TASK_STS_CD			=		#cltTaskStsCd#
		</isNotNull>

		AND	CT.GLBL_CMPY_CD				=		CTT.GLBL_CMPY_CD
		AND	CT.CLT_TASK_TP_CD			=		CTT.CLT_TASK_TP_CD
		AND	CTT.EZCANCELFLAG			=		'0'
		
		AND	CT.GLBL_CMPY_CD				=		CTS.GLBL_CMPY_CD
		AND	CT.CLT_TASK_STS_CD			=		CTS.CLT_TASK_STS_CD
		AND	CTS.EZCANCELFLAG			=		'0'

		AND	CT.GLBL_CMPY_CD				=		CTP.GLBL_CMPY_CD(+)
		AND	CT.CLT_TASK_PRTY_CD			=		CTP.CLT_TASK_PRTY_CD(+)
		AND	CTP.EZCANCELFLAG(+)			=		'0'

		AND	CT.GLBL_CMPY_CD				=		SD.GLBL_CMPY_CD
		AND	CT.CLT_ACCT_CD				=		SD.SELL_TO_CUST_CD
		AND	SD.EZCANCELFLAG				=		'0'
        <iterate property="dsAcctNumList" var="dsAcctNum[]" open="AND SD.SELL_TO_CUST_CD IN (" close=")" conjunction=",">
        #dsAcctNum[]#
        </iterate>
        <isNotNull property="dsAcctNm">
        AND UPPER(SD.DS_ACCT_NM) LIKE #dsAcctNm#
        </isNotNull>

		AND	SD.GLBL_CMPY_CD				=		CP.GLBL_CMPY_CD
		AND	SD.CLT_PTFO_PK				=		CP.CLT_PTFO_PK
		AND	CP.EZCANCELFLAG				=		'0'

		AND	CT.GLBL_CMPY_CD				=		AP_CRAT.GLBL_CMPY_CD(+)
		AND	CT.CRAT_USR_ID				=		AP_CRAT.USR_NM(+)
		AND	AP_CRAT.EZCANCELFLAG(+)		=		'0'

		AND	CT.GLBL_CMPY_CD				=		AP_OWNR.GLBL_CMPY_CD(+)
		AND	CT.CLT_TASK_OWNR_ID			=		AP_OWNR.USR_NM(+)
		AND	AP_OWNR.EZCANCELFLAG(+)		=		'0'
	</isEqual>
	<isEqual property="showTaskFlg" compareValue="Y">
		<isEqual property="showWorkItemFlg" compareValue="Y">
	UNION
		</isEqual>
	</isEqual>
	<isEqual property="showWorkItemFlg" compareValue="Y">
		SELECT
			#itemTypeWorkItem#					AS ITEM_TYPE
		,	CSWIT.GLBL_CMPY_CD					AS GLBL_CMPY_CD
		,	CSWIT.CLT_STRGY_WRK_ITEM_TRX_PK	    AS WORK_ITEM_NUM
		,	CSWIT.CLT_WRK_ITEM_RWSD_DT			AS RWSD_DT
		,	CS.CLT_STRGY_NM						AS STRGY_NM
		,	CSWIT.CLT_WRK_ITEM_NM				AS ITEM_NM
		,	SD.CLT_PSN_NM						AS OWNER
		,	SD.CLT_PTFO_NM						AS CLT_PTFO_NM
		,	CSWIT.CLT_WRK_TP_NM					AS TYPE
		,	CWIS.CLT_WRK_ITEM_STS_DESC_TXT		AS STATUS
		,	''									AS PRIORITY
		,	99									AS PRIORITY_SORT_NUM
		,	SD.DS_ACCT_NUM
		,	SD.DS_ACCT_NM
		,	CASE WHEN CSWIT.CLT_WRK_ITEM_CRAT_USR_ID IS NOT NULL THEN AP.LAST_NM || ',' || AP.FIRST_NM ELSE '' END AS CREATED_BY
		,	(
		      SELECT SUM(BAL_AMT.RCP_AMT) + SUM(BAL_AMT.AMT) AS DEAL_RMNG_BAL_GRS_AMT
		      FROM (
                SELECT
                    CASE WHEN ATB.AR_TRX_TP_CD   = #TrxTpRcp#                          AND ATB.AR_TRX_DT  &lt; #salesDt# THEN NVL(DEAL_RMNG_BAL_GRS_AMT, 0) * -1   ELSE 0 END RCP_AMT
                   ,CASE WHEN ATB.AR_TRX_TP_CD IN (#TrxTpInv#, #TrxTpDed#, #TrxTpAcc#) AND ATB.INV_DUE_DT &lt; #salesDt# THEN NVL(DEAL_RMNG_BAL_GRS_AMT, 0)        ELSE 0 END AMT
                FROM
					AR_TRX_BAL		ATB
				WHERE
					ATB.GLBL_CMPY_CD			=		CSWIT.GLBL_CMPY_CD
			<iterate property="arTrxTpCdList" var="arTrxTpCdList[]" open="AND ATB.AR_TRX_TP_CD IN (" close=")" conjunction=",">
				#arTrxTpCdList[]#
			</iterate>
			<iterate property="arCashApplyStsCdList" var="arCashApplyStsCdList[]" open="AND ATB.AR_CASH_APPLY_STS_CD IN (" close=")" conjunction=",">
				#arCashApplyStsCdList[]#
			</iterate>
				AND	ATB.BILL_TO_CUST_CD			=		CSWIT.BILL_TO_CUST_CD
				AND	ATB.EZCANCELFLAG			=		'0'
                ) BAL_AMT
			) AS AMOUNT
		,	CSWIT.EZINTIME						AS EZINTIME
		,	CSWIT.CLT_STRGY_WRK_ITEM_TRX_PK		AS DATA_PK
		
		FROM
            SUB_DAC                 SD
		,	CLT_STRGY_WRK_ITEM_TRX	CSWIT
		,	CLT_STRGY_TRX			CST
		,	CLT_STRGY				CS
		,	CLT_WRK_ITEM_STS		CWIS
		,	AUTH_PSN				AP
		WHERE
            SD.GLBL_CMPY_CD                 =       CST.GLBL_CMPY_CD
        AND SD.DS_ACCT_NUM                  =       CST.CLT_ACCT_CD
        AND CST.EZCANCELFLAG                =       '0'
        AND SD.CLT_PSN_CD                   =       CSWIT.CLT_WRK_ITEM_OWNR_ID
        AND CST.GLBL_CMPY_CD                =       CSWIT.GLBL_CMPY_CD
        AND CST.CLT_STRGY_TRX_PK            =       CSWIT.CLT_STRGY_TRX_PK
        AND CSWIT.EZCANCELFLAG              =       '0'
		<isNotNull property="xxFromDt">
		AND	CSWIT.CLT_WRK_ITEM_RWSD_DT	&gt;=		#xxFromDt#
		</isNotNull>
		<isNotNull property="xxToDt">
		AND	CSWIT.CLT_WRK_ITEM_RWSD_DT	&lt;=		#xxToDt#
		</isNotNull>
		<isNotNull property="cltTaskStsCd">
		AND	CSWIT.CLT_WRK_ITEM_STS_CD		=		#cltTaskStsCd#
		</isNotNull>

		AND	CST.GLBL_CMPY_CD				=		CS.GLBL_CMPY_CD
		AND	CST.CLT_STRGY_CD				=		CS.CLT_STRGY_CD
		AND	CS.EZCANCELFLAG					=		'0'

		AND	CSWIT.GLBL_CMPY_CD				=		CWIS.GLBL_CMPY_CD
		AND	CSWIT.CLT_WRK_ITEM_STS_CD		=		CWIS.CLT_WRK_ITEM_STS_CD
		AND	CWIS.EZCANCELFLAG				=		'0'

		AND	CSWIT.GLBL_CMPY_CD				=		AP.GLBL_CMPY_CD(+)
		AND	CSWIT.CLT_WRK_ITEM_CRAT_USR_ID	=		AP.USR_NM(+)
		AND	AP.EZCANCELFLAG(+)				=		'0'
	</isEqual>	
	)	A
                GROUP BY
                     A.ITEM_TYPE
                    ,A.GLBL_CMPY_CD
                    ,A.WORK_ITEM_NUM
                    ,A.RWSD_DT
                    ,A.STRGY_NM
                    ,A.ITEM_NM
                    ,A.TYPE
                    ,A.STATUS
                    ,A.PRIORITY
                    ,A.PRIORITY_SORT_NUM
                    ,A.DS_ACCT_NUM
                    ,A.DS_ACCT_NM
                    ,A.CREATED_BY
                    ,A.AMOUNT
                    ,A.EZINTIME
                    ,A.DATA_PK
                ORDER BY
                     A.RWSD_DT
                    ,A.ITEM_TYPE
                    ,A.EZINTIME
                    ,A.DATA_PK
            )
        WHERE
            ROWNUM &lt;= #rowNum#
	</statement>

    <statement id="getUserIdList" parameterClass="Map" resultClass="Map">
		SELECT 
			CLT_PSN_CD
		FROM 
			CLT_PTFO 
		WHERE 
			GLBL_CMPY_CD = #glblCmpyCd#
		AND	EZCANCELFLAG = '0'
		START WITH CLT_PSN_CD = #userId#
		CONNECT BY PRIOR CLT_PTFO_PK = REL_CLT_PTFO_PK
    </statement>
</sqlMap>
