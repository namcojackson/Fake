<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<sqlMap namespace="NSAB067001">

    <statement id="getTrgtDtRec" parameterClass="Map" resultClass="BigDecimal">
        SELECT COUNT(1)
        FROM
            FCT_DLY_CONTR_REV_FCST   MAIN
        WHERE 
            MAIN.GLBL_CMPY_CD         = #glblCmpyCd#
        AND MAIN.DWH_TRGT_DT          = #trgtDt#
        AND MAIN.EZCANCELFLAG         = '0'
    </statement>

    <statement id="getModelByCond" parameterClass="Map" resultClass="Map">
        SELECT
            CON.RPT_COND_CONST_VAL_TXT_01 AS MDL_ID
           ,MN.T_MDL_NM                   AS T_MDL_NM
        FROM
            RPT_COND_CONST                 CON
           ,MDL_NM                         MN
        WHERE
            CON.GLBL_CMPY_CD               = #glblCmpyCd#
        AND CON.RPT_COND_CONST_GRP_ID      = #flt#
        AND CON.GLBL_CMPY_CD               = MN.T_GLBL_CMPY_CD
        AND CON.RPT_COND_CONST_VAL_TXT_01  = MN.T_MDL_ID
        AND CON.EZCANCELFLAG               = '0'
        AND MN.EZCANCELFLAG                = '0'
    </statement>

    <statement id="getDfrdAcctgRuleDurnAotByCond" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            CON.RPT_COND_CONST_VAL_NUM_01 AS DFRD_ACCTG_RULE_DURN_AOT
        FROM
            RPT_COND_CONST                 CON
        WHERE
            CON.GLBL_CMPY_CD               = #glblCmpyCd#
        AND CON.RPT_COND_CONST_GRP_ID      = #estMode#
        AND CON.EZCANCELFLAG               = '0'
    </statement>

    <statement id="getEstModeByCond" parameterClass="Map" resultClass="String">
        SELECT
            CON.RPT_COND_CONST_VAL_TXT_01 AS EST_MODE
        FROM
            RPT_COND_CONST                 CON
        WHERE
            CON.GLBL_CMPY_CD               = #glblCmpyCd#
        AND CON.RPT_COND_CONST_GRP_ID      = #estMode#
        AND CON.EZCANCELFLAG               = '0'
    </statement>

    <statement id="getMainData" parameterClass="Map" resultClass="Map">
        ---------------------------------------------------------
        -- Case Base and Pattern A or B (Not Billing Or Billing)
        ---------------------------------------------------------
        SELECT
            #base#                                     AS FACT_CATG_CD
           ,DMI.SVC_ALLOC_TP_CD                        AS SVC_ALLOC_TP_CD
           ,DCD.DS_CONTR_PK                            AS DS_CONTR_PK
           ,DC.DS_CONTR_NUM                            AS DS_CONTR_NUM
           ,DCD.DS_CONTR_DTL_TP_CD                     AS DS_CONTR_DTL_TP_CD
           ,DC.SVC_LINE_BIZ_CD                         AS SVC_LINE_BIZ_CD
           ,DC.SVC_CONTR_BR_CD                         AS SVC_CONTR_BR_CD
           ,DC.DS_CONTR_CATG_CD                        AS DS_CONTR_CATG_CD
           ,DCD.SVC_MACH_MSTR_PK                       AS SVC_MACH_MSTR_PK
           ,SMM.SER_NUM                                AS SER_NUM
           ,SCM.MDL_ID                                 AS MDL_ID
           ,MN.T_MDL_NM                                AS T_MDL_NM
           ,DCBS.BLLG_SCHD_FROM_DT                     AS BLLG_SCHD_FROM_DT
           ,DCBS.NEXT_BLLG_DT                          AS BLLG_SCHD_THRU_DT
           ,DCBS.BLLG_CYCLE_CD                         AS BLLG_CYCLE_CD
           ,BC.BLLG_CYCLE_DESC_TXT                     AS BLLG_CYCLE_DESC_TXT
           ,BC.BLLG_CYCLE_MTH_AOT                      AS BLLG_CYCLE_MTH_AOT
           ,DCD.BASE_BLLG_TMG_CD                       AS BLLG_TMG_TP_CD
           ,BTP.BLLG_TMG_TP_DESC_TXT                   AS BLLG_TMG_TP_DESC_TXT
           ,NULL                                       AS BLLG_MTR_LB_CD
           ,NULL                                       AS MTR_LB_DESC_TXT
           ,NULL                                       AS BLLG_COPY_QTY
           ,NULL                                       AS XS_MTR_COPY_QTY_01
           ,NULL                                       AS XS_MTR_AMT_RATE_01
           ,NULL                                       AS XS_MTR_COPY_QTY_02
           ,NULL                                       AS XS_MTR_AMT_RATE_02
           ,NULL                                       AS XS_MTR_COPY_QTY_03
           ,NULL                                       AS XS_MTR_AMT_RATE_03
           ,NULL                                       AS XS_MTR_COPY_QTY_04
           ,NULL                                       AS XS_MTR_AMT_RATE_04
           ,DCS.DS_CONTR_CTRL_STS_CD                   AS DS_CONTR_CTRL_STS_CD
           ,DCS.DS_CONTR_CTRL_STS_NM                   AS DS_CONTR_CTRL_STS_NM
           ,DC.CONTR_VRSN_EFF_FROM_DT                  AS CONTR_VRSN_EFF_FROM_DT
           ,DC.CONTR_VRSN_EFF_THRU_DT                  AS CONTR_VRSN_EFF_THRU_DT
           ,DCBS.DS_CONTR_DTL_PK                       AS DS_CONTR_DTL_PK
           ,DCDS.DS_CONTR_CTRL_STS_CD                  AS DS_CONTR_CTRL_DTL_STS_CD
           ,DCDS.DS_CONTR_CTRL_STS_NM                  AS DS_CONTR_CTRL_DTL_STS_NM
           ,DCD.CONTR_EFF_FROM_DT                      AS CONTR_EFF_FROM_DT
           ,DCD.CONTR_EFF_THRU_DT                      AS CONTR_EFF_THRU_DT
           ,DCD.CONTR_CLO_DT                           AS CONTR_CLO_DT
           ,DC.DS_CONTR_CRAT_DT                        AS DS_CONTR_CRAT_DT
           ,DC.DS_CONTR_CRAT_PSN_CD                    AS DS_CONTR_CRAT_PSN_CD
           ,DC.DS_CONTR_LAST_UPD_DT                    AS DS_CONTR_LAST_UPD_DT
           ,DC.DS_CONTR_LAST_UPD_PSN_CD                AS DS_CONTR_LAST_UPD_PSN_CD
           ,CASE WHEN DCBS.NEXT_BLLG_DT &gt; #trgtDt# THEN #trgtDt#
                 ELSE DCBS.NEXT_BLLG_DT END            AS BLLG_REV_DT
           ,DAR.DFRD_REV_FLG                           AS DFRD_REV_FLG
           ,NVL(DAR.DFRD_ACCTG_RULE_DURN_AOT, 0)       AS DFRD_ACCTG_RULE_DURN_AOT
           ,DCBS.DS_BLLG_SCHD_STS_CD                   AS DS_BLLG_SCHD_STS_CD
           ,DCBS.DS_CONTR_BLLG_SCHD_PK                 AS DS_CONTR_BLLG_SCHD_PK
           ,NVL(DCBS.BASE_PRC_DEAL_AMT, 0)             AS BASE_PRC_DEAL_AMT
           ,0                                          AS MTR_CHRG_DEAL_AMT
           ,0                                          AS DS_INV_SLS_CR_PK
           ,0                                          AS DS_CONTR_BLLG_MTR_PK
           ,0                                          AS AFT_DECL_PNT_DIGIT_NUM
        FROM
            DS_CONTR_BLLG_SCHD                         DCBS
           ,BLLG_CYCLE                                 BC
           ,DS_CONTR_DTL                               DCD
           ,DS_CONTR_DTL_STS_V                         DCDS
           ,BLLG_TMG_TP                                BTP
           ,DS_CONTR                                   DC
           ,DS_CONTR_STS_V                             DCS
           ,DS_CONTR_DTL_TP                            DCDT
           ,DS_CONTR_CATG                              DCC
           ,SVC_CONFIG_MSTR                            SCM
           ,DS_MDL                                     DM
           ,MDL_NM                                     MN
           ,SVC_MACH_MSTR                              SMM
           ,MDSE                                       DMI
           ,DFRD_ACCTG_RULE                            DAR
        WHERE
            DCBS.GLBL_CMPY_CD                       = #glblCmpyCd#
        AND DCBS.DS_BLLG_SCHD_STS_CD                IN (#open#, #billed#)
        AND DCBS.NEXT_BLLG_DT                      &lt;= TO_CHAR(LAST_DAY(TO_DATE(#trgtDt#, 'YYYYMMDD')), 'YYYYMMDD')
        AND ((DCBS.DS_CONTR_DTL_TP_CD               = #fleet#
              AND DC.DS_CONTR_CATG_CD               = #flt#)
              OR  DCBS.DS_CONTR_DTL_TP_CD          != #agg#)
        AND DCBS.BASE_CHRG_FLG                      = 'Y'
        AND DCBS.GLBL_CMPY_CD                       = BC.GLBL_CMPY_CD
        AND DCBS.BLLG_CYCLE_CD                      = BC.BLLG_CYCLE_CD
        AND DCBS.GLBL_CMPY_CD                       = DCD.GLBL_CMPY_CD
        AND DCBS.DS_CONTR_DTL_PK                    = DCD.DS_CONTR_DTL_PK
        AND DCD.GLBL_CMPY_CD                        = DCDS.GLBL_CMPY_CD
        AND DCD.DS_CONTR_DTL_PK                     = DCDS.DS_CONTR_DTL_PK
        AND DCD.GLBL_CMPY_CD                        = BTP.GLBL_CMPY_CD
        AND DCD.BASE_BLLG_TMG_CD                    = BTP.BLLG_TMG_TP_CD
        AND DCD.GLBL_CMPY_CD                        = DC.GLBL_CMPY_CD
        AND DCD.DS_CONTR_PK                         = DC.DS_CONTR_PK
        AND DCD.GLBL_CMPY_CD                        = DCS.GLBL_CMPY_CD
        AND DCD.DS_CONTR_PK                         = DCS.DS_CONTR_PK
        AND DCD.GLBL_CMPY_CD                        = DCDT.GLBL_CMPY_CD
        AND DCD.DS_CONTR_DTL_TP_CD                  = DCDT.DS_CONTR_DTL_TP_CD
        AND DC.GLBL_CMPY_CD                         = DCC.GLBL_CMPY_CD
        AND DC.DS_CONTR_CATG_CD                     = DCC.DS_CONTR_CATG_CD
        AND DCD.GLBL_CMPY_CD                        = SCM.GLBL_CMPY_CD(+)
        AND DCD.SVC_CONFIG_MSTR_PK                  = SCM.SVC_CONFIG_MSTR_PK(+)
        AND SCM.GLBL_CMPY_CD                        = DM.GLBL_CMPY_CD(+)
        AND SCM.MDL_ID                              = DM.MDL_ID(+)
        AND SCM.GLBL_CMPY_CD                        = MN.T_GLBL_CMPY_CD(+)
        AND SCM.MDL_ID                              = MN.T_MDL_ID(+)
        AND DCD.GLBL_CMPY_CD                        = SMM.GLBL_CMPY_CD(+)
        AND DCD.SVC_MACH_MSTR_PK                    = SMM.SVC_MACH_MSTR_PK(+)
        AND DCD.GLBL_CMPY_CD                        = DMI.GLBL_CMPY_CD
        AND DCD.SVC_PGM_MDSE_CD                     = DMI.MDSE_CD
        AND DMI.GLBL_CMPY_CD                        = DAR.GLBL_CMPY_CD
        AND DMI.DFRD_ACCTG_RULE_CD                  = DAR.DFRD_ACCTG_RULE_CD
        AND DCBS.EZCANCELFLAG                       = '0'
        AND BC.EZCANCELFLAG                         = '0'
        AND DCD.EZCANCELFLAG                        = '0'
        AND DCDS.EZCANCELFLAG                       = '0'
        AND BTP.EZCANCELFLAG                        = '0'
        AND DC.EZCANCELFLAG                         = '0'
        AND DCS.EZCANCELFLAG                        = '0'
        AND DCDT.EZCANCELFLAG                       = '0'
        AND DCC.EZCANCELFLAG                        = '0'
        AND SCM.EZCANCELFLAG(+)                     = '0'
        AND DM.EZCANCELFLAG(+)                      = '0'
        AND MN.EZCANCELFLAG(+)                      = '0'
        AND SMM.EZCANCELFLAG(+)                     = '0'
        AND DMI.EZCANCELFLAG                        = '0'
        AND DAR.EZCANCELFLAG                        = '0'
        --------------------------------------------
        -- CASE Base and Pattern C (Exist Invoice)
        --------------------------------------------
        UNION ALL
        SELECT
            #base#                                     AS FACT_CATG_CD
           ,DMI.SVC_ALLOC_TP_CD                        AS SVC_ALLOC_TP_CD
           ,DCD.DS_CONTR_PK                            AS DS_CONTR_PK
           ,DC.DS_CONTR_NUM                            AS DS_CONTR_NUM
           ,DCD.DS_CONTR_DTL_TP_CD                     AS DS_CONTR_DTL_TP_CD
           ,DC.SVC_LINE_BIZ_CD                         AS SVC_LINE_BIZ_CD
           ,DC.SVC_CONTR_BR_CD                         AS SVC_CONTR_BR_CD
           ,DC.DS_CONTR_CATG_CD                        AS DS_CONTR_CATG_CD
           ,DCD.SVC_MACH_MSTR_PK                       AS SVC_MACH_MSTR_PK
           ,SMM.SER_NUM                                AS SER_NUM
           ,SCM.MDL_ID                                 AS MDL_ID
           ,MN.T_MDL_NM                                AS T_MDL_NM
           ,DCBS.BLLG_SCHD_FROM_DT                     AS BLLG_SCHD_FROM_DT
           ,DCBS.NEXT_BLLG_DT                          AS BLLG_SCHD_THRU_DT
           ,DCBS.BLLG_CYCLE_CD                         AS BLLG_CYCLE_CD
           ,BC.BLLG_CYCLE_DESC_TXT                     AS BLLG_CYCLE_DESC_TXT
           ,BC.BLLG_CYCLE_MTH_AOT                      AS BLLG_CYCLE_MTH_AOT
           ,DCD.BASE_BLLG_TMG_CD                       AS BLLG_TMG_TP_CD
           ,BTP.BLLG_TMG_TP_DESC_TXT                   AS BLLG_TMG_TP_DESC_TXT
           ,NULL                                       AS BLLG_MTR_LB_CD
           ,NULL                                       AS MTR_LB_DESC_TXT
           ,NULL                                       AS BLLG_COPY_QTY
           ,NULL                                       AS XS_MTR_COPY_QTY_01
           ,NULL                                       AS XS_MTR_AMT_RATE_01
           ,NULL                                       AS XS_MTR_COPY_QTY_02
           ,NULL                                       AS XS_MTR_AMT_RATE_02
           ,NULL                                       AS XS_MTR_COPY_QTY_03
           ,NULL                                       AS XS_MTR_AMT_RATE_03
           ,NULL                                       AS XS_MTR_COPY_QTY_04
           ,NULL                                       AS XS_MTR_AMT_RATE_04
           ,DCS.DS_CONTR_CTRL_STS_CD                   AS DS_CONTR_CTRL_STS_CD
           ,DCS.DS_CONTR_CTRL_STS_NM                   AS DS_CONTR_CTRL_STS_NM
           ,DC.CONTR_VRSN_EFF_FROM_DT                  AS CONTR_VRSN_EFF_FROM_DT
           ,DC.CONTR_VRSN_EFF_THRU_DT                  AS CONTR_VRSN_EFF_THRU_DT
           ,DCBS.DS_CONTR_DTL_PK                       AS DS_CONTR_DTL_PK
           ,DCDS.DS_CONTR_CTRL_STS_CD                  AS DS_CONTR_CTRL_DTL_STS_CD
           ,DCDS.DS_CONTR_CTRL_STS_NM                  AS DS_CONTR_CTRL_DTL_STS_NM
           ,DCD.CONTR_EFF_FROM_DT                      AS CONTR_EFF_FROM_DT
           ,DCD.CONTR_EFF_THRU_DT                      AS CONTR_EFF_THRU_DT
           ,DCD.CONTR_CLO_DT                           AS CONTR_CLO_DT
           ,DC.DS_CONTR_CRAT_DT                        AS DS_CONTR_CRAT_DT
           ,DC.DS_CONTR_CRAT_PSN_CD                    AS DS_CONTR_CRAT_PSN_CD
           ,DC.DS_CONTR_LAST_UPD_DT                    AS DS_CONTR_LAST_UPD_DT
           ,DC.DS_CONTR_LAST_UPD_PSN_CD                AS DS_CONTR_LAST_UPD_PSN_CD
           ,CASE WHEN DCBS.NEXT_BLLG_DT &gt; #trgtDt# THEN #trgtDt#
                 ELSE DCBS.NEXT_BLLG_DT END            AS BLLG_REV_DT
           ,DAR.DFRD_REV_FLG                           AS DFRD_REV_FLG
           ,NVL(DAR.DFRD_ACCTG_RULE_DURN_AOT, 0)       AS DFRD_ACCTG_RULE_DURN_AOT
           ,DCBS.DS_BLLG_SCHD_STS_CD                   AS DS_BLLG_SCHD_STS_CD
           ,DCBS.DS_CONTR_BLLG_SCHD_PK                 AS DS_CONTR_BLLG_SCHD_PK
           ,NVL(DCBS.BASE_PRC_DEAL_AMT, 0)             AS BASE_PRC_DEAL_AMT
           ,0                                          AS MTR_CHRG_DEAL_AMT
           ,0                                          AS DS_INV_SLS_CR_PK
           ,0                                          AS DS_CONTR_BLLG_MTR_PK
           ,0                                          AS AFT_DECL_PNT_DIGIT_NUM
        FROM
            DS_CONTR_BLLG_SCHD                         DCBS
           ,BLLG_CYCLE                                 BC
           ,DS_CONTR_DTL                               DCD
           ,DS_CONTR_DTL_STS_V                         DCDS
           ,BLLG_TMG_TP                                BTP
           ,DS_CONTR                                   DC
           ,DS_CONTR_STS_V                             DCS
           ,DS_CONTR_DTL_TP                            DCDT
           ,DS_CONTR_CATG                              DCC
           ,SVC_CONFIG_MSTR                            SCM
           ,DS_MDL                                     DM
           ,MDL_NM                                     MN
           ,SVC_MACH_MSTR                              SMM
           ,MDSE                                       DMI
           ,DFRD_ACCTG_RULE                            DAR
        WHERE
            DCBS.GLBL_CMPY_CD                       = #glblCmpyCd#
        AND DCBS.DS_BLLG_SCHD_STS_CD                = #close#
        AND DCBS.NEXT_BLLG_DT                      &lt;= TO_CHAR(LAST_DAY(TO_DATE(#trgtDt#, 'YYYYMMDD')), 'YYYYMMDD')
        AND ((DCBS.DS_CONTR_DTL_TP_CD               = #fleet#
              AND DC.DS_CONTR_CATG_CD               = #flt#)
              OR  DCBS.DS_CONTR_DTL_TP_CD          != #agg#)
        AND DCBS.BASE_CHRG_FLG                      = 'Y'
        AND DCBS.GLBL_CMPY_CD                       = BC.GLBL_CMPY_CD
        AND DCBS.BLLG_CYCLE_CD                      = BC.BLLG_CYCLE_CD
        AND DCBS.GLBL_CMPY_CD                       = DCD.GLBL_CMPY_CD
        AND DCBS.DS_CONTR_DTL_PK                    = DCD.DS_CONTR_DTL_PK
        AND DCD.GLBL_CMPY_CD                        = DCDS.GLBL_CMPY_CD
        AND DCD.DS_CONTR_DTL_PK                     = DCDS.DS_CONTR_DTL_PK
        AND DCD.GLBL_CMPY_CD                        = BTP.GLBL_CMPY_CD
        AND DCD.BASE_BLLG_TMG_CD                    = BTP.BLLG_TMG_TP_CD
        AND DCD.GLBL_CMPY_CD                        = DC.GLBL_CMPY_CD
        AND DCD.DS_CONTR_PK                         = DC.DS_CONTR_PK
        AND DCD.GLBL_CMPY_CD                        = DCS.GLBL_CMPY_CD
        AND DCD.DS_CONTR_PK                         = DCS.DS_CONTR_PK
        AND DCD.GLBL_CMPY_CD                        = DCDT.GLBL_CMPY_CD
        AND DCD.DS_CONTR_DTL_TP_CD                  = DCDT.DS_CONTR_DTL_TP_CD
        AND DC.GLBL_CMPY_CD                         = DCC.GLBL_CMPY_CD
        AND DC.DS_CONTR_CATG_CD                     = DCC.DS_CONTR_CATG_CD
        AND DCD.GLBL_CMPY_CD                        = SCM.GLBL_CMPY_CD(+)
        AND DCD.SVC_CONFIG_MSTR_PK                  = SCM.SVC_CONFIG_MSTR_PK(+)
        AND SCM.GLBL_CMPY_CD                        = DM.GLBL_CMPY_CD(+)
        AND SCM.MDL_ID                              = DM.MDL_ID(+)
        AND SCM.GLBL_CMPY_CD                        = MN.T_GLBL_CMPY_CD(+)
        AND SCM.MDL_ID                              = MN.T_MDL_ID(+)
        AND DCD.GLBL_CMPY_CD                        = SMM.GLBL_CMPY_CD(+)
        AND DCD.SVC_MACH_MSTR_PK                    = SMM.SVC_MACH_MSTR_PK(+)
        AND DCD.GLBL_CMPY_CD                        = DMI.GLBL_CMPY_CD
        AND DCD.SVC_PGM_MDSE_CD                     = DMI.MDSE_CD
        AND DMI.GLBL_CMPY_CD                        = DAR.GLBL_CMPY_CD
        AND DMI.DFRD_ACCTG_RULE_CD                  = DAR.DFRD_ACCTG_RULE_CD
        AND EXISTS
           (SELECT 1 FROM SVC_INV INV, SVC_INV_LINE INV_L
            WHERE  INV_L.GLBL_CMPY_CD               = DCBS.GLBL_CMPY_CD
            AND    INV_L.DS_CONTR_BLLG_SCHD_PK      = DCBS.DS_CONTR_BLLG_SCHD_PK
            AND    INV_L.GLBL_CMPY_CD               = INV.GLBL_CMPY_CD
            AND    INV_L.SVC_INV_NUM                = INV.SVC_INV_NUM
            AND    SUBSTR(INV.INV_DT, 0, 6)         = SUBSTR(#trgtDt#, 0, 6)
            AND    INV_L.EZCANCELFLAG               = '0'
            AND    INV.EZCANCELFLAG                 = '0')
        AND DCBS.EZCANCELFLAG                       = '0'
        AND BC.EZCANCELFLAG                         = '0'
        AND DCD.EZCANCELFLAG                        = '0'
        AND DCDS.EZCANCELFLAG                       = '0'
        AND BTP.EZCANCELFLAG                        = '0'
        AND DC.EZCANCELFLAG                         = '0'
        AND DCS.EZCANCELFLAG                        = '0'
        AND DCDT.EZCANCELFLAG                       = '0'
        AND DCC.EZCANCELFLAG                        = '0'
        AND SCM.EZCANCELFLAG(+)                     = '0'
        AND DM.EZCANCELFLAG(+)                      = '0'
        AND MN.EZCANCELFLAG(+)                      = '0'
        AND SMM.EZCANCELFLAG(+)                     = '0'
        AND DMI.EZCANCELFLAG                        = '0'
        AND DAR.EZCANCELFLAG                        = '0'
        ---------------------------------------------------------
        -- Case Usage Actual and Pattern B (Billing)
        ---------------------------------------------------------
        UNION ALL
        SELECT
            #usgAct#                                   AS FACT_CATG_CD
           ,DMI.SVC_ALLOC_TP_CD                        AS SVC_ALLOC_TP_CD
           ,DCD.DS_CONTR_PK                            AS DS_CONTR_PK
           ,DC.DS_CONTR_NUM                            AS DS_CONTR_NUM
           ,DCD.DS_CONTR_DTL_TP_CD                     AS DS_CONTR_DTL_TP_CD
           ,DC.SVC_LINE_BIZ_CD                         AS SVC_LINE_BIZ_CD
           ,DC.SVC_CONTR_BR_CD                         AS SVC_CONTR_BR_CD
           ,DC.DS_CONTR_CATG_CD                        AS DS_CONTR_CATG_CD
           ,DCD.SVC_MACH_MSTR_PK                       AS SVC_MACH_MSTR_PK
           ,SMM.SER_NUM                                AS SER_NUM
           ,SCM.MDL_ID                                 AS MDL_ID
           ,MN.T_MDL_NM                                AS T_MDL_NM
           ,DCBS.BLLG_SCHD_FROM_DT                     AS BLLG_SCHD_FROM_DT
           ,DCBS.NEXT_BLLG_DT                          AS BLLG_SCHD_THRU_DT
           ,DCBS.BLLG_CYCLE_CD                         AS BLLG_CYCLE_CD
           ,BC.BLLG_CYCLE_DESC_TXT                     AS BLLG_CYCLE_DESC_TXT
           ,BC.BLLG_CYCLE_MTH_AOT                      AS BLLG_CYCLE_MTH_AOT
           ,DCD.MTR_BLLG_TMG_CD                        AS BLLG_TMG_TP_CD
           ,BTP.BLLG_TMG_TP_DESC_TXT                   AS BLLG_TMG_TP_DESC_TXT
           ,DCBM.BLLG_MTR_LB_CD                        AS BLLG_MTR_LB_CD
           ,ML.MTR_LB_DESC_TXT                         AS MTR_LB_DESC_TXT
           ,ROUND(SCB.BLLG_COPY_QTY, 0)                AS BLLG_COPY_QTY
           ,CON_MTR_RANK.XS_MTR_COPY_QTY_01            AS XS_MTR_COPY_QTY_01
           ,CON_MTR_RANK.XS_MTR_AMT_RATE_01            AS XS_MTR_AMT_RATE_01
           ,CON_MTR_RANK.XS_MTR_COPY_QTY_02            AS XS_MTR_COPY_QTY_02
           ,CON_MTR_RANK.XS_MTR_AMT_RATE_02            AS XS_MTR_AMT_RATE_02
           ,CON_MTR_RANK.XS_MTR_COPY_QTY_03            AS XS_MTR_COPY_QTY_03
           ,CON_MTR_RANK.XS_MTR_AMT_RATE_03            AS XS_MTR_AMT_RATE_03
           ,CON_MTR_RANK.XS_MTR_COPY_QTY_04            AS XS_MTR_COPY_QTY_04
           ,CON_MTR_RANK.XS_MTR_AMT_RATE_04            AS XS_MTR_AMT_RATE_04
           ,DCS.DS_CONTR_CTRL_STS_CD                   AS DS_CONTR_CTRL_STS_CD
           ,DCS.DS_CONTR_CTRL_STS_NM                   AS DS_CONTR_CTRL_STS_NM
           ,DC.CONTR_VRSN_EFF_FROM_DT                  AS CONTR_VRSN_EFF_FROM_DT
           ,DC.CONTR_VRSN_EFF_THRU_DT                  AS CONTR_VRSN_EFF_THRU_DT
           ,DCBS.DS_CONTR_DTL_PK                       AS DS_CONTR_DTL_PK
           ,DCDS.DS_CONTR_CTRL_STS_CD                  AS DS_CONTR_CTRL_DTL_STS_CD
           ,DCDS.DS_CONTR_CTRL_STS_NM                  AS DS_CONTR_CTRL_DTL_STS_NM
           ,DCD.CONTR_EFF_FROM_DT                      AS CONTR_EFF_FROM_DT
           ,DCD.CONTR_EFF_THRU_DT                      AS CONTR_EFF_THRU_DT
           ,DCD.CONTR_CLO_DT                           AS CONTR_CLO_DT
           ,DC.DS_CONTR_CRAT_DT                        AS DS_CONTR_CRAT_DT
           ,DC.DS_CONTR_CRAT_PSN_CD                    AS DS_CONTR_CRAT_PSN_CD
           ,DC.DS_CONTR_LAST_UPD_DT                    AS DS_CONTR_LAST_UPD_DT
           ,DC.DS_CONTR_LAST_UPD_PSN_CD                AS DS_CONTR_LAST_UPD_PSN_CD
           ,CASE WHEN DCBS.NEXT_BLLG_DT &gt; #trgtDt# THEN #trgtDt#
                 ELSE DCBS.NEXT_BLLG_DT END            AS BLLG_REV_DT
           ,NULL                                       AS DFRD_REV_FLG
           ,0                                          AS DFRD_ACCTG_RULE_DURN_AOT
           ,DCBS.DS_BLLG_SCHD_STS_CD                   AS DS_BLLG_SCHD_STS_CD
           ,DCBS.DS_CONTR_BLLG_SCHD_PK                 AS DS_CONTR_BLLG_SCHD_PK
           ,NVL(DCBS.BASE_PRC_DEAL_AMT, 0)             AS BASE_PRC_DEAL_AMT
           ,NVL(SCB.MTR_CHRG_DEAL_AMT, 0)              AS MTR_CHRG_DEAL_AMT
           ,0                                          AS DS_INV_SLS_CR_PK
           ,0                                          AS DS_CONTR_BLLG_MTR_PK
           ,0                                          AS AFT_DECL_PNT_DIGIT_NUM
        FROM
            DS_CONTR_BLLG_SCHD                         DCBS
           ,BLLG_CYCLE                                 BC
           ,DS_CONTR_BLLG_MTR                          DCBM
           ,MTR_LB                                     ML
           ,DS_CONTR_DTL                               DCD
           ,DS_CONTR_DTL_STS_V                         DCDS
           ,BLLG_TMG_TP                                BTP
           ,DS_CONTR_DTL_TP                            DCDT
           ,DS_CONTR                                   DC
           ,DS_CONTR_STS_V                             DCS
           ,DS_CONTR_CATG                              DCC
           ,SVC_CONFIG_MSTR                            SCM
           ,DS_MDL                                     DM
           ,MDL_NM                                     MN
           ,SVC_MACH_MSTR                              SMM
           ,MDSE                                       DMI
           ,(
            SELECT
                SCB.DS_CONTR_BLLG_SCHD_PK
               ,MB.DS_CONTR_DTL_PK
               ,MB.BLLG_COPY_QTY
               ,MB.MTR_CHRG_DEAL_AMT
            FROM
                SVC_CONTR_MTR_BLLG   MB
               ,SVC_CONTR_BLLG      SCB
            WHERE
                SCB.GLBL_CMPY_CD            = #glblCmpyCd#
            AND SCB.GLBL_CMPY_CD            = MB.GLBL_CMPY_CD
            AND SCB.SVC_CONTR_BLLG_PK       = MB.SVC_CONTR_BLLG_PK
            AND SCB.EZCANCELFLAG            = '0'
            AND MB.EZCANCELFLAG             = '0'
            ) SCB
           ,(
            -- SELECT TOP 4 XS_MTR_COPY_QTY AND RATE RANKING DATA BY SVC_CONTR_XS_MTR_BLLG
            SELECT
                -- CONVERT DATA ROW TO COLUMN (PIVOT CONVERT)
                CONV.DS_CONTR_BLLG_SCHD_PK
               ,MAX(CONV.QTY_1) AS XS_MTR_COPY_QTY_01
               ,MAX(CONV.QTY_2) AS XS_MTR_COPY_QTY_02
               ,MAX(CONV.QTY_3) AS XS_MTR_COPY_QTY_03
               ,MAX(CONV.QTY_4) AS XS_MTR_COPY_QTY_04
               ,MAX(CONV.RATE_1) AS XS_MTR_AMT_RATE_01
               ,MAX(CONV.RATE_2) AS XS_MTR_AMT_RATE_02
               ,MAX(CONV.RATE_3) AS XS_MTR_AMT_RATE_03
               ,MAX(CONV.RATE_4) AS XS_MTR_AMT_RATE_04
            FROM
                (
                -- FOR READY TO CONVERT DATA ROW TO COLUMN
                SELECT
                    TOP4.DS_CONTR_BLLG_SCHD_PK
                   ,DECODE(TOP4.RANKING, 1, TOP4.XS_MTR_COPY_QTY, NULL) AS QTY_1
                   ,DECODE(TOP4.RANKING, 2, TOP4.XS_MTR_COPY_QTY, NULL) AS QTY_2
                   ,DECODE(TOP4.RANKING, 3, TOP4.XS_MTR_COPY_QTY, NULL) AS QTY_3
                   ,DECODE(TOP4.RANKING, 4, TOP4.XS_MTR_COPY_QTY, NULL) AS QTY_4
                   ,DECODE(TOP4.RANKING, 1, TOP4.XS_MTR_AMT_RATE, NULL) AS RATE_1
                   ,DECODE(TOP4.RANKING, 2, TOP4.XS_MTR_AMT_RATE, NULL) AS RATE_2
                   ,DECODE(TOP4.RANKING, 3, TOP4.XS_MTR_AMT_RATE, NULL) AS RATE_3
                   ,DECODE(TOP4.RANKING, 4, TOP4.XS_MTR_AMT_RATE, NULL) AS RATE_4
                FROM
                    (
                    -- SELECTING TOP 4 RANKING
                    SELECT
                        RANK_ALL.DS_CONTR_BLLG_SCHD_PK
                       ,RANK_ALL.XS_MTR_COPY_QTY
                       ,RANK_ALL.XS_MTR_AMT_RATE
                       ,RANK_ALL.RANKING
                    FROM
                        (
                        SELECT
                            SCB.DS_CONTR_BLLG_SCHD_PK
                           ,XMB.XS_MTR_COPY_QTY
                           ,XMB.XS_MTR_AMT_RATE
                           ,ROW_NUMBER() OVER (PARTITION BY SCB.DS_CONTR_BLLG_SCHD_PK ORDER BY XMB.XS_MTR_COPY_QTY) RANKING
                        FROM
                            SVC_CONTR_BLLG        SCB
                           ,SVC_CONTR_XS_MTR_BLLG XMB
                        WHERE
                            SCB.GLBL_CMPY_CD      = #glblCmpyCd#
                        AND SCB.GLBL_CMPY_CD      = XMB.GLBL_CMPY_CD
                        AND SCB.SVC_CONTR_BLLG_PK = XMB.SVC_CONTR_BLLG_PK
                        AND SCB.EZCANCELFLAG      = '0'
                        AND XMB.EZCANCELFLAG      = '0'
                        ) RANK_ALL
                    WHERE RANK_ALL.RANKING BETWEEN 1 AND 4
                    ) TOP4
                ) CONV
            GROUP BY CONV.DS_CONTR_BLLG_SCHD_PK
            ) CON_MTR_RANK
        WHERE
            DCBS.GLBL_CMPY_CD                       = #glblCmpyCd#
        AND DCBS.DS_BLLG_SCHD_STS_CD                = #billed#
        AND DCBS.NEXT_BLLG_DT                      &lt;= TO_CHAR(LAST_DAY(TO_DATE(#trgtDt#, 'YYYYMMDD')), 'YYYYMMDD')
        AND ((DCBS.DS_CONTR_DTL_TP_CD               = #fleet#
              AND DC.DS_CONTR_CATG_CD               = #flt#)
              OR  DCBS.DS_CONTR_DTL_TP_CD          != #agg#)
        AND DCBS.USG_CHRG_FLG                       = 'Y'
        AND DCBS.GLBL_CMPY_CD                       = BC.GLBL_CMPY_CD
        AND DCBS.BLLG_CYCLE_CD                      = BC.BLLG_CYCLE_CD
        AND DCBS.GLBL_CMPY_CD                       = DCBM.GLBL_CMPY_CD
        AND DCBS.DS_CONTR_BLLG_MTR_PK               = DCBM.DS_CONTR_BLLG_MTR_PK
        AND DCBM.GLBL_CMPY_CD                       = ML.GLBL_CMPY_CD
        AND DCBM.BLLG_MTR_LB_CD                     = ML.MTR_LB_CD
        AND DCBS.GLBL_CMPY_CD                       = DCD.GLBL_CMPY_CD
        AND DCBS.DS_CONTR_DTL_PK                    = DCD.DS_CONTR_DTL_PK
        AND DCD.GLBL_CMPY_CD                        = DCDS.GLBL_CMPY_CD
        AND DCD.DS_CONTR_DTL_PK                     = DCDS.DS_CONTR_DTL_PK
        AND DCD.GLBL_CMPY_CD                        = BTP.GLBL_CMPY_CD
        AND DCD.MTR_BLLG_TMG_CD                     = BTP.BLLG_TMG_TP_CD
        AND DCD.GLBL_CMPY_CD                        = DCDT.GLBL_CMPY_CD
        AND DCD.DS_CONTR_DTL_TP_CD                  = DCDT.DS_CONTR_DTL_TP_CD
        AND DCD.GLBL_CMPY_CD                        = DC.GLBL_CMPY_CD
        AND DCD.DS_CONTR_PK                         = DC.DS_CONTR_PK
        AND DCD.GLBL_CMPY_CD                        = DCS.GLBL_CMPY_CD
        AND DCD.DS_CONTR_PK                         = DCS.DS_CONTR_PK
        AND DC.GLBL_CMPY_CD                         = DCC.GLBL_CMPY_CD
        AND DC.DS_CONTR_CATG_CD                     = DCC.DS_CONTR_CATG_CD
        AND DCD.GLBL_CMPY_CD                        = SCM.GLBL_CMPY_CD(+)
        AND DCD.SVC_CONFIG_MSTR_PK                  = SCM.SVC_CONFIG_MSTR_PK(+)
        AND SCM.GLBL_CMPY_CD                        = DM.GLBL_CMPY_CD(+)
        AND SCM.MDL_ID                              = DM.MDL_ID(+)
        AND SCM.GLBL_CMPY_CD                        = MN.T_GLBL_CMPY_CD(+)
        AND SCM.MDL_ID                              = MN.T_MDL_ID(+)
        AND DCD.GLBL_CMPY_CD                        = SMM.GLBL_CMPY_CD(+)
        AND DCD.SVC_MACH_MSTR_PK                    = SMM.SVC_MACH_MSTR_PK(+)
        AND DCD.GLBL_CMPY_CD                        = DMI.GLBL_CMPY_CD
        AND DCD.SVC_PGM_MDSE_CD                     = DMI.MDSE_CD
        AND DCBS.DS_CONTR_BLLG_SCHD_PK              = SCB.DS_CONTR_BLLG_SCHD_PK
        AND DCBS.DS_CONTR_DTL_PK                    = SCB.DS_CONTR_DTL_PK
        AND DCBS.DS_CONTR_BLLG_SCHD_PK              = CON_MTR_RANK.DS_CONTR_BLLG_SCHD_PK
        AND DCBS.EZCANCELFLAG                       = '0'
        AND BC.EZCANCELFLAG                         = '0'
        AND DCBM.EZCANCELFLAG                       = '0'
        AND ML.EZCANCELFLAG                         = '0'
        AND DCD.EZCANCELFLAG                        = '0'
        AND DCDS.EZCANCELFLAG                       = '0'
        AND BTP.EZCANCELFLAG                        = '0'
        AND DCDT.EZCANCELFLAG                       = '0'
        AND DC.EZCANCELFLAG                         = '0'
        AND DCS.EZCANCELFLAG                        = '0'
        AND DCC.EZCANCELFLAG                        = '0'
        AND SCM.EZCANCELFLAG(+)                     = '0'
        AND DM.EZCANCELFLAG(+)                      = '0'
        AND MN.EZCANCELFLAG(+)                      = '0'
        AND SMM.EZCANCELFLAG(+)                     = '0'
        AND DMI.EZCANCELFLAG                        = '0'
        ---------------------------------------------------
        -- CASE Usage Actual and Pattern C (Exist Invoice)
        ---------------------------------------------------
        UNION ALL
        SELECT
            #usgAct#                                   AS FACT_CATG_CD
           ,DMI.SVC_ALLOC_TP_CD                        AS SVC_ALLOC_TP_CD
           ,DCD.DS_CONTR_PK                            AS DS_CONTR_PK
           ,DC.DS_CONTR_NUM                            AS DS_CONTR_NUM
           ,DCD.DS_CONTR_DTL_TP_CD                     AS DS_CONTR_DTL_TP_CD
           ,DC.SVC_LINE_BIZ_CD                         AS SVC_LINE_BIZ_CD
           ,DC.SVC_CONTR_BR_CD                         AS SVC_CONTR_BR_CD
           ,DC.DS_CONTR_CATG_CD                        AS DS_CONTR_CATG_CD
           ,DCD.SVC_MACH_MSTR_PK                       AS SVC_MACH_MSTR_PK
           ,SMM.SER_NUM                                AS SER_NUM
           ,SCM.MDL_ID                                 AS MDL_ID
           ,MN.T_MDL_NM                                AS T_MDL_NM
           ,DCBS.BLLG_SCHD_FROM_DT                     AS BLLG_SCHD_FROM_DT
           ,DCBS.NEXT_BLLG_DT                          AS BLLG_SCHD_THRU_DT
           ,DCBS.BLLG_CYCLE_CD                         AS BLLG_CYCLE_CD
           ,BC.BLLG_CYCLE_DESC_TXT                     AS BLLG_CYCLE_DESC_TXT
           ,BC.BLLG_CYCLE_MTH_AOT                      AS BLLG_CYCLE_MTH_AOT
           ,DCD.MTR_BLLG_TMG_CD                        AS BLLG_TMG_TP_CD
           ,BTP.BLLG_TMG_TP_DESC_TXT                   AS BLLG_TMG_TP_DESC_TXT
           ,DCBM.BLLG_MTR_LB_CD                        AS BLLG_MTR_LB_CD
           ,ML.MTR_LB_DESC_TXT                         AS MTR_LB_DESC_TXT
           ,ROUND(SIL.BLLG_COPY_QTY, 0)                AS BLLG_COPY_QTY
           ,INV_MTR_RANK.XS_MTR_COPY_QTY_01            AS XS_MTR_COPY_QTY_01
           ,INV_MTR_RANK.XS_MTR_AMT_RATE_01            AS XS_MTR_AMT_RATE_01
           ,INV_MTR_RANK.XS_MTR_COPY_QTY_02            AS XS_MTR_COPY_QTY_02
           ,INV_MTR_RANK.XS_MTR_AMT_RATE_02            AS XS_MTR_AMT_RATE_02
           ,INV_MTR_RANK.XS_MTR_COPY_QTY_03            AS XS_MTR_COPY_QTY_03
           ,INV_MTR_RANK.XS_MTR_AMT_RATE_03            AS XS_MTR_AMT_RATE_03
           ,INV_MTR_RANK.XS_MTR_COPY_QTY_04            AS XS_MTR_COPY_QTY_04
           ,INV_MTR_RANK.XS_MTR_AMT_RATE_04            AS XS_MTR_AMT_RATE_04
           ,DCS.DS_CONTR_CTRL_STS_CD                   AS DS_CONTR_CTRL_STS_CD
           ,DCS.DS_CONTR_CTRL_STS_NM                   AS DS_CONTR_CTRL_STS_NM
           ,DC.CONTR_VRSN_EFF_FROM_DT                  AS CONTR_VRSN_EFF_FROM_DT
           ,DC.CONTR_VRSN_EFF_THRU_DT                  AS CONTR_VRSN_EFF_THRU_DT
           ,DCBS.DS_CONTR_DTL_PK                       AS DS_CONTR_DTL_PK
           ,DCDS.DS_CONTR_CTRL_STS_CD                  AS DS_CONTR_CTRL_DTL_STS_CD
           ,DCDS.DS_CONTR_CTRL_STS_NM                  AS DS_CONTR_CTRL_DTL_STS_NM
           ,DCD.CONTR_EFF_FROM_DT                      AS CONTR_EFF_FROM_DT
           ,DCD.CONTR_EFF_THRU_DT                      AS CONTR_EFF_THRU_DT
           ,DCD.CONTR_CLO_DT                           AS CONTR_CLO_DT
           ,DC.DS_CONTR_CRAT_DT                        AS DS_CONTR_CRAT_DT
           ,DC.DS_CONTR_CRAT_PSN_CD                    AS DS_CONTR_CRAT_PSN_CD
           ,DC.DS_CONTR_LAST_UPD_DT                    AS DS_CONTR_LAST_UPD_DT
           ,DC.DS_CONTR_LAST_UPD_PSN_CD                AS DS_CONTR_LAST_UPD_PSN_CD
           ,CASE WHEN DCBS.NEXT_BLLG_DT &gt; #trgtDt# THEN #trgtDt#
                 ELSE DCBS.NEXT_BLLG_DT END            AS BLLG_REV_DT
           ,NULL                                       AS DFRD_REV_FLG
           ,0                                          AS DFRD_ACCTG_RULE_DURN_AOT
           ,DCBS.DS_BLLG_SCHD_STS_CD                   AS DS_BLLG_SCHD_STS_CD
           ,DCBS.DS_CONTR_BLLG_SCHD_PK                 AS DS_CONTR_BLLG_SCHD_PK
           ,NVL(DCBS.BASE_PRC_DEAL_AMT, 0)             AS BASE_PRC_DEAL_AMT
           ,0                                          AS MTR_CHRG_DEAL_AMT
           ,0                                          AS DS_INV_SLS_CR_PK
           ,0                                          AS DS_CONTR_BLLG_MTR_PK
           ,0                                          AS AFT_DECL_PNT_DIGIT_NUM
        FROM
            DS_CONTR_BLLG_SCHD                         DCBS
           ,BLLG_CYCLE                                 BC
           ,DS_CONTR_BLLG_MTR                          DCBM
           ,MTR_LB                                     ML
           ,DS_CONTR_DTL                               DCD
           ,DS_CONTR_DTL_STS_V                         DCDS
           ,BLLG_TMG_TP                                BTP
           ,DS_CONTR_DTL_TP                            DCDT
           ,DS_CONTR                                   DC
           ,DS_CONTR_STS_V                             DCS
           ,DS_CONTR_CATG                              DCC
           ,SVC_CONFIG_MSTR                            SCM
           ,DS_MDL                                     DM
           ,MDL_NM                                     MN
           ,SVC_MACH_MSTR                              SMM
           ,MDSE                                       DMI
           ,(
            SELECT DISTINCT
                SIL.DS_CONTR_BLLG_SCHD_PK
               ,LM.BLLG_COPY_QTY
            FROM
                SVC_INV_LINE       SIL
               ,SVC_INV_LINE_MTR   LM
            WHERE
                SIL.GLBL_CMPY_CD            = #glblCmpyCd#
            AND SIL.GLBL_CMPY_CD            = LM.GLBL_CMPY_CD
            AND SIL.SVC_INV_LINE_PK         = LM.SVC_INV_LINE_PK
            AND SIL.EZCANCELFLAG            = '0'
            AND LM.EZCANCELFLAG             = '0'
            ) SIL
           ,(
            -- SELECT TOP 4 XS_MTR_COPY_QTY AND RATE RANKING DATA BY SVC_INV_LINE_XS_MTR
            SELECT
                -- CONVERT DATA ROW TO COLUMN (PIVOT CONVERT)
                CONV.DS_CONTR_BLLG_SCHD_PK
               ,MAX(CONV.QTY_1) AS XS_MTR_COPY_QTY_01
               ,MAX(CONV.QTY_2) AS XS_MTR_COPY_QTY_02
               ,MAX(CONV.QTY_3) AS XS_MTR_COPY_QTY_03
               ,MAX(CONV.QTY_4) AS XS_MTR_COPY_QTY_04
               ,MAX(CONV.RATE_1) AS XS_MTR_AMT_RATE_01
               ,MAX(CONV.RATE_2) AS XS_MTR_AMT_RATE_02
               ,MAX(CONV.RATE_3) AS XS_MTR_AMT_RATE_03
               ,MAX(CONV.RATE_4) AS XS_MTR_AMT_RATE_04
            FROM
                (
                -- FOR READY TO CONVERT DATA ROW TO COLUMN
                SELECT
                    TOP4.DS_CONTR_BLLG_SCHD_PK
                   ,DECODE(TOP4.RANKING, 1, TOP4.XS_MTR_COPY_QTY, NULL) AS QTY_1
                   ,DECODE(TOP4.RANKING, 2, TOP4.XS_MTR_COPY_QTY, NULL) AS QTY_2
                   ,DECODE(TOP4.RANKING, 3, TOP4.XS_MTR_COPY_QTY, NULL) AS QTY_3
                   ,DECODE(TOP4.RANKING, 4, TOP4.XS_MTR_COPY_QTY, NULL) AS QTY_4
                   ,DECODE(TOP4.RANKING, 1, TOP4.XS_MTR_AMT_RATE, NULL) AS RATE_1
                   ,DECODE(TOP4.RANKING, 2, TOP4.XS_MTR_AMT_RATE, NULL) AS RATE_2
                   ,DECODE(TOP4.RANKING, 3, TOP4.XS_MTR_AMT_RATE, NULL) AS RATE_3
                   ,DECODE(TOP4.RANKING, 4, TOP4.XS_MTR_AMT_RATE, NULL) AS RATE_4
                FROM
                    (
                    -- SELECTING TOP 4 RANKING
                    SELECT
                        RANK_ALL.DS_CONTR_BLLG_SCHD_PK
                       ,RANK_ALL.XS_MTR_COPY_QTY
                       ,RANK_ALL.XS_MTR_AMT_RATE
                       ,RANK_ALL.RANKING
                    FROM
                        (
                        SELECT
                            SIL.DS_CONTR_BLLG_SCHD_PK
                           ,LXM.XS_MTR_COPY_QTY
                           ,LXM.XS_MTR_AMT_RATE
                           ,ROW_NUMBER() OVER (PARTITION BY SIL.DS_CONTR_BLLG_SCHD_PK ORDER BY LXM.XS_MTR_COPY_QTY) RANKING
                        FROM
                            SVC_INV_LINE        SIL
                           ,SVC_INV_LINE_XS_MTR LXM
                        WHERE
                            SIL.GLBL_CMPY_CD      = #glblCmpyCd#
                        AND SIL.GLBL_CMPY_CD      = LXM.GLBL_CMPY_CD
                        AND SIL.SVC_INV_LINE_PK   = LXM.SVC_INV_LINE_PK
                        AND SIL.EZCANCELFLAG      = '0'
                        AND LXM.EZCANCELFLAG      = '0'
                        ) RANK_ALL
                    WHERE RANK_ALL.RANKING BETWEEN 1 AND 4
                    ) TOP4
                ) CONV
            GROUP BY CONV.DS_CONTR_BLLG_SCHD_PK
            ) INV_MTR_RANK
        WHERE
            DCBS.GLBL_CMPY_CD                       = #glblCmpyCd#
        AND DCBS.DS_BLLG_SCHD_STS_CD                = #close#
        AND DCBS.NEXT_BLLG_DT                      &lt;= TO_CHAR(LAST_DAY(TO_DATE(#trgtDt#, 'YYYYMMDD')), 'YYYYMMDD')
        AND ((DCBS.DS_CONTR_DTL_TP_CD               = #fleet#
              AND DC.DS_CONTR_CATG_CD               = #flt#)
              OR  DCBS.DS_CONTR_DTL_TP_CD          != #agg#)
        AND DCBS.USG_CHRG_FLG                       = 'Y'
        AND DCBS.GLBL_CMPY_CD                       = BC.GLBL_CMPY_CD
        AND DCBS.BLLG_CYCLE_CD                      = BC.BLLG_CYCLE_CD
        AND DCBS.GLBL_CMPY_CD                       = DCBM.GLBL_CMPY_CD
        AND DCBS.DS_CONTR_BLLG_MTR_PK               = DCBM.DS_CONTR_BLLG_MTR_PK
        AND DCBM.GLBL_CMPY_CD                       = ML.GLBL_CMPY_CD
        AND DCBM.BLLG_MTR_LB_CD                     = ML.MTR_LB_CD
        AND DCBS.GLBL_CMPY_CD                       = DCD.GLBL_CMPY_CD
        AND DCBS.DS_CONTR_DTL_PK                    = DCD.DS_CONTR_DTL_PK
        AND DCD.GLBL_CMPY_CD                        = DCDS.GLBL_CMPY_CD
        AND DCD.DS_CONTR_DTL_PK                     = DCDS.DS_CONTR_DTL_PK
        AND DCD.GLBL_CMPY_CD                        = BTP.GLBL_CMPY_CD
        AND DCD.MTR_BLLG_TMG_CD                     = BTP.BLLG_TMG_TP_CD
        AND DCD.GLBL_CMPY_CD                        = DCDT.GLBL_CMPY_CD
        AND DCD.DS_CONTR_DTL_TP_CD                  = DCDT.DS_CONTR_DTL_TP_CD
        AND DCD.GLBL_CMPY_CD                        = DC.GLBL_CMPY_CD
        AND DCD.DS_CONTR_PK                         = DC.DS_CONTR_PK
        AND DCD.GLBL_CMPY_CD                        = DCS.GLBL_CMPY_CD
        AND DCD.DS_CONTR_PK                         = DCS.DS_CONTR_PK
        AND DC.GLBL_CMPY_CD                         = DCC.GLBL_CMPY_CD
        AND DC.DS_CONTR_CATG_CD                     = DCC.DS_CONTR_CATG_CD
        AND DCD.GLBL_CMPY_CD                        = SCM.GLBL_CMPY_CD(+)
        AND DCD.SVC_CONFIG_MSTR_PK                  = SCM.SVC_CONFIG_MSTR_PK(+)
        AND SCM.GLBL_CMPY_CD                        = DM.GLBL_CMPY_CD(+)
        AND SCM.MDL_ID                              = DM.MDL_ID(+)
        AND SCM.GLBL_CMPY_CD                        = MN.T_GLBL_CMPY_CD(+)
        AND SCM.MDL_ID                              = MN.T_MDL_ID(+)
        AND DCD.GLBL_CMPY_CD                        = SMM.GLBL_CMPY_CD(+)
        AND DCD.SVC_MACH_MSTR_PK                    = SMM.SVC_MACH_MSTR_PK(+)
        AND DCD.GLBL_CMPY_CD                        = DMI.GLBL_CMPY_CD
        AND DCD.SVC_PGM_MDSE_CD                     = DMI.MDSE_CD
        AND DCBS.DS_CONTR_BLLG_SCHD_PK              = SIL.DS_CONTR_BLLG_SCHD_PK
        AND DCBS.DS_CONTR_BLLG_SCHD_PK              = INV_MTR_RANK.DS_CONTR_BLLG_SCHD_PK
        AND EXISTS
           (SELECT 1 FROM SVC_INV INV, SVC_INV_LINE INV_L
            WHERE  INV_L.GLBL_CMPY_CD               = DCBS.GLBL_CMPY_CD
            AND    INV_L.DS_CONTR_BLLG_SCHD_PK      = DCBS.DS_CONTR_BLLG_SCHD_PK
            AND    INV_L.GLBL_CMPY_CD               = INV.GLBL_CMPY_CD
            AND    INV_L.SVC_INV_NUM                = INV.SVC_INV_NUM
            AND    SUBSTR(INV.INV_DT, 0, 6)         = SUBSTR(#trgtDt#, 0, 6)
            AND    INV_L.EZCANCELFLAG               = '0'
            AND    INV.EZCANCELFLAG                 = '0')
        AND DCBS.EZCANCELFLAG                       = '0'
        AND BC.EZCANCELFLAG                         = '0'
        AND DCBM.EZCANCELFLAG                       = '0'
        AND ML.EZCANCELFLAG                         = '0'
        AND DCD.EZCANCELFLAG                        = '0'
        AND DCDS.EZCANCELFLAG                       = '0'
        AND BTP.EZCANCELFLAG                        = '0'
        AND DCDT.EZCANCELFLAG                       = '0'
        AND DC.EZCANCELFLAG                         = '0'
        AND DCS.EZCANCELFLAG                        = '0'
        AND DCC.EZCANCELFLAG                        = '0'
        AND SCM.EZCANCELFLAG(+)                     = '0'
        AND DM.EZCANCELFLAG(+)                      = '0'
        AND MN.EZCANCELFLAG(+)                      = '0'
        AND SMM.EZCANCELFLAG(+)                     = '0'
        AND DMI.EZCANCELFLAG                        = '0'
        ---------------------------------------------------------
        -- Case Usage Estimate and Pattern A (Not Billing)
        ---------------------------------------------------------
        UNION ALL
        SELECT
            #usgEst#                                   AS FACT_CATG_CD
           ,DMI.SVC_ALLOC_TP_CD                        AS SVC_ALLOC_TP_CD
           ,DCD.DS_CONTR_PK                            AS DS_CONTR_PK
           ,DC.DS_CONTR_NUM                            AS DS_CONTR_NUM
           ,DCD.DS_CONTR_DTL_TP_CD                     AS DS_CONTR_DTL_TP_CD
           ,DC.SVC_LINE_BIZ_CD                         AS SVC_LINE_BIZ_CD
           ,DC.SVC_CONTR_BR_CD                         AS SVC_CONTR_BR_CD
           ,DC.DS_CONTR_CATG_CD                        AS DS_CONTR_CATG_CD
           ,DCD.SVC_MACH_MSTR_PK                       AS SVC_MACH_MSTR_PK
           ,SMM.SER_NUM                                AS SER_NUM
           ,SCM.MDL_ID                                 AS MDL_ID
           ,MN.T_MDL_NM                                AS T_MDL_NM
           ,DCBS.BLLG_SCHD_FROM_DT                     AS BLLG_SCHD_FROM_DT
           ,DCBS.BLLG_SCHD_THRU_DT                     AS BLLG_SCHD_THRU_DT
           ,DCBS.BLLG_CYCLE_CD                         AS BLLG_CYCLE_CD
           ,BC.BLLG_CYCLE_DESC_TXT                     AS BLLG_CYCLE_DESC_TXT
           ,BC.BLLG_CYCLE_MTH_AOT                      AS BLLG_CYCLE_MTH_AOT
           ,DCD.MTR_BLLG_TMG_CD                        AS BLLG_TMG_TP_CD
           ,BTP.BLLG_TMG_TP_DESC_TXT                   AS BLLG_TMG_TP_DESC_TXT
           ,DCBM.BLLG_MTR_LB_CD                        AS BLLG_MTR_LB_CD
           ,ML.MTR_LB_DESC_TXT                         AS MTR_LB_DESC_TXT
           ,ROUND(LM.BLLG_COPY_QTY, 0)                 AS BLLG_COPY_QTY
           ,CON_MTR_RANK.XS_MTR_COPY_QTY_01            AS XS_MTR_COPY_QTY_01
           ,CON_MTR_RANK.XS_MTR_AMT_RATE_01            AS XS_MTR_AMT_RATE_01
           ,CON_MTR_RANK.XS_MTR_COPY_QTY_02            AS XS_MTR_COPY_QTY_02
           ,CON_MTR_RANK.XS_MTR_AMT_RATE_02            AS XS_MTR_AMT_RATE_02
           ,CON_MTR_RANK.XS_MTR_COPY_QTY_03            AS XS_MTR_COPY_QTY_03
           ,CON_MTR_RANK.XS_MTR_AMT_RATE_03            AS XS_MTR_AMT_RATE_03
           ,CON_MTR_RANK.XS_MTR_COPY_QTY_04            AS XS_MTR_COPY_QTY_04
           ,CON_MTR_RANK.XS_MTR_AMT_RATE_04            AS XS_MTR_AMT_RATE_04
           ,DCS.DS_CONTR_CTRL_STS_CD                   AS DS_CONTR_CTRL_STS_CD
           ,DCS.DS_CONTR_CTRL_STS_NM                   AS DS_CONTR_CTRL_STS_NM
           ,DC.CONTR_VRSN_EFF_FROM_DT                  AS CONTR_VRSN_EFF_FROM_DT
           ,DC.CONTR_VRSN_EFF_THRU_DT                  AS CONTR_VRSN_EFF_THRU_DT
           ,DCBS.DS_CONTR_DTL_PK                       AS DS_CONTR_DTL_PK
           ,DCDS.DS_CONTR_CTRL_STS_CD                  AS DS_CONTR_CTRL_DTL_STS_CD
           ,DCDS.DS_CONTR_CTRL_STS_NM                  AS DS_CONTR_CTRL_DTL_STS_NM
           ,DCD.CONTR_EFF_FROM_DT                      AS CONTR_EFF_FROM_DT
           ,DCD.CONTR_EFF_THRU_DT                      AS CONTR_EFF_THRU_DT
           ,DCD.CONTR_CLO_DT                           AS CONTR_CLO_DT
           ,DC.DS_CONTR_CRAT_DT                        AS DS_CONTR_CRAT_DT
           ,DC.DS_CONTR_CRAT_PSN_CD                    AS DS_CONTR_CRAT_PSN_CD
           ,DC.DS_CONTR_LAST_UPD_DT                    AS DS_CONTR_LAST_UPD_DT
           ,DC.DS_CONTR_LAST_UPD_PSN_CD                AS DS_CONTR_LAST_UPD_PSN_CD
           ,CASE WHEN DCBS.NEXT_BLLG_DT &gt; #trgtDt# THEN #trgtDt#
                 ELSE DCBS.NEXT_BLLG_DT END            AS BLLG_REV_DT
           ,NULL                                       AS DFRD_REV_FLG
           ,0                                          AS DFRD_ACCTG_RULE_DURN_AOT
           ,DCBS.DS_BLLG_SCHD_STS_CD                   AS DS_BLLG_SCHD_STS_CD
           ,DCBS.DS_CONTR_BLLG_SCHD_PK                 AS DS_CONTR_BLLG_SCHD_PK
           ,NVL(DCBS.BASE_PRC_DEAL_AMT, 0)             AS BASE_PRC_DEAL_AMT
           ,0                                          AS MTR_CHRG_DEAL_AMT
           ,0                                          AS DS_INV_SLS_CR_PK
           ,DCBM.DS_CONTR_BLLG_MTR_PK                  AS DS_CONTR_BLLG_MTR_PK
           ,CCY.AFT_DECL_PNT_DIGIT_NUM                 AS AFT_DECL_PNT_DIGIT_NUM
        FROM
            DS_CONTR_BLLG_SCHD                         DCBS
           ,BLLG_CYCLE                                 BC
           ,DS_CONTR_BLLG_MTR                          DCBM
           ,MTR_LB                                     ML
           ,DS_CONTR_DTL                               DCD
           ,DS_CONTR_DTL_STS_V                         DCDS
           ,BLLG_TMG_TP                                BTP
           ,DS_CONTR_DTL_TP                            DCDT
           ,DS_CONTR                                   DC
           ,DS_CONTR_STS_V                             DCS
           ,DS_CONTR_CATG                              DCC
           ,CCY                                        CCY
           ,SVC_CONFIG_MSTR                            SCM
           ,DS_MDL                                     DM
           ,MDL_NM                                     MN
           ,SVC_MACH_MSTR                              SMM
           ,MDSE                                       DMI
           ,(
            SELECT LM.DS_CONTR_BLLG_MTR_PK, AVG(LM.BLLG_COPY_QTY) AS BLLG_COPY_QTY
            FROM   SVC_INV_LINE_MTR LM
            WHERE  LM.GLBL_CMPY_CD = #glblCmpyCd#
            AND    LM.EZCANCELFLAG = '0'
            GROUP  BY LM.DS_CONTR_BLLG_MTR_PK
            ) LM
           ,(
            -- SELECT TOP 4 XS_MTR_COPY_QTY AND RATE RANKING DATA BY SVC_CONTR_XS_MTR_BLLG
            SELECT
                -- CONVERT DATA ROW TO COLUMN (PIVOT CONVERT)
                CONV.DS_CONTR_BLLG_SCHD_SMRY_PK
               ,MAX(CONV.QTY_1) AS XS_MTR_COPY_QTY_01
               ,MAX(CONV.QTY_2) AS XS_MTR_COPY_QTY_02
               ,MAX(CONV.QTY_3) AS XS_MTR_COPY_QTY_03
               ,MAX(CONV.QTY_4) AS XS_MTR_COPY_QTY_04
               ,MAX(CONV.RATE_1) AS XS_MTR_AMT_RATE_01
               ,MAX(CONV.RATE_2) AS XS_MTR_AMT_RATE_02
               ,MAX(CONV.RATE_3) AS XS_MTR_AMT_RATE_03
               ,MAX(CONV.RATE_4) AS XS_MTR_AMT_RATE_04
            FROM
                (
                -- FOR READY TO CONVERT DATA ROW TO COLUMN
                SELECT
                    TOP4.DS_CONTR_BLLG_SCHD_SMRY_PK
                   ,DECODE(TOP4.RANKING, 1, TOP4.XS_MTR_COPY_QTY, NULL) AS QTY_1
                   ,DECODE(TOP4.RANKING, 2, TOP4.XS_MTR_COPY_QTY, NULL) AS QTY_2
                   ,DECODE(TOP4.RANKING, 3, TOP4.XS_MTR_COPY_QTY, NULL) AS QTY_3
                   ,DECODE(TOP4.RANKING, 4, TOP4.XS_MTR_COPY_QTY, NULL) AS QTY_4
                   ,DECODE(TOP4.RANKING, 1, TOP4.XS_MTR_AMT_RATE, NULL) AS RATE_1
                   ,DECODE(TOP4.RANKING, 2, TOP4.XS_MTR_AMT_RATE, NULL) AS RATE_2
                   ,DECODE(TOP4.RANKING, 3, TOP4.XS_MTR_AMT_RATE, NULL) AS RATE_3
                   ,DECODE(TOP4.RANKING, 4, TOP4.XS_MTR_AMT_RATE, NULL) AS RATE_4
                FROM
                    (
                    -- SELECTING TOP 4 RANKING
                    SELECT
                        RANK_ALL.DS_CONTR_BLLG_SCHD_SMRY_PK
                       ,RANK_ALL.XS_MTR_COPY_QTY
                       ,RANK_ALL.XS_MTR_AMT_RATE
                       ,RANK_ALL.RANKING
                    FROM
                        (
                        SELECT
                            BSM.DS_CONTR_BLLG_SCHD_SMRY_PK
                           ,BSM.XS_MTR_COPY_QTY
                           ,BSM.XS_MTR_AMT_RATE
                           ,ROW_NUMBER() OVER (PARTITION BY BSM.DS_CONTR_BLLG_SCHD_SMRY_PK ORDER BY BSM.XS_MTR_COPY_QTY) RANKING
                        FROM
                            DS_CONTR_BLLG_SCHD_MTR BSM
                        WHERE
                            BSM.GLBL_CMPY_CD = #glblCmpyCd#
                        AND BSM.EZCANCELFLAG = '0'
                        ) RANK_ALL
                    WHERE RANK_ALL.RANKING BETWEEN 1 AND 4
                    ) TOP4
                ) CONV
            GROUP BY CONV.DS_CONTR_BLLG_SCHD_SMRY_PK
            ) CON_MTR_RANK
        WHERE
            DCBS.GLBL_CMPY_CD                       = #glblCmpyCd#
        AND DCBS.DS_BLLG_SCHD_STS_CD                = #open#
        AND DCBS.NEXT_BLLG_DT                      &lt;= TO_CHAR(LAST_DAY(TO_DATE(#trgtDt#, 'YYYYMMDD')), 'YYYYMMDD')
        AND ((DCBS.DS_CONTR_DTL_TP_CD               = #fleet#
              AND DC.DS_CONTR_CATG_CD               = #flt#)
              OR  DCBS.DS_CONTR_DTL_TP_CD          != #agg#)
        AND DCBS.USG_CHRG_FLG                       = 'Y'
        AND DCBS.GLBL_CMPY_CD                       = BC.GLBL_CMPY_CD
        AND DCBS.BLLG_CYCLE_CD                      = BC.BLLG_CYCLE_CD
        AND DCBS.GLBL_CMPY_CD                       = DCBM.GLBL_CMPY_CD
        AND DCBS.DS_CONTR_BLLG_MTR_PK               = DCBM.DS_CONTR_BLLG_MTR_PK
        AND DCBM.GLBL_CMPY_CD                       = ML.GLBL_CMPY_CD
        AND DCBM.BLLG_MTR_LB_CD                     = ML.MTR_LB_CD
        AND DCBS.GLBL_CMPY_CD                       = DCD.GLBL_CMPY_CD
        AND DCBS.DS_CONTR_DTL_PK                    = DCD.DS_CONTR_DTL_PK
        AND DCD.GLBL_CMPY_CD                        = DCDS.GLBL_CMPY_CD
        AND DCD.DS_CONTR_DTL_PK                     = DCDS.DS_CONTR_DTL_PK
        AND DCD.GLBL_CMPY_CD                        = BTP.GLBL_CMPY_CD
        AND DCD.MTR_BLLG_TMG_CD                     = BTP.BLLG_TMG_TP_CD
        AND DCD.GLBL_CMPY_CD                        = DCDT.GLBL_CMPY_CD
        AND DCD.DS_CONTR_DTL_TP_CD                  = DCDT.DS_CONTR_DTL_TP_CD
        AND DCD.GLBL_CMPY_CD                        = DC.GLBL_CMPY_CD
        AND DCD.DS_CONTR_PK                         = DC.DS_CONTR_PK
        AND DC.GLBL_CMPY_CD                         = CCY.GLBL_CMPY_CD
        AND DC.CCY_CD                               = CCY.CCY_CD
        AND DCD.GLBL_CMPY_CD                        = DCS.GLBL_CMPY_CD
        AND DCD.DS_CONTR_PK                         = DCS.DS_CONTR_PK
        AND DC.GLBL_CMPY_CD                         = DCC.GLBL_CMPY_CD
        AND DC.DS_CONTR_CATG_CD                     = DCC.DS_CONTR_CATG_CD
        AND DCD.GLBL_CMPY_CD                        = SCM.GLBL_CMPY_CD(+)
        AND DCD.SVC_CONFIG_MSTR_PK                  = SCM.SVC_CONFIG_MSTR_PK(+)
        AND SCM.GLBL_CMPY_CD                        = DM.GLBL_CMPY_CD(+)
        AND SCM.MDL_ID                              = DM.MDL_ID(+)
        AND SCM.GLBL_CMPY_CD                        = MN.T_GLBL_CMPY_CD(+)
        AND SCM.MDL_ID                              = MN.T_MDL_ID(+)
        AND DCD.GLBL_CMPY_CD                        = SMM.GLBL_CMPY_CD(+)
        AND DCD.SVC_MACH_MSTR_PK                    = SMM.SVC_MACH_MSTR_PK(+)
        AND DCD.GLBL_CMPY_CD                        = DMI.GLBL_CMPY_CD
        AND DCD.SVC_PGM_MDSE_CD                     = DMI.MDSE_CD
        AND DCBS.DS_CONTR_BLLG_MTR_PK               = LM.DS_CONTR_BLLG_MTR_PK
        AND DCBS.DS_CONTR_BLLG_SCHD_SMRY_PK         = CON_MTR_RANK.DS_CONTR_BLLG_SCHD_SMRY_PK
        AND DCBS.EZCANCELFLAG                       = '0'
        AND BC.EZCANCELFLAG                         = '0'
        AND DCBM.EZCANCELFLAG                       = '0'
        AND ML.EZCANCELFLAG                         = '0'
        AND DCD.EZCANCELFLAG                        = '0'
        AND DCDS.EZCANCELFLAG                       = '0'
        AND BTP.EZCANCELFLAG                        = '0'
        AND DCDT.EZCANCELFLAG                       = '0'
        AND DC.EZCANCELFLAG                         = '0'
        AND DCS.EZCANCELFLAG                        = '0'
        AND DCC.EZCANCELFLAG                        = '0'
        AND SCM.EZCANCELFLAG(+)                     = '0'
        AND DM.EZCANCELFLAG(+)                      = '0'
        AND MN.EZCANCELFLAG(+)                      = '0'
        AND SMM.EZCANCELFLAG(+)                     = '0'
        AND DMI.EZCANCELFLAG                        = '0'
        ---------------------------------------------------------
        -- Case Defferal and Pattern B (Not Recognized)
        ---------------------------------------------------------
        UNION ALL
        SELECT
            #defferal#                                 AS FACT_CATG_CD
           ,DMI.SVC_ALLOC_TP_CD                        AS SVC_ALLOC_TP_CD
           ,DCD.DS_CONTR_PK                            AS DS_CONTR_PK
           ,DC.DS_CONTR_NUM                            AS DS_CONTR_NUM
           ,DCD.DS_CONTR_DTL_TP_CD                     AS DS_CONTR_DTL_TP_CD
           ,DC.SVC_LINE_BIZ_CD                         AS SVC_LINE_BIZ_CD
           ,DC.SVC_CONTR_BR_CD                         AS SVC_CONTR_BR_CD
           ,DC.DS_CONTR_CATG_CD                        AS DS_CONTR_CATG_CD
           ,DCD.SVC_MACH_MSTR_PK                       AS SVC_MACH_MSTR_PK
           ,SMM.SER_NUM                                AS SER_NUM
           ,SCM.MDL_ID                                 AS MDL_ID
           ,MN.T_MDL_NM                                AS T_MDL_NM
           ,NULL                                       AS BLLG_SCHD_FROM_DT
           ,NULL                                       AS BLLG_SCHD_THRU_DT
           ,BC.BLLG_CYCLE_CD                           AS BLLG_CYCLE_CD
           ,BC.BLLG_CYCLE_DESC_TXT                     AS BLLG_CYCLE_DESC_TXT
           ,BC.BLLG_CYCLE_MTH_AOT                      AS BLLG_CYCLE_MTH_AOT
           ,DCD.MTR_BLLG_TMG_CD                        AS BLLG_TMG_TP_CD
           ,BTP.BLLG_TMG_TP_DESC_TXT                   AS BLLG_TMG_TP_DESC_TXT
           ,NULL                                       AS BLLG_MTR_LB_CD
           ,NULL                                       AS MTR_LB_DESC_TXT
           ,NULL                                       AS BLLG_COPY_QTY
           ,NULL                                       AS XS_MTR_COPY_QTY_01
           ,NULL                                       AS XS_MTR_AMT_RATE_01
           ,NULL                                       AS XS_MTR_COPY_QTY_02
           ,NULL                                       AS XS_MTR_AMT_RATE_02
           ,NULL                                       AS XS_MTR_COPY_QTY_03
           ,NULL                                       AS XS_MTR_AMT_RATE_03
           ,NULL                                       AS XS_MTR_COPY_QTY_04
           ,NULL                                       AS XS_MTR_AMT_RATE_04
           ,DCS.DS_CONTR_CTRL_STS_CD                   AS DS_CONTR_CTRL_STS_CD
           ,DCS.DS_CONTR_CTRL_STS_NM                   AS DS_CONTR_CTRL_STS_NM
           ,DC.CONTR_VRSN_EFF_FROM_DT                  AS CONTR_VRSN_EFF_FROM_DT
           ,DC.CONTR_VRSN_EFF_THRU_DT                  AS CONTR_VRSN_EFF_THRU_DT
           ,DCD.DS_CONTR_DTL_PK                        AS DS_CONTR_DTL_PK
           ,DCDS.DS_CONTR_CTRL_STS_CD                  AS DS_CONTR_CTRL_DTL_STS_CD
           ,DCDS.DS_CONTR_CTRL_STS_NM                  AS DS_CONTR_CTRL_DTL_STS_NM
           ,DCD.CONTR_EFF_FROM_DT                      AS CONTR_EFF_FROM_DT
           ,DCD.CONTR_EFF_THRU_DT                      AS CONTR_EFF_THRU_DT
           ,DCD.CONTR_CLO_DT                           AS CONTR_CLO_DT
           ,DC.DS_CONTR_CRAT_DT                        AS DS_CONTR_CRAT_DT
           ,DC.DS_CONTR_CRAT_PSN_CD                    AS DS_CONTR_CRAT_PSN_CD
           ,DC.DS_CONTR_LAST_UPD_DT                    AS DS_CONTR_LAST_UPD_DT
           ,DC.DS_CONTR_LAST_UPD_PSN_CD                AS DS_CONTR_LAST_UPD_PSN_CD
           ,DISC.NEXT_REV_RECOG_DT                     AS BLLG_REV_DT
           ,NULL                                       AS DFRD_REV_FLG
           ,0                                          AS DFRD_ACCTG_RULE_DURN_AOT
           ,#notRecognize#                             AS DS_BLLG_SCHD_STS_CD
           ,0                                          AS DS_CONTR_BLLG_SCHD_PK
           ,0                                          AS BASE_PRC_DEAL_AMT
           ,0                                          AS MTR_CHRG_DEAL_AMT
           ,DISC.DS_INV_SLS_CR_PK                      AS DS_INV_SLS_CR_PK
           ,0                                          AS DS_CONTR_BLLG_MTR_PK
           ,0                                          AS AFT_DECL_PNT_DIGIT_NUM
        FROM
            DS_INV_SLS_CR                              DISC
           ,INV_LINE                                   DIL
           ,DS_CONTR_DTL                               DCD
           ,DS_CONTR_DTL_STS_V                         DCDS
           ,BLLG_CYCLE                                 BC
           ,BLLG_TMG_TP                                BTP
           ,DS_CONTR                                   DC
           ,DS_CONTR_STS_V                             DCS
           ,DS_CONTR_DTL_TP                            DCDT
           ,DS_CONTR_CATG                              DCC
           ,SVC_CONFIG_MSTR                            SCM
           ,DS_MDL                                     DM
           ,MDL_NM                                     MN
           ,SVC_MACH_MSTR                              SMM
           ,MDSE                                       DMI
        WHERE
            DISC.GLBL_CMPY_CD                       = #glblCmpyCd#
        AND DISC.NEXT_REV_RECOG_DT                  &lt;= TO_CHAR(LAST_DAY(TO_DATE(#trgtDt#, 'YYYYMMDD')), 'YYYYMMDD')
        AND DISC.FIRST_REV_RECOG_DT                 IS NOT NULL
        AND SUBSTR(DISC.FIRST_REV_RECOG_DT, 0, 6)   != SUBSTR(#trgtDt#, 0, 6)
        AND (DISC.CPLT_REV_RECOG_DT                 IS NULL
         OR  SUBSTR(DISC.CPLT_REV_RECOG_DT, 0, 6)   = SUBSTR(#trgtDt#, 0, 6))
        AND DISC.DFRD_ACCTG_RULE_CD                 = #deffered#
        AND DISC.GLBL_CMPY_CD                       = DIL.GLBL_CMPY_CD
        AND DISC.INV_NUM                            = DIL.INV_NUM
        AND DISC.INV_BOL_LINE_NUM                   = DIL.INV_BOL_LINE_NUM
        AND DISC.INV_LINE_NUM                       = DIL.INV_LINE_NUM
        AND DISC.INV_LINE_SUB_NUM                   = DIL.INV_LINE_SUB_NUM
        AND DISC.INV_TRX_LINE_SUB_NUM               = DIL.INV_LINE_SUB_TRX_NUM
        AND DIL.GLBL_CMPY_CD                        = DCD.GLBL_CMPY_CD
        AND DIL.DS_CONTR_DTL_PK                     = DCD.DS_CONTR_DTL_PK
        AND DCD.GLBL_CMPY_CD                        = DCDS.GLBL_CMPY_CD
        AND DCD.DS_CONTR_DTL_PK                     = DCDS.DS_CONTR_DTL_PK
        AND DCD.GLBL_CMPY_CD                        = BC.GLBL_CMPY_CD
        AND DCD.BASE_BLLG_TMG_CD                    = BC.BLLG_CYCLE_CD
        AND DCD.GLBL_CMPY_CD                        = BTP.GLBL_CMPY_CD
        AND DCD.BASE_BLLG_TMG_CD                    = BTP.BLLG_TMG_TP_CD
        AND DCD.GLBL_CMPY_CD                        = DCDT.GLBL_CMPY_CD
        AND DCD.DS_CONTR_DTL_TP_CD                  = DCDT.DS_CONTR_DTL_TP_CD
        AND DCD.GLBL_CMPY_CD                        = DC.GLBL_CMPY_CD
        AND DCD.DS_CONTR_PK                         = DC.DS_CONTR_PK
        AND DCD.GLBL_CMPY_CD                        = DCS.GLBL_CMPY_CD
        AND DCD.DS_CONTR_PK                         = DCS.DS_CONTR_PK
        AND DC.GLBL_CMPY_CD                         = DCC.GLBL_CMPY_CD
        AND DC.DS_CONTR_CATG_CD                     = DCC.DS_CONTR_CATG_CD
        AND DCD.GLBL_CMPY_CD                        = SCM.GLBL_CMPY_CD(+)
        AND DCD.SVC_CONFIG_MSTR_PK                  = SCM.SVC_CONFIG_MSTR_PK(+)
        AND SCM.GLBL_CMPY_CD                        = DM.GLBL_CMPY_CD(+)
        AND SCM.MDL_ID                              = DM.MDL_ID(+)
        AND SCM.GLBL_CMPY_CD                        = MN.T_GLBL_CMPY_CD(+)
        AND SCM.MDL_ID                              = MN.T_MDL_ID(+)
        AND DCD.GLBL_CMPY_CD                        = SMM.GLBL_CMPY_CD(+)
        AND DCD.SVC_MACH_MSTR_PK                    = SMM.SVC_MACH_MSTR_PK(+)
        AND DCD.GLBL_CMPY_CD                        = DMI.GLBL_CMPY_CD
        AND DCD.SVC_PGM_MDSE_CD                     = DMI.MDSE_CD
        AND DISC.EZCANCELFLAG                       = '0'
        AND DIL.EZCANCELFLAG                        = '0'
        AND DCD.EZCANCELFLAG                        = '0'
        AND DCDS.EZCANCELFLAG                       = '0'
        AND BC.EZCANCELFLAG                         = '0'
        AND BTP.EZCANCELFLAG                        = '0'
        AND DCDT.EZCANCELFLAG                       = '0'
        AND DC.EZCANCELFLAG                         = '0'
        AND DCS.EZCANCELFLAG                        = '0'
        AND DCC.EZCANCELFLAG                        = '0'
        AND SCM.EZCANCELFLAG(+)                     = '0'
        AND DM.EZCANCELFLAG(+)                      = '0'
        AND MN.EZCANCELFLAG(+)                      = '0'
        AND SMM.EZCANCELFLAG(+)                     = '0'
        AND DMI.EZCANCELFLAG                        = '0'
        ---------------------------------------------------------
        -- Case Defferal and Pattern C (Recognized)
        ---------------------------------------------------------
        UNION ALL
        SELECT
            #defferal#                                 AS FACT_CATG_CD
           ,DMI.SVC_ALLOC_TP_CD                        AS SVC_ALLOC_TP_CD
           ,DCD.DS_CONTR_PK                            AS DS_CONTR_PK
           ,DC.DS_CONTR_NUM                            AS DS_CONTR_NUM
           ,DCD.DS_CONTR_DTL_TP_CD                     AS DS_CONTR_DTL_TP_CD
           ,DC.SVC_LINE_BIZ_CD                         AS SVC_LINE_BIZ_CD
           ,DC.SVC_CONTR_BR_CD                         AS SVC_CONTR_BR_CD
           ,DC.DS_CONTR_CATG_CD                        AS DS_CONTR_CATG_CD
           ,DCD.SVC_MACH_MSTR_PK                       AS SVC_MACH_MSTR_PK
           ,SMM.SER_NUM                                AS SER_NUM
           ,SCM.MDL_ID                                 AS MDL_ID
           ,MN.T_MDL_NM                                AS T_MDL_NM
           ,NULL                                       AS BLLG_SCHD_FROM_DT
           ,NULL                                       AS BLLG_SCHD_THRU_DT
           ,BC.BLLG_CYCLE_CD                           AS BLLG_CYCLE_CD
           ,BC.BLLG_CYCLE_DESC_TXT                     AS BLLG_CYCLE_DESC_TXT
           ,BC.BLLG_CYCLE_MTH_AOT                      AS BLLG_CYCLE_MTH_AOT
           ,DCD.MTR_BLLG_TMG_CD                        AS BLLG_TMG_TP_CD
           ,BTP.BLLG_TMG_TP_DESC_TXT                   AS BLLG_TMG_TP_DESC_TXT
           ,NULL                                       AS BLLG_MTR_LB_CD
           ,NULL                                       AS MTR_LB_DESC_TXT
           ,NULL                                       AS BLLG_COPY_QTY
           ,NULL                                       AS XS_MTR_COPY_QTY_01
           ,NULL                                       AS XS_MTR_AMT_RATE_01
           ,NULL                                       AS XS_MTR_COPY_QTY_02
           ,NULL                                       AS XS_MTR_AMT_RATE_02
           ,NULL                                       AS XS_MTR_COPY_QTY_03
           ,NULL                                       AS XS_MTR_AMT_RATE_03
           ,NULL                                       AS XS_MTR_COPY_QTY_04
           ,NULL                                       AS XS_MTR_AMT_RATE_04
           ,DCS.DS_CONTR_CTRL_STS_CD                   AS DS_CONTR_CTRL_STS_CD
           ,DCS.DS_CONTR_CTRL_STS_NM                   AS DS_CONTR_CTRL_STS_NM
           ,DC.CONTR_VRSN_EFF_FROM_DT                  AS CONTR_VRSN_EFF_FROM_DT
           ,DC.CONTR_VRSN_EFF_THRU_DT                  AS CONTR_VRSN_EFF_THRU_DT
           ,DCD.DS_CONTR_DTL_PK                        AS DS_CONTR_DTL_PK
           ,DCDS.DS_CONTR_CTRL_STS_CD                  AS DS_CONTR_CTRL_DTL_STS_CD
           ,DCDS.DS_CONTR_CTRL_STS_NM                  AS DS_CONTR_CTRL_DTL_STS_NM
           ,DCD.CONTR_EFF_FROM_DT                      AS CONTR_EFF_FROM_DT
           ,DCD.CONTR_EFF_THRU_DT                      AS CONTR_EFF_THRU_DT
           ,DCD.CONTR_CLO_DT                           AS CONTR_CLO_DT
           ,DC.DS_CONTR_CRAT_DT                        AS DS_CONTR_CRAT_DT
           ,DC.DS_CONTR_CRAT_PSN_CD                    AS DS_CONTR_CRAT_PSN_CD
           ,DC.DS_CONTR_LAST_UPD_DT                    AS DS_CONTR_LAST_UPD_DT
           ,DC.DS_CONTR_LAST_UPD_PSN_CD                AS DS_CONTR_LAST_UPD_PSN_CD
           ,DISC.NEXT_REV_RECOG_DT                     AS BLLG_REV_DT
           ,NULL                                       AS DFRD_REV_FLG
           ,0                                          AS DFRD_ACCTG_RULE_DURN_AOT
           ,#recognize#                                AS DS_BLLG_SCHD_STS_CD
           ,0                                          AS DS_CONTR_BLLG_SCHD_PK
           ,0                                          AS BASE_PRC_DEAL_AMT
           ,0                                          AS MTR_CHRG_DEAL_AMT
           ,DISC.DS_INV_SLS_CR_PK                      AS DS_INV_SLS_CR_PK
           ,0                                          AS DS_CONTR_BLLG_MTR_PK
           ,0                                          AS AFT_DECL_PNT_DIGIT_NUM
        FROM
            DS_INV_SLS_CR                              DISC
           ,INV_LINE                                   DIL
           ,DS_CONTR_DTL                               DCD
           ,DS_CONTR_DTL_STS_V                         DCDS
           ,BLLG_CYCLE                                 BC
           ,BLLG_TMG_TP                                BTP
           ,DS_CONTR                                   DC
           ,DS_CONTR_STS_V                             DCS
           ,DS_CONTR_DTL_TP                            DCDT
           ,DS_CONTR_CATG                              DCC
           ,SVC_CONFIG_MSTR                            SCM
           ,DS_MDL                                     DM
           ,MDL_NM                                     MN
           ,SVC_MACH_MSTR                              SMM
           ,MDSE                                       DMI
        WHERE
            DISC.GLBL_CMPY_CD                       = #glblCmpyCd#
        AND DISC.NEXT_REV_RECOG_DT                  &gt; TO_CHAR(LAST_DAY(TO_DATE(#trgtDt#, 'YYYYMMDD')), 'YYYYMMDD')
        AND DISC.FIRST_REV_RECOG_DT                 IS NOT NULL
        AND SUBSTR(DISC.FIRST_REV_RECOG_DT, 0, 6)   != SUBSTR(#trgtDt#, 0, 6)
        AND (DISC.CPLT_REV_RECOG_DT                 IS NULL
         OR  SUBSTR(DISC.CPLT_REV_RECOG_DT, 0, 6)   = SUBSTR(#trgtDt#, 0, 6))
        AND DISC.DFRD_ACCTG_RULE_CD                 = #deffered#
        AND DISC.GLBL_CMPY_CD                       = DIL.GLBL_CMPY_CD
        AND DISC.INV_NUM                            = DIL.INV_NUM
        AND DISC.INV_BOL_LINE_NUM                   = DIL.INV_BOL_LINE_NUM
        AND DISC.INV_LINE_NUM                       = DIL.INV_LINE_NUM
        AND DISC.INV_LINE_SUB_NUM                   = DIL.INV_LINE_SUB_NUM
        AND DISC.INV_TRX_LINE_SUB_NUM               = DIL.INV_LINE_SUB_TRX_NUM
        AND DIL.GLBL_CMPY_CD                        = DCD.GLBL_CMPY_CD
        AND DIL.DS_CONTR_DTL_PK                     = DCD.DS_CONTR_DTL_PK
        AND DCD.GLBL_CMPY_CD                        = DCDS.GLBL_CMPY_CD
        AND DCD.DS_CONTR_DTL_PK                     = DCDS.DS_CONTR_DTL_PK
        AND DCD.GLBL_CMPY_CD                        = BC.GLBL_CMPY_CD
        AND DCD.BASE_BLLG_TMG_CD                    = BC.BLLG_CYCLE_CD
        AND DCD.GLBL_CMPY_CD                        = BTP.GLBL_CMPY_CD
        AND DCD.BASE_BLLG_TMG_CD                    = BTP.BLLG_TMG_TP_CD
        AND DCD.GLBL_CMPY_CD                        = DCDT.GLBL_CMPY_CD
        AND DCD.DS_CONTR_DTL_TP_CD                  = DCDT.DS_CONTR_DTL_TP_CD
        AND DCD.GLBL_CMPY_CD                        = DC.GLBL_CMPY_CD
        AND DCD.DS_CONTR_PK                         = DC.DS_CONTR_PK
        AND DCD.GLBL_CMPY_CD                        = DCS.GLBL_CMPY_CD
        AND DCD.DS_CONTR_PK                         = DCS.DS_CONTR_PK
        AND DC.GLBL_CMPY_CD                         = DCC.GLBL_CMPY_CD
        AND DC.DS_CONTR_CATG_CD                     = DCC.DS_CONTR_CATG_CD
        AND DCD.GLBL_CMPY_CD                        = SCM.GLBL_CMPY_CD(+)
        AND DCD.SVC_CONFIG_MSTR_PK                  = SCM.SVC_CONFIG_MSTR_PK(+)
        AND SCM.GLBL_CMPY_CD                        = DM.GLBL_CMPY_CD(+)
        AND SCM.MDL_ID                              = DM.MDL_ID(+)
        AND SCM.GLBL_CMPY_CD                        = MN.T_GLBL_CMPY_CD(+)
        AND SCM.MDL_ID                              = MN.T_MDL_ID(+)
        AND DCD.GLBL_CMPY_CD                        = SMM.GLBL_CMPY_CD(+)
        AND DCD.SVC_MACH_MSTR_PK                    = SMM.SVC_MACH_MSTR_PK(+)
        AND DCD.GLBL_CMPY_CD                        = DMI.GLBL_CMPY_CD
        AND DCD.SVC_PGM_MDSE_CD                     = DMI.MDSE_CD
        AND DISC.EZCANCELFLAG                       = '0'
        AND DIL.EZCANCELFLAG                        = '0'
        AND DCD.EZCANCELFLAG                        = '0'
        AND DCDS.EZCANCELFLAG                       = '0'
        AND BC.EZCANCELFLAG                         = '0'
        AND BTP.EZCANCELFLAG                        = '0'
        AND DCDT.EZCANCELFLAG                       = '0'
        AND DC.EZCANCELFLAG                         = '0'
        AND DCS.EZCANCELFLAG                        = '0'
        AND DCC.EZCANCELFLAG                        = '0'
        AND SCM.EZCANCELFLAG(+)                     = '0'
        AND DM.EZCANCELFLAG(+)                      = '0'
        AND MN.EZCANCELFLAG(+)                      = '0'
        AND SMM.EZCANCELFLAG(+)                     = '0'
        AND DMI.EZCANCELFLAG                        = '0'
        ORDER BY
            FACT_CATG_CD
           ,DS_BLLG_SCHD_STS_CD
    </statement>

<!-- START 2018/04/12 M.Naito [QC#23378, MOD] -->
    <statement id="getAllocDataByContr" parameterClass="Map" resultClass="Map">
        SELECT
            DCP.DS_CONTR_PK
           ,DCP.DS_CONTR_DTL_PK
           ,DCP.SVC_INV_CHRG_TP_CD
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #equipAlloc#   AND DCP.SVC_INV_CHRG_TP_CD = #svcInvChrgTpCd#  AND DCP.DS_CONTR_DTL_PK IS NOT NULL THEN DCP.PRC_ALLOC_RATE ELSE 0 END) AS BASE_EQP_ALLOC
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #serviceAlloc# AND DCP.SVC_INV_CHRG_TP_CD = #svcInvChrgTpCd#  AND DCP.DS_CONTR_DTL_PK IS NOT NULL THEN DCP.PRC_ALLOC_RATE ELSE 0 END) AS BASE_SVC_ALLOC
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #suplyAlloc#   AND DCP.SVC_INV_CHRG_TP_CD = #svcInvChrgTpCd#  AND DCP.DS_CONTR_DTL_PK IS NOT NULL THEN DCP.PRC_ALLOC_RATE ELSE 0 END) AS BASE_SUP_ALLOC
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #equipAlloc#   AND DCP.SVC_INV_CHRG_TP_CD = #svcInvChrgTpCd#  AND DCP.DS_CONTR_DTL_PK IS NOT NULL THEN DCP.PRC_ALLOC_AMT ELSE NULL END) AS BASE_EQP_AMT_ALLOC
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #serviceAlloc# AND DCP.SVC_INV_CHRG_TP_CD = #svcInvChrgTpCd#  AND DCP.DS_CONTR_DTL_PK IS NOT NULL THEN DCP.PRC_ALLOC_AMT ELSE NULL END) AS BASE_SVC_AMT_ALLOC
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #suplyAlloc#   AND DCP.SVC_INV_CHRG_TP_CD = #svcInvChrgTpCd#  AND DCP.DS_CONTR_DTL_PK IS NOT NULL THEN DCP.PRC_ALLOC_AMT ELSE NULL END) AS BASE_SUP_AMT_ALLOC
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #equipAlloc#   AND DCP.SVC_INV_CHRG_TP_CD IS NULL AND DCP.DS_CONTR_DTL_PK IS NOT NULL THEN DCP.PRC_ALLOC_RATE ELSE 0 END) AS DTL_EQP_ALLOC
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #serviceAlloc# AND DCP.SVC_INV_CHRG_TP_CD IS NULL AND DCP.DS_CONTR_DTL_PK IS NOT NULL THEN DCP.PRC_ALLOC_RATE ELSE 0 END) AS DTL_SVC_ALLOC
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #suplyAlloc#   AND DCP.SVC_INV_CHRG_TP_CD IS NULL AND DCP.DS_CONTR_DTL_PK IS NOT NULL THEN DCP.PRC_ALLOC_RATE ELSE 0 END) AS DTL_SUP_ALLOC
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #equipAlloc#   AND DCP.SVC_INV_CHRG_TP_CD IS NULL AND DCP.DS_CONTR_DTL_PK IS     NULL THEN DCP.PRC_ALLOC_RATE ELSE 0 END) AS HEAD_EQP_ALLOC
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #serviceAlloc# AND DCP.SVC_INV_CHRG_TP_CD IS NULL AND DCP.DS_CONTR_DTL_PK IS     NULL THEN DCP.PRC_ALLOC_RATE ELSE 0 END) AS HEAD_SVC_ALLOC
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #suplyAlloc#   AND DCP.SVC_INV_CHRG_TP_CD IS NULL AND DCP.DS_CONTR_DTL_PK IS     NULL THEN DCP.PRC_ALLOC_RATE ELSE 0 END) AS HEAD_SUP_ALLOC
        FROM   DS_CONTR_PRC_ALLOC DCP, RPT_COND_CONST CON
        WHERE  DCP.GLBL_CMPY_CD          = #glblCmpyCd#
        AND    DCP.DS_CONTR_PK           = #dsContrPk#
        AND    DCP.DS_CONTR_DTL_PK       = #dsContrDtlPk#
        AND    DCP.SVC_INV_CHRG_TP_CD    = #svcInvChrgTpCd#
        AND    DCP.GLBL_CMPY_CD          = CON.GLBL_CMPY_CD
        AND    DCP.COA_ACCT_CD           = CON.RPT_COND_CONST_VAL_TXT_01
        AND    CON.RPT_COND_CONST_GRP_ID IN (#equipAlloc#, #serviceAlloc#, #suplyAlloc#)
        AND    DCP.EZCANCELFLAG          = '0'
        AND    CON.EZCANCELFLAG          = '0'
        GROUP BY DCP.DS_CONTR_PK, DCP.DS_CONTR_DTL_PK, DCP.SVC_INV_CHRG_TP_CD
    </statement>
<!-- END 2018/04/12 M.Naito [QC#23378, MOD] -->

    <statement id="getAllocDataByAjeInv" parameterClass="Map" resultClass="Map">
        SELECT
            AJE.SVC_ALLOC_TP_CD
           ,AJE.MDL_ID
           ,NVL(CASE WHEN AJE.MDL_ID IS NOT NULL THEN AJE.EQUIP_ALLOC_PCT END, 0) AS MDL_EQP_ALLOC
           ,NVL(CASE WHEN AJE.MDL_ID IS NOT NULL THEN AJE.SVC_ALLOC_PCT   END, 0) AS MDL_SVC_ALLOC
           ,NVL(CASE WHEN AJE.MDL_ID IS NOT NULL THEN AJE.SPLY_ALLOC_PCT  END, 0) AS MDL_SUP_ALLOC
           ,NVL(CASE WHEN AJE.MDL_ID IS     NULL THEN AJE.EQUIP_ALLOC_PCT END, 0) AS NON_MDL_EQP_ALLOC
           ,NVL(CASE WHEN AJE.MDL_ID IS     NULL THEN AJE.SVC_ALLOC_PCT   END, 0) AS NON_MDL_SVC_ALLOC
           ,NVL(CASE WHEN AJE.MDL_ID IS     NULL THEN AJE.SPLY_ALLOC_PCT  END, 0) AS NON_MDL_SUP_ALLOC
        FROM   AJE_INV_LINE_ALLOC AJE
        WHERE  AJE.GLBL_CMPY_CD       = #glblCmpyCd#
        AND    AJE.SVC_INV_CHRG_TP_CD = #svcInvChrgTpCd#
        AND    AJE.SVC_ALLOC_TP_CD    = #svcAllocTpCd#
        AND    AJE.EZCANCELFLAG       = '0'
    </statement>

    <statement id="getAmtByContrBase" parameterClass="Map" resultClass="Map">
        SELECT
            SCB.DS_CONTR_BLLG_SCHD_PK
           ,DAR.DFRD_REV_FLG
           ,NVL(DAR.DFRD_ACCTG_RULE_DURN_AOT, 0) AS DFRD_ACCTG_RULE_DURN_AOT
           ,SUM(CASE WHEN DAR.DFRD_REV_FLG = 'Y' AND CON.RPT_COND_CONST_GRP_ID = #equipAlloc#   THEN SCBA.INV_LINE_DEAL_NET_AMT ELSE 0 END) AS EQP_SUM
           ,SUM(CASE WHEN DAR.DFRD_REV_FLG = 'Y' AND CON.RPT_COND_CONST_GRP_ID = #serviceAlloc# THEN SCBA.INV_LINE_DEAL_NET_AMT ELSE 0 END) AS SVC_SUM
           ,SUM(CASE WHEN DAR.DFRD_REV_FLG = 'Y' AND CON.RPT_COND_CONST_GRP_ID = #suplyAlloc#   THEN SCBA.INV_LINE_DEAL_NET_AMT ELSE 0 END) AS SUP_SUM
           ,SUM(CASE WHEN DAR.DFRD_REV_FLG = 'N' AND CON.RPT_COND_CONST_GRP_ID = #equipAlloc#   THEN SCBA.INV_LINE_DEAL_NET_AMT ELSE 0 END) AS EQP_SUM_N
           ,SUM(CASE WHEN DAR.DFRD_REV_FLG = 'N' AND CON.RPT_COND_CONST_GRP_ID = #serviceAlloc# THEN SCBA.INV_LINE_DEAL_NET_AMT ELSE 0 END) AS SVC_SUM_N
           ,SUM(CASE WHEN DAR.DFRD_REV_FLG = 'N' AND CON.RPT_COND_CONST_GRP_ID = #suplyAlloc#   THEN SCBA.INV_LINE_DEAL_NET_AMT ELSE 0 END) AS SUP_SUM_N
        FROM
            SVC_CONTR_BLLG             SCB
           ,SVC_CONTR_BASE_BLLG        SCBB
           ,SVC_CONTR_BLLG_ALLOC       SCBA
           ,DFRD_ACCTG_RULE            DAR
           ,RPT_COND_CONST             CON
        WHERE
            SCB.GLBL_CMPY_CD            = #glblCmpyCd#
        AND SCB.DS_CONTR_BLLG_SCHD_PK   = #dsContrBllgSchdPk#
        AND SCB.GLBL_CMPY_CD            = SCBB.GLBL_CMPY_CD
        AND SCB.SVC_CONTR_BLLG_PK       = SCBB.SVC_CONTR_BLLG_PK
        AND SCBB.GLBL_CMPY_CD           = SCBA.GLBL_CMPY_CD(+)
        AND SCBB.SVC_CONTR_BASE_BLLG_PK = SCBA.SVC_CONTR_BASE_BLLG_PK(+)
        AND SCBA.GLBL_CMPY_CD           = DAR.GLBL_CMPY_CD(+)
        AND SCBA.DFRD_ACCTG_RULE_CD     = DAR.DFRD_ACCTG_RULE_CD(+)
        AND SCBA.GLBL_CMPY_CD           = CON.GLBL_CMPY_CD
        AND SCBA.COA_ACCT_CD            = CON.RPT_COND_CONST_VAL_TXT_01
        AND CON.RPT_COND_CONST_GRP_ID  IN (#equipAlloc#, #serviceAlloc#, #suplyAlloc#)
        AND SCB.EZCANCELFLAG            = '0'
        AND SCBB.EZCANCELFLAG           = '0'
        AND SCBA.EZCANCELFLAG(+)        = '0'
        AND DAR.EZCANCELFLAG(+)         = '0'
        AND CON.EZCANCELFLAG            = '0'
        GROUP BY SCB.DS_CONTR_BLLG_SCHD_PK, DAR.DFRD_REV_FLG, DAR.DFRD_ACCTG_RULE_DURN_AOT
    </statement>

    <statement id="getAmtByContrUsgAct" parameterClass="Map" resultClass="Map">
        SELECT
            SCB.DS_CONTR_BLLG_SCHD_PK
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #equipAlloc#   THEN SCBA.INV_LINE_DEAL_NET_AMT ELSE 0 END) AS EQP_SUM
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #serviceAlloc# THEN SCBA.INV_LINE_DEAL_NET_AMT ELSE 0 END) AS SVC_SUM
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #suplyAlloc#   THEN SCBA.INV_LINE_DEAL_NET_AMT ELSE 0 END) AS SUP_SUM
        FROM
            SVC_CONTR_BLLG             SCB
           ,SVC_CONTR_MTR_BLLG         SCMB
           ,SVC_CONTR_BLLG_ALLOC       SCBA
           ,RPT_COND_CONST             CON
        WHERE
            SCB.GLBL_CMPY_CD            = #glblCmpyCd#
        AND SCB.DS_CONTR_BLLG_SCHD_PK   = #dsContrBllgSchdPk#
        AND SCB.GLBL_CMPY_CD            = SCMB.GLBL_CMPY_CD
        AND SCB.SVC_CONTR_BLLG_PK       = SCMB.SVC_CONTR_BLLG_PK
        AND SCB.DS_CONTR_BLLG_MTR_PK    = SCMB.DS_CONTR_BLLG_MTR_PK
        AND SCMB.GLBL_CMPY_CD           = SCBA.GLBL_CMPY_CD(+)
        AND SCMB.SVC_CONTR_MTR_BLLG_PK  = SCBA.SVC_CONTR_MTR_BLLG_PK(+)
        AND SCBA.GLBL_CMPY_CD           = CON.GLBL_CMPY_CD
        AND SCBA.COA_ACCT_CD            = CON.RPT_COND_CONST_VAL_TXT_01
        AND CON.RPT_COND_CONST_GRP_ID  IN (#equipAlloc#, #serviceAlloc#, #suplyAlloc#)
        AND SCB.EZCANCELFLAG            = '0'
        AND SCMB.EZCANCELFLAG           = '0'
        AND SCBA.EZCANCELFLAG(+)        = '0'
        AND CON.EZCANCELFLAG            = '0'
        GROUP BY SCB.DS_CONTR_BLLG_SCHD_PK
    </statement>

    <statement id="getAmtByInvBase" parameterClass="Map" resultClass="Map">
        SELECT
            SIL.DS_CONTR_BLLG_SCHD_PK
           ,DAR.DFRD_REV_FLG
           ,NVL(DAR.DFRD_ACCTG_RULE_DURN_AOT, 0) AS DFRD_ACCTG_RULE_DURN_AOT
           ,SUM(CASE WHEN DAR.DFRD_REV_FLG = 'Y' AND CON.RPT_COND_CONST_GRP_ID = #equipAlloc#   THEN SILA.INV_LINE_DEAL_NET_AMT ELSE 0 END) AS EQP_SUM
           ,SUM(CASE WHEN DAR.DFRD_REV_FLG = 'Y' AND CON.RPT_COND_CONST_GRP_ID = #serviceAlloc# THEN SILA.INV_LINE_DEAL_NET_AMT ELSE 0 END) AS SVC_SUM
           ,SUM(CASE WHEN DAR.DFRD_REV_FLG = 'Y' AND CON.RPT_COND_CONST_GRP_ID = #suplyAlloc#   THEN SILA.INV_LINE_DEAL_NET_AMT ELSE 0 END) AS SUP_SUM
           ,SUM(CASE WHEN DAR.DFRD_REV_FLG = 'N' AND CON.RPT_COND_CONST_GRP_ID = #equipAlloc#   THEN SILA.INV_LINE_DEAL_NET_AMT ELSE 0 END) AS EQP_SUM_N
           ,SUM(CASE WHEN DAR.DFRD_REV_FLG = 'N' AND CON.RPT_COND_CONST_GRP_ID = #serviceAlloc# THEN SILA.INV_LINE_DEAL_NET_AMT ELSE 0 END) AS SVC_SUM_N
           ,SUM(CASE WHEN DAR.DFRD_REV_FLG = 'N' AND CON.RPT_COND_CONST_GRP_ID = #suplyAlloc#   THEN SILA.INV_LINE_DEAL_NET_AMT ELSE 0 END) AS SUP_SUM_N
        FROM
            SVC_INV_LINE               SIL
           ,SVC_INV_LINE_ALLOC         SILA
           ,DFRD_ACCTG_RULE            DAR
           ,RPT_COND_CONST             CON
        WHERE
            SIL.GLBL_CMPY_CD            = #glblCmpyCd#
        AND SIL.DS_CONTR_BLLG_SCHD_PK   = #dsContrBllgSchdPk#
        AND SIL.GLBL_CMPY_CD            = SILA.GLBL_CMPY_CD
        AND SIL.SVC_INV_LINE_PK         = SILA.SVC_INV_LINE_PK
        AND SILA.GLBL_CMPY_CD           = DAR.GLBL_CMPY_CD(+)
        AND SILA.DFRD_ACCTG_RULE_CD     = DAR.DFRD_ACCTG_RULE_CD(+)
        AND SILA.GLBL_CMPY_CD           = CON.GLBL_CMPY_CD
        AND SILA.COA_ACCT_CD            = CON.RPT_COND_CONST_VAL_TXT_01
        AND CON.RPT_COND_CONST_GRP_ID  IN (#equipAlloc#, #serviceAlloc#, #suplyAlloc#)
        AND SIL.EZCANCELFLAG            = '0'
        AND SILA.EZCANCELFLAG           = '0'
        AND DAR.EZCANCELFLAG(+)         = '0'
        AND CON.EZCANCELFLAG            = '0'
        GROUP BY SIL.DS_CONTR_BLLG_SCHD_PK, DAR.DFRD_REV_FLG, DAR.DFRD_ACCTG_RULE_DURN_AOT
    </statement>

    <statement id="getAmtByInvUsgAct" parameterClass="Map" resultClass="Map">
        SELECT
            SIL.DS_CONTR_BLLG_SCHD_PK
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #equipAlloc#   THEN SILA.INV_LINE_DEAL_NET_AMT ELSE 0 END) AS EQP_SUM
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #serviceAlloc# THEN SILA.INV_LINE_DEAL_NET_AMT ELSE 0 END) AS SVC_SUM
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #suplyAlloc#   THEN SILA.INV_LINE_DEAL_NET_AMT ELSE 0 END) AS SUP_SUM
        FROM
            SVC_INV_LINE               SIL
           ,SVC_INV_LINE_ALLOC         SILA
           ,RPT_COND_CONST             CON
        WHERE
            SIL.GLBL_CMPY_CD            = #glblCmpyCd#
        AND SIL.DS_CONTR_BLLG_SCHD_PK   = #dsContrBllgSchdPk#
        AND SIL.GLBL_CMPY_CD            = SILA.GLBL_CMPY_CD
        AND SIL.SVC_INV_LINE_PK         = SILA.SVC_INV_LINE_PK
        AND SILA.GLBL_CMPY_CD           = CON.GLBL_CMPY_CD
        AND SILA.COA_ACCT_CD            = CON.RPT_COND_CONST_VAL_TXT_01
        AND CON.RPT_COND_CONST_GRP_ID  IN (#equipAlloc#, #serviceAlloc#, #suplyAlloc#)
        AND SIL.EZCANCELFLAG            = '0'
        AND SILA.EZCANCELFLAG           = '0'
        AND CON.EZCANCELFLAG            = '0'
        GROUP BY SIL.DS_CONTR_BLLG_SCHD_PK
    </statement>

    <statement id="getAmtByDefNotRec" parameterClass="Map" resultClass="Map">
        SELECT
            DISC.DS_INV_SLS_CR_PK
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #equipAlloc#   THEN DISC.DEAL_SCHD_REV_AMT ELSE NULL END) AS EQP_SUM
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #serviceAlloc# THEN DISC.DEAL_SCHD_REV_AMT ELSE NULL END) AS SVC_SUM
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #suplyAlloc#   THEN DISC.DEAL_SCHD_REV_AMT ELSE NULL END) AS SUP_SUM
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #misc1#        THEN DISC.DEAL_SCHD_REV_AMT ELSE NULL END) AS MI1_SUM
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #misc2#        THEN DISC.DEAL_SCHD_REV_AMT ELSE NULL END) AS MI2_SUM
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #equipAlloc#   THEN DISC.DEAL_DFRD_BAL_AMT ELSE NULL END) - SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #equipAlloc#   THEN DISC.DEAL_SCHD_REV_AMT ELSE NULL END) AS EQP_SUM_DF
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #serviceAlloc# THEN DISC.DEAL_DFRD_BAL_AMT ELSE NULL END) - SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #serviceAlloc# THEN DISC.DEAL_SCHD_REV_AMT ELSE NULL END) AS SVC_SUM_DF
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #suplyAlloc#   THEN DISC.DEAL_DFRD_BAL_AMT ELSE NULL END) - SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #suplyAlloc#   THEN DISC.DEAL_SCHD_REV_AMT ELSE NULL END) AS SUP_SUM_DF
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #misc1#        THEN DISC.DEAL_DFRD_BAL_AMT ELSE NULL END) - SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #misc1#        THEN DISC.DEAL_SCHD_REV_AMT ELSE NULL END) AS MI1_SUM_DF
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #misc2#        THEN DISC.DEAL_DFRD_BAL_AMT ELSE NULL END) - SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #misc2#        THEN DISC.DEAL_SCHD_REV_AMT ELSE NULL END) AS MI2_SUM_DF
        FROM
            DS_INV_SLS_CR              DISC
           ,RPT_COND_CONST             CON
        WHERE
            DISC.GLBL_CMPY_CD            = #glblCmpyCd#
        AND DISC.DS_INV_SLS_CR_PK        = #dsInvSlsCrPk#
        AND DISC.NEXT_REV_RECOG_DT   &lt;= TO_CHAR(LAST_DAY(TO_DATE(#trgtDt#, 'YYYYMMDD')), 'YYYYMMDD')
        AND DISC.DFRD_ACCTG_RULE_CD      = #deffered#
        AND DISC.GLBL_CMPY_CD            = CON.GLBL_CMPY_CD
        AND DISC.COA_ACCT_CD             = CON.RPT_COND_CONST_VAL_TXT_01
        AND CON.RPT_COND_CONST_GRP_ID    IN (#equipAlloc#, #serviceAlloc#, #suplyAlloc#, #misc1#, #misc2#)
        AND DISC.EZCANCELFLAG            = '0'
        AND CON.EZCANCELFLAG             = '0'
        GROUP BY DISC.DS_INV_SLS_CR_PK
    </statement>

    <statement id="getAmtByDefRec" parameterClass="Map" resultClass="Map">
        SELECT
            DISC.DS_INV_SLS_CR_PK
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #equipAlloc#   THEN AJE.JRNL_DEAL_AMT ELSE NULL END)      AS EQP_SUM
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #serviceAlloc# THEN AJE.JRNL_DEAL_AMT ELSE NULL END)      AS SVC_SUM
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #suplyAlloc#   THEN AJE.JRNL_DEAL_AMT ELSE NULL END)      AS SUP_SUM
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #misc1#        THEN AJE.JRNL_DEAL_AMT ELSE NULL END)      AS MI1_SUM
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #misc2#        THEN AJE.JRNL_DEAL_AMT ELSE NULL END)      AS MI2_SUM
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #equipAlloc#   THEN DISC.DEAL_DFRD_BAL_AMT ELSE NULL END) AS EQP_SUM_DF
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #serviceAlloc# THEN DISC.DEAL_DFRD_BAL_AMT ELSE NULL END) AS SVC_SUM_DF
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #suplyAlloc#   THEN DISC.DEAL_DFRD_BAL_AMT ELSE NULL END) AS SUP_SUM_DF
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #misc1#        THEN DISC.DEAL_DFRD_BAL_AMT ELSE NULL END) AS MI1_SUM_DF
           ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #misc2#        THEN DISC.DEAL_DFRD_BAL_AMT ELSE NULL END) AS MI2_SUM_DF
        FROM
            DS_INV_SLS_CR              DISC
           ,AJE_INV_ACCT_DIST          AJE
           ,RPT_COND_CONST             CON
        WHERE
            DISC.GLBL_CMPY_CD            = #glblCmpyCd#
        AND DISC.DS_INV_SLS_CR_PK        = #dsInvSlsCrPk#
        AND DISC.NEXT_REV_RECOG_DT       &gt; TO_CHAR(LAST_DAY(TO_DATE(#trgtDt#, 'YYYYMMDD')), 'YYYYMMDD')
        AND DISC.DFRD_ACCTG_RULE_CD      = #deffered#
        AND DISC.GLBL_CMPY_CD            = CON.GLBL_CMPY_CD
        AND DISC.COA_ACCT_CD             = CON.RPT_COND_CONST_VAL_TXT_01
        AND CON.RPT_COND_CONST_GRP_ID    IN (#equipAlloc#, #serviceAlloc#, #suplyAlloc#, #misc1#, #misc2#)
        AND DISC.GLBL_CMPY_CD            = AJE.GLBL_CMPY_CD
        AND DISC.DS_INV_SLS_CR_PK        = AJE.DS_INV_SLS_CR_PK
        AND SUBSTR(AJE.GL_DT, 0, 6)      = SUBSTR(#trgtDt#, 0, 6)
        AND AJE.DFRD_REV_GL_STRG_FLG     = 'N'
        AND AJE.AJE_COA_ACCT_CD          = CON.RPT_COND_CONST_VAL_TXT_01
        AND DISC.EZCANCELFLAG            = '0'
        AND CON.EZCANCELFLAG             = '0'
        AND AJE.EZCANCELFLAG             = '0'
        GROUP BY DISC.DS_INV_SLS_CR_PK
    </statement>

    <statement id="getAmtByInvUsgEst" parameterClass="Map" resultClass="Map">
        SELECT 
            T_SUM.DS_CONTR_BLLG_SCHD_PK
           ,T_SUM.SVC_INV_NUM
           ,ROUND(AVG(T_SUM.EQP_SUM), 2) AS REV_RECOG_AMT_EQP
           ,ROUND(AVG(T_SUM.SVC_SUM), 2) AS REV_RECOG_AMT_SVC
           ,ROUND(AVG(T_SUM.SUP_SUM), 2) AS REV_RECOG_AMT_SUP
        FROM
            (
            SELECT
                SIL.DS_CONTR_BLLG_SCHD_PK
               ,SIL.SVC_INV_NUM
               ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #equipAlloc#   THEN SILA.INV_LINE_DEAL_NET_AMT ELSE 0 END) AS EQP_SUM
               ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #serviceAlloc# THEN SILA.INV_LINE_DEAL_NET_AMT ELSE 0 END) AS SVC_SUM
               ,SUM(CASE WHEN CON.RPT_COND_CONST_GRP_ID = #suplyAlloc#   THEN SILA.INV_LINE_DEAL_NET_AMT ELSE 0 END) AS SUP_SUM
            FROM
                SVC_INV_LINE               SIL
               ,SVC_INV_LINE_ALLOC         SILA
               ,RPT_COND_CONST             CON
            WHERE
                SIL.GLBL_CMPY_CD            = #glblCmpyCd#
            AND SIL.DS_CONTR_BLLG_SCHD_PK   = #dsContrBllgSchdPk#
            AND SIL.GLBL_CMPY_CD            = SILA.GLBL_CMPY_CD
            AND SIL.SVC_INV_LINE_PK         = SILA.SVC_INV_LINE_PK
            AND SILA.GLBL_CMPY_CD           = CON.GLBL_CMPY_CD
            AND SILA.COA_ACCT_CD            = CON.RPT_COND_CONST_VAL_TXT_01
            AND CON.RPT_COND_CONST_GRP_ID  IN (#equipAlloc#, #serviceAlloc#, #suplyAlloc#)
            AND SIL.EZCANCELFLAG            = '0'
            AND SILA.EZCANCELFLAG           = '0'
            AND CON.EZCANCELFLAG            = '0'
            GROUP BY SIL.DS_CONTR_BLLG_SCHD_PK, SIL.SVC_INV_NUM
        ) T_SUM
        GROUP BY T_SUM.DS_CONTR_BLLG_SCHD_PK, T_SUM.SVC_INV_NUM
    </statement>

    <statement id="getBillingMeterInfo" parameterClass="Map" resultClass="Map">
        SELECT
            NVL(CBM.BLLG_MIN_CNT, 0)            AS BLLG_MIN_CNT
           ,NVL(CBM.BLLG_ROLL_OVER_RATIO, 0)    AS BLLG_ROLL_OVER_RATIO
           ,NVL(CBM.ROLL_OVER_CNT, 0)           AS ROLL_OVER_CNT
           ,NVL(CBM.BLLG_FREE_COPY_CNT, 0)      AS BLLG_FREE_COPY_CNT
           ,NVL(CBM.BLLG_MIN_AMT_RATE, 0)       AS BLLG_MIN_AMT_RATE
           ,CBM.XS_CHRG_TP_CD                   AS XS_CHRG_TP_CD
        FROM
            DS_CONTR_BLLG_MTR             CBM
        WHERE
            CBM.GLBL_CMPY_CD            = #glblCmpyCd#
        AND CBM.DS_CONTR_BLLG_MTR_PK    = #dsContrBllgMtrPk#
        AND CBM.EZCANCELFLAG            = '0'
   </statement>

    <statement id="getAmtByNoFltUsgEst" parameterClass="Map" resultClass="Map">
        SELECT
            SUM(NVL(ADC.AVG_MTR_READ_CNT, 0)) * #bcmAot# * #avgDt#  AS MTR_CNT
        FROM
            DS_CONTR_BLLG_MTR             CBM
           ,CONTR_PHYS_BLLG_MTR_RELN      BMR
           ,SVC_PHYS_MTR                  PMT
           ,SVC_ADCV_BY_SER               ADC
        WHERE
            CBM.GLBL_CMPY_CD            = #glblCmpyCd#
        AND CBM.DS_CONTR_BLLG_MTR_PK    = #dsContrBllgMtrPk#
        AND CBM.GLBL_CMPY_CD            = BMR.GLBL_CMPY_CD
        AND CBM.DS_CONTR_BLLG_MTR_PK    = BMR.DS_CONTR_BLLG_MTR_PK
        AND BMR.GLBL_CMPY_CD            = PMT.GLBL_CMPY_CD
        AND BMR.SVC_PHYS_MTR_PK         = PMT.SVC_PHYS_MTR_PK
        AND PMT.GLBL_CMPY_CD            = ADC.GLBL_CMPY_CD
        AND PMT.SVC_MACH_MSTR_PK        = ADC.SVC_MACH_MSTR_PK
        AND PMT.MDL_MTR_LB_CD           = ADC.MTR_LB_CD
        AND CBM.EZCANCELFLAG            = '0'
        AND BMR.EZCANCELFLAG            = '0'
        AND PMT.EZCANCELFLAG            = '0'
        AND ADC.EZCANCELFLAG            = '0'
        GROUP BY CBM.DS_CONTR_BLLG_MTR_PK
   </statement>

    <statement id="getAmtByFltUsgEst" parameterClass="Map" resultClass="Map">
        SELECT
            SUM(NVL(ADC.AVG_MTR_READ_CNT, 0)) * #bcmAot# * #avgDt#  AS MTR_CNT
        FROM
            DS_CONTR_DTL                      DCD
           ,DS_CONTR_BLLG_MTR                 CBM
           ,CONTR_PHYS_BLLG_MTR_RELN          BMR
           ,SVC_PHYS_MTR                      PMT
           ,SVC_ADCV_BY_SER                   ADC
        WHERE
            DCD.GLBL_CMPY_CD                  = #glblCmpyCd#
        AND DCD.DS_CONTR_PK                   = #dsContrPk#
        AND DCD.DS_CONTR_DTL_TP_CD           != #fleet#
        AND DCD.GLBL_CMPY_CD                  = CBM.GLBL_CMPY_CD
        AND DCD.DS_CONTR_DTL_PK               = CBM.DS_CONTR_DTL_PK
        AND CBM.BLLG_MTR_LB_CD                = #bllgMtrLbCd#
        AND CBM.GLBL_CMPY_CD                  = BMR.GLBL_CMPY_CD
        AND CBM.DS_CONTR_BLLG_MTR_PK          = BMR.DS_CONTR_BLLG_MTR_PK
        AND BMR.GLBL_CMPY_CD                  = PMT.GLBL_CMPY_CD
        AND BMR.SVC_PHYS_MTR_PK               = PMT.SVC_PHYS_MTR_PK
        AND PMT.GLBL_CMPY_CD                  = ADC.GLBL_CMPY_CD
        AND PMT.SVC_MACH_MSTR_PK              = ADC.SVC_MACH_MSTR_PK
        AND PMT.MDL_MTR_LB_CD                 = ADC.MTR_LB_CD
        AND DCD.EZCANCELFLAG                  = '0'
        AND CBM.EZCANCELFLAG                  = '0'
        AND BMR.EZCANCELFLAG                  = '0'
        AND PMT.EZCANCELFLAG                  = '0'
        AND ADC.EZCANCELFLAG                  = '0'
        GROUP BY CBM.DS_CONTR_BLLG_MTR_PK
    </statement>

    <statement id="getMtrCopyQtyList" parameterClass="Map" resultClass="Map">
        SELECT
             CBM.XS_MTR_COPY_QTY
            ,CBM.XS_MTR_AMT_RATE
        FROM
             DS_CONTR_BLLG_SCHD               CBS
            ,DS_CONTR_BLLG_SCHD_MTR           CBM
        WHERE
            CBS.GLBL_CMPY_CD                  =  #glblCmpyCd#
        AND CBS.DS_CONTR_BLLG_SCHD_PK         =  #dsContrBllgSchdPk#
        AND CBS.GLBL_CMPY_CD                  =  CBM.GLBL_CMPY_CD
        AND CBS.DS_CONTR_BLLG_SCHD_SMRY_PK    =  CBM.DS_CONTR_BLLG_SCHD_SMRY_PK
        AND CBS.EZCANCELFLAG                  =  '0'
        AND CBM.EZCANCELFLAG                  =  '0'
        ORDER BY
            CBM.XS_MTR_COPY_QTY DESC
   </statement>

</sqlMap>
