//This file was automatically generated by Common Business Component Interface Definition Document and XLA200710010.
// Generated on    :20240110132918000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :CommonBusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSZC001001PMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.parts;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSZC001001 Common Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSZC001001PMsg extends EZDPMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** GLBL_CMPY_CD*/
	public final EZDPStringItem              glblCmpyCd;

    /** SLS_DT*/
	public final EZDPDateItem              slsDt;

    /** XX_MODE_CD*/
	public final EZDPStringItem              xxModeCd;

    /** SVC_CONFIG_MSTR_PK*/
	public final EZDPBigDecimalItem              svcConfigMstrPk;

    /** SVC_CONFIG_VRSN_NUM*/
	public final EZDPBigDecimalItem              svcConfigVrsnNum;

    /** SVC_MACH_MSTR_PK*/
	public final EZDPBigDecimalItem              svcMachMstrPk;

    /** SER_NUM*/
	public final EZDPStringItem              serNum;

    /** MDSE_CD*/
	public final EZDPStringItem              mdseCd;

    /** CUST_MACH_CTRL_NUM*/
	public final EZDPStringItem              custMachCtrlNum;

    /** SVC_MACH_SQ_NUM*/
	public final EZDPBigDecimalItem              svcMachSqNum;

    /** SVC_MACH_TP_CD*/
	public final EZDPStringItem              svcMachTpCd;

    /** SVC_MACH_MSTR_STS_CD*/
	public final EZDPStringItem              svcMachMstrStsCd;

    /** SHIP_TO_CUST_CD*/
	public final EZDPStringItem              shipToCustCd;

    /** LOC_NM*/
	public final EZDPStringItem              locNm;

    /** ADDL_LOC_NM*/
	public final EZDPStringItem              addlLocNm;

    /** FIRST_LINE_ADDR*/
	public final EZDPStringItem              firstLineAddr;

    /** SCD_LINE_ADDR*/
	public final EZDPStringItem              scdLineAddr;

    /** THIRD_LINE_ADDR*/
	public final EZDPStringItem              thirdLineAddr;

    /** FRTH_LINE_ADDR*/
	public final EZDPStringItem              frthLineAddr;

    /** CTY_ADDR*/
	public final EZDPStringItem              ctyAddr;

    /** ST_CD*/
	public final EZDPStringItem              stCd;

    /** PROV_NM*/
	public final EZDPStringItem              provNm;

    /** CNTY_NM*/
	public final EZDPStringItem              cntyNm;

    /** POST_CD*/
	public final EZDPStringItem              postCd;

    /** CTRY_CD*/
	public final EZDPStringItem              ctryCd;

    /** SVC_MACH_FL_NM*/
	public final EZDPStringItem              svcMachFlNm;

    /** PRF_TECH_CD*/
	public final EZDPStringItem              prfTechCd;

    /** STK_STS_CD*/
	public final EZDPStringItem              stkStsCd;

    /** SHIP_FROM_WH_CD*/
	public final EZDPStringItem              shipFromWhCd;

    /** SHIP_DT*/
	public final EZDPDateItem              shipDt;

    /** ISTL_DT*/
	public final EZDPDateItem              istlDt;

    /** SVC_MACH_RMV_DT*/
	public final EZDPDateItem              svcMachRmvDt;

    /** RTRN_TO_WH_CD*/
	public final EZDPStringItem              rtrnToWhCd;

    /** DRUM_EXCH_DT*/
	public final EZDPDateItem              drumExchDt;

    /** EXCH_DRUM_MTR_CNT*/
	public final EZDPBigDecimalItem              exchDrumMtrCnt;

    /** LAST_SVC_CALL_DT*/
	public final EZDPDateItem              lastSvcCallDt;

    /** TOT_SVC_VISIT_CNT*/
	public final EZDPBigDecimalItem              totSvcVisitCnt;

    /** LAST_TECH_VISIT_DT*/
	public final EZDPDateItem              lastTechVisitDt;

    /** LAST_TECH_VISIT_MTR_CNT*/
	public final EZDPBigDecimalItem              lastTechVisitMtrCnt;

    /** LAST_PRVNT_MAINT_DT*/
	public final EZDPDateItem              lastPrvntMaintDt;

    /** LAST_PRVNT_MAINT_MTR_CNT*/
	public final EZDPBigDecimalItem              lastPrvntMaintMtrCnt;

    /** LAST_SVC_CALL_VISIT_DT*/
	public final EZDPDateItem              lastSvcCallVisitDt;

    /** LAST_SVC_CALL_MTR_CNT*/
	public final EZDPBigDecimalItem              lastSvcCallMtrCnt;

    /** CPO_ORD_NUM*/
	public final EZDPStringItem              cpoOrdNum;

    /** CPO_DTL_LINE_NUM*/
	public final EZDPStringItem              cpoDtlLineNum;

    /** CPO_DTL_LINE_SUB_NUM*/
	public final EZDPStringItem              cpoDtlLineSubNum;

    /** CUST_ISS_PO_NUM*/
	public final EZDPStringItem              custIssPoNum;

    /** SHPG_PLN_NUM*/
	public final EZDPStringItem              shpgPlnNum;

    /** SO_NUM*/
	public final EZDPStringItem              soNum;

    /** SO_SLP_NUM*/
	public final EZDPStringItem              soSlpNum;

    /** RMA_NUM*/
	public final EZDPStringItem              rmaNum;

    /** RMA_LINE_NUM*/
	public final EZDPStringItem              rmaLineNum;

    /** RMA_LINE_SUB_NUM*/
	public final EZDPStringItem              rmaLineSubNum;

    /** RMA_LINE_SUB_TRX_NUM*/
	public final EZDPStringItem              rmaLineSubTrxNum;

    /** USR_DLR_TP_CD*/
	public final EZDPStringItem              usrDlrTpCd;

    /** AUTO_CRAT_FLG*/
	public final EZDPStringItem              autoCratFlg;

    /** NEW_SER_NUM*/
	public final EZDPStringItem              newSerNum;

    /** OLD_SER_NUM*/
	public final EZDPStringItem              oldSerNum;

    /** ISTL_STS_UPD_CPLT_FLG*/
	public final EZDPStringItem              istlStsUpdCpltFlg;

    /** DS_ORD_TP_CD*/
	public final EZDPStringItem              dsOrdTpCd;

    /** DS_ORD_RSN_CD*/
	public final EZDPStringItem              dsOrdRsnCd;

    /** SVC_CONFIG_TP_CD*/
	public final EZDPStringItem              svcConfigTpCd;

    /** ORG_CD*/
	public final EZDPStringItem              orgCd;

    /** ORG_LAYER_NUM*/
	public final EZDPBigDecimalItem              orgLayerNum;

    /** SVC_CONFIG_MSTR_DTL_PK*/
	public final EZDPBigDecimalItem              svcConfigMstrDtlPk;

    /** PRNT_SVC_MACH_MSTR_PK*/
	public final EZDPBigDecimalItem              prntSvcMachMstrPk;

    /** IWR_COND_CD*/
	public final EZDPStringItem              iwrCondCd;

    /** EFF_FROM_DT*/
	public final EZDPDateItem              effFromDt;

    /** EFF_THRU_DT*/
	public final EZDPDateItem              effThruDt;

    /** SVC_MACH_USG_STS_CD*/
	public final EZDPStringItem              svcMachUsgStsCd;

    /** PRNT_SER_NUM*/
	public final EZDPStringItem              prntSerNum;

    /** SVC_MACH_TRX_TP_CD*/
	public final EZDPStringItem              svcMachTrxTpCd;

    /** SW_LIC_ID*/
	public final EZDPStringItem              swLicId;

    /** CTRL_FLD_TXT_01*/
	public final EZDPStringItem              ctrlFldTxt_01;

    /** CTRL_FLD_TXT_02*/
	public final EZDPStringItem              ctrlFldTxt_02;

    /** CTRL_FLD_TXT_03*/
	public final EZDPStringItem              ctrlFldTxt_03;

    /** CTRL_FLD_TXT_04*/
	public final EZDPStringItem              ctrlFldTxt_04;

    /** CTRL_FLD_TXT_05*/
	public final EZDPStringItem              ctrlFldTxt_05;

    /** CTRL_FLD_TXT_06*/
	public final EZDPStringItem              ctrlFldTxt_06;

    /** PRC_CONTR_NUM*/
	public final EZDPStringItem              prcContrNum;

    /** CORP_ADVTG_STS_CD*/
	public final EZDPStringItem              corpAdvtgStsCd;

    /** DS_PO_EXPR_DT*/
	public final EZDPDateItem              dsPoExprDt;

    /** HARD_DRIVE_RMV_INCL_FLG*/
	public final EZDPStringItem              hardDriveRmvInclFlg;

    /** HARD_DRIVE_ERASE_INCL_FLG*/
	public final EZDPStringItem              hardDriveEraseInclFlg;

    /** LEASE_RTRN_FEE_INCL_FLG*/
	public final EZDPStringItem              leaseRtrnFeeInclFlg;

    /** DS_KEY_ACCT_FLG*/
	public final EZDPStringItem              dsKeyAcctFlg;

    /** SVC_NTWK_CONN_STS_CD*/
	public final EZDPStringItem              svcNtwkConnStsCd;

    /** SLD_BY_LINE_BIZ_TP_CD*/
	public final EZDPStringItem              sldByLineBizTpCd;

    /** SVC_LIC_CNT*/
	public final EZDPBigDecimalItem              svcLicCnt;

    /** REQ_TECH_CD*/
	public final EZDPStringItem              reqTechCd;

    /** SVC_MACH_QTY*/
	public final EZDPBigDecimalItem              svcMachQty;

    /** xxCmptMachList*/
	public final business.parts.NSZC001001_xxCmptMachListPMsgArray              xxCmptMachList;

    /** xxNonPrfTechList*/
	public final business.parts.NSZC001001_xxNonPrfTechListPMsgArray              xxNonPrfTechList;

    /** TRX_HDR_NUM*/
	public final EZDPStringItem              trxHdrNum;

    /** TRX_LINE_NUM*/
	public final EZDPStringItem              trxLineNum;

    /** TRX_LINE_SUB_NUM*/
	public final EZDPStringItem              trxLineSubNum;

    /** SVC_MACH_MSTR_LOC_STS_CD*/
	public final EZDPStringItem              svcMachMstrLocStsCd;

    /** OWNR_ACCT_NUM*/
	public final EZDPStringItem              ownrAcctNum;

    /** OWNR_LOC_NUM*/
	public final EZDPStringItem              ownrLocNum;

    /** BILL_TO_ACCT_NUM*/
	public final EZDPStringItem              billToAcctNum;

    /** BILL_TO_LOC_NUM*/
	public final EZDPStringItem              billToLocNum;

    /** CUR_LOC_ACCT_NUM*/
	public final EZDPStringItem              curLocAcctNum;

    /** CUR_LOC_NUM*/
	public final EZDPStringItem              curLocNum;

    /** FLD_SVC_BR_CD*/
	public final EZDPStringItem              fldSvcBrCd;

    /** SVC_BY_LINE_BIZ_TP_CD*/
	public final EZDPStringItem              svcByLineBizTpCd;

    /** FIN_BR_CD*/
	public final EZDPStringItem              finBrCd;

    /** SHR_DLR_FLG*/
	public final EZDPStringItem              shrDlrFlg;

    /** IWR_RGTN_STS_CD*/
	public final EZDPStringItem              iwrRgtnStsCd;

    /** BIZ_HRS_SUN_FROM_TM*/
	public final EZDPStringItem              bizHrsSunFromTm;

    /** BIZ_HRS_SUN_TO_TM*/
	public final EZDPStringItem              bizHrsSunToTm;

    /** BIZ_HRS_MON_FRI_FROM_TM*/
	public final EZDPStringItem              bizHrsMonFriFromTm;

    /** BIZ_HRS_MON_FRI_TO_TM*/
	public final EZDPStringItem              bizHrsMonFriToTm;

    /** BIZ_HRS_SAT_FROM_TM*/
	public final EZDPStringItem              bizHrsSatFromTm;

    /** BIZ_HRS_SAT_TO_TM*/
	public final EZDPStringItem              bizHrsSatToTm;

    /** ENET_PLOT_FLG*/
	public final EZDPStringItem              enetPlotFlg;

    /** ENET_CMNT_TXT_01*/
	public final EZDPStringItem              enetCmntTxt_01;

    /** ENET_CMNT_TXT_02*/
	public final EZDPStringItem              enetCmntTxt_02;

    /** PICK_SVC_CONFIG_MSTR_PK*/
	public final EZDPBigDecimalItem              pickSvcConfigMstrPk;

    /** MAN_CRAT_FLG*/
	public final EZDPStringItem              manCratFlg;

    /** WTY_AUTO_CRAT_FLG*/
	public final EZDPStringItem              wtyAutoCratFlg;

    /** xxMsgIdList*/
	public final business.parts.NSZC001001_xxMsgIdListPMsgArray              xxMsgIdList;

    /** ISTL_BY_SVC_PRVD_PTY_CD*/
	public final EZDPStringItem              istlBySvcPrvdPtyCd;

    /** SVC_BY_SVC_PRVD_PTY_CD*/
	public final EZDPStringItem              svcBySvcPrvdPtyCd;

    /** XX_TRMN_FLG*/
	public final EZDPStringItem              xxTrmnFlg;


	/**
	 * NSZC001001PMsg is constructor.
	 * The initialization when the instance of NSZC001001PMsg is generated.
	 */
	public NSZC001001PMsg() {
		this(false, -1);
	}

	/**
	 * NSZC001001PMsg is constructor.
	 * The initialization when the instance of NSZC001001PMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSZC001001PMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		glblCmpyCd = (EZDPStringItem)newItem("glblCmpyCd");
		slsDt = (EZDPDateItem)newItem("slsDt");
		xxModeCd = (EZDPStringItem)newItem("xxModeCd");
		svcConfigMstrPk = (EZDPBigDecimalItem)newItem("svcConfigMstrPk");
		svcConfigVrsnNum = (EZDPBigDecimalItem)newItem("svcConfigVrsnNum");
		svcMachMstrPk = (EZDPBigDecimalItem)newItem("svcMachMstrPk");
		serNum = (EZDPStringItem)newItem("serNum");
		mdseCd = (EZDPStringItem)newItem("mdseCd");
		custMachCtrlNum = (EZDPStringItem)newItem("custMachCtrlNum");
		svcMachSqNum = (EZDPBigDecimalItem)newItem("svcMachSqNum");
		svcMachTpCd = (EZDPStringItem)newItem("svcMachTpCd");
		svcMachMstrStsCd = (EZDPStringItem)newItem("svcMachMstrStsCd");
		shipToCustCd = (EZDPStringItem)newItem("shipToCustCd");
		locNm = (EZDPStringItem)newItem("locNm");
		addlLocNm = (EZDPStringItem)newItem("addlLocNm");
		firstLineAddr = (EZDPStringItem)newItem("firstLineAddr");
		scdLineAddr = (EZDPStringItem)newItem("scdLineAddr");
		thirdLineAddr = (EZDPStringItem)newItem("thirdLineAddr");
		frthLineAddr = (EZDPStringItem)newItem("frthLineAddr");
		ctyAddr = (EZDPStringItem)newItem("ctyAddr");
		stCd = (EZDPStringItem)newItem("stCd");
		provNm = (EZDPStringItem)newItem("provNm");
		cntyNm = (EZDPStringItem)newItem("cntyNm");
		postCd = (EZDPStringItem)newItem("postCd");
		ctryCd = (EZDPStringItem)newItem("ctryCd");
		svcMachFlNm = (EZDPStringItem)newItem("svcMachFlNm");
		prfTechCd = (EZDPStringItem)newItem("prfTechCd");
		stkStsCd = (EZDPStringItem)newItem("stkStsCd");
		shipFromWhCd = (EZDPStringItem)newItem("shipFromWhCd");
		shipDt = (EZDPDateItem)newItem("shipDt");
		istlDt = (EZDPDateItem)newItem("istlDt");
		svcMachRmvDt = (EZDPDateItem)newItem("svcMachRmvDt");
		rtrnToWhCd = (EZDPStringItem)newItem("rtrnToWhCd");
		drumExchDt = (EZDPDateItem)newItem("drumExchDt");
		exchDrumMtrCnt = (EZDPBigDecimalItem)newItem("exchDrumMtrCnt");
		lastSvcCallDt = (EZDPDateItem)newItem("lastSvcCallDt");
		totSvcVisitCnt = (EZDPBigDecimalItem)newItem("totSvcVisitCnt");
		lastTechVisitDt = (EZDPDateItem)newItem("lastTechVisitDt");
		lastTechVisitMtrCnt = (EZDPBigDecimalItem)newItem("lastTechVisitMtrCnt");
		lastPrvntMaintDt = (EZDPDateItem)newItem("lastPrvntMaintDt");
		lastPrvntMaintMtrCnt = (EZDPBigDecimalItem)newItem("lastPrvntMaintMtrCnt");
		lastSvcCallVisitDt = (EZDPDateItem)newItem("lastSvcCallVisitDt");
		lastSvcCallMtrCnt = (EZDPBigDecimalItem)newItem("lastSvcCallMtrCnt");
		cpoOrdNum = (EZDPStringItem)newItem("cpoOrdNum");
		cpoDtlLineNum = (EZDPStringItem)newItem("cpoDtlLineNum");
		cpoDtlLineSubNum = (EZDPStringItem)newItem("cpoDtlLineSubNum");
		custIssPoNum = (EZDPStringItem)newItem("custIssPoNum");
		shpgPlnNum = (EZDPStringItem)newItem("shpgPlnNum");
		soNum = (EZDPStringItem)newItem("soNum");
		soSlpNum = (EZDPStringItem)newItem("soSlpNum");
		rmaNum = (EZDPStringItem)newItem("rmaNum");
		rmaLineNum = (EZDPStringItem)newItem("rmaLineNum");
		rmaLineSubNum = (EZDPStringItem)newItem("rmaLineSubNum");
		rmaLineSubTrxNum = (EZDPStringItem)newItem("rmaLineSubTrxNum");
		usrDlrTpCd = (EZDPStringItem)newItem("usrDlrTpCd");
		autoCratFlg = (EZDPStringItem)newItem("autoCratFlg");
		newSerNum = (EZDPStringItem)newItem("newSerNum");
		oldSerNum = (EZDPStringItem)newItem("oldSerNum");
		istlStsUpdCpltFlg = (EZDPStringItem)newItem("istlStsUpdCpltFlg");
		dsOrdTpCd = (EZDPStringItem)newItem("dsOrdTpCd");
		dsOrdRsnCd = (EZDPStringItem)newItem("dsOrdRsnCd");
		svcConfigTpCd = (EZDPStringItem)newItem("svcConfigTpCd");
		orgCd = (EZDPStringItem)newItem("orgCd");
		orgLayerNum = (EZDPBigDecimalItem)newItem("orgLayerNum");
		svcConfigMstrDtlPk = (EZDPBigDecimalItem)newItem("svcConfigMstrDtlPk");
		prntSvcMachMstrPk = (EZDPBigDecimalItem)newItem("prntSvcMachMstrPk");
		iwrCondCd = (EZDPStringItem)newItem("iwrCondCd");
		effFromDt = (EZDPDateItem)newItem("effFromDt");
		effThruDt = (EZDPDateItem)newItem("effThruDt");
		svcMachUsgStsCd = (EZDPStringItem)newItem("svcMachUsgStsCd");
		prntSerNum = (EZDPStringItem)newItem("prntSerNum");
		svcMachTrxTpCd = (EZDPStringItem)newItem("svcMachTrxTpCd");
		swLicId = (EZDPStringItem)newItem("swLicId");
		ctrlFldTxt_01 = (EZDPStringItem)newItem("ctrlFldTxt_01");
		ctrlFldTxt_02 = (EZDPStringItem)newItem("ctrlFldTxt_02");
		ctrlFldTxt_03 = (EZDPStringItem)newItem("ctrlFldTxt_03");
		ctrlFldTxt_04 = (EZDPStringItem)newItem("ctrlFldTxt_04");
		ctrlFldTxt_05 = (EZDPStringItem)newItem("ctrlFldTxt_05");
		ctrlFldTxt_06 = (EZDPStringItem)newItem("ctrlFldTxt_06");
		prcContrNum = (EZDPStringItem)newItem("prcContrNum");
		corpAdvtgStsCd = (EZDPStringItem)newItem("corpAdvtgStsCd");
		dsPoExprDt = (EZDPDateItem)newItem("dsPoExprDt");
		hardDriveRmvInclFlg = (EZDPStringItem)newItem("hardDriveRmvInclFlg");
		hardDriveEraseInclFlg = (EZDPStringItem)newItem("hardDriveEraseInclFlg");
		leaseRtrnFeeInclFlg = (EZDPStringItem)newItem("leaseRtrnFeeInclFlg");
		dsKeyAcctFlg = (EZDPStringItem)newItem("dsKeyAcctFlg");
		svcNtwkConnStsCd = (EZDPStringItem)newItem("svcNtwkConnStsCd");
		sldByLineBizTpCd = (EZDPStringItem)newItem("sldByLineBizTpCd");
		svcLicCnt = (EZDPBigDecimalItem)newItem("svcLicCnt");
		reqTechCd = (EZDPStringItem)newItem("reqTechCd");
		svcMachQty = (EZDPBigDecimalItem)newItem("svcMachQty");
		xxCmptMachList = (business.parts.NSZC001001_xxCmptMachListPMsgArray)newMsgArray("xxCmptMachList");
		xxNonPrfTechList = (business.parts.NSZC001001_xxNonPrfTechListPMsgArray)newMsgArray("xxNonPrfTechList");
		trxHdrNum = (EZDPStringItem)newItem("trxHdrNum");
		trxLineNum = (EZDPStringItem)newItem("trxLineNum");
		trxLineSubNum = (EZDPStringItem)newItem("trxLineSubNum");
		svcMachMstrLocStsCd = (EZDPStringItem)newItem("svcMachMstrLocStsCd");
		ownrAcctNum = (EZDPStringItem)newItem("ownrAcctNum");
		ownrLocNum = (EZDPStringItem)newItem("ownrLocNum");
		billToAcctNum = (EZDPStringItem)newItem("billToAcctNum");

		billToLocNum = (EZDPStringItem)newItem("billToLocNum");
		curLocAcctNum = (EZDPStringItem)newItem("curLocAcctNum");
		curLocNum = (EZDPStringItem)newItem("curLocNum");
		fldSvcBrCd = (EZDPStringItem)newItem("fldSvcBrCd");
		svcByLineBizTpCd = (EZDPStringItem)newItem("svcByLineBizTpCd");
		finBrCd = (EZDPStringItem)newItem("finBrCd");
		shrDlrFlg = (EZDPStringItem)newItem("shrDlrFlg");
		iwrRgtnStsCd = (EZDPStringItem)newItem("iwrRgtnStsCd");
		bizHrsSunFromTm = (EZDPStringItem)newItem("bizHrsSunFromTm");
		bizHrsSunToTm = (EZDPStringItem)newItem("bizHrsSunToTm");
		bizHrsMonFriFromTm = (EZDPStringItem)newItem("bizHrsMonFriFromTm");
		bizHrsMonFriToTm = (EZDPStringItem)newItem("bizHrsMonFriToTm");
		bizHrsSatFromTm = (EZDPStringItem)newItem("bizHrsSatFromTm");
		bizHrsSatToTm = (EZDPStringItem)newItem("bizHrsSatToTm");
		enetPlotFlg = (EZDPStringItem)newItem("enetPlotFlg");
		enetCmntTxt_01 = (EZDPStringItem)newItem("enetCmntTxt_01");
		enetCmntTxt_02 = (EZDPStringItem)newItem("enetCmntTxt_02");
		pickSvcConfigMstrPk = (EZDPBigDecimalItem)newItem("pickSvcConfigMstrPk");
		manCratFlg = (EZDPStringItem)newItem("manCratFlg");
		wtyAutoCratFlg = (EZDPStringItem)newItem("wtyAutoCratFlg");
		xxMsgIdList = (business.parts.NSZC001001_xxMsgIdListPMsgArray)newMsgArray("xxMsgIdList");
		istlBySvcPrvdPtyCd = (EZDPStringItem)newItem("istlBySvcPrvdPtyCd");
		svcBySvcPrvdPtyCd = (EZDPStringItem)newItem("svcBySvcPrvdPtyCd");
		xxTrmnFlg = (EZDPStringItem)newItem("xxTrmnFlg");
	}

	/**
	 * get the type of array which is stored
	 * @return NSZC001001PMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSZC001001PMsgArray();
	}

	/**
	 * Definition of Sub class for Schema Item Array(Basic data,Visible Field)
	 */
	private static class NSZC001001PMsgSchemaContents1 {

		/**
		 * Array of Schema Items in Sub class(Basic data)
		 */
		private static final String[][] BASE_CONTENTS = {
		//["key name", "variable", "suffix", "array length", "item type", "digits", "after decimal point degits"] <- This is how to define.
			{"glblCmpyCd", "glblCmpyCd", null, null, TYPE_HANKAKUEISU, "4", null},
			{"slsDt", "slsDt", null, null, TYPE_NENTSUKIHI, "8", null},
			{"xxModeCd", "xxModeCd", null, null, TYPE_HANKAKUEISU, "2", null},
			{"svcConfigMstrPk", "svcConfigMstrPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
			{"svcConfigVrsnNum", "svcConfigVrsnNum", null, null, TYPE_SEISU_SYOSU, "3", "0"},
			{"svcMachMstrPk", "svcMachMstrPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
			{"serNum", "serNum", null, null, TYPE_HANKAKUEISU, "30", null},
			{"mdseCd", "mdseCd", null, null, TYPE_HANKAKUEISU, "16", null},
			{"custMachCtrlNum", "custMachCtrlNum", null, null, TYPE_HANKAKUEISU, "30", null},
			{"svcMachSqNum", "svcMachSqNum", null, null, TYPE_SEISU_SYOSU, "4", "0"},
			{"svcMachTpCd", "svcMachTpCd", null, null, TYPE_HANKAKUEISU, "1", null},
			{"svcMachMstrStsCd", "svcMachMstrStsCd", null, null, TYPE_HANKAKUEISU, "5", null},
			{"shipToCustCd", "shipToCustCd", null, null, TYPE_HANKAKUEISU, "20", null},
			{"locNm", "locNm", null, null, TYPE_HANKAKUEISU, "60", null},
			{"addlLocNm", "addlLocNm", null, null, TYPE_HANKAKUEISU, "60", null},
			{"firstLineAddr", "firstLineAddr", null, null, TYPE_HANKAKUEISU, "60", null},
			{"scdLineAddr", "scdLineAddr", null, null, TYPE_HANKAKUEISU, "60", null},
			{"thirdLineAddr", "thirdLineAddr", null, null, TYPE_HANKAKUEISU, "60", null},
			{"frthLineAddr", "frthLineAddr", null, null, TYPE_HANKAKUEISU, "60", null},
			{"ctyAddr", "ctyAddr", null, null, TYPE_HANKAKUEISU, "25", null},
			{"stCd", "stCd", null, null, TYPE_HANKAKUEISU, "2", null},
			{"provNm", "provNm", null, null, TYPE_HANKAKUEISU, "25", null},
			{"cntyNm", "cntyNm", null, null, TYPE_HANKAKUEISU, "30", null},
			{"postCd", "postCd", null, null, TYPE_HANKAKUEISU, "15", null},
			{"ctryCd", "ctryCd", null, null, TYPE_HANKAKUEISU, "3", null},
			{"svcMachFlNm", "svcMachFlNm", null, null, TYPE_HANKAKUEISU, "60", null},
			{"prfTechCd", "prfTechCd", null, null, TYPE_HANKAKUEISU, "20", null},
			{"stkStsCd", "stkStsCd", null, null, TYPE_HANKAKUEISU, "1", null},
			{"shipFromWhCd", "shipFromWhCd", null, null, TYPE_HANKAKUEISU, "20", null},
			{"shipDt", "shipDt", null, null, TYPE_NENTSUKIHI, "8", null},
			{"istlDt", "istlDt", null, null, TYPE_NENTSUKIHI, "8", null},
			{"svcMachRmvDt", "svcMachRmvDt", null, null, TYPE_NENTSUKIHI, "8", null},
			{"rtrnToWhCd", "rtrnToWhCd", null, null, TYPE_HANKAKUEISU, "20", null},
			{"drumExchDt", "drumExchDt", null, null, TYPE_NENTSUKIHI, "8", null},
			{"exchDrumMtrCnt", "exchDrumMtrCnt", null, null, TYPE_SEISU_SYOSU, "10", "0"},
			{"lastSvcCallDt", "lastSvcCallDt", null, null, TYPE_NENTSUKIHI, "8", null},
			{"totSvcVisitCnt", "totSvcVisitCnt", null, null, TYPE_SEISU_SYOSU, "4", "0"},
			{"lastTechVisitDt", "lastTechVisitDt", null, null, TYPE_NENTSUKIHI, "8", null},
			{"lastTechVisitMtrCnt", "lastTechVisitMtrCnt", null, null, TYPE_SEISU_SYOSU, "10", "0"},
			{"lastPrvntMaintDt", "lastPrvntMaintDt", null, null, TYPE_NENTSUKIHI, "8", null},
			{"lastPrvntMaintMtrCnt", "lastPrvntMaintMtrCnt", null, null, TYPE_SEISU_SYOSU, "10", "0"},
			{"lastSvcCallVisitDt", "lastSvcCallVisitDt", null, null, TYPE_NENTSUKIHI, "8", null},
			{"lastSvcCallMtrCnt", "lastSvcCallMtrCnt", null, null, TYPE_SEISU_SYOSU, "10", "0"},
			{"cpoOrdNum", "cpoOrdNum", null, null, TYPE_HANKAKUEISU, "8", null},
			{"cpoDtlLineNum", "cpoDtlLineNum", null, null, TYPE_HANKAKUEISU, "3", null},
			{"cpoDtlLineSubNum", "cpoDtlLineSubNum", null, null, TYPE_HANKAKUEISU, "3", null},
			{"custIssPoNum", "custIssPoNum", null, null, TYPE_HANKAKUEISU, "35", null},
			{"shpgPlnNum", "shpgPlnNum", null, null, TYPE_HANKAKUEISU, "8", null},
			{"soNum", "soNum", null, null, TYPE_HANKAKUEISU, "8", null},
			{"soSlpNum", "soSlpNum", null, null, TYPE_HANKAKUEISU, "3", null},
			{"rmaNum", "rmaNum", null, null, TYPE_HANKAKUEISU, "8", null},
			{"rmaLineNum", "rmaLineNum", null, null, TYPE_HANKAKUEISU, "3", null},
			{"rmaLineSubNum", "rmaLineSubNum", null, null, TYPE_HANKAKUEISU, "3", null},
			{"rmaLineSubTrxNum", "rmaLineSubTrxNum", null, null, TYPE_HANKAKUEISU, "3", null},
			{"usrDlrTpCd", "usrDlrTpCd", null, null, TYPE_HANKAKUEISU, "1", null},
			{"autoCratFlg", "autoCratFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"newSerNum", "newSerNum", null, null, TYPE_HANKAKUEISU, "30", null},
			{"oldSerNum", "oldSerNum", null, null, TYPE_HANKAKUEISU, "30", null},
			{"istlStsUpdCpltFlg", "istlStsUpdCpltFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"dsOrdTpCd", "dsOrdTpCd", null, null, TYPE_HANKAKUEISU, "4", null},
			{"dsOrdRsnCd", "dsOrdRsnCd", null, null, TYPE_HANKAKUEISU, "3", null},
			{"svcConfigTpCd", "svcConfigTpCd", null, null, TYPE_HANKAKUEISU, "16", null},
			{"orgCd", "orgCd", null, null, TYPE_HANKAKUEISU, "8", null},
			{"orgLayerNum", "orgLayerNum", null, null, TYPE_SEISU_SYOSU, "2", "0"},
			{"svcConfigMstrDtlPk", "svcConfigMstrDtlPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
			{"prntSvcMachMstrPk", "prntSvcMachMstrPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
			{"iwrCondCd", "iwrCondCd", null, null, TYPE_HANKAKUEISU, "2", null},
			{"effFromDt", "effFromDt", null, null, TYPE_NENTSUKIHI, "8", null},
			{"effThruDt", "effThruDt", null, null, TYPE_NENTSUKIHI, "8", null},
			{"svcMachUsgStsCd", "svcMachUsgStsCd", null, null, TYPE_HANKAKUEISU, "3", null},
			{"prntSerNum", "prntSerNum", null, null, TYPE_HANKAKUEISU, "30", null},
			{"svcMachTrxTpCd", "svcMachTrxTpCd", null, null, TYPE_HANKAKUEISU, "20", null},
			{"swLicId", "swLicId", null, null, TYPE_HANKAKUEISU, "40", null},
			{"ctrlFldTxt_01", "ctrlFldTxt_01", "01", null, TYPE_HANKAKUEISU, "50", null},
			{"ctrlFldTxt_02", "ctrlFldTxt_02", "02", null, TYPE_HANKAKUEISU, "50", null},
			{"ctrlFldTxt_03", "ctrlFldTxt_03", "03", null, TYPE_HANKAKUEISU, "50", null},
			{"ctrlFldTxt_04", "ctrlFldTxt_04", "04", null, TYPE_HANKAKUEISU, "50", null},
			{"ctrlFldTxt_05", "ctrlFldTxt_05", "05", null, TYPE_HANKAKUEISU, "50", null},
			{"ctrlFldTxt_06", "ctrlFldTxt_06", "06", null, TYPE_HANKAKUEISU, "50", null},
			{"prcContrNum", "prcContrNum", null, null, TYPE_HANKAKUEISU, "50", null},
			{"corpAdvtgStsCd", "corpAdvtgStsCd", null, null, TYPE_HANKAKUEISU, "5", null},
			{"dsPoExprDt", "dsPoExprDt", null, null, TYPE_NENTSUKIHI, "8", null},
			{"hardDriveRmvInclFlg", "hardDriveRmvInclFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"hardDriveEraseInclFlg", "hardDriveEraseInclFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"leaseRtrnFeeInclFlg", "leaseRtrnFeeInclFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"dsKeyAcctFlg", "dsKeyAcctFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"svcNtwkConnStsCd", "svcNtwkConnStsCd", null, null, TYPE_HANKAKUEISU, "20", null},
			{"sldByLineBizTpCd", "sldByLineBizTpCd", null, null, TYPE_HANKAKUEISU, "8", null},
			{"svcLicCnt", "svcLicCnt", null, null, TYPE_SEISU_SYOSU, "28", "0"},
			{"reqTechCd", "reqTechCd", null, null, TYPE_HANKAKUEISU, "20", null},
			{"svcMachQty", "svcMachQty", null, null, TYPE_SEISU_SYOSU, "10", "0"},
			{"xxCmptMachList", "xxCmptMachList", null, "2000", "business.parts.NSZC001001_xxCmptMachListPMsgArray", null, null},
			{"xxNonPrfTechList", "xxNonPrfTechList", null, "100", "business.parts.NSZC001001_xxNonPrfTechListPMsgArray", null, null},
			{"trxHdrNum", "trxHdrNum", null, null, TYPE_HANKAKUEISU, "8", null},
			{"trxLineNum", "trxLineNum", null, null, TYPE_HANKAKUEISU, "3", null},
			{"trxLineSubNum", "trxLineSubNum", null, null, TYPE_HANKAKUEISU, "3", null},
			{"svcMachMstrLocStsCd", "svcMachMstrLocStsCd", null, null, TYPE_HANKAKUEISU, "2", null},
			{"ownrAcctNum", "ownrAcctNum", null, null, TYPE_HANKAKUEISU, "20", null},
			{"ownrLocNum", "ownrLocNum", null, null, TYPE_HANKAKUEISU, "30", null},
			{"billToAcctNum", "billToAcctNum", null, null, TYPE_HANKAKUEISU, "20", null},
		};

		/**
		 * Array of Schema Items in Sub class(Visible Field)
		 */
		private static final String[][] DISP_CONTENTS = {
		// ["message display string","mandotry item", "minimum", "maximum", "I/O type", "yen", "comma", "zero suppress", "plus display flag", "display length", "display length after decimal point digit", "Dividing date", "Year display pattern", "zero pudding for date", "separator for date"] <- This is how to define
	        {"GLBL_CMPY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//glblCmpyCd
	        {"SLS_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//slsDt
	        {"XX_MODE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxModeCd
	        {"SVC_CONFIG_MSTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcConfigMstrPk
	        {"SVC_CONFIG_VRSN_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcConfigVrsnNum
	        {"SVC_MACH_MSTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachMstrPk
	        {"SER_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNum
	        {"MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd
	        {"CUST_MACH_CTRL_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//custMachCtrlNum
	        {"SVC_MACH_SQ_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachSqNum
	        {"SVC_MACH_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachTpCd
	        {"SVC_MACH_MSTR_STS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachMstrStsCd
	        {"SHIP_TO_CUST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToCustCd
	        {"LOC_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//locNm
	        {"ADDL_LOC_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//addlLocNm
	        {"FIRST_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//firstLineAddr
	        {"SCD_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//scdLineAddr
	        {"THIRD_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//thirdLineAddr
	        {"FRTH_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//frthLineAddr
	        {"CTY_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ctyAddr
	        {"ST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//stCd
	        {"PROV_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//provNm
	        {"CNTY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cntyNm
	        {"POST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//postCd
	        {"CTRY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ctryCd
	        {"SVC_MACH_FL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachFlNm
	        {"PRF_TECH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prfTechCd
	        {"STK_STS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//stkStsCd
	        {"SHIP_FROM_WH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipFromWhCd
	        {"SHIP_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipDt
	        {"ISTL_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//istlDt
	        {"SVC_MACH_RMV_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachRmvDt
	        {"RTRN_TO_WH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtrnToWhCd
	        {"DRUM_EXCH_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//drumExchDt
	        {"EXCH_DRUM_MTR_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//exchDrumMtrCnt
	        {"LAST_SVC_CALL_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//lastSvcCallDt
	        {"TOT_SVC_VISIT_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//totSvcVisitCnt
	        {"LAST_TECH_VISIT_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//lastTechVisitDt
	        {"LAST_TECH_VISIT_MTR_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//lastTechVisitMtrCnt
	        {"LAST_PRVNT_MAINT_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//lastPrvntMaintDt
	        {"LAST_PRVNT_MAINT_MTR_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//lastPrvntMaintMtrCnt
	        {"LAST_SVC_CALL_VISIT_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//lastSvcCallVisitDt
	        {"LAST_SVC_CALL_MTR_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//lastSvcCallMtrCnt
	        {"CPO_ORD_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cpoOrdNum
	        {"CPO_DTL_LINE_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cpoDtlLineNum
	        {"CPO_DTL_LINE_SUB_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cpoDtlLineSubNum
	        {"CUST_ISS_PO_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//custIssPoNum
	        {"SHPG_PLN_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shpgPlnNum
	        {"SO_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//soNum
	        {"SO_SLP_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//soSlpNum
	        {"RMA_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rmaNum
	        {"RMA_LINE_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rmaLineNum
	        {"RMA_LINE_SUB_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rmaLineSubNum
	        {"RMA_LINE_SUB_TRX_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rmaLineSubTrxNum
	        {"USR_DLR_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//usrDlrTpCd
	        {"AUTO_CRAT_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//autoCratFlg
	        {"NEW_SER_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//newSerNum
	        {"OLD_SER_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//oldSerNum
	        {"ISTL_STS_UPD_CPLT_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//istlStsUpdCpltFlg
	        {"DS_ORD_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdTpCd
	        {"DS_ORD_RSN_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdRsnCd
	        {"SVC_CONFIG_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcConfigTpCd
	        {"ORG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//orgCd
	        {"ORG_LAYER_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//orgLayerNum
	        {"SVC_CONFIG_MSTR_DTL_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcConfigMstrDtlPk
	        {"PRNT_SVC_MACH_MSTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prntSvcMachMstrPk
	        {"IWR_COND_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//iwrCondCd
	        {"EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effFromDt
	        {"EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effThruDt
	        {"SVC_MACH_USG_STS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachUsgStsCd
	        {"PRNT_SER_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prntSerNum
	        {"SVC_MACH_TRX_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachTrxTpCd
	        {"SW_LIC_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//swLicId
	        {"CTRL_FLD_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ctrlFldTxt_01
	        {"CTRL_FLD_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ctrlFldTxt_02
	        {"CTRL_FLD_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ctrlFldTxt_03
	        {"CTRL_FLD_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ctrlFldTxt_04
	        {"CTRL_FLD_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ctrlFldTxt_05
	        {"CTRL_FLD_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ctrlFldTxt_06
	        {"PRC_CONTR_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcContrNum
	        {"CORP_ADVTG_STS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//corpAdvtgStsCd
	        {"DS_PO_EXPR_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsPoExprDt
	        {"HARD_DRIVE_RMV_INCL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//hardDriveRmvInclFlg
	        {"HARD_DRIVE_ERASE_INCL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//hardDriveEraseInclFlg
	        {"LEASE_RTRN_FEE_INCL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//leaseRtrnFeeInclFlg
	        {"DS_KEY_ACCT_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsKeyAcctFlg
	        {"SVC_NTWK_CONN_STS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcNtwkConnStsCd
	        {"SLD_BY_LINE_BIZ_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//sldByLineBizTpCd
	        {"SVC_LIC_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcLicCnt
	        {"REQ_TECH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//reqTechCd
	        {"SVC_MACH_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachQty
			null,	//xxCmptMachList
			null,	//xxNonPrfTechList
	        {"TRX_HDR_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trxHdrNum
	        {"TRX_LINE_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trxLineNum
	        {"TRX_LINE_SUB_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trxLineSubNum
	        {"SVC_MACH_MSTR_LOC_STS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachMstrLocStsCd
	        {"OWNR_ACCT_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ownrAcctNum
	        {"OWNR_LOC_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ownrLocNum
	        {"BILL_TO_ACCT_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//billToAcctNum
		};

	}

	private static class NSZC001001PMsgSchemaContents2 {

		/**
		 * Array of Schema Items in Sub class(Basic data)
		 */
		private static final String[][] BASE_CONTENTS = {
		//["key name", "variable", "suffix", "array length", "item type", "digits", "after decimal point degits"] <- This is how to define.
			{"billToLocNum", "billToLocNum", null, null, TYPE_HANKAKUEISU, "30", null},
			{"curLocAcctNum", "curLocAcctNum", null, null, TYPE_HANKAKUEISU, "20", null},
			{"curLocNum", "curLocNum", null, null, TYPE_HANKAKUEISU, "30", null},
			{"fldSvcBrCd", "fldSvcBrCd", null, null, TYPE_HANKAKUEISU, "3", null},
			{"svcByLineBizTpCd", "svcByLineBizTpCd", null, null, TYPE_HANKAKUEISU, "20", null},
			{"finBrCd", "finBrCd", null, null, TYPE_HANKAKUEISU, "20", null},
			{"shrDlrFlg", "shrDlrFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"iwrRgtnStsCd", "iwrRgtnStsCd", null, null, TYPE_HANKAKUEISU, "2", null},
			{"bizHrsSunFromTm", "bizHrsSunFromTm", null, null, TYPE_HANKAKUSUJI, "6", null},
			{"bizHrsSunToTm", "bizHrsSunToTm", null, null, TYPE_HANKAKUSUJI, "6", null},
			{"bizHrsMonFriFromTm", "bizHrsMonFriFromTm", null, null, TYPE_HANKAKUSUJI, "6", null},
			{"bizHrsMonFriToTm", "bizHrsMonFriToTm", null, null, TYPE_HANKAKUSUJI, "6", null},
			{"bizHrsSatFromTm", "bizHrsSatFromTm", null, null, TYPE_HANKAKUSUJI, "6", null},
			{"bizHrsSatToTm", "bizHrsSatToTm", null, null, TYPE_HANKAKUSUJI, "6", null},
			{"enetPlotFlg", "enetPlotFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"enetCmntTxt_01", "enetCmntTxt_01", "01", null, TYPE_HANKAKUEISU, "255", null},
			{"enetCmntTxt_02", "enetCmntTxt_02", "02", null, TYPE_HANKAKUEISU, "255", null},
			{"pickSvcConfigMstrPk", "pickSvcConfigMstrPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
			{"manCratFlg", "manCratFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"wtyAutoCratFlg", "wtyAutoCratFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"xxMsgIdList", "xxMsgIdList", null, "100", "business.parts.NSZC001001_xxMsgIdListPMsgArray", null, null},
			{"istlBySvcPrvdPtyCd", "istlBySvcPrvdPtyCd", null, null, TYPE_HANKAKUEISU, "8", null},
			{"svcBySvcPrvdPtyCd", "svcBySvcPrvdPtyCd", null, null, TYPE_HANKAKUEISU, "8", null},
			{"xxTrmnFlg", "xxTrmnFlg", null, null, TYPE_HANKAKUEISU, "1", null},
		};

		/**
		 * Array of Schema Items in Sub class(Visible Field)
		 */
		private static final String[][] DISP_CONTENTS = {
		// ["message display string","mandotry item", "minimum", "maximum", "I/O type", "yen", "comma", "zero suppress", "plus display flag", "display length", "display length after decimal point digit", "Dividing date", "Year display pattern", "zero pudding for date", "separator for date"] <- This is how to define
	        {"BILL_TO_LOC_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//billToLocNum
	        {"CUR_LOC_ACCT_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//curLocAcctNum
	        {"CUR_LOC_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//curLocNum
	        {"FLD_SVC_BR_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//fldSvcBrCd
	        {"SVC_BY_LINE_BIZ_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcByLineBizTpCd
	        {"FIN_BR_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//finBrCd
	        {"SHR_DLR_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shrDlrFlg
	        {"IWR_RGTN_STS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//iwrRgtnStsCd
	        {"BIZ_HRS_SUN_FROM_TM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bizHrsSunFromTm
	        {"BIZ_HRS_SUN_TO_TM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bizHrsSunToTm
	        {"BIZ_HRS_MON_FRI_FROM_TM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bizHrsMonFriFromTm
	        {"BIZ_HRS_MON_FRI_TO_TM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bizHrsMonFriToTm
	        {"BIZ_HRS_SAT_FROM_TM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bizHrsSatFromTm
	        {"BIZ_HRS_SAT_TO_TM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bizHrsSatToTm
	        {"ENET_PLOT_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//enetPlotFlg
	        {"ENET_CMNT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//enetCmntTxt_01
	        {"ENET_CMNT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//enetCmntTxt_02
	        {"PICK_SVC_CONFIG_MSTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//pickSvcConfigMstrPk
	        {"MAN_CRAT_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//manCratFlg
	        {"WTY_AUTO_CRAT_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//wtyAutoCratFlg
			null,	//xxMsgIdList
	        {"ISTL_BY_SVC_PRVD_PTY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//istlBySvcPrvdPtyCd
	        {"SVC_BY_SVC_PRVD_PTY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcBySvcPrvdPtyCd
	        {"XX_TRMN_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxTrmnFlg
		};

	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = new String[124][NSZC001001PMsgSchemaContents1.BASE_CONTENTS[0].length];
	static {
		int arcpStartPoint=0;
	System.arraycopy(NSZC001001PMsgSchemaContents1.BASE_CONTENTS, 0, BASE_CONTENTS, arcpStartPoint, NSZC001001PMsgSchemaContents1.BASE_CONTENTS.length);
	arcpStartPoint = arcpStartPoint + NSZC001001PMsgSchemaContents1.BASE_CONTENTS.length;
	System.arraycopy(NSZC001001PMsgSchemaContents2.BASE_CONTENTS, 0, BASE_CONTENTS, arcpStartPoint, NSZC001001PMsgSchemaContents2.BASE_CONTENTS.length);
	arcpStartPoint = arcpStartPoint + NSZC001001PMsgSchemaContents2.BASE_CONTENTS.length;
	}

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = new String[124][15];
	static {
		int arcpStartPoint=0;
		System.arraycopy(NSZC001001PMsgSchemaContents1.DISP_CONTENTS, 0, DISP_CONTENTS, arcpStartPoint, NSZC001001PMsgSchemaContents1.DISP_CONTENTS.length);
		arcpStartPoint = arcpStartPoint + NSZC001001PMsgSchemaContents1.DISP_CONTENTS.length;
		System.arraycopy(NSZC001001PMsgSchemaContents2.DISP_CONTENTS, 0, DISP_CONTENTS, arcpStartPoint, NSZC001001PMsgSchemaContents2.DISP_CONTENTS.length);
		arcpStartPoint = arcpStartPoint + NSZC001001PMsgSchemaContents2.DISP_CONTENTS.length;
	}

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

