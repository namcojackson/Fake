//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20160428102837000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NMAL7020CMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NMAL7020;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NMAL7020 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NMAL7020CMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** PRC_CATG_CD*/
	public final EZDCStringItem              prcCatgCd;

    /** PRC_CATG_NM_O*/
	public final EZDCStringItem              prcCatgNm_O;

    /** PRC_CATG_NM_N*/
	public final EZDCStringItem              prcCatgNm_N;

    /** NEW_PRC_CATG_DESC_TXT*/
	public final EZDCStringItem              newPrcCatgDescTxt;

    /** ACTV_FLG*/
	public final EZDCStringItem              actvFlg;

    /** MAIN_PRC_LIST_INFO_FLG*/
	public final EZDCStringItem              mainPrcListInfoFlg;

    /** PRC_LIST_ACCS_TP_FLG*/
	public final EZDCStringItem              prcListAccsTpFlg;

    /** COPY_ATTRB_TRX_FLG*/
	public final EZDCStringItem              copyAttrbTrxFlg;

    /** COPY_PRC_FLG*/
	public final EZDCStringItem              copyPrcFlg;

    /** PRC_CALC_TP_CD*/
	public final EZDCStringItem              prcCalcTpCd;

    /** PRC_CALC_TP_CD_P*/
	public final EZDCStringItemArray              prcCalcTpCd_P;

    /** PRC_CALC_TP_DESC_TXT_P*/
	public final EZDCStringItemArray              prcCalcTpDescTxt_P;

    /** PRC_PCT_AMT_TP_CD*/
	public final EZDCStringItem              prcPctAmtTpCd;

    /** PRC_PCT_AMT_TP_CD_P*/
	public final EZDCStringItemArray              prcPctAmtTpCd_P;

    /** PRC_PCT_AMT_TP_DESC_TXT_P*/
	public final EZDCStringItemArray              prcPctAmtTpDescTxt_P;

    /** COPY_PRC_AMT_RATE*/
	public final EZDCBigDecimalItem              copyPrcAmtRate;

    /** EFF_FROM_DT*/
	public final EZDCDateItem              effFromDt;

    /** EFF_THRU_DT*/
	public final EZDCDateItem              effThruDt;

    /** EFF_APPLY_LVL_TP_CD*/
	public final EZDCStringItem              effApplyLvlTpCd;

    /** EFF_APPLY_LVL_TP_CD_P*/
	public final EZDCStringItemArray              effApplyLvlTpCd_P;

    /** EFF_APPLY_LVL_TP_DESC_TXT_P*/
	public final EZDCStringItemArray              effApplyLvlTpDescTxt_P;

    /** VAR_CHAR_CONST_VAL_A*/
	public final EZDCStringItem              varCharConstVal_A;

    /** VAR_CHAR_CONST_VAL_B*/
	public final EZDCStringItem              varCharConstVal_B;


	/**
	 * NMAL7020CMsg is constructor.
	 * The initialization when the instance of NMAL7020CMsg is generated.
	 */
	public NMAL7020CMsg() {
		this(false, -1);
	}

	/**
	 * NMAL7020CMsg is constructor.
	 * The initialization when the instance of NMAL7020CMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NMAL7020CMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		prcCatgCd = (EZDCStringItem)newItem("prcCatgCd");
		prcCatgNm_O = (EZDCStringItem)newItem("prcCatgNm_O");
		prcCatgNm_N = (EZDCStringItem)newItem("prcCatgNm_N");
		newPrcCatgDescTxt = (EZDCStringItem)newItem("newPrcCatgDescTxt");
		actvFlg = (EZDCStringItem)newItem("actvFlg");
		mainPrcListInfoFlg = (EZDCStringItem)newItem("mainPrcListInfoFlg");
		prcListAccsTpFlg = (EZDCStringItem)newItem("prcListAccsTpFlg");
		copyAttrbTrxFlg = (EZDCStringItem)newItem("copyAttrbTrxFlg");
		copyPrcFlg = (EZDCStringItem)newItem("copyPrcFlg");
		prcCalcTpCd = (EZDCStringItem)newItem("prcCalcTpCd");
		prcCalcTpCd_P = (EZDCStringItemArray)newItemArray("prcCalcTpCd_P");
		prcCalcTpDescTxt_P = (EZDCStringItemArray)newItemArray("prcCalcTpDescTxt_P");
		prcPctAmtTpCd = (EZDCStringItem)newItem("prcPctAmtTpCd");
		prcPctAmtTpCd_P = (EZDCStringItemArray)newItemArray("prcPctAmtTpCd_P");
		prcPctAmtTpDescTxt_P = (EZDCStringItemArray)newItemArray("prcPctAmtTpDescTxt_P");
		copyPrcAmtRate = (EZDCBigDecimalItem)newItem("copyPrcAmtRate");
		effFromDt = (EZDCDateItem)newItem("effFromDt");
		effThruDt = (EZDCDateItem)newItem("effThruDt");
		effApplyLvlTpCd = (EZDCStringItem)newItem("effApplyLvlTpCd");
		effApplyLvlTpCd_P = (EZDCStringItemArray)newItemArray("effApplyLvlTpCd_P");
		effApplyLvlTpDescTxt_P = (EZDCStringItemArray)newItemArray("effApplyLvlTpDescTxt_P");
		varCharConstVal_A = (EZDCStringItem)newItem("varCharConstVal_A");
		varCharConstVal_B = (EZDCStringItem)newItem("varCharConstVal_B");
	}

	/**
	 * get the type of array which is stored
	 * @return NMAL7020CMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NMAL7020CMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"prcCatgCd", "prcCatgCd", null, null, TYPE_HANKAKUEISU, "10", null},
	{"prcCatgNm_O", "prcCatgNm_O", "O", null, TYPE_HANKAKUEISU, "75", null},
	{"prcCatgNm_N", "prcCatgNm_N", "N", null, TYPE_HANKAKUEISU, "75", null},
	{"newPrcCatgDescTxt", "newPrcCatgDescTxt", null, null, TYPE_HANKAKUEISU, "2000", null},
	{"actvFlg", "actvFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"mainPrcListInfoFlg", "mainPrcListInfoFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"prcListAccsTpFlg", "prcListAccsTpFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"copyAttrbTrxFlg", "copyAttrbTrxFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"copyPrcFlg", "copyPrcFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"prcCalcTpCd", "prcCalcTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"prcCalcTpCd_P", "prcCalcTpCd_P", "P", "99", TYPE_HANKAKUEISU, "2", null},
	{"prcCalcTpDescTxt_P", "prcCalcTpDescTxt_P", "P", "99", TYPE_HANKAKUEISU, "50", null},
	{"prcPctAmtTpCd", "prcPctAmtTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"prcPctAmtTpCd_P", "prcPctAmtTpCd_P", "P", "99", TYPE_HANKAKUEISU, "2", null},
	{"prcPctAmtTpDescTxt_P", "prcPctAmtTpDescTxt_P", "P", "99", TYPE_HANKAKUEISU, "50", null},
	{"copyPrcAmtRate", "copyPrcAmtRate", null, null, TYPE_SEISU_SYOSU, "19", "6"},
	{"effFromDt", "effFromDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt", "effThruDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"effApplyLvlTpCd", "effApplyLvlTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"effApplyLvlTpCd_P", "effApplyLvlTpCd_P", "P", "99", TYPE_HANKAKUEISU, "2", null},
	{"effApplyLvlTpDescTxt_P", "effApplyLvlTpDescTxt_P", "P", "99", TYPE_HANKAKUEISU, "50", null},
	{"varCharConstVal_A", "varCharConstVal_A", "A", null, TYPE_HANKAKUEISU, "1000", null},
	{"varCharConstVal_B", "varCharConstVal_B", "B", null, TYPE_HANKAKUEISU, "1000", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"PRC_CATG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCatgCd
        {"PRC_CATG_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCatgNm_O
        {"PRC_CATG_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCatgNm_N
        {"NEW_PRC_CATG_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//newPrcCatgDescTxt
        {"ACTV_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//actvFlg
        {"MAIN_PRC_LIST_INFO_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mainPrcListInfoFlg
        {"PRC_LIST_ACCS_TP_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcListAccsTpFlg
        {"COPY_ATTRB_TRX_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//copyAttrbTrxFlg
        {"COPY_PRC_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//copyPrcFlg
        {"PRC_CALC_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCalcTpCd
        {"PRC_CALC_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCalcTpCd_P
        {"PRC_CALC_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCalcTpDescTxt_P
        {"PRC_PCT_AMT_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcPctAmtTpCd
        {"PRC_PCT_AMT_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcPctAmtTpCd_P
        {"PRC_PCT_AMT_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcPctAmtTpDescTxt_P
        {"COPY_PRC_AMT_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//copyPrcAmtRate
        {"EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effFromDt
        {"EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effThruDt
        {"EFF_APPLY_LVL_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effApplyLvlTpCd
        {"EFF_APPLY_LVL_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effApplyLvlTpCd_P
        {"EFF_APPLY_LVL_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effApplyLvlTpDescTxt_P
        {"VAR_CHAR_CONST_VAL",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//varCharConstVal_A
        {"VAR_CHAR_CONST_VAL",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//varCharConstVal_B
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

