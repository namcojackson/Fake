//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20230530103730000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NFAL0270_ACMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NFAL0270;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NFAL0270 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NFAL0270_ACMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_CHK_BOX_A*/
	public final EZDCStringItem              xxChkBox_A;

    /** MDL_GRP_ID_A*/
	public final EZDCBigDecimalItem              mdlGrpId_A;

    /** MDL_GRP_NM_A*/
	public final EZDCStringItem              mdlGrpNm_A;

    /** SVC_INV_CHRG_TP_CD_A*/
	public final EZDCStringItem              svcInvChrgTpCd_A;

    /** SVC_ALLOC_TP_CD_A*/
	public final EZDCStringItem              svcAllocTpCd_A;

    /** EQUIP_ALLOC_PCT_A*/
	public final EZDCBigDecimalItem              equipAllocPct_A;

    /** SVC_ALLOC_PCT_A*/
	public final EZDCBigDecimalItem              svcAllocPct_A;

    /** SPLY_ALLOC_PCT_A*/
	public final EZDCBigDecimalItem              splyAllocPct_A;


	/**
	 * NFAL0270_ACMsg is constructor.
	 * The initialization when the instance of NFAL0270_ACMsg is generated.
	 */
	public NFAL0270_ACMsg() {
		this(false, -1);
	}

	/**
	 * NFAL0270_ACMsg is constructor.
	 * The initialization when the instance of NFAL0270_ACMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NFAL0270_ACMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxChkBox_A = (EZDCStringItem)newItem("xxChkBox_A");
		mdlGrpId_A = (EZDCBigDecimalItem)newItem("mdlGrpId_A");
		mdlGrpNm_A = (EZDCStringItem)newItem("mdlGrpNm_A");
		svcInvChrgTpCd_A = (EZDCStringItem)newItem("svcInvChrgTpCd_A");
		svcAllocTpCd_A = (EZDCStringItem)newItem("svcAllocTpCd_A");
		equipAllocPct_A = (EZDCBigDecimalItem)newItem("equipAllocPct_A");
		svcAllocPct_A = (EZDCBigDecimalItem)newItem("svcAllocPct_A");
		splyAllocPct_A = (EZDCBigDecimalItem)newItem("splyAllocPct_A");
	}

	/**
	 * get the type of array which is stored
	 * @return NFAL0270_ACMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NFAL0270_ACMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxChkBox_A", "xxChkBox_A", "A", null, TYPE_HANKAKUEIJI, "1", null},
	{"mdlGrpId_A", "mdlGrpId_A", "A", null, TYPE_SEISU_SYOSU, "22", "0"},
	{"mdlGrpNm_A", "mdlGrpNm_A", "A", null, TYPE_HANKAKUEISU, "20", null},
	{"svcInvChrgTpCd_A", "svcInvChrgTpCd_A", "A", null, TYPE_HANKAKUEISU, "6", null},
	{"svcAllocTpCd_A", "svcAllocTpCd_A", "A", null, TYPE_HANKAKUEISU, "2", null},
	{"equipAllocPct_A", "equipAllocPct_A", "A", null, TYPE_SEISU_SYOSU, "5", "2"},
	{"svcAllocPct_A", "svcAllocPct_A", "A", null, TYPE_SEISU_SYOSU, "5", "2"},
	{"splyAllocPct_A", "splyAllocPct_A", "A", null, TYPE_SEISU_SYOSU, "5", "2"},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_A
        {"MDL_GRP_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdlGrpId_A
        {"MDL_GRP_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdlGrpNm_A
        {"SVC_INV_CHRG_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcInvChrgTpCd_A
        {"SVC_ALLOC_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcAllocTpCd_A
        {"EQUIP_ALLOC_PCT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//equipAllocPct_A
        {"SVC_ALLOC_PCT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcAllocPct_A
        {"SPLY_ALLOC_PCT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//splyAllocPct_A
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

