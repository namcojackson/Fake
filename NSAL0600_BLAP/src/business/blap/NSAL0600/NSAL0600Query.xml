<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<sqlMap namespace="NSAL0600Query">
    <typeAlias alias="NSAL0600_ASMsg" type="business.blap.NSAL0600.NSAL0600_ASMsg"/>

    <statement id="getDsContr" parameterClass="Map" resultClass="Map">
        SELECT
             A.DS_CONTR_PK
            ,A.DS_CONTR_NUM
            ,A.CONTR_VRSN_EFF_FROM_DT
            ,A.CONTR_VRSN_EFF_THRU_DT
            ,B.DS_CONTR_CTRL_STS_CD
            ,A.EZUPTIME
            ,A.EZUPTIMEZONE
        FROM
             DS_CONTR       A
            ,DS_CONTR_STS_V B
        WHERE
                A.GLBL_CMPY_CD = #glblCmpyCd#
            AND A.DS_CONTR_PK  = #dsContrPk#
            AND A.EZCANCELFLAG = '0'
            AND A.GLBL_CMPY_CD = B.GLBL_CMPY_CD
            AND A.DS_CONTR_PK  = B.DS_CONTR_PK
            AND B.EZCANCELFLAG = '0'

    </statement>
    <statement id="getDsContrDtl" parameterClass="Map" resultMap="result.getDsContrDtl">
        SELECT
             Z.XX_CHK_BOX
            ,Z.DS_CONTR_DTL_PK
            ,Z.SVC_MACH_MSTR_PK
            ,Z.SER_NUM
            ,Z.CONTR_EFF_FROM_DT
            ,Z.CONTR_EFF_THRU_DT
            ,Z.DS_CONTR_CTRL_STS_CD
            ,Z.DS_CONTR_DTL_TP_CD
            ,Z.EZUPTIME
            ,Z.EZUPTIMEZONE
        FROM
            (
                SELECT
                     CASE
                        WHEN A.DS_CONTR_DTL_TP_CD = #dsContrDtlTpFlt# OR A.DS_CONTR_DTL_TP_CD = #dsContrDtlTpAgg# THEN 0
                        WHEN A.DS_CONTR_DTL_TP_CD = #dsContrDtlTpAcc# THEN PRNT_DS_CONTR_DTL_PK
                        ELSE A.DS_CONTR_DTL_PK
                     END                    AS PRNT_DS_CONTR_DTL_PK
                    ,CASE
                        WHEN A.DS_CONTR_DTL_TP_CD = #dsContrDtlTpAcc# THEN #lvl4#
                        ELSE 1
                     END                    AS XX_DPLY_BY_CTRL_ANCR_LVL_CD
                    ,CASE
                        WHEN A.DS_CONTR_DTL_TP_CD = #dsContrDtlTpFlt# OR A.DS_CONTR_DTL_TP_CD = #dsContrDtlTpAgg# THEN 'Y'
                        ELSE 'N'
                     END                    AS XX_CHK_BOX
                    ,A.DS_CONTR_DTL_PK      AS DS_CONTR_DTL_PK
                    ,A.SVC_MACH_MSTR_PK     AS SVC_MACH_MSTR_PK
                    ,CASE
                        WHEN A.DS_CONTR_DTL_TP_CD = #dsContrDtlTpFlt# OR A.DS_CONTR_DTL_TP_CD = #dsContrDtlTpAgg# THEN C.DS_CONTR_DTL_TP_DESC_TXT
                        ELSE B.SER_NUM
                     END                    AS SER_NUM
                    ,A.CONTR_EFF_FROM_DT    AS CONTR_EFF_FROM_DT
                    ,A.CONTR_EFF_THRU_DT    AS CONTR_EFF_THRU_DT
                    ,D.DS_CONTR_CTRL_STS_CD AS DS_CONTR_CTRL_STS_CD
                    ,A.DS_CONTR_DTL_TP_CD   AS DS_CONTR_DTL_TP_CD
                    ,A.EZUPTIME             AS EZUPTIME
                    ,A.EZUPTIMEZONE         AS EZUPTIMEZONE
                FROM
                     DS_CONTR_DTL       A
                    ,SVC_MACH_MSTR      B
                    ,DS_CONTR_DTL_TP    C
                    ,DS_CONTR_DTL_STS_V D
                WHERE
                        A.GLBL_CMPY_CD           = #glblCmpyCd#
                    AND A.DS_CONTR_PK            = #dsContrPk#
                    AND A.EZCANCELFLAG           = '0'
                    AND A.GLBL_CMPY_CD           = B.GLBL_CMPY_CD     (+)
                    AND A.SVC_MACH_MSTR_PK       = B.SVC_MACH_MSTR_PK (+)
                    AND B.EZCANCELFLAG       (+) = '0'
                    AND A.GLBL_CMPY_CD           = C.GLBL_CMPY_CD
                    AND A.DS_CONTR_DTL_TP_CD     = C.DS_CONTR_DTL_TP_CD
                    AND C.EZCANCELFLAG           = '0'
                    AND A.GLBL_CMPY_CD           = D.GLBL_CMPY_CD
                    AND A.DS_CONTR_PK            = D.DS_CONTR_PK
                    AND A.DS_CONTR_DTL_PK        = D.DS_CONTR_DTL_PK
                    AND D.EZCANCELFLAG           = '0'
                ORDER BY
                     PRNT_DS_CONTR_DTL_PK
                    ,XX_DPLY_BY_CTRL_ANCR_LVL_CD
            ) Z
        WHERE
            ROWNUM &lt;= #maxRow#

    </statement>
    <resultMap id="result.getDsContrDtl" class="NSAL0600_ASMsg">
        <result property="xxChkBox_A"          column="XX_CHK_BOX"            javaType="EZDSStringItem" />
        <result property="dsContrDtlPk_A"      column="DS_CONTR_DTL_PK"       javaType="EZDSBigDecimalItem" />
        <result property="svcMachMstrPk_A"     column="SVC_MACH_MSTR_PK"      javaType="EZDSBigDecimalItem" />
        <result property="serNum_A"            column="SER_NUM"               javaType="EZDSStringItem" />
        <result property="contrEffFromDt_A"    column="CONTR_EFF_FROM_DT"     javaType="EZDSDateItem" />
        <result property="contrEffThruDt_A"    column="CONTR_EFF_THRU_DT"     javaType="EZDSDateItem" />
        <result property="dsContrCtrlStsCd_A"  column="DS_CONTR_CTRL_STS_CD"  javaType="EZDSStringItem" />
        <result property="dsContrDtlTpCd_A"    column="DS_CONTR_DTL_TP_CD"    javaType="EZDSStringItem" />
        <result property="ezUpTime_A"          column="EZUPTIME"              javaType="EZDSStringItem" />
        <result property="ezUpTimeZone_A"      column="EZUPTIMEZONE"          javaType="EZDSStringItem" />
    </resultMap>

    <statement id="getInvDt" parameterClass="Map" resultClass="String">
        SELECT
            MAX(B.INV_DT) AS INV_DT
        FROM
             DS_CONTR_DTL       A
            ,DS_CONTR_BLLG_SCHD B
        WHERE
                A.GLBL_CMPY_CD    =  #glblCmpyCd#
            AND A.DS_CONTR_PK     =  #dsContrPk#
            AND A.EZCANCELFLAG    =  '0'
            AND A.GLBL_CMPY_CD    =  B.GLBL_CMPY_CD
            AND A.DS_CONTR_DTL_PK =  B.DS_CONTR_DTL_PK
            AND B.EZCANCELFLAG    =  '0'
            AND B.INV_FLG         =  'Y'
            AND B.INV_TP_CD       &lt;&gt; #invTpCdCr#
            AND NOT EXISTS (
                SELECT
                    *
                FROM
                    DS_CONTR_DTL_STS_V C
                WHERE
                        C.GLBL_CMPY_CD    = A.GLBL_CMPY_CD
                    AND C.DS_CONTR_DTL_PK = A.DS_CONTR_DTL_PK
                    AND C.EZCANCELFLAG    = '0'
                    AND C.ETTL_AVAL_FLG   = 'N'
                )
    </statement>

    <statement id="getDsContrPrcEffForBase" parameterClass="Map" resultClass="Map">
        SELECT
             C.DS_CONTR_PRC_EFF_PK
            ,C.DS_CONTR_PRC_EFF_SQ_NUM
            ,C.BLLG_CYCLE_CD
            ,C.BASE_PRC_DEAL_AMT
            ,C.BASE_PRC_TERM_DEAL_AMT_RATE
            ,C.DS_CONTR_PRC_EFF_STS_CD
            ,C.CONTR_PRC_EFF_FROM_DT
        FROM
             DS_CONTR_DTL     A
            ,DS_CONTR_DTL_TP  B
            ,DS_CONTR_PRC_EFF C
        WHERE
                A.GLBL_CMPY_CD              = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK           = #dsContrDtlPk#
            AND A.EZCANCELFLAG              = '0'
            AND A.GLBL_CMPY_CD              = B.GLBL_CMPY_CD
            AND A.DS_CONTR_DTL_TP_CD        = B.DS_CONTR_DTL_TP_CD
            AND B.BASE_CHRG_FLG             = 'Y'
            AND B.EZCANCELFLAG              = '0'
            AND A.GLBL_CMPY_CD              = C.GLBL_CMPY_CD
            AND A.DS_CONTR_DTL_PK           = C.DS_CONTR_DTL_PK
            AND C.BASE_CHRG_FLG             = 'Y'
        <isNotNull property="fromDt">
            AND C.CONTR_PRC_EFF_FROM_DT &lt;= #fromDt#
        </isNotNull>
        <isNotNull property="thruDt">
            AND C.CONTR_PRC_EFF_THRU_DT &gt;= #thruDt#
        </isNotNull>
            AND C.EZCANCELFLAG              = '0'
        ORDER BY
             C.CONTR_PRC_EFF_FROM_DT
    </statement>

    <statement id="getDsContrBllgMtrPkList" parameterClass="Map" resultClass="Map">
        SELECT
             C.DS_CONTR_BLLG_MTR_PK
        FROM
             DS_CONTR_DTL      A
            ,DS_CONTR_DTL_TP   B
            ,DS_CONTR_BLLG_MTR C
        WHERE
                A.GLBL_CMPY_CD              = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK           = #dsContrDtlPk#
            AND A.EZCANCELFLAG              = '0'
            AND A.GLBL_CMPY_CD              = B.GLBL_CMPY_CD
            AND A.DS_CONTR_DTL_TP_CD        = B.DS_CONTR_DTL_TP_CD
            AND B.USG_CHRG_FLG              = 'Y'
            AND B.EZCANCELFLAG              = '0'
            AND A.GLBL_CMPY_CD              = C.GLBL_CMPY_CD
            AND A.DS_CONTR_DTL_PK           = C.DS_CONTR_DTL_PK
            AND C.EZCANCELFLAG              = '0'
        ORDER BY
             C.DS_CONTR_BLLG_MTR_PK

    </statement>

    <statement id="getDsContrPrcEffForUsage" parameterClass="Map" resultClass="Map">
        SELECT
             B.DS_CONTR_PRC_EFF_PK
            ,B.DS_CONTR_PRC_EFF_SQ_NUM
            ,B.BLLG_CYCLE_CD
            ,B.DS_CONTR_BLLG_MTR_PK
            ,B.DS_CONTR_PRC_EFF_STS_CD
            ,B.CONTR_PRC_EFF_FROM_DT
        FROM
             DS_CONTR_BLLG_MTR A
            ,DS_CONTR_PRC_EFF  B
        WHERE
                A.GLBL_CMPY_CD              = #glblCmpyCd#
            AND A.DS_CONTR_BLLG_MTR_PK      = #dsContrBllgMtrPk#
            AND A.EZCANCELFLAG              = '0'
            AND A.GLBL_CMPY_CD              = B.GLBL_CMPY_CD
            AND A.DS_CONTR_BLLG_MTR_PK      = B.DS_CONTR_BLLG_MTR_PK
            AND B.USG_CHRG_FLG              = 'Y'
        <isNotNull property="fromDt">
            AND B.CONTR_PRC_EFF_FROM_DT &lt;= #fromDt#
        </isNotNull>
        <isNotNull property="thruDt">
            AND B.CONTR_PRC_EFF_THRU_DT &gt;= #thruDt#
        </isNotNull>
            AND B.EZCANCELFLAG              = '0'
        ORDER BY
             B.CONTR_PRC_EFF_FROM_DT

    </statement>

    <statement id="getCurPePk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            DS_CONTR_PRC_EFF_PK
        FROM
            (
                SELECT
                     DPE.DS_CONTR_PRC_EFF_PK
                    ,3                            AS SORT_KEY1
                    ,(TO_DATE(#slsDt#, 'YYYYMMDD') - TO_DATE(DPE.CONTR_PRC_EFF_THRU_DT, 'YYYYMMDD'))  AS SORT_KEY2
                FROM
                    DS_CONTR_PRC_EFF DPE
                WHERE
                        DPE.DS_CONTR_DTL_PK             =        #dsContrDtlPk#
                    AND DPE.GLBL_CMPY_CD                =        #glblCmpyCd#
                    AND DPE.EZCANCELFLAG                =        '0'
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD     &lt;&gt; #cancelSts#
        <isNull property="dsContrBllgMtrPk">
                    AND DPE.BASE_CHRG_FLG               =        'Y'
        </isNull>
        <isNotNull property="dsContrBllgMtrPk">
                    AND DPE.DS_CONTR_BLLG_MTR_PK        =        #dsContrBllgMtrPk#
                    AND DPE.USG_CHRG_FLG                =        'Y'
        </isNotNull>
                    AND DPE.CONTR_PRC_EFF_THRU_DT       &lt;     #slsDt#
                UNION
                SELECT
                     DPE.DS_CONTR_PRC_EFF_PK
                    ,1                            AS SORT_KEY1
                    ,0                            AS SORT_KEY2
                FROM
                    DS_CONTR_PRC_EFF DPE
                WHERE
                        DPE.DS_CONTR_DTL_PK             =        #dsContrDtlPk#
                    AND DPE.GLBL_CMPY_CD                =        #glblCmpyCd#
                    AND DPE.EZCANCELFLAG                =        '0'
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD     &lt;&gt; #cancelSts#
        <isNull property="dsContrBllgMtrPk">
                    AND DPE.BASE_CHRG_FLG               =        'Y'
        </isNull>
        <isNotNull property="dsContrBllgMtrPk">
                    AND DPE.DS_CONTR_BLLG_MTR_PK        =        #dsContrBllgMtrPk#
                    AND DPE.USG_CHRG_FLG                =        'Y'
        </isNotNull>
                    AND DPE.CONTR_PRC_EFF_FROM_DT       &lt;=    #slsDt#
                    AND DPE.CONTR_PRC_EFF_THRU_DT       &gt;=    #slsDt#
                UNION
                SELECT
                     DPE.DS_CONTR_PRC_EFF_PK
                    ,2                            AS SORT_KEY1
                    ,(TO_DATE(DPE.CONTR_PRC_EFF_FROM_DT, 'YYYYMMDD') - TO_DATE(#slsDt#, 'YYYYMMDD'))  AS SORT_KEY2
                FROM
                    DS_CONTR_PRC_EFF DPE
                WHERE
                        DPE.DS_CONTR_DTL_PK             =        #dsContrDtlPk#
                    AND DPE.GLBL_CMPY_CD                =        #glblCmpyCd#
                    AND DPE.EZCANCELFLAG                =        '0'
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD     &lt;&gt; #cancelSts#
        <isNull property="dsContrBllgMtrPk">
                    AND DPE.BASE_CHRG_FLG               =        'Y'
        </isNull>
        <isNotNull property="dsContrBllgMtrPk">
                    AND DPE.DS_CONTR_BLLG_MTR_PK        =        #dsContrBllgMtrPk#
                    AND DPE.USG_CHRG_FLG                =        'Y'
        </isNotNull>
                    AND DPE.CONTR_PRC_EFF_FROM_DT       &gt;=    #slsDt#
                ORDER BY
                     SORT_KEY1                    ASC
                    ,SORT_KEY2                    ASC
        )
        WHERE
            ROWNUM = 1
    </statement>

    <!-- START 2023/08/28 S.Moriai [QC#59846, ADD] -->
    <statement id="getDsContrPrcEff" parameterClass="Map" resultClass="Map">
        SELECT
             A.DS_CONTR_PRC_EFF_PK
            ,A.DS_CONTR_PRC_EFF_SQ_NUM
            ,A.DS_CONTR_PRC_EFF_STS_CD
            ,A.CONTR_PRC_EFF_FROM_DT
            ,A.CONTR_PRC_EFF_THRU_DT
            ,A.BLLG_CYCLE_CD
            ,A.QLTY_ASRN_HLD_FLG
            ,A.MTR_HLD_FLG
            ,A.CONTR_HLD_FLG
            ,A.BLLG_HLD_FLG
            ,A.QLTY_ASRN_HLD_PEND_APVL_FLG
            <isEqual property="baseChrgFlg" compareValue="Y">
            ,A.BASE_PRC_DEAL_AMT
            ,A.BASE_PRC_TERM_DEAL_AMT_RATE
            ,A.CCY_CD
            </isEqual>
            <isEqual property="usgChrgFlg" compareValue="Y">
            ,B.DS_CONTR_PRC_EFF_MTR_PK
            ,B.CONTR_XS_COPY_PK
            ,B.DS_CONTR_BLLG_MTR_PK
            ,B.XS_MTR_COPY_QTY
            ,B.XS_MTR_AMT_RATE
            ,B.XS_MTR_FIRST_FLG
            </isEqual>
        FROM
             DS_CONTR_PRC_EFF     A
            <isEqual property="usgChrgFlg" compareValue="Y">
            ,DS_CONTR_PRC_EFF_MTR B
            </isEqual>
        WHERE
                A.GLBL_CMPY_CD            = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK         = #dsContrDtlPk#
            AND A.CONTR_PRC_EFF_FROM_DT   &lt; #contrEffThruDt#
            AND A.CONTR_PRC_EFF_THRU_DT   &gt; #contrEffFromDt#
            AND A.DS_CONTR_PRC_EFF_STS_CD &lt;&gt; #cancelSts#
            AND A.EZCANCELFLAG            = '0'
            <isEqual property="baseChrgFlg" compareValue="Y">
            AND A.BASE_CHRG_FLG           = 'Y'
            </isEqual>
            <isEqual property="usgChrgFlg" compareValue="Y">
            AND A.USG_CHRG_FLG            = 'Y'
            AND A.GLBL_CMPY_CD            = B.GLBL_CMPY_CD
            AND A.DS_CONTR_PRC_EFF_PK     = B.DS_CONTR_PRC_EFF_PK
            AND B.DS_CONTR_BLLG_MTR_PK    = #dsContrBllgMtrPk#
            AND B.EZCANCELFLAG            = '0'
            </isEqual>
        ORDER BY
             A.CONTR_PRC_EFF_FROM_DT
            <isEqual property="usgChrgFlg" compareValue="Y">
            ,B.XS_MTR_COPY_QTY
            </isEqual>
    </statement>
    <statement id="getContrEffThruDt" parameterClass="Map" resultMap="String">
        SELECT
            CASE
                WHEN Z.CONTR_CLO_DT IS NULL            THEN Z.CONTR_EFF_THRU_DT
                WHEN Z.INV_THRU_DT  IS NULL            THEN Z.CONTR_CLO_DT
                WHEN Z.CONTR_CLO_DT &lt; Z.INV_THRU_DT THEN Z.INV_THRU_DT
                ELSE Z.CONTR_CLO_DT
            END AS CONTR_EFF_THRU_DT
        FROM
            (
            SELECT
                 A.DS_CONTR_DTL_PK      AS DS_CONTR_DTL_PK
                ,A.CONTR_EFF_THRU_DT    AS CONTR_EFF_THRU_DT
                ,A.CONTR_CLO_DT         AS CONTR_CLO_DT
                ,MAX(BLLG_SCHD_THRU_DT) AS INV_THRU_DT
            FROM
                 DS_CONTR_DTL       A
                ,DS_CONTR_BLLG_SCHD B
            WHERE
                A.GLBL_CMPY_CD            =  #glblCmpyCd#
            AND A.EZCANCELFLAG            =  '0'
            AND A.DS_CONTR_DTL_PK         =  #dsContrDtlPk#
            AND A.GLBL_CMPY_CD            =  B.GLBL_CMPY_CD      (+)
            AND A.DS_CONTR_DTL_PK         =  B.DS_CONTR_DTL_PK   (+)
            AND B.EZCANCELFLAG        (+) =  '0'
            AND B.DS_CONTR_PRC_EFF_PK (+) IS NOT NULL
            AND B.INV_DT              (+) IS NOT NULL
            AND B.USG_CHRG_FLG        (+) =  'Y'
            GROUP BY
                 A.DS_CONTR_DTL_PK
                ,A.CONTR_EFF_THRU_DT
                ,A.CONTR_CLO_DT
            ) Z
    </statement>
    <!-- END 2023/08/28 S.Moriai [QC#59846, ADD] -->
</sqlMap>
