//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20160216175913000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0600_ACMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NSAL0600;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL0600 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL0600_ACMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_CHK_BOX_A*/
	public final EZDCStringItem              xxChkBox_A;

    /** DS_CONTR_DTL_PK_A*/
	public final EZDCBigDecimalItem              dsContrDtlPk_A;

    /** SVC_MACH_MSTR_PK_A*/
	public final EZDCBigDecimalItem              svcMachMstrPk_A;

    /** SER_NUM_A*/
	public final EZDCStringItem              serNum_A;

    /** CONTR_EFF_FROM_DT_A*/
	public final EZDCDateItem              contrEffFromDt_A;

    /** CONTR_EFF_THRU_DT_A*/
	public final EZDCDateItem              contrEffThruDt_A;

    /** CONTR_EFF_FROM_DT_AN*/
	public final EZDCDateItem              contrEffFromDt_AN;

    /** CONTR_EFF_THRU_DT_AN*/
	public final EZDCDateItem              contrEffThruDt_AN;

    /** DS_CONTR_CTRL_STS_CD_A*/
	public final EZDCStringItem              dsContrCtrlStsCd_A;

    /** DS_CONTR_DTL_TP_CD_A*/
	public final EZDCStringItem              dsContrDtlTpCd_A;

    /** _EZUpdateDateTime_A*/
	public final EZDCStringItem              ezUpTime_A;

    /** _EZUpTimeZone_A*/
	public final EZDCStringItem              ezUpTimeZone_A;


	/**
	 * NSAL0600_ACMsg is constructor.
	 * The initialization when the instance of NSAL0600_ACMsg is generated.
	 */
	public NSAL0600_ACMsg() {
		this(false, -1);
	}

	/**
	 * NSAL0600_ACMsg is constructor.
	 * The initialization when the instance of NSAL0600_ACMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL0600_ACMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxChkBox_A = (EZDCStringItem)newItem("xxChkBox_A");
		dsContrDtlPk_A = (EZDCBigDecimalItem)newItem("dsContrDtlPk_A");
		svcMachMstrPk_A = (EZDCBigDecimalItem)newItem("svcMachMstrPk_A");
		serNum_A = (EZDCStringItem)newItem("serNum_A");
		contrEffFromDt_A = (EZDCDateItem)newItem("contrEffFromDt_A");
		contrEffThruDt_A = (EZDCDateItem)newItem("contrEffThruDt_A");
		contrEffFromDt_AN = (EZDCDateItem)newItem("contrEffFromDt_AN");
		contrEffThruDt_AN = (EZDCDateItem)newItem("contrEffThruDt_AN");
		dsContrCtrlStsCd_A = (EZDCStringItem)newItem("dsContrCtrlStsCd_A");
		dsContrDtlTpCd_A = (EZDCStringItem)newItem("dsContrDtlTpCd_A");
		ezUpTime_A = (EZDCStringItem)newItem("ezUpTime_A");
		ezUpTimeZone_A = (EZDCStringItem)newItem("ezUpTimeZone_A");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL0600_ACMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL0600_ACMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxChkBox_A", "xxChkBox_A", "A", null, TYPE_HANKAKUEIJI, "1", null},
	{"dsContrDtlPk_A", "dsContrDtlPk_A", "A", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"svcMachMstrPk_A", "svcMachMstrPk_A", "A", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"serNum_A", "serNum_A", "A", null, TYPE_HANKAKUEISU, "30", null},
	{"contrEffFromDt_A", "contrEffFromDt_A", "A", null, TYPE_NENTSUKIHI, "8", null},
	{"contrEffThruDt_A", "contrEffThruDt_A", "A", null, TYPE_NENTSUKIHI, "8", null},
	{"contrEffFromDt_AN", "contrEffFromDt_AN", "AN", null, TYPE_NENTSUKIHI, "8", null},
	{"contrEffThruDt_AN", "contrEffThruDt_AN", "AN", null, TYPE_NENTSUKIHI, "8", null},
	{"dsContrCtrlStsCd_A", "dsContrCtrlStsCd_A", "A", null, TYPE_HANKAKUEISU, "4", null},
	{"dsContrDtlTpCd_A", "dsContrDtlTpCd_A", "A", null, TYPE_HANKAKUEISU, "6", null},
	{"ezUpTime_A", "ezUpTime_A", "A", null, TYPE_HANKAKUEISU, "17", null},
	{"ezUpTimeZone_A", "ezUpTimeZone_A", "A", null, TYPE_HANKAKUEISU, "5", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_A
        {"DS_CONTR_DTL_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrDtlPk_A
        {"SVC_MACH_MSTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachMstrPk_A
        {"SER_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNum_A
        {"CONTR_EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrEffFromDt_A
        {"CONTR_EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrEffThruDt_A
        {"CONTR_EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrEffFromDt_AN
        {"CONTR_EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrEffThruDt_AN
        {"DS_CONTR_CTRL_STS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrCtrlStsCd_A
        {"DS_CONTR_DTL_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrDtlTpCd_A
        {"_EZUpdateDateTime",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTime_A
        {"_EZUpTimeZone",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTimeZone_A
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

