//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20160216175913000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0600CMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NSAL0600;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL0600 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL0600CMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** DS_CONTR_PK_P*/
	public final EZDCBigDecimalItem              dsContrPk_P;

    /** SLS_DT_P*/
	public final EZDCDateItem              slsDt_P;

    /** XX_FROM_DT_H*/
	public final EZDCDateItem              xxFromDt_H;

    /** XX_THRU_DT_H*/
	public final EZDCDateItem              xxThruDt_H;

    /** SVC_MEMO_RSN_CD_HS*/
	public final EZDCStringItem              svcMemoRsnCd_HS;

    /** SVC_MEMO_RSN_CD_HC*/
	public final EZDCStringItemArray              svcMemoRsnCd_HC;

    /** SVC_MEMO_RSN_DESC_TXT_HD*/
	public final EZDCStringItemArray              svcMemoRsnDescTxt_HD;

    /** SVC_CMNT_TXT_H*/
	public final EZDCStringItem              svcCmntTxt_H;

    /** _EZUpdateDateTime_H*/
	public final EZDCStringItem              ezUpTime_H;

    /** _EZUpTimeZone_H*/
	public final EZDCStringItem              ezUpTimeZone_H;

    /** INV_FLG_H*/
	public final EZDCStringItem              invFlg_H;

    /** DS_CONTR_NUM*/
	public final EZDCStringItem              dsContrNum;

    /** CONTR_VRSN_EFF_FROM_DT*/
	public final EZDCDateItem              contrVrsnEffFromDt;

    /** CONTR_VRSN_EFF_THRU_DT*/
	public final EZDCDateItem              contrVrsnEffThruDt;

    /** CONTR_VRSN_EFF_FROM_DT_N*/
	public final EZDCDateItem              contrVrsnEffFromDt_N;

    /** CONTR_VRSN_EFF_THRU_DT_N*/
	public final EZDCDateItem              contrVrsnEffThruDt_N;

    /** DS_CONTR_CTRL_STS_CD*/
	public final EZDCStringItem              dsContrCtrlStsCd;

    /** XX_PAGE_SHOW_FROM_NUM*/
	public final EZDCBigDecimalItem              xxPageShowFromNum;

    /** XX_PAGE_SHOW_TO_NUM*/
	public final EZDCBigDecimalItem              xxPageShowToNum;

    /** XX_PAGE_SHOW_OF_NUM*/
	public final EZDCBigDecimalItem              xxPageShowOfNum;

    /** A*/
	public final business.blap.NSAL0600.NSAL0600_ACMsgArray              A;


	/**
	 * NSAL0600CMsg is constructor.
	 * The initialization when the instance of NSAL0600CMsg is generated.
	 */
	public NSAL0600CMsg() {
		this(false, -1);
	}

	/**
	 * NSAL0600CMsg is constructor.
	 * The initialization when the instance of NSAL0600CMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL0600CMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		dsContrPk_P = (EZDCBigDecimalItem)newItem("dsContrPk_P");
		slsDt_P = (EZDCDateItem)newItem("slsDt_P");
		xxFromDt_H = (EZDCDateItem)newItem("xxFromDt_H");
		xxThruDt_H = (EZDCDateItem)newItem("xxThruDt_H");
		svcMemoRsnCd_HS = (EZDCStringItem)newItem("svcMemoRsnCd_HS");
		svcMemoRsnCd_HC = (EZDCStringItemArray)newItemArray("svcMemoRsnCd_HC");
		svcMemoRsnDescTxt_HD = (EZDCStringItemArray)newItemArray("svcMemoRsnDescTxt_HD");
		svcCmntTxt_H = (EZDCStringItem)newItem("svcCmntTxt_H");
		ezUpTime_H = (EZDCStringItem)newItem("ezUpTime_H");
		ezUpTimeZone_H = (EZDCStringItem)newItem("ezUpTimeZone_H");
		invFlg_H = (EZDCStringItem)newItem("invFlg_H");
		dsContrNum = (EZDCStringItem)newItem("dsContrNum");
		contrVrsnEffFromDt = (EZDCDateItem)newItem("contrVrsnEffFromDt");
		contrVrsnEffThruDt = (EZDCDateItem)newItem("contrVrsnEffThruDt");
		contrVrsnEffFromDt_N = (EZDCDateItem)newItem("contrVrsnEffFromDt_N");
		contrVrsnEffThruDt_N = (EZDCDateItem)newItem("contrVrsnEffThruDt_N");
		dsContrCtrlStsCd = (EZDCStringItem)newItem("dsContrCtrlStsCd");
		xxPageShowFromNum = (EZDCBigDecimalItem)newItem("xxPageShowFromNum");
		xxPageShowToNum = (EZDCBigDecimalItem)newItem("xxPageShowToNum");
		xxPageShowOfNum = (EZDCBigDecimalItem)newItem("xxPageShowOfNum");
		A = (business.blap.NSAL0600.NSAL0600_ACMsgArray)newMsgArray("A");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL0600CMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL0600CMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"dsContrPk_P", "dsContrPk_P", "P", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"slsDt_P", "slsDt_P", "P", null, TYPE_NENTSUKIHI, "8", null},
	{"xxFromDt_H", "xxFromDt_H", "H", null, TYPE_NENTSUKIHI, "8", null},
	{"xxThruDt_H", "xxThruDt_H", "H", null, TYPE_NENTSUKIHI, "8", null},
	{"svcMemoRsnCd_HS", "svcMemoRsnCd_HS", "HS", null, TYPE_HANKAKUEISU, "4", null},
	{"svcMemoRsnCd_HC", "svcMemoRsnCd_HC", "HC", "99", TYPE_HANKAKUEISU, "4", null},
	{"svcMemoRsnDescTxt_HD", "svcMemoRsnDescTxt_HD", "HD", "99", TYPE_HANKAKUEISU, "50", null},
	{"svcCmntTxt_H", "svcCmntTxt_H", "H", null, TYPE_HANKAKUEISU, "4000", null},
	{"ezUpTime_H", "ezUpTime_H", "H", null, TYPE_HANKAKUEISU, "17", null},
	{"ezUpTimeZone_H", "ezUpTimeZone_H", "H", null, TYPE_HANKAKUEISU, "5", null},
	{"invFlg_H", "invFlg_H", "H", null, TYPE_HANKAKUEISU, "1", null},
	{"dsContrNum", "dsContrNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"contrVrsnEffFromDt", "contrVrsnEffFromDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"contrVrsnEffThruDt", "contrVrsnEffThruDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"contrVrsnEffFromDt_N", "contrVrsnEffFromDt_N", "N", null, TYPE_NENTSUKIHI, "8", null},
	{"contrVrsnEffThruDt_N", "contrVrsnEffThruDt_N", "N", null, TYPE_NENTSUKIHI, "8", null},
	{"dsContrCtrlStsCd", "dsContrCtrlStsCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"xxPageShowFromNum", "xxPageShowFromNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowToNum", "xxPageShowToNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowOfNum", "xxPageShowOfNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"A", "A", null, "40", "business.blap.NSAL0600.NSAL0600_ACMsgArray", null, null},
	
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"DS_CONTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrPk_P
        {"SLS_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//slsDt_P
        {"XX_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxFromDt_H
        {"XX_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxThruDt_H
        {"SVC_MEMO_RSN_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMemoRsnCd_HS
        {"SVC_MEMO_RSN_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMemoRsnCd_HC
        {"SVC_MEMO_RSN_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMemoRsnDescTxt_HD
        {"SVC_CMNT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcCmntTxt_H
        {"_EZUpdateDateTime",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTime_H
        {"_EZUpTimeZone",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTimeZone_H
        {"INV_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invFlg_H
        {"DS_CONTR_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrNum
        {"CONTR_VRSN_EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrVrsnEffFromDt
        {"CONTR_VRSN_EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrVrsnEffThruDt
        {"CONTR_VRSN_EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrVrsnEffFromDt_N
        {"CONTR_VRSN_EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrVrsnEffThruDt_N
        {"DS_CONTR_CTRL_STS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrCtrlStsCd
        {"XX_PAGE_SHOW_FROM_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowFromNum
        {"XX_PAGE_SHOW_TO_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowToNum
        {"XX_PAGE_SHOW_OF_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowOfNum
		null,	//A
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

