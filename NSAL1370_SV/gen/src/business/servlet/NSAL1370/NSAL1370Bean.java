// This file was automatically generated by Screen Field Definition Document and XLA200710010
// Generated on    :20171026153201000
// Velocity Macro:svltdatabean.vm V200604010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL1370Bean.java Copyright FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */

package  business.servlet.NSAL1370;

import parts.servletcommon.EZDCommonDataBean;

/*
 * NSAL1370 is data bean class.
 */
public class NSAL1370Bean extends EZDCommonDataBean {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	//Constant Definition Area
	/** XX_PROC_MD_P*/
	public static final String xxProcMd_P = "xxProcMd_P";

	/** CPO_SVC_DTL_PK_P*/
	public static final String cpoSvcDtlPk_P = "cpoSvcDtlPk_P";

	/** CPO_SVC_PRC_PK_P*/
	public static final String cpoSvcPrcPk_P = "cpoSvcPrcPk_P";

	/** MDL_ID_P*/
	public static final String mdlId_P = "mdlId_P";

	/** BLLG_MTR_LB_CD_P*/
	public static final String bllgMtrLbCd_P = "bllgMtrLbCd_P";

	/** DS_CONTR_CATG_CD_P*/
	public static final String dsContrCatgCd_P = "dsContrCatgCd_P";

	/** DS_CONTR_PK_P*/
	public static final String dsContrPk_P = "dsContrPk_P";

	/** XX_DPLY_CTRL_FLG_AG*/
	public static final String xxDplyCtrlFlg_AG = "xxDplyCtrlFlg_AG";

	/** Q*/
	public static final String Q = "Q";

	/** MDL_ID_Q*/
	public static final String mdlId_Q = "mdlId_Q";

	/** BLLG_MTR_LB_CD_Q*/
	public static final String bllgMtrLbCd_Q = "bllgMtrLbCd_Q";

	/** PRC_SVC_TIER_TP_CD_Q*/
	public static final String prcSvcTierTpCd_Q = "prcSvcTierTpCd_Q";

	/** PRC_SVC_TIER_TP_DESC_TXT_Q*/
	public static final String prcSvcTierTpDescTxt_Q = "prcSvcTierTpDescTxt_Q";

	/** MIN_COPY_VOL_CNT_Q*/
	public static final String minCopyVolCnt_Q = "minCopyVolCnt_Q";

	/** MAX_COPY_VOL_CNT_Q*/
	public static final String maxCopyVolCnt_Q = "maxCopyVolCnt_Q";

	/** XS_MTR_AMT_RATE_Q*/
	public static final String xsMtrAmtRate_Q = "xsMtrAmtRate_Q";

	/** GLBL_CMPY_CD*/
	public static final String glblCmpyCd = "glblCmpyCd";

	/** T_MDL_NM*/
	public static final String t_MdlNm = "t_MdlNm";

	/** MTR_LB_DESC_TXT_BL*/
	public static final String mtrLbDescTxt_BL = "mtrLbDescTxt_BL";

	/** A*/
	public static final String A = "A";

	/** MDL_ID_A*/
	public static final String mdlId_A = "mdlId_A";

	/** BLLG_MTR_LB_CD_A*/
	public static final String bllgMtrLbCd_A = "bllgMtrLbCd_A";

	/** PRC_SVC_TIER_TP_CD_A*/
	public static final String prcSvcTierTpCd_A = "prcSvcTierTpCd_A";

	/** PRC_SVC_TIER_TP_DESC_TXT_A*/
	public static final String prcSvcTierTpDescTxt_A = "prcSvcTierTpDescTxt_A";

	/** MIN_COPY_VOL_CNT_A*/
	public static final String minCopyVolCnt_A = "minCopyVolCnt_A";

	/** MAX_COPY_VOL_CNT_A*/
	public static final String maxCopyVolCnt_A = "maxCopyVolCnt_A";

	/** XS_MTR_AMT_RATE_A*/
	public static final String xsMtrAmtRate_A = "xsMtrAmtRate_A";

	/**
	 * Method name:NSAL1370 is Bean's Constructor.
	 * <dd>method explanation:Initialization when instance of NSAL1370Bean is generated
	 * <dd>Remarks:
	 */
	public NSAL1370Bean() {
		super("business.servlet.NSAL1370.NSAL1370BMsg");
	}

	/**
	 * get  XX_PROC_MD_P.
	 * @return XX_PROC_MD_P
	 */
	public String getXxProcMd_P() {
		return outputValue(xxProcMd_P);
	}

	/**
	 * set  XX_PROC_MD_P.
	 * @param data XX_PROC_MD_P
	 */
	public void setXxProcMd_P(String data) {
		inputValue(xxProcMd_P,data);
	}

	/**
	 * get  CPO_SVC_DTL_PK_P.
	 * @return CPO_SVC_DTL_PK_P
	 */
	public String getCpoSvcDtlPk_P() {
		return outputValue(cpoSvcDtlPk_P);
	}

	/**
	 * set  CPO_SVC_DTL_PK_P.
	 * @param data CPO_SVC_DTL_PK_P
	 */
	public void setCpoSvcDtlPk_P(String data) {
		inputValue(cpoSvcDtlPk_P,data);
	}

	/**
	 * get  CPO_SVC_PRC_PK_P.
	 * @return CPO_SVC_PRC_PK_P
	 */
	public String getCpoSvcPrcPk_P() {
		return outputValue(cpoSvcPrcPk_P);
	}

	/**
	 * set  CPO_SVC_PRC_PK_P.
	 * @param data CPO_SVC_PRC_PK_P
	 */
	public void setCpoSvcPrcPk_P(String data) {
		inputValue(cpoSvcPrcPk_P,data);
	}

	/**
	 * get  MDL_ID_P.
	 * @return MDL_ID_P
	 */
	public String getMdlId_P() {
		return outputValue(mdlId_P);
	}

	/**
	 * set  MDL_ID_P.
	 * @param data MDL_ID_P
	 */
	public void setMdlId_P(String data) {
		inputValue(mdlId_P,data);
	}

	/**
	 * get  BLLG_MTR_LB_CD_P.
	 * @return BLLG_MTR_LB_CD_P
	 */
	public String getBllgMtrLbCd_P() {
		return outputValue(bllgMtrLbCd_P);
	}

	/**
	 * set  BLLG_MTR_LB_CD_P.
	 * @param data BLLG_MTR_LB_CD_P
	 */
	public void setBllgMtrLbCd_P(String data) {
		inputValue(bllgMtrLbCd_P,data);
	}

	/**
	 * get  DS_CONTR_CATG_CD_P.
	 * @return DS_CONTR_CATG_CD_P
	 */
	public String getDsContrCatgCd_P() {
		return outputValue(dsContrCatgCd_P);
	}

	/**
	 * set  DS_CONTR_CATG_CD_P.
	 * @param data DS_CONTR_CATG_CD_P
	 */
	public void setDsContrCatgCd_P(String data) {
		inputValue(dsContrCatgCd_P,data);
	}

	/**
	 * get  DS_CONTR_PK_P.
	 * @return DS_CONTR_PK_P
	 */
	public String getDsContrPk_P() {
		return outputValue(dsContrPk_P);
	}

	/**
	 * set  DS_CONTR_PK_P.
	 * @param data DS_CONTR_PK_P
	 */
	public void setDsContrPk_P(String data) {
		inputValue(dsContrPk_P,data);
	}

	/**
	 * get  XX_DPLY_CTRL_FLG_AG.
	 * @return XX_DPLY_CTRL_FLG_AG
	 */
	public String getXxDplyCtrlFlg_AG() {
		return outputValue(xxDplyCtrlFlg_AG);
	}

	/**
	 * set  XX_DPLY_CTRL_FLG_AG.
	 * @param data XX_DPLY_CTRL_FLG_AG
	 */
	public void setXxDplyCtrlFlg_AG(String data) {
		inputValue(xxDplyCtrlFlg_AG,data);
	}

	/**
	 * get  MDL_ID_Q.
	 * @param idx1 List Number
	 * @return MDL_ID_Q
	 */
	public String getMdlId_Q(int idx1) {
		return outputValue(Q, idx1, mdlId_Q);
	}

	/**
	 * set  MDL_ID_Q.
	 * @param data MDL_ID_QArray
	 */
	public void setMdlId_Q(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(Q);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(Q, i, mdlId_Q, data[j]);
		}
	}

	/**
	 * get  BLLG_MTR_LB_CD_Q.
	 * @param idx1 List Number
	 * @return BLLG_MTR_LB_CD_Q
	 */
	public String getBllgMtrLbCd_Q(int idx1) {
		return outputValue(Q, idx1, bllgMtrLbCd_Q);
	}

	/**
	 * set  BLLG_MTR_LB_CD_Q.
	 * @param data BLLG_MTR_LB_CD_QArray
	 */
	public void setBllgMtrLbCd_Q(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(Q);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(Q, i, bllgMtrLbCd_Q, data[j]);
		}
	}

	/**
	 * get  PRC_SVC_TIER_TP_CD_Q.
	 * @param idx1 List Number
	 * @return PRC_SVC_TIER_TP_CD_Q
	 */
	public String getPrcSvcTierTpCd_Q(int idx1) {
		return outputValue(Q, idx1, prcSvcTierTpCd_Q);
	}

	/**
	 * set  PRC_SVC_TIER_TP_CD_Q.
	 * @param data PRC_SVC_TIER_TP_CD_QArray
	 */
	public void setPrcSvcTierTpCd_Q(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(Q);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(Q, i, prcSvcTierTpCd_Q, data[j]);
		}
	}

	/**
	 * get  PRC_SVC_TIER_TP_DESC_TXT_Q.
	 * @param idx1 List Number
	 * @return PRC_SVC_TIER_TP_DESC_TXT_Q
	 */
	public String getPrcSvcTierTpDescTxt_Q(int idx1) {
		return outputValue(Q, idx1, prcSvcTierTpDescTxt_Q);
	}

	/**
	 * set  PRC_SVC_TIER_TP_DESC_TXT_Q.
	 * @param data PRC_SVC_TIER_TP_DESC_TXT_QArray
	 */
	public void setPrcSvcTierTpDescTxt_Q(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(Q);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(Q, i, prcSvcTierTpDescTxt_Q, data[j]);
		}
	}

	/**
	 * get  MIN_COPY_VOL_CNT_Q.
	 * @param idx1 List Number
	 * @return MIN_COPY_VOL_CNT_Q
	 */
	public String getMinCopyVolCnt_Q(int idx1) {
		return outputValue(Q, idx1, minCopyVolCnt_Q);
	}

	/**
	 * set  MIN_COPY_VOL_CNT_Q.
	 * @param data MIN_COPY_VOL_CNT_QArray
	 */
	public void setMinCopyVolCnt_Q(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(Q);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(Q, i, minCopyVolCnt_Q, data[j]);
		}
	}

	/**
	 * get  MAX_COPY_VOL_CNT_Q.
	 * @param idx1 List Number
	 * @return MAX_COPY_VOL_CNT_Q
	 */
	public String getMaxCopyVolCnt_Q(int idx1) {
		return outputValue(Q, idx1, maxCopyVolCnt_Q);
	}

	/**
	 * set  MAX_COPY_VOL_CNT_Q.
	 * @param data MAX_COPY_VOL_CNT_QArray
	 */
	public void setMaxCopyVolCnt_Q(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(Q);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(Q, i, maxCopyVolCnt_Q, data[j]);
		}
	}

	/**
	 * get  XS_MTR_AMT_RATE_Q.
	 * @param idx1 List Number
	 * @return XS_MTR_AMT_RATE_Q
	 */
	public String getXsMtrAmtRate_Q(int idx1) {
		return outputValue(Q, idx1, xsMtrAmtRate_Q);
	}

	/**
	 * set  XS_MTR_AMT_RATE_Q.
	 * @param data XS_MTR_AMT_RATE_QArray
	 */
	public void setXsMtrAmtRate_Q(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(Q);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(Q, i, xsMtrAmtRate_Q, data[j]);
		}
	}

	/**
	 * get  GLBL_CMPY_CD.
	 * @return GLBL_CMPY_CD
	 */
	public String getGlblCmpyCd() {
		return outputValue(glblCmpyCd);
	}

	/**
	 * set  GLBL_CMPY_CD.
	 * @param data GLBL_CMPY_CD
	 */
	public void setGlblCmpyCd(String data) {
		inputValue(glblCmpyCd,data);
	}

	/**
	 * get  T_MDL_NM.
	 * @return T_MDL_NM
	 */
	public String getT_MdlNm() {
		return outputValue(t_MdlNm);
	}

	/**
	 * set  T_MDL_NM.
	 * @param data T_MDL_NM
	 */
	public void setT_MdlNm(String data) {
		inputValue(t_MdlNm,data);
	}

	/**
	 * get  MTR_LB_DESC_TXT_BL.
	 * @return MTR_LB_DESC_TXT_BL
	 */
	public String getMtrLbDescTxt_BL() {
		return outputValue(mtrLbDescTxt_BL);
	}

	/**
	 * set  MTR_LB_DESC_TXT_BL.
	 * @param data MTR_LB_DESC_TXT_BL
	 */
	public void setMtrLbDescTxt_BL(String data) {
		inputValue(mtrLbDescTxt_BL,data);
	}

	/**
	 * get  MDL_ID_A.
	 * @param idx1 List Number
	 * @return MDL_ID_A
	 */
	public String getMdlId_A(int idx1) {
		return outputValue(A, idx1, mdlId_A);
	}

	/**
	 * set  MDL_ID_A.
	 * @param data MDL_ID_AArray
	 */
	public void setMdlId_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, mdlId_A, data[j]);
		}
	}

	/**
	 * get  BLLG_MTR_LB_CD_A.
	 * @param idx1 List Number
	 * @return BLLG_MTR_LB_CD_A
	 */
	public String getBllgMtrLbCd_A(int idx1) {
		return outputValue(A, idx1, bllgMtrLbCd_A);
	}

	/**
	 * set  BLLG_MTR_LB_CD_A.
	 * @param data BLLG_MTR_LB_CD_AArray
	 */
	public void setBllgMtrLbCd_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, bllgMtrLbCd_A, data[j]);
		}
	}

	/**
	 * get  PRC_SVC_TIER_TP_CD_A.
	 * @param idx1 List Number
	 * @return PRC_SVC_TIER_TP_CD_A
	 */
	public String getPrcSvcTierTpCd_A(int idx1) {
		return outputValue(A, idx1, prcSvcTierTpCd_A);
	}

	/**
	 * set  PRC_SVC_TIER_TP_CD_A.
	 * @param data PRC_SVC_TIER_TP_CD_AArray
	 */
	public void setPrcSvcTierTpCd_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcSvcTierTpCd_A, data[j]);
		}
	}

	/**
	 * get  PRC_SVC_TIER_TP_DESC_TXT_A.
	 * @param idx1 List Number
	 * @return PRC_SVC_TIER_TP_DESC_TXT_A
	 */
	public String getPrcSvcTierTpDescTxt_A(int idx1) {
		return outputValue(A, idx1, prcSvcTierTpDescTxt_A);
	}

	/**
	 * set  PRC_SVC_TIER_TP_DESC_TXT_A.
	 * @param data PRC_SVC_TIER_TP_DESC_TXT_AArray
	 */
	public void setPrcSvcTierTpDescTxt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcSvcTierTpDescTxt_A, data[j]);
		}
	}

	/**
	 * get  MIN_COPY_VOL_CNT_A.
	 * @param idx1 List Number
	 * @return MIN_COPY_VOL_CNT_A
	 */
	public String getMinCopyVolCnt_A(int idx1) {
		return outputValue(A, idx1, minCopyVolCnt_A);
	}

	/**
	 * set  MIN_COPY_VOL_CNT_A.
	 * @param data MIN_COPY_VOL_CNT_AArray
	 */
	public void setMinCopyVolCnt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, minCopyVolCnt_A, data[j]);
		}
	}

	/**
	 * get  MAX_COPY_VOL_CNT_A.
	 * @param idx1 List Number
	 * @return MAX_COPY_VOL_CNT_A
	 */
	public String getMaxCopyVolCnt_A(int idx1) {
		return outputValue(A, idx1, maxCopyVolCnt_A);
	}

	/**
	 * set  MAX_COPY_VOL_CNT_A.
	 * @param data MAX_COPY_VOL_CNT_AArray
	 */
	public void setMaxCopyVolCnt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, maxCopyVolCnt_A, data[j]);
		}
	}

	/**
	 * get  XS_MTR_AMT_RATE_A.
	 * @param idx1 List Number
	 * @return XS_MTR_AMT_RATE_A
	 */
	public String getXsMtrAmtRate_A(int idx1) {
		return outputValue(A, idx1, xsMtrAmtRate_A);
	}

	/**
	 * set  XS_MTR_AMT_RATE_A.
	 * @param data XS_MTR_AMT_RATE_AArray
	 */
	public void setXsMtrAmtRate_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xsMtrAmtRate_A, data[j]);
		}
	}

}

