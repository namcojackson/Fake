//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20170920165934000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NWAL1620CMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NWAL1620;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NWAL1620 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NWAL1620CMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_MODE_CD_CP*/
	public final EZDCStringItem              xxModeCd_CP;

    /** XX_MODE_CD*/
	public final EZDCStringItem              xxModeCd;

    /** GLBL_CMPY_CD*/
	public final EZDCStringItem              glblCmpyCd;

    /** CPO_ORD_NUM*/
	public final EZDCStringItem              cpoOrdNum;

    /** XX_CHK_BOX*/
	public final EZDCStringItem              xxChkBox;

    /** CONFIG_CATG_CD*/
	public final EZDCStringItem              configCatgCd;

    /** CONFIG_CATG_CD_CD*/
	public final EZDCStringItemArray              configCatgCd_CD;

    /** CONFIG_CATG_DESC_TXT_DI*/
	public final EZDCStringItemArray              configCatgDescTxt_DI;

    /** DS_ORD_POSN_NUM*/
	public final EZDCStringItem              dsOrdPosnNum;

    /** DS_CPO_LINE_NUM*/
	public final EZDCBigDecimalItem              dsCpoLineNum;

    /** XX_CHK_BOX_R*/
	public final EZDCStringItem              xxChkBox_R;

    /** XX_QTY_10_NUM*/
	public final EZDCBigDecimalItem              xxQty10Num;


	/**
	 * NWAL1620CMsg is constructor.
	 * The initialization when the instance of NWAL1620CMsg is generated.
	 */
	public NWAL1620CMsg() {
		this(false, -1);
	}

	/**
	 * NWAL1620CMsg is constructor.
	 * The initialization when the instance of NWAL1620CMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NWAL1620CMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxModeCd_CP = (EZDCStringItem)newItem("xxModeCd_CP");
		xxModeCd = (EZDCStringItem)newItem("xxModeCd");
		glblCmpyCd = (EZDCStringItem)newItem("glblCmpyCd");
		cpoOrdNum = (EZDCStringItem)newItem("cpoOrdNum");
		xxChkBox = (EZDCStringItem)newItem("xxChkBox");
		configCatgCd = (EZDCStringItem)newItem("configCatgCd");
		configCatgCd_CD = (EZDCStringItemArray)newItemArray("configCatgCd_CD");
		configCatgDescTxt_DI = (EZDCStringItemArray)newItemArray("configCatgDescTxt_DI");
		dsOrdPosnNum = (EZDCStringItem)newItem("dsOrdPosnNum");
		dsCpoLineNum = (EZDCBigDecimalItem)newItem("dsCpoLineNum");
		xxChkBox_R = (EZDCStringItem)newItem("xxChkBox_R");
		xxQty10Num = (EZDCBigDecimalItem)newItem("xxQty10Num");
	}

	/**
	 * get the type of array which is stored
	 * @return NWAL1620CMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NWAL1620CMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxModeCd_CP", "xxModeCd_CP", "CP", null, TYPE_HANKAKUEISU, "2", null},
	{"xxModeCd", "xxModeCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"glblCmpyCd", "glblCmpyCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"cpoOrdNum", "cpoOrdNum", null, null, TYPE_HANKAKUEISU, "8", null},
	{"xxChkBox", "xxChkBox", null, null, TYPE_HANKAKUEIJI, "1", null},
	{"configCatgCd", "configCatgCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"configCatgCd_CD", "configCatgCd_CD", "CD", "99", TYPE_HANKAKUEISU, "2", null},
	{"configCatgDescTxt_DI", "configCatgDescTxt_DI", "DI", "99", TYPE_HANKAKUEISU, "50", null},
	{"dsOrdPosnNum", "dsOrdPosnNum", null, null, TYPE_HANKAKUEISU, "6", null},
	{"dsCpoLineNum", "dsCpoLineNum", null, null, TYPE_SEISU_SYOSU, "4", "0"},
	{"xxChkBox_R", "xxChkBox_R", "R", null, TYPE_HANKAKUEIJI, "1", null},
	{"xxQty10Num", "xxQty10Num", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_MODE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxModeCd_CP
        {"XX_MODE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxModeCd
        {"GLBL_CMPY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//glblCmpyCd
        {"CPO_ORD_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cpoOrdNum
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox
        {"CONFIG_CATG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//configCatgCd
        {"CONFIG_CATG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//configCatgCd_CD
        {"CONFIG_CATG_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//configCatgDescTxt_DI
        {"DS_ORD_POSN_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdPosnNum
        {"DS_CPO_LINE_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsCpoLineNum
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_R
        {"XX_QTY_10_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxQty10Num
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

