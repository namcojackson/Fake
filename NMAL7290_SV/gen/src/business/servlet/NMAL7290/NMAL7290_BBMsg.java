//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20161108144357000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NMAL7290_BBMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NMAL7290;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NMAL7290 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NMAL7290_BBMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_CHK_BOX_B*/
	public final EZDBStringItem              xxChkBox_B;

    /** PRC_RULE_PRCD_SQ_NUM_B*/
	public final EZDBBigDecimalItem              prcRulePrcdSqNum_B;

    /** PRC_RULE_PRCD_DTL_PK_B*/
	public final EZDBBigDecimalItem              prcRulePrcdDtlPk_B;

    /** PRC_RULE_HDR_PK_B*/
	public final EZDBBigDecimalItem              prcRuleHdrPk_B;

    /** PRC_RULE_NM_B*/
	public final EZDBStringItem              prcRuleNm_B;

    /** PRC_RULE_COND_TP_CD_B*/
	public final EZDBStringItem              prcRuleCondTpCd_B;

    /** PRC_RULE_COND_TP_DESC_TXT_B*/
	public final EZDBStringItem              prcRuleCondTpDescTxt_B;

    /** LINE_BIZ_TP_CD_B*/
	public final EZDBStringItem              lineBizTpCd_B;

    /** LINE_BIZ_TP_DESC_TXT_B*/
	public final EZDBStringItem              lineBizTpDescTxt_B;

    /** PRC_RULE_CATG_CD_B*/
	public final EZDBStringItem              prcRuleCatgCd_B;

    /** PRC_RULE_CATG_DESC_TXT_B*/
	public final EZDBStringItem              prcRuleCatgDescTxt_B;

    /** APPLY_AUTO_FLG_B*/
	public final EZDBStringItem              applyAutoFlg_B;

    /** OVRD_FLG_B*/
	public final EZDBStringItem              ovrdFlg_B;

    /** ACTV_FLG_B*/
	public final EZDBStringItem              actvFlg_B;

    /** DEF_RULE_PRCD_NUM_B*/
	public final EZDBBigDecimalItem              defRulePrcdNum_B;

    /** EFF_FROM_DT_B*/
	public final EZDBDateItem              effFromDt_B;

    /** EFF_THRU_DT_B*/
	public final EZDBDateItem              effThruDt_B;

    /** DEL_FLG_B*/
	public final EZDBStringItem              delFlg_B;

    /** XX_SCR_ITEM_8_TXT_B*/
	public final EZDBStringItem              xxScrItem8Txt_B;

    /** XX_REC_HIST_CRAT_TS_B*/
	public final EZDBStringItem              xxRecHistCratTs_B;

    /** XX_REC_HIST_CRAT_BY_NM_B*/
	public final EZDBStringItem              xxRecHistCratByNm_B;

    /** XX_REC_HIST_UPD_TS_B*/
	public final EZDBStringItem              xxRecHistUpdTs_B;

    /** XX_REC_HIST_UPD_BY_NM_B*/
	public final EZDBStringItem              xxRecHistUpdByNm_B;

    /** XX_REC_HIST_TBL_NM_B*/
	public final EZDBStringItem              xxRecHistTblNm_B;


	/**
	 * NMAL7290_BBMsg is constructor.
	 * The initialization when the instance of NMAL7290_BBMsg is generated.
	 */
	public NMAL7290_BBMsg() {
		this(false, -1);
	}

	/**
	 * NMAL7290_BBMsg is constructor.
	 * The initialization when the instance of NMAL7290_BBMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NMAL7290_BBMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxChkBox_B = (EZDBStringItem)newItem("xxChkBox_B");
		prcRulePrcdSqNum_B = (EZDBBigDecimalItem)newItem("prcRulePrcdSqNum_B");
		prcRulePrcdDtlPk_B = (EZDBBigDecimalItem)newItem("prcRulePrcdDtlPk_B");
		prcRuleHdrPk_B = (EZDBBigDecimalItem)newItem("prcRuleHdrPk_B");
		prcRuleNm_B = (EZDBStringItem)newItem("prcRuleNm_B");
		prcRuleCondTpCd_B = (EZDBStringItem)newItem("prcRuleCondTpCd_B");
		prcRuleCondTpDescTxt_B = (EZDBStringItem)newItem("prcRuleCondTpDescTxt_B");
		lineBizTpCd_B = (EZDBStringItem)newItem("lineBizTpCd_B");
		lineBizTpDescTxt_B = (EZDBStringItem)newItem("lineBizTpDescTxt_B");
		prcRuleCatgCd_B = (EZDBStringItem)newItem("prcRuleCatgCd_B");
		prcRuleCatgDescTxt_B = (EZDBStringItem)newItem("prcRuleCatgDescTxt_B");
		applyAutoFlg_B = (EZDBStringItem)newItem("applyAutoFlg_B");
		ovrdFlg_B = (EZDBStringItem)newItem("ovrdFlg_B");
		actvFlg_B = (EZDBStringItem)newItem("actvFlg_B");
		defRulePrcdNum_B = (EZDBBigDecimalItem)newItem("defRulePrcdNum_B");
		effFromDt_B = (EZDBDateItem)newItem("effFromDt_B");
		effThruDt_B = (EZDBDateItem)newItem("effThruDt_B");
		delFlg_B = (EZDBStringItem)newItem("delFlg_B");
		xxScrItem8Txt_B = (EZDBStringItem)newItem("xxScrItem8Txt_B");
		xxRecHistCratTs_B = (EZDBStringItem)newItem("xxRecHistCratTs_B");
		xxRecHistCratByNm_B = (EZDBStringItem)newItem("xxRecHistCratByNm_B");
		xxRecHistUpdTs_B = (EZDBStringItem)newItem("xxRecHistUpdTs_B");
		xxRecHistUpdByNm_B = (EZDBStringItem)newItem("xxRecHistUpdByNm_B");
		xxRecHistTblNm_B = (EZDBStringItem)newItem("xxRecHistTblNm_B");
	}

	/**
	 * get the type of array which is stored
	 * @return NMAL7290_BBMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NMAL7290_BBMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxChkBox_B", "xxChkBox_B", "B", null, TYPE_HANKAKUEIJI, "1", null},
	{"prcRulePrcdSqNum_B", "prcRulePrcdSqNum_B", "B", null, TYPE_SEISU_SYOSU, "3", "0"},
	{"prcRulePrcdDtlPk_B", "prcRulePrcdDtlPk_B", "B", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"prcRuleHdrPk_B", "prcRuleHdrPk_B", "B", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"prcRuleNm_B", "prcRuleNm_B", "B", null, TYPE_HANKAKUEISU, "50", null},
	{"prcRuleCondTpCd_B", "prcRuleCondTpCd_B", "B", null, TYPE_HANKAKUEISU, "2", null},
	{"prcRuleCondTpDescTxt_B", "prcRuleCondTpDescTxt_B", "B", null, TYPE_HANKAKUEISU, "50", null},
	{"lineBizTpCd_B", "lineBizTpCd_B", "B", null, TYPE_HANKAKUEISU, "8", null},
	{"lineBizTpDescTxt_B", "lineBizTpDescTxt_B", "B", null, TYPE_HANKAKUEISU, "50", null},
	{"prcRuleCatgCd_B", "prcRuleCatgCd_B", "B", null, TYPE_HANKAKUEISU, "2", null},
	{"prcRuleCatgDescTxt_B", "prcRuleCatgDescTxt_B", "B", null, TYPE_HANKAKUEISU, "50", null},
	{"applyAutoFlg_B", "applyAutoFlg_B", "B", null, TYPE_HANKAKUEISU, "1", null},
	{"ovrdFlg_B", "ovrdFlg_B", "B", null, TYPE_HANKAKUEISU, "1", null},
	{"actvFlg_B", "actvFlg_B", "B", null, TYPE_HANKAKUEISU, "1", null},
	{"defRulePrcdNum_B", "defRulePrcdNum_B", "B", null, TYPE_SEISU_SYOSU, "3", "0"},
	{"effFromDt_B", "effFromDt_B", "B", null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt_B", "effThruDt_B", "B", null, TYPE_NENTSUKIHI, "8", null},
	{"delFlg_B", "delFlg_B", "B", null, TYPE_HANKAKUEISU, "1", null},
	{"xxScrItem8Txt_B", "xxScrItem8Txt_B", "B", null, TYPE_HANKAKUEISU, "8", null},
	{"xxRecHistCratTs_B", "xxRecHistCratTs_B", "B", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistCratByNm_B", "xxRecHistCratByNm_B", "B", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistUpdTs_B", "xxRecHistUpdTs_B", "B", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistUpdByNm_B", "xxRecHistUpdByNm_B", "B", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistTblNm_B", "xxRecHistTblNm_B", "B", null, TYPE_HANKAKUEISU, "60", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_CHK_BOX",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_B
        {"PRC_RULE_PRCD_SQ_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRulePrcdSqNum_B
        {"PRC_RULE_PRCD_DTL_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRulePrcdDtlPk_B
        {"PRC_RULE_HDR_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleHdrPk_B
        {"PRC_RULE_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleNm_B
        {"PRC_RULE_COND_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleCondTpCd_B
        {"PRC_RULE_COND_TP_DESC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleCondTpDescTxt_B
        {"LINE_BIZ_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//lineBizTpCd_B
        {"LINE_BIZ_TP_DESC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//lineBizTpDescTxt_B
        {"PRC_RULE_CATG_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleCatgCd_B
        {"PRC_RULE_CATG_DESC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleCatgDescTxt_B
        {"APPLY_AUTO_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//applyAutoFlg_B
        {"OVRD_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ovrdFlg_B
        {"ACTV_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//actvFlg_B
        {"DEF_RULE_PRCD_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//defRulePrcdNum_B
        {"EFF_FROM_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//effFromDt_B
        {"EFF_THRU_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//effThruDt_B
        {"DEL_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//delFlg_B
        {"XX_SCR_ITEM_8_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxScrItem8Txt_B
        {"XX_REC_HIST_CRAT_TS",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratTs_B
        {"XX_REC_HIST_CRAT_BY_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratByNm_B
        {"XX_REC_HIST_UPD_TS",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdTs_B
        {"XX_REC_HIST_UPD_BY_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdByNm_B
        {"XX_REC_HIST_TBL_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistTblNm_B
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

