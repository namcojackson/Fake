// This file was automatically generated by Screen Field Definition Document and XLA200710010
// Generated on    :20170511141407000
// Velocity Macro:svltdatabean.vm V200604010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NMAL7280Bean.java Copyright FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */

package  business.servlet.NMAL7280;

import com.fujitsu.uji.util.MimeSource;
import parts.servletcommon.EZDCommonDataBean;

/*
 * NMAL7280 is data bean class.
 */
public class NMAL7280Bean extends EZDCommonDataBean {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	//Constant Definition Area
	/** PRC_RULE_NM*/
	public static final String prcRuleNm = "prcRuleNm";

	/** PRC_RULE_HDR_PK*/
	public static final String prcRuleHdrPk = "prcRuleHdrPk";

	/** _EZUpdateDateTime*/
	public static final String ezUpTime = "ezUpTime";

	/** _EZUpTimeZone*/
	public static final String ezUpTimeZone = "ezUpTimeZone";

	/** PRC_RULE_OP_TP_CD_P*/
	public static final String prcRuleOpTpCd_P = "prcRuleOpTpCd_P";

	/** PRC_RULE_OP_TP_DESC_TXT_P*/
	public static final String prcRuleOpTpDescTxt_P = "prcRuleOpTpDescTxt_P";

	/** A*/
	public static final String A = "A";

	/** PRC_RULE_COND_HDR_PK_A*/
	public static final String prcRuleCondHdrPk_A = "prcRuleCondHdrPk_A";

	/** XX_CHK_BOX_A*/
	public static final String xxChkBox_A = "xxChkBox_A";

	/** PRC_RULE_COND_GRP_CD_A*/
	public static final String prcRuleCondGrpCd_A = "prcRuleCondGrpCd_A";

	/** PRC_RULE_COND_DTL_PK_A1*/
	public static final String prcRuleCondDtlPk_A1 = "prcRuleCondDtlPk_A1";

	/** PRC_RULE_COND_NUM_A1*/
	public static final String prcRuleCondNum_A1 = "prcRuleCondNum_A1";

	/** PRC_RULE_TRX_COND_PK_A1*/
	public static final String prcRuleTrxCondPk_A1 = "prcRuleTrxCondPk_A1";

	/** PRC_RULE_OP_TP_CD_A1*/
	public static final String prcRuleOpTpCd_A1 = "prcRuleOpTpCd_A1";

	/** PRC_RULE_COND_DTL_PK_A2*/
	public static final String prcRuleCondDtlPk_A2 = "prcRuleCondDtlPk_A2";

	/** PRC_RULE_COND_NUM_A2*/
	public static final String prcRuleCondNum_A2 = "prcRuleCondNum_A2";

	/** PRC_RULE_TRX_COND_PK_A2*/
	public static final String prcRuleTrxCondPk_A2 = "prcRuleTrxCondPk_A2";

	/** PRC_RULE_OP_TP_CD_A2*/
	public static final String prcRuleOpTpCd_A2 = "prcRuleOpTpCd_A2";

	/** PRC_RULE_COND_DTL_PK_A3*/
	public static final String prcRuleCondDtlPk_A3 = "prcRuleCondDtlPk_A3";

	/** PRC_RULE_COND_NUM_A3*/
	public static final String prcRuleCondNum_A3 = "prcRuleCondNum_A3";

	/** PRC_RULE_TRX_COND_PK_A3*/
	public static final String prcRuleTrxCondPk_A3 = "prcRuleTrxCondPk_A3";

	/** PRC_RULE_OP_TP_CD_A3*/
	public static final String prcRuleOpTpCd_A3 = "prcRuleOpTpCd_A3";

	/** PRC_RULE_COND_DTL_PK_A4*/
	public static final String prcRuleCondDtlPk_A4 = "prcRuleCondDtlPk_A4";

	/** PRC_RULE_COND_NUM_A4*/
	public static final String prcRuleCondNum_A4 = "prcRuleCondNum_A4";

	/** PRC_RULE_TRX_COND_PK_A4*/
	public static final String prcRuleTrxCondPk_A4 = "prcRuleTrxCondPk_A4";

	/** PRC_RULE_OP_TP_CD_A4*/
	public static final String prcRuleOpTpCd_A4 = "prcRuleOpTpCd_A4";

	/** PRC_RULE_COND_DTL_PK_A5*/
	public static final String prcRuleCondDtlPk_A5 = "prcRuleCondDtlPk_A5";

	/** PRC_RULE_COND_NUM_A5*/
	public static final String prcRuleCondNum_A5 = "prcRuleCondNum_A5";

	/** PRC_RULE_TRX_COND_PK_A5*/
	public static final String prcRuleTrxCondPk_A5 = "prcRuleTrxCondPk_A5";

	/** PRC_RULE_OP_TP_CD_A5*/
	public static final String prcRuleOpTpCd_A5 = "prcRuleOpTpCd_A5";

	/** PRC_RULE_COND_DTL_PK_A6*/
	public static final String prcRuleCondDtlPk_A6 = "prcRuleCondDtlPk_A6";

	/** PRC_RULE_COND_NUM_A6*/
	public static final String prcRuleCondNum_A6 = "prcRuleCondNum_A6";

	/** PRC_RULE_TRX_COND_PK_A6*/
	public static final String prcRuleTrxCondPk_A6 = "prcRuleTrxCondPk_A6";

	/** PRC_RULE_OP_TP_CD_A6*/
	public static final String prcRuleOpTpCd_A6 = "prcRuleOpTpCd_A6";

	/** PRC_RULE_COND_DTL_PK_A7*/
	public static final String prcRuleCondDtlPk_A7 = "prcRuleCondDtlPk_A7";

	/** PRC_RULE_COND_NUM_A7*/
	public static final String prcRuleCondNum_A7 = "prcRuleCondNum_A7";

	/** PRC_RULE_TRX_COND_PK_A7*/
	public static final String prcRuleTrxCondPk_A7 = "prcRuleTrxCondPk_A7";

	/** PRC_RULE_OP_TP_CD_A7*/
	public static final String prcRuleOpTpCd_A7 = "prcRuleOpTpCd_A7";

	/** PRC_RULE_COND_DTL_PK_A8*/
	public static final String prcRuleCondDtlPk_A8 = "prcRuleCondDtlPk_A8";

	/** PRC_RULE_COND_NUM_A8*/
	public static final String prcRuleCondNum_A8 = "prcRuleCondNum_A8";

	/** PRC_RULE_TRX_COND_PK_A8*/
	public static final String prcRuleTrxCondPk_A8 = "prcRuleTrxCondPk_A8";

	/** PRC_RULE_OP_TP_CD_A8*/
	public static final String prcRuleOpTpCd_A8 = "prcRuleOpTpCd_A8";

	/** PRC_RULE_COND_DTL_PK_A9*/
	public static final String prcRuleCondDtlPk_A9 = "prcRuleCondDtlPk_A9";

	/** PRC_RULE_COND_NUM_A9*/
	public static final String prcRuleCondNum_A9 = "prcRuleCondNum_A9";

	/** PRC_RULE_TRX_COND_PK_A9*/
	public static final String prcRuleTrxCondPk_A9 = "prcRuleTrxCondPk_A9";

	/** PRC_RULE_OP_TP_CD_A9*/
	public static final String prcRuleOpTpCd_A9 = "prcRuleOpTpCd_A9";

	/** PRC_RULE_COND_DTL_PK_AA*/
	public static final String prcRuleCondDtlPk_AA = "prcRuleCondDtlPk_AA";

	/** PRC_RULE_COND_NUM_AA*/
	public static final String prcRuleCondNum_AA = "prcRuleCondNum_AA";

	/** PRC_RULE_TRX_COND_PK_AA*/
	public static final String prcRuleTrxCondPk_AA = "prcRuleTrxCondPk_AA";

	/** PRC_RULE_OP_TP_CD_AA*/
	public static final String prcRuleOpTpCd_AA = "prcRuleOpTpCd_AA";

	/** PRC_RULE_COND_DTL_PK_AB*/
	public static final String prcRuleCondDtlPk_AB = "prcRuleCondDtlPk_AB";

	/** PRC_RULE_COND_NUM_AB*/
	public static final String prcRuleCondNum_AB = "prcRuleCondNum_AB";

	/** PRC_RULE_TRX_COND_PK_AB*/
	public static final String prcRuleTrxCondPk_AB = "prcRuleTrxCondPk_AB";

	/** PRC_RULE_OP_TP_CD_AB*/
	public static final String prcRuleOpTpCd_AB = "prcRuleOpTpCd_AB";

	/** PRC_RULE_COND_DTL_PK_AC*/
	public static final String prcRuleCondDtlPk_AC = "prcRuleCondDtlPk_AC";

	/** PRC_RULE_COND_NUM_AC*/
	public static final String prcRuleCondNum_AC = "prcRuleCondNum_AC";

	/** PRC_RULE_TRX_COND_PK_AC*/
	public static final String prcRuleTrxCondPk_AC = "prcRuleTrxCondPk_AC";

	/** EFF_FROM_DT_A*/
	public static final String effFromDt_A = "effFromDt_A";

	/** EFF_THRU_DT_A*/
	public static final String effThruDt_A = "effThruDt_A";

	/** _EZUpdateDateTime_A*/
	public static final String ezUpTime_A = "ezUpTime_A";

	/** _EZUpTimeZone_A*/
	public static final String ezUpTimeZone_A = "ezUpTimeZone_A";

	/** XX_REC_HIST_CRAT_TS_A*/
	public static final String xxRecHistCratTs_A = "xxRecHistCratTs_A";

	/** XX_REC_HIST_CRAT_BY_NM_A*/
	public static final String xxRecHistCratByNm_A = "xxRecHistCratByNm_A";

	/** XX_REC_HIST_UPD_TS_A*/
	public static final String xxRecHistUpdTs_A = "xxRecHistUpdTs_A";

	/** XX_REC_HIST_UPD_BY_NM_A*/
	public static final String xxRecHistUpdByNm_A = "xxRecHistUpdByNm_A";

	/** XX_REC_HIST_TBL_NM_A*/
	public static final String xxRecHistTblNm_A = "xxRecHistTblNm_A";

	/** B*/
	public static final String B = "B";

	/** PRC_RULE_TRX_COND_PK_B*/
	public static final String prcRuleTrxCondPk_B = "prcRuleTrxCondPk_B";

	/** PRC_RULE_ATTRB_CD_B*/
	public static final String prcRuleAttrbCd_B = "prcRuleAttrbCd_B";

	/** PRC_RULE_COND_FROM_TXT_B*/
	public static final String prcRuleCondFromTxt_B = "prcRuleCondFromTxt_B";

	/** PRC_RULE_COND_THRU_TXT_B*/
	public static final String prcRuleCondThruTxt_B = "prcRuleCondThruTxt_B";

	/** PRC_RULE_COND_NUM_B*/
	public static final String prcRuleCondNum_B = "prcRuleCondNum_B";

	/** EFF_FROM_DT_B*/
	public static final String effFromDt_B = "effFromDt_B";

	/** EFF_THRU_DT_B*/
	public static final String effThruDt_B = "effThruDt_B";

	/** XX_FILE_DATA*/
	public static final String xxFileData = "xxFileData";

	/**
	 * Method name:NMAL7280 is Bean's Constructor.
	 * <dd>method explanation:Initialization when instance of NMAL7280Bean is generated
	 * <dd>Remarks:
	 */
	public NMAL7280Bean() {
		super("business.servlet.NMAL7280.NMAL7280BMsg");
	}

	/**
	 * get  PRC_RULE_NM.
	 * @return PRC_RULE_NM
	 */
	public String getPrcRuleNm() {
		return outputValue(prcRuleNm);
	}

	/**
	 * set  PRC_RULE_NM.
	 * @param data PRC_RULE_NM
	 */
	public void setPrcRuleNm(String data) {
		inputValue(prcRuleNm,data);
	}

	/**
	 * get  PRC_RULE_HDR_PK.
	 * @return PRC_RULE_HDR_PK
	 */
	public String getPrcRuleHdrPk() {
		return outputValue(prcRuleHdrPk);
	}

	/**
	 * set  PRC_RULE_HDR_PK.
	 * @param data PRC_RULE_HDR_PK
	 */
	public void setPrcRuleHdrPk(String data) {
		inputValue(prcRuleHdrPk,data);
	}

	/**
	 * get  _EZUpdateDateTime.
	 * @return _EZUpdateDateTime
	 */
	public String getEzUpTime() {
		return outputValue(ezUpTime);
	}

	/**
	 * set  _EZUpdateDateTime.
	 * @param data _EZUpdateDateTime
	 */
	public void setEzUpTime(String data) {
		inputValue(ezUpTime,data);
	}

	/**
	 * get  _EZUpTimeZone.
	 * @return _EZUpTimeZone
	 */
	public String getEzUpTimeZone() {
		return outputValue(ezUpTimeZone);
	}

	/**
	 * set  _EZUpTimeZone.
	 * @param data _EZUpTimeZone
	 */
	public void setEzUpTimeZone(String data) {
		inputValue(ezUpTimeZone,data);
	}

	/**
	 * get  PRC_RULE_OP_TP_CD_P.
	 * @param idx1 Index Number
	 * @return PRC_RULE_OP_TP_CD_P
	 */
	public String getPrcRuleOpTpCd_P(int idx1) {
	 	 return outputValue(prcRuleOpTpCd_P, idx1);
	}

	/**
	 * get  PRC_RULE_OP_TP_DESC_TXT_P.
	 * @param idx1 Index Number
	 * @return PRC_RULE_OP_TP_DESC_TXT_P
	 */
	public String getPrcRuleOpTpDescTxt_P(int idx1) {
	 	 return outputValue(prcRuleOpTpDescTxt_P, idx1);
	}

	/**
	 * get  PRC_RULE_COND_HDR_PK_A.
	 * @param idx1 List Number
	 * @return PRC_RULE_COND_HDR_PK_A
	 */
	public String getPrcRuleCondHdrPk_A(int idx1) {
		return outputValue(A, idx1, prcRuleCondHdrPk_A);
	}

	/**
	 * set  PRC_RULE_COND_HDR_PK_A.
	 * @param data PRC_RULE_COND_HDR_PK_AArray
	 */
	public void setPrcRuleCondHdrPk_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleCondHdrPk_A, data[j]);
		}
	}

	/**
	 * get  XX_CHK_BOX_A.
	 * @param idx1 List Number
	 * @return XX_CHK_BOX_A
	 */
	public String getXxChkBox_A(int idx1) {
		return outputValue(A, idx1, xxChkBox_A);
	}

	/**
	 * set  XX_CHK_BOX_A.
	 * @param data XX_CHK_BOX_AArray
	 */
	public void setXxChkBox_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxChkBox_A, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_COND_GRP_CD_A.
	 * @param idx1 List Number
	 * @return PRC_RULE_COND_GRP_CD_A
	 */
	public String getPrcRuleCondGrpCd_A(int idx1) {
		return outputValue(A, idx1, prcRuleCondGrpCd_A);
	}

	/**
	 * set  PRC_RULE_COND_GRP_CD_A.
	 * @param data PRC_RULE_COND_GRP_CD_AArray
	 */
	public void setPrcRuleCondGrpCd_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleCondGrpCd_A, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_COND_DTL_PK_A1.
	 * @param idx1 List Number
	 * @return PRC_RULE_COND_DTL_PK_A1
	 */
	public String getPrcRuleCondDtlPk_A1(int idx1) {
		return outputValue(A, idx1, prcRuleCondDtlPk_A1);
	}

	/**
	 * set  PRC_RULE_COND_DTL_PK_A1.
	 * @param data PRC_RULE_COND_DTL_PK_A1Array
	 */
	public void setPrcRuleCondDtlPk_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleCondDtlPk_A1, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_COND_NUM_A1.
	 * @param idx1 List Number
	 * @return PRC_RULE_COND_NUM_A1
	 */
	public String getPrcRuleCondNum_A1(int idx1) {
		return outputValue(A, idx1, prcRuleCondNum_A1);
	}

	/**
	 * set  PRC_RULE_COND_NUM_A1.
	 * @param data PRC_RULE_COND_NUM_A1Array
	 */
	public void setPrcRuleCondNum_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleCondNum_A1, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_TRX_COND_PK_A1.
	 * @param idx1 List Number
	 * @return PRC_RULE_TRX_COND_PK_A1
	 */
	public String getPrcRuleTrxCondPk_A1(int idx1) {
		return outputValue(A, idx1, prcRuleTrxCondPk_A1);
	}

	/**
	 * set  PRC_RULE_TRX_COND_PK_A1.
	 * @param data PRC_RULE_TRX_COND_PK_A1Array
	 */
	public void setPrcRuleTrxCondPk_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleTrxCondPk_A1, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_OP_TP_CD_A1.
	 * @param idx1 List Number
	 * @return PRC_RULE_OP_TP_CD_A1
	 */
	public String getPrcRuleOpTpCd_A1(int idx1) {
		return outputValue(A, idx1, prcRuleOpTpCd_A1);
	}

	/**
	 * set  PRC_RULE_OP_TP_CD_A1.
	 * @param data PRC_RULE_OP_TP_CD_A1Array
	 */
	public void setPrcRuleOpTpCd_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleOpTpCd_A1, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_COND_DTL_PK_A2.
	 * @param idx1 List Number
	 * @return PRC_RULE_COND_DTL_PK_A2
	 */
	public String getPrcRuleCondDtlPk_A2(int idx1) {
		return outputValue(A, idx1, prcRuleCondDtlPk_A2);
	}

	/**
	 * set  PRC_RULE_COND_DTL_PK_A2.
	 * @param data PRC_RULE_COND_DTL_PK_A2Array
	 */
	public void setPrcRuleCondDtlPk_A2(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleCondDtlPk_A2, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_COND_NUM_A2.
	 * @param idx1 List Number
	 * @return PRC_RULE_COND_NUM_A2
	 */
	public String getPrcRuleCondNum_A2(int idx1) {
		return outputValue(A, idx1, prcRuleCondNum_A2);
	}

	/**
	 * set  PRC_RULE_COND_NUM_A2.
	 * @param data PRC_RULE_COND_NUM_A2Array
	 */
	public void setPrcRuleCondNum_A2(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleCondNum_A2, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_TRX_COND_PK_A2.
	 * @param idx1 List Number
	 * @return PRC_RULE_TRX_COND_PK_A2
	 */
	public String getPrcRuleTrxCondPk_A2(int idx1) {
		return outputValue(A, idx1, prcRuleTrxCondPk_A2);
	}

	/**
	 * set  PRC_RULE_TRX_COND_PK_A2.
	 * @param data PRC_RULE_TRX_COND_PK_A2Array
	 */
	public void setPrcRuleTrxCondPk_A2(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleTrxCondPk_A2, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_OP_TP_CD_A2.
	 * @param idx1 List Number
	 * @return PRC_RULE_OP_TP_CD_A2
	 */
	public String getPrcRuleOpTpCd_A2(int idx1) {
		return outputValue(A, idx1, prcRuleOpTpCd_A2);
	}

	/**
	 * set  PRC_RULE_OP_TP_CD_A2.
	 * @param data PRC_RULE_OP_TP_CD_A2Array
	 */
	public void setPrcRuleOpTpCd_A2(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleOpTpCd_A2, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_COND_DTL_PK_A3.
	 * @param idx1 List Number
	 * @return PRC_RULE_COND_DTL_PK_A3
	 */
	public String getPrcRuleCondDtlPk_A3(int idx1) {
		return outputValue(A, idx1, prcRuleCondDtlPk_A3);
	}

	/**
	 * set  PRC_RULE_COND_DTL_PK_A3.
	 * @param data PRC_RULE_COND_DTL_PK_A3Array
	 */
	public void setPrcRuleCondDtlPk_A3(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleCondDtlPk_A3, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_COND_NUM_A3.
	 * @param idx1 List Number
	 * @return PRC_RULE_COND_NUM_A3
	 */
	public String getPrcRuleCondNum_A3(int idx1) {
		return outputValue(A, idx1, prcRuleCondNum_A3);
	}

	/**
	 * set  PRC_RULE_COND_NUM_A3.
	 * @param data PRC_RULE_COND_NUM_A3Array
	 */
	public void setPrcRuleCondNum_A3(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleCondNum_A3, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_TRX_COND_PK_A3.
	 * @param idx1 List Number
	 * @return PRC_RULE_TRX_COND_PK_A3
	 */
	public String getPrcRuleTrxCondPk_A3(int idx1) {
		return outputValue(A, idx1, prcRuleTrxCondPk_A3);
	}

	/**
	 * set  PRC_RULE_TRX_COND_PK_A3.
	 * @param data PRC_RULE_TRX_COND_PK_A3Array
	 */
	public void setPrcRuleTrxCondPk_A3(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleTrxCondPk_A3, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_OP_TP_CD_A3.
	 * @param idx1 List Number
	 * @return PRC_RULE_OP_TP_CD_A3
	 */
	public String getPrcRuleOpTpCd_A3(int idx1) {
		return outputValue(A, idx1, prcRuleOpTpCd_A3);
	}

	/**
	 * set  PRC_RULE_OP_TP_CD_A3.
	 * @param data PRC_RULE_OP_TP_CD_A3Array
	 */
	public void setPrcRuleOpTpCd_A3(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleOpTpCd_A3, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_COND_DTL_PK_A4.
	 * @param idx1 List Number
	 * @return PRC_RULE_COND_DTL_PK_A4
	 */
	public String getPrcRuleCondDtlPk_A4(int idx1) {
		return outputValue(A, idx1, prcRuleCondDtlPk_A4);
	}

	/**
	 * set  PRC_RULE_COND_DTL_PK_A4.
	 * @param data PRC_RULE_COND_DTL_PK_A4Array
	 */
	public void setPrcRuleCondDtlPk_A4(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleCondDtlPk_A4, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_COND_NUM_A4.
	 * @param idx1 List Number
	 * @return PRC_RULE_COND_NUM_A4
	 */
	public String getPrcRuleCondNum_A4(int idx1) {
		return outputValue(A, idx1, prcRuleCondNum_A4);
	}

	/**
	 * set  PRC_RULE_COND_NUM_A4.
	 * @param data PRC_RULE_COND_NUM_A4Array
	 */
	public void setPrcRuleCondNum_A4(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleCondNum_A4, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_TRX_COND_PK_A4.
	 * @param idx1 List Number
	 * @return PRC_RULE_TRX_COND_PK_A4
	 */
	public String getPrcRuleTrxCondPk_A4(int idx1) {
		return outputValue(A, idx1, prcRuleTrxCondPk_A4);
	}

	/**
	 * set  PRC_RULE_TRX_COND_PK_A4.
	 * @param data PRC_RULE_TRX_COND_PK_A4Array
	 */
	public void setPrcRuleTrxCondPk_A4(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleTrxCondPk_A4, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_OP_TP_CD_A4.
	 * @param idx1 List Number
	 * @return PRC_RULE_OP_TP_CD_A4
	 */
	public String getPrcRuleOpTpCd_A4(int idx1) {
		return outputValue(A, idx1, prcRuleOpTpCd_A4);
	}

	/**
	 * set  PRC_RULE_OP_TP_CD_A4.
	 * @param data PRC_RULE_OP_TP_CD_A4Array
	 */
	public void setPrcRuleOpTpCd_A4(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleOpTpCd_A4, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_COND_DTL_PK_A5.
	 * @param idx1 List Number
	 * @return PRC_RULE_COND_DTL_PK_A5
	 */
	public String getPrcRuleCondDtlPk_A5(int idx1) {
		return outputValue(A, idx1, prcRuleCondDtlPk_A5);
	}

	/**
	 * set  PRC_RULE_COND_DTL_PK_A5.
	 * @param data PRC_RULE_COND_DTL_PK_A5Array
	 */
	public void setPrcRuleCondDtlPk_A5(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleCondDtlPk_A5, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_COND_NUM_A5.
	 * @param idx1 List Number
	 * @return PRC_RULE_COND_NUM_A5
	 */
	public String getPrcRuleCondNum_A5(int idx1) {
		return outputValue(A, idx1, prcRuleCondNum_A5);
	}

	/**
	 * set  PRC_RULE_COND_NUM_A5.
	 * @param data PRC_RULE_COND_NUM_A5Array
	 */
	public void setPrcRuleCondNum_A5(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleCondNum_A5, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_TRX_COND_PK_A5.
	 * @param idx1 List Number
	 * @return PRC_RULE_TRX_COND_PK_A5
	 */
	public String getPrcRuleTrxCondPk_A5(int idx1) {
		return outputValue(A, idx1, prcRuleTrxCondPk_A5);
	}

	/**
	 * set  PRC_RULE_TRX_COND_PK_A5.
	 * @param data PRC_RULE_TRX_COND_PK_A5Array
	 */
	public void setPrcRuleTrxCondPk_A5(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleTrxCondPk_A5, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_OP_TP_CD_A5.
	 * @param idx1 List Number
	 * @return PRC_RULE_OP_TP_CD_A5
	 */
	public String getPrcRuleOpTpCd_A5(int idx1) {
		return outputValue(A, idx1, prcRuleOpTpCd_A5);
	}

	/**
	 * set  PRC_RULE_OP_TP_CD_A5.
	 * @param data PRC_RULE_OP_TP_CD_A5Array
	 */
	public void setPrcRuleOpTpCd_A5(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleOpTpCd_A5, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_COND_DTL_PK_A6.
	 * @param idx1 List Number
	 * @return PRC_RULE_COND_DTL_PK_A6
	 */
	public String getPrcRuleCondDtlPk_A6(int idx1) {
		return outputValue(A, idx1, prcRuleCondDtlPk_A6);
	}

	/**
	 * set  PRC_RULE_COND_DTL_PK_A6.
	 * @param data PRC_RULE_COND_DTL_PK_A6Array
	 */
	public void setPrcRuleCondDtlPk_A6(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleCondDtlPk_A6, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_COND_NUM_A6.
	 * @param idx1 List Number
	 * @return PRC_RULE_COND_NUM_A6
	 */
	public String getPrcRuleCondNum_A6(int idx1) {
		return outputValue(A, idx1, prcRuleCondNum_A6);
	}

	/**
	 * set  PRC_RULE_COND_NUM_A6.
	 * @param data PRC_RULE_COND_NUM_A6Array
	 */
	public void setPrcRuleCondNum_A6(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleCondNum_A6, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_TRX_COND_PK_A6.
	 * @param idx1 List Number
	 * @return PRC_RULE_TRX_COND_PK_A6
	 */
	public String getPrcRuleTrxCondPk_A6(int idx1) {
		return outputValue(A, idx1, prcRuleTrxCondPk_A6);
	}

	/**
	 * set  PRC_RULE_TRX_COND_PK_A6.
	 * @param data PRC_RULE_TRX_COND_PK_A6Array
	 */
	public void setPrcRuleTrxCondPk_A6(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleTrxCondPk_A6, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_OP_TP_CD_A6.
	 * @param idx1 List Number
	 * @return PRC_RULE_OP_TP_CD_A6
	 */
	public String getPrcRuleOpTpCd_A6(int idx1) {
		return outputValue(A, idx1, prcRuleOpTpCd_A6);
	}

	/**
	 * set  PRC_RULE_OP_TP_CD_A6.
	 * @param data PRC_RULE_OP_TP_CD_A6Array
	 */
	public void setPrcRuleOpTpCd_A6(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleOpTpCd_A6, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_COND_DTL_PK_A7.
	 * @param idx1 List Number
	 * @return PRC_RULE_COND_DTL_PK_A7
	 */
	public String getPrcRuleCondDtlPk_A7(int idx1) {
		return outputValue(A, idx1, prcRuleCondDtlPk_A7);
	}

	/**
	 * set  PRC_RULE_COND_DTL_PK_A7.
	 * @param data PRC_RULE_COND_DTL_PK_A7Array
	 */
	public void setPrcRuleCondDtlPk_A7(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleCondDtlPk_A7, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_COND_NUM_A7.
	 * @param idx1 List Number
	 * @return PRC_RULE_COND_NUM_A7
	 */
	public String getPrcRuleCondNum_A7(int idx1) {
		return outputValue(A, idx1, prcRuleCondNum_A7);
	}

	/**
	 * set  PRC_RULE_COND_NUM_A7.
	 * @param data PRC_RULE_COND_NUM_A7Array
	 */
	public void setPrcRuleCondNum_A7(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleCondNum_A7, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_TRX_COND_PK_A7.
	 * @param idx1 List Number
	 * @return PRC_RULE_TRX_COND_PK_A7
	 */
	public String getPrcRuleTrxCondPk_A7(int idx1) {
		return outputValue(A, idx1, prcRuleTrxCondPk_A7);
	}

	/**
	 * set  PRC_RULE_TRX_COND_PK_A7.
	 * @param data PRC_RULE_TRX_COND_PK_A7Array
	 */
	public void setPrcRuleTrxCondPk_A7(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleTrxCondPk_A7, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_OP_TP_CD_A7.
	 * @param idx1 List Number
	 * @return PRC_RULE_OP_TP_CD_A7
	 */
	public String getPrcRuleOpTpCd_A7(int idx1) {
		return outputValue(A, idx1, prcRuleOpTpCd_A7);
	}

	/**
	 * set  PRC_RULE_OP_TP_CD_A7.
	 * @param data PRC_RULE_OP_TP_CD_A7Array
	 */
	public void setPrcRuleOpTpCd_A7(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleOpTpCd_A7, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_COND_DTL_PK_A8.
	 * @param idx1 List Number
	 * @return PRC_RULE_COND_DTL_PK_A8
	 */
	public String getPrcRuleCondDtlPk_A8(int idx1) {
		return outputValue(A, idx1, prcRuleCondDtlPk_A8);
	}

	/**
	 * set  PRC_RULE_COND_DTL_PK_A8.
	 * @param data PRC_RULE_COND_DTL_PK_A8Array
	 */
	public void setPrcRuleCondDtlPk_A8(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleCondDtlPk_A8, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_COND_NUM_A8.
	 * @param idx1 List Number
	 * @return PRC_RULE_COND_NUM_A8
	 */
	public String getPrcRuleCondNum_A8(int idx1) {
		return outputValue(A, idx1, prcRuleCondNum_A8);
	}

	/**
	 * set  PRC_RULE_COND_NUM_A8.
	 * @param data PRC_RULE_COND_NUM_A8Array
	 */
	public void setPrcRuleCondNum_A8(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleCondNum_A8, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_TRX_COND_PK_A8.
	 * @param idx1 List Number
	 * @return PRC_RULE_TRX_COND_PK_A8
	 */
	public String getPrcRuleTrxCondPk_A8(int idx1) {
		return outputValue(A, idx1, prcRuleTrxCondPk_A8);
	}

	/**
	 * set  PRC_RULE_TRX_COND_PK_A8.
	 * @param data PRC_RULE_TRX_COND_PK_A8Array
	 */
	public void setPrcRuleTrxCondPk_A8(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleTrxCondPk_A8, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_OP_TP_CD_A8.
	 * @param idx1 List Number
	 * @return PRC_RULE_OP_TP_CD_A8
	 */
	public String getPrcRuleOpTpCd_A8(int idx1) {
		return outputValue(A, idx1, prcRuleOpTpCd_A8);
	}

	/**
	 * set  PRC_RULE_OP_TP_CD_A8.
	 * @param data PRC_RULE_OP_TP_CD_A8Array
	 */
	public void setPrcRuleOpTpCd_A8(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleOpTpCd_A8, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_COND_DTL_PK_A9.
	 * @param idx1 List Number
	 * @return PRC_RULE_COND_DTL_PK_A9
	 */
	public String getPrcRuleCondDtlPk_A9(int idx1) {
		return outputValue(A, idx1, prcRuleCondDtlPk_A9);
	}

	/**
	 * set  PRC_RULE_COND_DTL_PK_A9.
	 * @param data PRC_RULE_COND_DTL_PK_A9Array
	 */
	public void setPrcRuleCondDtlPk_A9(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleCondDtlPk_A9, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_COND_NUM_A9.
	 * @param idx1 List Number
	 * @return PRC_RULE_COND_NUM_A9
	 */
	public String getPrcRuleCondNum_A9(int idx1) {
		return outputValue(A, idx1, prcRuleCondNum_A9);
	}

	/**
	 * set  PRC_RULE_COND_NUM_A9.
	 * @param data PRC_RULE_COND_NUM_A9Array
	 */
	public void setPrcRuleCondNum_A9(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleCondNum_A9, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_TRX_COND_PK_A9.
	 * @param idx1 List Number
	 * @return PRC_RULE_TRX_COND_PK_A9
	 */
	public String getPrcRuleTrxCondPk_A9(int idx1) {
		return outputValue(A, idx1, prcRuleTrxCondPk_A9);
	}

	/**
	 * set  PRC_RULE_TRX_COND_PK_A9.
	 * @param data PRC_RULE_TRX_COND_PK_A9Array
	 */
	public void setPrcRuleTrxCondPk_A9(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleTrxCondPk_A9, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_OP_TP_CD_A9.
	 * @param idx1 List Number
	 * @return PRC_RULE_OP_TP_CD_A9
	 */
	public String getPrcRuleOpTpCd_A9(int idx1) {
		return outputValue(A, idx1, prcRuleOpTpCd_A9);
	}

	/**
	 * set  PRC_RULE_OP_TP_CD_A9.
	 * @param data PRC_RULE_OP_TP_CD_A9Array
	 */
	public void setPrcRuleOpTpCd_A9(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleOpTpCd_A9, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_COND_DTL_PK_AA.
	 * @param idx1 List Number
	 * @return PRC_RULE_COND_DTL_PK_AA
	 */
	public String getPrcRuleCondDtlPk_AA(int idx1) {
		return outputValue(A, idx1, prcRuleCondDtlPk_AA);
	}

	/**
	 * set  PRC_RULE_COND_DTL_PK_AA.
	 * @param data PRC_RULE_COND_DTL_PK_AAArray
	 */
	public void setPrcRuleCondDtlPk_AA(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleCondDtlPk_AA, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_COND_NUM_AA.
	 * @param idx1 List Number
	 * @return PRC_RULE_COND_NUM_AA
	 */
	public String getPrcRuleCondNum_AA(int idx1) {
		return outputValue(A, idx1, prcRuleCondNum_AA);
	}

	/**
	 * set  PRC_RULE_COND_NUM_AA.
	 * @param data PRC_RULE_COND_NUM_AAArray
	 */
	public void setPrcRuleCondNum_AA(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleCondNum_AA, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_TRX_COND_PK_AA.
	 * @param idx1 List Number
	 * @return PRC_RULE_TRX_COND_PK_AA
	 */
	public String getPrcRuleTrxCondPk_AA(int idx1) {
		return outputValue(A, idx1, prcRuleTrxCondPk_AA);
	}

	/**
	 * set  PRC_RULE_TRX_COND_PK_AA.
	 * @param data PRC_RULE_TRX_COND_PK_AAArray
	 */
	public void setPrcRuleTrxCondPk_AA(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleTrxCondPk_AA, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_OP_TP_CD_AA.
	 * @param idx1 List Number
	 * @return PRC_RULE_OP_TP_CD_AA
	 */
	public String getPrcRuleOpTpCd_AA(int idx1) {
		return outputValue(A, idx1, prcRuleOpTpCd_AA);
	}

	/**
	 * set  PRC_RULE_OP_TP_CD_AA.
	 * @param data PRC_RULE_OP_TP_CD_AAArray
	 */
	public void setPrcRuleOpTpCd_AA(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleOpTpCd_AA, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_COND_DTL_PK_AB.
	 * @param idx1 List Number
	 * @return PRC_RULE_COND_DTL_PK_AB
	 */
	public String getPrcRuleCondDtlPk_AB(int idx1) {
		return outputValue(A, idx1, prcRuleCondDtlPk_AB);
	}

	/**
	 * set  PRC_RULE_COND_DTL_PK_AB.
	 * @param data PRC_RULE_COND_DTL_PK_ABArray
	 */
	public void setPrcRuleCondDtlPk_AB(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleCondDtlPk_AB, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_COND_NUM_AB.
	 * @param idx1 List Number
	 * @return PRC_RULE_COND_NUM_AB
	 */
	public String getPrcRuleCondNum_AB(int idx1) {
		return outputValue(A, idx1, prcRuleCondNum_AB);
	}

	/**
	 * set  PRC_RULE_COND_NUM_AB.
	 * @param data PRC_RULE_COND_NUM_ABArray
	 */
	public void setPrcRuleCondNum_AB(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleCondNum_AB, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_TRX_COND_PK_AB.
	 * @param idx1 List Number
	 * @return PRC_RULE_TRX_COND_PK_AB
	 */
	public String getPrcRuleTrxCondPk_AB(int idx1) {
		return outputValue(A, idx1, prcRuleTrxCondPk_AB);
	}

	/**
	 * set  PRC_RULE_TRX_COND_PK_AB.
	 * @param data PRC_RULE_TRX_COND_PK_ABArray
	 */
	public void setPrcRuleTrxCondPk_AB(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleTrxCondPk_AB, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_OP_TP_CD_AB.
	 * @param idx1 List Number
	 * @return PRC_RULE_OP_TP_CD_AB
	 */
	public String getPrcRuleOpTpCd_AB(int idx1) {
		return outputValue(A, idx1, prcRuleOpTpCd_AB);
	}

	/**
	 * set  PRC_RULE_OP_TP_CD_AB.
	 * @param data PRC_RULE_OP_TP_CD_ABArray
	 */
	public void setPrcRuleOpTpCd_AB(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleOpTpCd_AB, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_COND_DTL_PK_AC.
	 * @param idx1 List Number
	 * @return PRC_RULE_COND_DTL_PK_AC
	 */
	public String getPrcRuleCondDtlPk_AC(int idx1) {
		return outputValue(A, idx1, prcRuleCondDtlPk_AC);
	}

	/**
	 * set  PRC_RULE_COND_DTL_PK_AC.
	 * @param data PRC_RULE_COND_DTL_PK_ACArray
	 */
	public void setPrcRuleCondDtlPk_AC(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleCondDtlPk_AC, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_COND_NUM_AC.
	 * @param idx1 List Number
	 * @return PRC_RULE_COND_NUM_AC
	 */
	public String getPrcRuleCondNum_AC(int idx1) {
		return outputValue(A, idx1, prcRuleCondNum_AC);
	}

	/**
	 * set  PRC_RULE_COND_NUM_AC.
	 * @param data PRC_RULE_COND_NUM_ACArray
	 */
	public void setPrcRuleCondNum_AC(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleCondNum_AC, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_TRX_COND_PK_AC.
	 * @param idx1 List Number
	 * @return PRC_RULE_TRX_COND_PK_AC
	 */
	public String getPrcRuleTrxCondPk_AC(int idx1) {
		return outputValue(A, idx1, prcRuleTrxCondPk_AC);
	}

	/**
	 * set  PRC_RULE_TRX_COND_PK_AC.
	 * @param data PRC_RULE_TRX_COND_PK_ACArray
	 */
	public void setPrcRuleTrxCondPk_AC(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleTrxCondPk_AC, data[j]);
		}
	}

	/**
	 * get  EFF_FROM_DT_A.
	 * @param idx1 List Number
	 * @return EFF_FROM_DT_A
	 */
	public String getEffFromDt_A(int idx1) {
		return outputValue(A, idx1, effFromDt_A, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  EFF_FROM_DT_A.
	 * @param data EFF_FROM_DT_AArray
	 */
	public void setEffFromDt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i,  effFromDt_A, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  EFF_THRU_DT_A.
	 * @param idx1 List Number
	 * @return EFF_THRU_DT_A
	 */
	public String getEffThruDt_A(int idx1) {
		return outputValue(A, idx1, effThruDt_A, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  EFF_THRU_DT_A.
	 * @param data EFF_THRU_DT_AArray
	 */
	public void setEffThruDt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i,  effThruDt_A, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  _EZUpdateDateTime_A.
	 * @param idx1 List Number
	 * @return _EZUpdateDateTime_A
	 */
	public String getEzUpTime_A(int idx1) {
		return outputValue(A, idx1, ezUpTime_A);
	}

	/**
	 * set  _EZUpdateDateTime_A.
	 * @param data _EZUpdateDateTime_AArray
	 */
	public void setEzUpTime_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, ezUpTime_A, data[j]);
		}
	}

	/**
	 * get  _EZUpTimeZone_A.
	 * @param idx1 List Number
	 * @return _EZUpTimeZone_A
	 */
	public String getEzUpTimeZone_A(int idx1) {
		return outputValue(A, idx1, ezUpTimeZone_A);
	}

	/**
	 * set  _EZUpTimeZone_A.
	 * @param data _EZUpTimeZone_AArray
	 */
	public void setEzUpTimeZone_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, ezUpTimeZone_A, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_CRAT_TS_A.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_CRAT_TS_A
	 */
	public String getXxRecHistCratTs_A(int idx1) {
		return outputValue(A, idx1, xxRecHistCratTs_A);
	}

	/**
	 * set  XX_REC_HIST_CRAT_TS_A.
	 * @param data XX_REC_HIST_CRAT_TS_AArray
	 */
	public void setXxRecHistCratTs_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRecHistCratTs_A, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_CRAT_BY_NM_A.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_CRAT_BY_NM_A
	 */
	public String getXxRecHistCratByNm_A(int idx1) {
		return outputValue(A, idx1, xxRecHistCratByNm_A);
	}

	/**
	 * set  XX_REC_HIST_CRAT_BY_NM_A.
	 * @param data XX_REC_HIST_CRAT_BY_NM_AArray
	 */
	public void setXxRecHistCratByNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRecHistCratByNm_A, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_UPD_TS_A.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_UPD_TS_A
	 */
	public String getXxRecHistUpdTs_A(int idx1) {
		return outputValue(A, idx1, xxRecHistUpdTs_A);
	}

	/**
	 * set  XX_REC_HIST_UPD_TS_A.
	 * @param data XX_REC_HIST_UPD_TS_AArray
	 */
	public void setXxRecHistUpdTs_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRecHistUpdTs_A, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_UPD_BY_NM_A.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_UPD_BY_NM_A
	 */
	public String getXxRecHistUpdByNm_A(int idx1) {
		return outputValue(A, idx1, xxRecHistUpdByNm_A);
	}

	/**
	 * set  XX_REC_HIST_UPD_BY_NM_A.
	 * @param data XX_REC_HIST_UPD_BY_NM_AArray
	 */
	public void setXxRecHistUpdByNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRecHistUpdByNm_A, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_TBL_NM_A.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_TBL_NM_A
	 */
	public String getXxRecHistTblNm_A(int idx1) {
		return outputValue(A, idx1, xxRecHistTblNm_A);
	}

	/**
	 * set  XX_REC_HIST_TBL_NM_A.
	 * @param data XX_REC_HIST_TBL_NM_AArray
	 */
	public void setXxRecHistTblNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRecHistTblNm_A, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_TRX_COND_PK_B.
	 * @param idx1 List Number
	 * @return PRC_RULE_TRX_COND_PK_B
	 */
	public String getPrcRuleTrxCondPk_B(int idx1) {
		return outputValue(B, idx1, prcRuleTrxCondPk_B);
	}

	/**
	 * set  PRC_RULE_TRX_COND_PK_B.
	 * @param data PRC_RULE_TRX_COND_PK_BArray
	 */
	public void setPrcRuleTrxCondPk_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, prcRuleTrxCondPk_B, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_ATTRB_CD_B.
	 * @param idx1 List Number
	 * @return PRC_RULE_ATTRB_CD_B
	 */
	public String getPrcRuleAttrbCd_B(int idx1) {
		return outputValue(B, idx1, prcRuleAttrbCd_B);
	}

	/**
	 * set  PRC_RULE_ATTRB_CD_B.
	 * @param data PRC_RULE_ATTRB_CD_BArray
	 */
	public void setPrcRuleAttrbCd_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, prcRuleAttrbCd_B, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_COND_FROM_TXT_B.
	 * @param idx1 List Number
	 * @return PRC_RULE_COND_FROM_TXT_B
	 */
	public String getPrcRuleCondFromTxt_B(int idx1) {
		return outputValue(B, idx1, prcRuleCondFromTxt_B);
	}

	/**
	 * set  PRC_RULE_COND_FROM_TXT_B.
	 * @param data PRC_RULE_COND_FROM_TXT_BArray
	 */
	public void setPrcRuleCondFromTxt_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, prcRuleCondFromTxt_B, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_COND_THRU_TXT_B.
	 * @param idx1 List Number
	 * @return PRC_RULE_COND_THRU_TXT_B
	 */
	public String getPrcRuleCondThruTxt_B(int idx1) {
		return outputValue(B, idx1, prcRuleCondThruTxt_B);
	}

	/**
	 * set  PRC_RULE_COND_THRU_TXT_B.
	 * @param data PRC_RULE_COND_THRU_TXT_BArray
	 */
	public void setPrcRuleCondThruTxt_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, prcRuleCondThruTxt_B, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_COND_NUM_B.
	 * @param idx1 List Number
	 * @return PRC_RULE_COND_NUM_B
	 */
	public String getPrcRuleCondNum_B(int idx1) {
		return outputValue(B, idx1, prcRuleCondNum_B);
	}

	/**
	 * set  PRC_RULE_COND_NUM_B.
	 * @param data PRC_RULE_COND_NUM_BArray
	 */
	public void setPrcRuleCondNum_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, prcRuleCondNum_B, data[j]);
		}
	}

	/**
	 * get  EFF_FROM_DT_B.
	 * @param idx1 List Number
	 * @return EFF_FROM_DT_B
	 */
	public String getEffFromDt_B(int idx1) {
		return outputValue(B, idx1, effFromDt_B, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  EFF_FROM_DT_B.
	 * @param data EFF_FROM_DT_BArray
	 */
	public void setEffFromDt_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i,  effFromDt_B, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  EFF_THRU_DT_B.
	 * @param idx1 List Number
	 * @return EFF_THRU_DT_B
	 */
	public String getEffThruDt_B(int idx1) {
		return outputValue(B, idx1, effThruDt_B, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  EFF_THRU_DT_B.
	 * @param data EFF_THRU_DT_BArray
	 */
	public void setEffThruDt_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i,  effThruDt_B, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * set  XX_FILE_DATA.
	 * @param data XX_FILE_DATA
	 */
	public void setXxFileData(MimeSource data) {
		inputValue(xxFileData, data);
	}

}

