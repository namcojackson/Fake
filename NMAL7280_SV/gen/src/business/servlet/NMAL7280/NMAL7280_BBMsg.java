//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20170511141407000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NMAL7280_BBMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NMAL7280;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NMAL7280 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NMAL7280_BBMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** PRC_RULE_TRX_COND_PK_B*/
	public final EZDBBigDecimalItem              prcRuleTrxCondPk_B;

    /** PRC_RULE_ATTRB_CD_B*/
	public final EZDBStringItem              prcRuleAttrbCd_B;

    /** PRC_RULE_COND_FROM_TXT_B*/
	public final EZDBStringItem              prcRuleCondFromTxt_B;

    /** PRC_RULE_COND_THRU_TXT_B*/
	public final EZDBStringItem              prcRuleCondThruTxt_B;

    /** PRC_RULE_COND_NUM_B*/
	public final EZDBBigDecimalItem              prcRuleCondNum_B;

    /** EFF_FROM_DT_B*/
	public final EZDBDateItem              effFromDt_B;

    /** EFF_THRU_DT_B*/
	public final EZDBDateItem              effThruDt_B;


	/**
	 * NMAL7280_BBMsg is constructor.
	 * The initialization when the instance of NMAL7280_BBMsg is generated.
	 */
	public NMAL7280_BBMsg() {
		this(false, -1);
	}

	/**
	 * NMAL7280_BBMsg is constructor.
	 * The initialization when the instance of NMAL7280_BBMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NMAL7280_BBMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		prcRuleTrxCondPk_B = (EZDBBigDecimalItem)newItem("prcRuleTrxCondPk_B");
		prcRuleAttrbCd_B = (EZDBStringItem)newItem("prcRuleAttrbCd_B");
		prcRuleCondFromTxt_B = (EZDBStringItem)newItem("prcRuleCondFromTxt_B");
		prcRuleCondThruTxt_B = (EZDBStringItem)newItem("prcRuleCondThruTxt_B");
		prcRuleCondNum_B = (EZDBBigDecimalItem)newItem("prcRuleCondNum_B");
		effFromDt_B = (EZDBDateItem)newItem("effFromDt_B");
		effThruDt_B = (EZDBDateItem)newItem("effThruDt_B");
	}

	/**
	 * get the type of array which is stored
	 * @return NMAL7280_BBMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NMAL7280_BBMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"prcRuleTrxCondPk_B", "prcRuleTrxCondPk_B", "B", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"prcRuleAttrbCd_B", "prcRuleAttrbCd_B", "B", null, TYPE_HANKAKUEISU, "2", null},
	{"prcRuleCondFromTxt_B", "prcRuleCondFromTxt_B", "B", null, TYPE_HANKAKUEISU, "50", null},
	{"prcRuleCondThruTxt_B", "prcRuleCondThruTxt_B", "B", null, TYPE_HANKAKUEISU, "50", null},
	{"prcRuleCondNum_B", "prcRuleCondNum_B", "B", null, TYPE_SEISU_SYOSU, "3", "0"},
	{"effFromDt_B", "effFromDt_B", "B", null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt_B", "effThruDt_B", "B", null, TYPE_NENTSUKIHI, "8", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"PRC_RULE_TRX_COND_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleTrxCondPk_B
        {"PRC_RULE_ATTRB_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleAttrbCd_B
        {"PRC_RULE_COND_FROM_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleCondFromTxt_B
        {"PRC_RULE_COND_THRU_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleCondThruTxt_B
        {"PRC_RULE_COND_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleCondNum_B
        {"EFF_FROM_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//effFromDt_B
        {"EFF_THRU_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//effThruDt_B
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

