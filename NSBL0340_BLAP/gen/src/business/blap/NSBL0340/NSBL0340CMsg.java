//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20170530190438000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSBL0340CMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NSBL0340;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSBL0340 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSBL0340CMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** GLBL_CMPY_CD*/
	public final EZDCStringItem              glblCmpyCd;

    /** XX_PAGE_SHOW_FROM_NUM*/
	public final EZDCBigDecimalItem              xxPageShowFromNum;

    /** XX_PAGE_SHOW_TO_NUM*/
	public final EZDCBigDecimalItem              xxPageShowToNum;

    /** XX_PAGE_SHOW_OF_NUM*/
	public final EZDCBigDecimalItem              xxPageShowOfNum;

    /** XX_COMN_COL_ORD_TXT*/
	public final EZDCStringItem              xxComnColOrdTxt;

    /** XX_FILE_DATA*/
	public final EZDCMimeSourceItem              xxFileData;

    /** A*/
	public final business.blap.NSBL0340.NSBL0340_ACMsgArray              A;

    /** ORG_CD*/
	public final EZDCStringItem              orgCd;

    /** ORG_LAYER_NUM*/
	public final EZDCBigDecimalItem              orgLayerNum;

    /** SVC_MGR_TP_CD*/
	public final EZDCStringItem              svcMgrTpCd;

    /** SVC_RQST_DOWN_TP_CD*/
	public final EZDCStringItem              svcRqstDownTpCd;

    /** SVC_MGR_PSN_CD*/
	public final EZDCStringItem              svcMgrPsnCd;

    /** SVC_RQST_CRIT_TP_CD*/
	public final EZDCStringItem              svcRqstCritTpCd;

    /** DS_SVC_CALL_TP_CD*/
	public final EZDCStringItem              dsSvcCallTpCd;

    /** FSR_SVC_TASK_STS_RELN_PK*/
	public final EZDCBigDecimalItem              fsrSvcTaskStsRelnPk;

    /** TECH_CD*/
	public final EZDCStringItem              techCd;

    /** SVC_CALL_SRC_TP_CD*/
	public final EZDCStringItem              svcCallSrcTpCd;

    /** SVC_RQST_DOWN_FLG_COL_NM*/
	public final EZDCStringItem              svcRqstDownFlgColNm;


	/**
	 * NSBL0340CMsg is constructor.
	 * The initialization when the instance of NSBL0340CMsg is generated.
	 */
	public NSBL0340CMsg() {
		this(false, -1);
	}

	/**
	 * NSBL0340CMsg is constructor.
	 * The initialization when the instance of NSBL0340CMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSBL0340CMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		glblCmpyCd = (EZDCStringItem)newItem("glblCmpyCd");
		xxPageShowFromNum = (EZDCBigDecimalItem)newItem("xxPageShowFromNum");
		xxPageShowToNum = (EZDCBigDecimalItem)newItem("xxPageShowToNum");
		xxPageShowOfNum = (EZDCBigDecimalItem)newItem("xxPageShowOfNum");
		xxComnColOrdTxt = (EZDCStringItem)newItem("xxComnColOrdTxt");
		xxFileData = (EZDCMimeSourceItem)newItem("xxFileData");
		A = (business.blap.NSBL0340.NSBL0340_ACMsgArray)newMsgArray("A");
		orgCd = (EZDCStringItem)newItem("orgCd");
		orgLayerNum = (EZDCBigDecimalItem)newItem("orgLayerNum");
		svcMgrTpCd = (EZDCStringItem)newItem("svcMgrTpCd");
		svcRqstDownTpCd = (EZDCStringItem)newItem("svcRqstDownTpCd");
		svcMgrPsnCd = (EZDCStringItem)newItem("svcMgrPsnCd");
		svcRqstCritTpCd = (EZDCStringItem)newItem("svcRqstCritTpCd");
		dsSvcCallTpCd = (EZDCStringItem)newItem("dsSvcCallTpCd");
		fsrSvcTaskStsRelnPk = (EZDCBigDecimalItem)newItem("fsrSvcTaskStsRelnPk");
		techCd = (EZDCStringItem)newItem("techCd");
		svcCallSrcTpCd = (EZDCStringItem)newItem("svcCallSrcTpCd");
		svcRqstDownFlgColNm = (EZDCStringItem)newItem("svcRqstDownFlgColNm");
	}

	/**
	 * get the type of array which is stored
	 * @return NSBL0340CMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSBL0340CMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"glblCmpyCd", "glblCmpyCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"xxPageShowFromNum", "xxPageShowFromNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowToNum", "xxPageShowToNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowOfNum", "xxPageShowOfNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxComnColOrdTxt", "xxComnColOrdTxt", null, null, TYPE_HANKAKUEISU, "2000", null},
	{"xxFileData", "xxFileData", null, null, TYPE_UPLOAD, null, null},
	{"A", "A", null, "20", "business.blap.NSBL0340.NSBL0340_ACMsgArray", null, null},
	
	{"orgCd", "orgCd", null, null, TYPE_HANKAKUEISU, "8", null},
	{"orgLayerNum", "orgLayerNum", null, null, TYPE_SEISU_SYOSU, "2", "0"},
	{"svcMgrTpCd", "svcMgrTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"svcRqstDownTpCd", "svcRqstDownTpCd", null, null, TYPE_HANKAKUEISU, "5", null},
	{"svcMgrPsnCd", "svcMgrPsnCd", null, null, TYPE_HANKAKUEISU, "8", null},
	{"svcRqstCritTpCd", "svcRqstCritTpCd", null, null, TYPE_HANKAKUEISU, "5", null},
	{"dsSvcCallTpCd", "dsSvcCallTpCd", null, null, TYPE_HANKAKUEISU, "3", null},
	{"fsrSvcTaskStsRelnPk", "fsrSvcTaskStsRelnPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"techCd", "techCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"svcCallSrcTpCd", "svcCallSrcTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"svcRqstDownFlgColNm", "svcRqstDownFlgColNm", null, null, TYPE_HANKAKUEISU, "30", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"GLBL_CMPY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//glblCmpyCd
        {"XX_PAGE_SHOW_FROM_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowFromNum
        {"XX_PAGE_SHOW_TO_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowToNum
        {"XX_PAGE_SHOW_OF_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowOfNum
        {"XX_COMN_COL_ORD_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxComnColOrdTxt
        {"XX_FILE_DATA",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxFileData
		null,	//A
        {"ORG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//orgCd
        {"ORG_LAYER_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//orgLayerNum
        {"SVC_MGR_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMgrTpCd
        {"SVC_RQST_DOWN_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcRqstDownTpCd
        {"SVC_MGR_PSN_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMgrPsnCd
        {"SVC_RQST_CRIT_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcRqstCritTpCd
        {"DS_SVC_CALL_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsSvcCallTpCd
        {"FSR_SVC_TASK_STS_RELN_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//fsrSvcTaskStsRelnPk
        {"TECH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//techCd
        {"SVC_CALL_SRC_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcCallSrcTpCd
        {"SVC_RQST_DOWN_FLG_COL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcRqstDownFlgColNm
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

