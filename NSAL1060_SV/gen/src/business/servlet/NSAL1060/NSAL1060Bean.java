// This file was automatically generated by Screen Field Definition Document and XLA200710010
// Generated on    :20191105015236000
// Velocity Macro:svltdatabean.vm V200604010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL1060Bean.java Copyright FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */

package  business.servlet.NSAL1060;

import parts.servletcommon.EZDCommonDataBean;

/*
 * NSAL1060 is data bean class.
 */
public class NSAL1060Bean extends EZDCommonDataBean {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	//Constant Definition Area
	/** SVC_MACH_MSTR_PK*/
	public static final String svcMachMstrPk = "svcMachMstrPk";

	/** XX_FROM_DT*/
	public static final String xxFromDt = "xxFromDt";

	/** DS_CONTR_DTL_PK*/
	public static final String dsContrDtlPk = "dsContrDtlPk";

	/** SER_NUM*/
	public static final String serNum = "serNum";

	/** A*/
	public static final String A = "A";

	/** DS_MTR_READ_TP_CD_A1*/
	public static final String dsMtrReadTpCd_A1 = "dsMtrReadTpCd_A1";

	/** MTR_LB_CD_A1*/
	public static final String mtrLbCd_A1 = "mtrLbCd_A1";

	/** MTR_LB_DESC_TXT_A1*/
	public static final String mtrLbDescTxt_A1 = "mtrLbDescTxt_A1";

	/** MTR_READ_DT_A1*/
	public static final String mtrReadDt_A1 = "mtrReadDt_A1";

	/** READ_MTR_CNT_A1*/
	public static final String readMtrCnt_A1 = "readMtrCnt_A1";

	/** SVC_PHYS_MTR_PK_A1*/
	public static final String svcPhysMtrPk_A1 = "svcPhysMtrPk_A1";

	/** SVC_PHYS_MTR_READ_GRP_SQ_A1*/
	public static final String svcPhysMtrReadGrpSq_A1 = "svcPhysMtrReadGrpSq_A1";

	/** DS_MTR_READ_TP_GRP_CD_A1*/
	public static final String dsMtrReadTpGrpCd_A1 = "dsMtrReadTpGrpCd_A1";

	/** DS_CONTR_DTL_PK_A1*/
	public static final String dsContrDtlPk_A1 = "dsContrDtlPk_A1";

	/** DS_CONTR_NUM_A1*/
	public static final String dsContrNum_A1 = "dsContrNum_A1";

	/** Q*/
	public static final String Q = "Q";

	/** SVC_PHYS_MTR_PK_P*/
	public static final String svcPhysMtrPk_P = "svcPhysMtrPk_P";

	/** MTR_LB_CD_P*/
	public static final String mtrLbCd_P = "mtrLbCd_P";

	/** MTR_READ_DT_P*/
	public static final String mtrReadDt_P = "mtrReadDt_P";

	/** READ_MTR_CNT_P*/
	public static final String readMtrCnt_P = "readMtrCnt_P";

	/** SVC_PHYS_MTR_READ_GRP_SQ_P*/
	public static final String svcPhysMtrReadGrpSq_P = "svcPhysMtrReadGrpSq_P";

	/** DS_MTR_READ_TP_GRP_CD_P*/
	public static final String dsMtrReadTpGrpCd_P = "dsMtrReadTpGrpCd_P";

	/**
	 * Method name:NSAL1060 is Bean's Constructor.
	 * <dd>method explanation:Initialization when instance of NSAL1060Bean is generated
	 * <dd>Remarks:
	 */
	public NSAL1060Bean() {
		super("business.servlet.NSAL1060.NSAL1060BMsg");
	}

	/**
	 * get  SVC_MACH_MSTR_PK.
	 * @return SVC_MACH_MSTR_PK
	 */
	public String getSvcMachMstrPk() {
		return outputValue(svcMachMstrPk);
	}

	/**
	 * set  SVC_MACH_MSTR_PK.
	 * @param data SVC_MACH_MSTR_PK
	 */
	public void setSvcMachMstrPk(String data) {
		inputValue(svcMachMstrPk,data);
	}

	/**
	 * get  XX_FROM_DT.
	 * @return XX_FROM_DT
	 */
	public String getXxFromDt() {
		return outputValue(xxFromDt, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  XX_FROM_DT.
	 * @param data XX_FROM_DT
	 */
	public void setXxFromDt(String data) {
		inputValue(xxFromDt, data, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * get  DS_CONTR_DTL_PK.
	 * @return DS_CONTR_DTL_PK
	 */
	public String getDsContrDtlPk() {
		return outputValue(dsContrDtlPk);
	}

	/**
	 * set  DS_CONTR_DTL_PK.
	 * @param data DS_CONTR_DTL_PK
	 */
	public void setDsContrDtlPk(String data) {
		inputValue(dsContrDtlPk,data);
	}

	/**
	 * get  SER_NUM.
	 * @return SER_NUM
	 */
	public String getSerNum() {
		return outputValue(serNum);
	}

	/**
	 * set  SER_NUM.
	 * @param data SER_NUM
	 */
	public void setSerNum(String data) {
		inputValue(serNum,data);
	}

	/**
	 * get  DS_MTR_READ_TP_CD_A1.
	 * @param idx1 List Number
	 * @return DS_MTR_READ_TP_CD_A1
	 */
	public String getDsMtrReadTpCd_A1(int idx1) {
		return outputValue(A, idx1, dsMtrReadTpCd_A1);
	}

	/**
	 * set  DS_MTR_READ_TP_CD_A1.
	 * @param data DS_MTR_READ_TP_CD_A1Array
	 */
	public void setDsMtrReadTpCd_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsMtrReadTpCd_A1, data[j]);
		}
	}

	/**
	 * get  MTR_LB_CD_A1.
	 * @param idx1 List Number
	 * @return MTR_LB_CD_A1
	 */
	public String getMtrLbCd_A1(int idx1) {
		return outputValue(A, idx1, mtrLbCd_A1);
	}

	/**
	 * set  MTR_LB_CD_A1.
	 * @param data MTR_LB_CD_A1Array
	 */
	public void setMtrLbCd_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, mtrLbCd_A1, data[j]);
		}
	}

	/**
	 * get  MTR_LB_DESC_TXT_A1.
	 * @param idx1 List Number
	 * @return MTR_LB_DESC_TXT_A1
	 */
	public String getMtrLbDescTxt_A1(int idx1) {
		return outputValue(A, idx1, mtrLbDescTxt_A1);
	}

	/**
	 * set  MTR_LB_DESC_TXT_A1.
	 * @param data MTR_LB_DESC_TXT_A1Array
	 */
	public void setMtrLbDescTxt_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, mtrLbDescTxt_A1, data[j]);
		}
	}

	/**
	 * get  MTR_READ_DT_A1.
	 * @param idx1 List Number
	 * @return MTR_READ_DT_A1
	 */
	public String getMtrReadDt_A1(int idx1) {
		return outputValue(A, idx1, mtrReadDt_A1, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  MTR_READ_DT_A1.
	 * @param data MTR_READ_DT_A1Array
	 */
	public void setMtrReadDt_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i,  mtrReadDt_A1, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  READ_MTR_CNT_A1.
	 * @param idx1 List Number
	 * @return READ_MTR_CNT_A1
	 */
	public String getReadMtrCnt_A1(int idx1) {
		return outputValue(A, idx1, readMtrCnt_A1);
	}

	/**
	 * set  READ_MTR_CNT_A1.
	 * @param data READ_MTR_CNT_A1Array
	 */
	public void setReadMtrCnt_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, readMtrCnt_A1, data[j]);
		}
	}

	/**
	 * get  SVC_PHYS_MTR_PK_A1.
	 * @param idx1 List Number
	 * @return SVC_PHYS_MTR_PK_A1
	 */
	public String getSvcPhysMtrPk_A1(int idx1) {
		return outputValue(A, idx1, svcPhysMtrPk_A1);
	}

	/**
	 * set  SVC_PHYS_MTR_PK_A1.
	 * @param data SVC_PHYS_MTR_PK_A1Array
	 */
	public void setSvcPhysMtrPk_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcPhysMtrPk_A1, data[j]);
		}
	}

	/**
	 * get  SVC_PHYS_MTR_READ_GRP_SQ_A1.
	 * @param idx1 List Number
	 * @return SVC_PHYS_MTR_READ_GRP_SQ_A1
	 */
	public String getSvcPhysMtrReadGrpSq_A1(int idx1) {
		return outputValue(A, idx1, svcPhysMtrReadGrpSq_A1);
	}

	/**
	 * set  SVC_PHYS_MTR_READ_GRP_SQ_A1.
	 * @param data SVC_PHYS_MTR_READ_GRP_SQ_A1Array
	 */
	public void setSvcPhysMtrReadGrpSq_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcPhysMtrReadGrpSq_A1, data[j]);
		}
	}

	/**
	 * get  DS_MTR_READ_TP_GRP_CD_A1.
	 * @param idx1 List Number
	 * @return DS_MTR_READ_TP_GRP_CD_A1
	 */
	public String getDsMtrReadTpGrpCd_A1(int idx1) {
		return outputValue(A, idx1, dsMtrReadTpGrpCd_A1);
	}

	/**
	 * set  DS_MTR_READ_TP_GRP_CD_A1.
	 * @param data DS_MTR_READ_TP_GRP_CD_A1Array
	 */
	public void setDsMtrReadTpGrpCd_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsMtrReadTpGrpCd_A1, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_DTL_PK_A1.
	 * @param idx1 List Number
	 * @return DS_CONTR_DTL_PK_A1
	 */
	public String getDsContrDtlPk_A1(int idx1) {
		return outputValue(A, idx1, dsContrDtlPk_A1);
	}

	/**
	 * set  DS_CONTR_DTL_PK_A1.
	 * @param data DS_CONTR_DTL_PK_A1Array
	 */
	public void setDsContrDtlPk_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsContrDtlPk_A1, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_NUM_A1.
	 * @param idx1 List Number
	 * @return DS_CONTR_NUM_A1
	 */
	public String getDsContrNum_A1(int idx1) {
		return outputValue(A, idx1, dsContrNum_A1);
	}

	/**
	 * set  DS_CONTR_NUM_A1.
	 * @param data DS_CONTR_NUM_A1Array
	 */
	public void setDsContrNum_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsContrNum_A1, data[j]);
		}
	}

	/**
	 * get  SVC_PHYS_MTR_PK_P.
	 * @param idx1 List Number
	 * @return SVC_PHYS_MTR_PK_P
	 */
	public String getSvcPhysMtrPk_P(int idx1) {
		return outputValue(Q, idx1, svcPhysMtrPk_P);
	}

	/**
	 * set  SVC_PHYS_MTR_PK_P.
	 * @param data SVC_PHYS_MTR_PK_PArray
	 */
	public void setSvcPhysMtrPk_P(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(Q);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(Q, i, svcPhysMtrPk_P, data[j]);
		}
	}

	/**
	 * get  MTR_LB_CD_P.
	 * @param idx1 List Number
	 * @return MTR_LB_CD_P
	 */
	public String getMtrLbCd_P(int idx1) {
		return outputValue(Q, idx1, mtrLbCd_P);
	}

	/**
	 * set  MTR_LB_CD_P.
	 * @param data MTR_LB_CD_PArray
	 */
	public void setMtrLbCd_P(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(Q);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(Q, i, mtrLbCd_P, data[j]);
		}
	}

	/**
	 * get  MTR_READ_DT_P.
	 * @param idx1 List Number
	 * @return MTR_READ_DT_P
	 */
	public String getMtrReadDt_P(int idx1) {
		return outputValue(Q, idx1, mtrReadDt_P, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  MTR_READ_DT_P.
	 * @param data MTR_READ_DT_PArray
	 */
	public void setMtrReadDt_P(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(Q);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(Q, i,  mtrReadDt_P, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  READ_MTR_CNT_P.
	 * @param idx1 List Number
	 * @return READ_MTR_CNT_P
	 */
	public String getReadMtrCnt_P(int idx1) {
		return outputValue(Q, idx1, readMtrCnt_P);
	}

	/**
	 * set  READ_MTR_CNT_P.
	 * @param data READ_MTR_CNT_PArray
	 */
	public void setReadMtrCnt_P(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(Q);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(Q, i, readMtrCnt_P, data[j]);
		}
	}

	/**
	 * get  SVC_PHYS_MTR_READ_GRP_SQ_P.
	 * @param idx1 List Number
	 * @return SVC_PHYS_MTR_READ_GRP_SQ_P
	 */
	public String getSvcPhysMtrReadGrpSq_P(int idx1) {
		return outputValue(Q, idx1, svcPhysMtrReadGrpSq_P);
	}

	/**
	 * set  SVC_PHYS_MTR_READ_GRP_SQ_P.
	 * @param data SVC_PHYS_MTR_READ_GRP_SQ_PArray
	 */
	public void setSvcPhysMtrReadGrpSq_P(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(Q);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(Q, i, svcPhysMtrReadGrpSq_P, data[j]);
		}
	}

	/**
	 * get  DS_MTR_READ_TP_GRP_CD_P.
	 * @param idx1 List Number
	 * @return DS_MTR_READ_TP_GRP_CD_P
	 */
	public String getDsMtrReadTpGrpCd_P(int idx1) {
		return outputValue(Q, idx1, dsMtrReadTpGrpCd_P);
	}

	/**
	 * set  DS_MTR_READ_TP_GRP_CD_P.
	 * @param data DS_MTR_READ_TP_GRP_CD_PArray
	 */
	public void setDsMtrReadTpGrpCd_P(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(Q);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(Q, i, dsMtrReadTpGrpCd_P, data[j]);
		}
	}

}

