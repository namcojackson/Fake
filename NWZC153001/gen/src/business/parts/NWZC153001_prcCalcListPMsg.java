//This file was automatically generated by Common Business Component Interface Definition Document and XLA200710010.
// Generated on    :20181115103514000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :CommonBusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NWZC153001_prcCalcListPMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.parts;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NWZC153001 Common Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NWZC153001_prcCalcListPMsg extends EZDPMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** CPO_RTRN_PRC_CALC_BASE_PK*/
	public final EZDPBigDecimalItem              cpoRtrnPrcCalcBasePk;

    /** DS_CPO_RTRN_LINE_NUM*/
	public final EZDPStringItem              dsCpoRtrnLineNum;

    /** DS_CPO_RTRN_LINE_SUB_NUM*/
	public final EZDPStringItem              dsCpoRtrnLineSubNum;

    /** PRC_COND_TP_CD*/
	public final EZDPStringItem              prcCondTpCd;

    /** PRC_COND_TP_DESC_TXT*/
	public final EZDPStringItem              prcCondTpDescTxt;

    /** PRC_DTL_GRP_CD*/
	public final EZDPStringItem              prcDtlGrpCd;

    /** PRC_JRNL_GRP_CD*/
	public final EZDPStringItem              prcJrnlGrpCd;

    /** PRC_COND_MAN_ENTRY_FLG*/
	public final EZDPStringItem              prcCondManEntryFlg;

    /** PRC_COND_MAN_ADD_FLG*/
	public final EZDPStringItem              prcCondManAddFlg;

    /** PRC_COND_MAN_DEL_FLG*/
	public final EZDPStringItem              prcCondManDelFlg;

    /** PKG_UOM_CD*/
	public final EZDPStringItem              pkgUomCd;

    /** PRC_COND_UNIT_CD*/
	public final EZDPStringItem              prcCondUnitCd;

    /** PRC_CALC_METH_CD*/
	public final EZDPStringItem              prcCalcMethCd;

    /** AUTO_PRC_AMT_RATE*/
	public final EZDPBigDecimalItem              autoPrcAmtRate;

    /** MAX_PRC_AMT_RATE*/
	public final EZDPBigDecimalItem              maxPrcAmtRate;

    /** MIN_PRC_AMT_RATE*/
	public final EZDPBigDecimalItem              minPrcAmtRate;

    /** MAN_PRC_AMT_RATE*/
	public final EZDPBigDecimalItem              manPrcAmtRate;

    /** CALC_PRC_AMT_RATE*/
	public final EZDPBigDecimalItem              calcPrcAmtRate;

    /** UNIT_PRC_AMT*/
	public final EZDPBigDecimalItem              unitPrcAmt;

    /** DS_MDSE_PRC_PK*/
	public final EZDPBigDecimalItem              dsMdsePrcPk;

    /** SPEC_COND_PRC_PK*/
	public final EZDPBigDecimalItem              specCondPrcPk;

    /** FRT_PER_WT_PK*/
	public final EZDPBigDecimalItem              frtPerWtPk;

    /** AUTO_PRC_CCY_CD*/
	public final EZDPStringItem              autoPrcCcyCd;

    /** PRC_RULE_APPLY_FLG*/
	public final EZDPStringItem              prcRuleApplyFlg;

    /** PRC_RULE_PRCD_PK*/
	public final EZDPBigDecimalItem              prcRulePrcdPk;


	/**
	 * NWZC153001_prcCalcListPMsg is constructor.
	 * The initialization when the instance of NWZC153001_prcCalcListPMsg is generated.
	 */
	public NWZC153001_prcCalcListPMsg() {
		this(false, -1);
	}

	/**
	 * NWZC153001_prcCalcListPMsg is constructor.
	 * The initialization when the instance of NWZC153001_prcCalcListPMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NWZC153001_prcCalcListPMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		cpoRtrnPrcCalcBasePk = (EZDPBigDecimalItem)newItem("cpoRtrnPrcCalcBasePk");
		dsCpoRtrnLineNum = (EZDPStringItem)newItem("dsCpoRtrnLineNum");
		dsCpoRtrnLineSubNum = (EZDPStringItem)newItem("dsCpoRtrnLineSubNum");
		prcCondTpCd = (EZDPStringItem)newItem("prcCondTpCd");
		prcCondTpDescTxt = (EZDPStringItem)newItem("prcCondTpDescTxt");
		prcDtlGrpCd = (EZDPStringItem)newItem("prcDtlGrpCd");
		prcJrnlGrpCd = (EZDPStringItem)newItem("prcJrnlGrpCd");
		prcCondManEntryFlg = (EZDPStringItem)newItem("prcCondManEntryFlg");
		prcCondManAddFlg = (EZDPStringItem)newItem("prcCondManAddFlg");
		prcCondManDelFlg = (EZDPStringItem)newItem("prcCondManDelFlg");
		pkgUomCd = (EZDPStringItem)newItem("pkgUomCd");
		prcCondUnitCd = (EZDPStringItem)newItem("prcCondUnitCd");
		prcCalcMethCd = (EZDPStringItem)newItem("prcCalcMethCd");
		autoPrcAmtRate = (EZDPBigDecimalItem)newItem("autoPrcAmtRate");
		maxPrcAmtRate = (EZDPBigDecimalItem)newItem("maxPrcAmtRate");
		minPrcAmtRate = (EZDPBigDecimalItem)newItem("minPrcAmtRate");
		manPrcAmtRate = (EZDPBigDecimalItem)newItem("manPrcAmtRate");
		calcPrcAmtRate = (EZDPBigDecimalItem)newItem("calcPrcAmtRate");
		unitPrcAmt = (EZDPBigDecimalItem)newItem("unitPrcAmt");
		dsMdsePrcPk = (EZDPBigDecimalItem)newItem("dsMdsePrcPk");
		specCondPrcPk = (EZDPBigDecimalItem)newItem("specCondPrcPk");
		frtPerWtPk = (EZDPBigDecimalItem)newItem("frtPerWtPk");
		autoPrcCcyCd = (EZDPStringItem)newItem("autoPrcCcyCd");
		prcRuleApplyFlg = (EZDPStringItem)newItem("prcRuleApplyFlg");
		prcRulePrcdPk = (EZDPBigDecimalItem)newItem("prcRulePrcdPk");
	}

	/**
	 * get the type of array which is stored
	 * @return NWZC153001_prcCalcListPMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NWZC153001_prcCalcListPMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"cpoRtrnPrcCalcBasePk", "cpoRtrnPrcCalcBasePk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsCpoRtrnLineNum", "dsCpoRtrnLineNum", null, null, TYPE_HANKAKUEISU, "3", null},
	{"dsCpoRtrnLineSubNum", "dsCpoRtrnLineSubNum", null, null, TYPE_HANKAKUEISU, "3", null},
	{"prcCondTpCd", "prcCondTpCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"prcCondTpDescTxt", "prcCondTpDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"prcDtlGrpCd", "prcDtlGrpCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"prcJrnlGrpCd", "prcJrnlGrpCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"prcCondManEntryFlg", "prcCondManEntryFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"prcCondManAddFlg", "prcCondManAddFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"prcCondManDelFlg", "prcCondManDelFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"pkgUomCd", "pkgUomCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"prcCondUnitCd", "prcCondUnitCd", null, null, TYPE_HANKAKUEISU, "1", null},
	{"prcCalcMethCd", "prcCalcMethCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"autoPrcAmtRate", "autoPrcAmtRate", null, null, TYPE_SEISU_SYOSU, "19", "6"},
	{"maxPrcAmtRate", "maxPrcAmtRate", null, null, TYPE_SEISU_SYOSU, "19", "6"},
	{"minPrcAmtRate", "minPrcAmtRate", null, null, TYPE_SEISU_SYOSU, "19", "6"},
	{"manPrcAmtRate", "manPrcAmtRate", null, null, TYPE_SEISU_SYOSU, "19", "6"},
	{"calcPrcAmtRate", "calcPrcAmtRate", null, null, TYPE_SEISU_SYOSU, "19", "6"},
	{"unitPrcAmt", "unitPrcAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"dsMdsePrcPk", "dsMdsePrcPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"specCondPrcPk", "specCondPrcPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"frtPerWtPk", "frtPerWtPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"autoPrcCcyCd", "autoPrcCcyCd", null, null, TYPE_HANKAKUEISU, "3", null},
	{"prcRuleApplyFlg", "prcRuleApplyFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"prcRulePrcdPk", "prcRulePrcdPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"CPO_RTRN_PRC_CALC_BASE_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cpoRtrnPrcCalcBasePk
        {"DS_CPO_RTRN_LINE_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsCpoRtrnLineNum
        {"DS_CPO_RTRN_LINE_SUB_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsCpoRtrnLineSubNum
        {"PRC_COND_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCondTpCd
        {"PRC_COND_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCondTpDescTxt
        {"PRC_DTL_GRP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcDtlGrpCd
        {"PRC_JRNL_GRP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcJrnlGrpCd
        {"PRC_COND_MAN_ENTRY_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCondManEntryFlg
        {"PRC_COND_MAN_ADD_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCondManAddFlg
        {"PRC_COND_MAN_DEL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCondManDelFlg
        {"PKG_UOM_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//pkgUomCd
        {"PRC_COND_UNIT_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCondUnitCd
        {"PRC_CALC_METH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCalcMethCd
        {"AUTO_PRC_AMT_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//autoPrcAmtRate
        {"MAX_PRC_AMT_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//maxPrcAmtRate
        {"MIN_PRC_AMT_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//minPrcAmtRate
        {"MAN_PRC_AMT_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//manPrcAmtRate
        {"CALC_PRC_AMT_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//calcPrcAmtRate
        {"UNIT_PRC_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//unitPrcAmt
        {"DS_MDSE_PRC_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsMdsePrcPk
        {"SPEC_COND_PRC_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//specCondPrcPk
        {"FRT_PER_WT_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//frtPerWtPk
        {"AUTO_PRC_CCY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//autoPrcCcyCd
        {"PRC_RULE_APPLY_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleApplyFlg
        {"PRC_RULE_PRCD_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRulePrcdPk
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

