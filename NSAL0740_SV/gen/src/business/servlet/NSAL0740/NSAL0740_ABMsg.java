//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20190124132030000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0740_ABMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NSAL0740;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL0740 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL0740_ABMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_CHK_BOX_S1*/
	public final EZDBStringItem              xxChkBox_S1;

    /** XX_SCR_ITEM_34_TXT_D1*/
	public final EZDBStringItem              xxScrItem34Txt_D1;

    /** SER_NUM_D1*/
	public final EZDBStringItem              serNum_D1;

    /** SVC_MACH_MSTR_PK_D1*/
	public final EZDBBigDecimalItem              svcMachMstrPk_D1;

    /** MDSE_DESC_SHORT_TXT_D1*/
	public final EZDBStringItem              mdseDescShortTxt_D1;

    /** XX_CHK_BOX_S2*/
	public final EZDBStringItem              xxChkBox_S2;

    /** DS_CONTR_BASE_USG_NM_D1*/
	public final EZDBStringItem              dsContrBaseUsgNm_D1;

    /** CONTR_EFF_FROM_DT_D1*/
	public final EZDBDateItem              contrEffFromDt_D1;

    /** CONTR_EFF_THRU_DT_D1*/
	public final EZDBDateItem              contrEffThruDt_D1;

    /** CONTR_UPLFT_TP_CD_D3*/
	public final EZDBStringItem              contrUplftTpCd_D3;

    /** UPLFT_BASE_FLG_D1*/
	public final EZDBStringItem              uplftBaseFlg_D1;

    /** UPLFT_USG_FLG_D1*/
	public final EZDBStringItem              uplftUsgFlg_D1;

    /** UPLFT_PRC_METH_CD_D3*/
	public final EZDBStringItem              uplftPrcMethCd_D3;

    /** UPLFT_BEF_END_RNW_DAYS_AOT_D1*/
	public final EZDBBigDecimalItem              uplftBefEndRnwDaysAot_D1;

    /** MAX_PRC_UP_RATIO_D1*/
	public final EZDBBigDecimalItem              maxPrcUpRatio_D1;

    /** UPLFT_BASE_PRC_UP_RATIO_D1*/
	public final EZDBBigDecimalItem              uplftBasePrcUpRatio_D1;

    /** UPLFT_MTR_PRC_UP_RATIO_D1*/
	public final EZDBBigDecimalItem              uplftMtrPrcUpRatio_D1;

    /** FIX_TERM_IN_MTH_AOT_D1*/
	public final EZDBBigDecimalItem              fixTermInMthAot_D1;

    /** UPLFT_FIXED_DT_D1*/
	public final EZDBDateItem              uplftFixedDt_D1;

    /** UPLFT_PCY_DT_D1*/
	public final EZDBDateItem              uplftPcyDt_D1;

    /** CONTR_EFF_FROM_DT_BK*/
	public final EZDBDateItem              contrEffFromDt_BK;

    /** CONTR_EFF_THRU_DT_BK*/
	public final EZDBDateItem              contrEffThruDt_BK;

    /** XX_GENL_FLD_AREA_TXT_D1*/
	public final EZDBStringItem              xxGenlFldAreaTxt_D1;

    /** GLBL_CMPY_CD_D1*/
	public final EZDBStringItem              glblCmpyCd_D1;

    /** DS_CONTR_PK_D1*/
	public final EZDBBigDecimalItem              dsContrPk_D1;

    /** DS_CONTR_DTL_PK_D1*/
	public final EZDBBigDecimalItem              dsContrDtlPk_D1;

    /** DS_CONTR_RNW_ESCL_PK_D1*/
	public final EZDBBigDecimalItem              dsContrRnwEsclPk_D1;

    /** DS_CONTR_CATG_CD_D1*/
	public final EZDBStringItem              dsContrCatgCd_D1;

    /** DS_CONTR_NUM_D1*/
	public final EZDBStringItem              dsContrNum_D1;

    /** DS_CONTR_MACH_LVL_NUM_D1*/
	public final EZDBStringItem              dsContrMachLvlNum_D1;

    /** DS_CONTR_DTL_TP_CD_D1*/
	public final EZDBStringItem              dsContrDtlTpCd_D1;

    /** DS_CONTR_STS_CD_D1*/
	public final EZDBStringItem              dsContrStsCd_D1;

    /** DS_CONTR_DTL_STS_CD_D1*/
	public final EZDBStringItem              dsContrDtlStsCd_D1;

    /** XX_DPLY_CTRL_FLG_D1*/
	public final EZDBStringItem              xxDplyCtrlFlg_D1;

    /** XX_BTN_FLG_D1*/
	public final EZDBStringItem              xxBtnFlg_D1;

    /** XX_ROW_NUM_D1*/
	public final EZDBBigDecimalItem              xxRowNum_D1;

    /** XX_NUM_D1*/
	public final EZDBBigDecimalItem              xxNum_D1;

    /** XX_NUM_D2*/
	public final EZDBBigDecimalItem              xxNum_D2;

    /** XX_SORT_NUM_D1*/
	public final EZDBBigDecimalItem              xxSortNum_D1;

    /** XX_NUM_Y*/
	public final EZDBBigDecimalItem              xxNum_Y;

    /** _EZUpdateDateTime_D1*/
	public final EZDBStringItem              ezUpTime_D1;

    /** _EZUpTimeZone_D1*/
	public final EZDBStringItem              ezUpTimeZone_D1;

    /** XX_REC_HIST_CRAT_TS_A*/
	public final EZDBStringItem              xxRecHistCratTs_A;

    /** XX_REC_HIST_CRAT_BY_NM_A*/
	public final EZDBStringItem              xxRecHistCratByNm_A;

    /** XX_REC_HIST_UPD_TS_A*/
	public final EZDBStringItem              xxRecHistUpdTs_A;

    /** XX_REC_HIST_UPD_BY_NM_A*/
	public final EZDBStringItem              xxRecHistUpdByNm_A;

    /** XX_REC_HIST_TBL_NM_A*/
	public final EZDBStringItem              xxRecHistTblNm_A;


	/**
	 * NSAL0740_ABMsg is constructor.
	 * The initialization when the instance of NSAL0740_ABMsg is generated.
	 */
	public NSAL0740_ABMsg() {
		this(false, -1);
	}

	/**
	 * NSAL0740_ABMsg is constructor.
	 * The initialization when the instance of NSAL0740_ABMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL0740_ABMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxChkBox_S1 = (EZDBStringItem)newItem("xxChkBox_S1");
		xxScrItem34Txt_D1 = (EZDBStringItem)newItem("xxScrItem34Txt_D1");
		serNum_D1 = (EZDBStringItem)newItem("serNum_D1");
		svcMachMstrPk_D1 = (EZDBBigDecimalItem)newItem("svcMachMstrPk_D1");
		mdseDescShortTxt_D1 = (EZDBStringItem)newItem("mdseDescShortTxt_D1");
		xxChkBox_S2 = (EZDBStringItem)newItem("xxChkBox_S2");
		dsContrBaseUsgNm_D1 = (EZDBStringItem)newItem("dsContrBaseUsgNm_D1");
		contrEffFromDt_D1 = (EZDBDateItem)newItem("contrEffFromDt_D1");
		contrEffThruDt_D1 = (EZDBDateItem)newItem("contrEffThruDt_D1");
		contrUplftTpCd_D3 = (EZDBStringItem)newItem("contrUplftTpCd_D3");
		uplftBaseFlg_D1 = (EZDBStringItem)newItem("uplftBaseFlg_D1");
		uplftUsgFlg_D1 = (EZDBStringItem)newItem("uplftUsgFlg_D1");
		uplftPrcMethCd_D3 = (EZDBStringItem)newItem("uplftPrcMethCd_D3");
		uplftBefEndRnwDaysAot_D1 = (EZDBBigDecimalItem)newItem("uplftBefEndRnwDaysAot_D1");
		maxPrcUpRatio_D1 = (EZDBBigDecimalItem)newItem("maxPrcUpRatio_D1");
		uplftBasePrcUpRatio_D1 = (EZDBBigDecimalItem)newItem("uplftBasePrcUpRatio_D1");
		uplftMtrPrcUpRatio_D1 = (EZDBBigDecimalItem)newItem("uplftMtrPrcUpRatio_D1");
		fixTermInMthAot_D1 = (EZDBBigDecimalItem)newItem("fixTermInMthAot_D1");
		uplftFixedDt_D1 = (EZDBDateItem)newItem("uplftFixedDt_D1");
		uplftPcyDt_D1 = (EZDBDateItem)newItem("uplftPcyDt_D1");
		contrEffFromDt_BK = (EZDBDateItem)newItem("contrEffFromDt_BK");
		contrEffThruDt_BK = (EZDBDateItem)newItem("contrEffThruDt_BK");
		xxGenlFldAreaTxt_D1 = (EZDBStringItem)newItem("xxGenlFldAreaTxt_D1");
		glblCmpyCd_D1 = (EZDBStringItem)newItem("glblCmpyCd_D1");
		dsContrPk_D1 = (EZDBBigDecimalItem)newItem("dsContrPk_D1");
		dsContrDtlPk_D1 = (EZDBBigDecimalItem)newItem("dsContrDtlPk_D1");
		dsContrRnwEsclPk_D1 = (EZDBBigDecimalItem)newItem("dsContrRnwEsclPk_D1");
		dsContrCatgCd_D1 = (EZDBStringItem)newItem("dsContrCatgCd_D1");
		dsContrNum_D1 = (EZDBStringItem)newItem("dsContrNum_D1");
		dsContrMachLvlNum_D1 = (EZDBStringItem)newItem("dsContrMachLvlNum_D1");
		dsContrDtlTpCd_D1 = (EZDBStringItem)newItem("dsContrDtlTpCd_D1");
		dsContrStsCd_D1 = (EZDBStringItem)newItem("dsContrStsCd_D1");
		dsContrDtlStsCd_D1 = (EZDBStringItem)newItem("dsContrDtlStsCd_D1");
		xxDplyCtrlFlg_D1 = (EZDBStringItem)newItem("xxDplyCtrlFlg_D1");
		xxBtnFlg_D1 = (EZDBStringItem)newItem("xxBtnFlg_D1");
		xxRowNum_D1 = (EZDBBigDecimalItem)newItem("xxRowNum_D1");
		xxNum_D1 = (EZDBBigDecimalItem)newItem("xxNum_D1");
		xxNum_D2 = (EZDBBigDecimalItem)newItem("xxNum_D2");
		xxSortNum_D1 = (EZDBBigDecimalItem)newItem("xxSortNum_D1");
		xxNum_Y = (EZDBBigDecimalItem)newItem("xxNum_Y");
		ezUpTime_D1 = (EZDBStringItem)newItem("ezUpTime_D1");
		ezUpTimeZone_D1 = (EZDBStringItem)newItem("ezUpTimeZone_D1");
		xxRecHistCratTs_A = (EZDBStringItem)newItem("xxRecHistCratTs_A");
		xxRecHistCratByNm_A = (EZDBStringItem)newItem("xxRecHistCratByNm_A");
		xxRecHistUpdTs_A = (EZDBStringItem)newItem("xxRecHistUpdTs_A");
		xxRecHistUpdByNm_A = (EZDBStringItem)newItem("xxRecHistUpdByNm_A");
		xxRecHistTblNm_A = (EZDBStringItem)newItem("xxRecHistTblNm_A");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL0740_ABMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL0740_ABMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxChkBox_S1", "xxChkBox_S1", "S1", null, TYPE_HANKAKUEIJI, "1", null},
	{"xxScrItem34Txt_D1", "xxScrItem34Txt_D1", "D1", null, TYPE_HANKAKUEISU, "34", null},
	{"serNum_D1", "serNum_D1", "D1", null, TYPE_HANKAKUEISU, "30", null},
	{"svcMachMstrPk_D1", "svcMachMstrPk_D1", "D1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"mdseDescShortTxt_D1", "mdseDescShortTxt_D1", "D1", null, TYPE_HANKAKUEISU, "250", null},
	{"xxChkBox_S2", "xxChkBox_S2", "S2", null, TYPE_HANKAKUEIJI, "1", null},
	{"dsContrBaseUsgNm_D1", "dsContrBaseUsgNm_D1", "D1", null, TYPE_HANKAKUEISU, "30", null},
	{"contrEffFromDt_D1", "contrEffFromDt_D1", "D1", null, TYPE_NENTSUKIHI, "8", null},
	{"contrEffThruDt_D1", "contrEffThruDt_D1", "D1", null, TYPE_NENTSUKIHI, "8", null},
	{"contrUplftTpCd_D3", "contrUplftTpCd_D3", "D3", null, TYPE_HANKAKUEISU, "2", null},
	{"uplftBaseFlg_D1", "uplftBaseFlg_D1", "D1", null, TYPE_HANKAKUEISU, "1", null},
	{"uplftUsgFlg_D1", "uplftUsgFlg_D1", "D1", null, TYPE_HANKAKUEISU, "1", null},
	{"uplftPrcMethCd_D3", "uplftPrcMethCd_D3", "D3", null, TYPE_HANKAKUEISU, "2", null},
	{"uplftBefEndRnwDaysAot_D1", "uplftBefEndRnwDaysAot_D1", "D1", null, TYPE_SEISU_SYOSU, "3", "0"},
	{"maxPrcUpRatio_D1", "maxPrcUpRatio_D1", "D1", null, TYPE_SEISU_SYOSU, "9", "5"},
	{"uplftBasePrcUpRatio_D1", "uplftBasePrcUpRatio_D1", "D1", null, TYPE_SEISU_SYOSU, "9", "5"},
	{"uplftMtrPrcUpRatio_D1", "uplftMtrPrcUpRatio_D1", "D1", null, TYPE_SEISU_SYOSU, "9", "5"},
	{"fixTermInMthAot_D1", "fixTermInMthAot_D1", "D1", null, TYPE_SEISU_SYOSU, "3", "0"},
	{"uplftFixedDt_D1", "uplftFixedDt_D1", "D1", null, TYPE_NENTSUKIHI, "8", null},
	{"uplftPcyDt_D1", "uplftPcyDt_D1", "D1", null, TYPE_NENTSUKIHI, "8", null},
	{"contrEffFromDt_BK", "contrEffFromDt_BK", "BK", null, TYPE_NENTSUKIHI, "8", null},
	{"contrEffThruDt_BK", "contrEffThruDt_BK", "BK", null, TYPE_NENTSUKIHI, "8", null},
	{"xxGenlFldAreaTxt_D1", "xxGenlFldAreaTxt_D1", "D1", null, TYPE_HANKAKUEISU, "1000", null},
	{"glblCmpyCd_D1", "glblCmpyCd_D1", "D1", null, TYPE_HANKAKUEISU, "4", null},
	{"dsContrPk_D1", "dsContrPk_D1", "D1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrDtlPk_D1", "dsContrDtlPk_D1", "D1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrRnwEsclPk_D1", "dsContrRnwEsclPk_D1", "D1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrCatgCd_D1", "dsContrCatgCd_D1", "D1", null, TYPE_HANKAKUEISU, "3", null},
	{"dsContrNum_D1", "dsContrNum_D1", "D1", null, TYPE_HANKAKUEISU, "30", null},
	{"dsContrMachLvlNum_D1", "dsContrMachLvlNum_D1", "D1", null, TYPE_HANKAKUEISU, "1", null},
	{"dsContrDtlTpCd_D1", "dsContrDtlTpCd_D1", "D1", null, TYPE_HANKAKUEISU, "6", null},
	{"dsContrStsCd_D1", "dsContrStsCd_D1", "D1", null, TYPE_HANKAKUEISU, "2", null},
	{"dsContrDtlStsCd_D1", "dsContrDtlStsCd_D1", "D1", null, TYPE_HANKAKUEISU, "4", null},
	{"xxDplyCtrlFlg_D1", "xxDplyCtrlFlg_D1", "D1", null, TYPE_HANKAKUEISU, "1", null},
	{"xxBtnFlg_D1", "xxBtnFlg_D1", "D1", null, TYPE_HANKAKUEISU, "1", null},
	{"xxRowNum_D1", "xxRowNum_D1", "D1", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxNum_D1", "xxNum_D1", "D1", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxNum_D2", "xxNum_D2", "D2", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxSortNum_D1", "xxSortNum_D1", "D1", null, TYPE_SEISU_SYOSU, "3", "0"},
	{"xxNum_Y", "xxNum_Y", "Y", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"ezUpTime_D1", "ezUpTime_D1", "D1", null, TYPE_HANKAKUEISU, "17", null},
	{"ezUpTimeZone_D1", "ezUpTimeZone_D1", "D1", null, TYPE_HANKAKUEISU, "5", null},
	{"xxRecHistCratTs_A", "xxRecHistCratTs_A", "A", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistCratByNm_A", "xxRecHistCratByNm_A", "A", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistUpdTs_A", "xxRecHistUpdTs_A", "A", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistUpdByNm_A", "xxRecHistUpdByNm_A", "A", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistTblNm_A", "xxRecHistTblNm_A", "A", null, TYPE_HANKAKUEISU, "60", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_CHK_BOX",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_S1
        {"XX_SCR_ITEM_34_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxScrItem34Txt_D1
        {"SER_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNum_D1
        {"SVC_MACH_MSTR_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachMstrPk_D1
        {"MDSE_DESC_SHORT_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseDescShortTxt_D1
        {"XX_CHK_BOX",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_S2
        {"DS_CONTR_BASE_USG_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBaseUsgNm_D1
        {"CONTR_EFF_FROM_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//contrEffFromDt_D1
        {"CONTR_EFF_THRU_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//contrEffThruDt_D1
        {"CONTR_UPLFT_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrUplftTpCd_D3
        {"UPLFT_BASE_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//uplftBaseFlg_D1
        {"UPLFT_USG_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//uplftUsgFlg_D1
        {"UPLFT_PRC_METH_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//uplftPrcMethCd_D3
        {"UPLFT_BEF_END_RNW_DAYS_AOT",  NO,  "0","999","1", NO,YES, NO, NO,null,null,null, null,  NO,  NO},	//uplftBefEndRnwDaysAot_D1
        {"MAX_PRC_UP_RATIO",  NO,  "0","100","1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//maxPrcUpRatio_D1
        {"UPLFT_BASE_PRC_UP_RATIO",  NO,  "0","100","1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//uplftBasePrcUpRatio_D1
        {"UPLFT_MTR_PRC_UP_RATIO",  NO,  "0","100","1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//uplftMtrPrcUpRatio_D1
        {"FIX_TERM_IN_MTH_AOT",  NO,  "1","999","1", NO,YES, NO, NO,null,null,null, null,  NO,  NO},	//fixTermInMthAot_D1
        {"UPLFT_FIXED_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//uplftFixedDt_D1
        {"UPLFT_PCY_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//uplftPcyDt_D1
        {"CONTR_EFF_FROM_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//contrEffFromDt_BK
        {"CONTR_EFF_THRU_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//contrEffThruDt_BK
        {"XX_GENL_FLD_AREA_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxGenlFldAreaTxt_D1
        {"GLBL_CMPY_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//glblCmpyCd_D1
        {"DS_CONTR_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrPk_D1
        {"DS_CONTR_DTL_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrDtlPk_D1
        {"DS_CONTR_RNW_ESCL_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrRnwEsclPk_D1
        {"DS_CONTR_CATG_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrCatgCd_D1
        {"DS_CONTR_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrNum_D1
        {"DS_CONTR_MACH_LVL_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrMachLvlNum_D1
        {"DS_CONTR_DTL_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrDtlTpCd_D1
        {"DS_CONTR_STS_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrStsCd_D1
        {"DS_CONTR_DTL_STS_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrDtlStsCd_D1
        {"XX_DPLY_CTRL_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDplyCtrlFlg_D1
        {"XX_BTN_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxBtnFlg_D1
        {"XX_ROW_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRowNum_D1
        {"XX_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxNum_D1
        {"XX_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxNum_D2
        {"XX_SORT_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxSortNum_D1
        {"XX_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxNum_Y
        {"_EZUpdateDateTime",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTime_D1
        {"_EZUpTimeZone",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTimeZone_D1
        {"XX_REC_HIST_CRAT_TS",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratTs_A
        {"XX_REC_HIST_CRAT_BY_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratByNm_A
        {"XX_REC_HIST_UPD_TS",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdTs_A
        {"XX_REC_HIST_UPD_BY_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdByNm_A
        {"XX_REC_HIST_TBL_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistTblNm_A
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

