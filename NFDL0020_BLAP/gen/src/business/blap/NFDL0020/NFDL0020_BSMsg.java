//This file was automatically generated by Business Component Interface Definition Document (Define Business Application Global Area) and XLA200710010.
// Generated on    :20230602103743000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NFDL0020_BSMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NFDL0020;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NFDL0020 Business Application Global Area Message class.
 * @author
 * @version XLA200710010
 */
public class NFDL0020_BSMsg extends EZDSMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** DS_CONTR_PK_BD*/
	public final EZDSBigDecimalItem              dsContrPk_BD;

    /** DS_CONTR_DTL_PK_BD*/
	public final EZDSBigDecimalItem              dsContrDtlPk_BD;

    /** DS_CONTR_NUM_BD*/
	public final EZDSStringItem              dsContrNum_BD;

    /** SVC_CONTR_REF_CMNT_TXT_BD*/
	public final EZDSStringItem              svcContrRefCmntTxt_BD;

    /** CCY_CD_BD*/
	public final EZDSStringItem              ccyCd_BD;

    /** CONTR_VRSN_EFF_FROM_DT_BD*/
	public final EZDSDateItem              contrVrsnEffFromDt_BD;

    /** CONTR_VRSN_EFF_THRU_DT_BD*/
	public final EZDSDateItem              contrVrsnEffThruDt_BD;

    /** CONTR_CLO_DT_BD*/
	public final EZDSDateItem              contrCloDt_BD;

    /** RNW_EFF_FROM_DT_BD*/
	public final EZDSDateItem              rnwEffFromDt_BD;

    /** XX_DT_10_DT_B1*/
	public final EZDSDateItem              xxDt10Dt_B1;

    /** CONTR_HLD_FLG_BD*/
	public final EZDSStringItem              contrHldFlg_BD;

    /** CONTR_HLD_FLG_BK*/
	public final EZDSStringItem              contrHldFlg_BK;

    /** REL_FLG_BD*/
	public final EZDSStringItem              relFlg_BD;

    /** XX_DT_10_DT_B2*/
	public final EZDSDateItem              xxDt10Dt_B2;

    /** STS_MEMO_TXT_B1*/
	public final EZDSStringItem              stsMemoTxt_B1;

    /** XX_DT_10_DT_B3*/
	public final EZDSDateItem              xxDt10Dt_B3;

    /** STS_MEMO_UPD_FULL_PSN_NM_BD*/
	public final EZDSStringItem              stsMemoUpdFullPsnNm_BD;

    /** STS_MEMO_TXT_B2*/
	public final EZDSStringItem              stsMemoTxt_B2;


	/**
	 * NFDL0020_BSMsg is constructor.
	 * The initialization when the instance of NFDL0020_BSMsg is generated.
	 */
	public NFDL0020_BSMsg() {
		this(false, -1);
	}

	/**
	 * NFDL0020_BSMsg is constructor.
	 * The initialization when the instance of NFDL0020_BSMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NFDL0020_BSMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		dsContrPk_BD = (EZDSBigDecimalItem)newItem("dsContrPk_BD");
		dsContrDtlPk_BD = (EZDSBigDecimalItem)newItem("dsContrDtlPk_BD");
		dsContrNum_BD = (EZDSStringItem)newItem("dsContrNum_BD");
		svcContrRefCmntTxt_BD = (EZDSStringItem)newItem("svcContrRefCmntTxt_BD");
		ccyCd_BD = (EZDSStringItem)newItem("ccyCd_BD");
		contrVrsnEffFromDt_BD = (EZDSDateItem)newItem("contrVrsnEffFromDt_BD");
		contrVrsnEffThruDt_BD = (EZDSDateItem)newItem("contrVrsnEffThruDt_BD");
		contrCloDt_BD = (EZDSDateItem)newItem("contrCloDt_BD");
		rnwEffFromDt_BD = (EZDSDateItem)newItem("rnwEffFromDt_BD");
		xxDt10Dt_B1 = (EZDSDateItem)newItem("xxDt10Dt_B1");
		contrHldFlg_BD = (EZDSStringItem)newItem("contrHldFlg_BD");
		contrHldFlg_BK = (EZDSStringItem)newItem("contrHldFlg_BK");
		relFlg_BD = (EZDSStringItem)newItem("relFlg_BD");
		xxDt10Dt_B2 = (EZDSDateItem)newItem("xxDt10Dt_B2");
		stsMemoTxt_B1 = (EZDSStringItem)newItem("stsMemoTxt_B1");
		xxDt10Dt_B3 = (EZDSDateItem)newItem("xxDt10Dt_B3");
		stsMemoUpdFullPsnNm_BD = (EZDSStringItem)newItem("stsMemoUpdFullPsnNm_BD");
		stsMemoTxt_B2 = (EZDSStringItem)newItem("stsMemoTxt_B2");
	}

	/**
	 * get the type of array which is stored
	 * @return NFDL0020_BSMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NFDL0020_BSMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"dsContrPk_BD", "dsContrPk_BD", "BD", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrDtlPk_BD", "dsContrDtlPk_BD", "BD", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrNum_BD", "dsContrNum_BD", "BD", null, TYPE_HANKAKUEISU, "30", null},
	{"svcContrRefCmntTxt_BD", "svcContrRefCmntTxt_BD", "BD", null, TYPE_HANKAKUEISU, "90", null},
	{"ccyCd_BD", "ccyCd_BD", "BD", null, TYPE_HANKAKUEISU, "3", null},
	{"contrVrsnEffFromDt_BD", "contrVrsnEffFromDt_BD", "BD", null, TYPE_NENTSUKIHI, "8", null},
	{"contrVrsnEffThruDt_BD", "contrVrsnEffThruDt_BD", "BD", null, TYPE_NENTSUKIHI, "8", null},
	{"contrCloDt_BD", "contrCloDt_BD", "BD", null, TYPE_NENTSUKIHI, "8", null},
	{"rnwEffFromDt_BD", "rnwEffFromDt_BD", "BD", null, TYPE_NENTSUKIHI, "8", null},
	{"xxDt10Dt_B1", "xxDt10Dt_B1", "B1", null, TYPE_NENTSUKIHI, "8", null},
	{"contrHldFlg_BD", "contrHldFlg_BD", "BD", null, TYPE_HANKAKUEISU, "1", null},
	{"contrHldFlg_BK", "contrHldFlg_BK", "BK", null, TYPE_HANKAKUEISU, "1", null},
	{"relFlg_BD", "relFlg_BD", "BD", null, TYPE_HANKAKUEISU, "1", null},
	{"xxDt10Dt_B2", "xxDt10Dt_B2", "B2", null, TYPE_NENTSUKIHI, "8", null},
	{"stsMemoTxt_B1", "stsMemoTxt_B1", "B1", null, TYPE_HANKAKUEISU, "1000", null},
	{"xxDt10Dt_B3", "xxDt10Dt_B3", "B3", null, TYPE_NENTSUKIHI, "8", null},
	{"stsMemoUpdFullPsnNm_BD", "stsMemoUpdFullPsnNm_BD", "BD", null, TYPE_HANKAKUEISU, "62", null},
	{"stsMemoTxt_B2", "stsMemoTxt_B2", "B2", null, TYPE_HANKAKUEISU, "1000", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"DS_CONTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrPk_BD
        {"DS_CONTR_DTL_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrDtlPk_BD
        {"DS_CONTR_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrNum_BD
        {"SVC_CONTR_REF_CMNT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcContrRefCmntTxt_BD
        {"CCY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ccyCd_BD
        {"CONTR_VRSN_EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrVrsnEffFromDt_BD
        {"CONTR_VRSN_EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrVrsnEffThruDt_BD
        {"CONTR_CLO_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrCloDt_BD
        {"RNW_EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rnwEffFromDt_BD
        {"XX_DT_10_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDt10Dt_B1
        {"CONTR_HLD_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrHldFlg_BD
        {"CONTR_HLD_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrHldFlg_BK
        {"REL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//relFlg_BD
        {"XX_DT_10_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDt10Dt_B2
        {"STS_MEMO_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//stsMemoTxt_B1
        {"XX_DT_10_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDt10Dt_B3
        {"STS_MEMO_UPD_FULL_PSN_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//stsMemoUpdFullPsnNm_BD
        {"STS_MEMO_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//stsMemoTxt_B2
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

