//This file was automatically generated by Common Business Component Interface Definition Document and XLA200710010.
// Generated on    :20190830084322000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :CommonBusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSZC070001_xxChargeableListPMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.parts;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSZC070001 Common Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSZC070001_xxChargeableListPMsg extends EZDPMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** FSR_CHRG_DTL_PK*/
	public final EZDPBigDecimalItem              fsrChrgDtlPk;

    /** FSR_NUM*/
	public final EZDPStringItem              fsrNum;

    /** FSR_VISIT_NUM*/
	public final EZDPStringItem              fsrVisitNum;

    /** SVC_TASK_NUM*/
	public final EZDPStringItem              svcTaskNum;

    /** SVC_CHRG_TRX_TP_CD*/
	public final EZDPStringItem              svcChrgTrxTpCd;

    /** MDSE_CD*/
	public final EZDPStringItem              mdseCd;

    /** SVC_CHRG_QTY*/
	public final EZDPBigDecimalItem              svcChrgQty;

    /** UOM_CD*/
	public final EZDPStringItem              uomCd;

    /** SVC_CHRG_UNIT_AOT*/
	public final EZDPBigDecimalItem              svcChrgUnitAot;

    /** SVC_CHRG_UNIT_AMT*/
	public final EZDPBigDecimalItem              svcChrgUnitAmt;

    /** SVC_CHRG_DEAL_AMT*/
	public final EZDPBigDecimalItem              svcChrgDealAmt;

    /** SVC_CHRG_DISC_RATE*/
	public final EZDPBigDecimalItem              svcChrgDiscRate;

    /** SVC_CHRG_DEAL_DISC_AMT*/
	public final EZDPBigDecimalItem              svcChrgDealDiscAmt;

    /** SVC_CHRG_FLG*/
	public final EZDPStringItem              svcChrgFlg;

    /** OVRD_SVC_CHRG_UNIT_AMT*/
	public final EZDPBigDecimalItem              ovrdSvcChrgUnitAmt;

    /** OVRD_CHNG_RSN_CD*/
	public final EZDPStringItem              ovrdChngRsnCd;

    /** OVRD_CHNG_USR_ID*/
	public final EZDPStringItem              ovrdChngUsrId;

    /** PRC_CATG_CD*/
	public final EZDPStringItem              prcCatgCd;

    /** SVC_INV_CHRG_TP_CD*/
	public final EZDPStringItem              svcInvChrgTpCd;


	/**
	 * NSZC070001_xxChargeableListPMsg is constructor.
	 * The initialization when the instance of NSZC070001_xxChargeableListPMsg is generated.
	 */
	public NSZC070001_xxChargeableListPMsg() {
		this(false, -1);
	}

	/**
	 * NSZC070001_xxChargeableListPMsg is constructor.
	 * The initialization when the instance of NSZC070001_xxChargeableListPMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSZC070001_xxChargeableListPMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		fsrChrgDtlPk = (EZDPBigDecimalItem)newItem("fsrChrgDtlPk");
		fsrNum = (EZDPStringItem)newItem("fsrNum");
		fsrVisitNum = (EZDPStringItem)newItem("fsrVisitNum");
		svcTaskNum = (EZDPStringItem)newItem("svcTaskNum");
		svcChrgTrxTpCd = (EZDPStringItem)newItem("svcChrgTrxTpCd");
		mdseCd = (EZDPStringItem)newItem("mdseCd");
		svcChrgQty = (EZDPBigDecimalItem)newItem("svcChrgQty");
		uomCd = (EZDPStringItem)newItem("uomCd");
		svcChrgUnitAot = (EZDPBigDecimalItem)newItem("svcChrgUnitAot");
		svcChrgUnitAmt = (EZDPBigDecimalItem)newItem("svcChrgUnitAmt");
		svcChrgDealAmt = (EZDPBigDecimalItem)newItem("svcChrgDealAmt");
		svcChrgDiscRate = (EZDPBigDecimalItem)newItem("svcChrgDiscRate");
		svcChrgDealDiscAmt = (EZDPBigDecimalItem)newItem("svcChrgDealDiscAmt");
		svcChrgFlg = (EZDPStringItem)newItem("svcChrgFlg");
		ovrdSvcChrgUnitAmt = (EZDPBigDecimalItem)newItem("ovrdSvcChrgUnitAmt");
		ovrdChngRsnCd = (EZDPStringItem)newItem("ovrdChngRsnCd");
		ovrdChngUsrId = (EZDPStringItem)newItem("ovrdChngUsrId");
		prcCatgCd = (EZDPStringItem)newItem("prcCatgCd");
		svcInvChrgTpCd = (EZDPStringItem)newItem("svcInvChrgTpCd");
	}

	/**
	 * get the type of array which is stored
	 * @return NSZC070001_xxChargeableListPMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSZC070001_xxChargeableListPMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"fsrChrgDtlPk", "fsrChrgDtlPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"fsrNum", "fsrNum", null, null, TYPE_HANKAKUEISU, "10", null},
	{"fsrVisitNum", "fsrVisitNum", null, null, TYPE_HANKAKUEISU, "10", null},
	{"svcTaskNum", "svcTaskNum", null, null, TYPE_HANKAKUEISU, "10", null},
	{"svcChrgTrxTpCd", "svcChrgTrxTpCd", null, null, TYPE_HANKAKUEISU, "1", null},
	{"mdseCd", "mdseCd", null, null, TYPE_HANKAKUEISU, "16", null},
	{"svcChrgQty", "svcChrgQty", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"uomCd", "uomCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"svcChrgUnitAot", "svcChrgUnitAot", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"svcChrgUnitAmt", "svcChrgUnitAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"svcChrgDealAmt", "svcChrgDealAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"svcChrgDiscRate", "svcChrgDiscRate", null, null, TYPE_SEISU_SYOSU, "9", "5"},
	{"svcChrgDealDiscAmt", "svcChrgDealDiscAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"svcChrgFlg", "svcChrgFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"ovrdSvcChrgUnitAmt", "ovrdSvcChrgUnitAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"ovrdChngRsnCd", "ovrdChngRsnCd", null, null, TYPE_HANKAKUEISU, "3", null},
	{"ovrdChngUsrId", "ovrdChngUsrId", null, null, TYPE_HANKAKUEISU, "16", null},
	{"prcCatgCd", "prcCatgCd", null, null, TYPE_HANKAKUEISU, "10", null},
	{"svcInvChrgTpCd", "svcInvChrgTpCd", null, null, TYPE_HANKAKUEISU, "6", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"FSR_CHRG_DTL_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//fsrChrgDtlPk
        {"FSR_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//fsrNum
        {"FSR_VISIT_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//fsrVisitNum
        {"SVC_TASK_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTaskNum
        {"SVC_CHRG_TRX_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcChrgTrxTpCd
        {"MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd
        {"SVC_CHRG_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcChrgQty
        {"UOM_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//uomCd
        {"SVC_CHRG_UNIT_AOT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcChrgUnitAot
        {"SVC_CHRG_UNIT_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcChrgUnitAmt
        {"SVC_CHRG_DEAL_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcChrgDealAmt
        {"SVC_CHRG_DISC_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcChrgDiscRate
        {"SVC_CHRG_DEAL_DISC_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcChrgDealDiscAmt
        {"SVC_CHRG_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcChrgFlg
        {"OVRD_SVC_CHRG_UNIT_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ovrdSvcChrgUnitAmt
        {"OVRD_CHNG_RSN_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ovrdChngRsnCd
        {"OVRD_CHNG_USR_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ovrdChngUsrId
        {"PRC_CATG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCatgCd
        {"SVC_INV_CHRG_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcInvChrgTpCd
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

