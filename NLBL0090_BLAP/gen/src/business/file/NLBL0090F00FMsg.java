//This file was automatically generated by Text File Layout Definition Document and XLA200710010.
// Generated on    :20160407215101000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :TextFileLayoutDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NLBL0090F00FMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.file;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NLBL0090F00 File Layout Message class.
 * @author
 * @version XLA200710010
 */
public class NLBL0090F00FMsg extends EZDFMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** BOL_NUM*/
	public final EZDFStringItem              bolNum;

    /** PRO_NUM*/
	public final EZDFStringItem              proNum;

    /** LOC_NM*/
	public final EZDFStringItem              locNm;

    /** WH_CD*/
	public final EZDFStringItem              whCd;

    /** SELL_TO_CUST_CD*/
	public final EZDFStringItem              sellToCustCd;

    /** SHIP_TO_CUST_CD*/
	public final EZDFStringItem              shipToCustCd;

    /** SO_NUM*/
	public final EZDFStringItem              soNum;

    /** XX_DT_TXT*/
	public final EZDFStringItem              xxDtTxt;

    /** POD_STS_CD*/
	public final EZDFStringItem              podStsCd;

    /** POD_STS_NM*/
	public final EZDFStringItem              podStsNm;

    /** POD_STS_RSN_CD*/
	public final EZDFStringItem              podStsRsnCd;

    /** POD_STS_RSN_NM*/
	public final EZDFStringItem              podStsRsnNm;

    /** SO_SLP_NUM*/
	public final EZDFStringItem              soSlpNum;

    /** MDSE_CD*/
	public final EZDFStringItem              mdseCd;

    /** MDSE_DESC_SHORT_TXT*/
	public final EZDFStringItem              mdseDescShortTxt;

    /** STK_STS_CD*/
	public final EZDFStringItem              stkStsCd;

    /** ORD_QTY*/
	public final EZDFBigDecimalItem              ordQty;

    /** TRX_HDR_NUM*/
	public final EZDFStringItem              trxHdrNum;

    /** SCE_ORD_TP_CD*/
	public final EZDFStringItem              sceOrdTpCd;

    /** SCE_ORD_TP_NM*/
	public final EZDFStringItem              sceOrdTpNm;


	/**
	 * NLBL0090F00FMsg is constructor.
	 * The initialization when the instance of NLBL0090F00FMsg is generated.
	 */
	public NLBL0090F00FMsg() {
		this(false, -1);
	}

	/**
	 * NLBL0090F00FMsg is constructor.
	 * The initialization when the instance of NLBL0090F00FMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NLBL0090F00FMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		bolNum = (EZDFStringItem)newItem("bolNum");
		proNum = (EZDFStringItem)newItem("proNum");
		locNm = (EZDFStringItem)newItem("locNm");
		whCd = (EZDFStringItem)newItem("whCd");
		sellToCustCd = (EZDFStringItem)newItem("sellToCustCd");
		shipToCustCd = (EZDFStringItem)newItem("shipToCustCd");
		soNum = (EZDFStringItem)newItem("soNum");
		xxDtTxt = (EZDFStringItem)newItem("xxDtTxt");
		podStsCd = (EZDFStringItem)newItem("podStsCd");
		podStsNm = (EZDFStringItem)newItem("podStsNm");
		podStsRsnCd = (EZDFStringItem)newItem("podStsRsnCd");
		podStsRsnNm = (EZDFStringItem)newItem("podStsRsnNm");
		soSlpNum = (EZDFStringItem)newItem("soSlpNum");
		mdseCd = (EZDFStringItem)newItem("mdseCd");
		mdseDescShortTxt = (EZDFStringItem)newItem("mdseDescShortTxt");
		stkStsCd = (EZDFStringItem)newItem("stkStsCd");
		ordQty = (EZDFBigDecimalItem)newItem("ordQty");
		trxHdrNum = (EZDFStringItem)newItem("trxHdrNum");
		sceOrdTpCd = (EZDFStringItem)newItem("sceOrdTpCd");
		sceOrdTpNm = (EZDFStringItem)newItem("sceOrdTpNm");
	}

	/**
	 * get the type of array which is stored
	 * @return NLBL0090F00FMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NLBL0090F00FMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"bolNum", "bolNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"proNum", "proNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"locNm", "locNm", null, null, TYPE_HANKAKUEISU, "60", null},
	{"whCd", "whCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"sellToCustCd", "sellToCustCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"shipToCustCd", "shipToCustCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"soNum", "soNum", null, null, TYPE_HANKAKUEISU, "8", null},
	{"xxDtTxt", "xxDtTxt", null, null, TYPE_HANKAKUEISU, "10", null},
	{"podStsCd", "podStsCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"podStsNm", "podStsNm", null, null, TYPE_HANKAKUEISU, "70", null},
	{"podStsRsnCd", "podStsRsnCd", null, null, TYPE_HANKAKUEISU, "3", null},
	{"podStsRsnNm", "podStsRsnNm", null, null, TYPE_HANKAKUEISU, "70", null},
	{"soSlpNum", "soSlpNum", null, null, TYPE_HANKAKUEISU, "3", null},
	{"mdseCd", "mdseCd", null, null, TYPE_HANKAKUEISU, "16", null},
	{"mdseDescShortTxt", "mdseDescShortTxt", null, null, TYPE_HANKAKUEISU, "250", null},
	{"stkStsCd", "stkStsCd", null, null, TYPE_HANKAKUEISU, "1", null},
	{"ordQty", "ordQty", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"trxHdrNum", "trxHdrNum", null, null, TYPE_HANKAKUEISU, "8", null},
	{"sceOrdTpCd", "sceOrdTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"sceOrdTpNm", "sceOrdTpNm", null, null, TYPE_HANKAKUEISU, "30", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"BOL_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bolNum
        {"PRO_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//proNum
        {"LOC_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//locNm
        {"WH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//whCd
        {"SELL_TO_CUST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//sellToCustCd
        {"SHIP_TO_CUST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToCustCd
        {"SO_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//soNum
        {"XX_DT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDtTxt
        {"POD_STS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//podStsCd
        {"POD_STS_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//podStsNm
        {"POD_STS_RSN_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//podStsRsnCd
        {"POD_STS_RSN_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//podStsRsnNm
        {"SO_SLP_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//soSlpNum
        {"MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd
        {"MDSE_DESC_SHORT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseDescShortTxt
        {"STK_STS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//stkStsCd
        {"ORD_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordQty
        {"TRX_HDR_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trxHdrNum
        {"SCE_ORD_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//sceOrdTpCd
        {"SCE_ORD_TP_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//sceOrdTpNm
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

