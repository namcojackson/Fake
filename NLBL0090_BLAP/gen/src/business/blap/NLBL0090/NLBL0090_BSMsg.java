//This file was automatically generated by Business Component Interface Definition Document (Define Business Application Global Area) and XLA200710010.
// Generated on    :20160407214450000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NLBL0090_BSMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NLBL0090;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NLBL0090 Business Application Global Area Message class.
 * @author
 * @version XLA200710010
 */
public class NLBL0090_BSMsg extends EZDSMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** SO_NUM_B1*/
	public final EZDSStringItem              soNum_B1;

    /** SO_SLP_NUM_B1*/
	public final EZDSStringItem              soSlpNum_B1;

    /** MDSE_CD_B1*/
	public final EZDSStringItem              mdseCd_B1;

    /** MDSE_DESC_SHORT_TXT_B1*/
	public final EZDSStringItem              mdseDescShortTxt_B1;

    /** FROM_STK_STS_CD_B1*/
	public final EZDSStringItem              fromStkStsCd_B1;

    /** SHPG_QTY_B1*/
	public final EZDSBigDecimalItem              shpgQty_B1;

    /** TRX_HDR_NUM_B1*/
	public final EZDSStringItem              trxHdrNum_B1;

    /** SCE_ORD_TP_CD_B1*/
	public final EZDSStringItem              sceOrdTpCd_B1;

    /** SCE_ORD_TP_NM_B1*/
	public final EZDSStringItem              sceOrdTpNm_B1;


	/**
	 * NLBL0090_BSMsg is constructor.
	 * The initialization when the instance of NLBL0090_BSMsg is generated.
	 */
	public NLBL0090_BSMsg() {
		this(false, -1);
	}

	/**
	 * NLBL0090_BSMsg is constructor.
	 * The initialization when the instance of NLBL0090_BSMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NLBL0090_BSMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		soNum_B1 = (EZDSStringItem)newItem("soNum_B1");
		soSlpNum_B1 = (EZDSStringItem)newItem("soSlpNum_B1");
		mdseCd_B1 = (EZDSStringItem)newItem("mdseCd_B1");
		mdseDescShortTxt_B1 = (EZDSStringItem)newItem("mdseDescShortTxt_B1");
		fromStkStsCd_B1 = (EZDSStringItem)newItem("fromStkStsCd_B1");
		shpgQty_B1 = (EZDSBigDecimalItem)newItem("shpgQty_B1");
		trxHdrNum_B1 = (EZDSStringItem)newItem("trxHdrNum_B1");
		sceOrdTpCd_B1 = (EZDSStringItem)newItem("sceOrdTpCd_B1");
		sceOrdTpNm_B1 = (EZDSStringItem)newItem("sceOrdTpNm_B1");
	}

	/**
	 * get the type of array which is stored
	 * @return NLBL0090_BSMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NLBL0090_BSMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"soNum_B1", "soNum_B1", "B1", null, TYPE_HANKAKUEISU, "8", null},
	{"soSlpNum_B1", "soSlpNum_B1", "B1", null, TYPE_HANKAKUEISU, "3", null},
	{"mdseCd_B1", "mdseCd_B1", "B1", null, TYPE_HANKAKUEISU, "16", null},
	{"mdseDescShortTxt_B1", "mdseDescShortTxt_B1", "B1", null, TYPE_HANKAKUEISU, "250", null},
	{"fromStkStsCd_B1", "fromStkStsCd_B1", "B1", null, TYPE_HANKAKUEISU, "1", null},
	{"shpgQty_B1", "shpgQty_B1", "B1", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"trxHdrNum_B1", "trxHdrNum_B1", "B1", null, TYPE_HANKAKUEISU, "8", null},
	{"sceOrdTpCd_B1", "sceOrdTpCd_B1", "B1", null, TYPE_HANKAKUEISU, "2", null},
	{"sceOrdTpNm_B1", "sceOrdTpNm_B1", "B1", null, TYPE_HANKAKUEISU, "30", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"SO_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//soNum_B1
        {"SO_SLP_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//soSlpNum_B1
        {"MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd_B1
        {"MDSE_DESC_SHORT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseDescShortTxt_B1
        {"FROM_STK_STS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//fromStkStsCd_B1
        {"SHPG_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shpgQty_B1
        {"TRX_HDR_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trxHdrNum_B1
        {"SCE_ORD_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//sceOrdTpCd_B1
        {"SCE_ORD_TP_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//sceOrdTpNm_B1
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

