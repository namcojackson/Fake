//This file was automatically generated by Business Component Interface Definition Document (Define Business Application Global Area) and XLA200710010.
// Generated on    :20231027190159000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NLBL3060_ASMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NLBL3060;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NLBL3060 Business Application Global Area Message class.
 * @author
 * @version XLA200710010
 */
public class NLBL3060_ASMsg extends EZDSMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** GLBL_CMPY_CD_A1*/
	public final EZDSStringItem              glblCmpyCd_A1;

    /** XX_CHK_BOX_A1*/
	public final EZDSStringItem              xxChkBox_A1;

    /** RTL_WH_CD_A1*/
	public final EZDSStringItem              rtlWhCd_A1;

    /** RTL_WH_NM_A1*/
	public final EZDSStringItem              rtlWhNm_A1;

    /** SCHD_COORD_PSN_CD_A1*/
	public final EZDSStringItem              schdCoordPsnCd_A1;

    /** FULL_PSN_NM_A1*/
	public final EZDSStringItem              fullPsnNm_A1;

    /** EFF_FROM_DT_A1*/
	public final EZDSDateItem              effFromDt_A1;

    /** EFF_THRU_DT_A1*/
	public final EZDSDateItem              effThruDt_A1;

    /** EFF_THRU_DT_A2*/
	public final EZDSDateItem              effThruDt_A2;

    /** _EZUpdateDateTime_A1*/
	public final EZDSStringItem              ezUpTime_A1;

    /** _EZUpTimeZone_A1*/
	public final EZDSStringItem              ezUpTimeZone_A1;

    /** RTL_WH_CATG_CD_A1*/
	public final EZDSStringItem              rtlWhCatgCd_A1;

    /** PHYS_WH_CD_A1*/
	public final EZDSStringItem              physWhCd_A1;

    /** SCHD_COORD_WH_PMSN_PK_A1*/
	public final EZDSBigDecimalItem              schdCoordWhPmsnPk_A1;


	/**
	 * NLBL3060_ASMsg is constructor.
	 * The initialization when the instance of NLBL3060_ASMsg is generated.
	 */
	public NLBL3060_ASMsg() {
		this(false, -1);
	}

	/**
	 * NLBL3060_ASMsg is constructor.
	 * The initialization when the instance of NLBL3060_ASMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NLBL3060_ASMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		glblCmpyCd_A1 = (EZDSStringItem)newItem("glblCmpyCd_A1");
		xxChkBox_A1 = (EZDSStringItem)newItem("xxChkBox_A1");
		rtlWhCd_A1 = (EZDSStringItem)newItem("rtlWhCd_A1");
		rtlWhNm_A1 = (EZDSStringItem)newItem("rtlWhNm_A1");
		schdCoordPsnCd_A1 = (EZDSStringItem)newItem("schdCoordPsnCd_A1");
		fullPsnNm_A1 = (EZDSStringItem)newItem("fullPsnNm_A1");
		effFromDt_A1 = (EZDSDateItem)newItem("effFromDt_A1");
		effThruDt_A1 = (EZDSDateItem)newItem("effThruDt_A1");
		effThruDt_A2 = (EZDSDateItem)newItem("effThruDt_A2");
		ezUpTime_A1 = (EZDSStringItem)newItem("ezUpTime_A1");
		ezUpTimeZone_A1 = (EZDSStringItem)newItem("ezUpTimeZone_A1");
		rtlWhCatgCd_A1 = (EZDSStringItem)newItem("rtlWhCatgCd_A1");
		physWhCd_A1 = (EZDSStringItem)newItem("physWhCd_A1");
		schdCoordWhPmsnPk_A1 = (EZDSBigDecimalItem)newItem("schdCoordWhPmsnPk_A1");
	}

	/**
	 * get the type of array which is stored
	 * @return NLBL3060_ASMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NLBL3060_ASMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"glblCmpyCd_A1", "glblCmpyCd_A1", "A1", null, TYPE_HANKAKUEISU, "4", null},
	{"xxChkBox_A1", "xxChkBox_A1", "A1", null, TYPE_HANKAKUEIJI, "1", null},
	{"rtlWhCd_A1", "rtlWhCd_A1", "A1", null, TYPE_HANKAKUEISU, "20", null},
	{"rtlWhNm_A1", "rtlWhNm_A1", "A1", null, TYPE_HANKAKUEISU, "30", null},
	{"schdCoordPsnCd_A1", "schdCoordPsnCd_A1", "A1", null, TYPE_HANKAKUEISU, "8", null},
	{"fullPsnNm_A1", "fullPsnNm_A1", "A1", null, TYPE_HANKAKUEISU, "62", null},
	{"effFromDt_A1", "effFromDt_A1", "A1", null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt_A1", "effThruDt_A1", "A1", null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt_A2", "effThruDt_A2", "A2", null, TYPE_NENTSUKIHI, "8", null},
	{"ezUpTime_A1", "ezUpTime_A1", "A1", null, TYPE_HANKAKUEISU, "17", null},
	{"ezUpTimeZone_A1", "ezUpTimeZone_A1", "A1", null, TYPE_HANKAKUEISU, "5", null},
	{"rtlWhCatgCd_A1", "rtlWhCatgCd_A1", "A1", null, TYPE_HANKAKUEISU, "2", null},
	{"physWhCd_A1", "physWhCd_A1", "A1", null, TYPE_HANKAKUEISU, "20", null},
	{"schdCoordWhPmsnPk_A1", "schdCoordWhPmsnPk_A1", "A1", null, TYPE_SEISU_SYOSU, "28", "0"},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"GLBL_CMPY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//glblCmpyCd_A1
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_A1
        {"RTL_WH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlWhCd_A1
        {"RTL_WH_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlWhNm_A1
        {"SCHD_COORD_PSN_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//schdCoordPsnCd_A1
        {"FULL_PSN_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//fullPsnNm_A1
        {"EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effFromDt_A1
        {"EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effThruDt_A1
        {"EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effThruDt_A2
        {"_EZUpdateDateTime",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTime_A1
        {"_EZUpTimeZone",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTimeZone_A1
        {"RTL_WH_CATG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlWhCatgCd_A1
        {"PHYS_WH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//physWhCd_A1
        {"SCHD_COORD_WH_PMSN_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//schdCoordWhPmsnPk_A1
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

