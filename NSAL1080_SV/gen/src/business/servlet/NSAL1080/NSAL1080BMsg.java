//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20160122113358000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL1080BMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NSAL1080;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL1080 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL1080BMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** GLBL_CMPY_CD*/
	public final EZDBStringItem              glblCmpyCd;

    /** CUST_INCDT_ID*/
	public final EZDBStringItem              custIncdtId;

    /** SVC_CR_REBIL_STS_DESC_TXT*/
	public final EZDBStringItem              svcCrRebilStsDescTxt;

    /** SVC_CR_REBIL_DESC_TXT*/
	public final EZDBStringItem              svcCrRebilDescTxt;

    /** SVC_CR_REBIL_PK*/
	public final EZDBBigDecimalItem              svcCrRebilPk;

    /** SVC_INV_NUM*/
	public final EZDBStringItem              svcInvNum;

    /** DS_CONTR_NUM*/
	public final EZDBStringItem              dsContrNum;

    /** CONSL_BILL_PK*/
	public final EZDBBigDecimalItem              conslBillPk;

    /** SER_NUM*/
	public final EZDBStringItem              serNum;

    /** BLLG_PER_FROM_DT*/
	public final EZDBDateItem              bllgPerFromDt;

    /** BLLG_PER_TO_DT*/
	public final EZDBDateItem              bllgPerToDt;

    /** CUST_INCDT_ID_P0*/
	public final EZDBStringItem              custIncdtId_P0;

    /** XX_MODE_CD_P1*/
	public final EZDBStringItem              xxModeCd_P1;

    /** SVC_CR_REBIL_PK_P1*/
	public final EZDBBigDecimalItem              svcCrRebilPk_P1;

    /** SVC_CR_REBIL_PROC_CD_P1*/
	public final EZDBStringItem              svcCrRebilProcCd_P1;

    /** P*/
	public final business.servlet.NSAL1080.NSAL1080_PBMsgArray              P;

    /** SVC_INV_NUM_P2*/
	public final EZDBStringItem              svcInvNum_P2;

    /** DS_CONTR_NUM_P2*/
	public final EZDBStringItem              dsContrNum_P2;

    /** CONSL_BILL_PK_P2*/
	public final EZDBBigDecimalItem              conslBillPk_P2;

    /** SER_NUM_P2*/
	public final EZDBStringItem              serNum_P2;

    /** BLLG_PER_FROM_DT_P2*/
	public final EZDBDateItem              bllgPerFromDt_P2;

    /** BLLG_PER_TO_DT_P2*/
	public final EZDBDateItem              bllgPerToDt_P2;

    /** SVC_CR_REBIL_PK_P2*/
	public final EZDBBigDecimalItem              svcCrRebilPk_P2;


	/**
	 * NSAL1080BMsg is constructor.
	 * The initialization when the instance of NSAL1080BMsg is generated.
	 */
	public NSAL1080BMsg() {
		this(false, -1);
	}

	/**
	 * NSAL1080BMsg is constructor.
	 * The initialization when the instance of NSAL1080BMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL1080BMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		glblCmpyCd = (EZDBStringItem)newItem("glblCmpyCd");
		custIncdtId = (EZDBStringItem)newItem("custIncdtId");
		svcCrRebilStsDescTxt = (EZDBStringItem)newItem("svcCrRebilStsDescTxt");
		svcCrRebilDescTxt = (EZDBStringItem)newItem("svcCrRebilDescTxt");
		svcCrRebilPk = (EZDBBigDecimalItem)newItem("svcCrRebilPk");
		svcInvNum = (EZDBStringItem)newItem("svcInvNum");
		dsContrNum = (EZDBStringItem)newItem("dsContrNum");
		conslBillPk = (EZDBBigDecimalItem)newItem("conslBillPk");
		serNum = (EZDBStringItem)newItem("serNum");
		bllgPerFromDt = (EZDBDateItem)newItem("bllgPerFromDt");
		bllgPerToDt = (EZDBDateItem)newItem("bllgPerToDt");
		custIncdtId_P0 = (EZDBStringItem)newItem("custIncdtId_P0");
		xxModeCd_P1 = (EZDBStringItem)newItem("xxModeCd_P1");
		svcCrRebilPk_P1 = (EZDBBigDecimalItem)newItem("svcCrRebilPk_P1");
		svcCrRebilProcCd_P1 = (EZDBStringItem)newItem("svcCrRebilProcCd_P1");
		P = (business.servlet.NSAL1080.NSAL1080_PBMsgArray)newMsgArray("P");
		svcInvNum_P2 = (EZDBStringItem)newItem("svcInvNum_P2");
		dsContrNum_P2 = (EZDBStringItem)newItem("dsContrNum_P2");
		conslBillPk_P2 = (EZDBBigDecimalItem)newItem("conslBillPk_P2");
		serNum_P2 = (EZDBStringItem)newItem("serNum_P2");
		bllgPerFromDt_P2 = (EZDBDateItem)newItem("bllgPerFromDt_P2");
		bllgPerToDt_P2 = (EZDBDateItem)newItem("bllgPerToDt_P2");
		svcCrRebilPk_P2 = (EZDBBigDecimalItem)newItem("svcCrRebilPk_P2");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL1080BMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL1080BMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"glblCmpyCd", "glblCmpyCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"custIncdtId", "custIncdtId", null, null, TYPE_HANKAKUEISU, "30", null},
	{"svcCrRebilStsDescTxt", "svcCrRebilStsDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"svcCrRebilDescTxt", "svcCrRebilDescTxt", null, null, TYPE_HANKAKUEISU, "4000", null},
	{"svcCrRebilPk", "svcCrRebilPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"svcInvNum", "svcInvNum", null, null, TYPE_HANKAKUEISU, "13", null},
	{"dsContrNum", "dsContrNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"conslBillPk", "conslBillPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"serNum", "serNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"bllgPerFromDt", "bllgPerFromDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"bllgPerToDt", "bllgPerToDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"custIncdtId_P0", "custIncdtId_P0", "P0", null, TYPE_HANKAKUEISU, "30", null},
	{"xxModeCd_P1", "xxModeCd_P1", "P1", null, TYPE_HANKAKUEISU, "2", null},
	{"svcCrRebilPk_P1", "svcCrRebilPk_P1", "P1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"svcCrRebilProcCd_P1", "svcCrRebilProcCd_P1", "P1", null, TYPE_HANKAKUEISU, "2", null},
	{"P", "P", null, "1000", "business.servlet.NSAL1080.NSAL1080_PBMsgArray", null, null},
	
	{"svcInvNum_P2", "svcInvNum_P2", "P2", null, TYPE_HANKAKUEISU, "13", null},
	{"dsContrNum_P2", "dsContrNum_P2", "P2", null, TYPE_HANKAKUEISU, "30", null},
	{"conslBillPk_P2", "conslBillPk_P2", "P2", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"serNum_P2", "serNum_P2", "P2", null, TYPE_HANKAKUEISU, "30", null},
	{"bllgPerFromDt_P2", "bllgPerFromDt_P2", "P2", null, TYPE_NENTSUKIHI, "8", null},
	{"bllgPerToDt_P2", "bllgPerToDt_P2", "P2", null, TYPE_NENTSUKIHI, "8", null},
	{"svcCrRebilPk_P2", "svcCrRebilPk_P2", "P2", null, TYPE_SEISU_SYOSU, "28", "0"},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"GLBL_CMPY_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//glblCmpyCd
        {"CUST_INCDT_ID",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//custIncdtId
        {"SVC_CR_REBIL_STS_DESC_TXT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcCrRebilStsDescTxt
        {"SVC_CR_REBIL_DESC_TXT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcCrRebilDescTxt
        {"SVC_CR_REBIL_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcCrRebilPk
        {"SVC_INV_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcInvNum
        {"DS_CONTR_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrNum
        {"CONSL_BILL_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//conslBillPk
        {"SER_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNum
        {"BLLG_PER_FROM_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//bllgPerFromDt
        {"BLLG_PER_TO_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//bllgPerToDt
        {"CUST_INCDT_ID",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//custIncdtId_P0
        {"XX_MODE_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxModeCd_P1
        {"SVC_CR_REBIL_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcCrRebilPk_P1
        {"SVC_CR_REBIL_PROC_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcCrRebilProcCd_P1
		null,	//P
        {"SVC_INV_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcInvNum_P2
        {"DS_CONTR_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrNum_P2
        {"CONSL_BILL_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//conslBillPk_P2
        {"SER_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNum_P2
        {"BLLG_PER_FROM_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO,  NO},	//bllgPerFromDt_P2
        {"BLLG_PER_TO_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO,  NO},	//bllgPerToDt_P2
        {"SVC_CR_REBIL_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcCrRebilPk_P2
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

