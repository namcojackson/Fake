<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<sqlMap namespace="NLCL0250Query">

    <typeAlias alias="NLCL0250CMsg"       type="business.blap.NLCL0250.NLCL0250CMsg"/>
    <typeAlias alias="NLCL0250_ASMsg"     type="business.blap.NLCL0250.NLCL0250_ASMsg"/>
    <typeAlias alias="ORD_TAKE_MDSETMsg"  type="business.db.ORD_TAKE_MDSETMsg"/>

    <statement id="getSavedSearchOptionList" parameterClass="Map" resultClass="Map">
        SELECT
            SSO.SRCH_OPT_PK
           ,SSO.SRCH_OPT_NM
        FROM
            SAVE_SRCH_OPT SSO
        WHERE
            SSO.GLBL_CMPY_CD    = #glblCmpyCd#
        AND SSO.SRCH_OPT_APL_ID = #srchOptAplId#
        AND SSO.SRCH_OPT_USR_ID = #srchOptUsrId#
        AND SSO.EZCANCELFLAG    = '0'
        ORDER BY
            SSO.SRCH_OPT_NM
    </statement>

    <statement id="getRtlWhCatgList" parameterClass="Map" resultClass="Map">
        SELECT
            RTL_WH_CATG_CD
           ,RTL_WH_CATG_CD || ':' || RTL_WH_CATG_DESC_TXT AS RTL_WH_CATG_DESC_TXT
        FROM
            RTL_WH_CATG
        WHERE
            GLBL_CMPY_CD = #glblCmpyCd#
        AND EZCANCELFLAG = '0'
        ORDER BY
            RTL_WH_CATG_SORT_NUM
    </statement>

    <statement id="getCoaProjList" parameterClass="Map" resultClass="Map">
        SELECT
            COA_PROJ_CD
           ,COA_PROJ_CD || ':' || COA_PROJ_DESC_TXT AS COA_PROJ_DESC_TXT
        FROM
            COA_PROJ
        WHERE
            GLBL_CMPY_CD = #glblCmpyCd#
        AND EZCANCELFLAG = '0'
        ORDER BY
            COA_PROJ_SORT_NUM
    </statement>

    <statement id="getMdseItemTpList" parameterClass="Map" resultClass="Map">
        SELECT
            MDSE_ITEM_TP_CD
           ,MDSE_ITEM_TP_CD || ':' || MDSE_ITEM_TP_DESC_TXT AS MDSE_ITEM_TP_DESC_TXT
        FROM
            MDSE_ITEM_TP
        WHERE
            GLBL_CMPY_CD = #glblCmpyCd#
        AND EZCANCELFLAG = '0'
        ORDER BY
            MDSE_ITEM_TP_SORT_NUM
    </statement>

    <statement id="getLocStsList" parameterClass="Map" resultClass="Map">
        SELECT
            LS.LOC_STS_CD
           ,LS.LOC_STS_CD || ':' || LS.LOC_STS_DESC_TXT AS LOC_STS_DESC_TXT
        FROM
            LOC_STS       LS
           ,DS_COND_CONST DCC
        WHERE
            LS.GLBL_CMPY_CD          = #glblCmpyCd#
        AND LS.EZCANCELFLAG          = '0'
        AND DCC.GLBL_CMPY_CD         = LS.GLBL_CMPY_CD
        AND DCC.DS_COND_CONST_GRP_ID = #dsCondConstGrpId#
        AND DCC.DS_COND_CONST_CD     = LS.LOC_STS_CD
        AND DCC.EZCANCELFLAG         = '0'
        ORDER BY
            LS.LOC_STS_SORT_NUM
    </statement>

    <statement id="getAllLocStsList" parameterClass="Map" resultClass="Map">
        SELECT
            LOC_STS_CD
           ,LOC_STS_DESC_TXT
        FROM
            LOC_STS
        WHERE
            GLBL_CMPY_CD = #glblCmpyCd#
        AND EZCANCELFLAG = '0'
    </statement>

    <statement id="getOrdTakeMdseList" parameterClass="Map" resultMap="result.ORD_TAKE_MDSETMsg">
        SELECT
            ORD_TAKE_MDSE_CD
        FROM
            ORD_TAKE_MDSE
        WHERE
            GLBL_CMPY_CD  = #glblCmpyCd#
        <iterate property="itemList" var="itemList[]" open="AND ORD_TAKE_MDSE_CD IN (" conjunction= ", " close=")">
            #itemList[]#
        </iterate>
        AND EZCANCELFLAG  = '0'
    </statement>

    <resultMap id="result.ORD_TAKE_MDSETMsg" class="ORD_TAKE_MDSETMsg">
        <result property="ordTakeMdseCd"   column="ORD_TAKE_MDSE_CD"  javaType="EZDCStringItem"/>
    </resultMap>

    <statement id="getRtlWhList" parameterClass="Map" resultClass="Map">
        SELECT
            RTL_WH_CD
           ,RTL_WH_NM
        FROM
            RTL_WH
        WHERE
            GLBL_CMPY_CD = #glblCmpyCd#
        <isNotNull property="rtlWhCdList">
            <iterate property="rtlWhCdList" var="rtlWhCdList[]" open="AND (RTL_WH_CD LIKE " conjunction= "OR RTL_WH_CD LIKE " close=")">
                #rtlWhCdList[]#
            </iterate>
        </isNotNull>
        AND EZCANCELFLAG = '0'
        AND ROWNUM   &lt;= #rowNum#
    </statement>

    <statement id="getSwhList" parameterClass="Map" resultClass="Map">
        SELECT
            RTL_SWH_CD
           ,RTL_SWH_NM
        FROM
            SWH
        WHERE
            GLBL_CMPY_CD = #glblCmpyCd#
        <isNotNull property="swhCdList">
            <iterate property="swhCdList" var="swhCdList[]" open="AND (RTL_SWH_CD LIKE " conjunction= "OR RTL_SWH_CD LIKE " close=")">
                #swhCdList[]#
            </iterate>
        </isNotNull>
        AND EZCANCELFLAG = '0'
        AND ROWNUM  &lt;= #rowNum#
    </statement>

    <statement id="getShipToLocList" parameterClass="Map" resultClass="Map">
        SELECT DISTINCT
            SHIP_TO.SHIP_TO_CUST_CD
           ,SELL_TO.DS_ACCT_NM
        FROM 
            SHIP_TO_CUST SHIP_TO
           ,SELL_TO_CUST SELL_TO
        WHERE
            SHIP_TO.GLBL_CMPY_CD    = #glblCmpyCd#
        <isNotNull property="toLocCdList">
            <iterate property="toLocCdList" var="toLocCdList[]" open="AND (SHIP_TO.SHIP_TO_CUST_CD LIKE " conjunction= "OR SHIP_TO.SHIP_TO_CUST_CD LIKE " close=")">
                #toLocCdList[]#
            </iterate>
        </isNotNull>
        AND SHIP_TO.EZCANCELFLAG    = '0'
        AND SHIP_TO.GLBL_CMPY_CD    = SELL_TO.GLBL_CMPY_CD
        AND SHIP_TO.SELL_TO_CUST_CD = SELL_TO.SELL_TO_CUST_CD
        AND SELL_TO.EZCANCELFLAG    = '0'
        AND ROWNUM  &lt;= #rowNum#
    </statement>

    <statement id="getInvtyLocCnt" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(1)
        FROM
            RTL_WH  RW
           ,RTL_SWH RSW
        WHERE
            RW.GLBL_CMPY_CD  = #glblCmpyCd#
        <isNotNull property="whCdList">
            <iterate property="whCdList" var="whCdList[]" open="AND (RW.RTL_WH_CD LIKE " conjunction= "OR RW.RTL_WH_CD LIKE " close=")">
                #whCdList[]#
            </iterate>
        </isNotNull>
        AND RW.EZCANCELFLAG  = '0'
        AND RW.GLBL_CMPY_CD  = RSW.GLBL_CMPY_CD
        AND RW.RTL_WH_CD     = RSW.RTL_WH_CD
        <isNotNull property="swhCdList">
            <iterate property="swhCdList" var="swhCdList[]" open="AND (RSW.RTL_SWH_CD LIKE " conjunction= "OR RSW.RTL_SWH_CD LIKE " close=")">
                #swhCdList[]#
            </iterate>
        </isNotNull>
        AND RSW.EZCANCELFLAG = '0'
    </statement>

    <statement id="searchSmry" parameterClass="Map">
        SELECT 
            ROW_NUM
           ,MDSE_CD
           ,MDSE_DESC_SHORT_TXT
           ,RTL_WH_CATG_DESC_TXT
           ,RTL_WH_NM
           ,RTL_SWH_CD
           <!-- START 2017/12/18 S.Katsuma [QC#21834,ADD] -->
           ,ROP_QTY
           ,MAX_INVTY_QTY
           <!-- END 2017/12/18 S.Katsuma [QC#21834,ADD] -->
           ,INVTY_QTY
           ,INVTY_AVAL_QTY
           ,STK_STS_DESC_TXT
           ,LOC_STS_DESC_TXT
           ,RTL_WH_CD
           ,COA_PROJ_LONG_DESC_TXT
           ,MDSE_ITEM_TP_LONG_DESC_TXT
           ,ZEROTH_PROD_CTRL_DESC_TXT
           ,FIRST_PROD_CTRL_DESC_TXT
           ,SCD_PROD_CTRL_DESC_TXT
           ,THIRD_PROD_CTRL_DESC_TXT
           ,FRTH_PROD_CTRL_DESC_TXT
        FROM
            (
            SELECT
                MD.MDSE_CD
               ,MD.MDSE_DESC_SHORT_TXT
               ,RWC.RTL_WH_CATG_DESC_TXT
               ,DILV.RTL_WH_NM
               ,DILV.RTL_SWH_CD
               ,NVL((
                        SELECT /*+ INDEX(MI MRP_INFO_I7) */
                           MI.ROP_QTY
                        FROM
                           MRP_INFO MI
                        WHERE
                            IVT.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
                        AND IVT.INVTY_LOC_CD        = MI.INVTY_LOC_CD
                        AND IVT.MDSE_CD             = MI.MDSE_CD
                        AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
                        AND MI.EZCANCELFLAG         = '0'
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                        AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
                    ),
                    (
                        SELECT /*+ INDEX(MI MRP_INFO_I7) */
                            MI.ROP_QTY
                        FROM
                            MRP_INFO MI
                        WHERE
                            IVT.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
                        AND IVT.INVTY_LOC_CD        = MI.INVTY_LOC_CD
                        AND SUBSTR(IVT.MDSE_CD, 0, 8) = MI.MDSE_CD
                        AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
                        AND MI.EZCANCELFLAG         = '0'
                        AND EXISTS(
                                SELECT
                                    1
                                FROM
                                    ORD_TAKE_MDSE OTM
                                WHERE
                                    MI.GLBL_CMPY_CD  = OTM.GLBL_CMPY_CD
                                AND MI.MDSE_CD = OTM.ORD_TAKE_MDSE_CD
                                AND OTM.EZCANCELFLAG = '0'
                        )
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                        AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
                    )
                ) ROP_QTY
                ,NVL((
                        SELECT /*+ INDEX(MI MRP_INFO_I7) */
                           MI.MAX_INVTY_QTY
                        FROM
                           MRP_INFO MI
                        WHERE
                            IVT.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
                        AND IVT.INVTY_LOC_CD        = MI.INVTY_LOC_CD
                        AND IVT.MDSE_CD             = MI.MDSE_CD
                        AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
                        AND MI.EZCANCELFLAG         = '0'
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                        AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
                    ),
                    (
                        SELECT /*+ INDEX(MI MRP_INFO_I7) */
                            MI.MAX_INVTY_QTY
                        FROM
                            MRP_INFO MI
                        WHERE
                            IVT.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
                        AND IVT.INVTY_LOC_CD        = MI.INVTY_LOC_CD
                        AND SUBSTR(IVT.MDSE_CD, 0, 8) = MI.MDSE_CD
                        AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
                        AND MI.EZCANCELFLAG         = '0'
                        AND EXISTS(
                                SELECT
                                    1
                                FROM
                                    ORD_TAKE_MDSE OTM
                                WHERE
                                    MI.GLBL_CMPY_CD  = OTM.GLBL_CMPY_CD
                                AND MI.MDSE_CD = OTM.ORD_TAKE_MDSE_CD
                                AND OTM.EZCANCELFLAG = '0'
                        )
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                        AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
                    )
                ) MAX_INVTY_QTY
               ,IVT.INVTY_QTY
               ,IVT.INVTY_AVAL_QTY
               ,SS.STK_STS_CD || ':' || SS.STK_STS_DESC_TXT AS STK_STS_DESC_TXT
               ,LS.LOC_STS_CD || ':' || LS.LOC_STS_DESC_TXT AS LOC_STS_DESC_TXT
               ,DILV.RTL_WH_CD
               ,DECODE(CP.COA_PROJ_CD,         NULL, CP.COA_PROJ_CD,         CP.COA_PROJ_CD         || ':' || CP.COA_PROJ_DESC_TXT)      AS COA_PROJ_LONG_DESC_TXT
               ,DECODE(MIT.MDSE_ITEM_TP_CD,    NULL, MIT.MDSE_ITEM_TP_CD,    MIT.MDSE_ITEM_TP_CD    || ':' || MIT.MDSE_ITEM_TP_DESC_TXT) AS MDSE_ITEM_TP_LONG_DESC_TXT
               ,DECODE(MD.ZEROTH_PROD_CTRL_CD, NULL, MD.ZEROTH_PROD_CTRL_CD, MD.ZEROTH_PROD_CTRL_CD || ':' || MD.ZEROTH_PROD_CTRL_NM)    AS ZEROTH_PROD_CTRL_DESC_TXT
               ,DECODE(MD.FIRST_PROD_CTRL_CD,  NULL, MD.FIRST_PROD_CTRL_CD,  MD.FIRST_PROD_CTRL_CD  || ':' || MD.FIRST_PROD_CTRL_NM)     AS FIRST_PROD_CTRL_DESC_TXT
               ,DECODE(MD.SCD_PROD_CTRL_CD,    NULL, MD.SCD_PROD_CTRL_CD,    MD.SCD_PROD_CTRL_CD    || ':' || MD.SCD_PROD_CTRL_NM)       AS SCD_PROD_CTRL_DESC_TXT
               ,DECODE(MD.THIRD_PROD_CTRL_CD,  NULL, MD.THIRD_PROD_CTRL_CD,  MD.THIRD_PROD_CTRL_CD  || ':' || MD.THIRD_PROD_CTRL_NM)     AS THIRD_PROD_CTRL_DESC_TXT
               ,DECODE(MD.FRTH_PROD_CTRL_CD,   NULL, MD.FRTH_PROD_CTRL_CD,   MD.FRTH_PROD_CTRL_CD   || ':' || MD.FRTH_PROD_CTRL_NM)      AS FRTH_PROD_CTRL_DESC_TXT
               ,ROW_NUMBER() OVER (PARTITION BY IVT.GLBL_CMPY_CD ORDER BY IVT.MDSE_CD, DILV.RTL_WH_CD ,DILV.RTL_SWH_CD ,IVT.LOC_STS_CD ,IVT.STK_STS_CD) AS ROW_NUM
            FROM
                DS_INVTY_LOC_V DILV
               ,RTL_WH_CATG    RWC
               ,INVTY          IVT
               ,LOC_STS        LS
               ,STK_STS        SS
               ,MDSE           MD
               ,COA_PROJ       CP
               ,MDSE_ITEM_TP   MIT
               <!-- START 2023/03/07 S.Dong [QC#61205, ADD] -->
               ,RTL_WH         RW1
               <!-- END 2023/03/07 S.Dong [QC#61205, ADD] -->
            WHERE
                DILV.GLBL_CMPY_CD                = #glblCmpyCd#
            <isNotNull property="whCdList">
                <iterate property="whCdList" var="whCdList[]" open="AND (DILV.RTL_WH_CD LIKE " conjunction= "OR DILV.RTL_WH_CD LIKE " close=")">
                    #whCdList[]#
                </iterate>
            </isNotNull>
            <isNotNull property="swhCdList">
                <iterate property="swhCdList" var="swhCdList[]" open="AND (DILV.RTL_SWH_CD LIKE " conjunction= "OR DILV.RTL_SWH_CD LIKE " close=")">
                    #swhCdList[]#
                </iterate>
            </isNotNull>
            <isNotNull property="cMsg.rtlWhCatgCd_HB">
            AND DILV.RTL_WH_CATG_CD              = #cMsg.rtlWhCatgCd_HB#
            </isNotNull>
            <!-- START 2023/03/07 S.Dong [QC#61205, ADD] -->
            AND DILV.RTL_WH_CD                   = RW1.RTL_WH_CD
            AND DILV.GLBL_CMPY_CD                = RW1.GLBL_CMPY_CD
            AND RW1.EZCANCELFLAG                 = '0'
            <isNotNull property="cMsg.whOwnrCd_HB">
            AND RW1.WH_OWNR_CD                   = #cMsg.whOwnrCd_HB#
            </isNotNull>
            <!-- END 2023/03/07 S.Dong [QC#61205, ADD] -->
            AND DILV.EZCANCELFLAG                = '0'
            AND RWC.GLBL_CMPY_CD                 = DILV.GLBL_CMPY_CD
            AND RWC.RTL_WH_CATG_CD               = DILV.RTL_WH_CATG_CD
            AND RWC.EZCANCELFLAG                 = '0'
            AND IVT.GLBL_CMPY_CD                 = DILV.GLBL_CMPY_CD
            AND IVT.INVTY_LOC_CD                 = DILV.INVTY_LOC_CD
            <isNotNull property="mdseCdList">
                <iterate property="mdseCdList" var="mdseCdList[]" open="AND (IVT.MDSE_CD LIKE " conjunction= "OR IVT.MDSE_CD LIKE " close=")">
                    #mdseCdList[]#
                </iterate>
            </isNotNull>
            <isNotNull property="locStsList">
                <iterate property="locStsList" var="locStsList[]" open="AND IVT.LOC_STS_CD IN (" conjunction= ", " close=")">
                    #locStsList[]#
                </iterate>
            </isNotNull>
            <isNotNull property="stkStsList">
                <iterate property="stkStsList" var="stkStsList[]" open="AND IVT.STK_STS_CD IN (" conjunction= ", " close=")">
                    #stkStsList[]#
                </iterate>
            </isNotNull>
            AND IVT.INVTY_QTY                 &gt; 0
            AND IVT.EZCANCELFLAG                 = '0'
            AND LS.GLBL_CMPY_CD                  = IVT.GLBL_CMPY_CD
            AND LS.LOC_STS_CD                    = IVT.LOC_STS_CD
            AND LS.EZCANCELFLAG                  = '0'
            AND SS.GLBL_CMPY_CD                  = IVT.GLBL_CMPY_CD
            AND SS.STK_STS_CD                    = IVT.STK_STS_CD
            AND SS.EZCANCELFLAG                  = '0'
            AND MD.GLBL_CMPY_CD                  = IVT.GLBL_CMPY_CD
            AND MD.MDSE_CD                       = IVT.MDSE_CD
            AND MD.EZCANCELFLAG                  = '0'
            <isNotNull property="cMsg.zerothProdCtrlNm_HB">
            AND UPPER(MD.ZEROTH_PROD_CTRL_NM) LIKE #cMsg.zerothProdCtrlNm_HB#
            </isNotNull>
            <isNotNull property="cMsg.firstProdCtrlNm_HB">
            AND UPPER(MD.FIRST_PROD_CTRL_NM)  LIKE #cMsg.firstProdCtrlNm_HB#
            </isNotNull>
            <isNotNull property="cMsg.scdProdCtrlNm_HB">
            AND UPPER(MD.SCD_PROD_CTRL_NM)    LIKE #cMsg.scdProdCtrlNm_HB#
            </isNotNull>
            <isNotNull property="cMsg.thirdProdCtrlNm_HB">
            AND UPPER(MD.THIRD_PROD_CTRL_NM)  LIKE #cMsg.thirdProdCtrlNm_HB#
            </isNotNull>
            <isNotNull property="cMsg.frthProdCtrlNm_HB">
            AND UPPER(MD.FRTH_PROD_CTRL_NM)   LIKE #cMsg.frthProdCtrlNm_HB#
            </isNotNull>
            <isNotNull property="cMsg.coaProjCd_HB">
            AND MD.COA_MDSE_TP_CD               = #cMsg.coaProjCd_HB#
            </isNotNull>
            <isNotNull property="cMsg.mdseItemTpCd_HB">
            AND MD.MDSE_ITEM_TP_CD              = #cMsg.mdseItemTpCd_HB#
            </isNotNull>
            AND CP.GLBL_CMPY_CD                  = MD.GLBL_CMPY_CD
            AND CP.COA_PROJ_CD                   = MD.COA_MDSE_TP_CD
            AND CP.EZCANCELFLAG                  = '0'
            AND MIT.GLBL_CMPY_CD                 = MD.GLBL_CMPY_CD
            AND MIT.MDSE_ITEM_TP_CD              = MD.MDSE_ITEM_TP_CD
            AND MIT.EZCANCELFLAG                 = '0'
            <isEqual property="cMsg.xxChkBox_HB" compareValue="Y">
            AND MD.RTRN_REQ_PRT_FLG              = #cMsg.xxChkBox_HB#
            </isEqual>
            <isNotNull property="cMsg.rtrnCtrlTpVndRelnPk_HB">
            AND MD.RTRN_CTRL_TP_VND_RELN_PK      = #cMsg.rtrnCtrlTpVndRelnPk_HB#
            </isNotNull>
            )
        WHERE
            ROWNUM &lt;= #rowNum#
    </statement>

    <resultMap id="result.NLCL0250_ASMsg" class="NLCL0250_ASMsg">
        <result property="mdseCd_A1"            column="MDSE_CD"                    javaType="EZDSStringItem"/>
        <result property="mdseDescShortTxt_A1"  column="MDSE_DESC_SHORT_TXT"        javaType="EZDSStringItem"/>
        <result property="serNum_A1"            column="SER_NUM"                    javaType="EZDSStringItem"/>
        <result property="rtlWhCatgDescTxt_A1"  column="RTL_WH_CATG_DESC_TXT"       javaType="EZDSStringItem"/>
        <result property="rtlWhNm_A1"           column="RTL_WH_NM"                  javaType="EZDSStringItem"/>
        <result property="rtlSwhCd_A1"          column="RTL_SWH_CD"                 javaType="EZDSStringItem"/>
        <!-- START 2017/12/18 S.Katsuma [QC#21834,ADD] -->
        <result property="ropQty_A1"            column="ROP_QTY"                    javaType="EZDSStringItem"/>
        <result property="maxInvtyQty_A1"       column="MAX_INVTY_QTY"              javaType="EZDSStringItem"/>
        <!-- END 2017/12/18 S.Katsuma [QC#21834,ADD] -->
        <result property="invtyQty_A1"          column="INVTY_QTY"                  javaType="EZDSBigDecimalItem"/>
        <result property="invtyAvalQty_A1"      column="INVTY_AVAL_QTY"             javaType="EZDSBigDecimalItem"/>
        <result property="svcConfigMstrPk_A1"   column="SVC_CONFIG_MSTR_PK"         javaType="EZDSBigDecimalItem"/>
        <result property="xxScrItem61Txt_AS"    column="STK_STS_DESC_TXT"           javaType="EZDSStringItem"/>
        <result property="xxScrItem61Txt_AL"    column="LOC_STS_DESC_TXT"           javaType="EZDSStringItem"/>
        <result property="agingCnt_A1"          column="AGING_CNT"                  javaType="EZDSBigDecimalItem"/>
        <result property="dsAcctNm_A1"          column="SHIP_FROM_ACCT_NM"          javaType="EZDSStringItem"/>
        <result property="shipToAcctNm_A1"      column="SHIP_TO_ACCT_NM"            javaType="EZDSStringItem"/>
        <result property="sceOrdTpNm_A1"        column="SCE_ORD_TP_NM"              javaType="EZDSStringItem"/>
        <result property="trxHdrNum_A1"         column="TRX_HDR_NUM"                javaType="EZDSStringItem"/>
        <result property="dplyLineNum_A1"       column="DPLY_LINE_NUM"              javaType="EZDSStringItem"/>
        <result property="rtlWhCd_A1"           column="RTL_WH_CD"                  javaType="EZDSStringItem"/>
        <result property="xxScrItem61Txt_A5"    column="COA_PROJ_LONG_DESC_TXT"     javaType="EZDSStringItem"/>
        <result property="xxScrItem61Txt_A6"    column="MDSE_ITEM_TP_LONG_DESC_TXT" javaType="EZDSStringItem"/>
        <result property="xxScrItem61Txt_A0"    column="ZEROTH_PROD_CTRL_DESC_TXT"  javaType="EZDSStringItem"/>
        <result property="xxScrItem61Txt_A1"    column="FIRST_PROD_CTRL_DESC_TXT"   javaType="EZDSStringItem"/>
        <result property="xxScrItem61Txt_A2"    column="SCD_PROD_CTRL_DESC_TXT"     javaType="EZDSStringItem"/>
        <result property="xxScrItem61Txt_A3"    column="THIRD_PROD_CTRL_DESC_TXT"   javaType="EZDSStringItem"/>
        <result property="xxScrItem61Txt_A4"    column="FRTH_PROD_CTRL_DESC_TXT"    javaType="EZDSStringItem"/>
        <result property="mainMachFlg_A1"       column="MACH_FLG"                   javaType="EZDSStringItem"/>
        <result property="serNumFlg_A1"         column="SER_NUM_FLG"                javaType="EZDSStringItem"/>
        <result property="svcMachMstrPk_A1"     column="SVC_MACH_MSTR_PK"           javaType="EZDSBigDecimalItem"/>
    </resultMap>

    <statement id="searchDtl" parameterClass="Map" resultClass="Map">
        SELECT /*+ OPTIMIZER_FEATURES_ENABLE('10.2.0.5') */ 
            INVTY_V.MDSE_CD
           ,INVTY_V.MDSE_DESC_SHORT_TXT
           ,INVTY_V.SER_NUM
           ,INVTY_V.RTL_WH_CATG_DESC_TXT
           ,INVTY_V.RTL_WH_CD
           ,INVTY_V.RTL_WH_NM
           ,INVTY_V.RTL_SWH_CD
           ,INVTY_V.INVTY_LOC_CD
           <!-- START 2017/12/18 S.Katsuma [QC#21834,ADD] -->
           ,INVTY_V.ROP_QTY
           ,INVTY_V.MAX_INVTY_QTY
           <!-- END 2017/12/18 S.Katsuma [QC#21834,ADD] -->
           ,SUM(INVTY_V.INVTY_QTY)      AS INVTY_QTY
           ,SUM(INVTY_V.INVTY_AVAL_QTY) AS INVTY_AVAL_QTY
           ,INVTY_V.SVC_CONFIG_MSTR_PK
           ,INVTY_V.LOC_STS_CD
           ,INVTY_V.LOC_STS_CD || ':' || INVTY_V.LOC_STS_DESC_TXT AS LOC_STS_DESC_TXT
           ,INVTY_V.STK_STS_CD
           ,INVTY_V.STK_STS_CD || ':' || INVTY_V.STK_STS_DESC_TXT AS STK_STS_DESC_TXT
           ,INVTY_V.SHIP_FROM_ACCT_NM
           ,INVTY_V.SHIP_TO_ACCT_NM
           ,INVTY_V.SCE_ORD_TP_NM
           ,INVTY_V.TRX_HDR_NUM
           ,INVTY_V.DPLY_LINE_NUM
           ,INVTY_V.COA_PROJ_LONG_DESC_TXT
           ,INVTY_V.MDSE_ITEM_TP_LONG_DESC_TXT
           ,INVTY_V.ZEROTH_PROD_CTRL_DESC_TXT
           ,INVTY_V.FIRST_PROD_CTRL_DESC_TXT
           ,INVTY_V.SCD_PROD_CTRL_DESC_TXT
           ,INVTY_V.THIRD_PROD_CTRL_DESC_TXT
           ,INVTY_V.FRTH_PROD_CTRL_DESC_TXT
           ,INVTY_V.MACH_FLG
           ,CASE WHEN INVTY_V.SER_NUM IS NULL THEN #flgN#
                 WHEN EXISTS (SELECT
                                  1
                              FROM
                                  SER_TRX ST
                              WHERE
                                  ST.GLBL_CMPY_CD = INVTY_V.GLBL_CMPY_CD
                              AND ST.SER_NUM      = INVTY_V.SER_NUM
                              AND ST.MDSE_CD      = INVTY_V.MDSE_CD
                              AND ST.EZCANCELFLAG = '0'
                              AND ROWNUM          = 1
                             ) THEN #flgY#
                 ELSE #flgN#
            END  AS SER_NUM_FLG
           ,INVTY_V.SVC_MACH_MSTR_PK
           ,INVTY_V.STK_IN_DT
           ,CASE WHEN INVTY_V.STK_IN_DT IS NOT NULL THEN TO_DATE(#slsDt#, 'YYYYMMDD') - TO_DATE(INVTY_V.STK_IN_DT, 'YYYYMMDD')
            END  AS AGING_CNT
        FROM
            (
             <!-- DC Stock  -->
             <isEqual property="locStsDcStkFlg" compareValue="Y">
                 SELECT
                     IDD.GLBL_CMPY_CD
                    ,IDD.MDSE_CD
                    ,MD.MDSE_DESC_SHORT_TXT
                    ,IDD.SER_NUM
                    ,RWC.RTL_WH_CATG_DESC_TXT
                    ,RW.RTL_WH_CD
                    ,RW.RTL_WH_NM
                    ,RSW.RTL_SWH_CD
                    ,IDD.INVTY_LOC_CD
                    ,NVL((
                        SELECT /*+ INDEX(MI MRP_INFO_I7) */
                           MI.ROP_QTY
                        FROM
                           MRP_INFO MI
                        WHERE
                            IDD.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
                        AND IDD.INVTY_LOC_CD        = MI.INVTY_LOC_CD
                        AND IDD.MDSE_CD             = MI.MDSE_CD
                        AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
                        AND MI.EZCANCELFLAG         = '0'
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                        AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
                    ),
                    (
                        SELECT /*+ INDEX(MI MRP_INFO_I7) */
                            MI.ROP_QTY
                        FROM
                            MRP_INFO MI
                        WHERE
                            IDD.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
                        AND IDD.INVTY_LOC_CD        = MI.INVTY_LOC_CD
                        AND SUBSTR(IDD.MDSE_CD, 0, 8) = MI.MDSE_CD
                        AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
                        AND MI.EZCANCELFLAG         = '0'
                        AND EXISTS(
                                SELECT
                                    1
                                FROM
                                    ORD_TAKE_MDSE OTM
                                WHERE
                                    MI.GLBL_CMPY_CD  = OTM.GLBL_CMPY_CD
                                AND MI.MDSE_CD = OTM.ORD_TAKE_MDSE_CD
                                AND OTM.EZCANCELFLAG = '0'
                        )
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                        AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
                    )
                    ) ROP_QTY
                    ,NVL((
                        SELECT /*+ INDEX(MI MRP_INFO_I7) */
                           MI.MAX_INVTY_QTY
                        FROM
                           MRP_INFO MI
                        WHERE
                            IDD.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
                        AND IDD.INVTY_LOC_CD        = MI.INVTY_LOC_CD
                        AND IDD.MDSE_CD             = MI.MDSE_CD
                        AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
                        AND MI.EZCANCELFLAG         = '0'
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                        AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
                    ),
                    (
                        SELECT /*+ INDEX(MI MRP_INFO_I7) */
                            MI.MAX_INVTY_QTY
                        FROM
                            MRP_INFO MI
                        WHERE
                            IDD.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
                        AND IDD.INVTY_LOC_CD        = MI.INVTY_LOC_CD
                        AND SUBSTR(IDD.MDSE_CD, 0, 8) = MI.MDSE_CD
                        AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
                        AND MI.EZCANCELFLAG         = '0'
                        AND EXISTS(
                                SELECT
                                    1
                                FROM
                                    ORD_TAKE_MDSE OTM
                                WHERE
                                    MI.GLBL_CMPY_CD  = OTM.GLBL_CMPY_CD
                                AND MI.MDSE_CD = OTM.ORD_TAKE_MDSE_CD
                                AND OTM.EZCANCELFLAG = '0'
                        )
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                        AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
                    )) MAX_INVTY_QTY
                    ,CASE WHEN IDD.SER_NUM IS NOT NULL THEN 1
                          WHEN SMM.SVC_CONFIG_MSTR_PK IS NOT NULL THEN 1
                          ELSE IDD.INVTY_QTY
                     END AS INVTY_QTY
                    ,IV.INVTY_AVAL_QTY
                    ,SMM.SVC_CONFIG_MSTR_PK
                    ,IDD.LOC_STS_CD
                    ,LS.LOC_STS_DESC_TXT
                    ,IDD.STK_STS_CD
                    ,SS.STK_STS_DESC_TXT
                    ,CASE WHEN SO.SO_NUM IS NOT NULL THEN RW.RTL_WH_NM
                     END AS SHIP_FROM_ACCT_NM
                    ,CASE WHEN TRW.RTL_WH_CD       IS NOT NULL THEN TRW.RTL_WH_NM
                          WHEN DAC.SELL_TO_CUST_CD IS NOT NULL THEN DAC.DS_ACCT_NM
                          WHEN PV.PRNT_VND_CD      IS NOT NULL THEN PV.PRNT_VND_NM || '-' || V.LOC_NM
                     END AS SHIP_TO_ACCT_NM
                    ,CASE WHEN SO.SO_NUM IS NOT NULL THEN SOT.SCE_ORD_TP_NM
                     END SCE_ORD_TP_NM
                    ,SO.SRC_ORD_NUM AS TRX_HDR_NUM
                    ,CASE WHEN SOT.SCE_ORD_TP_CD = #sceOrdTpKU# THEN NULL
                          WHEN CD.DS_ORD_POSN_NUM IS NOT NULL THEN CONCAT(CD.DS_ORD_POSN_NUM, '.') || CONCAT(CD.DS_CPO_LINE_NUM, DECODE(CD.DS_CPO_LINE_SUB_NUM, NULL, '', '.')) || CD.DS_CPO_LINE_SUB_NUM
                          WHEN PD.PO_ORD_NUM      IS NOT NULL THEN PD.DISP_PO_DTL_LINE_NUM
                          WHEN IOD.PRCH_REQ_NUM   IS NOT NULL THEN TO_CHAR(TO_NUMBER(IOD.PRCH_REQ_LINE_NUM)) || '.' || TO_CHAR(IOD.PRCH_REQ_LINE_SUB_NUM)
                          ELSE SMM.TRX_LINE_NUM
                     END AS DPLY_LINE_NUM
                    ,DECODE(MD.COA_MDSE_TP_CD,      NULL, MD.COA_MDSE_TP_CD,      MD.COA_MDSE_TP_CD      || ':' || CP.COA_PROJ_DESC_TXT)      AS COA_PROJ_LONG_DESC_TXT
                    ,DECODE(MD.MDSE_ITEM_TP_CD,     NULL, MD.MDSE_ITEM_TP_CD,     MD.MDSE_ITEM_TP_CD     || ':' || MIT.MDSE_ITEM_TP_DESC_TXT) AS MDSE_ITEM_TP_LONG_DESC_TXT
                    ,DECODE(MD.ZEROTH_PROD_CTRL_CD, NULL, MD.ZEROTH_PROD_CTRL_CD, MD.ZEROTH_PROD_CTRL_CD || ':' || MD.ZEROTH_PROD_CTRL_NM)    AS ZEROTH_PROD_CTRL_DESC_TXT
                    ,DECODE(MD.FIRST_PROD_CTRL_CD,  NULL, MD.FIRST_PROD_CTRL_CD,  MD.FIRST_PROD_CTRL_CD  || ':' || MD.FIRST_PROD_CTRL_NM)     AS FIRST_PROD_CTRL_DESC_TXT
                    ,DECODE(MD.SCD_PROD_CTRL_CD,    NULL, MD.SCD_PROD_CTRL_CD,    MD.SCD_PROD_CTRL_CD    || ':' || MD.SCD_PROD_CTRL_NM)       AS SCD_PROD_CTRL_DESC_TXT
                    ,DECODE(MD.THIRD_PROD_CTRL_CD,  NULL, MD.THIRD_PROD_CTRL_CD,  MD.THIRD_PROD_CTRL_CD  || ':' || MD.THIRD_PROD_CTRL_NM)     AS THIRD_PROD_CTRL_DESC_TXT
                    ,DECODE(MD.FRTH_PROD_CTRL_CD,   NULL, MD.FRTH_PROD_CTRL_CD,   MD.FRTH_PROD_CTRL_CD   || ':' || MD.FRTH_PROD_CTRL_NM)      AS FRTH_PROD_CTRL_DESC_TXT
                    ,CASE WHEN IDD.SER_NUM IS NULL THEN #flgN#
                          WHEN SMM.SVC_MACH_MSTR_PK IS NOT NULL THEN #flgY#
                          ELSE #flgN#
                     END  AS MACH_FLG
                    ,SMM.SVC_MACH_MSTR_PK
                    ,IDD.STK_IN_DT
                 FROM
                     INVTY_DTL_DLY IDD
                    ,INVTY         IV
                    ,MDSE          MD
                    ,COA_PROJ      CP
                    ,MDSE_ITEM_TP  MIT
                    ,LOC_STS       LS
                    ,STK_STS       SS
                    ,RTL_SWH       RSW
                    ,RTL_WH        RW
                    ,RTL_WH_CATG   RWC
                    ,(
                        SELECT
                             SMM.GLBL_CMPY_CD
                            ,SMM.SVC_MACH_MSTR_PK
                            ,SMM.SVC_CONFIG_MSTR_PK
                            ,SMM.MDSE_CD
                            ,SMM.SER_NUM
                            ,SMM.TRX_HDR_NUM
                            ,SMM.TRX_LINE_NUM
                            ,SMM.TRX_LINE_SUB_NUM
                            ,SMM.CUR_LOC_NUM
                            ,SMM.SVC_MACH_MAINT_AVAL_FLG
                        FROM
                             SVC_MACH_MSTR SMM
                            ,MDSE          M
                        WHERE
                            SMM.GLBL_CMPY_CD      = #glblCmpyCd#
                        <!-- START 2018/12/06 M.Naito [QC#29249,ADD] -->
                        AND SMM.GLBL_CMPY_CD      = M.GLBL_CMPY_CD
                        <!-- END 2018/12/06 M.Naito [QC#29249,ADD] -->
                        AND SMM.MDSE_CD           = M.MDSE_CD
                        AND (M.RCV_SER_TAKE_FLG   = #flgY# OR SMM.SVC_CONFIG_MSTR_PK IS NOT NULL)
                        AND M.INSTL_BASE_CTRL_FLG = #flgY#
                        AND M.INVTY_CTRL_FLG      = #flgY#
                        AND SMM.EZCANCELFLAG      = '0'
                        AND M.EZCANCELFLAG        = '0'
                     )             SMM
                    <!-- START 2018/12/06 M.Naito [QC#29249,MOD] -->
                    <!-- ,SO_SER        SER -->
                    ,(
                        SELECT
                             SER.GLBL_CMPY_CD
                            ,SER.TRX_HDR_NUM
                            ,SER.TRX_LINE_NUM
                            ,SER.SVC_MACH_MSTR_PK
                            ,SER.SO_NUM
                            ,SER.SO_SLP_NUM
                        FROM
                             SO_SER       SER
                            ,SHPG_ORD_DTL SOD 
                        WHERE
                            SER.GLBL_CMPY_CD = #glblCmpyCd#
                        AND SER.EZCANCELFLAG = '0'
                        AND SER.GLBL_CMPY_CD = SOD.GLBL_CMPY_CD
                        AND SER.SO_NUM       = SOD.SO_NUM
                        AND SER.SO_SLP_NUM   = SOD.SO_SLP_NUM
                        <isNotNull property="shpgStsList">
                            <iterate property="shpgStsList" var="shpgStsList[]" open="AND SOD.SHPG_STS_CD IN (" conjunction= ", " close=")">
                               #shpgStsList[]#
                            </iterate>
                        </isNotNull>
                        AND SOD.EZCANCELFLAG = '0'
                    ) SER
                    <!-- END 2018/12/06 M.Naito [QC#29249,MOD] -->
                    ,SHPG_ORD      SO
                    ,SCE_ORD_TP    SOT
                    ,SHPG_ORD_DTL  SOD
                    ,SHPG_STS      STS
                    ,RTL_WH        TRW
                    ,SHIP_TO_CUST  STC
                    ,SELL_TO_CUST  DAC
                    ,VND           V
                    ,PRNT_VND      PV
                    ,CPO_DTL       CD
                    ,PO_DTL        PD
                    ,INVTY_ORD_DTL IOD
                 WHERE
                     IDD.GLBL_CMPY_CD     = #glblCmpyCd#
                 <isNotNull property="mdseCdList">
                     <iterate property="mdseCdList" var="mdseCdList[]" open="AND (IDD.MDSE_CD LIKE " conjunction= "OR IDD.MDSE_CD LIKE " close=")">
                         #mdseCdList[]#
                     </iterate>
                 </isNotNull>
                 <isNotNull property="stkStsList">
                     <iterate property="stkStsList" var="stkStsList[]" open="AND IDD.STK_STS_CD IN (" conjunction= ", " close=")">
                         #stkStsList[]#
                     </iterate>
                 </isNotNull>
                 <isNotNull property="serNumList">
                     <iterate property="serNumList" var="serNumList[]" open="AND (IDD.SER_NUM LIKE " conjunction= "OR IDD.SER_NUM LIKE " close=")">
                         #serNumList[]#
                     </iterate>
                 </isNotNull>
                 <isNotNull property="cMsg.xxFromDt_HB">
                 AND IDD.STK_IN_DT    &gt;= #cMsg.xxFromDt_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.xxThruDt_HB">
                 AND IDD.STK_IN_DT    &lt;= #cMsg.xxThruDt_HB#
                 </isNotNull>
                 AND IDD.LOC_STS_CD       = #locStsDcStk#
                 AND IDD.EZCANCELFLAG     = '0'
                 AND IDD.GLBL_CMPY_CD     = IV.GLBL_CMPY_CD
                 AND IDD.MDSE_CD          = IV.MDSE_CD
                 AND IDD.INVTY_LOC_CD     = IV.INVTY_LOC_CD
                 AND IDD.LOC_STS_CD       = IV.LOC_STS_CD
                 AND IDD.STK_STS_CD       = IV.STK_STS_CD
                 AND IV.EZCANCELFLAG      = '0'
                 AND IDD.GLBL_CMPY_CD     = MD.GLBL_CMPY_CD
                 AND IDD.MDSE_CD          = MD.MDSE_CD
                 AND MD.INVTY_CTRL_FLG    = #flgY#
                 <isNotNull property="cMsg.zerothProdCtrlNm_HB">
                 AND UPPER(MD.ZEROTH_PROD_CTRL_NM) LIKE #cMsg.zerothProdCtrlNm_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.firstProdCtrlNm_HB">
                 AND UPPER(MD.FIRST_PROD_CTRL_NM)  LIKE #cMsg.firstProdCtrlNm_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.scdProdCtrlNm_HB">
                 AND UPPER(MD.SCD_PROD_CTRL_NM)    LIKE #cMsg.scdProdCtrlNm_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.thirdProdCtrlNm_HB">
                 AND UPPER(MD.THIRD_PROD_CTRL_NM)  LIKE #cMsg.thirdProdCtrlNm_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.frthProdCtrlNm_HB">
                 AND UPPER(MD.FRTH_PROD_CTRL_NM)   LIKE #cMsg.frthProdCtrlNm_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.coaProjCd_HB">
                 AND MD.COA_MDSE_TP_CD    = #cMsg.coaProjCd_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.mdseItemTpCd_HB">
                 AND MD.MDSE_ITEM_TP_CD   = #cMsg.mdseItemTpCd_HB#
                 </isNotNull>
                 AND MD.EZCANCELFLAG      = '0'
                 AND MD.GLBL_CMPY_CD      = CP.GLBL_CMPY_CD
                 AND MD.COA_MDSE_TP_CD    = CP.COA_PROJ_CD
                 AND CP.EZCANCELFLAG      = '0'
                 AND MD.GLBL_CMPY_CD      = MIT.GLBL_CMPY_CD
                 AND MD.MDSE_ITEM_TP_CD   = MIT.MDSE_ITEM_TP_CD
                 AND MIT.EZCANCELFLAG     = '0'
                 AND IDD.GLBL_CMPY_CD     = LS.GLBL_CMPY_CD
                 AND IDD.LOC_STS_CD       = LS.LOC_STS_CD
                 AND LS.EZCANCELFLAG      = '0'
                 AND IDD.GLBL_CMPY_CD     = SS.GLBL_CMPY_CD
                 AND IDD.STK_STS_CD       = SS.STK_STS_CD
                 AND SS.EZCANCELFLAG      = '0'
                 AND IDD.GLBL_CMPY_CD     = RSW.GLBL_CMPY_CD
                 AND IDD.INVTY_LOC_CD     = RSW.INVTY_LOC_CD
                 <isNotNull property="whCdList">
                     <iterate property="whCdList" var="whCdList[]" open="AND (RSW.RTL_WH_CD LIKE " conjunction= "OR RSW.RTL_WH_CD LIKE " close=")">
                         #whCdList[]#
                     </iterate>
                 </isNotNull>
                 <isNotNull property="swhCdList">
                     <iterate property="swhCdList" var="swhCdList[]" open="AND (RSW.RTL_SWH_CD LIKE " conjunction= "OR RSW.RTL_SWH_CD LIKE " close=")">
                         #swhCdList[]#
                     </iterate>
                 </isNotNull>
                 AND RSW.EZCANCELFLAG     = '0'
                 AND RSW.GLBL_CMPY_CD     = RW.GLBL_CMPY_CD
                 AND RSW.RTL_WH_CD        = RW.RTL_WH_CD
                 <isNotNull property="cMsg.rtlWhCatgCd_HB">
                 AND RW.RTL_WH_CATG_CD    = #cMsg.rtlWhCatgCd_HB#
                 </isNotNull>
                 <!-- START 2023/03/07 S.Dong [QC#61205, ADD] -->
                 <isNotNull property="cMsg.whOwnrCd_HB">
                 AND RW.WH_OWNR_CD        = #cMsg.whOwnrCd_HB#
                 </isNotNull>
                 <!-- END 2023/03/07 S.Dong [QC#61205, ADD] -->
                 AND RW.EZCANCELFLAG      = '0'
                 AND RW.GLBL_CMPY_CD      = RWC.GLBL_CMPY_CD
                 AND RW.RTL_WH_CATG_CD    = RWC.RTL_WH_CATG_CD
                 AND RWC.EZCANCELFLAG     = '0'
                 AND IDD.GLBL_CMPY_CD     = SMM.GLBL_CMPY_CD(+)
                 AND IDD.MDSE_CD          = SMM.MDSE_CD(+)
                 AND IDD.INVTY_LOC_CD     = SMM.CUR_LOC_NUM(+)
                 AND NVL(IDD.SVC_CONFIG_MSTR_PK, -1) = NVL(SMM.SVC_CONFIG_MSTR_PK(+), -1)
                 AND NVL(IDD.SER_NUM, '***') = NVL(SMM.SER_NUM(+), '***')
                 AND SMM.GLBL_CMPY_CD     = SER.GLBL_CMPY_CD(+)
                 AND SMM.TRX_HDR_NUM      = SER.TRX_HDR_NUM(+)
                 AND SMM.TRX_LINE_NUM     = SER.TRX_LINE_NUM(+)
                 AND SMM.SVC_MACH_MSTR_PK = SER.SVC_MACH_MSTR_PK(+)
                 <isNotNull property="configIDList">
                     <!-- START 2017/12/18 S.Katsuma [QC#22469,MOD] -->
                     <iterate property="configIDList" var="configIDList[]" open="AND (SMM.SVC_CONFIG_MSTR_PK LIKE " conjunction= "OR SMM.SVC_CONFIG_MSTR_PK LIKE " close=")">
                         #configIDList[]#
                     </iterate>
                     <!-- END 2017/12/18 S.Katsuma [QC#22469,MOD] -->
                 </isNotNull>
                 <!-- START 2018/12/06 M.Naito [QC#29249,MOD] -->
                 <!-- AND SER.EZCANCELFLAG(+)  = '0' -->
                 <!-- START 2018/12/06 M.Naito [QC#29249,MOD] -->
                 AND SER.GLBL_CMPY_CD     = SO.GLBL_CMPY_CD(+)
                 AND SER.SO_NUM           = SO.SO_NUM(+)
                 <isNotNull property="toLocCdList">
                     <iterate property="toLocCdList" var="toLocCdList[]" open="AND (SO.SHIP_TO_CUST_CD LIKE " conjunction= "OR SO.SHIP_TO_CUST_CD LIKE " close=")">
                         #toLocCdList[]#
                     </iterate>
                 </isNotNull>
                 AND SO.EZCANCELFLAG(+)   = '0'
                 AND SO.GLBL_CMPY_CD      = SOT.GLBL_CMPY_CD(+)
                 AND SO.SCE_ORD_TP_CD     = SOT.SCE_ORD_TP_CD(+)
                 AND SOT.INBD_OTBD_CD(+)  = #inbdOtbdCdOt#
                 AND SOT.EZCANCELFLAG(+)  = '0'
                 AND SER.GLBL_CMPY_CD     = SOD.GLBL_CMPY_CD(+)
                 AND SER.SO_NUM           = SOD.SO_NUM(+)
                 AND SER.SO_SLP_NUM       = SOD.SO_SLP_NUM(+)
                 AND SOD.EZCANCELFLAG(+)  = '0'
                 AND SOD.GLBL_CMPY_CD     = STS.GLBL_CMPY_CD(+)
                 AND SOD.SHPG_STS_CD      = STS.SHPG_STS_CD(+)
                 AND STS.SO_PRINT_FLG(+)  = #flgY#
                 AND STS.SHIP_FLG(+)      = #flgN#
                 AND STS.EZCANCELFLAG(+)  = '0'
                 AND SO.GLBL_CMPY_CD      = TRW.GLBL_CMPY_CD(+)
                 AND SO.SHIP_TO_CUST_CD   = TRW.RTL_WH_CD(+)
                 AND TRW.EZCANCELFLAG(+)  = '0'
                 AND SO.GLBL_CMPY_CD      = STC.GLBL_CMPY_CD(+)
                 AND SO.SHIP_TO_CUST_CD   = STC.SHIP_TO_CUST_CD(+)
                 AND STC.EZCANCELFLAG(+)  = '0'
                 AND STC.GLBL_CMPY_CD     = DAC.GLBL_CMPY_CD(+)
                 AND STC.SELL_TO_CUST_CD  = DAC.SELL_TO_CUST_CD(+)
                 AND DAC.EZCANCELFLAG(+)  = '0'
                 AND SO.GLBL_CMPY_CD      = V.GLBL_CMPY_CD(+)
                 AND SO.SHIP_TO_CUST_CD   = V.VND_CD(+)
                 AND V.EZCANCELFLAG(+)    = '0'
                 AND V.GLBL_CMPY_CD       = PV.GLBL_CMPY_CD(+)
                 AND V.PRNT_VND_PK        = PV.PRNT_VND_PK(+)
                 AND PV.EZCANCELFLAG(+)   = '0'
                 AND SMM.GLBL_CMPY_CD     = CD.GLBL_CMPY_CD(+)
                 AND SMM.TRX_HDR_NUM      = CD.CPO_ORD_NUM(+)
                 AND SMM.TRX_LINE_NUM     = CD.CPO_DTL_LINE_NUM(+)
                 AND SMM.TRX_LINE_SUB_NUM = CD.CPO_DTL_LINE_SUB_NUM(+)
                 AND CD.EZCANCELFLAG(+)   = '0'
                 AND SMM.GLBL_CMPY_CD     = PD.GLBL_CMPY_CD(+)
                 AND SMM.TRX_HDR_NUM      = PD.PO_ORD_NUM(+)
                 AND SMM.TRX_LINE_NUM     = PD.PO_ORD_DTL_LINE_NUM(+)
                 AND PD.EZCANCELFLAG(+)   = '0'
                 AND SMM.GLBL_CMPY_CD     = IOD.GLBL_CMPY_CD(+)
                 AND SMM.TRX_HDR_NUM      = IOD.INVTY_ORD_NUM(+)
                 AND SMM.TRX_LINE_NUM     = IOD.INVTY_ORD_LINE_NUM(+)
                 AND IOD.EZCANCELFLAG(+)  = '0'
                 <isEqual property="cMsg.xxChkBox_HB" compareValue="Y">
                 AND MD.RTRN_REQ_PRT_FLG  = #cMsg.xxChkBox_HB#
                 </isEqual>
                 <isNotNull property="cMsg.rtrnCtrlTpVndRelnPk_HB">
                 AND MD.RTRN_CTRL_TP_VND_RELN_PK      = #cMsg.rtrnCtrlTpVndRelnPk_HB#
                 </isNotNull>
                 <!-- END 2017/12/18 S.Katsuma [QC#21834,ADD] -->
             </isEqual>

             <!-- In-Transit (WH)  -->
             <isEqual property="locStsWHTransFlg" compareValue="Y">

                 <isEqual property="locStsDcStkFlg" compareValue="Y">
                     UNION ALL
                 </isEqual>

                 SELECT
                     RD.GLBL_CMPY_CD
                    ,RD.MDSE_CD
                    ,MD.MDSE_DESC_SHORT_TXT
                    ,SMM.SER_NUM
                    ,RWC.RTL_WH_CATG_DESC_TXT
                    ,DRW.RTL_WH_CD
                    ,DRW.RTL_WH_NM
                    ,DRSW.RTL_SWH_CD
                    ,RD.INVTY_LOC_CD
                    ,NVL((
                        SELECT
                           MI.ROP_QTY
                        FROM
                           MRP_INFO MI
                        WHERE
                            RD.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
                        AND RD.INVTY_LOC_CD        = MI.INVTY_LOC_CD
                        AND RD.MDSE_CD             = MI.MDSE_CD
                        AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
                        AND MI.EZCANCELFLAG         = '0'
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                        AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
                    ),
                    (
                        SELECT
                            MI.ROP_QTY
                        FROM
                            MRP_INFO MI
                        WHERE
                            RD.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
                        AND RD.INVTY_LOC_CD        = MI.INVTY_LOC_CD
                        AND SUBSTR(RD.MDSE_CD, 0, 8) = MI.MDSE_CD
                        AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
                        AND MI.EZCANCELFLAG         = '0'
                        AND EXISTS(
                                SELECT
                                    1
                                FROM
                                    ORD_TAKE_MDSE OTM
                                WHERE
                                    MI.GLBL_CMPY_CD  = OTM.GLBL_CMPY_CD
                                AND MI.MDSE_CD = OTM.ORD_TAKE_MDSE_CD
                                AND OTM.EZCANCELFLAG = '0'
                        )
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                        AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
                    )
                    ) ROP_QTY
                    ,NVL((
                        SELECT
                           MI.MAX_INVTY_QTY
                        FROM
                           MRP_INFO MI
                        WHERE
                            RD.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
                        AND RD.INVTY_LOC_CD        = MI.INVTY_LOC_CD
                        AND RD.MDSE_CD             = MI.MDSE_CD
                        AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
                        AND MI.EZCANCELFLAG         = '0'
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                        AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
                    ),
                    (
                        SELECT
                            MI.MAX_INVTY_QTY
                        FROM
                            MRP_INFO MI
                        WHERE
                            RD.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
                        AND RD.INVTY_LOC_CD        = MI.INVTY_LOC_CD
                        AND SUBSTR(RD.MDSE_CD, 0, 8) = MI.MDSE_CD
                        AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
                        AND MI.EZCANCELFLAG         = '0'
                        AND EXISTS(
                                SELECT
                                    1
                                FROM
                                    ORD_TAKE_MDSE OTM
                                WHERE
                                    MI.GLBL_CMPY_CD  = OTM.GLBL_CMPY_CD
                                AND MI.MDSE_CD = OTM.ORD_TAKE_MDSE_CD
                                AND OTM.EZCANCELFLAG = '0'
                        )
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                        AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
                    )) MAX_INVTY_QTY
                    ,DECODE(SMM.SVC_MACH_MSTR_PK, NULL, RD.RWS_QTY - RD.RWS_PUT_AWAY_QTY, 1) AS INVTY_QTY
                    ,0                       AS INVTY_AVAL_QTY
                    ,RH.SVC_CONFIG_MSTR_PK
                    ,#locStsWHTrans#         AS LOC_STS_CD
                    ,#locStsWHTransNm#       AS LOC_STS_DESC_TXT
                    ,RD.INVTY_STK_STS_CD     AS STK_STS_CD
                    ,SS.STK_STS_DESC_TXT
                    ,FRW.RTL_WH_NM           AS SHIP_FROM_ACCT_NM
                    ,DRW.RTL_WH_NM           AS SHIP_TO_ACCT_NM
                    ,SOT.SCE_ORD_TP_NM
                    ,CASE WHEN CD.DS_ORD_POSN_NUM IS NOT NULL THEN CD.CPO_ORD_NUM
                          WHEN SOD.PRCH_REQ_NUM   IS NOT NULL THEN SOD.PRCH_REQ_NUM
                          ELSE SOD.TRX_HDR_NUM
                     END  AS TRX_HDR_NUM
                    ,CASE WHEN CD.DS_ORD_POSN_NUM IS NOT NULL THEN CONCAT(CD.DS_ORD_POSN_NUM, '.') || CONCAT(CD.DS_CPO_LINE_NUM, DECODE(CD.DS_CPO_LINE_SUB_NUM, NULL, '', '.')) || CD.DS_CPO_LINE_SUB_NUM
                          WHEN SOD.PRCH_REQ_NUM   IS NOT NULL THEN TO_CHAR(TO_NUMBER(SOD.PRCH_REQ_LINE_NUM)) || '.' || TO_CHAR(SOD.PRCH_REQ_LINE_SUB_NUM)
                          ELSE SOD.TRX_LINE_NUM
                     END  AS DPLY_LINE_NUM
                    ,DECODE(MD.COA_MDSE_TP_CD,      NULL, MD.COA_MDSE_TP_CD,      MD.COA_MDSE_TP_CD      || ':' || CP.COA_PROJ_DESC_TXT)      AS COA_PROJ_LONG_DESC_TXT
                    ,DECODE(MD.MDSE_ITEM_TP_CD,     NULL, MD.MDSE_ITEM_TP_CD,     MD.MDSE_ITEM_TP_CD     || ':' || MIT.MDSE_ITEM_TP_DESC_TXT) AS MDSE_ITEM_TP_LONG_DESC_TXT
                    ,DECODE(MD.ZEROTH_PROD_CTRL_CD, NULL, MD.ZEROTH_PROD_CTRL_CD, MD.ZEROTH_PROD_CTRL_CD || ':' || MD.ZEROTH_PROD_CTRL_NM)    AS ZEROTH_PROD_CTRL_DESC_TXT
                    ,DECODE(MD.FIRST_PROD_CTRL_CD,  NULL, MD.FIRST_PROD_CTRL_CD,  MD.FIRST_PROD_CTRL_CD  || ':' || MD.FIRST_PROD_CTRL_NM)     AS FIRST_PROD_CTRL_DESC_TXT
                    ,DECODE(MD.SCD_PROD_CTRL_CD,    NULL, MD.SCD_PROD_CTRL_CD,    MD.SCD_PROD_CTRL_CD    || ':' || MD.SCD_PROD_CTRL_NM)       AS SCD_PROD_CTRL_DESC_TXT
                    ,DECODE(MD.THIRD_PROD_CTRL_CD,  NULL, MD.THIRD_PROD_CTRL_CD,  MD.THIRD_PROD_CTRL_CD  || ':' || MD.THIRD_PROD_CTRL_NM)     AS THIRD_PROD_CTRL_DESC_TXT
                    ,DECODE(MD.FRTH_PROD_CTRL_CD,   NULL, MD.FRTH_PROD_CTRL_CD,   MD.FRTH_PROD_CTRL_CD   || ':' || MD.FRTH_PROD_CTRL_NM)      AS FRTH_PROD_CTRL_DESC_TXT
                    ,CASE WHEN SMM.SVC_CONFIG_MSTR_PK IS NOT NULL THEN #flgY#
                          WHEN SMM.SER_NUM            IS NULL     THEN #flgN#
                          WHEN SMM.SVC_MACH_MSTR_PK   IS NOT NULL THEN #flgY#
                          ELSE #flgN#
                     END  AS MACH_FLG
                    ,CASE WHEN SMM.SVC_CONFIG_MSTR_PK IS NOT NULL THEN SMM.SVC_MACH_MSTR_PK
                          WHEN SMM.SER_NUM            IS NULL     THEN NULL
                          ELSE SMM.SVC_MACH_MSTR_PK
                     END  AS SVC_MACH_MSTR_PK
                    ,NULL AS STK_IN_DT
                 FROM
                     RWS_HDR         RH
                    ,RWS_DTL         RD
                    ,RWS_STS         RS
                    ,SCE_ORD_TP      SOT
                    ,SHPG_ORD_DTL    SOD
                    ,CPO_DTL         CD
                    ,MDSE            MD
                    ,COA_PROJ        CP
                    ,MDSE_ITEM_TP    MIT
                    ,STK_STS         SS
                    ,RTL_SWH         DRSW
                    ,RTL_WH          DRW
                    ,RTL_WH          FRW
                    ,RTL_WH_CATG     RWC
                    ,SVC_MACH_MSTR   SMM
                 WHERE
                     RH.GLBL_CMPY_CD            = #glblCmpyCd#
                 <isNotNull property="toLocCdList">
                     <iterate property="toLocCdList" var="toLocCdList[]" open="AND (RH.WH_CD LIKE " conjunction= "OR RH.WH_CD LIKE " close=")">
                         #toLocCdList[]#
                     </iterate>
                 </isNotNull>
                 AND RH.SCE_ORD_TP_CD IN (#sceOrdTpDT#, #sceOrdTpTR#)
                 AND RH.EZCANCELFLAG            = '0'
                 <isNotNull property="configIDList">
                     <!-- START 2017/12/18 S.Katsuma [QC#22469,MOD] -->
                     <iterate property="configIDList" var="configIDList[]" open="AND (RH.SVC_CONFIG_MSTR_PK LIKE " conjunction= "OR RH.SVC_CONFIG_MSTR_PK LIKE " close=")">
                         #configIDList[]#
                     </iterate>
                     <!-- END 2017/12/18 S.Katsuma [QC#22469,MOD] -->
                 </isNotNull>
                 AND RH.GLBL_CMPY_CD            = RD.GLBL_CMPY_CD
                 AND RH.RWS_NUM                 = RD.RWS_NUM
                 <isNotNull property="mdseCdList">
                     <iterate property="mdseCdList" var="mdseCdList[]" open="AND (RD.MDSE_CD LIKE " conjunction= "OR RD.MDSE_CD LIKE " close=")">
                         #mdseCdList[]#
                     </iterate>
                 </isNotNull>
                 <isNotNull property="stkStsList">
                     <iterate property="stkStsList" var="stkStsList[]" open="AND RD.INVTY_STK_STS_CD IN (" conjunction= ", " close=")">
                         #stkStsList[]#
                     </iterate>
                 </isNotNull>
                 AND RD.EZCANCELFLAG            = '0'
                 AND RD.GLBL_CMPY_CD            = RS.GLBL_CMPY_CD
                 AND RD.RWS_STS_CD              = RS.RWS_STS_CD
                 AND RS.RWS_OPEN_FLG            = #flgY#
                 AND RS.EZCANCELFLAG            = '0'
                 AND RH.GLBL_CMPY_CD            = SOT.GLBL_CMPY_CD
                 AND RH.SCE_ORD_TP_CD           = SOT.SCE_ORD_TP_CD
                 AND SOT.INBD_OTBD_CD           = #inbdOtbdCdIn#
                 AND SOT.EZCANCELFLAG           = '0'
                 AND RH.GLBL_CMPY_CD            = SOD.GLBL_CMPY_CD
                 AND RH.PO_RCV_TRX_HDR_NUM      = SOD.SO_NUM
                 AND RD.PO_RCV_TRX_LINE_NUM     = SOD.SO_SLP_NUM
                 AND SOD.EZCANCELFLAG           = '0'
                 AND SOD.GLBL_CMPY_CD           = CD.GLBL_CMPY_CD(+)
                 AND SOD.TRX_HDR_NUM            = CD.CPO_ORD_NUM(+)
                 AND SOD.TRX_LINE_NUM           = CD.CPO_DTL_LINE_NUM(+)
                 AND SOD.TRX_LINE_SUB_NUM       = CD.CPO_DTL_LINE_SUB_NUM(+)
                 AND CD.EZCANCELFLAG(+)         = '0'
                 AND RD.GLBL_CMPY_CD            = MD.GLBL_CMPY_CD
                 AND RD.MDSE_CD                 = MD.MDSE_CD
                 <isNotNull property="cMsg.zerothProdCtrlNm_HB">
                 AND UPPER(MD.ZEROTH_PROD_CTRL_NM) LIKE #cMsg.zerothProdCtrlNm_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.firstProdCtrlNm_HB">
                 AND UPPER(MD.FIRST_PROD_CTRL_NM)  LIKE #cMsg.firstProdCtrlNm_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.scdProdCtrlNm_HB">
                 AND UPPER(MD.SCD_PROD_CTRL_NM)    LIKE #cMsg.scdProdCtrlNm_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.thirdProdCtrlNm_HB">
                 AND UPPER(MD.THIRD_PROD_CTRL_NM)  LIKE #cMsg.thirdProdCtrlNm_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.frthProdCtrlNm_HB">
                 AND UPPER(MD.FRTH_PROD_CTRL_NM)   LIKE #cMsg.frthProdCtrlNm_HB#
                 </isNotNull>
                 AND MD.INVTY_CTRL_FLG          = #flgY#
                 AND MD.EZCANCELFLAG            = '0'
                 <isNotNull property="cMsg.coaProjCd_HB">
                 AND MD.COA_MDSE_TP_CD          = #cMsg.coaProjCd_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.mdseItemTpCd_HB">
                 AND MD.MDSE_ITEM_TP_CD         = #cMsg.mdseItemTpCd_HB#
                 </isNotNull>
                 AND MD.GLBL_CMPY_CD            = CP.GLBL_CMPY_CD
                 AND MD.COA_MDSE_TP_CD          = CP.COA_PROJ_CD
                 AND CP.EZCANCELFLAG            = '0'
                 AND MD.GLBL_CMPY_CD            = MIT.GLBL_CMPY_CD
                 AND MD.MDSE_ITEM_TP_CD         = MIT.MDSE_ITEM_TP_CD
                 AND MIT.EZCANCELFLAG           = '0'
                 AND RD.GLBL_CMPY_CD            = SS.GLBL_CMPY_CD
                 AND RD.INVTY_STK_STS_CD        = SS.STK_STS_CD
                 AND SS.EZCANCELFLAG            = '0'
                 AND RD.GLBL_CMPY_CD            = DRSW.GLBL_CMPY_CD
                 AND RD.INVTY_LOC_CD            = DRSW.INVTY_LOC_CD
                 <isNotNull property="whCdList">
                     <iterate property="whCdList" var="whCdList[]" open="AND (DRSW.RTL_WH_CD LIKE " conjunction= "OR DRSW.RTL_WH_CD LIKE " close=")">
                         #whCdList[]#
                     </iterate>
                 </isNotNull>
                 <isNotNull property="swhCdList">
                     <iterate property="swhCdList" var="swhCdList[]" open="AND (DRSW.RTL_SWH_CD LIKE " conjunction= "OR DRSW.RTL_SWH_CD LIKE " close=")">
                         #swhCdList[]#
                     </iterate>
                 </isNotNull>
                 AND DRSW.EZCANCELFLAG          = '0'
                 AND DRSW.GLBL_CMPY_CD          = DRW.GLBL_CMPY_CD
                 AND DRSW.RTL_WH_CD             = DRW.RTL_WH_CD
                 AND DRW.EZCANCELFLAG           = '0'
                 AND DRW.GLBL_CMPY_CD           = RWC.GLBL_CMPY_CD
                 AND DRW.RTL_WH_CATG_CD         = RWC.RTL_WH_CATG_CD
                 <isNotNull property="cMsg.rtlWhCatgCd_HB">
                 AND RWC.RTL_WH_CATG_CD         = #cMsg.rtlWhCatgCd_HB#
                 </isNotNull>
                 <!-- START 2023/03/07 S.Dong [QC#61205, ADD] -->
                 <isNotNull property="cMsg.whOwnrCd_HB">
                 AND DRW.WH_OWNR_CD             = #cMsg.whOwnrCd_HB#
                 </isNotNull>
                 <!-- END 2023/03/07 S.Dong [QC#61205, ADD] -->
                 AND RWC.EZCANCELFLAG           = '0'
                 AND RD.GLBL_CMPY_CD            = FRW.GLBL_CMPY_CD
                 AND RD.SHIP_FROM_RTL_WH_CD     = FRW.RTL_WH_CD
                 AND FRW.EZCANCELFLAG           = '0'
                 AND SOD.GLBL_CMPY_CD           = SMM.GLBL_CMPY_CD(+)
                 AND SOD.TRX_HDR_NUM            = SMM.TRX_HDR_NUM(+)
                 AND SOD.TRX_LINE_NUM           = SMM.TRX_LINE_NUM(+)
                 AND SOD.TRX_LINE_SUB_NUM       = SMM.TRX_LINE_SUB_NUM(+)
                 <isNotNull property="serNumList">
                     <iterate property="serNumList" var="serNumList[]" open="AND (SMM.SER_NUM LIKE " conjunction= "OR SMM.SER_NUM LIKE " close=")">
                         #serNumList[]#
                     </iterate>
                 </isNotNull>
                 AND SMM.EZCANCELFLAG(+)        = '0'
                 <isEqual property="cMsg.xxChkBox_HB" compareValue="Y">
                 AND MD.RTRN_REQ_PRT_FLG        = #cMsg.xxChkBox_HB#
                 </isEqual>
                 <isNotNull property="cMsg.rtrnCtrlTpVndRelnPk_HB">
                 AND MD.RTRN_CTRL_TP_VND_RELN_PK      = #cMsg.rtrnCtrlTpVndRelnPk_HB#
                 </isNotNull>
                 <!-- END 2017/12/18 S.Katsuma [QC#21834,ADD] -->
             </isEqual>

             <!-- W4I  -->
             <isEqual property="locStsW4IFlg" compareValue="Y">

                 <isEqual property="locStsWHTransFlg" compareValue="Y">
                     UNION ALL
                 </isEqual>
                 <isNotEqual property="locStsWHTransFlg" compareValue="Y">
                     <isEqual property="locStsDcStkFlg" compareValue="Y">
                         UNION ALL
                     </isEqual>
                 </isNotEqual>

                 SELECT
                     SP.GLBL_CMPY_CD
                    ,SOD.MDSE_CD
                    ,MD.MDSE_DESC_SHORT_TXT
                    ,SMM.SER_NUM
                    ,RWC.RTL_WH_CATG_DESC_TXT
                    ,DILV.RTL_WH_CD
                    ,DILV.RTL_WH_NM
                    ,DILV.RTL_SWH_CD
                    ,SOD.INVTY_LOC_CD
                    ,NVL((
                        SELECT
                           MI.ROP_QTY
                        FROM
                           MRP_INFO MI
                        WHERE
                            SOD.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
                        AND SOD.INVTY_LOC_CD        = MI.INVTY_LOC_CD
                        AND SOD.MDSE_CD             = MI.MDSE_CD
                        AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
                        AND MI.EZCANCELFLAG         = '0'
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                        AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
                    ),
                    (
                        SELECT
                            MI.ROP_QTY
                        FROM
                            MRP_INFO MI
                        WHERE
                            SOD.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
                        AND SOD.INVTY_LOC_CD        = MI.INVTY_LOC_CD
                        AND SUBSTR(SOD.MDSE_CD, 0, 8) = MI.MDSE_CD
                        AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
                        AND MI.EZCANCELFLAG         = '0'
                        AND EXISTS(
                                SELECT
                                    1
                                FROM
                                    ORD_TAKE_MDSE OTM
                                WHERE
                                    MI.GLBL_CMPY_CD  = OTM.GLBL_CMPY_CD
                                AND MI.MDSE_CD = OTM.ORD_TAKE_MDSE_CD
                                AND OTM.EZCANCELFLAG = '0'
                        )
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                        AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
                    )
                    ) ROP_QTY
                    ,NVL((
                        SELECT
                           MI.MAX_INVTY_QTY
                        FROM
                           MRP_INFO MI
                        WHERE
                            SOD.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
                        AND SOD.INVTY_LOC_CD        = MI.INVTY_LOC_CD
                        AND SOD.MDSE_CD             = MI.MDSE_CD
                        AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
                        AND MI.EZCANCELFLAG         = '0'
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                        AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
                    ),
                    (
                        SELECT
                            MI.MAX_INVTY_QTY
                        FROM
                            MRP_INFO MI
                        WHERE
                            SOD.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
                        AND SOD.INVTY_LOC_CD        = MI.INVTY_LOC_CD
                        AND SUBSTR(SOD.MDSE_CD, 0, 8) = MI.MDSE_CD
                        AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
                        AND MI.EZCANCELFLAG         = '0'
                        AND EXISTS(
                                SELECT
                                    1
                                FROM
                                    ORD_TAKE_MDSE OTM
                                WHERE
                                    MI.GLBL_CMPY_CD  = OTM.GLBL_CMPY_CD
                                AND MI.MDSE_CD = OTM.ORD_TAKE_MDSE_CD
                                AND OTM.EZCANCELFLAG = '0'
                        )
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                        AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
                    )) MAX_INVTY_QTY
                    ,DECODE(SMM.SVC_MACH_MSTR_PK, NULL, SP.ORD_QTY, 1) AS INVTY_QTY
                    ,0                                                 AS INVTY_AVAL_QTY
                    ,CASE WHEN SMM.SVC_MACH_MSTR_PK IS NOT NULL THEN SMM.SVC_CONFIG_MSTR_PK
                          WHEN MD.INSTL_BASE_CTRL_FLG = #flgY# THEN SO.SVC_CONFIG_MSTR_PK
                          ELSE NULL
                     END  AS SVC_CONFIG_MSTR_PK
                    ,#locStsW4I#   AS LOC_STS_CD
                    ,#locStsW4INm# AS LOC_STS_DESC_TXT
                    ,SP.STK_STS_CD
                    ,SS.STK_STS_DESC_TXT
                    ,DECODE(PVV.VND_CD, NULL, DILV.RTL_WH_NM, PVV.DPLY_VND_NM) AS SHIP_FROM_ACCT_NM
                    ,DAC.DS_ACCT_NM                                            AS SHIP_TO_ACCT_NM
                    ,SOT.SCE_ORD_TP_NM
                    ,SP.TRX_HDR_NUM
                    ,CASE WHEN CD.DS_ORD_POSN_NUM IS NULL THEN NULL
                          ELSE CONCAT(CD.DS_ORD_POSN_NUM, '.') || CONCAT(CD.DS_CPO_LINE_NUM, DECODE(CD.DS_CPO_LINE_SUB_NUM, NULL, '', '.')) || CD.DS_CPO_LINE_SUB_NUM
                     END  AS DPLY_LINE_NUM
                    ,DECODE(MD.COA_MDSE_TP_CD,      NULL, MD.COA_MDSE_TP_CD,      MD.COA_MDSE_TP_CD      || ':' || CP.COA_PROJ_DESC_TXT)      AS COA_PROJ_LONG_DESC_TXT
                    ,DECODE(MD.MDSE_ITEM_TP_CD,     NULL, MD.MDSE_ITEM_TP_CD,     MD.MDSE_ITEM_TP_CD     || ':' || MIT.MDSE_ITEM_TP_DESC_TXT) AS MDSE_ITEM_TP_LONG_DESC_TXT
                    ,DECODE(MD.ZEROTH_PROD_CTRL_CD, NULL, MD.ZEROTH_PROD_CTRL_CD, MD.ZEROTH_PROD_CTRL_CD || ':' || MD.ZEROTH_PROD_CTRL_NM)    AS ZEROTH_PROD_CTRL_DESC_TXT
                    ,DECODE(MD.FIRST_PROD_CTRL_CD,  NULL, MD.FIRST_PROD_CTRL_CD,  MD.FIRST_PROD_CTRL_CD  || ':' || MD.FIRST_PROD_CTRL_NM)     AS FIRST_PROD_CTRL_DESC_TXT
                    ,DECODE(MD.SCD_PROD_CTRL_CD,    NULL, MD.SCD_PROD_CTRL_CD,    MD.SCD_PROD_CTRL_CD    || ':' || MD.SCD_PROD_CTRL_NM)       AS SCD_PROD_CTRL_DESC_TXT
                    ,DECODE(MD.THIRD_PROD_CTRL_CD,  NULL, MD.THIRD_PROD_CTRL_CD,  MD.THIRD_PROD_CTRL_CD  || ':' || MD.THIRD_PROD_CTRL_NM)     AS THIRD_PROD_CTRL_DESC_TXT
                    ,DECODE(MD.FRTH_PROD_CTRL_CD,   NULL, MD.FRTH_PROD_CTRL_CD,   MD.FRTH_PROD_CTRL_CD   || ':' || MD.FRTH_PROD_CTRL_NM)      AS FRTH_PROD_CTRL_DESC_TXT
                    ,CASE WHEN SMM.SVC_CONFIG_MSTR_PK IS NOT NULL THEN #flgY#
                          WHEN SMM.SER_NUM            IS NULL     THEN #flgN#
                          WHEN SMM.SVC_MACH_MSTR_PK   IS NOT NULL THEN #flgY#
                          ELSE #flgN#
                     END  AS MACH_FLG
                    ,CASE WHEN SMM.SVC_CONFIG_MSTR_PK IS NOT NULL THEN SMM.SVC_MACH_MSTR_PK
                          WHEN SMM.SER_NUM            IS NULL     THEN NULL
                          ELSE SMM.SVC_MACH_MSTR_PK
                     END  AS SVC_MACH_MSTR_PK
                    ,NULL AS STK_IN_DT
                 FROM
                     SHPG_PLN           SP
                    ,SHPG_STS           SPS
                    ,SHPG_ORD_DTL       SOD
                    ,SHPG_ORD           SO
                    ,SCE_ORD_TP         SOT
                    ,CPO_DTL            CD
                    ,CPO                DC
                    ,DS_ORD_TP_PROC_DFN OPD
                    ,MDSE               MD
                    ,COA_PROJ           CP
                    ,MDSE_ITEM_TP       MIT
                    ,STK_STS            SS
                    ,DS_INVTY_LOC_V     DILV
                    <!-- START 2023/03/07 S.Dong [QC#61205, MOD] -->
                    ,RTL_WH             RW1
                    <!-- END 2023/03/07 S.Dong [QC#61205, MOD] -->
                    ,RTL_WH_CATG        RWC
                    ,SHIP_TO_CUST       STC
                    ,SELL_TO_CUST       DAC
                    ,PO_VND_V           PVV
                    ,SVC_MACH_MSTR      SMM
                 WHERE
                     SP.GLBL_CMPY_CD            = #glblCmpyCd#
                 <isNotNull property="toLocCdList">
                     <iterate property="toLocCdList" var="toLocCdList[]" open="AND (SP.SHIP_TO_CUST_CD LIKE " conjunction= "OR SP.SHIP_TO_CUST_CD LIKE " close=")">
                         #toLocCdList[]#
                     </iterate>
                 </isNotNull>
                 <isNotNull property="stkStsList">
                     <iterate property="stkStsList" var="stkStsList[]" open="AND SP.STK_STS_CD IN (" conjunction= ", " close=")">
                         #stkStsList[]#
                     </iterate>
                 </isNotNull>
                 AND SP.REV_RECOG_FLG           = #flgN#
                 AND SP.SHIP_PLN_CANC_FLG       = #flgN#
                 AND SP.EZCANCELFLAG            = '0'
                 AND SP.GLBL_CMPY_CD            = SPS.GLBL_CMPY_CD
                 AND SP.SHPG_STS_CD             = SPS.SHPG_STS_CD
                 AND SPS.SHIP_FLG               = #flgY#
                 AND SPS.EZCANCELFLAG           = '0'
                 AND SP.GLBL_CMPY_CD            = SOD.GLBL_CMPY_CD
                 AND SP.SHPG_PLN_NUM            = SOD.SHPG_PLN_NUM
                 <isNotNull property="mdseCdList">
                     <iterate property="mdseCdList" var="mdseCdList[]" open="AND (SOD.MDSE_CD LIKE " conjunction= "OR SOD.MDSE_CD LIKE " close=")">
                         #mdseCdList[]#
                     </iterate>
                 </isNotNull>
                 AND SOD.EZCANCELFLAG           = '0'
                 AND SOD.GLBL_CMPY_CD           = SO.GLBL_CMPY_CD
                 AND SOD.SO_NUM                 = SO.SO_NUM
                 AND SO.SCE_ORD_TP_CD           = #sceOrdTpRS#
                 AND SO.EZCANCELFLAG            = '0'
                 AND SO.GLBL_CMPY_CD            = SOT.GLBL_CMPY_CD
                 AND SO.SCE_ORD_TP_CD           = SOT.SCE_ORD_TP_CD
                 AND SOT.INBD_OTBD_CD           = #inbdOtbdCdOt#
                 AND SOT.EZCANCELFLAG           = '0'
                 AND SP.GLBL_CMPY_CD            = CD.GLBL_CMPY_CD
                 AND SP.TRX_HDR_NUM             = CD.CPO_ORD_NUM
                 AND SP.TRX_LINE_NUM            = CD.CPO_DTL_LINE_NUM
                 AND SP.TRX_LINE_SUB_NUM        = CD.CPO_DTL_LINE_SUB_NUM
                 AND CD.EZCANCELFLAG            = '0'
                 AND CD.GLBL_CMPY_CD            = DC.GLBL_CMPY_CD
                 AND CD.CPO_ORD_NUM             = DC.CPO_ORD_NUM
                 AND DC.EZCANCELFLAG            = '0'
                 AND DC.GLBL_CMPY_CD            = OPD.GLBL_CMPY_CD
                 AND DC.DS_ORD_TP_CD            = OPD.DS_ORD_TP_CD
                 AND OPD.OUT_OF_WH_NODE_USG_FLG = #flgN#
                 AND OPD.EZCANCELFLAG           = '0'
                 AND SOD.GLBL_CMPY_CD           = MD.GLBL_CMPY_CD
                 AND SOD.MDSE_CD                = MD.MDSE_CD
                 <isNotNull property="cMsg.zerothProdCtrlNm_HB">
                 AND UPPER(MD.ZEROTH_PROD_CTRL_NM) LIKE #cMsg.zerothProdCtrlNm_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.firstProdCtrlNm_HB">
                 AND UPPER(MD.FIRST_PROD_CTRL_NM)  LIKE #cMsg.firstProdCtrlNm_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.scdProdCtrlNm_HB">
                 AND UPPER(MD.SCD_PROD_CTRL_NM)    LIKE #cMsg.scdProdCtrlNm_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.thirdProdCtrlNm_HB">
                 AND UPPER(MD.THIRD_PROD_CTRL_NM)  LIKE #cMsg.thirdProdCtrlNm_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.frthProdCtrlNm_HB">
                 AND UPPER(MD.FRTH_PROD_CTRL_NM)   LIKE #cMsg.frthProdCtrlNm_HB#
                 </isNotNull>
                 AND MD.INVTY_CTRL_FLG          = #flgY#
                 AND MD.EZCANCELFLAG            = '0'
                 <isNotNull property="cMsg.coaProjCd_HB">
                 AND MD.COA_MDSE_TP_CD          = #cMsg.coaProjCd_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.mdseItemTpCd_HB">
                 AND MD.MDSE_ITEM_TP_CD         = #cMsg.mdseItemTpCd_HB#
                 </isNotNull>
                 AND MD.GLBL_CMPY_CD            = CP.GLBL_CMPY_CD
                 AND MD.COA_MDSE_TP_CD          = CP.COA_PROJ_CD
                 AND CP.EZCANCELFLAG            = '0'
                 AND MD.GLBL_CMPY_CD            = MIT.GLBL_CMPY_CD
                 AND MD.MDSE_ITEM_TP_CD         = MIT.MDSE_ITEM_TP_CD
                 AND MIT.EZCANCELFLAG           = '0'
                 AND SP.GLBL_CMPY_CD            = SS.GLBL_CMPY_CD
                 AND SP.STK_STS_CD              = SS.STK_STS_CD
                 AND SS.EZCANCELFLAG            = '0'
                 AND SOD.GLBL_CMPY_CD           = DILV.GLBL_CMPY_CD
                 AND SOD.INVTY_LOC_CD           = DILV.INVTY_LOC_CD
                 <isNotNull property="whCdList">
                     <iterate property="whCdList" var="whCdList[]" open="AND (DILV.RTL_WH_CD LIKE " conjunction= "OR DILV.RTL_WH_CD LIKE " close=")">
                         #whCdList[]#
                     </iterate>
                 </isNotNull>
                 <isNotNull property="swhCdList">
                     <iterate property="swhCdList" var="swhCdList[]" open="AND (DILV.RTL_SWH_CD LIKE " conjunction= "OR DILV.RTL_SWH_CD LIKE " close=")">
                         #swhCdList[]#
                     </iterate>
                 </isNotNull>
                 AND DILV.EZCANCELFLAG          = '0'
                 AND DILV.GLBL_CMPY_CD          = RWC.GLBL_CMPY_CD
                 AND DILV.RTL_WH_CATG_CD        = RWC.RTL_WH_CATG_CD
                 <isNotNull property="cMsg.rtlWhCatgCd_HB">
                 AND RWC.RTL_WH_CATG_CD         = #cMsg.rtlWhCatgCd_HB#
                 </isNotNull>
                 <!-- START 2023/03/07 S.Dong [QC#61205, ADD] -->
                 AND DILV.RTL_WH_CD             = RW1.RTL_WH_CD
                 AND DILV.GLBL_CMPY_CD          = RW1.GLBL_CMPY_CD
                 AND RW1.EZCANCELFLAG           = '0'
                 <isNotNull property="cMsg.whOwnrCd_HB">
                 AND RW1.WH_OWNR_CD             = #cMsg.whOwnrCd_HB#
                 </isNotNull>
                 <!-- END 2023/03/07 S.Dong [QC#61205, ADD] -->
                 AND RWC.EZCANCELFLAG           = '0'
                 AND SP.GLBL_CMPY_CD            = STC.GLBL_CMPY_CD
                 AND SP.SHIP_TO_CUST_CD         = STC.SHIP_TO_CUST_CD
                 AND STC.EZCANCELFLAG           = '0'
                 AND STC.GLBL_CMPY_CD           = DAC.GLBL_CMPY_CD(+)
                 AND STC.SELL_TO_CUST_CD        = DAC.SELL_TO_CUST_CD(+)
                 AND DAC.EZCANCELFLAG(+)        = '0'
                 AND SP.GLBL_CMPY_CD            = PVV.GLBL_CMPY_CD(+)
                 AND SP.INVTY_LOC_CD            = PVV.VND_CD(+)
                 AND PVV.EZCANCELFLAG(+)        = '0'
                 AND CD.GLBL_CMPY_CD            = SMM.GLBL_CMPY_CD(+)
                 AND CD.CPO_ORD_NUM             = SMM.CPO_ORD_NUM(+)
                 AND CD.CPO_DTL_LINE_NUM        = SMM.CPO_DTL_LINE_NUM(+)
                 AND CD.CPO_DTL_LINE_SUB_NUM    = SMM.CPO_DTL_LINE_SUB_NUM(+)
                 <isNotNull property="serNumList">
                     <iterate property="serNumList" var="serNumList[]" open="AND (SMM.SER_NUM LIKE " conjunction= "OR SMM.SER_NUM LIKE " close=")">
                         #serNumList[]#
                     </iterate>
                 </isNotNull>
                 <isNotNull property="configIDList">
                     <iterate property="configIDList" var="configIDList[]" open="AND (SMM.SVC_CONFIG_MSTR_PK LIKE " conjunction= "OR SMM.SVC_CONFIG_MSTR_PK LIKE " close=")">
                         #configIDList[]#
                     </iterate>
                 </isNotNull>
                 AND SMM.EZCANCELFLAG(+)        = '0'
                 <isEqual property="cMsg.xxChkBox_HB" compareValue="Y">
                 AND MD.RTRN_REQ_PRT_FLG        = #cMsg.xxChkBox_HB#
                 </isEqual>
                 <isNotNull property="cMsg.rtrnCtrlTpVndRelnPk_HB">
                 AND MD.RTRN_CTRL_TP_VND_RELN_PK      = #cMsg.rtrnCtrlTpVndRelnPk_HB#
                 </isNotNull>
                 <!-- END 2017/12/18 S.Katsuma [QC#21834,ADD] -->
             </isEqual>

             <!-- In-Transit(PO)  -->
             <isNull property="configIDList">

                 <isEqual property="locStsInTrnstFlg" compareValue="Y">

                     <isEqual property="locStsW4IFlg" compareValue="Y">
                         UNION ALL
                     </isEqual>
                     <isNotEqual property="locStsW4IFlg" compareValue="Y">
                         <isEqual property="locStsWHTransFlg" compareValue="Y">
                             UNION ALL
                         </isEqual>
                         <isNotEqual property="locStsWHTransFlg" compareValue="Y">
                             <isEqual property="locStsDcStkFlg" compareValue="Y">
                                 UNION ALL
                             </isEqual>
                         </isNotEqual>
                     </isNotEqual>

                     SELECT
                         RH.GLBL_CMPY_CD
                        ,RD.MDSE_CD
                        ,MD.MDSE_DESC_SHORT_TXT
                        ,RSR.SER_NUM
                        ,RWC.RTL_WH_CATG_DESC_TXT
                        ,RW.RTL_WH_CD
                        ,RW.RTL_WH_NM
                        ,RSW.RTL_SWH_CD
                        ,RD.INVTY_LOC_CD
                        ,NVL((
	                        SELECT
	                           MI.ROP_QTY
	                        FROM
	                           MRP_INFO MI
	                        WHERE
	                            RD.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
	                        AND RD.INVTY_LOC_CD        = MI.INVTY_LOC_CD
	                        AND RD.MDSE_CD             = MI.MDSE_CD
	                        AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
	                        AND MI.EZCANCELFLAG         = '0'
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                            AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
	                    ),
	                    (
	                        SELECT
	                            MI.ROP_QTY
	                        FROM
	                            MRP_INFO MI
	                        WHERE
	                            RD.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
	                        AND RD.INVTY_LOC_CD        = MI.INVTY_LOC_CD
	                        AND SUBSTR(RD.MDSE_CD, 0, 8) = MI.MDSE_CD
	                        AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
	                        AND MI.EZCANCELFLAG         = '0'
	                        AND EXISTS(
	                                SELECT
	                                    1
	                                FROM
	                                    ORD_TAKE_MDSE OTM
	                                WHERE
	                                    MI.GLBL_CMPY_CD  = OTM.GLBL_CMPY_CD
	                                AND MI.MDSE_CD = OTM.ORD_TAKE_MDSE_CD
	                                AND OTM.EZCANCELFLAG = '0'
	                        )
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                            AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
	                    )
	                    ) ROP_QTY
	                    ,NVL((
	                        SELECT
	                           MI.MAX_INVTY_QTY
	                        FROM
	                           MRP_INFO MI
	                        WHERE
	                            RD.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
	                        AND RD.INVTY_LOC_CD        = MI.INVTY_LOC_CD
	                        AND RD.MDSE_CD             = MI.MDSE_CD
	                        AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
	                        AND MI.EZCANCELFLAG         = '0'
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                            AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
	                    ),
	                    (
	                        SELECT
	                            MI.MAX_INVTY_QTY
	                        FROM
	                            MRP_INFO MI
	                        WHERE
	                            RD.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
	                        AND RD.INVTY_LOC_CD        = MI.INVTY_LOC_CD
	                        AND SUBSTR(RD.MDSE_CD, 0, 8) = MI.MDSE_CD
	                        AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
	                        AND MI.EZCANCELFLAG         = '0'
	                        AND EXISTS(
	                                SELECT
	                                    1
	                                FROM
	                                    ORD_TAKE_MDSE OTM
	                                WHERE
	                                    MI.GLBL_CMPY_CD  = OTM.GLBL_CMPY_CD
	                                AND MI.MDSE_CD = OTM.ORD_TAKE_MDSE_CD
	                                AND OTM.EZCANCELFLAG = '0'
	                        )
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                            AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
	                    )) MAX_INVTY_QTY
                        ,DECODE(RSR.SER_NUM, NULL, RD.RWS_QTY - RD.RWS_PUT_AWAY_QTY, 1) AS INVTY_QTY
                        ,0                                                              AS INVTY_AVAL_QTY
                        ,NULL                     AS SVC_CONFIG_MSTR_PK
                        ,#locStsInTrnst#          AS LOC_STS_CD
                        ,#locStsInTrnstNm#        AS LOC_STS_DESC_TXT
                        ,RD.INVTY_STK_STS_CD      AS STK_STS_CD
                        ,SS.STK_STS_DESC_TXT
                        ,PVV.DPLY_VND_NM          AS SHIP_FROM_ACCT_NM
                        ,RW.RTL_WH_NM             AS SHIP_TO_ACCT_NM
                        ,SOT.SCE_ORD_TP_NM
                        ,PD.PO_ORD_NUM            AS TRX_HDR_NUM
                        ,PD.DISP_PO_DTL_LINE_NUM  AS DPLY_LINE_NUM
                        ,DECODE(MD.COA_MDSE_TP_CD,      NULL, MD.COA_MDSE_TP_CD,      MD.COA_MDSE_TP_CD      || ':' || CP.COA_PROJ_DESC_TXT)      AS COA_PROJ_LONG_DESC_TXT
                        ,DECODE(MD.MDSE_ITEM_TP_CD,     NULL, MD.MDSE_ITEM_TP_CD,     MD.MDSE_ITEM_TP_CD     || ':' || MIT.MDSE_ITEM_TP_DESC_TXT) AS MDSE_ITEM_TP_LONG_DESC_TXT
                        ,DECODE(MD.ZEROTH_PROD_CTRL_CD, NULL, MD.ZEROTH_PROD_CTRL_CD, MD.ZEROTH_PROD_CTRL_CD || ':' || MD.ZEROTH_PROD_CTRL_NM)    AS ZEROTH_PROD_CTRL_DESC_TXT
                        ,DECODE(MD.FIRST_PROD_CTRL_CD,  NULL, MD.FIRST_PROD_CTRL_CD,  MD.FIRST_PROD_CTRL_CD  || ':' || MD.FIRST_PROD_CTRL_NM)     AS FIRST_PROD_CTRL_DESC_TXT
                        ,DECODE(MD.SCD_PROD_CTRL_CD,    NULL, MD.SCD_PROD_CTRL_CD,    MD.SCD_PROD_CTRL_CD    || ':' || MD.SCD_PROD_CTRL_NM)       AS SCD_PROD_CTRL_DESC_TXT
                        ,DECODE(MD.THIRD_PROD_CTRL_CD,  NULL, MD.THIRD_PROD_CTRL_CD,  MD.THIRD_PROD_CTRL_CD  || ':' || MD.THIRD_PROD_CTRL_NM)     AS THIRD_PROD_CTRL_DESC_TXT
                        ,DECODE(MD.FRTH_PROD_CTRL_CD,   NULL, MD.FRTH_PROD_CTRL_CD,   MD.FRTH_PROD_CTRL_CD   || ':' || MD.FRTH_PROD_CTRL_NM)      AS FRTH_PROD_CTRL_DESC_TXT
                        ,#flgN#  AS MACH_FLG
                        ,NULL    AS SVC_MACH_MSTR_PK
                        ,NULL    AS STK_IN_DT
                     FROM
                         RWS_HDR        RH
                        ,RWS_DTL        RD
                        ,RWS_STS        RS
                        ,SCE_ORD_TP     SOT
                        ,PO_DTL         PD
                        ,PO_VND_V       PVV
                        ,MDSE           MD
                        ,COA_PROJ       CP
                        ,MDSE_ITEM_TP   MIT
                        ,STK_STS        SS
                        ,RTL_SWH        RSW
                        ,RTL_WH         RW
                        ,RTL_WH_CATG    RWC
                        ,RWS_SER        RSR
                     WHERE
                         RH.GLBL_CMPY_CD        = #glblCmpyCd#
                     <isNotNull property="toLocCdList">
                         <iterate property="toLocCdList" var="toLocCdList[]" open="AND (RH.WH_CD LIKE " conjunction= "OR RH.WH_CD LIKE " close=")">
                             #toLocCdList[]#
                         </iterate>
                     </isNotNull>
                     AND RH.SCE_ORD_TP_CD       = #sceOrdTpDG#
                     AND RH.EZCANCELFLAG        = '0'
                     AND RH.GLBL_CMPY_CD        = RD.GLBL_CMPY_CD
                     AND RH.RWS_NUM             = RD.RWS_NUM
                     <isNotNull property="mdseCdList">
                         <iterate property="mdseCdList" var="mdseCdList[]" open="AND (RD.MDSE_CD LIKE " conjunction= "OR RD.MDSE_CD LIKE " close=")">
                             #mdseCdList[]#
                         </iterate>
                     </isNotNull>
                     <isNotNull property="stkStsList">
                         <iterate property="stkStsList" var="stkStsList[]" open="AND RD.INVTY_STK_STS_CD IN (" conjunction= ", " close=")">
                             #stkStsList[]#
                         </iterate>
                     </isNotNull>
                     AND RD.EZCANCELFLAG        = '0'
                     AND RD.GLBL_CMPY_CD        = RS.GLBL_CMPY_CD
                     AND RD.RWS_STS_CD          = RS.RWS_STS_CD
                     AND RS.RWS_OPEN_FLG        = #flgY#
                     AND RS.EZCANCELFLAG        = '0'
                     AND RH.GLBL_CMPY_CD        = SOT.GLBL_CMPY_CD
                     AND RH.SCE_ORD_TP_CD       = SOT.SCE_ORD_TP_CD
                     AND SOT.INBD_OTBD_CD       = '1'
                     AND SOT.EZCANCELFLAG       = '0'
                     AND RH.GLBL_CMPY_CD        = PD.GLBL_CMPY_CD
                     AND RH.PO_RCV_TRX_HDR_NUM  = PD.PO_ORD_NUM
                     AND RD.PO_RCV_TRX_LINE_NUM = PD.PO_ORD_DTL_LINE_NUM
                     AND PD.EZCANCELFLAG        = '0'
                     AND RH.GLBL_CMPY_CD        = PVV.GLBL_CMPY_CD
                     AND RH.FROM_LOC_CD         = PVV.VND_CD
                     AND PVV.EZCANCELFLAG       = '0'
                     AND RD.GLBL_CMPY_CD        = MD.GLBL_CMPY_CD
                     AND RD.MDSE_CD             = MD.MDSE_CD
                     <isNotNull property="cMsg.zerothProdCtrlNm_HB">
                     AND UPPER(MD.ZEROTH_PROD_CTRL_NM) LIKE #cMsg.zerothProdCtrlNm_HB#
                     </isNotNull>
                     <isNotNull property="cMsg.firstProdCtrlNm_HB">
                     AND UPPER(MD.FIRST_PROD_CTRL_NM)  LIKE #cMsg.firstProdCtrlNm_HB#
                     </isNotNull>
                     <isNotNull property="cMsg.scdProdCtrlNm_HB">
                     AND UPPER(MD.SCD_PROD_CTRL_NM)    LIKE #cMsg.scdProdCtrlNm_HB#
                     </isNotNull>
                     <isNotNull property="cMsg.thirdProdCtrlNm_HB">
                     AND UPPER(MD.THIRD_PROD_CTRL_NM)  LIKE #cMsg.thirdProdCtrlNm_HB#
                     </isNotNull>
                     <isNotNull property="cMsg.frthProdCtrlNm_HB">
                     AND UPPER(MD.FRTH_PROD_CTRL_NM)   LIKE #cMsg.frthProdCtrlNm_HB#
                     </isNotNull>
                     AND MD.INVTY_CTRL_FLG      = #flgY#
                     AND MD.EZCANCELFLAG        = '0'
                     <isNotNull property="cMsg.coaProjCd_HB">
                     AND MD.COA_MDSE_TP_CD      = #cMsg.coaProjCd_HB#
                     </isNotNull>
                     <isNotNull property="cMsg.mdseItemTpCd_HB">
                     AND MD.MDSE_ITEM_TP_CD     = #cMsg.mdseItemTpCd_HB#
                     </isNotNull>
                     AND MD.GLBL_CMPY_CD        = CP.GLBL_CMPY_CD
                     AND MD.COA_MDSE_TP_CD      = CP.COA_PROJ_CD
                     AND CP.EZCANCELFLAG        = '0'
                     AND MD.GLBL_CMPY_CD        = MIT.GLBL_CMPY_CD
                     AND MD.MDSE_ITEM_TP_CD     = MIT.MDSE_ITEM_TP_CD
                     AND MIT.EZCANCELFLAG       = '0'
                     AND RD.GLBL_CMPY_CD        = SS.GLBL_CMPY_CD
                     AND RD.INVTY_STK_STS_CD    = SS.STK_STS_CD
                     AND SS.EZCANCELFLAG        = '0'
                     AND RD.GLBL_CMPY_CD        = RSW.GLBL_CMPY_CD
                     AND RD.INVTY_LOC_CD        = RSW.INVTY_LOC_CD
                     <isNotNull property="whCdList">
                         <iterate property="whCdList" var="whCdList[]" open="AND (RSW.RTL_WH_CD LIKE " conjunction= "OR RSW.RTL_WH_CD LIKE " close=")">
                             #whCdList[]#
                         </iterate>
                     </isNotNull>
                     <isNotNull property="swhCdList">
                         <iterate property="swhCdList" var="swhCdList[]" open="AND (RSW.RTL_SWH_CD LIKE " conjunction= "OR RSW.RTL_SWH_CD LIKE " close=")">
                             #swhCdList[]#
                         </iterate>
                     </isNotNull>
                     AND RSW.EZCANCELFLAG       = '0'
                     AND RSW.GLBL_CMPY_CD       = RW.GLBL_CMPY_CD
                     AND RSW.RTL_WH_CD          = RW.RTL_WH_CD
                     ANd RW.EZCANCELFLAG        = '0'
                     AND RW.GLBL_CMPY_CD        = RWC.GLBL_CMPY_CD
                     AND RW.RTL_WH_CATG_CD      = RWC.RTL_WH_CATG_CD
                     <isNotNull property="cMsg.rtlWhCatgCd_HB">
                     AND RWC.RTL_WH_CATG_CD     = #cMsg.rtlWhCatgCd_HB#
                     </isNotNull>
                     <!-- START 2023/03/07 S.Dong [QC#61205, ADD] -->
                     <isNotNull property="cMsg.whOwnrCd_HB">
                     AND RW.WH_OWNR_CD          = #cMsg.whOwnrCd_HB#
                     </isNotNull>
                     <!-- END 2023/03/07 S.Dong [QC#61205, ADD] -->
                     AND RWC.EZCANCELFLAG       = '0'
                     AND RD.GLBL_CMPY_CD        = RSR.GLBL_CMPY_CD(+)
                     AND RD.RWS_NUM             = RSR.RWS_NUM(+)
                     AND RD.RWS_DTL_LINE_NUM    = RSR.RWS_LINE_NUM(+)
                     <isNotNull property="serNumList">
                         <iterate property="serNumList" var="serNumList[]" open="AND (RSR.SER_NUM LIKE " conjunction= "OR RSR.SER_NUM LIKE " close=")">
                             #serNumList[]#
                         </iterate>
                     </isNotNull>
                     AND RSR.EZCANCELFLAG(+)    = '0'
                     AND NOT EXISTS (SELECT
                                         1
                                     FROM
                                         RWS_PUT_AWAY_SER P
                                     WHERE
                                         P.GLBL_CMPY_CD = RSR.GLBL_CMPY_CD
                                     AND P.RWS_NUM      = RSR.RWS_NUM
                                     AND P.RWS_LINE_NUM = RSR.RWS_LINE_NUM
                                     AND P.SER_NUM      = RSR.SER_NUM
                                    )
                     <isEqual property="cMsg.xxChkBox_HB" compareValue="Y">
                     AND MD.RTRN_REQ_PRT_FLG    = #cMsg.xxChkBox_HB#
                     </isEqual>
                     <isNotNull property="cMsg.rtrnCtrlTpVndRelnPk_HB">
                     AND MD.RTRN_CTRL_TP_VND_RELN_PK      = #cMsg.rtrnCtrlTpVndRelnPk_HB#
                     </isNotNull>
                     <!-- END 2017/12/18 S.Katsuma [QC#21834,ADD] -->
                 </isEqual>
             </isNull>

             <!-- Loan  -->
             <isEqual property="locStsLoanFlg" compareValue="Y">

                 <isEqual property="locStsInTrnstFlg" compareValue="Y">
                     UNION ALL
                 </isEqual>
                 <isNotEqual property="locStsInTrnstFlg" compareValue="Y">
                     <isEqual property="locStsW4IFlg" compareValue="Y">
                         UNION ALL
                     </isEqual>
                     <isNotEqual property="locStsW4IFlg" compareValue="Y">
                         <isEqual property="locStsWHTransFlg" compareValue="Y">
                             UNION ALL
                         </isEqual>
                         <isNotEqual property="locStsWHTransFlg" compareValue="Y">
                             <isEqual property="locStsDcStkFlg" compareValue="Y">
                                 UNION ALL
                             </isEqual>
                         </isNotEqual>
                     </isNotEqual>
                 </isNotEqual>

                 SELECT
                     MM.GLBL_CMPY_CD
                    ,MM.MDSE_CD
                    ,MD.MDSE_DESC_SHORT_TXT
                    ,MM.SER_NUM
                    ,RWC.RTL_WH_CATG_DESC_TXT
                    ,RW.RTL_WH_CD
                    ,RW.RTL_WH_NM
                    ,LV.RTL_SWH_CD
                    ,RSW.INVTY_LOC_CD
                    ,NVL((
                            SELECT
                               MI.ROP_QTY
                            FROM
                               MRP_INFO MI
                            WHERE
                                MM.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
                            AND RSW.INVTY_LOC_CD        = MI.INVTY_LOC_CD
                            AND MM.MDSE_CD             = MI.MDSE_CD
                            AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
                            AND MI.EZCANCELFLAG         = '0'
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                            AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
                        ),
                        (
                            SELECT
                                MI.ROP_QTY
                            FROM
                                MRP_INFO MI
                            WHERE
                                MM.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
                            AND RSW.INVTY_LOC_CD        = MI.INVTY_LOC_CD
                            AND SUBSTR(MM.MDSE_CD, 0, 8) = MI.MDSE_CD
                            AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
                            AND MI.EZCANCELFLAG         = '0'
                            AND EXISTS(
                                    SELECT
                                        1
                                    FROM
                                        ORD_TAKE_MDSE OTM
                                    WHERE
                                        MI.GLBL_CMPY_CD  = OTM.GLBL_CMPY_CD
                                    AND MI.MDSE_CD = OTM.ORD_TAKE_MDSE_CD
                                    AND OTM.EZCANCELFLAG = '0'
                            )
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                            AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
                        )
                        ) ROP_QTY
                        ,NVL((
                            SELECT
                               MI.MAX_INVTY_QTY
                            FROM
                               MRP_INFO MI
                            WHERE
                                MM.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
                            AND RSW.INVTY_LOC_CD        = MI.INVTY_LOC_CD
                            AND MM.MDSE_CD             = MI.MDSE_CD
                            AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
                            AND MI.EZCANCELFLAG         = '0'
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                            AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
                        ),
                        (
                            SELECT
                                MI.MAX_INVTY_QTY
                            FROM
                                MRP_INFO MI
                            WHERE
                                MM.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
                            AND RSW.INVTY_LOC_CD        = MI.INVTY_LOC_CD
                            AND SUBSTR(MM.MDSE_CD, 0, 8) = MI.MDSE_CD
                            AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
                            AND MI.EZCANCELFLAG         = '0'
                            AND EXISTS(
                                    SELECT
                                        1
                                    FROM
                                        ORD_TAKE_MDSE OTM
                                    WHERE
                                        MI.GLBL_CMPY_CD  = OTM.GLBL_CMPY_CD
                                    AND MI.MDSE_CD = OTM.ORD_TAKE_MDSE_CD
                                    AND OTM.EZCANCELFLAG = '0'
                            )
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                            AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
                        )) MAX_INVTY_QTY
                    ,1 AS INVTY_QTY
                    ,0 AS INVTY_AVAL_QTY
                    ,MM.SVC_CONFIG_MSTR_PK
                    ,#locStsLoan#    AS LOC_STS_CD
                    ,#locStsLoanNm#  AS LOC_STS_DESC_TXT
                    ,SS.STK_STS_CD
                    ,SS.STK_STS_DESC_TXT
                    ,LV.RTL_WH_NM    AS SHIP_FROM_ACCT_NM
                    ,DAC.DS_ACCT_NM  AS SHIP_TO_ACCT_NM
                    ,SOT.SCE_ORD_TP_NM
                    ,MM.CPO_ORD_NUM  AS TRX_HDR_NUM
                    ,CASE WHEN CD.DS_ORD_POSN_NUM IS NULL THEN NULL
                          ELSE CONCAT(CD.DS_ORD_POSN_NUM, '.') || CONCAT(CD.DS_CPO_LINE_NUM, DECODE(CD.DS_CPO_LINE_SUB_NUM, NULL, '', '.')) || CD.DS_CPO_LINE_SUB_NUM
                     END  AS DPLY_LINE_NUM
                    ,DECODE(MD.COA_MDSE_TP_CD,      NULL, MD.COA_MDSE_TP_CD,      MD.COA_MDSE_TP_CD      || ':' || CP.COA_PROJ_DESC_TXT)      AS COA_PROJ_LONG_DESC_TXT
                    ,DECODE(MD.MDSE_ITEM_TP_CD,     NULL, MD.MDSE_ITEM_TP_CD,     MD.MDSE_ITEM_TP_CD     || ':' || MIT.MDSE_ITEM_TP_DESC_TXT) AS MDSE_ITEM_TP_LONG_DESC_TXT
                    ,DECODE(MD.ZEROTH_PROD_CTRL_CD, NULL, MD.ZEROTH_PROD_CTRL_CD, MD.ZEROTH_PROD_CTRL_CD || ':' || MD.ZEROTH_PROD_CTRL_NM)    AS ZEROTH_PROD_CTRL_DESC_TXT
                    ,DECODE(MD.FIRST_PROD_CTRL_CD,  NULL, MD.FIRST_PROD_CTRL_CD,  MD.FIRST_PROD_CTRL_CD  || ':' || MD.FIRST_PROD_CTRL_NM)     AS FIRST_PROD_CTRL_DESC_TXT
                    ,DECODE(MD.SCD_PROD_CTRL_CD,    NULL, MD.SCD_PROD_CTRL_CD,    MD.SCD_PROD_CTRL_CD    || ':' || MD.SCD_PROD_CTRL_NM)       AS SCD_PROD_CTRL_DESC_TXT
                    ,DECODE(MD.THIRD_PROD_CTRL_CD,  NULL, MD.THIRD_PROD_CTRL_CD,  MD.THIRD_PROD_CTRL_CD  || ':' || MD.THIRD_PROD_CTRL_NM)     AS THIRD_PROD_CTRL_DESC_TXT
                    ,DECODE(MD.FRTH_PROD_CTRL_CD,   NULL, MD.FRTH_PROD_CTRL_CD,   MD.FRTH_PROD_CTRL_CD   || ':' || MD.FRTH_PROD_CTRL_NM)      AS FRTH_PROD_CTRL_DESC_TXT
                    ,CASE WHEN MM.SVC_CONFIG_MSTR_PK IS NOT NULL THEN #flgY#
                          WHEN MM.SER_NUM            IS NULL     THEN #flgN#
                          WHEN MM.SVC_MACH_MSTR_PK   IS NOT NULL THEN #flgY#
                          ELSE #flgN#
                     END  AS MACH_FLG
                    ,CASE WHEN MM.SVC_CONFIG_MSTR_PK IS NOT NULL THEN MM.SVC_MACH_MSTR_PK
                          WHEN MM.SER_NUM            IS NULL     THEN NULL
                          ELSE MM.SVC_MACH_MSTR_PK
                     END  AS SVC_MACH_MSTR_PK
                    ,IDD.STK_IN_DT
                 FROM
                     SVC_MACH_MSTR  MM
                    ,MDSE           MD
                    ,COA_PROJ       CP
                    ,MDSE_ITEM_TP   MIT
                    ,STK_STS        SS
                    ,DS_INVTY_LOC_V LV
                    ,RTL_SWH        RSW
                    ,RTL_WH         RW
                    ,RTL_WH_CATG    RWC
                    ,SHPG_ORD       SO
                    ,SCE_ORD_TP     SOT
                    ,SHIP_TO_CUST   STC
                    ,SELL_TO_CUST   DAC
                    ,CPO_DTL        CD
                    ,INVTY_DTL_DLY  IDD
                 WHERE
                     MM.GLBL_CMPY_CD             = #glblCmpyCd#
                 <isNotNull property="mdseCdList">
                     <iterate property="mdseCdList" var="mdseCdList[]" open="AND (MM.MDSE_CD LIKE " conjunction= "OR MM.MDSE_CD LIKE " close=")">
                         #mdseCdList[]#
                     </iterate>
                 </isNotNull>
                 <isNotNull property="serNumList">
                     <iterate property="serNumList" var="serNumList[]" open="AND (MM.SER_NUM LIKE " conjunction= "OR MM.SER_NUM LIKE " close=")">
                         #serNumList[]#
                     </iterate>
                 </isNotNull>
                 <isNotNull property="configIDList">
                     <!-- START 2017/12/18 S.Katsuma [QC#22469,MOD] -->
                     <iterate property="configIDList" var="configIDList[]" open="AND (MM.SVC_CONFIG_MSTR_PK LIKE " conjunction= "OR MM.SVC_CONFIG_MSTR_PK LIKE " close=")">
                         #configIDList[]#
                     </iterate>
                     <!-- END 2017/12/18 S.Katsuma [QC#22469,MOD] -->
                 </isNotNull>
                 <isNotNull property="toLocCdList">
                     <iterate property="toLocCdList" var="toLocCdList[]" open="AND (MM.CUR_LOC_NUM LIKE " conjunction= "OR MM.CUR_LOC_NUM LIKE " close=")">
                         #toLocCdList[]#
                     </iterate>
                 </isNotNull>
                 <isNotNull property="stkStsList">
                     <iterate property="stkStsList" var="stkStsList[]" open="AND MM.STK_STS_CD IN (" conjunction= ", " close=")">
                         #stkStsList[]#
                     </iterate>
                 </isNotNull>
                 AND MM.SVC_MACH_MSTR_LOC_STS_CD = #locStsLoan#
                 AND MM.SVC_MACH_MSTR_STS_CD &lt;&gt; #svcMachMstrStsTerm#
                 AND MM.EZCANCELFLAG             = '0'
                 AND MM.GLBL_CMPY_CD             = MD.GLBL_CMPY_CD
                 AND MM.MDSE_CD                  = MD.MDSE_CD
                 <isNotNull property="cMsg.zerothProdCtrlNm_HB">
                 AND UPPER(MD.ZEROTH_PROD_CTRL_NM) LIKE #cMsg.zerothProdCtrlNm_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.firstProdCtrlNm_HB">
                 AND UPPER(MD.FIRST_PROD_CTRL_NM)  LIKE #cMsg.firstProdCtrlNm_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.scdProdCtrlNm_HB">
                 AND UPPER(MD.SCD_PROD_CTRL_NM)    LIKE #cMsg.scdProdCtrlNm_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.thirdProdCtrlNm_HB">
                 AND UPPER(MD.THIRD_PROD_CTRL_NM)  LIKE #cMsg.thirdProdCtrlNm_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.frthProdCtrlNm_HB">
                 AND UPPER(MD.FRTH_PROD_CTRL_NM)   LIKE #cMsg.frthProdCtrlNm_HB#
                 </isNotNull>
                 AND MD.INVTY_CTRL_FLG           = #flgY#
                 AND MD.EZCANCELFLAG             = '0'
                 <isNotNull property="cMsg.coaProjCd_HB">
                 AND MD.COA_MDSE_TP_CD           = #cMsg.coaProjCd_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.mdseItemTpCd_HB">
                 AND MD.MDSE_ITEM_TP_CD          = #cMsg.mdseItemTpCd_HB#
                 </isNotNull>
                 AND MD.GLBL_CMPY_CD             = CP.GLBL_CMPY_CD
                 AND MD.COA_MDSE_TP_CD           = CP.COA_PROJ_CD
                 AND CP.EZCANCELFLAG             = '0'
                 AND MD.GLBL_CMPY_CD             = MIT.GLBL_CMPY_CD
                 AND MD.MDSE_ITEM_TP_CD          = MIT.MDSE_ITEM_TP_CD
                 AND MIT.EZCANCELFLAG            = '0'
                 AND MM.GLBL_CMPY_CD             = SS.GLBL_CMPY_CD
                 AND MM.STK_STS_CD               = SS.STK_STS_CD
                 AND SS.EZCANCELFLAG             = '0'
                 AND MM.GLBL_CMPY_CD             = LV.GLBL_CMPY_CD
                 AND MM.SHIP_FROM_WH_CD          = LV.INVTY_LOC_CD
                 AND LV.EZCANCELFLAG             = '0'
                 AND LV.GLBL_CMPY_CD             = RSW.GLBL_CMPY_CD
                 AND NVL(LV.RTL_SWH_CD, 'NEW')   = RSW.RTL_SWH_CD
                 AND RSW.RTL_WH_CD               = #rtlWhLoan#
                 <isNotNull property="whCdList">
                     <iterate property="whCdList" var="whCdList[]" open="AND (RSW.RTL_WH_CD LIKE " conjunction= "OR RSW.RTL_WH_CD LIKE " close=")">
                         #whCdList[]#
                     </iterate>
                 </isNotNull>
                 <isNotNull property="swhCdList">
                     <iterate property="swhCdList" var="swhCdList[]" open="AND (RSW.RTL_SWH_CD LIKE " conjunction= "OR RSW.RTL_SWH_CD LIKE " close=")">
                         #swhCdList[]#
                     </iterate>
                 </isNotNull>
                 AND RSW.EZCANCELFLAG            = '0'
                 AND RSW.GLBL_CMPY_CD            = RW.GLBL_CMPY_CD
                 AND RSW.RTL_WH_CD               = RW.RTL_WH_CD
                 AND RW.EZCANCELFLAG             = '0'
                 AND RW.GLBL_CMPY_CD             = RWC.GLBL_CMPY_CD
                 AND RW.RTL_WH_CATG_CD           = RWC.RTL_WH_CATG_CD
                 <isNotNull property="cMsg.rtlWhCatgCd_HB">
                 AND RWC.RTL_WH_CATG_CD          = #cMsg.rtlWhCatgCd_HB#
                 </isNotNull>
                 <!-- START 2023/03/07 S.Dong [QC#61205, ADD] -->
                 <isNotNull property="cMsg.whOwnrCd_HB">
                 AND RW.WH_OWNR_CD               = #cMsg.whOwnrCd_HB#
                 </isNotNull>
                 <!-- END 2023/03/07 S.Dong [QC#61205, ADD] -->
                 AND RWC.EZCANCELFLAG            = '0'
                 AND MM.GLBL_CMPY_CD             = SO.GLBL_CMPY_CD(+)
                 AND MM.SO_NUM                   = SO.SO_NUM(+)
                 AND SO.EZCANCELFLAG(+)          = '0'
                 AND SO.GLBL_CMPY_CD             = SOT.GLBL_CMPY_CD(+)
                 AND SO.SCE_ORD_TP_CD            = SOT.SCE_ORD_TP_CD(+)
                 AND SOT.INBD_OTBD_CD(+)         = #inbdOtbdCdOt#
                 AND SOT.EZCANCELFLAG(+)         = '0'
                 AND MM.GLBL_CMPY_CD             = STC.GLBL_CMPY_CD
                 AND MM.CUR_LOC_NUM              = STC.SHIP_TO_CUST_CD
                 AND STC.EZCANCELFLAG            = '0'
                 AND STC.GLBL_CMPY_CD            = DAC.GLBL_CMPY_CD
                 AND STC.SELL_TO_CUST_CD         = DAC.SELL_TO_CUST_CD
                 AND DAC.EZCANCELFLAG            = '0'
                 AND MM.GLBL_CMPY_CD             = CD.GLBL_CMPY_CD(+)
                 AND MM.CPO_ORD_NUM              = CD.CPO_ORD_NUM(+)
                 AND MM.CPO_DTL_LINE_NUM         = CD.CPO_DTL_LINE_NUM(+)
                 AND MM.CPO_DTL_LINE_SUB_NUM     = CD.CPO_DTL_LINE_SUB_NUM(+)
                 AND CD.EZCANCELFLAG(+)          = '0'
                 <isEqual property="cMsg.xxChkBox_HB" compareValue="Y">
                 AND MD.RTRN_REQ_PRT_FLG         = #cMsg.xxChkBox_HB#
                 </isEqual>
                 <isNotNull property="cMsg.rtrnCtrlTpVndRelnPk_HB">
                 AND MD.RTRN_CTRL_TP_VND_RELN_PK      = #cMsg.rtrnCtrlTpVndRelnPk_HB#
                 </isNotNull>
                 AND MM.GLBL_CMPY_CD             = IDD.GLBL_CMPY_CD(+)
                 AND MM.MDSE_CD                  = IDD.MDSE_CD(+)
                 AND MM.SVC_MACH_MSTR_LOC_STS_CD = IDD.LOC_STS_CD(+)
                 AND MM.STK_STS_CD               = IDD.STK_STS_CD(+)
                 AND MM.SVC_CONFIG_MSTR_PK       = IDD.SVC_CONFIG_MSTR_PK(+)
                 AND NVL(MM.SER_NUM, '***')      = NVL(IDD.SER_NUM(+), '***')
                 <isNotNull property="cMsg.xxFromDt_HB">
                 AND IDD.STK_IN_DT    &gt;= #cMsg.xxFromDt_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.xxThruDt_HB">
                 AND IDD.STK_IN_DT    &lt;= #cMsg.xxThruDt_HB#
                 </isNotNull>
                 AND IDD.EZCANCELFLAG(+)         = '0'
                 <!-- END 2017/12/18 S.Katsuma [QC#21834,ADD] -->
             </isEqual>

             <!-- Kitting  -->
             <isEqual property="locStsKitFlg" compareValue="Y">

                 <isEqual property="locStsLoanFlg" compareValue="Y">
                     UNION ALL
                 </isEqual>
                 <isNotEqual property="locStsLoanFlg" compareValue="Y">
                     <isEqual property="locStsInTrnstFlg" compareValue="Y">
                         UNION ALL
                     </isEqual>
                     <isNotEqual property="locStsInTrnstFlg" compareValue="Y">
                         <isEqual property="locStsW4IFlg" compareValue="Y">
                             UNION ALL
                         </isEqual>
                         <isNotEqual property="locStsW4IFlg" compareValue="Y">
                             <isEqual property="locStsWHTransFlg" compareValue="Y">
                                 UNION ALL
                             </isEqual>
                             <isNotEqual property="locStsWHTransFlg" compareValue="Y">
                                 <isEqual property="locStsDcStkFlg" compareValue="Y">
                                     UNION ALL
                                 </isEqual>
                             </isNotEqual>
                         </isNotEqual>
                     </isNotEqual>
                 </isNotEqual>

                 SELECT
                     SOD.GLBL_CMPY_CD
                    ,SOD.MDSE_CD
                    ,MD.MDSE_DESC_SHORT_TXT
                    ,SSN.SER_NUM
                    ,RWC.RTL_WH_CATG_DESC_TXT
                    ,DRW.RTL_WH_CD
                    ,DRW.RTL_WH_NM
                    ,DRSW.RTL_SWH_CD
                    ,SOD.TO_INVTY_LOC_CD                        AS INVTY_LOC_CD
                    ,NVL((
                            SELECT
                               MI.ROP_QTY
                            FROM
                               MRP_INFO MI
                            WHERE
                                SOD.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
                            AND SOD.INVTY_LOC_CD        = MI.INVTY_LOC_CD
                            AND SOD.MDSE_CD             = MI.MDSE_CD
                            AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
                            AND MI.EZCANCELFLAG         = '0'
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                            AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
                        ),
                        (
                            SELECT
                                MI.ROP_QTY
                            FROM
                                MRP_INFO MI
                            WHERE
                                SOD.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
                            AND SOD.INVTY_LOC_CD        = MI.INVTY_LOC_CD
                            AND SUBSTR(SOD.MDSE_CD, 0, 8) = MI.MDSE_CD
                            AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
                            AND MI.EZCANCELFLAG         = '0'
                            AND EXISTS(
                                    SELECT
                                        1
                                    FROM
                                        ORD_TAKE_MDSE OTM
                                    WHERE
                                        MI.GLBL_CMPY_CD  = OTM.GLBL_CMPY_CD
                                    AND MI.MDSE_CD = OTM.ORD_TAKE_MDSE_CD
                                    AND OTM.EZCANCELFLAG = '0'
                            )
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                            AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
                        )
                        ) ROP_QTY
                        ,NVL((
                            SELECT
                               MI.MAX_INVTY_QTY
                            FROM
                               MRP_INFO MI
                            WHERE
                                SOD.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
                            AND SOD.INVTY_LOC_CD        = MI.INVTY_LOC_CD
                            AND SOD.MDSE_CD             = MI.MDSE_CD
                            AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
                            AND MI.EZCANCELFLAG         = '0'
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                            AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
                        ),
                        (
                            SELECT
                                MI.MAX_INVTY_QTY
                            FROM
                                MRP_INFO MI
                            WHERE
                                SOD.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
                            AND SOD.INVTY_LOC_CD        = MI.INVTY_LOC_CD
                            AND SUBSTR(SOD.MDSE_CD, 0, 8) = MI.MDSE_CD
                            AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
                            AND MI.EZCANCELFLAG         = '0'
                            AND EXISTS(
                                    SELECT
                                        1
                                    FROM
                                        ORD_TAKE_MDSE OTM
                                    WHERE
                                        MI.GLBL_CMPY_CD  = OTM.GLBL_CMPY_CD
                                    AND MI.MDSE_CD = OTM.ORD_TAKE_MDSE_CD
                                    AND OTM.EZCANCELFLAG = '0'
                            )
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                            AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
                        )) MAX_INVTY_QTY
                    ,DECODE(SSN.SER_NUM, NULL, SOD.SHIP_QTY, 1) AS INVTY_QTY
                    ,0                                          AS INVTY_AVAL_QTY
                    ,SO.SVC_CONFIG_MSTR_PK
                    ,CASE WHEN RH.SCE_ORD_TP_CD = #sceOrdTpKT# THEN #locStsWipComp#
                          WHEN RH.SCE_ORD_TP_CD = #sceOrdTpKU# THEN #locStsWipKit#
                          WHEN SO.SCE_ORD_TP_CD = #sceOrdTpKT# THEN #locStsWipComp#
                          WHEN SO.SCE_ORD_TP_CD = #sceOrdTpKU# THEN #locStsWipKit#
                     END AS LOC_STS_CD
                    ,CASE WHEN RH.SCE_ORD_TP_CD = #sceOrdTpKT# THEN #locStsWipCompNm#
                          WHEN RH.SCE_ORD_TP_CD = #sceOrdTpKU# THEN #locStsWipKitNm#
                          WHEN SO.SCE_ORD_TP_CD = #sceOrdTpKT# THEN #locStsWipCompNm#
                          WHEN SO.SCE_ORD_TP_CD = #sceOrdTpKU# THEN #locStsWipKitNm#
                     END AS LOC_STS_DESC_TXT
                    ,SOD.FROM_STK_STS_CD  AS STK_STS_CD
                    ,SS.STK_STS_DESC_TXT
                    ,CASE WHEN RH.SCE_ORD_TP_CD = #sceOrdTpKC# THEN DRW.RTL_WH_NM
                          ELSE FRW.RTL_WH_NM
                     END AS SHIP_FROM_ACCT_NM
                    ,CASE WHEN RH.SCE_ORD_TP_CD = #sceOrdTpKC# THEN FRW.RTL_WH_NM
                          ELSE DRW.RTL_WH_NM
                     END AS SHIP_TO_ACCT_NM
                    ,SOT.SCE_ORD_TP_NM
                    ,SOD.TRX_HDR_NUM
                    ,CASE WHEN RH.SCE_ORD_TP_CD = #sceOrdTpKT# THEN SOD.TRX_LINE_NUM
                          WHEN RH.SCE_ORD_TP_CD = #sceOrdTpKU# THEN NULL
                          WHEN SO.SCE_ORD_TP_CD = #sceOrdTpKT# THEN SOD.TRX_LINE_NUM
                          WHEN SO.SCE_ORD_TP_CD = #sceOrdTpKU# THEN NULL
                     END AS DPLY_LINE_NUM
                    ,DECODE(MD.COA_MDSE_TP_CD,      NULL, MD.COA_MDSE_TP_CD,      MD.COA_MDSE_TP_CD      || ':' || CP.COA_PROJ_DESC_TXT)      AS COA_PROJ_LONG_DESC_TXT
                    ,DECODE(MD.MDSE_ITEM_TP_CD,     NULL, MD.MDSE_ITEM_TP_CD,     MD.MDSE_ITEM_TP_CD     || ':' || MIT.MDSE_ITEM_TP_DESC_TXT) AS MDSE_ITEM_TP_LONG_DESC_TXT
                    ,DECODE(MD.ZEROTH_PROD_CTRL_CD, NULL, MD.ZEROTH_PROD_CTRL_CD, MD.ZEROTH_PROD_CTRL_CD || ':' || MD.ZEROTH_PROD_CTRL_NM)    AS ZEROTH_PROD_CTRL_DESC_TXT
                    ,DECODE(MD.FIRST_PROD_CTRL_CD,  NULL, MD.FIRST_PROD_CTRL_CD,  MD.FIRST_PROD_CTRL_CD  || ':' || MD.FIRST_PROD_CTRL_NM)     AS FIRST_PROD_CTRL_DESC_TXT
                    ,DECODE(MD.SCD_PROD_CTRL_CD,    NULL, MD.SCD_PROD_CTRL_CD,    MD.SCD_PROD_CTRL_CD    || ':' || MD.SCD_PROD_CTRL_NM)       AS SCD_PROD_CTRL_DESC_TXT
                    ,DECODE(MD.THIRD_PROD_CTRL_CD,  NULL, MD.THIRD_PROD_CTRL_CD,  MD.THIRD_PROD_CTRL_CD  || ':' || MD.THIRD_PROD_CTRL_NM)     AS THIRD_PROD_CTRL_DESC_TXT
                    ,DECODE(MD.FRTH_PROD_CTRL_CD,   NULL, MD.FRTH_PROD_CTRL_CD,   MD.FRTH_PROD_CTRL_CD   || ':' || MD.FRTH_PROD_CTRL_NM)      AS FRTH_PROD_CTRL_DESC_TXT
                    ,DECODE(SMM.SVC_MACH_MSTR_PK, NULL, #flgN#, #flgY#) AS MACH_FLG
                    ,SMM.SVC_MACH_MSTR_PK
                    ,NULL AS STK_IN_DT
                 FROM
                     RWS_HDR         RH
                    ,RWS_STS         RS
                    ,SCE_ORD_TP      SOT
                    ,SHPG_ORD_DTL    SOD
                    ,SHPG_ORD        SO
                    ,MDSE            MD
                    ,COA_PROJ        CP
                    ,MDSE_ITEM_TP    MIT
                    ,STK_STS         SS
                    ,RTL_SWH         DRSW
                    ,RTL_WH          DRW
                    ,RTL_WH          FRW
                    ,RTL_WH_CATG     RWC
                    ,SHIP_SER_NUM    SSN
                    ,SVC_MACH_MSTR   SMM
                 WHERE
                     RH.GLBL_CMPY_CD       = #glblCmpyCd#
                 AND RH.SCE_ORD_TP_CD IN (#sceOrdTpKT#, #sceOrdTpKU#, #sceOrdTpKC#)
                 AND RH.EZCANCELFLAG       = '0'
                 AND RH.GLBL_CMPY_CD       = RS.GLBL_CMPY_CD
                 AND RH.RWS_STS_CD         = RS.RWS_STS_CD
                 AND RS.RWS_OPEN_FLG       = #flgY#
                 AND RS.EZCANCELFLAG       = '0'
                 AND RH.GLBL_CMPY_CD       = SOT.GLBL_CMPY_CD
                 AND RH.SCE_ORD_TP_CD      = SOT.SCE_ORD_TP_CD
                 AND SOT.INBD_OTBD_CD      = #inbdOtbdCdIn#
                 AND SOT.EZCANCELFLAG      = '0'
                 AND RH.GLBL_CMPY_CD       = SOD.GLBL_CMPY_CD
                 AND RH.PO_RCV_TRX_HDR_NUM = SOD.SO_NUM
                 <isNotNull property="mdseCdList">
                     <iterate property="mdseCdList" var="mdseCdList[]" open="AND (SOD.MDSE_CD LIKE " conjunction= "OR SOD.MDSE_CD LIKE " close=")">
                         #mdseCdList[]#
                     </iterate>
                 </isNotNull>
                 <isNotNull property="stkStsList">
                     <iterate property="stkStsList" var="stkStsList[]" open="AND SOD.FROM_STK_STS_CD IN (" conjunction= ", " close=")">
                         #stkStsList[]#
                     </iterate>
                 </isNotNull>
                 AND SOD.EZCANCELFLAG      = '0'
                 AND SOD.GLBL_CMPY_CD      = SO.GLBL_CMPY_CD
                 AND SOD.SO_NUM            = SO.SO_NUM
                 <isNotNull property="configIDList">
                     <!-- START 2017/12/18 S.Katsuma [QC#22469,MOD] -->
                     <iterate property="configIDList" var="configIDList[]" open="AND (SO.SVC_CONFIG_MSTR_PK LIKE " conjunction= "OR SO.SVC_CONFIG_MSTR_PK LIKE " close=")">
                         #configIDList[]#
                     </iterate>
                     <!-- END 2017/12/18 S.Katsuma [QC#22469,MOD] -->
                 </isNotNull>
                 <isNotNull property="toLocCdList">
                     <iterate property="toLocCdList" var="toLocCdList[]" open="AND (SO.SHIP_TO_CUST_CD LIKE " conjunction= "OR SO.SHIP_TO_CUST_CD LIKE " close=")">
                         #toLocCdList[]#
                     </iterate>
                 </isNotNull>
                 AND SO.EZCANCELFLAG      = '0'
                 AND SOD.GLBL_CMPY_CD      = MD.GLBL_CMPY_CD
                 AND SOD.MDSE_CD           = MD.MDSE_CD
                 <isNotNull property="cMsg.zerothProdCtrlNm_HB">
                 AND UPPER(MD.ZEROTH_PROD_CTRL_NM) LIKE #cMsg.zerothProdCtrlNm_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.firstProdCtrlNm_HB">
                 AND UPPER(MD.FIRST_PROD_CTRL_NM)  LIKE #cMsg.firstProdCtrlNm_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.scdProdCtrlNm_HB">
                 AND UPPER(MD.SCD_PROD_CTRL_NM)    LIKE #cMsg.scdProdCtrlNm_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.thirdProdCtrlNm_HB">
                 AND UPPER(MD.THIRD_PROD_CTRL_NM)  LIKE #cMsg.thirdProdCtrlNm_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.frthProdCtrlNm_HB">
                 AND UPPER(MD.FRTH_PROD_CTRL_NM)   LIKE #cMsg.frthProdCtrlNm_HB#
                 </isNotNull>
                 AND MD.INVTY_CTRL_FLG     = #flgY#
                 AND MD.EZCANCELFLAG       = '0'
                 <isNotNull property="cMsg.coaProjCd_HB">
                 AND MD.COA_MDSE_TP_CD     = #cMsg.coaProjCd_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.mdseItemTpCd_HB">
                 AND MD.MDSE_ITEM_TP_CD    = #cMsg.mdseItemTpCd_HB#
                 </isNotNull>
                 AND MD.GLBL_CMPY_CD       = CP.GLBL_CMPY_CD
                 AND MD.COA_MDSE_TP_CD     = CP.COA_PROJ_CD
                 AND CP.EZCANCELFLAG       = '0'
                 AND MD.GLBL_CMPY_CD       = MIT.GLBL_CMPY_CD
                 AND MD.MDSE_ITEM_TP_CD    = MIT.MDSE_ITEM_TP_CD
                 AND MIT.EZCANCELFLAG      = '0'
                 AND SOD.GLBL_CMPY_CD      = SS.GLBL_CMPY_CD
                 AND SOD.FROM_STK_STS_CD   = SS.STK_STS_CD
                 AND SS.EZCANCELFLAG       = '0'
                 AND SOD.GLBL_CMPY_CD      = DRSW.GLBL_CMPY_CD
                 AND SOD.TO_INVTY_LOC_CD   = DRSW.INVTY_LOC_CD
                 <isNotNull property="whCdList">
                     <iterate property="whCdList" var="whCdList[]" open="AND (DRSW.RTL_WH_CD LIKE " conjunction= "OR DRSW.RTL_WH_CD LIKE " close=")">
                         #whCdList[]#
                     </iterate>
                 </isNotNull>
                 <isNotNull property="swhCdList">
                     <iterate property="swhCdList" var="swhCdList[]" open="AND (DRSW.RTL_SWH_CD LIKE " conjunction= "OR DRSW.RTL_SWH_CD LIKE " close=")">
                         #swhCdList[]#
                     </iterate>
                 </isNotNull>
                 AND DRSW.EZCANCELFLAG     = '0'
                 AND DRSW.GLBL_CMPY_CD     = DRW.GLBL_CMPY_CD
                 AND DRSW.RTL_WH_CD        = DRW.RTL_WH_CD
                 AND DRW.EZCANCELFLAG      = '0'
                 AND DRW.GLBL_CMPY_CD      = RWC.GLBL_CMPY_CD
                 AND DRW.RTL_WH_CATG_CD    = RWC.RTL_WH_CATG_CD
                 <isNotNull property="cMsg.rtlWhCatgCd_HB">
                 AND RWC.RTL_WH_CATG_CD    = #cMsg.rtlWhCatgCd_HB#
                 </isNotNull>
                 <!-- START 2023/03/07 S.Dong [QC#61205, ADD] -->
                 <isNotNull property="cMsg.whOwnrCd_HB">
                 AND DRW.WH_OWNR_CD        = #cMsg.whOwnrCd_HB#
                 </isNotNull>
                 <!-- END 2023/03/07 S.Dong [QC#61205, ADD] -->
                 AND RWC.EZCANCELFLAG      = '0'
                 AND SOD.GLBL_CMPY_CD      = FRW.GLBL_CMPY_CD
                 AND SOD.RTL_WH_CD         = FRW.RTL_WH_CD
                 AND FRW.EZCANCELFLAG      = '0'
                 AND SOD.GLBL_CMPY_CD      = SSN.GLBL_CMPY_CD(+)
                 AND SOD.SO_NUM            = SSN.SO_NUM(+)
                 AND SOD.SO_SLP_NUM        = SSN.SO_SLP_NUM(+)
                 <isNotNull property="serNumList">
                     <iterate property="serNumList" var="serNumList[]" open="AND (SSN.SER_NUM LIKE " conjunction= "OR SSN.SER_NUM LIKE " close=")">
                         #serNumList[]#
                     </iterate>
                 </isNotNull>
                 AND SSN.EZCANCELFLAG(+)   = '0'
                 AND SSN.GLBL_CMPY_CD      = SMM.GLBL_CMPY_CD(+)
                 AND SSN.MDSE_CD           = SMM.MDSE_CD(+)
                 AND SSN.SER_NUM           = SMM.SER_NUM(+)
                 AND SMM.EZCANCELFLAG(+)   = '0'
                 <isEqual property="cMsg.xxChkBox_HB" compareValue="Y">
                 AND MD.RTRN_REQ_PRT_FLG   = #cMsg.xxChkBox_HB#
                 </isEqual>
                 <isNotNull property="cMsg.rtrnCtrlTpVndRelnPk_HB">
                 AND MD.RTRN_CTRL_TP_VND_RELN_PK      = #cMsg.rtrnCtrlTpVndRelnPk_HB#
                 </isNotNull>
                 <!-- END 2017/12/18 S.Katsuma [QC#21834,ADD] -->
             </isEqual>

             <!-- Reman  -->
             <isEqual property="locStsRemanFlg"  compareValue="Y">
             
                 <isEqual property="locStsKitFlg" compareValue="Y">
                    UNION ALL
                 </isEqual>
                 <isNotEqual property="locStsKitFlg" compareValue="Y">
                     <isEqual property="locStsLoanFlg" compareValue="Y">
                         UNION ALL
                     </isEqual>
                     <isNotEqual property="locStsLoanFlg" compareValue="Y">
                         <isEqual property="locStsInTrnstFlg" compareValue="Y">
                             UNION ALL
                         </isEqual>
                         <isNotEqual property="locStsInTrnstFlg" compareValue="Y">
                             <isEqual property="locStsW4IFlg" compareValue="Y">
                                 UNION ALL
                             </isEqual>
                             <isNotEqual property="locStsW4IFlg" compareValue="Y">
                                 <isEqual property="locStsWHTransFlg" compareValue="Y">
                                     UNION ALL
                                 </isEqual>
                                 <isNotEqual property="locStsWHTransFlg" compareValue="Y">
                                     <isEqual property="locStsDcStkFlg" compareValue="Y">
                                         UNION ALL
                                     </isEqual>
                                 </isNotEqual>
                             </isNotEqual>
                         </isNotEqual>
                     </isNotEqual>
                 </isNotEqual>
                 SELECT
                      RPR.GLBL_CMPY_CD
                     ,RPR.MDSE_CD
                     ,MD.MDSE_DESC_SHORT_TXT
                     ,NULL AS SER_NUM
                     ,RWC.RTL_WH_CATG_DESC_TXT
                     ,DILV_TO.RTL_WH_CD
                     ,DILV_TO.RTL_WH_NM
                     ,DILV_TO.RTL_SWH_CD
                     ,SOD.INVTY_LOC_CD
                     ,NVL((
                         SELECT
                            MI.ROP_QTY
                         FROM
                            MRP_INFO MI
                         WHERE
                             SOD.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
                         AND SOD.INVTY_LOC_CD        = MI.INVTY_LOC_CD
                         AND SOD.MDSE_CD             = MI.MDSE_CD
                         AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
                         AND MI.EZCANCELFLAG         = '0'
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                         AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
                     ),
                     (
                         SELECT
                             MI.ROP_QTY
                         FROM
                             MRP_INFO MI
                         WHERE
                             SOD.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
                         AND SOD.INVTY_LOC_CD        = MI.INVTY_LOC_CD
                         AND SUBSTR(SOD.MDSE_CD, 0, 8) = MI.MDSE_CD
                         AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
                         AND MI.EZCANCELFLAG         = '0'
                         AND EXISTS(
                                 SELECT
                                     1
                                 FROM
                                     ORD_TAKE_MDSE OTM
                                 WHERE
                                     MI.GLBL_CMPY_CD  = OTM.GLBL_CMPY_CD
                                 AND MI.MDSE_CD = OTM.ORD_TAKE_MDSE_CD
                                 AND OTM.EZCANCELFLAG = '0'
                         )
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                         AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
                     )
                     ) ROP_QTY
                     ,NVL((
                         SELECT
                            MI.MAX_INVTY_QTY
                         FROM
                            MRP_INFO MI
                         WHERE
                             SOD.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
                         AND SOD.INVTY_LOC_CD        = MI.INVTY_LOC_CD
                         AND SOD.MDSE_CD             = MI.MDSE_CD
                         AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
                         AND MI.EZCANCELFLAG         = '0'
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                         AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
                     ),
                     (
                         SELECT
                             MI.MAX_INVTY_QTY
                         FROM
                             MRP_INFO MI
                         WHERE
                             SOD.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
                         AND SOD.INVTY_LOC_CD        = MI.INVTY_LOC_CD
                         AND SUBSTR(SOD.MDSE_CD, 0, 8) = MI.MDSE_CD
                         AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
                         AND MI.EZCANCELFLAG         = '0'
                         AND EXISTS(
                                 SELECT
                                     1
                                 FROM
                                     ORD_TAKE_MDSE OTM
                                 WHERE
                                     MI.GLBL_CMPY_CD  = OTM.GLBL_CMPY_CD
                                 AND MI.MDSE_CD = OTM.ORD_TAKE_MDSE_CD
                                 AND OTM.EZCANCELFLAG = '0'
                         )
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                         AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
                     )) MAX_INVTY_QTY
                     ,INV.INVTY_QTY AS INVTY_QTY
                     ,INV.INVTY_AVAL_QTY
                     ,NULL AS SVC_CONFIG_MSTR_PK
                     ,#locStsReman#   AS LOC_STS_CD
                     ,#locStsRemanNm# AS LOC_STS_DESC_TXT
                     ,SOD.FROM_STK_STS_CD AS STK_STS_CD
                     ,SS.STK_STS_DESC_TXT
                     ,DILV_FROM.RTL_WH_NM AS SHIP_FROM_ACCT_NM
                     ,DILV_TO.RTL_WH_NM   AS SHIP_TO_ACCT_NM
                     ,SOT.SCE_ORD_TP_NM
                     ,RPR.RMNF_ORD_NUM AS TRX_HDR_NUM
                     ,RPR.RMNF_PRT_REQ_LINE_NUM AS DPLY_LINE_NUM
                     ,DECODE(MD.COA_MDSE_TP_CD,      NULL, MD.COA_MDSE_TP_CD,      MD.COA_MDSE_TP_CD      || ':' || CP.COA_PROJ_DESC_TXT)      AS COA_PROJ_LONG_DESC_TXT
                     ,DECODE(MD.MDSE_ITEM_TP_CD,     NULL, MD.MDSE_ITEM_TP_CD,     MD.MDSE_ITEM_TP_CD     || ':' || MIT.MDSE_ITEM_TP_DESC_TXT) AS MDSE_ITEM_TP_LONG_DESC_TXT
                     ,DECODE(MD.ZEROTH_PROD_CTRL_CD, NULL, MD.ZEROTH_PROD_CTRL_CD, MD.ZEROTH_PROD_CTRL_CD || ':' || MD.ZEROTH_PROD_CTRL_NM)    AS ZEROTH_PROD_CTRL_DESC_TXT
                     ,DECODE(MD.FIRST_PROD_CTRL_CD,  NULL, MD.FIRST_PROD_CTRL_CD,  MD.FIRST_PROD_CTRL_CD  || ':' || MD.FIRST_PROD_CTRL_NM)     AS FIRST_PROD_CTRL_DESC_TXT
                     ,DECODE(MD.SCD_PROD_CTRL_CD,    NULL, MD.SCD_PROD_CTRL_CD,    MD.SCD_PROD_CTRL_CD    || ':' || MD.SCD_PROD_CTRL_NM)       AS SCD_PROD_CTRL_DESC_TXT
                     ,DECODE(MD.THIRD_PROD_CTRL_CD,  NULL, MD.THIRD_PROD_CTRL_CD,  MD.THIRD_PROD_CTRL_CD  || ':' || MD.THIRD_PROD_CTRL_NM)     AS THIRD_PROD_CTRL_DESC_TXT
                     ,DECODE(MD.FRTH_PROD_CTRL_CD,   NULL, MD.FRTH_PROD_CTRL_CD,   MD.FRTH_PROD_CTRL_CD   || ':' || MD.FRTH_PROD_CTRL_NM)      AS FRTH_PROD_CTRL_DESC_TXT
                     ,#flgN# AS MACH_FLG
                     ,NULL AS SVC_MACH_MSTR_PK
                     ,NULL AS STK_IN_DT
                 FROM
                      RMNF_PRT_REQ       RPR
                     ,INVTY              INV
                     ,SHPG_ORD_DTL       SOD
                     ,SHPG_ORD           SO
                     ,SCE_ORD_TP         SOT
                     ,MDSE               MD
                     ,COA_PROJ           CP
                     ,MDSE_ITEM_TP       MIT
                     ,STK_STS            SS
                     ,DS_INVTY_LOC_V     DILV_FROM
                     ,DS_INVTY_LOC_V     DILV_TO
                     <!-- START 2023/03/07 S.Dong [QC#61205, MOD] -->
                     ,RTL_WH             RW1
                     <!-- END 2023/03/07 S.Dong [QC#61205, MOD] -->
                     ,RTL_WH_CATG        RWC
                     ,SHIP_SER_NUM       SSN
                 WHERE
                     RPR.GLBL_CMPY_CD           = #glblCmpyCd#
                 <isNotNull property="mdseCdList">
                     <iterate property="mdseCdList" var="mdseCdList[]" open="AND (RPR.MDSE_CD LIKE " conjunction= "OR RPR.MDSE_CD LIKE " close=")">
                         #mdseCdList[]#
                     </iterate>
                 </isNotNull>
                 AND RPR.EZCANCELFLAG           = '0'
                 AND RPR.GLBL_CMPY_CD           = INV.GLBL_CMPY_CD
                 AND RPR.MDSE_CD                = INV.MDSE_CD
                 AND RPR.SRC_INVTY_LOC_CD       = INV.INVTY_LOC_CD
                 AND INV.INVTY_QTY            &gt; 0 
                 <isNotNull property="whCdList">
                     <iterate property="whCdList" var="whCdList[]" open="AND (RPR.SRC_RTL_WH_CD LIKE " conjunction= "OR RPR.SRC_RTL_WH_CD LIKE " close=")">
                         #whCdList[]#
                     </iterate>
                 </isNotNull>
                 <isNotNull property="swhCdList">
                     <iterate property="swhCdList" var="swhCdList[]" open="AND (RPR.SRC_RTL_SWH_CD LIKE " conjunction= "OR RPR.SRC_RTL_SWH_CD LIKE " close=")">
                         #swhCdList[]#
                     </iterate>
                 </isNotNull>
                 AND INV.LOC_STS_CD             = #locStsReman#
                 <isNotNull property="stkStsList">
                     <iterate property="stkStsList" var="stkStsList[]" open="AND INV.STK_STS_CD IN (" conjunction= ", " close=")">
                         #stkStsList[]#
                     </iterate>
                 </isNotNull>
                 AND INV.EZCANCELFLAG           = '0'
                 AND RPR.GLBL_CMPY_CD           = SOD.GLBL_CMPY_CD
                 AND RPR.SO_NUM                 = SOD.SO_NUM
                 AND RPR.RMNF_PRT_REQ_LINE_NUM  = SOD.TRX_LINE_NUM
                 AND SOD.SHPG_STS_CD            = #shpgSts38#
                 AND SOD.EZCANCELFLAG           = '0'
                 AND SOD.GLBL_CMPY_CD           = SO.GLBL_CMPY_CD
                 AND SOD.SO_NUM                 = SO.SO_NUM
                 AND SO.SCE_ORD_TP_CD           = #sceOrdTpRL#
                 <isNotNull property="toLocCdList">
                     <iterate property="toLocCdList" var="toLocCdList[]" open="AND (SO.SHIP_TO_CUST_CD LIKE " conjunction= "OR SO.SHIP_TO_CUST_CD LIKE " close=")">
                         #toLocCdList[]#
                     </iterate>
                 </isNotNull>
                 <isNotNull property="configIDList">
                     <iterate property="configIDList" var="configIDList[]" open="AND (SO.SVC_CONFIG_MSTR_PK LIKE " conjunction= "OR SO.SVC_CONFIG_MSTR_PK LIKE " close=")">
                         #configIDList[]#
                     </iterate>
                 </isNotNull>
                 AND SO.EZCANCELFLAG            = '0'
                 AND SO.GLBL_CMPY_CD            = SOT.GLBL_CMPY_CD
                 AND SO.SCE_ORD_TP_CD           = SOT.SCE_ORD_TP_CD
                 AND SOT.INBD_OTBD_CD           = #inbdOtbdCdOt#
                 AND SOT.EZCANCELFLAG           = '0'
                 AND SOD.GLBL_CMPY_CD           = MD.GLBL_CMPY_CD
                 AND SOD.MDSE_CD                = MD.MDSE_CD
                 <isNotNull property="cMsg.zerothProdCtrlNm_HB">
                 AND UPPER(MD.ZEROTH_PROD_CTRL_NM) LIKE #cMsg.zerothProdCtrlNm_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.firstProdCtrlNm_HB">
                 AND UPPER(MD.FIRST_PROD_CTRL_NM)  LIKE #cMsg.firstProdCtrlNm_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.scdProdCtrlNm_HB">
                 AND UPPER(MD.SCD_PROD_CTRL_NM)    LIKE #cMsg.scdProdCtrlNm_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.thirdProdCtrlNm_HB">
                 AND UPPER(MD.THIRD_PROD_CTRL_NM)  LIKE #cMsg.thirdProdCtrlNm_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.frthProdCtrlNm_HB">
                 AND UPPER(MD.FRTH_PROD_CTRL_NM)   LIKE #cMsg.frthProdCtrlNm_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.coaProjCd_HB">
                 AND MD.COA_MDSE_TP_CD     = #cMsg.coaProjCd_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.mdseItemTpCd_HB">
                 AND MD.MDSE_ITEM_TP_CD    = #cMsg.mdseItemTpCd_HB#
                 </isNotNull>
                 <isEqual property="cMsg.xxChkBox_HB" compareValue="Y">
                 AND MD.RTRN_REQ_PRT_FLG   = #cMsg.xxChkBox_HB#
                 </isEqual>
                 <isNotNull property="cMsg.rtrnCtrlTpVndRelnPk_HB">
                 AND MD.RTRN_CTRL_TP_VND_RELN_PK      = #cMsg.rtrnCtrlTpVndRelnPk_HB#
                 </isNotNull>
                 AND MD.INVTY_CTRL_FLG          = #flgY#
                 AND MD.EZCANCELFLAG            = '0'
                 AND MD.GLBL_CMPY_CD            = CP.GLBL_CMPY_CD
                 AND MD.COA_MDSE_TP_CD          = CP.COA_PROJ_CD
                 AND CP.EZCANCELFLAG            = '0'
                 AND MD.GLBL_CMPY_CD            = MIT.GLBL_CMPY_CD
                 AND MD.MDSE_ITEM_TP_CD         = MIT.MDSE_ITEM_TP_CD
                 AND MIT.EZCANCELFLAG           = '0'
                 AND SOD.GLBL_CMPY_CD           = SS.GLBL_CMPY_CD
                 AND SOD.FROM_STK_STS_CD        = SS.STK_STS_CD
                 AND SS.EZCANCELFLAG            = '0'
                 AND SOD.GLBL_CMPY_CD           = DILV_FROM.GLBL_CMPY_CD
                 AND SOD.INVTY_LOC_CD           = DILV_FROM.INVTY_LOC_CD
                 AND DILV_FROM.EZCANCELFLAG     = '0'
                 AND SOD.GLBL_CMPY_CD           = DILV_TO.GLBL_CMPY_CD
                 AND SOD.TO_INVTY_LOC_CD        = DILV_TO.INVTY_LOC_CD
                 AND DILV_TO.EZCANCELFLAG       = '0'
                 AND DILV_FROM.GLBL_CMPY_CD     = RWC.GLBL_CMPY_CD
                 AND DILV_FROM.RTL_WH_CATG_CD   = RWC.RTL_WH_CATG_CD
                 <isNotNull property="cMsg.rtlWhCatgCd_HB">
                 AND RWC.RTL_WH_CATG_CD    = #cMsg.rtlWhCatgCd_HB#
                 </isNotNull>
                 <!-- START 2023/03/07 S.Dong [QC#61205, ADD] -->
                 AND DILV_FROM.RTL_WH_CD        = RW1.RTL_WH_CD
                 AND DILV_FROM.GLBL_CMPY_CD     = RW1.GLBL_CMPY_CD
                 AND RW1.EZCANCELFLAG           = '0'
                 <isNotNull property="cMsg.whOwnrCd_HB">
                 AND RW1.WH_OWNR_CD             = #cMsg.whOwnrCd_HB#
                 </isNotNull>
                 <!-- END 2023/03/07 S.Dong [QC#61205, ADD] -->
                 AND RWC.EZCANCELFLAG           = '0'
                 AND SOD.GLBL_CMPY_CD      = SSN.GLBL_CMPY_CD(+)
                 AND SOD.SO_NUM            = SSN.SO_NUM(+)
                 AND SOD.SO_SLP_NUM        = SSN.SO_SLP_NUM(+)
                 <isNotNull property="serNumList">
                     <iterate property="serNumList" var="serNumList[]" open="AND (SSN.SER_NUM LIKE " conjunction= "OR SSN.SER_NUM LIKE " close=")">
                         #serNumList[]#
                     </iterate>
                 </isNotNull>
                 AND SSN.EZCANCELFLAG(+)   = '0'
                 AND EXISTS(
                     SELECT
                         1
                     FROM
                        (
                           SELECT
                               NVL(SUM(RU.RMNF_PRT_QTY) + SUM(RU.RMNF_PRT_REL_QTY), 0) AS TOT_QTY
                           FROM
                               RMNF_USG RU
                           WHERE
                               RU.GLBL_CMPY_CD           = RPR.GLBL_CMPY_CD
                           AND RU.RMNF_ORD_NUM           = RPR.RMNF_ORD_NUM
                           AND RU.MDSE_CD                = RPR.MDSE_CD
                           AND RU.RMNF_PRT_USG_COMIT_FLG = #flgY#
                           AND RU.EZCANCELFLAG           = '0'
                        ) RU
                     WHERE
                         RPR.PRT_RQST_QTY > RU.TOT_QTY
                 )
             </isEqual>
             <!-- Subcontract  -->
             <isEqual property="locStsSubconFlg"  compareValue="Y">
             
                 <isEqual property="locStsRemanFlg" compareValue="Y">
                    UNION ALL
                 </isEqual>
                 <isNotEqual property="locStsRemanFlg" compareValue="Y">
                     <isEqual property="locStsKitFlg" compareValue="Y">
                         UNION ALL
                     </isEqual>
                     <isNotEqual property="locStsKitFlg" compareValue="Y">
                         <isEqual property="locStsLoanFlg" compareValue="Y">
                             UNION ALL
                         </isEqual>
                         <isNotEqual property="locStsLoanFlg" compareValue="Y">
                             <isEqual property="locStsInTrnstFlg" compareValue="Y">
                                 UNION ALL
                             </isEqual>
                             <isNotEqual property="locStsInTrnstFlg" compareValue="Y">
                                 <isEqual property="locStsW4IFlg" compareValue="Y">
                                     UNION ALL
                                 </isEqual>
                                 <isNotEqual property="locStsW4IFlg" compareValue="Y">
                                     <isEqual property="locStsWHTransFlg" compareValue="Y">
                                         UNION ALL
                                     </isEqual>
                                     <isNotEqual property="locStsWHTransFlg" compareValue="Y">
                                         <isEqual property="locStsDcStkFlg" compareValue="Y">
                                             UNION ALL
                                         </isEqual>
                                     </isNotEqual>
                                 </isNotEqual>
                             </isNotEqual>
                         </isNotEqual>
                     </isNotEqual>
                 </isNotEqual>
                 SELECT
                      SOD.GLBL_CMPY_CD
                     ,SOD.MDSE_CD
                     ,MD.MDSE_DESC_SHORT_TXT
                     ,SMM.SER_NUM
                     ,RWC.RTL_WH_CATG_DESC_TXT
                     ,DILV_TO.RTL_WH_CD
                     ,DILV_TO.RTL_WH_NM
                     ,DILV_TO.RTL_SWH_CD
                     ,SOD.INVTY_LOC_CD
                     ,NVL((
                         SELECT
                            MI.ROP_QTY
                         FROM
                            MRP_INFO MI
                         WHERE
                             SOD.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
                         AND SOD.INVTY_LOC_CD        = MI.INVTY_LOC_CD
                         AND SOD.MDSE_CD             = MI.MDSE_CD
                         AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
                         AND MI.EZCANCELFLAG         = '0'
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                         AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
                     ),
                     (
                         SELECT
                             MI.ROP_QTY
                         FROM
                             MRP_INFO MI
                         WHERE
                             SOD.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
                         AND SOD.INVTY_LOC_CD        = MI.INVTY_LOC_CD
                         AND SUBSTR(SOD.MDSE_CD, 0, 8) = MI.MDSE_CD
                         AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
                         AND MI.EZCANCELFLAG         = '0'
                         AND EXISTS(
                                 SELECT
                                     1
                                 FROM
                                     ORD_TAKE_MDSE OTM
                                 WHERE
                                     MI.GLBL_CMPY_CD  = OTM.GLBL_CMPY_CD
                                 AND MI.MDSE_CD = OTM.ORD_TAKE_MDSE_CD
                                 AND OTM.EZCANCELFLAG = '0'
                         )
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                         AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
                     )
                     ) ROP_QTY
                     ,NVL((
                         SELECT
                            MI.MAX_INVTY_QTY
                         FROM
                            MRP_INFO MI
                         WHERE
                             SOD.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
                         AND SOD.INVTY_LOC_CD        = MI.INVTY_LOC_CD
                         AND SOD.MDSE_CD             = MI.MDSE_CD
                         AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
                         AND MI.EZCANCELFLAG         = '0'
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                         AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
                     ),
                     (
                         SELECT
                             MI.MAX_INVTY_QTY
                         FROM
                             MRP_INFO MI
                         WHERE
                             SOD.GLBL_CMPY_CD        = MI.GLBL_CMPY_CD
                         AND SOD.INVTY_LOC_CD        = MI.INVTY_LOC_CD
                         AND SUBSTR(SOD.MDSE_CD, 0, 8) = MI.MDSE_CD
                         AND MI.MRP_INFO_RGTN_STS_CD IN(#mrpInfoRgtnStsCdAvailable#, #mrpInfoRgtnStsCdErrorBySupersede#)
                         AND MI.EZCANCELFLAG         = '0'
                         AND EXISTS(
                                 SELECT
                                     1
                                 FROM
                                     ORD_TAKE_MDSE OTM
                                 WHERE
                                     MI.GLBL_CMPY_CD  = OTM.GLBL_CMPY_CD
                                 AND MI.MDSE_CD = OTM.ORD_TAKE_MDSE_CD
                                 AND OTM.EZCANCELFLAG = '0'
                         )
<!-- START 05/28/2020 T.Ogura [QC#56977,ADD] -->
                         AND ROWNUM = 1
<!-- END   05/28/2020 T.Ogura [QC#56977,ADD] -->
                     )) MAX_INVTY_QTY
                     ,DECODE(SMM.SVC_MACH_MSTR_PK, NULL, SOD.SHIP_QTY, 1) AS INVTY_QTY
                     ,DECODE(SMM.SVC_MACH_MSTR_PK, NULL, SOD.SHIP_QTY, 1) AS INVTY_AVAL_QTY
                     ,CASE WHEN SMM.SVC_CONFIG_MSTR_PK IS NOT NULL THEN SMM.SVC_CONFIG_MSTR_PK
                           ELSE NULL
                      END  AS SVC_CONFIG_MSTR_PK
                     ,#locStsSubcontract#   AS LOC_STS_CD
                     ,#locStsSubcontractNm# AS LOC_STS_DESC_TXT
                     ,SOD.FROM_STK_STS_CD AS STK_STS_CD
                     ,SS.STK_STS_DESC_TXT
                     ,DILV_FROM.RTL_WH_NM AS SHIP_FROM_ACCT_NM
                     ,DILV_TO.RTL_WH_NM   AS SHIP_TO_ACCT_NM
                     ,SOT.SCE_ORD_TP_NM
                     ,SOD.PRCH_REQ_NUM AS TRX_HDR_NUM
                     ,SOD.PRCH_REQ_LINE_NUM AS DPLY_LINE_NUM
                     ,DECODE(MD.COA_MDSE_TP_CD,      NULL, MD.COA_MDSE_TP_CD,      MD.COA_MDSE_TP_CD      || ':' || CP.COA_PROJ_DESC_TXT)      AS COA_PROJ_LONG_DESC_TXT
                     ,DECODE(MD.MDSE_ITEM_TP_CD,     NULL, MD.MDSE_ITEM_TP_CD,     MD.MDSE_ITEM_TP_CD     || ':' || MIT.MDSE_ITEM_TP_DESC_TXT) AS MDSE_ITEM_TP_LONG_DESC_TXT
                     ,DECODE(MD.ZEROTH_PROD_CTRL_CD, NULL, MD.ZEROTH_PROD_CTRL_CD, MD.ZEROTH_PROD_CTRL_CD || ':' || MD.ZEROTH_PROD_CTRL_NM)    AS ZEROTH_PROD_CTRL_DESC_TXT
                     ,DECODE(MD.FIRST_PROD_CTRL_CD,  NULL, MD.FIRST_PROD_CTRL_CD,  MD.FIRST_PROD_CTRL_CD  || ':' || MD.FIRST_PROD_CTRL_NM)     AS FIRST_PROD_CTRL_DESC_TXT
                     ,DECODE(MD.SCD_PROD_CTRL_CD,    NULL, MD.SCD_PROD_CTRL_CD,    MD.SCD_PROD_CTRL_CD    || ':' || MD.SCD_PROD_CTRL_NM)       AS SCD_PROD_CTRL_DESC_TXT
                     ,DECODE(MD.THIRD_PROD_CTRL_CD,  NULL, MD.THIRD_PROD_CTRL_CD,  MD.THIRD_PROD_CTRL_CD  || ':' || MD.THIRD_PROD_CTRL_NM)     AS THIRD_PROD_CTRL_DESC_TXT
                     ,DECODE(MD.FRTH_PROD_CTRL_CD,   NULL, MD.FRTH_PROD_CTRL_CD,   MD.FRTH_PROD_CTRL_CD   || ':' || MD.FRTH_PROD_CTRL_NM)      AS FRTH_PROD_CTRL_DESC_TXT
                     ,CASE WHEN SMM.SVC_CONFIG_MSTR_PK IS NOT NULL THEN #flgY#
                           WHEN SMM.SER_NUM            IS NULL     THEN #flgN#
                           WHEN SMM.SVC_MACH_MSTR_PK   IS NOT NULL THEN #flgY#
                           ELSE #flgN#
                      END  AS MACH_FLG
                     ,CASE WHEN SMM.SVC_CONFIG_MSTR_PK IS NOT NULL THEN SMM.SVC_MACH_MSTR_PK
                           WHEN SMM.SER_NUM            IS NULL     THEN NULL
                           ELSE SMM.SVC_MACH_MSTR_PK
                      END  AS SVC_MACH_MSTR_PK
                     ,NULL AS STK_IN_DT
                 FROM
                      SHPG_ORD_DTL       SOD
                     ,SHPG_ORD           SO
                     ,SCE_ORD_TP         SOT
                     ,MDSE               MD
                     ,COA_PROJ           CP
                     ,MDSE_ITEM_TP       MIT
                     ,INVTY              INV
                     ,STK_STS            SS
                     ,DS_INVTY_LOC_V     DILV_FROM
                     ,DS_INVTY_LOC_V     DILV_TO
                     <!-- START 2023/03/07 S.Dong [QC#61205, MOD] -->
                     ,RTL_WH             RW1
                     <!-- END 2023/03/07 S.Dong [QC#61205, MOD] -->
                     ,RTL_WH_CATG        RWC
                     ,SVC_MACH_MSTR      SMM
                 WHERE
                     SOD.GLBL_CMPY_CD           = #glblCmpyCd#
                 AND SOD.SHPG_STS_CD            = #shpgSts38#
                 <isNotNull property="mdseCdList">
                     <iterate property="mdseCdList" var="mdseCdList[]" open="AND (SOD.MDSE_CD LIKE " conjunction= "OR SOD.MDSE_CD LIKE " close=")">
                         #mdseCdList[]#
                     </iterate>
                 </isNotNull>
                 <isNotNull property="toLocCdList">
                     <iterate property="toLocCdList" var="toLocCdList[]" open="AND (SO.SHIP_TO_CUST_CD LIKE " conjunction= "OR SO.SHIP_TO_CUST_CD LIKE " close=")">
                         #toLocCdList[]#
                     </iterate>
                 </isNotNull>
                 AND SOD.EZCANCELFLAG           = '0'
                 AND SOD.GLBL_CMPY_CD           = SO.GLBL_CMPY_CD
                 AND SOD.SO_NUM                 = SO.SO_NUM
                 AND SO.SCE_ORD_TP_CD           = #sceOrdTpRP#
                 AND SO.EZCANCELFLAG            = '0'
                 AND SO.GLBL_CMPY_CD            = SOT.GLBL_CMPY_CD
                 AND SO.SCE_ORD_TP_CD           = SOT.SCE_ORD_TP_CD
                 AND SOT.INBD_OTBD_CD           = #inbdOtbdCdOt#
                 AND SOT.EZCANCELFLAG           = '0'
                 AND SOD.GLBL_CMPY_CD           = MD.GLBL_CMPY_CD
                 AND SOD.MDSE_CD                = MD.MDSE_CD
                 <isNotNull property="cMsg.zerothProdCtrlNm_HB">
                 AND UPPER(MD.ZEROTH_PROD_CTRL_NM) LIKE #cMsg.zerothProdCtrlNm_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.firstProdCtrlNm_HB">
                 AND UPPER(MD.FIRST_PROD_CTRL_NM)  LIKE #cMsg.firstProdCtrlNm_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.scdProdCtrlNm_HB">
                 AND UPPER(MD.SCD_PROD_CTRL_NM)    LIKE #cMsg.scdProdCtrlNm_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.thirdProdCtrlNm_HB">
                 AND UPPER(MD.THIRD_PROD_CTRL_NM)  LIKE #cMsg.thirdProdCtrlNm_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.frthProdCtrlNm_HB">
                 AND UPPER(MD.FRTH_PROD_CTRL_NM)   LIKE #cMsg.frthProdCtrlNm_HB#
                 </isNotNull>
                 AND MD.INVTY_CTRL_FLG     = #flgY#
                 <isNotNull property="cMsg.coaProjCd_HB">
                 AND MD.COA_MDSE_TP_CD     = #cMsg.coaProjCd_HB#
                 </isNotNull>
                 <isNotNull property="cMsg.mdseItemTpCd_HB">
                 AND MD.MDSE_ITEM_TP_CD    = #cMsg.mdseItemTpCd_HB#
                 </isNotNull>
                 <isEqual property="cMsg.xxChkBox_HB" compareValue="Y">
                 AND MD.RTRN_REQ_PRT_FLG   = #cMsg.xxChkBox_HB#
                 </isEqual>
                 <isNotNull property="cMsg.rtrnCtrlTpVndRelnPk_HB">
                 AND MD.RTRN_CTRL_TP_VND_RELN_PK      = #cMsg.rtrnCtrlTpVndRelnPk_HB#
                 </isNotNull>
                 AND MD.GLBL_CMPY_CD            = CP.GLBL_CMPY_CD
                 AND MD.COA_MDSE_TP_CD          = CP.COA_PROJ_CD
                 AND CP.EZCANCELFLAG            = '0'
                 AND MD.GLBL_CMPY_CD            = MIT.GLBL_CMPY_CD
                 AND MD.MDSE_ITEM_TP_CD         = MIT.MDSE_ITEM_TP_CD
                 AND MIT.EZCANCELFLAG           = '0'
                 
                 AND SOD.GLBL_CMPY_CD           = INV.GLBL_CMPY_CD
                 AND SOD.MDSE_CD                = INV.MDSE_CD
                 AND SOD.TO_INVTY_LOC_CD        = INV.INVTY_LOC_CD
                 AND INV.INVTY_QTY            &gt; 0 
                 <isNotNull property="whCdList">
                     <iterate property="whCdList" var="whCdList[]" open="AND (SOD.SHIP_TO_RTL_WH_CD LIKE " conjunction= "OR SOD.SHIP_TO_RTL_WH_CD LIKE " close=")">
                         #whCdList[]#
                     </iterate>
                 </isNotNull>
                 <isNotNull property="swhCdList">
                     <iterate property="swhCdList" var="swhCdList[]" open="AND (SOD.SHIP_TO_RTL_SWH_CD LIKE " conjunction= "OR SOD.SHIP_TO_RTL_SWH_CD LIKE " close=")">
                         #swhCdList[]#
                     </iterate>
                 </isNotNull>
                 AND INV.LOC_STS_CD             = #locStsSubcontract#
                 <isNotNull property="stkStsList">
                     <iterate property="stkStsList" var="stkStsList[]" open="AND INV.STK_STS_CD IN (" conjunction= ", " close=")">
                         #stkStsList[]#
                     </iterate>
                 </isNotNull>
                 AND INV.EZCANCELFLAG           = '0'
                 
                 AND SOD.GLBL_CMPY_CD            = SS.GLBL_CMPY_CD
                 AND SOD.FROM_STK_STS_CD        = SS.STK_STS_CD
                 AND SS.EZCANCELFLAG            = '0'
                 AND SOD.GLBL_CMPY_CD           = DILV_FROM.GLBL_CMPY_CD
                 AND SOD.INVTY_LOC_CD           = DILV_FROM.INVTY_LOC_CD
                 AND DILV_FROM.EZCANCELFLAG     = '0'
                 AND SOD.GLBL_CMPY_CD           = DILV_TO.GLBL_CMPY_CD
                 AND SOD.TO_INVTY_LOC_CD        = DILV_TO.INVTY_LOC_CD
                 AND DILV_TO.EZCANCELFLAG       = '0'
                 AND DILV_TO.GLBL_CMPY_CD       = RWC.GLBL_CMPY_CD
                 AND DILV_TO.RTL_WH_CATG_CD     = RWC.RTL_WH_CATG_CD
                 <isNotNull property="cMsg.rtlWhCatgCd_HB">
                 AND RWC.RTL_WH_CATG_CD    = #cMsg.rtlWhCatgCd_HB#
                 </isNotNull>
                 <!-- START 2023/03/07 S.Dong [QC#61205, ADD] -->
                 AND DILV_TO.RTL_WH_CD          = RW1.RTL_WH_CD
                 AND DILV_TO.GLBL_CMPY_CD       = RW1.GLBL_CMPY_CD
                 AND RW1.EZCANCELFLAG           = '0'
                 <isNotNull property="cMsg.whOwnrCd_HB">
                 AND RW1.WH_OWNR_CD             = #cMsg.whOwnrCd_HB#
                 </isNotNull>
                 <!-- END 2023/03/07 S.Dong [QC#61205, ADD] -->
                 AND RWC.EZCANCELFLAG           = '0'
                 AND SOD.GLBL_CMPY_CD           = SMM.GLBL_CMPY_CD(+)
                 AND SOD.TRX_HDR_NUM            = SMM.TRX_HDR_NUM(+)
                 AND SOD.TRX_LINE_NUM           = SMM.TRX_LINE_NUM(+)
                 AND SOD.TRX_LINE_SUB_NUM       = SMM.TRX_LINE_SUB_NUM(+)
                 AND SMM.SVC_MACH_MSTR_LOC_STS_CD(+)        = #locStsSubcontract#
                 <isNotNull property="serNumList">
                     <iterate property="serNumList" var="serNumList[]" open="AND (SMM.SER_NUM LIKE " conjunction= "OR SMM.SER_NUM LIKE " close=")">
                         #serNumList[]#
                     </iterate>
                 </isNotNull>
                 <isNotNull property="configIDList">
                     <iterate property="configIDList" var="configIDList[]" open="AND (SMM.SVC_CONFIG_MSTR_PK LIKE " conjunction= "OR SMM.SVC_CONFIG_MSTR_PK LIKE " close=")">
                         #configIDList[]#
                     </iterate>
                 </isNotNull>
                 AND SMM.EZCANCELFLAG(+)        = '0'
                 AND NOT EXISTS(
                     SELECT
                         1
                     FROM
                        PRCH_REQ_DTL PRD
                       ,PO_DTL PD
                     WHERE
                         PRD.GLBL_CMPY_CD  = SO.GLBL_CMPY_CD
                     AND PRD.INVTY_ORD_NUM = SO.TRX_HDR_NUM
                     AND PRD.GLBL_CMPY_CD  = PD.GLBL_CMPY_CD
                     AND PRD.PO_ORD_NUM    = PD.PO_ORD_NUM
                     AND PRD.PO_ORD_DTL_LINE_NUM    = PD.PO_ORD_DTL_LINE_NUM
                     AND PD.PO_STS_CD      IN(#poSts05#, #poSts06#)
                     AND PRD.EZCANCELFLAG  = '0'
                     AND PD.EZCANCELFLAG   = '0'
                 )
             </isEqual>
            ) INVTY_V
        GROUP BY
            INVTY_V.GLBL_CMPY_CD
           ,INVTY_V.MDSE_CD
           ,INVTY_V.MDSE_DESC_SHORT_TXT
           ,INVTY_V.SER_NUM
           ,INVTY_V.RTL_WH_CATG_DESC_TXT
           ,INVTY_V.RTL_WH_CD
           ,INVTY_V.RTL_WH_NM
           ,INVTY_V.RTL_SWH_CD
           ,INVTY_V.INVTY_LOC_CD
           <!-- START 2017/12/18 S.Katsuma [QC#21834,ADD] -->
           ,INVTY_V.ROP_QTY
           ,INVTY_V.MAX_INVTY_QTY
           <!-- END 2017/12/18 S.Katsuma [QC#21834,ADD] -->
           ,INVTY_V.SVC_CONFIG_MSTR_PK
           ,INVTY_V.LOC_STS_CD
           ,INVTY_V.LOC_STS_DESC_TXT
           ,INVTY_V.STK_STS_CD
           ,INVTY_V.STK_STS_DESC_TXT
           ,INVTY_V.SHIP_FROM_ACCT_NM
           ,INVTY_V.SHIP_TO_ACCT_NM
           ,INVTY_V.SCE_ORD_TP_NM
           ,INVTY_V.TRX_HDR_NUM
           ,INVTY_V.DPLY_LINE_NUM
           ,INVTY_V.COA_PROJ_LONG_DESC_TXT
           ,INVTY_V.MDSE_ITEM_TP_LONG_DESC_TXT
           ,INVTY_V.ZEROTH_PROD_CTRL_DESC_TXT
           ,INVTY_V.FIRST_PROD_CTRL_DESC_TXT
           ,INVTY_V.SCD_PROD_CTRL_DESC_TXT
           ,INVTY_V.THIRD_PROD_CTRL_DESC_TXT
           ,INVTY_V.FRTH_PROD_CTRL_DESC_TXT
           ,INVTY_V.MACH_FLG
           ,INVTY_V.SVC_MACH_MSTR_PK
           ,INVTY_V.STK_IN_DT
        ORDER BY
            INVTY_V.GLBL_CMPY_CD
           ,INVTY_V.SVC_CONFIG_MSTR_PK
           ,INVTY_V.SVC_MACH_MSTR_PK
    </statement>

    <!-- START 2017/12/18 S.Katsuma [QC#21834,ADD] -->
    <statement id="getRtrnCtrlTp" parameterClass="Map" resultClass="Map">
        SELECT
            A.RTRN_CTRL_TP_CD
           ,C.RTRN_CTRL_TP_NM
           ,B.PRNT_VND_CD
           ,B.PRNT_VND_NM
           ,A.VND_CD
           ,B.VND_NM
        FROM
            RTRN_CTRL_TP_VND_RELN A
           ,PO_VND_V B
           ,RTRN_CTRL_TP C
        WHERE
            A.GLBL_CMPY_CD             = #glblCmpyCd#
        AND A.EZCANCELFLAG             = '0'
        AND A.GLBL_CMPY_CD             = B.GLBL_CMPY_CD (+)
        AND A.VND_CD                   = B.VND_CD (+)
        AND B.EZCANCELFLAG(+)          = '0'
        AND A.GLBL_CMPY_CD             = C.GLBL_CMPY_CD (+)
        AND A.RTRN_CTRL_TP_CD          = C.RTRN_CTRL_TP_CD (+)
        AND C.EZCANCELFLAG(+)          = '0'
        AND A.RTRN_CTRL_TP_VND_RELN_PK = #rtrnCtrlTpVndRelnPk#
    </statement>
    <!-- END 2017/12/18 S.Katsuma [QC#21834,ADD] -->
    <!-- START 2018/02/22 T.Wada [QC#21830,ADD] -->
    <statement id="getMdseCd" parameterClass="Map" resultClass="Map">
        SELECT
            A.MDSE_CD
        FROM
            MDSE A
        WHERE
            A.GLBL_CMPY_CD             = #glblCmpyCd#
        AND A.EZCANCELFLAG             = '0'
        <iterate property="mdseCdList" var="mdseCdList[]" open="AND (A.MDSE_CD LIKE " conjunction= "OR A.MDSE_CD LIKE " close=")">
            #mdseCdList[]#
        </iterate>
        AND ROWNUM  &lt;= #rowNum#
    </statement>
    <!-- END 2018/02/22 T.Wada [QC#21830,ADD] -->

    <!-- START 2018/03/20 S.Katsuma [QC#24715,ADD] -->
    <statement id="getMrpInfoForOrdTakeMdse" parameterClass="Map" resultClass="Map">
        SELECT
            MI.MDSE_CD
           ,MI.RTL_WH_CD
           ,RW.RTL_WH_NM
           ,MI.RTL_SWH_CD
           ,MI.ROP_QTY
           ,MI.MAX_INVTY_QTY
        FROM
            MRP_INFO MI
           ,RTL_WH   RW
        WHERE
            MI.GLBL_CMPY_CD          = #glblCmpyCd#
        AND MI.EZCANCELFLAG          = '0'
        AND MI.MRP_INFO_RGTN_STS_CD != #mrpInfoRgtnStsCdTerminated#
        <isNotNull property="whCdList">
            <iterate property="whCdList" var="whCdList[]" open="AND (MI.RTL_WH_CD LIKE " conjunction= "OR MI.RTL_WH_CD LIKE " close=")">
                #whCdList[]#
            </iterate>
        </isNotNull>
        <isNotNull property="swhCdList">
            <iterate property="swhCdList" var="swhCdList[]" open="AND (MI.RTL_SWH_CD LIKE " conjunction= "OR MI.RTL_SWH_CD LIKE " close=")">
                #swhCdList[]#
            </iterate>
        </isNotNull>
        AND MI.GLBL_CMPY_CD          = RW.GLBL_CMPY_CD
        AND MI.RTL_WH_CD             = RW.RTL_WH_CD
        AND RW.EZCANCELFLAG          = '0'
        AND EXISTS(
                SELECT
                    1
                FROM
                    ORD_TAKE_MDSE OTM
                WHERE
                    MI.GLBL_CMPY_CD  = OTM.GLBL_CMPY_CD
                AND MI.MDSE_CD       = OTM.ORD_TAKE_MDSE_CD
                AND OTM.EZCANCELFLAG = '0'
        )
        ORDER BY
            MI.MDSE_CD
    </statement>
    <!-- END 2018/03/20 S.Katsuma [QC#24715,ADD] -->
</sqlMap>
