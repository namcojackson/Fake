//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20230404080654000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NPAL1500_TBMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NPAL1500;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NPAL1500 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NPAL1500_TBMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_HDR_NUM_T*/
	public final EZDBStringItem              xxHdrNum_T;

    /** XX_DPLY_TRX_NUM_TXT_T*/
	public final EZDBStringItem              xxDplyTrxNumTxt_T;

    /** MDSE_CD_T*/
	public final EZDBStringItem              mdseCd_T;

    /** SER_NUM_T*/
	public final EZDBStringItem              serNum_T;

    /** XX_EDT_MODE_FLG_T*/
	public final EZDBStringItem              xxEdtModeFlg_T;

    /** XX_TRX_REF_PK_T*/
	public final EZDBBigDecimalItem              xxTrxRefPk_T;

    /** XX_RQST_TP_CD_T*/
	public final EZDBStringItem              xxRqstTpCd_T;

    /** RTL_SWH_CD_T*/
	public final EZDBStringItem              rtlSwhCd_T;

    /** INVTY_LOC_CD_T*/
	public final EZDBStringItem              invtyLocCd_T;

    /** SVC_CONFIG_MSTR_PK_T*/
	public final EZDBBigDecimalItem              svcConfigMstrPk_T;

    /** SER_NUM_TAKE_FLG_T*/
	public final EZDBStringItem              serNumTakeFlg_T;


	/**
	 * NPAL1500_TBMsg is constructor.
	 * The initialization when the instance of NPAL1500_TBMsg is generated.
	 */
	public NPAL1500_TBMsg() {
		this(false, -1);
	}

	/**
	 * NPAL1500_TBMsg is constructor.
	 * The initialization when the instance of NPAL1500_TBMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NPAL1500_TBMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxHdrNum_T = (EZDBStringItem)newItem("xxHdrNum_T");
		xxDplyTrxNumTxt_T = (EZDBStringItem)newItem("xxDplyTrxNumTxt_T");
		mdseCd_T = (EZDBStringItem)newItem("mdseCd_T");
		serNum_T = (EZDBStringItem)newItem("serNum_T");
		xxEdtModeFlg_T = (EZDBStringItem)newItem("xxEdtModeFlg_T");
		xxTrxRefPk_T = (EZDBBigDecimalItem)newItem("xxTrxRefPk_T");
		xxRqstTpCd_T = (EZDBStringItem)newItem("xxRqstTpCd_T");
		rtlSwhCd_T = (EZDBStringItem)newItem("rtlSwhCd_T");
		invtyLocCd_T = (EZDBStringItem)newItem("invtyLocCd_T");
		svcConfigMstrPk_T = (EZDBBigDecimalItem)newItem("svcConfigMstrPk_T");
		serNumTakeFlg_T = (EZDBStringItem)newItem("serNumTakeFlg_T");
	}

	/**
	 * get the type of array which is stored
	 * @return NPAL1500_TBMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NPAL1500_TBMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxHdrNum_T", "xxHdrNum_T", "T", null, TYPE_HANKAKUEISU, "8", null},
	{"xxDplyTrxNumTxt_T", "xxDplyTrxNumTxt_T", "T", null, TYPE_HANKAKUEISU, "15", null},
	{"mdseCd_T", "mdseCd_T", "T", null, TYPE_HANKAKUEISU, "16", null},
	{"serNum_T", "serNum_T", "T", null, TYPE_HANKAKUEISU, "30", null},
	{"xxEdtModeFlg_T", "xxEdtModeFlg_T", "T", null, TYPE_HANKAKUEISU, "1", null},
	{"xxTrxRefPk_T", "xxTrxRefPk_T", "T", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"xxRqstTpCd_T", "xxRqstTpCd_T", "T", null, TYPE_HANKAKUEISU, "1", null},
	{"rtlSwhCd_T", "rtlSwhCd_T", "T", null, TYPE_HANKAKUEISU, "20", null},
	{"invtyLocCd_T", "invtyLocCd_T", "T", null, TYPE_HANKAKUEISU, "20", null},
	{"svcConfigMstrPk_T", "svcConfigMstrPk_T", "T", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"serNumTakeFlg_T", "serNumTakeFlg_T", "T", null, TYPE_HANKAKUEISU, "1", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_HDR_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxHdrNum_T
        {"XX_DPLY_TRX_NUM_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDplyTrxNumTxt_T
        {"MDSE_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd_T
        {"SER_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNum_T
        {"XX_EDT_MODE_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxEdtModeFlg_T
        {"XX_TRX_REF_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxTrxRefPk_T
        {"XX_RQST_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRqstTpCd_T
        {"RTL_SWH_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlSwhCd_T
        {"INVTY_LOC_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invtyLocCd_T
        {"SVC_CONFIG_MSTR_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcConfigMstrPk_T
        {"SER_NUM_TAKE_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNumTakeFlg_T
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

