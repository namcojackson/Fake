//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20161130113131000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL1050BMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NSAL1050;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL1050 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL1050BMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** GLBL_CMPY_CD*/
	public final EZDBStringItem              glblCmpyCd;

    /** SLS_DT*/
	public final EZDBDateItem              slsDt;

    /** SVC_TERM_ATTRB_DESC_TXT*/
	public final EZDBStringItem              svcTermAttrbDescTxt;

    /** XX_CHK_BOX_H*/
	public final EZDBStringItem              xxChkBox_H;

    /** SVC_TERM_DATA_TP_CD_1C*/
	public final EZDBStringItemArray              svcTermDataTpCd_1C;

    /** SVC_TERM_DATA_TP_DESC_TXT_1D*/
	public final EZDBStringItemArray              svcTermDataTpDescTxt_1D;

    /** SVC_TERM_COND_CATG_PK_1C*/
	public final EZDBBigDecimalItemArray              svcTermCondCatgPk_1C;

    /** SVC_TERM_COND_CATG_DESC_TXT_1D*/
	public final EZDBStringItemArray              svcTermCondCatgDescTxt_1D;

    /** XX_COMN_COL_ORD_TXT*/
	public final EZDBStringItem              xxComnColOrdTxt;

    /** XX_FILE_DATA*/
	public final EZDBMimeSourceItem              xxFileData;

    /** XX_NUM*/
	public final EZDBBigDecimalItem              xxNum;

    /** A*/
	public final business.servlet.NSAL1050.NSAL1050_ABMsgArray              A;

    /** B*/
	public final business.servlet.NSAL1050.NSAL1050_BBMsgArray              B;


	/**
	 * NSAL1050BMsg is constructor.
	 * The initialization when the instance of NSAL1050BMsg is generated.
	 */
	public NSAL1050BMsg() {
		this(false, -1);
	}

	/**
	 * NSAL1050BMsg is constructor.
	 * The initialization when the instance of NSAL1050BMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL1050BMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		glblCmpyCd = (EZDBStringItem)newItem("glblCmpyCd");
		slsDt = (EZDBDateItem)newItem("slsDt");
		svcTermAttrbDescTxt = (EZDBStringItem)newItem("svcTermAttrbDescTxt");
		xxChkBox_H = (EZDBStringItem)newItem("xxChkBox_H");
		svcTermDataTpCd_1C = (EZDBStringItemArray)newItemArray("svcTermDataTpCd_1C");
		svcTermDataTpDescTxt_1D = (EZDBStringItemArray)newItemArray("svcTermDataTpDescTxt_1D");
		svcTermCondCatgPk_1C = (EZDBBigDecimalItemArray)newItemArray("svcTermCondCatgPk_1C");
		svcTermCondCatgDescTxt_1D = (EZDBStringItemArray)newItemArray("svcTermCondCatgDescTxt_1D");
		xxComnColOrdTxt = (EZDBStringItem)newItem("xxComnColOrdTxt");
		xxFileData = (EZDBMimeSourceItem)newItem("xxFileData");
		xxNum = (EZDBBigDecimalItem)newItem("xxNum");
		A = (business.servlet.NSAL1050.NSAL1050_ABMsgArray)newMsgArray("A");
		B = (business.servlet.NSAL1050.NSAL1050_BBMsgArray)newMsgArray("B");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL1050BMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL1050BMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"glblCmpyCd", "glblCmpyCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"slsDt", "slsDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"svcTermAttrbDescTxt", "svcTermAttrbDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"xxChkBox_H", "xxChkBox_H", "H", null, TYPE_HANKAKUEIJI, "1", null},
	{"svcTermDataTpCd_1C", "svcTermDataTpCd_1C", "1C", "99", TYPE_HANKAKUEISU, "2", null},
	{"svcTermDataTpDescTxt_1D", "svcTermDataTpDescTxt_1D", "1D", "99", TYPE_HANKAKUEISU, "50", null},
	{"svcTermCondCatgPk_1C", "svcTermCondCatgPk_1C", "1C", "99", TYPE_SEISU_SYOSU, "28", "0"},
	{"svcTermCondCatgDescTxt_1D", "svcTermCondCatgDescTxt_1D", "1D", "99", TYPE_HANKAKUEISU, "50", null},
	{"xxComnColOrdTxt", "xxComnColOrdTxt", null, null, TYPE_HANKAKUEISU, "2000", null},
	{"xxFileData", "xxFileData", null, null, TYPE_UPLOAD, null, null},
	{"xxNum", "xxNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"A", "A", null, "200", "business.servlet.NSAL1050.NSAL1050_ABMsgArray", null, null},
	
	{"B", "B", null, "200", "business.servlet.NSAL1050.NSAL1050_BBMsgArray", null, null},
	
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"GLBL_CMPY_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//glblCmpyCd
        {"SLS_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO,  NO},	//slsDt
        {"SVC_TERM_ATTRB_DESC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTermAttrbDescTxt
        {"XX_CHK_BOX",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_H
        {"SVC_TERM_DATA_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTermDataTpCd_1C
        {"SVC_TERM_DATA_TP_DESC_TXT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTermDataTpDescTxt_1D
        {"SVC_TERM_COND_CATG_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTermCondCatgPk_1C
        {"SVC_TERM_COND_CATG_DESC_TXT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTermCondCatgDescTxt_1D
        {"XX_COMN_COL_ORD_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxComnColOrdTxt
        {"XX_FILE_DATA",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxFileData
        {"XX_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxNum
		null,	//A
		null,	//B
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

