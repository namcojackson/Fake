// This file was automatically generated by Screen Field Definition Document and XLA200710010
// Generated on    :20161130113131000
// Velocity Macro:svltdatabean.vm V200604010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL1050Bean.java Copyright FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */

package  business.servlet.NSAL1050;

import com.fujitsu.uji.util.MimeSource;
import parts.servletcommon.EZDCommonDataBean;

/*
 * NSAL1050 is data bean class.
 */
public class NSAL1050Bean extends EZDCommonDataBean {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	//Constant Definition Area
	/** GLBL_CMPY_CD*/
	public static final String glblCmpyCd = "glblCmpyCd";

	/** SLS_DT*/
	public static final String slsDt = "slsDt";

	/** SVC_TERM_ATTRB_DESC_TXT*/
	public static final String svcTermAttrbDescTxt = "svcTermAttrbDescTxt";

	/** XX_CHK_BOX_H*/
	public static final String xxChkBox_H = "xxChkBox_H";

	/** SVC_TERM_DATA_TP_CD_1C*/
	public static final String svcTermDataTpCd_1C = "svcTermDataTpCd_1C";

	/** SVC_TERM_DATA_TP_DESC_TXT_1D*/
	public static final String svcTermDataTpDescTxt_1D = "svcTermDataTpDescTxt_1D";

	/** SVC_TERM_COND_CATG_PK_1C*/
	public static final String svcTermCondCatgPk_1C = "svcTermCondCatgPk_1C";

	/** SVC_TERM_COND_CATG_DESC_TXT_1D*/
	public static final String svcTermCondCatgDescTxt_1D = "svcTermCondCatgDescTxt_1D";

	/** XX_COMN_COL_ORD_TXT*/
	public static final String xxComnColOrdTxt = "xxComnColOrdTxt";

	/** XX_FILE_DATA*/
	public static final String xxFileData = "xxFileData";

	/** XX_NUM*/
	public static final String xxNum = "xxNum";

	/** A*/
	public static final String A = "A";

	/** XX_CHK_BOX_A*/
	public static final String xxChkBox_A = "xxChkBox_A";

	/** SVC_TERM_ATTRB_DESC_TXT_A*/
	public static final String svcTermAttrbDescTxt_A = "svcTermAttrbDescTxt_A";

	/** SVC_TERM_COND_ATTRB_NM_A*/
	public static final String svcTermCondAttrbNm_A = "svcTermCondAttrbNm_A";

	/** SVC_TERM_COND_DATA_SRC_CD_A*/
	public static final String svcTermCondDataSrcCd_A = "svcTermCondDataSrcCd_A";

	/** SVC_TERM_COND_SRC_DESC_TXT_A*/
	public static final String svcTermCondSrcDescTxt_A = "svcTermCondSrcDescTxt_A";

	/** SVC_TERM_DATA_TP_CD_1V*/
	public static final String svcTermDataTpCd_1V = "svcTermDataTpCd_1V";

	/** SVC_TERM_DATA_TP_DESC_TXT_A*/
	public static final String svcTermDataTpDescTxt_A = "svcTermDataTpDescTxt_A";

	/** SVC_TERM_ATTRB_SORT_NUM_A*/
	public static final String svcTermAttrbSortNum_A = "svcTermAttrbSortNum_A";

	/** SVC_TERM_COND_CATG_PK_1V*/
	public static final String svcTermCondCatgPk_1V = "svcTermCondCatgPk_1V";

	/** SVC_TERM_COND_CATG_DESC_TXT_A*/
	public static final String svcTermCondCatgDescTxt_A = "svcTermCondCatgDescTxt_A";

	/** XX_CHK_BOX_AC*/
	public static final String xxChkBox_AC = "xxChkBox_AC";

	/** XX_CHK_BOX_AM*/
	public static final String xxChkBox_AM = "xxChkBox_AM";

	/** XX_CHK_BOX_AA*/
	public static final String xxChkBox_AA = "xxChkBox_AA";

	/** EFF_FROM_DT_A*/
	public static final String effFromDt_A = "effFromDt_A";

	/** EFF_TO_DT_A*/
	public static final String effToDt_A = "effToDt_A";

	/** SVC_TERM_COND_ATTRB_PK_A*/
	public static final String svcTermCondAttrbPk_A = "svcTermCondAttrbPk_A";

	/** _EZUpdateDateTime*/
	public static final String ezUpTime = "ezUpTime";

	/** _EZUpTimeZone*/
	public static final String ezUpTimeZone = "ezUpTimeZone";

	/** XX_REC_HIST_CRAT_TS_A*/
	public static final String xxRecHistCratTs_A = "xxRecHistCratTs_A";

	/** XX_REC_HIST_CRAT_BY_NM_A*/
	public static final String xxRecHistCratByNm_A = "xxRecHistCratByNm_A";

	/** XX_REC_HIST_UPD_TS_A*/
	public static final String xxRecHistUpdTs_A = "xxRecHistUpdTs_A";

	/** XX_REC_HIST_UPD_BY_NM_A*/
	public static final String xxRecHistUpdByNm_A = "xxRecHistUpdByNm_A";

	/** XX_REC_HIST_TBL_NM_A*/
	public static final String xxRecHistTblNm_A = "xxRecHistTblNm_A";

	/** B*/
	public static final String B = "B";

	/** XX_COMN_SCR_COL_VAL_TXT*/
	public static final String xxComnScrColValTxt = "xxComnScrColValTxt";

	/**
	 * Method name:NSAL1050 is Bean's Constructor.
	 * <dd>method explanation:Initialization when instance of NSAL1050Bean is generated
	 * <dd>Remarks:
	 */
	public NSAL1050Bean() {
		super("business.servlet.NSAL1050.NSAL1050BMsg");
	}

	/**
	 * get  GLBL_CMPY_CD.
	 * @return GLBL_CMPY_CD
	 */
	public String getGlblCmpyCd() {
		return outputValue(glblCmpyCd);
	}

	/**
	 * set  GLBL_CMPY_CD.
	 * @param data GLBL_CMPY_CD
	 */
	public void setGlblCmpyCd(String data) {
		inputValue(glblCmpyCd,data);
	}

	/**
	 * get  SLS_DT.
	 * @return SLS_DT
	 */
	public String getSlsDt() {
		return outputValue(slsDt, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  SLS_DT.
	 * @param data SLS_DT
	 */
	public void setSlsDt(String data) {
		inputValue(slsDt, data, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * get  SVC_TERM_ATTRB_DESC_TXT.
	 * @return SVC_TERM_ATTRB_DESC_TXT
	 */
	public String getSvcTermAttrbDescTxt() {
		return outputValue(svcTermAttrbDescTxt);
	}

	/**
	 * set  SVC_TERM_ATTRB_DESC_TXT.
	 * @param data SVC_TERM_ATTRB_DESC_TXT
	 */
	public void setSvcTermAttrbDescTxt(String data) {
		inputValue(svcTermAttrbDescTxt,data);
	}

	/**
	 * get  XX_CHK_BOX_H.
	 * @return XX_CHK_BOX_H
	 */
	public String getXxChkBox_H() {
		return outputValue(xxChkBox_H);
	}

	/**
	 * set  XX_CHK_BOX_H.
	 * @param data XX_CHK_BOX_H
	 */
	public void setXxChkBox_H(String data) {
		inputValue(xxChkBox_H,data);
	}

	/**
	 * get  SVC_TERM_DATA_TP_CD_1C.
	 * @param idx1 Index Number
	 * @return SVC_TERM_DATA_TP_CD_1C
	 */
	public String getSvcTermDataTpCd_1C(int idx1) {
	 	 return outputValue(svcTermDataTpCd_1C, idx1);
	}

	/**
	 * get  SVC_TERM_DATA_TP_DESC_TXT_1D.
	 * @param idx1 Index Number
	 * @return SVC_TERM_DATA_TP_DESC_TXT_1D
	 */
	public String getSvcTermDataTpDescTxt_1D(int idx1) {
	 	 return outputValue(svcTermDataTpDescTxt_1D, idx1);
	}

	/**
	 * get  SVC_TERM_COND_CATG_PK_1C.
	 * @param idx1 Index Number
	 * @return SVC_TERM_COND_CATG_PK_1C
	 */
	public String getSvcTermCondCatgPk_1C(int idx1) {
	 	 return outputValue(svcTermCondCatgPk_1C, idx1);
	}

	/**
	 * get  SVC_TERM_COND_CATG_DESC_TXT_1D.
	 * @param idx1 Index Number
	 * @return SVC_TERM_COND_CATG_DESC_TXT_1D
	 */
	public String getSvcTermCondCatgDescTxt_1D(int idx1) {
	 	 return outputValue(svcTermCondCatgDescTxt_1D, idx1);
	}

	/**
	 * get  XX_COMN_COL_ORD_TXT.
	 * @return XX_COMN_COL_ORD_TXT
	 */
	public String getXxComnColOrdTxt() {
		return outputValue(xxComnColOrdTxt);
	}

	/**
	 * set  XX_COMN_COL_ORD_TXT.
	 * @param data XX_COMN_COL_ORD_TXT
	 */
	public void setXxComnColOrdTxt(String data) {
		inputValue(xxComnColOrdTxt,data);
	}

	/**
	 * set  XX_FILE_DATA.
	 * @param data XX_FILE_DATA
	 */
	public void setXxFileData(MimeSource data) {
		inputValue(xxFileData, data);
	}

	/**
	 * get  XX_NUM.
	 * @return XX_NUM
	 */
	public String getXxNum() {
		return outputValue(xxNum);
	}

	/**
	 * set  XX_NUM.
	 * @param data XX_NUM
	 */
	public void setXxNum(String data) {
		inputValue(xxNum,data);
	}

	/**
	 * get  XX_CHK_BOX_A.
	 * @param idx1 List Number
	 * @return XX_CHK_BOX_A
	 */
	public String getXxChkBox_A(int idx1) {
		return outputValue(A, idx1, xxChkBox_A);
	}

	/**
	 * set  XX_CHK_BOX_A.
	 * @param data XX_CHK_BOX_AArray
	 */
	public void setXxChkBox_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxChkBox_A, data[j]);
		}
	}

	/**
	 * get  SVC_TERM_ATTRB_DESC_TXT_A.
	 * @param idx1 List Number
	 * @return SVC_TERM_ATTRB_DESC_TXT_A
	 */
	public String getSvcTermAttrbDescTxt_A(int idx1) {
		return outputValue(A, idx1, svcTermAttrbDescTxt_A);
	}

	/**
	 * set  SVC_TERM_ATTRB_DESC_TXT_A.
	 * @param data SVC_TERM_ATTRB_DESC_TXT_AArray
	 */
	public void setSvcTermAttrbDescTxt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcTermAttrbDescTxt_A, data[j]);
		}
	}

	/**
	 * get  SVC_TERM_COND_ATTRB_NM_A.
	 * @param idx1 List Number
	 * @return SVC_TERM_COND_ATTRB_NM_A
	 */
	public String getSvcTermCondAttrbNm_A(int idx1) {
		return outputValue(A, idx1, svcTermCondAttrbNm_A);
	}

	/**
	 * set  SVC_TERM_COND_ATTRB_NM_A.
	 * @param data SVC_TERM_COND_ATTRB_NM_AArray
	 */
	public void setSvcTermCondAttrbNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcTermCondAttrbNm_A, data[j]);
		}
	}

	/**
	 * get  SVC_TERM_COND_DATA_SRC_CD_A.
	 * @param idx1 List Number
	 * @return SVC_TERM_COND_DATA_SRC_CD_A
	 */
	public String getSvcTermCondDataSrcCd_A(int idx1) {
		return outputValue(A, idx1, svcTermCondDataSrcCd_A);
	}

	/**
	 * set  SVC_TERM_COND_DATA_SRC_CD_A.
	 * @param data SVC_TERM_COND_DATA_SRC_CD_AArray
	 */
	public void setSvcTermCondDataSrcCd_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcTermCondDataSrcCd_A, data[j]);
		}
	}

	/**
	 * get  SVC_TERM_COND_SRC_DESC_TXT_A.
	 * @param idx1 List Number
	 * @return SVC_TERM_COND_SRC_DESC_TXT_A
	 */
	public String getSvcTermCondSrcDescTxt_A(int idx1) {
		return outputValue(A, idx1, svcTermCondSrcDescTxt_A);
	}

	/**
	 * set  SVC_TERM_COND_SRC_DESC_TXT_A.
	 * @param data SVC_TERM_COND_SRC_DESC_TXT_AArray
	 */
	public void setSvcTermCondSrcDescTxt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcTermCondSrcDescTxt_A, data[j]);
		}
	}

	/**
	 * get  SVC_TERM_DATA_TP_CD_1V.
	 * @param idx1 List Number
	 * @return SVC_TERM_DATA_TP_CD_1V
	 */
	public String getSvcTermDataTpCd_1V(int idx1) {
		return outputValue(A, idx1, svcTermDataTpCd_1V);
	}

	/**
	 * set  SVC_TERM_DATA_TP_CD_1V.
	 * @param data SVC_TERM_DATA_TP_CD_1VArray
	 */
	public void setSvcTermDataTpCd_1V(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcTermDataTpCd_1V, data[j]);
		}
	}

	/**
	 * get  SVC_TERM_DATA_TP_DESC_TXT_A.
	 * @param idx1 List Number
	 * @return SVC_TERM_DATA_TP_DESC_TXT_A
	 */
	public String getSvcTermDataTpDescTxt_A(int idx1) {
		return outputValue(A, idx1, svcTermDataTpDescTxt_A);
	}

	/**
	 * set  SVC_TERM_DATA_TP_DESC_TXT_A.
	 * @param data SVC_TERM_DATA_TP_DESC_TXT_AArray
	 */
	public void setSvcTermDataTpDescTxt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcTermDataTpDescTxt_A, data[j]);
		}
	}

	/**
	 * get  SVC_TERM_ATTRB_SORT_NUM_A.
	 * @param idx1 List Number
	 * @return SVC_TERM_ATTRB_SORT_NUM_A
	 */
	public String getSvcTermAttrbSortNum_A(int idx1) {
		return outputValue(A, idx1, svcTermAttrbSortNum_A);
	}

	/**
	 * set  SVC_TERM_ATTRB_SORT_NUM_A.
	 * @param data SVC_TERM_ATTRB_SORT_NUM_AArray
	 */
	public void setSvcTermAttrbSortNum_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcTermAttrbSortNum_A, data[j]);
		}
	}

	/**
	 * get  SVC_TERM_COND_CATG_PK_1V.
	 * @param idx1 List Number
	 * @return SVC_TERM_COND_CATG_PK_1V
	 */
	public String getSvcTermCondCatgPk_1V(int idx1) {
		return outputValue(A, idx1, svcTermCondCatgPk_1V);
	}

	/**
	 * set  SVC_TERM_COND_CATG_PK_1V.
	 * @param data SVC_TERM_COND_CATG_PK_1VArray
	 */
	public void setSvcTermCondCatgPk_1V(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcTermCondCatgPk_1V, data[j]);
		}
	}

	/**
	 * get  SVC_TERM_COND_CATG_DESC_TXT_A.
	 * @param idx1 List Number
	 * @return SVC_TERM_COND_CATG_DESC_TXT_A
	 */
	public String getSvcTermCondCatgDescTxt_A(int idx1) {
		return outputValue(A, idx1, svcTermCondCatgDescTxt_A);
	}

	/**
	 * set  SVC_TERM_COND_CATG_DESC_TXT_A.
	 * @param data SVC_TERM_COND_CATG_DESC_TXT_AArray
	 */
	public void setSvcTermCondCatgDescTxt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcTermCondCatgDescTxt_A, data[j]);
		}
	}

	/**
	 * get  XX_CHK_BOX_AC.
	 * @param idx1 List Number
	 * @return XX_CHK_BOX_AC
	 */
	public String getXxChkBox_AC(int idx1) {
		return outputValue(A, idx1, xxChkBox_AC);
	}

	/**
	 * set  XX_CHK_BOX_AC.
	 * @param data XX_CHK_BOX_ACArray
	 */
	public void setXxChkBox_AC(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxChkBox_AC, data[j]);
		}
	}

	/**
	 * get  XX_CHK_BOX_AM.
	 * @param idx1 List Number
	 * @return XX_CHK_BOX_AM
	 */
	public String getXxChkBox_AM(int idx1) {
		return outputValue(A, idx1, xxChkBox_AM);
	}

	/**
	 * set  XX_CHK_BOX_AM.
	 * @param data XX_CHK_BOX_AMArray
	 */
	public void setXxChkBox_AM(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxChkBox_AM, data[j]);
		}
	}

	/**
	 * get  XX_CHK_BOX_AA.
	 * @param idx1 List Number
	 * @return XX_CHK_BOX_AA
	 */
	public String getXxChkBox_AA(int idx1) {
		return outputValue(A, idx1, xxChkBox_AA);
	}

	/**
	 * set  XX_CHK_BOX_AA.
	 * @param data XX_CHK_BOX_AAArray
	 */
	public void setXxChkBox_AA(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxChkBox_AA, data[j]);
		}
	}

	/**
	 * get  EFF_FROM_DT_A.
	 * @param idx1 List Number
	 * @return EFF_FROM_DT_A
	 */
	public String getEffFromDt_A(int idx1) {
		return outputValue(A, idx1, effFromDt_A, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  EFF_FROM_DT_A.
	 * @param data EFF_FROM_DT_AArray
	 */
	public void setEffFromDt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i,  effFromDt_A, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  EFF_TO_DT_A.
	 * @param idx1 List Number
	 * @return EFF_TO_DT_A
	 */
	public String getEffToDt_A(int idx1) {
		return outputValue(A, idx1, effToDt_A, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  EFF_TO_DT_A.
	 * @param data EFF_TO_DT_AArray
	 */
	public void setEffToDt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i,  effToDt_A, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  SVC_TERM_COND_ATTRB_PK_A.
	 * @param idx1 List Number
	 * @return SVC_TERM_COND_ATTRB_PK_A
	 */
	public String getSvcTermCondAttrbPk_A(int idx1) {
		return outputValue(A, idx1, svcTermCondAttrbPk_A);
	}

	/**
	 * set  SVC_TERM_COND_ATTRB_PK_A.
	 * @param data SVC_TERM_COND_ATTRB_PK_AArray
	 */
	public void setSvcTermCondAttrbPk_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcTermCondAttrbPk_A, data[j]);
		}
	}

	/**
	 * get  _EZUpdateDateTime.
	 * @param idx1 List Number
	 * @return _EZUpdateDateTime
	 */
	public String getEzUpTime(int idx1) {
		return outputValue(A, idx1, ezUpTime);
	}

	/**
	 * set  _EZUpdateDateTime.
	 * @param data _EZUpdateDateTimeArray
	 */
	public void setEzUpTime(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, ezUpTime, data[j]);
		}
	}

	/**
	 * get  _EZUpTimeZone.
	 * @param idx1 List Number
	 * @return _EZUpTimeZone
	 */
	public String getEzUpTimeZone(int idx1) {
		return outputValue(A, idx1, ezUpTimeZone);
	}

	/**
	 * set  _EZUpTimeZone.
	 * @param data _EZUpTimeZoneArray
	 */
	public void setEzUpTimeZone(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, ezUpTimeZone, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_CRAT_TS_A.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_CRAT_TS_A
	 */
	public String getXxRecHistCratTs_A(int idx1) {
		return outputValue(A, idx1, xxRecHistCratTs_A);
	}

	/**
	 * set  XX_REC_HIST_CRAT_TS_A.
	 * @param data XX_REC_HIST_CRAT_TS_AArray
	 */
	public void setXxRecHistCratTs_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRecHistCratTs_A, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_CRAT_BY_NM_A.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_CRAT_BY_NM_A
	 */
	public String getXxRecHistCratByNm_A(int idx1) {
		return outputValue(A, idx1, xxRecHistCratByNm_A);
	}

	/**
	 * set  XX_REC_HIST_CRAT_BY_NM_A.
	 * @param data XX_REC_HIST_CRAT_BY_NM_AArray
	 */
	public void setXxRecHistCratByNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRecHistCratByNm_A, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_UPD_TS_A.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_UPD_TS_A
	 */
	public String getXxRecHistUpdTs_A(int idx1) {
		return outputValue(A, idx1, xxRecHistUpdTs_A);
	}

	/**
	 * set  XX_REC_HIST_UPD_TS_A.
	 * @param data XX_REC_HIST_UPD_TS_AArray
	 */
	public void setXxRecHistUpdTs_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRecHistUpdTs_A, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_UPD_BY_NM_A.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_UPD_BY_NM_A
	 */
	public String getXxRecHistUpdByNm_A(int idx1) {
		return outputValue(A, idx1, xxRecHistUpdByNm_A);
	}

	/**
	 * set  XX_REC_HIST_UPD_BY_NM_A.
	 * @param data XX_REC_HIST_UPD_BY_NM_AArray
	 */
	public void setXxRecHistUpdByNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRecHistUpdByNm_A, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_TBL_NM_A.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_TBL_NM_A
	 */
	public String getXxRecHistTblNm_A(int idx1) {
		return outputValue(A, idx1, xxRecHistTblNm_A);
	}

	/**
	 * set  XX_REC_HIST_TBL_NM_A.
	 * @param data XX_REC_HIST_TBL_NM_AArray
	 */
	public void setXxRecHistTblNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRecHistTblNm_A, data[j]);
		}
	}

	/**
	 * get  XX_COMN_SCR_COL_VAL_TXT.
	 * @param idx1 List Number
	 * @return XX_COMN_SCR_COL_VAL_TXT
	 */
	public String getXxComnScrColValTxt(int idx1) {
		return outputValue(B, idx1, xxComnScrColValTxt);
	}

	/**
	 * set  XX_COMN_SCR_COL_VAL_TXT.
	 * @param data XX_COMN_SCR_COL_VAL_TXTArray
	 */
	public void setXxComnScrColValTxt(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, xxComnScrColValTxt, data[j]);
		}
	}

}

