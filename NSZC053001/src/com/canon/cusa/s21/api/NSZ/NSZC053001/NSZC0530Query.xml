<?xml version="1.0" encoding="UTF-8"?>

<sqlMap namespace="NSZC0530Query">

    <statement id="getDsContrCatgCd" parameterClass="Map" resultClass="String">
        SELECT
            B.DS_CONTR_CATG_CD
        FROM
             SVC_INV  A
            ,DS_CONTR B
        WHERE
                A.EZCANCELFLAG = '0'
            AND A.GLBL_CMPY_CD = #glblCmpyCd#
            AND A.SVC_INV_NUM  = #svcInvNum#
            AND B.EZCANCELFLAG = '0'
            AND A.GLBL_CMPY_CD = B.GLBL_CMPY_CD
            AND A.DS_CONTR_PK  = B.DS_CONTR_PK
    </statement>

    <statement id="getSvcInvLineForBase" parameterClass="Map" resultClass="Map">
        SELECT
             A.DS_CONTR_DTL_PK
            ,A.BLLG_PER_FROM_DT
            ,A.BLLG_PER_THRU_DT
            ,A.INV_LINE_DEAL_NET_AMT
            ,A.SVC_INV_LINE_PK
            ,A.SER_NUM
<!-- START 2018/085/27 [QC#24555, ADD] -->
            ,E.BASE_PRC_DEAL_AMT    AS OLD_BASE_UNIT_AMT
<!-- END   2018/085/27 [QC#24555, ADD] -->
        FROM
             SVC_INV_LINE A
            ,DS_CONTR_DTL B
            ,DS_CONTR     C
<!-- START 2018/085/27 [QC#24555, ADD] -->
            ,DS_CONTR_BLLG_SCHD     D
            ,DS_CONTR_PRC_EFF       E
<!-- END   2018/085/27 [QC#24555, ADD] -->
        WHERE
                A.EZCANCELFLAG       = '0'
            AND A.GLBL_CMPY_CD       = #glblCmpyCd#
            AND A.SVC_INV_NUM        = #svcInvNum#
            AND A.SVC_INV_CHRG_TP_CD = #svcInvChrgTpCd#
            AND B.EZCANCELFLAG       = '0'
            AND A.GLBL_CMPY_CD       = B.GLBL_CMPY_CD
            AND A.DS_CONTR_DTL_PK    = B.DS_CONTR_DTL_PK
            AND C.EZCANCELFLAG       = '0'
            AND A.GLBL_CMPY_CD       = C.GLBL_CMPY_CD
            AND A.DS_CONTR_PK        = C.DS_CONTR_PK
            AND (C.DS_CONTR_CATG_CD  &lt;&gt; #dsContrCatgCdFlt#
                OR (C.DS_CONTR_CATG_CD = #dsContrCatgCdFlt#
                    AND B.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCdFlt#
                )
            )
<!-- START 2018/085/27 [QC#24555, ADD] -->
            AND A.GLBL_CMPY_CD              = D.GLBL_CMPY_CD
            AND A.DS_CONTR_BLLG_SCHD_PK     = D.DS_CONTR_BLLG_SCHD_PK
            AND D.EZCANCELFLAG              = '0'
            AND D.GLBL_CMPY_CD              = E.GLBL_CMPY_CD(+)
            AND D.DS_CONTR_PRC_EFF_PK       = E.DS_CONTR_PRC_EFF_PK(+)
            AND E.EZCANCELFLAG(+)           = '0'
<!-- END   2018/085/27 [QC#24555, ADD] -->
        ORDER BY
            A.SVC_INV_LINE_NUM
    </statement>

    <statement id="getSvcInvLineForBllgMtr" parameterClass="Map" resultClass="Map">
        SELECT
             A.DS_CONTR_DTL_PK
            ,B.DS_CONTR_BLLG_MTR_PK
            ,B.MTR_LB_CD
            ,A.BLLG_PER_FROM_DT
            ,A.BLLG_PER_THRU_DT
            ,B.BLLG_COPY_QTY
            ,B.TEST_COPY_QTY
            ,B.MTR_CHRG_DEAL_AMT
            ,B.SVC_INV_LINE_MTR_PK
            ,A.SVC_INV_LINE_PK
            ,A.SER_NUM
        FROM
             SVC_INV_LINE             A
            ,SVC_INV_LINE_MTR         B
        WHERE
                A.EZCANCELFLAG       = '0'
            AND A.GLBL_CMPY_CD       = #glblCmpyCd#
            AND A.SVC_INV_NUM        = #svcInvNum#
            AND A.SVC_INV_CHRG_TP_CD = #svcInvChrgTpCd#
            AND B.EZCANCELFLAG       = '0'
            AND A.GLBL_CMPY_CD       = B.GLBL_CMPY_CD
            AND A.SVC_INV_LINE_PK    = B.SVC_INV_LINE_PK
        ORDER BY
            A.SVC_INV_LINE_NUM
    </statement>

    <statement id="getSvcInvLineForXsMtr" parameterClass="Map" resultClass="Map">
        SELECT
             A.DS_CONTR_DTL_PK
            ,B.DS_CONTR_BLLG_MTR_PK
            ,D.CONTR_XS_COPY_PK
            ,NVL(D.XS_MTR_COPY_QTY, 0)      AS XS_MTR_COPY_QTY
            ,NVL(D.XS_MTR_AMT_RATE, 0)      AS XS_MTR_AMT_RATE
            ,NVL(E.XS_MTR_CHRG_DEAL_AMT, 0) AS XS_MTR_CHRG_DEAL_AMT
            ,E.SVC_INV_LINE_XS_MTR_PK
            ,B.SVC_INV_LINE_MTR_PK
            ,A.SVC_INV_LINE_PK
<!-- START 2018/085/27 [QC#24555, ADD] -->
            ,NVL(F.XS_MTR_COPY_QTY, 0)      AS OLD_UNIT_XS_MTR_COPY_QTY
<!-- END   2018/085/27 [QC#24555, ADD] -->
<!-- ADD START 2020/06/23 QC#56945 -->
            ,RANK() OVER(PARTITION BY D.DS_CONTR_BLLG_SCHD_SMRY_PK ORDER BY D.XS_MTR_COPY_QTY) AS TIER
<!-- ADD END 2020/06/23 QC#56945 -->
        FROM
             SVC_INV_LINE            A
            ,SVC_INV_LINE_MTR        B
            ,DS_CONTR_BLLG_SCHD      C
            ,DS_CONTR_BLLG_SCHD_MTR  D
            ,SVC_INV_LINE_XS_MTR     E
<!-- START 2018/085/27 [QC#24555, ADD] -->
            ,DS_CONTR_PRC_EFF_MTR    F
<!-- END   2018/085/27 [QC#24555, ADD] -->
        WHERE
                A.EZCANCELFLAG               = '0'
            AND A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.SVC_INV_NUM                = #svcInvNum#
            AND A.SVC_INV_CHRG_TP_CD         = #svcInvChrgTpCd#
        <isNotNull property="serNum">
            AND A.SER_NUM            = #serNum#
        </isNotNull>
        <isNull property="serNum">
            AND A.SER_NUM            IS NULL
        </isNull>
            AND A.BLLG_PER_FROM_DT           = #bllgPerFromDt#
            AND B.EZCANCELFLAG               = '0'
            AND A.GLBL_CMPY_CD               = B.GLBL_CMPY_CD
            AND A.SVC_INV_LINE_PK            = B.SVC_INV_LINE_PK
            AND B.MTR_LB_CD                  = #bllgMtrLbCd#
            AND C.EZCANCELFLAG               = '0'
            AND A.GLBL_CMPY_CD               = C.GLBL_CMPY_CD
            AND A.DS_CONTR_BLLG_SCHD_PK      = C.DS_CONTR_BLLG_SCHD_PK
            AND D.EZCANCELFLAG               = '0'
            AND C.GLBL_CMPY_CD               = D.GLBL_CMPY_CD
            AND C.DS_CONTR_BLLG_SCHD_SMRY_PK = D.DS_CONTR_BLLG_SCHD_SMRY_PK
            AND E.EZCANCELFLAG(+)            = '0'
            AND D.GLBL_CMPY_CD               = E.GLBL_CMPY_CD(+)
            AND D.CONTR_XS_COPY_PK           = E.CONTR_XS_COPY_PK(+)
            AND B.SVC_INV_LINE_MTR_PK        = E.SVC_INV_LINE_MTR_PK(+)
<!-- START 2018/085/27 [QC#24555, ADD] -->
            AND C.GLBL_CMPY_CD               = F.GLBL_CMPY_CD
            AND C.DS_CONTR_PRC_EFF_PK        = F.DS_CONTR_PRC_EFF_PK
<!-- START 2020/03/18 K.Kitachi [QC#55693, MOD] -->
<!--        AND D.CONTR_XS_COPY_PK           = F.CONTR_XS_COPY_PK -->
<!-- CONTR_XS_COPY_PK of DS_CONTR_BLLG_SCHD_MTR actually indicates DS_CONTR_PRC_EFF_MTR_PK. -->
            AND D.CONTR_XS_COPY_PK           = F.DS_CONTR_PRC_EFF_MTR_PK
<!-- END 2020/03/18 K.Kitachi [QC#55693, MOD] -->
            AND F.EZCANCELFLAG               = '0'
<!-- END   2018/085/27 [QC#24555, ADD] -->
        ORDER BY
             A.BLLG_PER_FROM_DT
            ,D.XS_MTR_COPY_QTY
    </statement>

    <statement id="getSvcInvLineForMtrRead" parameterClass="Map" resultClass="Map">
        SELECT
             A.BLLG_PER_FROM_DT
            ,A.GLBL_CMPY_CD
            ,A.DS_CONTR_DTL_PK
            ,A.SER_NUM
            ,G.DS_CONTR_BLLG_MTR_PK
            ,D.MDL_MTR_LB_CD
            ,D.SVC_PHYS_MTR_PK
            ,E.SVC_PHYS_MTR_READ_PK AS START_SVC_PHYS_MTR_READ_PK
            ,F.SVC_PHYS_MTR_READ_PK AS END_SVC_PHYS_MTR_READ_PK
            ,E.MTR_READ_DT          AS START_MTR_READ_DT
            ,F.MTR_READ_DT          AS END_MTR_READ_DT
            ,E.READ_MTR_CNT         AS START_READ_MTR_CNT
            ,F.READ_MTR_CNT         AS END_READ_MTR_CNT
            ,E.TEST_MTR_CNT         AS START_TEST_MTR_CNT
            ,F.TEST_MTR_CNT         AS END_TEST_MTR_CNT
            ,CASE
                WHEN F.DS_CONTR_DTL_PK IS NULL THEN 'N'
                ELSE 'Y'
             END                    AS FIRST_MTR_READ_FLG
            ,A.PREV_PHYS_MTR_READ_GRP_SQ
            ,A.SVC_PHYS_MTR_READ_GRP_SQ
            <!-- START 2017/09/20 E.Kameishi [QC#18636,ADD] -->
            ,H.TEST_MTR_CNT          AS TEST_MTR_CNT
            <!-- END 2017/09/20 E.Kameishi [QC#18636,ADD] -->
        FROM
            (SELECT
                 DISTINCT
                 X.BLLG_PER_FROM_DT
                ,X.GLBL_CMPY_CD
                ,X.DS_CONTR_DTL_PK
                ,X.SER_NUM
                ,Y.PREV_PHYS_MTR_READ_GRP_SQ
                ,Y.SVC_PHYS_MTR_READ_GRP_SQ
            FROM
                 SVC_INV_LINE X
                ,SVC_INV_LINE_MTR Y
            WHERE
                    X.EZCANCELFLAG              = '0'
                AND X.GLBL_CMPY_CD              = #glblCmpyCd#
                AND X.SVC_INV_NUM               = #svcInvNum#
                AND X.SVC_INV_CHRG_TP_CD        = #svcInvChrgTpCd#
                AND Y.EZCANCELFLAG              = '0'
                AND X.GLBL_CMPY_CD              = Y.GLBL_CMPY_CD
                AND X.SVC_INV_LINE_PK           = Y.SVC_INV_LINE_PK
             ) A
            ,DS_CONTR_DTL             B
            ,SVC_MACH_MSTR            C
            ,SVC_PHYS_MTR             D
            ,SVC_PHYS_MTR_READ        E
            ,SVC_PHYS_MTR_READ        F
            ,CONTR_PHYS_BLLG_MTR_RELN G
            <!-- START 2017/09/20 E.Kameishi [QC#18636,ADD] -->
            ,(
              SELECT
                      SIL.GLBL_CMPY_CD
                     ,DCBS.DS_CONTR_BLLG_MTR_PK
                     ,BSTM.SVC_PHYS_MTR_PK
                     ,BSTM.TEST_MTR_CNT
              FROM
                      SVC_INV_LINE SIL
                     ,DS_CONTR_BLLG_SCHD DCBS
                     ,BLLG_SCHD_TEST_MTR_SMRY BSTM
              WHERE
                      SIL.EZCANCELFLAG           = '0'
                  AND SIL.GLBL_CMPY_CD           = #glblCmpyCd#
                  AND SIL.SVC_INV_CHRG_TP_CD     = #svcInvChrgTpCd#
                  AND SIL.SVC_INV_NUM            = #svcInvNum#
                  AND SIL.GLBL_CMPY_CD           = DCBS.GLBL_CMPY_CD
                  AND SIL.DS_CONTR_BLLG_SCHD_PK  = DCBS.DS_CONTR_BLLG_SCHD_PK
                  AND DCBS.EZCANCELFLAG          = '0'
                  AND DCBS.GLBL_CMPY_CD          = BSTM.GLBL_CMPY_CD
                  AND DCBS.DS_CONTR_BLLG_SCHD_PK = BSTM.DS_CONTR_BLLG_SCHD_PK
                  AND BSTM.EZCANCELFLAG          = '0'
            ) H
            <!-- START 2017/09/20 E.Kameishi [QC#18636,ADD] -->
        WHERE
                B.EZCANCELFLAG              = '0'
            AND A.GLBL_CMPY_CD              = B.GLBL_CMPY_CD
            AND A.DS_CONTR_DTL_PK           = B.DS_CONTR_DTL_PK
            AND C.EZCANCELFLAG              = '0'
            AND B.GLBL_CMPY_CD              = C.GLBL_CMPY_CD
            AND B.SVC_MACH_MSTR_PK          = C.SVC_MACH_MSTR_PK
            AND D.EZCANCELFLAG              = '0'
            AND C.GLBL_CMPY_CD              = D.GLBL_CMPY_CD
            AND C.SVC_MACH_MSTR_PK          = D.SVC_MACH_MSTR_PK
            AND E.EZCANCELFLAG              = '0'
            AND D.GLBL_CMPY_CD              = E.GLBL_CMPY_CD
            AND D.SVC_PHYS_MTR_PK           = E.SVC_PHYS_MTR_PK
            AND A.PREV_PHYS_MTR_READ_GRP_SQ = E.SVC_PHYS_MTR_READ_GRP_SQ
            AND F.EZCANCELFLAG              = '0'
            AND D.GLBL_CMPY_CD              = F.GLBL_CMPY_CD
            AND D.SVC_PHYS_MTR_PK           = F.SVC_PHYS_MTR_PK
            AND A.SVC_PHYS_MTR_READ_GRP_SQ  = F.SVC_PHYS_MTR_READ_GRP_SQ
            AND G.EZCANCELFLAG(+)           = '0'
            AND D.GLBL_CMPY_CD              = G.GLBL_CMPY_CD(+)
            AND D.SVC_PHYS_MTR_PK           = G.SVC_PHYS_MTR_PK(+)
            AND B.DS_CONTR_DTL_PK           = G.DS_CONTR_DTL_PK(+)
            <!-- START 2017/09/20 E.Kameishi [QC#18636,ADD] -->
            AND D.GLBL_CMPY_CD              = H.GLBL_CMPY_CD(+)
            AND G.DS_CONTR_BLLG_MTR_PK      = H.DS_CONTR_BLLG_MTR_PK(+)
            AND D.SVC_PHYS_MTR_PK           = H.SVC_PHYS_MTR_PK(+)
            <!-- END 2017/09/20 E.Kameishi [QC#18636,ADD] -->
        ORDER BY
             A.BLLG_PER_FROM_DT
            ,A.DS_CONTR_DTL_PK
            ,D.MDL_MTR_LB_CD
    </statement>

    <statement id="getPrevNextMtrRead" parameterClass="Map" resultClass="Map">
        SELECT
             D.SVC_CR_REBIL_MTR_READ_PK
            ,D.NEW_END_READ_MTR_CNT
            ,D.NEW_START_READ_MTR_CNT
        FROM
             SVC_CR_REBIL_MTR_READ A
            ,SVC_CR_REBIL_DTL      B
            ,SVC_CR_REBIL_DTL      C
            ,SVC_CR_REBIL_MTR_READ D
        WHERE
                A.EZCANCELFLAG             = '0'
            AND A.GLBL_CMPY_CD             = #glblCmpyCd#
            AND A.SVC_CR_REBIL_MTR_READ_PK = #svcCrRebilMtrReadPk#
        <isEqual property="prevFlg" compareValue="Y">
            AND (A.NEW_START_READ_MTR_CNT   IS NOT NULL
            <!-- START 2017/09/20 E.Kameishi [QC#18636,MOD] -->
                OR A.NEW_TEST_MTR_CNT IS NOT NULL)
            <!-- END 2017/09/20 E.Kameishi [QC#18636,MOD] -->
        </isEqual>
        <isEqual property="prevFlg" compareValue="N">
            AND (A.NEW_END_READ_MTR_CNT   IS NOT NULL
            <!-- START 2017/09/20 E.Kameishi [QC#18636,MOD] -->
                OR A.NEW_TEST_MTR_CNT IS NOT NULL)
            <!-- END 2017/09/20 E.Kameishi [QC#18636,MOD] -->
        </isEqual>
            AND B.EZCANCELFLAG             = '0'
            AND A.GLBL_CMPY_CD             = B.GLBL_CMPY_CD
            AND A.SVC_CR_REBIL_DTL_PK      = B.SVC_CR_REBIL_DTL_PK
            AND C.EZCANCELFLAG             = '0'
            AND B.GLBL_CMPY_CD             = C.GLBL_CMPY_CD
            AND B.SVC_CR_REBIL_PK          = C.SVC_CR_REBIL_PK
            AND D.EZCANCELFLAG             = '0'
            AND C.GLBL_CMPY_CD             = D.GLBL_CMPY_CD
            AND C.SVC_CR_REBIL_DTL_PK      = D.SVC_CR_REBIL_DTL_PK
        <isEqual property="prevFlg" compareValue="Y">
            AND A.START_SVC_PHYS_MTR_READ_PK = D.END_SVC_PHYS_MTR_READ_PK
        </isEqual>
        <isEqual property="prevFlg" compareValue="N">
            AND A.END_SVC_PHYS_MTR_READ_PK   = D.START_SVC_PHYS_MTR_READ_PK
        </isEqual>

    </statement>

<!-- START 2018/03/27 M.Naito [QC#18672,ADD] -->
    <statement id="getSvcInvLineForAddlChrg" parameterClass="Map" resultClass="Map">
        SELECT
            DISTINCT
             B.SVC_INV_LINE_ADDL_CHRG_PK
            ,A.INV_LINE_DEAL_NET_AMT
            ,A.DS_CONTR_DTL_PK
            ,A.BLLG_PER_FROM_DT
            ,A.BLLG_PER_THRU_DT
            ,C.DS_CONTR_ADDL_CHRG_PK
            ,C.EFF_FROM_DT
            ,C.EFF_THRU_DT
            ,C.TRMN_DT
            ,C.INV_UP_TO_DT
            ,C.CCY_CD
            ,C.ADDL_CHRG_FLAT_DEAL_PRC_AMT
            ,C.ADDL_CHRG_APLC_PCT
            ,C.BLLG_CYCLE_CD
            ,D.BLLG_CYCLE_MTH_AOT
            ,D.PRRT_DIV_RATE
            ,F.AFT_DECL_PNT_DIGIT_NUM
        FROM
             SVC_INV_LINE             A
            ,SVC_INV_LINE_ADDL_CHRG   B
            ,DS_CONTR_ADDL_CHRG       C
            ,BLLG_CYCLE               D
            ,DS_CONTR                 E
            ,CCY                      F
        WHERE
                A.GLBL_CMPY_CD           = #glblCmpyCd#
            AND A.PRNT_SVC_INV_LINE_PK   = #prntSvcInvLinePk#
            AND A.SVC_INV_CHRG_TP_CD     = #svcInvChrgTpCd#
            AND A.EZCANCELFLAG           = '0'
            AND A.GLBL_CMPY_CD           = B.GLBL_CMPY_CD
            AND A.SVC_INV_LINE_PK        = B.SVC_INV_LINE_PK
            <!-- START 2024/04/05 R.Tamura [QC#63388, ADD] -->
            AND A.BLLG_PER_FROM_DT       &gt;= C.EFF_FROM_DT
            AND A.BLLG_PER_THRU_DT       &lt;= NVL(C.TRMN_DT,C.EFF_THRU_DT)
            <!-- END 2024/04/05 R.Tamura [QC#63388, ADD] -->
            AND B.EZCANCELFLAG           = '0'
            AND A.GLBL_CMPY_CD           = C.GLBL_CMPY_CD
            AND A.DS_CONTR_PK            = C.DS_CONTR_PK
            AND B.SVC_BILL_BY_TP_CD      = C.SVC_BILL_BY_TP_CD
            AND B.ADDL_CHRG_TP_CD        = C.ADDL_CHRG_TP_CD
            AND (
                    C.DS_CONTR_DTL_PK    IS NULL
                    OR
                    A.DS_CONTR_DTL_PK    = C.DS_CONTR_DTL_PK
                )
            AND C.ADDL_CHRG_INV_TP_CD    = #addlChrgInvTpCd#
            AND C.EZCANCELFLAG           = '0'
            AND C.GLBL_CMPY_CD           = D.GLBL_CMPY_CD
            AND C.BLLG_CYCLE_CD          = D.BLLG_CYCLE_CD
            AND D.BLLG_CYCLE_ACTV_FLG    = 'Y'
            AND D.EZCANCELFLAG           = '0'
            AND A.GLBL_CMPY_CD           = E.GLBL_CMPY_CD
            AND A.DS_CONTR_PK            = E.DS_CONTR_PK
            AND E.EZCANCELFLAG           = '0'
            AND E.GLBL_CMPY_CD           = F.GLBL_CMPY_CD
            AND E.CCY_CD                 = F.CCY_CD
            AND F.EZCANCELFLAG           = '0'
    </statement>

    <statement id="getAddlChrgNotExistSvcInvLine" parameterClass="Map" resultClass="Map">
        SELECT
            DISTINCT
             A.BLLG_PER_FROM_DT
            ,A.BLLG_PER_THRU_DT
            ,A.DS_CONTR_DTL_PK
            ,B.DEAL_CCY_CD
            ,B.DS_CONTR_PK
            ,C.DS_CONTR_ADDL_CHRG_PK
            ,C.EFF_FROM_DT
            ,C.EFF_THRU_DT
            ,C.TRMN_DT
            ,C.INV_UP_TO_DT
            ,C.CCY_CD
            ,C.ADDL_CHRG_FLAT_DEAL_PRC_AMT
            ,C.ADDL_CHRG_APLC_PCT
            ,C.BLLG_CYCLE_CD
            ,D.BLLG_CYCLE_MTH_AOT
            ,D.PRRT_DIV_RATE
            ,F.AFT_DECL_PNT_DIGIT_NUM
        FROM
             SVC_INV_LINE             A
            ,SVC_INV                  B
            ,DS_CONTR_ADDL_CHRG       C
            ,BLLG_CYCLE               D
            ,DS_CONTR                 E
            ,CCY                      F
        WHERE
                A.GLBL_CMPY_CD           = #glblCmpyCd#
            AND A.SVC_INV_LINE_PK        = #svcInvLinePk#
            AND A.EZCANCELFLAG           = '0'
            AND A.GLBL_CMPY_CD           = B.GLBL_CMPY_CD
            AND A.SVC_INV_NUM            = B.SVC_INV_NUM
            AND B.EZCANCELFLAG           = '0'
            AND A.GLBL_CMPY_CD           = C.GLBL_CMPY_CD
            AND A.BLLG_PER_FROM_DT       &gt;= C.EFF_FROM_DT
            AND A.BLLG_PER_THRU_DT       &lt;= C.EFF_THRU_DT
            AND (
                    C.TRMN_DT            IS NULL
                    OR 
                    A.BLLG_PER_THRU_DT   &lt;= C.TRMN_DT
                )
            AND A.DS_CONTR_PK            = C.DS_CONTR_PK
            AND C.ADDL_CHRG_INV_TP_CD    = #addlChrgInvTpCd#
            AND C.EZCANCELFLAG           = '0'
            AND (
                    C.DS_CONTR_DTL_PK    IS NULL
                    OR
                    A.DS_CONTR_DTL_PK    = C.DS_CONTR_DTL_PK
                )
            AND C.GLBL_CMPY_CD           = D.GLBL_CMPY_CD
            AND C.BLLG_CYCLE_CD          = D.BLLG_CYCLE_CD
            AND D.BLLG_CYCLE_ACTV_FLG    = 'Y'
            AND D.EZCANCELFLAG           = '0'
            AND A.GLBL_CMPY_CD           = E.GLBL_CMPY_CD
            AND A.DS_CONTR_PK            = E.DS_CONTR_PK
            AND E.EZCANCELFLAG           = '0'
            AND E.GLBL_CMPY_CD           = F.GLBL_CMPY_CD
            AND E.CCY_CD                 = F.CCY_CD
            AND F.EZCANCELFLAG           = '0'
            AND NOT EXISTS (
                            SELECT
                                *
                            FROM
                                SVC_CR_REBIL_ADDL_BLLG SCRA
                            WHERE
                                SCRA.GLBL_CMPY_CD           = C.GLBL_CMPY_CD
                            AND SCRA.ADDL_BLLG_FROM_DT      = A.BLLG_PER_FROM_DT
                            AND SCRA.ADDL_BLLG_THRU_DT      = A.BLLG_PER_THRU_DT
                            AND SCRA.DS_CONTR_ADDL_CHRG_PK  = C.DS_CONTR_ADDL_CHRG_PK
                            )
    </statement>

    <statement id="getBllgSchdInfoForCalcAddlChrg" parameterClass="Map" resultClass="Map">
        SELECT
             C.BLLG_SCHD_FROM_DT
            ,C.BLLG_SCHD_THRU_DT
            ,D.PER_BLLG_CYCLE_CD
        FROM
            (
                SELECT
                     B.DS_CONTR_DTL_PK
                    ,B.BASE_CHRG_FLG
                    ,NVL(B.DS_CONTR_BLLG_MTR_PK, -1) AS BLLG_MTR_PK
                    ,B.BLLG_SCHD_FROM_DT
                    ,B.BLLG_SCHD_THRU_DT
                FROM
                      SVC_INV_LINE        A
                     ,DS_CONTR_BLLG_SCHD  B
                WHERE
                        A.GLBL_CMPY_CD          = #glblCmpyCd#
                    AND A.SVC_INV_LINE_PK       = #svcInvLinePk#
                    AND A.EZCANCELFLAG          = '0'
                    AND A.GLBL_CMPY_CD          = B.GLBL_CMPY_CD
                    AND A.DS_CONTR_BLLG_SCHD_PK = B.DS_CONTR_BLLG_SCHD_PK
                    AND B.EZCANCELFLAG          = '0'
            ) X
            ,DS_CONTR_BLLG_SCHD       C
            ,DS_CONTR_BLLG_SCHD_SMRY  D
        WHERE
                X.DS_CONTR_DTL_PK            = C.DS_CONTR_DTL_PK
            AND X.BASE_CHRG_FLG              = C.BASE_CHRG_FLG
            AND X.BLLG_SCHD_FROM_DT          = C.BLLG_SCHD_FROM_DT
            AND X.BLLG_SCHD_THRU_DT          = C.BLLG_SCHD_THRU_DT
            AND X.BLLG_MTR_PK                = NVL(C.DS_CONTR_BLLG_MTR_PK, -1)
            AND C.GLBL_CMPY_CD               = #glblCmpyCd#
            AND C.DS_CONTR_BLLG_SCHD_SMRY_PK IS NOT NULL
            AND C.EZCANCELFLAG               = '0'
            AND C.GLBL_CMPY_CD               = D.GLBL_CMPY_CD
            AND C.DS_CONTR_BLLG_SCHD_SMRY_PK = D.DS_CONTR_BLLG_SCHD_SMRY_PK
            AND D.EZCANCELFLAG               = '0'
    </statement>

    <statement id="getPreCalcAddlNextBllgDt" parameterClass="Map" resultClass="String">
        SELECT
             B.ADDL_CHRG_THRU_DT
        FROM
             SVC_CONTR_BLLG           A
            ,SVC_CONTR_ADDL_CHRG_BLLG B
        WHERE
                A.GLBL_CMPY_CD                = #glblCmpyCd#
            AND A.DS_CONTR_ADDL_CHRG_PK       = #dsContrAddlChrgPk#
            AND A.EZCANCELFLAG                = '0'
            AND A.ADDL_CHRG_FLG               = 'Y'
            AND A.ADDL_CHRG_BLLG_NEXT_BLLG_DT &lt; #effFromDt#
            AND A.GLBL_CMPY_CD                = B.GLBL_CMPY_CD
            AND A.SVC_CONTR_BLLG_PK           = B.SVC_CONTR_BLLG_PK
            AND B.EZCANCELFLAG                = '0'
        ORDER BY
             A.ADDL_CHRG_BLLG_NEXT_BLLG_DT  DESC
    </statement>

    <statement id="getCrRebilAddlInfoForUpdate" parameterClass="Map" resultClass="Map">
        SELECT
            DISTINCT
             B.SVC_CR_REBIL_ADDL_BLLG_PK
            ,C.DS_CONTR_ADDL_CHRG_PK
            ,C.EFF_FROM_DT
            ,C.EFF_FROM_DT
            ,C.EFF_THRU_DT
            ,C.TRMN_DT
            ,C.INV_UP_TO_DT
            ,C.CCY_CD
            ,C.ADDL_CHRG_FLAT_DEAL_PRC_AMT
            ,C.ADDL_CHRG_APLC_PCT
            ,C.BLLG_CYCLE_CD
            ,D.BLLG_CYCLE_MTH_AOT
            ,D.PRRT_DIV_RATE
            ,F.AFT_DECL_PNT_DIGIT_NUM
            <!-- START 2022/05/18 K.Kitachi [QC#60054, ADD] -->
            ,NVL(C.ADDL_CHRG_INV_TP_CD, G.ADDL_CHRG_INV_TP_CD) ADDL_CHRG_INV_TP_CD
            <!-- END 2022/05/18 K.Kitachi [QC#60054, ADD] -->
        FROM
             SVC_CR_REBIL_DTL        A
            ,SVC_CR_REBIL_ADDL_BLLG  B
            ,DS_CONTR_ADDL_CHRG      C
            ,BLLG_CYCLE              D
            ,DS_CONTR                E
            ,CCY                     F
            <!-- START 2022/05/18 K.Kitachi [QC#60054, ADD] -->
            ,SVC_INV_LINE_ADDL_CHRG  G
            <!-- END 2022/05/18 K.Kitachi [QC#60054, ADD] -->
        WHERE
                A.GLBL_CMPY_CD              = #glblCmpyCd#
            AND A.SVC_CR_REBIL_PK           = #svcCrRebilPk#
            AND (
                    (
                        A.PRNT_SVC_CR_REBIL_DTL_PK IS NULL
                        AND A.SVC_CR_REBIL_DTL_PK  = #svcCrRebilDtlPk#
                    )
                OR
                    (
                        A.PRNT_SVC_CR_REBIL_DTL_PK     IS NOT NULL
                        AND A.PRNT_SVC_CR_REBIL_DTL_PK = #svcCrRebilDtlPk#
                    )
                )
            AND A.EZCANCELFLAG              = '0'
            AND A.GLBL_CMPY_CD              = B.GLBL_CMPY_CD
            AND A.SVC_CR_REBIL_DTL_PK       = B.SVC_CR_REBIL_DTL_PK
            AND B.EZCANCELFLAG              = '0'
            AND B.GLBL_CMPY_CD              = C.GLBL_CMPY_CD(+)
            AND B.DS_CONTR_ADDL_CHRG_PK     = C.DS_CONTR_ADDL_CHRG_PK(+)
            <!-- START 2024/04/05 R.Tamura [QC#63388, ADD] -->
            AND B.ADDL_BLLG_FROM_DT         &gt;= C.EFF_FROM_DT
            AND B.ADDL_BLLG_THRU_DT         &lt;= NVL(C.TRMN_DT, C.EFF_THRU_DT)
            <!-- END 2024/04/05 R.Tamura [QC#63388, ADD] -->
            AND C.ADDL_CHRG_INV_TP_CD(+)    = #addlChrgInvTpCd#
            AND C.EZCANCELFLAG(+)           = '0'
            AND C.GLBL_CMPY_CD              = D.GLBL_CMPY_CD(+)
            AND C.BLLG_CYCLE_CD             = D.BLLG_CYCLE_CD(+)
            AND D.BLLG_CYCLE_ACTV_FLG(+)    = 'Y'
            AND D.EZCANCELFLAG(+)           = '0'
            AND A.GLBL_CMPY_CD              = E.GLBL_CMPY_CD
            AND A.DS_CONTR_PK               = E.DS_CONTR_PK
            AND E.EZCANCELFLAG              = '0'
            AND E.GLBL_CMPY_CD              = F.GLBL_CMPY_CD
            AND E.CCY_CD                    = F.CCY_CD
            AND F.EZCANCELFLAG              = '0'
            <!-- START 2022/05/18 K.Kitachi [QC#60054, ADD] -->
            AND B.GLBL_CMPY_CD              = G.GLBL_CMPY_CD(+)
            AND B.SVC_INV_LINE_ADDL_CHRG_PK = G.SVC_INV_LINE_ADDL_CHRG_PK(+)
            AND G.ADDL_CHRG_INV_TP_CD(+)    = #addlChrgInvTpCd#
            AND G.EZCANCELFLAG(+)           = '0'
            <!-- END 2022/05/18 K.Kitachi [QC#60054, ADD] -->
            <!-- START 2022/05/27 K.Kitachi [QC#60121, ADD] -->
            AND EXISTS (
                SELECT
                    1
                FROM
                    SVC_INV_LINE X
                WHERE
                        X.GLBL_CMPY_CD         = G.GLBL_CMPY_CD
                    AND X.SVC_INV_LINE_PK      = G.SVC_INV_LINE_PK
                    AND X.PRNT_SVC_INV_LINE_PK = #prntSvcInvLinePk#
                    AND X.EZCANCELFLAG         = '0'
                )
            <!-- END 2022/05/27 K.Kitachi [QC#60121, ADD] -->
    </statement>
<!-- END 2018/03/27 M.Naito [QC#18672,ADD] -->

    <statement id="getSvcInvForPrevNextMtrRead" parameterClass="Map" resultClass="Map">
        SELECT
             F.SVC_INV_NUM
            ,E.SER_NUM
            ,F.DEAL_CCY_CD
            ,F.INV_TOT_DEAL_SLS_AMT
            ,F.INV_TOT_FUNC_SLS_AMT
            ,D.MTR_LB_CD
        FROM
             SVC_CR_REBIL_MTR_READ    A
            ,SVC_PHYS_MTR_READ        B
            ,SVC_INV_LINE_MTR         C
            ,SVC_INV_LINE_MTR         D
            ,SVC_INV_LINE             E
            ,SVC_INV                  F
        WHERE
                A.EZCANCELFLAG              = '0'
            AND A.GLBL_CMPY_CD              = #glblCmpyCd#
            AND A.SVC_CR_REBIL_MTR_READ_PK  = #svcCrRebilMtrReadPk#
        <isEqual property="prevFlg" compareValue="Y">
            AND (A.NEW_START_READ_MTR_CNT   IS NOT NULL
                <!-- START 2017/09/20 E.Kameishi [QC#18636,MOD] -->
                OR A.NEW_TEST_MTR_CNT IS NOT NULL)
                <!-- END 2017/09/20 E.Kameishi [QC#18636,MOD] -->
        </isEqual>
        <isEqual property="prevFlg" compareValue="N">
            AND (A.NEW_END_READ_MTR_CNT   IS NOT NULL
                <!-- START 2017/09/20 E.Kameishi [QC#18636,MOD] -->
                OR A.NEW_TEST_MTR_CNT IS NOT NULL)
                <!-- END 2017/09/20 E.Kameishi [QC#18636,MOD] -->
        </isEqual>
            AND B.EZCANCELFLAG              = '0'
            AND A.GLBL_CMPY_CD              = B.GLBL_CMPY_CD
            AND A.END_SVC_PHYS_MTR_READ_PK  = B.SVC_PHYS_MTR_READ_PK
            AND C.EZCANCELFLAG              = '0'
            AND B.GLBL_CMPY_CD              = C.GLBL_CMPY_CD
            AND B.SVC_PHYS_MTR_READ_GRP_SQ  = C.SVC_PHYS_MTR_READ_GRP_SQ
            AND A.DS_CONTR_BLLG_MTR_PK      = C.DS_CONTR_BLLG_MTR_PK
            AND D.EZCANCELFLAG              = '0'
            AND C.GLBL_CMPY_CD              = D.GLBL_CMPY_CD
        <isEqual property="prevFlg" compareValue="Y">
            AND C.PREV_PHYS_MTR_READ_GRP_SQ = D.SVC_PHYS_MTR_READ_GRP_SQ
        </isEqual>
        <isEqual property="prevFlg" compareValue="N">
            AND C.SVC_PHYS_MTR_READ_GRP_SQ  = D.PREV_PHYS_MTR_READ_GRP_SQ
        </isEqual>
            AND C.DS_CONTR_BLLG_MTR_PK      = D.DS_CONTR_BLLG_MTR_PK
            AND E.EZCANCELFLAG              = '0'
            AND D.GLBL_CMPY_CD              = E.GLBL_CMPY_CD
            AND D.SVC_INV_LINE_PK           = E.SVC_INV_LINE_PK
            AND F.EZCANCELFLAG              = '0'
            AND E.GLBL_CMPY_CD              = F.GLBL_CMPY_CD
            AND E.SVC_INV_NUM               = F.SVC_INV_NUM
            <!-- START 2018/03/12 U.Kim [QC#22032, ADD] -->
            AND F.INV_TP_CD                 &lt;&gt; #invTpCd#
            AND NOT EXISTS(
                        SELECT
                            1
                        FROM
                            SVC_INV X
                        WHERE
                            F.GLBL_CMPY_CD       = X.GLBL_CMPY_CD
                        AND F.SVC_INV_NUM        = X.ORIG_SVC_INV_NUM
                        AND X.EZCANCELFLAG       = '0'
                        )
            AND NOT EXISTS(
                        SELECT
                            1
                        FROM
                            SVC_INV X
                        WHERE
                            C.GLBL_CMPY_CD       = X.GLBL_CMPY_CD
                        AND C.SVC_INV_NUM        = X.SVC_INV_NUM
                        AND X.INV_TP_CD          = #invTpCd#
                        AND X.EZCANCELFLAG       = '0'
                        )
            AND NOT EXISTS(
                        SELECT
                            1
                        FROM
                            SVC_INV X
                        WHERE
                            C.GLBL_CMPY_CD       = X.GLBL_CMPY_CD
                        AND C.SVC_INV_NUM        = X.ORIG_SVC_INV_NUM
                        AND X.EZCANCELFLAG       = '0'
                        )
            <!-- END 2018/03/12 U.Kim [QC#22032, ADD] -->
    </statement>

    <statement id="getSchdAndDsContr" parameterClass="Map" resultClass="Map">
        SELECT
             C.DS_CONTR_NUM
            ,A.DS_CONTR_BLLG_SCHD_PK
            ,A.BLLG_SCHD_FROM_DT
            ,A.SVC_CR_REBIL_PK
            ,A.SVC_CR_REBIL_DTL_PK
        FROM
             DS_CONTR_BLLG_SCHD A
            ,DS_CONTR_DTL       B
            ,DS_CONTR           C
        WHERE
                A.EZCANCELFLAG        = '0'
            AND A.GLBL_CMPY_CD        = #glblCmpyCd#
            AND A.SVC_CR_REBIL_PK     = #svcCrRebilPk#
            AND A.SVC_CR_REBIL_DTL_PK = #svcCrRebilDtlPk#
            AND A.INV_TP_CD           = #invTpCd#
            AND A.USG_CHRG_FLG        = 'Y'
            AND B.EZCANCELFLAG        = '0'
            AND A.GLBL_CMPY_CD        = B.GLBL_CMPY_CD
            AND A.DS_CONTR_DTL_PK     = B.DS_CONTR_DTL_PK
            AND B.DS_CONTR_DTL_TP_CD  = #dsContrDtlTpCd#
            AND C.EZCANCELFLAG        = '0'
            AND B.GLBL_CMPY_CD        = C.GLBL_CMPY_CD
            AND B.DS_CONTR_PK         = C.DS_CONTR_PK
    </statement>

    <statement id="getSvcInvAndDsContr" parameterClass="Map" resultClass="Map">
        SELECT
             B.DS_CONTR_NUM
            ,A.DS_CONTR_BLLG_SCHD_PK
            ,A.SVC_CONTR_BLLG_FROM_DT
            ,A.SVC_CONTR_BLLG_THRU_DT
            ,A.SVC_CR_REBIL_PK
            ,A.SVC_CR_REBIL_DTL_PK
        FROM
             SVC_CONTR_BLLG A
            ,DS_CONTR       B
            ,DS_CONTR_DTL   C
        WHERE
                A.EZCANCELFLAG        = '0'
            AND A.GLBL_CMPY_CD        = #glblCmpyCd#
            AND A.SVC_CR_REBIL_PK     = #svcCrRebilPk#
            AND A.SVC_CR_REBIL_DTL_PK = #svcCrRebilDtlPk#
            AND A.INV_TP_CD           = #invTpCd#
            AND A.USG_CHRG_FLG        = 'Y'
            AND B.EZCANCELFLAG        = '0'
            AND A.GLBL_CMPY_CD        = B.GLBL_CMPY_CD
            AND A.DS_CONTR_PK         = B.DS_CONTR_PK
            AND C.EZCANCELFLAG        = '0'
            AND A.GLBL_CMPY_CD        = C.GLBL_CMPY_CD
            AND A.DS_CONTR_DTL_PK     = C.DS_CONTR_DTL_PK
        <isNotNull property="dsContrDtlTpCd">
            AND C.DS_CONTR_DTL_TP_CD  = #dsContrDtlTpCd#
        </isNotNull>
    </statement>

    <statement id="getBaseDealAmt" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            NVL(SUM(B.BASE_DEAL_AMT), 0) AS BASE_DEAL_AMT
        FROM
             SVC_CONTR_BLLG      A
            ,SVC_CONTR_BASE_BLLG B
        WHERE
                A.EZCANCELFLAG        = '0'
            AND A.GLBL_CMPY_CD        = #glblCmpyCd#
            AND A.SVC_CR_REBIL_PK     = #svcCrRebilPk#
            AND A.SVC_CR_REBIL_DTL_PK = #svcCrRebilDtlPk#
            AND A.INV_TP_CD           = #invTpCd#
            AND B.EZCANCELFLAG        = '0'
            AND A.GLBL_CMPY_CD        = B.GLBL_CMPY_CD
            AND A.SVC_CONTR_BLLG_PK   = B.SVC_CONTR_BLLG_PK
    </statement>

    <statement id="getMtrChrgDealAmt" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            NVL(SUM(B.MTR_CHRG_DEAL_AMT), 0) AS MTR_CHRG_DEAL_AMT
        FROM
             SVC_CONTR_BLLG      A
            ,SVC_CONTR_MTR_BLLG  B
        WHERE
                A.EZCANCELFLAG        = '0'
            AND A.GLBL_CMPY_CD        = #glblCmpyCd#
            AND A.SVC_CR_REBIL_PK     = #svcCrRebilPk#
            AND A.SVC_CR_REBIL_DTL_PK = #svcCrRebilDtlPk#
            AND A.INV_TP_CD           = #invTpCd#
            AND B.EZCANCELFLAG        = '0'
            AND A.GLBL_CMPY_CD        = B.GLBL_CMPY_CD
            AND A.SVC_CONTR_BLLG_PK   = B.SVC_CONTR_BLLG_PK
    </statement>

<!-- START 2018/03/27 M.Naito [QC#18672,ADD] -->
    <statement id="getAddlChrgDealAmt" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            NVL(SUM(ADDL.ADDL_DEAL_PRC_AMT), 0) AS ADDL_DEAL_PRC_AMT
        FROM
             (
                 SELECT
                     NVL(SUM(C.ADDL_DEAL_PRC_AMT), 0) AS ADDL_DEAL_PRC_AMT
                 FROM
                     SVC_CONTR_BLLG            A
                    ,SVC_CONTR_MTR_BLLG        B
                    ,SVC_CONTR_ADDL_CHRG_BLLG  C
                 WHERE
                     A.EZCANCELFLAG          = '0'
                 AND A.GLBL_CMPY_CD          = #glblCmpyCd#
                 AND A.SVC_CR_REBIL_PK       = #svcCrRebilPk#
                 AND A.SVC_CR_REBIL_DTL_PK   = #svcCrRebilDtlPk#
                 AND A.INV_TP_CD             = #invTpCd#
                 AND B.EZCANCELFLAG          = '0'
                 AND A.GLBL_CMPY_CD          = B.GLBL_CMPY_CD
                 AND A.SVC_CONTR_BLLG_PK     = B.SVC_CONTR_BLLG_PK
                 AND C.EZCANCELFLAG          = '0'
                 AND B.GLBL_CMPY_CD          = C.GLBL_CMPY_CD
                 AND B.SVC_CONTR_MTR_BLLG_PK = C.SVC_CONTR_MTR_BLLG_PK
                 UNION ALL
                 SELECT
                     NVL(SUM(C.ADDL_DEAL_PRC_AMT), 0) AS ADDL_DEAL_PRC_AMT
                 FROM
                     SVC_CONTR_BLLG            A
                    ,SVC_CONTR_BASE_BLLG       B
                    ,SVC_CONTR_ADDL_CHRG_BLLG  C
                 WHERE
                     A.EZCANCELFLAG           = '0'
                 AND A.GLBL_CMPY_CD           = #glblCmpyCd#
                 AND A.SVC_CR_REBIL_PK        = #svcCrRebilPk#
                 AND A.SVC_CR_REBIL_DTL_PK    = #svcCrRebilDtlPk#
                 AND A.INV_TP_CD              = #invTpCd#
                 AND B.EZCANCELFLAG           = '0'
                 AND A.GLBL_CMPY_CD           = B.GLBL_CMPY_CD
                 AND A.SVC_CONTR_BLLG_PK      = B.SVC_CONTR_BLLG_PK
                 AND C.EZCANCELFLAG           = '0'
                 AND B.GLBL_CMPY_CD           = C.GLBL_CMPY_CD
                 AND B.SVC_CONTR_BASE_BLLG_PK = C.SVC_CONTR_BASE_BLLG_PK
             ) ADDL
    </statement>
<!-- END 2018/03/27 M.Naito [QC#18672,ADD] -->

    <statement id="getSvcContrMtrInfo" parameterClass="Map" resultClass="Map">
        SELECT
             C.SVC_CR_REBIL_MTR_BLLG_PK
            ,D.BLLG_COPY_QTY
            ,D.TEST_COPY_QTY
            ,D.MTR_CHRG_DEAL_AMT
        FROM
            SVC_CR_REBIL_MTR_BLLG     C
            ,(SELECT
                 A.GLBL_CMPY_CD
                ,A.SVC_CR_REBIL_PK
                ,A.SVC_CR_REBIL_DTL_PK
                ,B.DS_CONTR_BLLG_MTR_PK
                ,B.BLLG_COPY_QTY
                ,B.TEST_COPY_QTY
                ,B.MTR_CHRG_DEAL_AMT
            FROM
                 SVC_CONTR_BLLG        A
                ,SVC_CONTR_MTR_BLLG    B
            WHERE
                    A.EZCANCELFLAG         = '0'
                AND A.GLBL_CMPY_CD         = #glblCmpyCd#
                AND A.SVC_CR_REBIL_PK      = #svcCrRebilPk#
                AND A.SVC_CR_REBIL_DTL_PK  = #svcCrRebilDtlPk#
                AND A.INV_TP_CD            = #invTpCd#
                AND B.EZCANCELFLAG         = '0'
                AND A.GLBL_CMPY_CD         = B.GLBL_CMPY_CD
                AND A.SVC_CONTR_BLLG_PK    = B.SVC_CONTR_BLLG_PK) D
        WHERE
                C.EZCANCELFLAG         = '0'
            AND C.GLBL_CMPY_CD         = D.GLBL_CMPY_CD
            AND C.SVC_CR_REBIL_DTL_PK  = D.SVC_CR_REBIL_DTL_PK
            AND C.DS_CONTR_BLLG_MTR_PK = D.DS_CONTR_BLLG_MTR_PK
    </statement>

    <statement id="getSvcContrXsMtrInfo" parameterClass="Map" resultClass="Map">
        SELECT
             D.SVC_CR_REBIL_XS_MTR_BLLG_PK
            ,E.XS_MTR_CHRG_DEAL_AMT
        FROM
            SVC_CR_REBIL_XS_MTR_BLLG     D
            ,(SELECT
                 A.GLBL_CMPY_CD
                ,A.SVC_CR_REBIL_PK
                ,A.SVC_CR_REBIL_DTL_PK
                ,B.DS_CONTR_BLLG_MTR_PK
                ,C.CONTR_XS_COPY_PK
                ,C.XS_MTR_CHRG_DEAL_AMT
            FROM
                 SVC_CONTR_BLLG        A
                ,SVC_CONTR_MTR_BLLG    B
                ,SVC_CONTR_XS_MTR_BLLG C
            WHERE
                    A.EZCANCELFLAG          = '0'
                AND A.GLBL_CMPY_CD          = #glblCmpyCd#
                AND A.SVC_CR_REBIL_PK       = #svcCrRebilPk#
                AND A.SVC_CR_REBIL_DTL_PK   = #svcCrRebilDtlPk#
                AND A.INV_TP_CD             = #invTpCd#
                AND B.EZCANCELFLAG          = '0'
                AND A.GLBL_CMPY_CD          = B.GLBL_CMPY_CD
                AND A.SVC_CONTR_BLLG_PK     = B.SVC_CONTR_BLLG_PK
                AND C.EZCANCELFLAG          = '0'
                AND B.GLBL_CMPY_CD          = C.GLBL_CMPY_CD
                AND B.SVC_CONTR_MTR_BLLG_PK = C.SVC_CONTR_MTR_BLLG_PK) E
        WHERE
                D.EZCANCELFLAG         = '0'
            AND D.GLBL_CMPY_CD         = E.GLBL_CMPY_CD
            AND D.SVC_CR_REBIL_DTL_PK  = E.SVC_CR_REBIL_DTL_PK
            AND D.DS_CONTR_BLLG_MTR_PK = E.DS_CONTR_BLLG_MTR_PK
            AND D.CONTR_XS_COPY_PK     = E.CONTR_XS_COPY_PK
    </statement>

    <statement id="getDsContrDtlBySvcCrRebilPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
                B.DS_CONTR_DTL_PK
        FROM
                SVC_CR_REBIL_DTL A
                ,SVC_CR_REBIL_BASE_BLLG B
        WHERE
                A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.EZCANCELFLAG          = '0'
            AND A.SVC_CR_REBIL_PK       = #svcCrRebilPk#
            AND A.GLBL_CMPY_CD          = B.GLBL_CMPY_CD(+)
            AND B.EZCANCELFLAG(+)       = '0'
            AND A.SVC_CR_REBIL_DTL_PK   = B.SVC_CR_REBIL_DTL_PK(+)
        UNION
        SELECT
                C.DS_CONTR_DTL_PK
        FROM
                SVC_CR_REBIL_DTL A
                ,SVC_CR_REBIL_MTR_BLLG C
        WHERE
                A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.EZCANCELFLAG          = '0'
            AND A.SVC_CR_REBIL_PK       = #svcCrRebilPk#
            AND A.GLBL_CMPY_CD          = C.GLBL_CMPY_CD(+)
            AND C.EZCANCELFLAG(+)       = '0'
            AND A.SVC_CR_REBIL_DTL_PK   = C.SVC_CR_REBIL_DTL_PK(+)
    </statement>

    <statement id="getCrRebilBasePk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.SVC_CR_REBIL_BASE_BLLG_PK
        FROM
             SVC_CR_REBIL_BASE_BLLG A
            ,DS_CONTR_DTL           B
        <isNotNull property="serNum">
            ,SVC_MACH_MSTR          C
        </isNotNull>
        WHERE
                A.EZCANCELFLAG        = '0'
            AND A.GLBL_CMPY_CD        = #glblCmpyCd#
            AND A.SVC_CR_REBIL_DTL_PK = #svcCrRebilDtlPk#
            AND A.BASE_BLLG_FROM_DT   = #baseBllgFromDt#
        <!--  START 2022/04/04 E.Sanchez [QC#59914,ADD] -->
        <isNotNull property="dsContrDtlPk">
            AND B.DS_CONTR_DTL_PK     = #dsContrDtlPk#
        </isNotNull>
        <!--  END 2022/04/04 E.Sanchez [QC#59914,ADD] -->
            AND B.EZCANCELFLAG        = '0'
            AND A.GLBL_CMPY_CD        = B.GLBL_CMPY_CD
            AND A.DS_CONTR_DTL_PK     = B.DS_CONTR_DTL_PK
        <isNotNull property="serNum">
            AND C.EZCANCELFLAG        = '0'
            AND B.GLBL_CMPY_CD        = C.GLBL_CMPY_CD
            AND B.SVC_MACH_MSTR_PK    = C.SVC_MACH_MSTR_PK
            AND C.SER_NUM             = #serNum#
        </isNotNull>
    </statement>

    <statement id="getCrRebilXsMtrPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            B.SVC_CR_REBIL_XS_MTR_BLLG_PK
        FROM
             SVC_CR_REBIL_MTR_BLLG    A
            ,SVC_CR_REBIL_XS_MTR_BLLG B
            ,DS_CONTR_DTL             C
        <isNotNull property="serNum">
            ,SVC_MACH_MSTR            D
        </isNotNull>
        WHERE
                A.EZCANCELFLAG             = '0'
            AND A.GLBL_CMPY_CD             = #glblCmpyCd#
            AND A.SVC_CR_REBIL_DTL_PK      = #svcCrRebilDtlPk#
            AND A.BLLG_MTR_LB_CD           = #bllgMtrLbCd#
            AND B.EZCANCELFLAG             = '0'
            AND A.GLBL_CMPY_CD             = B.GLBL_CMPY_CD
            AND A.SVC_CR_REBIL_MTR_BLLG_PK = B.SVC_CR_REBIL_MTR_BLLG_PK
            AND B.OLD_XS_COPY_QTY          = #oldXsCopyQty#
            AND C.EZCANCELFLAG             = '0'
            AND B.GLBL_CMPY_CD             = C.GLBL_CMPY_CD
            AND B.DS_CONTR_DTL_PK          = C.DS_CONTR_DTL_PK
        <isNotNull property="serNum">
            AND D.EZCANCELFLAG             = '0'
            AND C.GLBL_CMPY_CD             = D.GLBL_CMPY_CD
            AND C.SVC_MACH_MSTR_PK         = D.SVC_MACH_MSTR_PK
            AND D.SER_NUM                  = #serNum#
        </isNotNull>
    </statement>

    <statement id="getCrRebilMtrReadPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            B.SVC_CR_REBIL_MTR_READ_PK
        FROM
             SVC_CR_REBIL_MTR_READ B
            ,DS_CONTR_DTL          C
        <isNotNull property="serNum">
            ,SVC_MACH_MSTR         D
        </isNotNull>
        WHERE
                B.EZCANCELFLAG             = '0'
            AND B.GLBL_CMPY_CD             = #glblCmpyCd#
            AND B.SVC_CR_REBIL_DTL_PK      = #svcCrRebilDtlPk#
            AND B.PHYS_MTR_LB_CD           = #physMtrLbCd#
            AND C.EZCANCELFLAG             = '0'
            AND B.GLBL_CMPY_CD             = C.GLBL_CMPY_CD
            AND B.DS_CONTR_DTL_PK          = C.DS_CONTR_DTL_PK
        <isNotNull property="serNum">
            AND D.EZCANCELFLAG             = '0'
            AND C.GLBL_CMPY_CD             = D.GLBL_CMPY_CD
            AND C.SVC_MACH_MSTR_PK         = D.SVC_MACH_MSTR_PK
            AND D.SER_NUM                  = #serNum#
        </isNotNull>
    </statement>

    <statement id="getCrRebilMtrInfo" parameterClass="Map" resultClass="Map">
        SELECT
            DISTINCT
             A.ORIG_SVC_INV_NUM
            ,B.SVC_CR_REBIL_DTL_PK
            ,B.DS_CONTR_DTL_PK
            ,C.SVC_MACH_MSTR_PK
            ,C.CONTR_EFF_FROM_DT
        FROM
             SVC_CR_REBIL_DTL      A
            ,SVC_CR_REBIL_MTR_BLLG B
            ,DS_CONTR_DTL          C
        WHERE
                A.EZCANCELFLAG        = '0'
            AND A.GLBL_CMPY_CD        = #glblCmpyCd#
            AND A.SVC_CR_REBIL_PK     = #svcCrRebilPk#
            AND B.EZCANCELFLAG        = '0'
            AND A.GLBL_CMPY_CD        = B.GLBL_CMPY_CD
            AND A.SVC_CR_REBIL_DTL_PK = B.SVC_CR_REBIL_DTL_PK
            AND B.SVC_INV_LINE_PK     IS NOT NULL
            AND C.EZCANCELFLAG        = '0'
            AND B.GLBL_CMPY_CD        = C.GLBL_CMPY_CD
            AND B.DS_CONTR_DTL_PK     = C.DS_CONTR_DTL_PK
        ORDER BY
             A.ORIG_SVC_INV_NUM
            ,B.DS_CONTR_DTL_PK
    </statement>

    <statement id="getUpdFirstMtrRead" parameterClass="Map" resultClass="Map">
        SELECT
             B.SVC_MACH_MSTR_PK
            ,B.MTR_READ_DT
            ,NVL(A.NEW_START_READ_MTR_CNT, A.OLD_START_READ_MTR_CNT) AS READ_MTR_CNT
            <!-- START 2017/09/20 E.Kameishi [QC#18636,MOD] -->
            ,NVL(A.NEW_TEST_MTR_CNT, A.OLD_TEST_MTR_CNT) AS TEST_MTR_CNT
            <!-- END 2017/09/20 E.Kameishi [QC#18636,MOD] -->
            ,B.SVC_PHYS_MTR_PK
            ,A.SVC_CR_REBIL_MTR_READ_PK
        FROM
             SVC_CR_REBIL_MTR_READ A
            ,SVC_PHYS_MTR_READ     B
        WHERE
                A.EZCANCELFLAG               = '0'
            AND A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.SVC_CR_REBIL_DTL_PK        = #svcCrRebilDtlPk#
            AND A.DS_CONTR_DTL_PK            = #dsContrDtlPk#
            AND B.EZCANCELFLAG               = '0'
            AND A.GLBL_CMPY_CD               = B.GLBL_CMPY_CD
            AND A.START_SVC_PHYS_MTR_READ_PK = B.SVC_PHYS_MTR_READ_PK
            AND B.DS_CONTR_DTL_PK            IS NOT NULL
            AND EXISTS(
                    SELECT
                        1
                    FROM
                        SVC_CR_REBIL_MTR_READ A
                    WHERE
                            A.EZCANCELFLAG               = '0'
                        AND A.GLBL_CMPY_CD               = #glblCmpyCd#
                        AND A.SVC_CR_REBIL_DTL_PK        = #svcCrRebilDtlPk#
                        AND A.DS_CONTR_DTL_PK            = #dsContrDtlPk#
                        AND (A.NEW_START_READ_MTR_CNT    IS NOT NULL
                            <!-- START 2017/09/20 E.Kameishi [QC#18636,MOD] -->
                            OR A.NEW_TEST_MTR_CNT  IS NOT NULL)
                            <!-- END 2017/09/20 E.Kameishi [QC#18636,MOD] -->
                )
        ORDER BY
             A.START_MTR_READ_DT
            ,A.PHYS_MTR_LB_CD
    </statement>

    <statement id="getUpdTargetMtrRead" parameterClass="Map" resultClass="Map">
        SELECT
             B.SVC_MACH_MSTR_PK
            ,B.MTR_READ_DT
            ,NVL(A.NEW_END_READ_MTR_CNT, A.OLD_END_READ_MTR_CNT) AS READ_MTR_CNT
            <!-- START 2017/09/20 E.Kameishi [QC#18636,MOD] -->
            ,NVL(A.NEW_TEST_MTR_CNT, A.OLD_TEST_MTR_CNT) AS TEST_MTR_CNT
            <!-- END 2017/09/20 E.Kameishi [QC#18636,MOD] -->
            ,B.SVC_PHYS_MTR_PK
            ,A.SVC_CR_REBIL_MTR_READ_PK
        FROM
             SVC_CR_REBIL_MTR_READ A
            ,SVC_PHYS_MTR_READ     B
        WHERE
                A.EZCANCELFLAG               = '0'
            AND A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.SVC_CR_REBIL_DTL_PK        = #svcCrRebilDtlPk#
            AND A.DS_CONTR_DTL_PK            = #dsContrDtlPk#
            AND B.EZCANCELFLAG               = '0'
            AND A.GLBL_CMPY_CD               = B.GLBL_CMPY_CD
            AND A.END_SVC_PHYS_MTR_READ_PK   = B.SVC_PHYS_MTR_READ_PK
            AND EXISTS(
                    SELECT
                        1
                    FROM
                        SVC_CR_REBIL_MTR_READ A
                    WHERE
                            A.EZCANCELFLAG               = '0'
                        AND A.GLBL_CMPY_CD               = #glblCmpyCd#
                        AND A.SVC_CR_REBIL_DTL_PK        = #svcCrRebilDtlPk#
                        AND A.DS_CONTR_DTL_PK            = #dsContrDtlPk#
                        AND (A.NEW_END_READ_MTR_CNT      IS NOT NULL
                            <!-- START 2017/09/20 E.Kameishi [QC#18636,MOD] -->
                            OR A.NEW_TEST_MTR_CNT    IS NOT NULL)
                            <!-- END 2017/09/20 E.Kameishi [QC#18636,MOD] -->
                )
        ORDER BY
             A.END_MTR_READ_DT
            ,A.PHYS_MTR_LB_CD
    </statement>

    <!-- mod start 2019/10/01 QC#53643 -->
    <statement id="getInvTotDealNetAmt" parameterClass="Map" resultClass="Map">
        SELECT
             NVL(SUM(A.OLD_INV_TOT_DEAL_AMT), 0) AS OLD_INV_TOT_DEAL_AMT
            ,NVL(SUM(A.NEW_INV_TOT_DEAL_AMT), 0) AS NEW_INV_TOT_DEAL_AMT
            ,NVL(SUM(A.INV_TOT_DEAL_NET_AMT), 0) AS INV_TOT_DEAL_NET_AMT
        FROM
            SVC_CR_REBIL_DTL A
        WHERE
                A.EZCANCELFLAG        = '0'
            AND A.GLBL_CMPY_CD        = #glblCmpyCd#
            AND A.SVC_CR_REBIL_PK     = #svcCrRebilPk#
    </statement>
    <!-- mod end 2019/10/01 QC#53643 -->
    
    <!-- add Start 2022/08/31 QC#60049 -->
    <statement id="getCrRblNoticationEmailInfo" parameterClass="Map" resultClass="Map">
        WITH GRP_INV_INFO AS (
	        SELECT
	            LISTAGG(GRP_INV_NUM, ',') WITHIN GROUP (ORDER BY X.GRP_INV_NUM) AS GRP_INV_NUM
	           ,MAX(X.CUST_INCDT_ID) AS CUST_INCDT_ID
	        FROM (
		        SELECT 
		            DISTINCT C.GRP_INV_NUM, A.CUST_INCDT_ID
		        FROM  
		            SVC_CR_REBIL A
		           ,SVC_CR_REBIL_DTL B
		           ,INV C
		        WHERE
		                A.EZCANCELFLAG        = '0'
		            AND A.GLBL_CMPY_CD        = #glblCmpyCd#
		            AND A.GLBL_CMPY_CD        = B.GLBL_CMPY_CD 
		            AND A.CUST_INCDT_ID       = #custIncdtId#
		            AND A.CUST_INCDT_ID       = B.CUST_INCDT_ID
		            AND B.EZCANCELFLAG        = '0'
		            AND B.GLBL_CMPY_CD        = C.GLBL_CMPY_CD
		            AND C.EZCANCELFLAG        = '0'
		            AND B.ORIG_SVC_INV_NUM    = C.INV_NUM
		        ORDER BY GRP_INV_NUM
            ) X
        )
        SELECT
            MAX(C.BILL_TO_CUST_ACCT_NM) AS BILL_TO_CUST_ACCT_NM
           ,MAX(C.BILL_TO_CUST_ACCT_CD) AS BILL_TO_CUST_ACCT_CD
           ,MAX(C.SRC_SYS_DOC_NUM) AS CONTR_NUM
           ,LISTAGG(C.INV_NUM, ',') WITHIN GROUP (ORDER BY C.INV_NUM) AS INV_NUM
           ,MAX(X.GRP_INV_NUM) GRP_INV_NUM
           ,MAX(A.SVC_CR_REBIL_RSN_TXT) AS SVC_CR_REBIL_RSN_TXT
        FROM  
            SVC_CR_REBIL A
           ,SVC_CR_REBIL_DTL B
           ,INV C
           ,GRP_INV_INFO X
        WHERE
               A.EZCANCELFLAG         = '0'
           AND A.GLBL_CMPY_CD         = #glblCmpyCd#
           AND A.GLBL_CMPY_CD         = B.GLBL_CMPY_CD
           AND B.EZCANCELFLAG         = '0'
           AND A.GLBL_CMPY_CD         = C.GLBL_CMPY_CD
           AND C.EZCANCELFLAG         = '0'
           AND A.CUST_INCDT_ID        = B.CUST_INCDT_ID
           AND B.ORIG_SVC_INV_NUM     = C.INV_NUM
           AND A.CUST_INCDT_ID        = X.CUST_INCDT_ID
	</statement>
	<!-- add end 2022/08/31 QC#60049 -->
    <statement id="getSvcRgPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            D.SVC_RG_PK
        FROM
             SVC_CR_REBIL   A
            ,SVC_CONTR_BR   B
            ,SVC_RG_BR_RELN C
            ,SVC_RG         D
        WHERE
                A.EZCANCELFLAG                 = '0'
            AND A.GLBL_CMPY_CD                 = #glblCmpyCd#
            AND A.SVC_CR_REBIL_PK              = #svcCrRebilPk#
            AND B.EZCANCELFLAG                 = '0'
            AND A.GLBL_CMPY_CD                 = B.GLBL_CMPY_CD
            AND A.SVC_CONTR_BR_CD              = B.SVC_CONTR_BR_CD
            AND B.SVC_CONTR_BR_ACTV_FLG        = 'Y'
            AND B.EFF_FROM_DT                  &lt;= #slsDt#
            AND NVL(B.EFF_THRU_DT, #maxDate#)  &gt;= #slsDt#
            AND C.EZCANCELFLAG                 = '0'
            AND B.GLBL_CMPY_CD                 = C.GLBL_CMPY_CD
            AND B.SVC_CONTR_BR_CD              = C.SVC_CONTR_BR_CD
            AND D.EZCANCELFLAG                 = '0'
            AND C.GLBL_CMPY_CD                 = D.GLBL_CMPY_CD
            AND C.SVC_RG_PK                    = D.SVC_RG_PK
            AND D.SVC_RG_ACTV_FLG              = 'Y'
            AND D.EFF_FROM_DT                  &lt;= #slsDt#
            AND NVL(D.EFF_THRU_DT, #maxDate#)  &gt;= #slsDt#
        ORDER BY
            D.SVC_RG_PK
    </statement>

    <statement id="getTotCrAmt" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            SUM(B.OLD_INV_TOT_DEAL_AMT) CR_AMT
        FROM
            SVC_CR_REBIL A
            ,SVC_CR_REBIL_DTL B
        WHERE
            A.GLBL_CMPY_CD      = #glblCmpyCd#
        AND A.SVC_CR_REBIL_PK   = #svcCrRebilPk#
        AND A.EZCANCELFLAG      = '0'
        AND A.GLBL_CMPY_CD      = B.GLBL_CMPY_CD
        AND A.SVC_CR_REBIL_PK   = B.SVC_CR_REBIL_PK
        AND B.EZCANCELFLAG      = '0'
    </statement>

    <statement id="getContrInfo" parameterClass="Map" resultClass="Map">
        SELECT
            C.DS_ACCT_NUM
            ,D.DS_ACCT_NM
            ,C.SVC_CONTR_BR_CD
        FROM
            SVC_CR_REBIL A
            ,SVC_CR_REBIL_DTL B
            ,DS_CONTR C
            ,SELL_TO_CUST D
        WHERE
            A.GLBL_CMPY_CD      = #glblCmpyCd#
        AND A.SVC_CR_REBIL_PK   = #svcCrRebilPk#
        AND A.EZCANCELFLAG      = '0'
        AND A.GLBL_CMPY_CD      = B.GLBL_CMPY_CD
        AND A.SVC_CR_REBIL_PK   = B.SVC_CR_REBIL_PK
        AND B.EZCANCELFLAG      = '0'
        AND B.GLBL_CMPY_CD      = C.GLBL_CMPY_CD
        AND B.DS_CONTR_PK       = C.DS_CONTR_PK
        AND C.EZCANCELFLAG      = '0'
        AND C.GLBL_CMPY_CD      = D.GLBL_CMPY_CD
        AND C.DS_ACCT_NUM       = D.SELL_TO_CUST_CD
        AND D.EZCANCELFLAG      = '0'
        AND ROWNUM              = 1
    </statement>

    <statement id="getBaseInfoForAggLine" parameterClass="Map" resultClass="Map">
        SELECT
             A.DS_CONTR_DTL_PK
            ,A.BLLG_SCHD_FROM_DT AS BLLG_PER_FROM_DT
            ,A.BLLG_SCHD_THRU_DT AS BLLG_PER_THRU_DT
        FROM
             DS_CONTR_BLLG_SCHD A
            ,(SELECT
                    DISTINCT
                     X.GLBL_CMPY_CD
                    ,X.PRNT_DS_CONTR_BLLG_SCHD_PK
                FROM
                    DS_CONTR_BLLG_SCHD X
                WHERE
                        X.EZCANCELFLAG       = '0'
                    AND X.GLBL_CMPY_CD       = #glblCmpyCd#
                    AND X.BASE_CHRG_FLG      = 'Y'
                    AND X.SVC_INV_NUM        = #svcInvNum#
             ) B
        WHERE
                A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = B.GLBL_CMPY_CD
            AND A.DS_CONTR_BLLG_SCHD_PK = B.PRNT_DS_CONTR_BLLG_SCHD_PK
            AND A.DS_CONTR_DTL_TP_CD    = #dsContrDtlTpCdAgg#
        ORDER BY
            A.BLLG_SCHD_FROM_DT
    </statement>

    <statement id="getBllgMtrInfoForAggLine" parameterClass="Map" resultClass="Map">
        SELECT
             A.DS_CONTR_DTL_PK
            ,A.DS_CONTR_BLLG_MTR_PK
            ,D.MTR_LB_CD
            ,A.BLLG_SCHD_FROM_DT AS BLLG_PER_FROM_DT
            ,A.BLLG_SCHD_THRU_DT AS BLLG_PER_THRU_DT
        FROM
             DS_CONTR_BLLG_SCHD A
            ,(SELECT
                    DISTINCT
                     X.GLBL_CMPY_CD
                    ,X.PRNT_DS_CONTR_BLLG_SCHD_PK
                FROM
                    DS_CONTR_BLLG_SCHD X
                WHERE
                        X.EZCANCELFLAG       = '0'
                    AND X.GLBL_CMPY_CD       = #glblCmpyCd#
                    AND X.USG_CHRG_FLG       = 'Y'
                    AND X.SVC_INV_NUM        = #svcInvNum#
             ) B
            ,DS_CONTR_BLLG_MTR C
            ,MTR_LB            D
        WHERE
                A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = B.GLBL_CMPY_CD
            AND A.DS_CONTR_BLLG_SCHD_PK = B.PRNT_DS_CONTR_BLLG_SCHD_PK
            AND A.DS_CONTR_DTL_TP_CD    = #dsContrDtlTpCdAgg#
            AND C.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = C.GLBL_CMPY_CD
            AND A.DS_CONTR_BLLG_MTR_PK  = C.DS_CONTR_BLLG_MTR_PK
            AND D.EZCANCELFLAG          = '0'
            AND C.GLBL_CMPY_CD          = D.GLBL_CMPY_CD
            AND C.BLLG_MTR_LB_CD        = D.MTR_LB_CD
        ORDER BY
             A.BLLG_SCHD_FROM_DT
            ,D.MTR_LB_CD
    </statement>

    <statement id="getXsMtrInfoForAggLine" parameterClass="Map" resultClass="Map">
        SELECT
             A.DS_CONTR_DTL_PK
            ,A.DS_CONTR_BLLG_MTR_PK
            ,D.CONTR_XS_COPY_PK
            ,D.XS_MTR_COPY_QTY
            ,D.XS_MTR_AMT_RATE
<!-- START 2018/085/27 [QC#24555, ADD] -->
            ,NVL(G.XS_MTR_COPY_QTY, 0)      AS OLD_UNIT_XS_MTR_COPY_QTY
<!-- END   2018/085/27 [QC#24555, ADD] -->
        FROM
             DS_CONTR_BLLG_SCHD A
            ,(SELECT
                    DISTINCT
                     X.GLBL_CMPY_CD
                    ,X.PRNT_DS_CONTR_BLLG_SCHD_PK
                FROM
                    DS_CONTR_BLLG_SCHD X
                WHERE
                        X.EZCANCELFLAG       = '0'
                    AND X.GLBL_CMPY_CD       = #glblCmpyCd#
                    AND X.USG_CHRG_FLG       = 'Y'
                    AND X.SVC_INV_NUM        = #svcInvNum#
             ) B
            ,DS_CONTR_BLLG_SCHD_SMRY C
            ,DS_CONTR_BLLG_SCHD_MTR  D
            ,DS_CONTR_BLLG_MTR       E
            ,MTR_LB                  F
<!-- START 2018/085/27 [QC#24555, ADD] -->
            ,DS_CONTR_PRC_EFF_MTR    G
<!-- END   2018/085/27 [QC#24555, ADD] -->
        WHERE
                A.EZCANCELFLAG               = '0'
            AND A.GLBL_CMPY_CD               = B.GLBL_CMPY_CD
            AND A.DS_CONTR_BLLG_SCHD_PK      = B.PRNT_DS_CONTR_BLLG_SCHD_PK
            AND A.DS_CONTR_DTL_TP_CD         = #dsContrDtlTpCdAgg#
            AND A.BLLG_SCHD_FROM_DT          = #bllgSchdFromDt#
            AND C.EZCANCELFLAG               = '0'
            AND A.GLBL_CMPY_CD               = C.GLBL_CMPY_CD
            AND A.DS_CONTR_BLLG_SCHD_SMRY_PK = C.DS_CONTR_BLLG_SCHD_SMRY_PK
            AND D.EZCANCELFLAG               = '0'
            AND C.GLBL_CMPY_CD               = D.GLBL_CMPY_CD
            AND C.DS_CONTR_BLLG_SCHD_SMRY_PK = D.DS_CONTR_BLLG_SCHD_SMRY_PK
            AND E.EZCANCELFLAG               = '0'
            AND D.GLBL_CMPY_CD               = E.GLBL_CMPY_CD
            AND D.DS_CONTR_BLLG_MTR_PK       = E.DS_CONTR_BLLG_MTR_PK
            AND F.EZCANCELFLAG               = '0'
            AND E.GLBL_CMPY_CD               = F.GLBL_CMPY_CD
            AND E.BLLG_MTR_LB_CD             = F.MTR_LB_CD
            AND F.MTR_LB_CD                  = #mtrLbCd#
<!-- START 2018/085/27 [QC#24555, ADD] -->
            AND A.GLBL_CMPY_CD               = G.GLBL_CMPY_CD
            AND A.DS_CONTR_PRC_EFF_PK        = G.DS_CONTR_PRC_EFF_PK
<!-- START 2020/03/18 K.Kitachi [QC#55693, MOD] -->
<!--        AND D.CONTR_XS_COPY_PK           = G.CONTR_XS_COPY_PK -->
<!-- CONTR_XS_COPY_PK of DS_CONTR_BLLG_SCHD_MTR actually indicates DS_CONTR_PRC_EFF_MTR_PK. -->
            AND D.CONTR_XS_COPY_PK           = G.DS_CONTR_PRC_EFF_MTR_PK
<!-- END 2020/03/18 K.Kitachi [QC#55693, MOD] -->
            AND G.EZCANCELFLAG               = '0'
<!-- END   2018/085/27 [QC#24555, ADD] -->
        ORDER BY
             A.BLLG_SCHD_FROM_DT
            ,D.XS_MTR_COPY_QTY
    </statement>

    <statement id="getCrRebilMtrBllgPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.SVC_CR_REBIL_MTR_BLLG_PK
        FROM
            SVC_CR_REBIL_MTR_BLLG A
        WHERE
                A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.SVC_CR_REBIL_DTL_PK  = #svcCrRebilDtlPk#
        <isNotNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
        </isNotNull>
            AND A.MTR_BLLG_FROM_DT     = #mtrBllgFromDt#
    </statement>

    <statement id="getAggLineXsRate" parameterClass="Map" resultClass="Map">
        SELECT
            A.BLLG_MTR_LB_CD
<!-- START 2017/10/20 K.Kitachi [QC#21927, MOD] -->
<!--        ,B.OLD_XS_COPY_QTY -->
            ,RANK() OVER(PARTITION BY A.SVC_CR_REBIL_MTR_BLLG_PK ORDER BY B.OLD_XS_COPY_QTY) OLD_XS_COPY_QTY
<!-- END 2017/10/20 K.Kitachi [QC#21927, MOD] -->
            ,B.NEW_XS_MTR_AMT_RATE
        FROM
            SVC_CR_REBIL_MTR_BLLG A
            ,SVC_CR_REBIL_XS_MTR_BLLG B
            ,DS_CONTR_DTL C
        WHERE
            A.GLBL_CMPY_CD              = #glblCmpyCd#
        AND A.SVC_CR_REBIL_DTL_PK       = #svcCrRebilDtlPk#
        AND A.EZCANCELFLAG              = '0'
        AND A.GLBL_CMPY_CD              = B.GLBL_CMPY_CD
        AND A.SVC_CR_REBIL_MTR_BLLG_PK  = B.SVC_CR_REBIL_MTR_BLLG_PK
        AND B.EZCANCELFLAG              = '0'
        AND B.GLBL_CMPY_CD              = C.GLBL_CMPY_CD
        AND B.DS_CONTR_DTL_PK           = C.DS_CONTR_DTL_PK
        AND C.DS_CONTR_DTL_TP_CD        = #dsContrDtlTpCdAgg#
        ORDER BY 
            A.BLLG_MTR_LB_CD
            ,B.OLD_XS_COPY_QTY
    </statement>

    <statement id="getAggMachDiffRate" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            SVC_CR_REBIL_XS_MTR_BLLG_PK
        FROM (
                SELECT
                    A.SVC_CR_REBIL_XS_MTR_BLLG_PK
                    ,D.BLLG_MTR_LB_CD
                    ,A.NEW_XS_MTR_AMT_RATE
                    ,RANK() OVER(PARTITION BY A.SVC_CR_REBIL_MTR_BLLG_PK ORDER BY A.OLD_XS_COPY_QTY) TIER_CNT
                FROM
                    SVC_CR_REBIL_XS_MTR_BLLG A
                    ,DS_CONTR_DTL B
                    ,DS_CONTR C
                    ,SVC_CR_REBIL_MTR_BLLG D
                WHERE
                    A.GLBL_CMPY_CD              = #glblCmpyCd#
                AND A.SVC_CR_REBIL_DTL_PK       = #svcCrRebilDtlPk#
                AND A.EZCANCELFLAG              = '0'
                AND A.GLBL_CMPY_CD              = B.GLBL_CMPY_CD
                AND A.DS_CONTR_DTL_PK           = B.DS_CONTR_DTL_PK
                AND B.EZCANCELFLAG              = '0'
                AND B.DS_CONTR_DTL_TP_CD        &lt;&gt; #dsContrDtlTpCdAgg#
                AND B.GLBL_CMPY_CD              = C.GLBL_CMPY_CD
                AND B.DS_CONTR_PK               = C.DS_CONTR_PK
                AND C.DS_CONTR_CATG_CD          = #dsContrCatgCdAgg#
                AND C.EZCANCELFLAG              = '0'
                AND A.GLBL_CMPY_CD              = D.GLBL_CMPY_CD
                AND A.SVC_CR_REBIL_MTR_BLLG_PK  = D.SVC_CR_REBIL_MTR_BLLG_PK
                AND D.EZCANCELFLAG              = '0'
                ORDER BY
                    A.SVC_CR_REBIL_MTR_BLLG_PK
            ) TMP
        WHERE
            TMP.BLLG_MTR_LB_CD      = #bllgMtrLbCd#
        AND TMP.TIER_CNT            = #tierCnt#
        <isNotNull property="newXsMtrAmtRate">
        AND (TMP.NEW_XS_MTR_AMT_RATE &lt;&gt; #newXsMtrAmtRate#
            OR TMP.NEW_XS_MTR_AMT_RATE IS NULL)
        </isNotNull>
        <isNull property="newXsMtrAmtRate">
        AND TMP.NEW_XS_MTR_AMT_RATE IS NOT NULL
        </isNull>
    </statement>

    <statement id="getSvcCrXsMtrBllg" parameterClass="Map" resultClass="Map">
        SELECT
            *
        FROM (
            SELECT
                 A.SVC_INV_LINE_PK
                ,A.DS_CONTR_DTL_PK
                ,A.DS_CONTR_BLLG_MTR_PK
                ,A.CONTR_XS_COPY_PK
                ,A.NEW_XS_COPY_QTY
                ,A.NEW_XS_MTR_AMT_RATE
                ,A.OLD_XS_COPY_QTY
                ,CASE 
                    WHEN B.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCdAgg# OR B.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCdFlt#
                        THEN    0
                        ELSE    1
                 END AS DTL_SORT
            FROM
                     SVC_CR_REBIL_XS_MTR_BLLG   A
                    ,DS_CONTR_DTL               B
            WHERE
                    A.GLBL_CMPY_CD          = #glblCmpyCd#
                AND A.EZCANCELFLAG          = '0'
                AND A.SVC_CR_REBIL_DTL_PK   = #svcCrRebilDtlPk#
                AND A.GLBL_CMPY_CD          = B.GLBL_CMPY_CD
                AND B.EZCANCELFLAG          = '0'
                AND A.DS_CONTR_DTL_PK       = B.DS_CONTR_DTL_PK
            )
        ORDER BY 
             DTL_SORT
            ,DS_CONTR_DTL_PK
            ,DS_CONTR_BLLG_MTR_PK
            ,OLD_XS_COPY_QTY
    </statement>

    <statement id="getSvcCrBaseBllg" parameterClass="Map" resultClass="Map">
        SELECT
            *
        FROM (
            SELECT
                 A.SVC_INV_LINE_PK
                ,A.DS_CONTR_DTL_PK
                ,A.NEW_BASE_DEAL_AMT
                ,A.BASE_BLLG_FROM_DT
                ,CASE 
                    WHEN B.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCdAgg# OR B.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCdFlt#
                        THEN    0
                    <!-- START 2019/09/30 [QC#52859, MOD] -->
                    WHEN B.DS_CONTR_DTL_TP_CD &lt;&gt; #dsContrDtlTpCdAcc#
                        THEN    1
                        ELSE    2
                    <!-- END 2019/09/30 [QC#52859, MOD] -->
                 END AS DTL_SORT
            FROM
                     SVC_CR_REBIL_BASE_BLLG   A
                    ,DS_CONTR_DTL             B
            WHERE
                    A.GLBL_CMPY_CD          = #glblCmpyCd#
                AND A.EZCANCELFLAG          = '0'
                AND A.SVC_CR_REBIL_DTL_PK   = #svcCrRebilDtlPk#
                AND A.GLBL_CMPY_CD          = B.GLBL_CMPY_CD
                AND B.EZCANCELFLAG          = '0'
                AND A.DS_CONTR_DTL_PK       = B.DS_CONTR_DTL_PK
            )
        ORDER BY 
             DTL_SORT
            ,DS_CONTR_DTL_PK
            ,BASE_BLLG_FROM_DT
    </statement>

    <statement id="getRegisteredSvcCrRebilPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             B.SVC_CR_REBIL_PK
        FROM
             SVC_CR_REBIL_DTL A
            ,SVC_CR_REBIL     B
        WHERE
                A.EZCANCELFLAG        = '0'
            AND A.GLBL_CMPY_CD        = #glblCmpyCd#
            AND A.ORIG_SVC_INV_NUM    = #origSvcInvNum#
            AND B.EZCANCELFLAG        = '0'
            AND A.GLBL_CMPY_CD        = B.GLBL_CMPY_CD
            AND A.SVC_CR_REBIL_PK     = B.SVC_CR_REBIL_PK
            AND B.SVC_CR_REBIL_STS_CD &lt;&gt; #svcCrRebilStsCd#
        <isNotNull property="svcCrRebilPk">
            AND B.SVC_CR_REBIL_PK     &lt;&gt; #svcCrRebilPk#
        </isNotNull>
    </statement>

    <statement id="getAdjMtrGrpSqInfo" parameterClass="Map" resultClass="Map">
        SELECT
             D.SVC_CR_REBIL_MTR_READ_PK
            ,A.NEW_END_MTR_READ_GRP_SQ
        FROM
             SVC_CR_REBIL_MTR_READ A
            ,SVC_CR_REBIL_DTL      B
            ,SVC_CR_REBIL_DTL      C
            ,SVC_CR_REBIL_MTR_READ D
        WHERE
                A.EZCANCELFLAG             = '0'
            AND A.GLBL_CMPY_CD             = #glblCmpyCd#
            AND A.NEW_END_MTR_READ_GRP_SQ   IS NOT NULL
            AND B.EZCANCELFLAG             = '0'
            AND A.GLBL_CMPY_CD             = B.GLBL_CMPY_CD
            AND A.SVC_CR_REBIL_DTL_PK      = B.SVC_CR_REBIL_DTL_PK
            AND B.SVC_CR_REBIL_PK          = #svcCrRebilPk#
            AND C.EZCANCELFLAG             = '0'
            AND B.GLBL_CMPY_CD             = C.GLBL_CMPY_CD
            AND B.SVC_CR_REBIL_PK          = C.SVC_CR_REBIL_PK
            AND D.EZCANCELFLAG             = '0'
            AND C.GLBL_CMPY_CD             = D.GLBL_CMPY_CD
            AND C.SVC_CR_REBIL_DTL_PK      = D.SVC_CR_REBIL_DTL_PK
            AND A.END_SVC_PHYS_MTR_READ_PK   = D.START_SVC_PHYS_MTR_READ_PK
    </statement>
<!-- START 2018/08/21 K.Kojima [QC#27769, DEL] -->
<!--     <statement id="getApproverList" parameterClass="Map" resultClass="Map">                                                        -->
<!--         WITH CONTR_HRCH AS (                                                                                                       -->
<!--             SELECT                                                                                                                 -->
<!--                  G.GLBL_CMPY_CD                                                                                                    -->
<!--                 ,G.SVC_CONTR_BR_CD                                                                                                 -->
<!--                 ,G.PSN_CD           AS PRINCIPAL_CD                                                                                -->
<!--                 ,J.PSN_CD           AS BOSS_CD                                                                                     -->
<!--                 ,I.APVL_LIMIT_AMT                                                                                                  -->
<!--                 ,'N'                AS AUTO_APVL_FLG                                                                               -->
<!--                 ,ROW_NUMBER() OVER (PARTITION BY G.GLBL_CMPY_CD, G.SVC_CONTR_BR_CD, G.PSN_CD ORDER BY I.APVL_LIMIT_AMT ) AS ROW_ID -->
<!--             FROM                                                                                                                   -->
<!--                  SVC_BR_RESRC_RELN      G                                                                                          -->
<!--                 ,ORG_FUNC_ROLE_TP       H                                                                                          -->
<!--                 ,ORG_FUNC_ROLE_TP       I                                                                                          -->
<!--                 ,SVC_BR_RESRC_RELN      J                                                                                          -->
<!--             WHERE                                                                                                                  -->
<!--                     G.GLBL_CMPY_CD              = #glblCmpyCd#                                                                     -->
<!--                 AND G.EZCANCELFLAG              = '0'                                                                              -->
<!--                 AND G.SVC_BR_RESRC_ACTV_FLG     = 'Y'                                                                              -->
<!--                 AND G.GLBL_CMPY_CD              = H.GLBL_CMPY_CD                                                                   -->
<!--                 AND G.SVC_ORG_FUNC_ROLE_TP_CD   = H.ORG_FUNC_ROLE_TP_CD                                                            -->
<!--                 AND H.ACTV_FLG                  = 'Y'                                                                              -->
<!--                 AND H.FIRST_ORG_CD              = #firstOrgCd#                                                                     -->
<!--                 AND H.EZCANCELFLAG              = '0'                                                                              -->
<!--                 AND H.GLBL_CMPY_CD              = I.GLBL_CMPY_CD                                                                   -->
<!--                 AND H.APVL_LIMIT_AMT            &lt;= I.APVL_LIMIT_AMT                                                             -->
<!--                 AND I.ACTV_FLG                  = 'Y'                                                                              -->
<!--                 AND I.FIRST_ORG_CD              = #firstOrgCd#                                                                     -->
<!--                 AND I.EZCANCELFLAG              = '0'                                                                              -->
<!--                 AND I.GLBL_CMPY_CD              = J.GLBL_CMPY_CD                                                                   -->
<!--                 AND I.ORG_FUNC_ROLE_TP_CD       = J.SVC_ORG_FUNC_ROLE_TP_CD                                                        -->
<!--                 AND J.SVC_BR_RESRC_ACTV_FLG     = 'Y'                                                                              -->
<!--                 AND J.EZCANCELFLAG              = '0'                                                                              -->
<!--                 AND G.SVC_CONTR_BR_CD           = J.SVC_CONTR_BR_CD                                                                -->
<!--                 AND (                                                                                                              -->
<!--                         G.PSN_CD                = J.PSN_CD                                                                         -->
<!--                      OR H.APVL_LIMIT_AMT    &lt;&gt; I.APVL_LIMIT_AMT                                                              -->
<!--                    )                                                                                                               -->
<!--         )                                                                                                                          -->
<!--         SELECT                                                                                                                     -->
<!--              A.SVC_RG_PK                            AS COND_NUM_1                                                                  -->
<!--             ,C.SVC_CONTR_BR_CD                      AS COND_STR_1                                                                  -->
<!--             ,D.PSN_CD                               AS COND_STR_2                                                                  -->
<!--             ,F.APVL_LIMIT_AMT                       AS COND_NUM_2                                                                  -->
<!--             ,F.AUTO_APVL_FLG                        AS COND_STR_3                                                                  -->
<!--             ,F.BOSS_CD                              AS VAL_STR_1                                                                   -->
<!--             ,K.PSN_FIRST_NM || ' ' || K.PSN_LAST_NM AS BOSS_NM                                                                     -->
<!--         FROM                                                                                                                       -->
<!--              SVC_RG                 A                                                                                              -->
<!--             ,SVC_RG_BR_RELN         B                                                                                              -->
<!--             ,SVC_CONTR_BR           C                                                                                              -->
<!--             ,SVC_BR_RESRC_RELN      D                                                                                              -->
<!--             ,CONTR_HRCH             F                                                                                              -->
<!--             ,S21_PSN                K                                                                                              -->
<!--         WHERE                                                                                                                      -->
<!--                 A.GLBL_CMPY_CD              = #glblCmpyCd#                                                                         -->
<!--             AND A.EZCANCELFLAG              = '0'                                                                                  -->
<!--             AND A.SVC_RG_ACTV_FLG           = 'Y'                                                                                  -->
<!--             AND A.GLBL_CMPY_CD              = B.GLBL_CMPY_CD                                                                       -->
<!--             AND A.SVC_RG_PK                 = B.SVC_RG_PK                                                                          -->
<!--             AND B.EZCANCELFLAG              = '0'                                                                                  -->
<!--             AND B.GLBL_CMPY_CD              = C.GLBL_CMPY_CD                                                                       -->
<!--             AND B.SVC_CONTR_BR_CD           = C.SVC_CONTR_BR_CD                                                                    -->
<!--             AND C.SVC_CONTR_BR_ACTV_FLG     = 'Y'                                                                                  -->
<!--             AND C.SVC_CONTR_BR_CD           = #svcContrBrCd#                                                                       -->
<!--             AND C.EZCANCELFLAG              = '0'                                                                                  -->
<!--             AND C.GLBL_CMPY_CD              = D.GLBL_CMPY_CD                                                                       -->
<!--             AND C.SVC_CONTR_BR_CD           = D.SVC_CONTR_BR_CD                                                                    -->
<!--             AND D.SVC_BR_RESRC_ACTV_FLG     = 'Y'                                                                                  -->
<!--             AND D.PSN_CD                    = #psnCd#                                                                              -->
<!--             AND D.EZCANCELFLAG              = '0'                                                                                  -->
<!--             AND D.SVC_CONTR_BR_CD           = F.SVC_CONTR_BR_CD                                                                    -->
<!--             AND D.PSN_CD                    = F.PRINCIPAL_CD                                                                       -->
<!--             AND D.PSN_CD                    &lt;&gt; F.BOSS_CD                                                                     -->
<!--             AND F.AUTO_APVL_FLG             = 'N'                                                                                  -->
<!--             AND F.GLBL_CMPY_CD              = K.GLBL_CMPY_CD                                                                       -->
<!--             AND F.BOSS_CD                   = K.PSN_CD                                                                             -->
<!--             AND K.EZCANCELFLAG              = '0'                                                                                  -->
<!--         ORDER BY                                                                                                                   -->
<!--              A.SVC_RG_PK                                                                                                           -->
<!--             ,B.SVC_CONTR_BR_CD                                                                                                     -->
<!--             ,D.PSN_CD                                                                                                              -->
<!--             ,F.APVL_LIMIT_AMT                                                                                                      -->
<!--     </statement>                                                                                                                   -->
<!-- END 2018/08/21 K.Kojima [QC#27769, DEL] -->
<!-- START 2017/10/05 K.Kim [QC#21219-1, MOD] -->
<!-- START 2017/10/16 K.Kitachi [QC#21767, MOD] -->
    <statement id="getOrigInvXsInfo" parameterClass="Map" resultClass="Map">
        SELECT
                SUM(C.XS_MTR_COPY_QTY) AS XS_MTR_COPY_QTY
                ,C.XS_MTR_AMT_RATE
        FROM
                SVC_INV_LINE A
                ,SVC_INV_LINE_MTR B
                ,DS_CONTR_BLLG_SCHD_MTR C
                ,DS_CONTR_BLLG_MTR D
                ,DS_CONTR_BLLG_SCHD E
        WHERE
                    A.GLBL_CMPY_CD          = #glblCmpyCd#
                AND A.SVC_INV_NUM           = #svcInvNum#
                AND A.SVC_INV_CHRG_TP_CD    = #meterCharge#
                <isNotNull property="serNum">
                AND A.SER_NUM               = #serNum#
                </isNotNull>
                AND A.EZCANCELFLAG          = '0'
                AND A.GLBL_CMPY_CD          = B.GLBL_CMPY_CD
                AND A.SVC_INV_LINE_PK       = B.SVC_INV_LINE_PK
                AND B.EZCANCELFLAG          = '0'
                AND B.GLBL_CMPY_CD          = D.GLBL_CMPY_CD
                AND B.DS_CONTR_BLLG_MTR_PK  = D.DS_CONTR_BLLG_MTR_PK
                AND D.BLLG_MTR_LB_CD        = #bllgMtrLbCd#
                AND D.EZCANCELFLAG          = '0'
                AND B.GLBL_CMPY_CD          = C.GLBL_CMPY_CD
                AND B.DS_CONTR_BLLG_MTR_PK  = C.DS_CONTR_BLLG_MTR_PK
                <isNotNull property="xsMtrCopyQty">
                AND C.XS_MTR_COPY_QTY       = #xsMtrCopyQty#
                </isNotNull>
                <isNotNull property="xsMtrAmtRate">
                AND C.XS_MTR_AMT_RATE       = #xsMtrAmtRate#
                </isNotNull>
                AND C.EZCANCELFLAG          = '0'
                AND A.GLBL_CMPY_CD          = E.GLBL_CMPY_CD
                AND A.DS_CONTR_BLLG_SCHD_PK = E.DS_CONTR_BLLG_SCHD_PK
                AND E.DS_CONTR_BLLG_SCHD_SMRY_PK = C.DS_CONTR_BLLG_SCHD_SMRY_PK
                AND E.EZCANCELFLAG          = '0'
        GROUP BY
                C.XS_MTR_AMT_RATE
        ORDER BY
                SUM(C.XS_MTR_COPY_QTY)
    </statement>
<!-- END 2017/10/16 K.Kitachi [QC#21767, MOD] -->
<!-- END 2017/10/05 K.Kim [QC#21219-1, MOD] -->
<!-- START 2017/09/26 K.Kitachi [QC#21212, ADD] -->
<!-- START 2018/04/05 M.Naito [QC#18672,ADD] -->
    <statement id="getTrgtSvcInvNumList" parameterClass="Map" resultClass="String">
        SELECT
            B.SVC_INV_NUM
        FROM
             DS_CONTR_BLLG_SCHD A
            ,DS_CONTR_BLLG_SCHD B
        WHERE
                A.GLBL_CMPY_CD                 =    #glblCmpyCd#
            AND A.SVC_INV_NUM                  =    #svcInvNum#
            AND A.EZCANCELFLAG                 =    '0'
            AND A.GLBL_CMPY_CD                 =    B.GLBL_CMPY_CD
            AND A.DS_CONTR_DTL_PK              =    B.DS_CONTR_DTL_PK
            AND NVL(A.DS_CONTR_BLLG_MTR_PK, 0) =    NVL(B.DS_CONTR_BLLG_MTR_PK, 0)
            AND A.BASE_CHRG_FLG                =    B.BASE_CHRG_FLG
            AND A.USG_CHRG_FLG                 =    B.USG_CHRG_FLG
            AND A.BLLG_SCHD_THRU_DT            &lt; B.BLLG_SCHD_FROM_DT
            AND B.INV_FLG                      =    'Y'
            AND B.DS_CONTR_PRC_EFF_PK          IS NOT NULL
            AND B.EZCANCELFLAG                 =    '0'
            <!-- START 2017/10/13 K.Kojima [QC#21790, ADD] -->
            AND B.DS_BLLG_SCHD_TP_CD           IN   (#dsBllgSchdTpRegular#, #dsBllgSchdTpRebill#)
            AND NOT EXISTS(
                    SELECT
                        1
                    FROM
                         SVC_CR_REBIL_DTL C
                        ,SVC_CR_REBIL     D
                    WHERE
                            C.GLBL_CMPY_CD     = B.GLBL_CMPY_CD
                        AND C.ORIG_SVC_INV_NUM = B.SVC_INV_NUM
                        AND C.EZCANCELFLAG     = '0'
                        AND C.GLBL_CMPY_CD     = D.GLBL_CMPY_CD
                        AND C.SVC_CR_REBIL_PK  = D.SVC_CR_REBIL_PK
                        AND D.EZCANCELFLAG     = '0'
                        AND D.SVC_CR_REBIL_STS_CD &lt;&gt; #svcCrRebilStsCd#
                )
            <!-- END 2017/10/13 K.Kojima [QC#21790, ADD] -->
        GROUP BY
            B.SVC_INV_NUM
        ORDER BY
            B.SVC_INV_NUM
    </statement>
    <!-- END 2018/04/05 M.Naito [QC#18672,ADD] -->
    <statement id="getPrcEffForBase" parameterClass="Map" resultClass="Map">
        SELECT
             DS_CONTR_PRC_EFF_SQ_NUM + 1                                     AS NEXT_SQ_NUM
            ,TO_CHAR(TO_DATE(BLLG_SCHD_THRU_DT, 'YYYYMMDD') + 1, 'YYYYMMDD') AS NEXT_START_DT
        FROM
            (
                SELECT
                     A.DS_CONTR_PRC_EFF_SQ_NUM
                    ,A.BLLG_SCHD_THRU_DT
                FROM
                    DS_CONTR_BLLG_SCHD A 
                WHERE
                        A.GLBL_CMPY_CD          = #glblCmpyCd#
                    AND A.EZCANCELFLAG          = '0'
                    AND A.DS_CONTR_DTL_PK       = #dsContrDtlPk#
                    AND A.BASE_CHRG_FLG         = 'Y'
                    AND A.INV_TP_CD             = #invTpCd#
                    AND A.SVC_CR_REBIL_PK       = #svcCrRebilPk#
                ORDER BY
                    A.BLLG_SCHD_THRU_DT          DESC
            )
        WHERE
            ROWNUM = 1
    </statement>
    <!-- START 2022/10/23 T.Suzuki [QC#58427, ADD] -->
    <statement id="getCurrentPrcEffForBase" parameterClass="Map" resultClass="Map">
        SELECT
            A.DS_CONTR_PRC_EFF_PK
           ,A.DS_CONTR_PRC_EFF_SQ_NUM
           ,A.CONTR_PRC_EFF_FROM_DT
           ,A.CONTR_PRC_EFF_THRU_DT
           ,A.DS_CONTR_PRC_EFF_STS_CD
        FROM
            DS_CONTR_PRC_EFF A 
        WHERE
                A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.EZCANCELFLAG          = '0'
            AND A.DS_CONTR_DTL_PK       = #dsContrDtlPk#
            AND A.BASE_CHRG_FLG         = #baseChrgFlg#
            AND A.CONTR_PRC_EFF_FROM_DT &lt;= #slsDt#
            AND A.CONTR_PRC_EFF_THRU_DT &gt;= #slsDt#
    </statement>
    <!-- END 2022/10/23 T.Suzuki [QC#58427, ADD] -->
    <statement id="getPrcEffForUsg" parameterClass="Map" resultClass="Map">
        SELECT
             DS_CONTR_PRC_EFF_PK
            ,DS_CONTR_PRC_EFF_SQ_NUM + 1                                     AS NEXT_SQ_NUM
            ,TO_CHAR(TO_DATE(BLLG_SCHD_THRU_DT, 'YYYYMMDD') + 1, 'YYYYMMDD') AS NEXT_START_DT
        FROM
            (
                SELECT
                     A.DS_CONTR_PRC_EFF_PK
                    ,A.DS_CONTR_PRC_EFF_SQ_NUM
                    ,A.BLLG_SCHD_THRU_DT
                FROM
                    DS_CONTR_BLLG_SCHD A 
                WHERE
                        A.GLBL_CMPY_CD          = #glblCmpyCd#
                    AND A.EZCANCELFLAG          = '0'
                    AND A.DS_CONTR_DTL_PK       = #dsContrDtlPk#
                    AND A.DS_CONTR_BLLG_MTR_PK  = #dsContrBllgMtrPk#
                    AND A.USG_CHRG_FLG          = 'Y'
                    AND A.INV_TP_CD             = #invTpCd#
                    AND A.SVC_CR_REBIL_PK       = #svcCrRebilPk#
                ORDER BY
                    A.BLLG_SCHD_THRU_DT          DESC
            )
        WHERE
            ROWNUM = 1
    </statement>
    <!-- START 2022/10/23 T.Suzuki [QC#58427, ADD] -->
    <statement id="getCurrentPrcEffForUsg" parameterClass="Map" resultClass="Map">
        SELECT
            A.DS_CONTR_PRC_EFF_PK 
           ,A.DS_CONTR_PRC_EFF_SQ_NUM
           ,A.CONTR_PRC_EFF_FROM_DT
           ,A.CONTR_PRC_EFF_THRU_DT
           ,A.DS_CONTR_PRC_EFF_STS_CD
        FROM
            DS_CONTR_PRC_EFF A 
        WHERE
                A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.EZCANCELFLAG          = '0'
            AND A.DS_CONTR_DTL_PK       = #dsContrDtlPk#
            AND A.DS_CONTR_BLLG_MTR_PK  = #dsContrBllgMtrPk#
            AND A.USG_CHRG_FLG          = #usgChrgFlg#
            AND A.CONTR_PRC_EFF_FROM_DT &lt;= #slsDt#
            AND A.CONTR_PRC_EFF_THRU_DT &gt;= #slsDt#
    </statement>
    <!-- END 2022/10/23 T.Suzuki [QC#58427, ADD] -->
    <statement id="getAggLinePk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.DS_CONTR_DTL_PK
        FROM
            DS_CONTR_DTL A
        WHERE
                A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.DS_CONTR_PK           = #dsContrPk#
            AND A.DS_CONTR_DTL_TP_CD    = #aggregate#
            AND A.EZCANCELFLAG          = '0'
    </statement>
    <statement id="getDsContrPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.DS_CONTR_PK
        FROM
            SVC_CR_REBIL_DTL A
        WHERE
                A.GLBL_CMPY_CD    = #glblCmpyCd#
            AND A.SVC_CR_REBIL_PK = #svcCrRebilPk#
            AND A.EZCANCELFLAG    = '0'
        GROUP BY
            A.DS_CONTR_PK
    </statement>
    <statement id="getCrRebilBase" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.BASE_PRC_DEAL_AMT
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
            A.GLBL_CMPY_CD               =  #glblCmpyCd#
        AND A.EZCANCELFLAG               =  '0'
        AND A.DS_CONTR_DTL_PK            =  #dsContrDtlPk#
        AND A.DS_CONTR_PRC_EFF_PK        IS NOT NULL
        AND A.DS_CONTR_BLLG_SCHD_SMRY_PK IS NOT NULL
        AND A.BLLG_SCHD_FROM_DT          &lt;= #targetDt#
        AND A.BLLG_SCHD_THRU_DT          &gt;= #targetDt#
        AND A.BASE_CHRG_FLG              =  'Y'
    </statement>
<!-- START 2020/03/18 K.Kitachi [QC#55693, DEL] -->
<!--<statement id="getCrRebilUsage" parameterClass="Map" resultClass="Map"> -->
<!--    SELECT -->
<!--         B.NEW_XS_COPY_QTY -->
<!--        ,B.NEW_XS_MTR_AMT_RATE -->
<!--    FROM -->
<!--         SVC_CR_REBIL_DTL         A -->
<!--        ,SVC_CR_REBIL_XS_MTR_BLLG B -->
<!--    WHERE -->
<!--            A.GLBL_CMPY_CD         = #glblCmpyCd# -->
<!--        AND A.SVC_CR_REBIL_PK      = #svcCrRebilPk# -->
<!--        AND A.EZCANCELFLAG         = '0' -->
<!--        AND A.GLBL_CMPY_CD         = B.GLBL_CMPY_CD -->
<!--        AND A.SVC_CR_REBIL_DTL_PK  = B.SVC_CR_REBIL_DTL_PK -->
<!--        AND B.DS_CONTR_DTL_PK      = #dsContrDtlPk# -->
<!--        AND B.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk# -->
<!--        AND B.CONTR_XS_COPY_PK     = #contrXsCopyPk# -->
<!--        AND B.EZCANCELFLAG         = '0' -->
<!--</statement> -->
<!-- END 2020/03/18 K.Kitachi [QC#55693, DEL] -->
    <statement id="countCrRebilBaseBllg" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
             SVC_CR_REBIL_DTL         A
            ,SVC_CR_REBIL_BASE_BLLG   B
        WHERE
                A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.SVC_CR_REBIL_PK      = #svcCrRebilPk#
            AND A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = B.GLBL_CMPY_CD
            AND A.SVC_CR_REBIL_DTL_PK  = B.SVC_CR_REBIL_DTL_PK
            AND B.EZCANCELFLAG         = '0'
    </statement>
    <statement id="countCrRebilMtrBllg" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
             SVC_CR_REBIL_DTL         A
            ,SVC_CR_REBIL_MTR_BLLG    B
        WHERE
                A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.SVC_CR_REBIL_PK      = #svcCrRebilPk#
            AND A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = B.GLBL_CMPY_CD
            AND A.SVC_CR_REBIL_DTL_PK  = B.SVC_CR_REBIL_DTL_PK
            AND B.EZCANCELFLAG         = '0'
    </statement>
    <statement id="countCrRebilXsMtrBllg" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
             SVC_CR_REBIL_DTL         A
            ,SVC_CR_REBIL_XS_MTR_BLLG B
        WHERE
                A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.SVC_CR_REBIL_PK      = #svcCrRebilPk#
            AND A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = B.GLBL_CMPY_CD
            AND A.SVC_CR_REBIL_DTL_PK  = B.SVC_CR_REBIL_DTL_PK
            AND B.EZCANCELFLAG         = '0'
    </statement>
<!-- END 2017/09/26 K.Kitachi [QC#21212, ADD] -->
<!-- START 2017/10/17 K.Kitachi [QC#21792, ADD] -->
    <statement id="getTrgtPrcEffForUsgList" parameterClass="Map" resultClass="Map">
        SELECT
             A.DS_CONTR_PK
            ,B.DS_CONTR_DTL_PK
            ,C.DS_CONTR_BLLG_MTR_PK
            ,D.DS_CONTR_PRC_EFF_PK
        FROM
             SVC_CR_REBIL_DTL  A
            ,DS_CONTR_DTL      B
            ,DS_CONTR_BLLG_MTR C
            ,DS_CONTR_PRC_EFF  D
        WHERE
                A.GLBL_CMPY_CD              = #glblCmpyCd#
            AND A.SVC_CR_REBIL_PK           = #svcCrRebilPk#
            AND A.EZCANCELFLAG              = '0'
            AND A.GLBL_CMPY_CD              = B.GLBL_CMPY_CD
            AND A.DS_CONTR_PK               = B.DS_CONTR_PK
            AND B.EZCANCELFLAG              = '0'
            AND B.GLBL_CMPY_CD              = C.GLBL_CMPY_CD
            AND B.DS_CONTR_DTL_PK           = C.DS_CONTR_DTL_PK
            AND C.EZCANCELFLAG              = '0'
            AND C.GLBL_CMPY_CD              = D.GLBL_CMPY_CD
            AND C.DS_CONTR_BLLG_MTR_PK      = D.DS_CONTR_BLLG_MTR_PK
            AND D.CONTR_PRC_EFF_FROM_DT &lt;= #slsDt#
            AND D.CONTR_PRC_EFF_THRU_DT &gt;= #slsDt#
            AND D.EZCANCELFLAG              = '0'
        GROUP BY
             A.DS_CONTR_PK
            ,B.DS_CONTR_DTL_PK
            ,C.DS_CONTR_BLLG_MTR_PK
            ,D.DS_CONTR_PRC_EFF_PK
        ORDER BY
             A.DS_CONTR_PK
            ,B.DS_CONTR_DTL_PK
            ,C.DS_CONTR_BLLG_MTR_PK
            ,D.DS_CONTR_PRC_EFF_PK
    </statement>
<!-- END 2017/10/17 K.Kitachi [QC#21792, ADD] -->
<!-- START 2017/10/16 K.Kojima [QC#21795, ADD] -->
    <statement id="countSvcCrRebilBaseBillg" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
             SVC_CR_REBIL_DTL       SCRD
            ,SVC_CR_REBIL_BASE_BLLG SCRBB
        WHERE
                SCRD.GLBL_CMPY_CD         = #glblCmpyCd#
            AND SCRD.SVC_CR_REBIL_PK      = #svcCrRebilPk#
            <iterate property="svcCrRebilDtlPkList" var="svcCrRebilDtlPkList[]" open="AND SCRD.SVC_CR_REBIL_DTL_PK IN (" conjunction= ", " close=")">
            #svcCrRebilDtlPkList[]#
            </iterate>
            AND SCRD.EZCANCELFLAG         = '0'
            AND SCRD.GLBL_CMPY_CD         = SCRBB.GLBL_CMPY_CD
            AND SCRD.SVC_CR_REBIL_DTL_PK  = SCRBB.SVC_CR_REBIL_DTL_PK
            AND SCRBB.EZCANCELFLAG        = '0'
    </statement>
<!-- END 2017/10/16 K.Kojima [QC#21795, ADD] -->
<!-- START 2017/10/16 K.Kojima [QC#21795, ADD] -->
    <statement id="countSvcCrRebilMtrBillg" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
             SVC_CR_REBIL_DTL      SCRD
            ,SVC_CR_REBIL_MTR_BLLG SCRMB
        WHERE
                SCRD.GLBL_CMPY_CD         = #glblCmpyCd#
            AND SCRD.SVC_CR_REBIL_PK      = #svcCrRebilPk#
            <iterate property="svcCrRebilDtlPkList" var="svcCrRebilDtlPkList[]" open="AND SCRD.SVC_CR_REBIL_DTL_PK IN (" conjunction= ", " close=")">
            #svcCrRebilDtlPkList[]#
            </iterate>
            AND SCRD.EZCANCELFLAG         = '0'
            AND SCRD.GLBL_CMPY_CD         = SCRMB.GLBL_CMPY_CD
            AND SCRD.SVC_CR_REBIL_DTL_PK  = SCRMB.SVC_CR_REBIL_DTL_PK
            AND SCRMB.EZCANCELFLAG        = '0'
    </statement>
<!-- END 2017/10/16 K.Kojima [QC#21795, ADD] -->
    <statement id="getTargetRbilSchdForBase" parameterClass="Map" resultClass="Map">
        SELECT
             C.DS_CONTR_BLLG_SCHD_PK        AS RBIL_DS_CONTR_BLLG_SCHD_PK
            ,C.DS_CONTR_BLLG_SCHD_SMRY_PK   AS RBIL_CONTR_BLLG_SCHD_SMRY_PK
            ,C.BLLG_SCHD_FROM_DT            AS RBIL_BLLG_SCHD_FROM_DT
            ,C.BLLG_SCHD_THRU_DT            AS RBIL_BLLG_SCHD_THRU_DT
            ,C.BASE_PRC_DEAL_AMT            AS RBIL_BASE_PRC_DEAL_AMT
            ,D.DS_CONTR_BLLG_SCHD_PK        AS ORIG_DS_CONTR_BLLG_SCHD_PK
<!-- START 2018/08/27 [QC#24555, ADD] -->
            ,D.BLLG_SCHD_PRRT_FLG
            ,NVL(A.NEW_BASE_UNIT_AMT, A.OLD_BASE_UNIT_AMT) AS NEW_BASE_UNIT_AMT
<!-- END   2018/08/27 [QC#24555, ADD] -->
        FROM
             SVC_CR_REBIL_BASE_BLLG A
            ,SVC_CR_REBIL_DTL       B
            ,DS_CONTR_BLLG_SCHD     C
            ,DS_CONTR_BLLG_SCHD     D
        WHERE
            A.GLBL_CMPY_CD               = #glblCmpyCd#
        AND A.EZCANCELFLAG               = '0'
        AND A.DS_CONTR_DTL_PK            = #dsContrDtlPk#
        AND A.GLBL_CMPY_CD               = B.GLBL_CMPY_CD
        AND A.SVC_CR_REBIL_DTL_PK        = B.SVC_CR_REBIL_DTL_PK
        AND B.EZCANCELFLAG               = '0'
        AND B.SVC_CR_REBIL_PK            = #svcCrRebilPk#
        AND B.GLBL_CMPY_CD               = C.GLBL_CMPY_CD
        AND A.DS_CONTR_DTL_PK            = C.DS_CONTR_DTL_PK
        AND B.SVC_CR_REBIL_PK            = C.SVC_CR_REBIL_PK
        AND B.SVC_CR_REBIL_DTL_PK        = C.SVC_CR_REBIL_DTL_PK
        AND C.EZCANCELFLAG               = '0'
        AND C.INV_TP_CD                  = #invTpCd#
        AND C.DS_BLLG_SCHD_TP_CD         = #dsBllgSchdTpCd#
        AND C.BASE_CHRG_FLG              = 'Y'
        AND C.GLBL_CMPY_CD               = D.GLBL_CMPY_CD
        AND C.ORIG_DS_CONTR_BLLG_SCHD_PK = D.DS_CONTR_BLLG_SCHD_PK
        AND D.EZCANCELFLAG               = '0'
        AND D.BASE_CHRG_FLG              = 'Y'
        ORDER BY
            RBIL_BLLG_SCHD_FROM_DT
    </statement>
    <statement id="getTargetPrcEffPkForBase" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             A.DS_CONTR_PRC_EFF_PK
        FROM
            DS_CONTR_PRC_EFF A
        WHERE
            A.GLBL_CMPY_CD              = #glblCmpyCd#
        AND A.EZCANCELFLAG              = '0'
        AND A.DS_CONTR_DTL_PK           = #dsContrDtlPk#
        AND A.BASE_CHRG_FLG             = 'Y'
        AND A.CONTR_PRC_EFF_FROM_DT &lt;= #targetDt#
        AND A.CONTR_PRC_EFF_THRU_DT &gt;= #targetDt#
    </statement>
    <statement id="getTargetTopSchdPkForBase" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             A.DS_CONTR_BLLG_SCHD_SMRY_PK
        FROM
            DS_CONTR_BLLG_SCHD_SMRY A
        WHERE
            A.GLBL_CMPY_CD                 = #glblCmpyCd#
        AND A.EZCANCELFLAG                 = '0'
        AND A.DS_CONTR_DTL_PK              = #dsContrDtlPk#
        AND A.DS_CONTR_PRC_EFF_PK          = #dsContrPrcEffPk#
        AND A.DS_CONTR_PRC_EFF_SQ_NUM      = #dsContrPrcEffSqNum#
        AND A.BASE_CHRG_FLG                = 'Y'
        AND A.BLLG_SCHD_FROM_DT        &lt;= #targetDt#
        AND A.BLLG_SCHD_THRU_DT        &gt;= #targetDt#
    </statement>
    <statement id="getRbilTopSchdAmtForBase" parameterClass="Map" resultClass="Map">
        SELECT
             SUM(A.BASE_ACTL_PRC_DEAL_AMT) AS BASE_SUB_TOT_PRC_DEAL_AMT
            ,SUM(A.BASE_PRC_ADJ_DEAL_AMT)  AS BASE_PRC_DEAL_ADJ_AMT
            <!-- START 2019/10/09 K.Kitachi [QC#53848, ADD] -->
            ,COUNT(DS_CONTR_BLLG_SCHD_PK)  AS PER_SCHD_NUM
            <!-- END 2019/10/09 K.Kitachi [QC#53848, ADD] -->
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
            A.GLBL_CMPY_CD               = #glblCmpyCd#
        AND A.EZCANCELFLAG               = '0'
        AND A.DS_CONTR_BLLG_SCHD_SMRY_PK = #dsContrBllgSchdSmryPk#
        <isNotNull property="startDt">
        AND A.BLLG_SCHD_FROM_DT      &gt;= #startDt#
        </isNotNull>
        <isNotNull property="endDt">
        AND A.BLLG_SCHD_THRU_DT      &lt;= #endDt#
        </isNotNull>
    </statement>
    <statement id="getRbilPrcEffAmtForBase" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             SUM(A.BASE_ACTL_PRC_DEAL_AMT) AS BASE_PRC_TERM_DEAL_AMT_RATE
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
            A.GLBL_CMPY_CD          = #glblCmpyCd#
        AND A.EZCANCELFLAG          = '0'
        AND A.DS_CONTR_PRC_EFF_PK   = #dsContrPrcEffPk#
        <isNotNull property="startDt">
        AND A.BLLG_SCHD_FROM_DT &gt;= #startDt#
        </isNotNull>
        <isNotNull property="endDt">
        AND A.BLLG_SCHD_THRU_DT &lt;= #endDt#
        </isNotNull>
    </statement>
    <statement id="getTargetRbilSchdForUsage" parameterClass="Map" resultClass="Map">
        SELECT
             C.DS_CONTR_BLLG_SCHD_PK        AS RBIL_DS_CONTR_BLLG_SCHD_PK
            ,C.DS_CONTR_BLLG_SCHD_SMRY_PK   AS RBIL_CONTR_BLLG_SCHD_SMRY_PK
            ,C.BLLG_SCHD_FROM_DT            AS RBIL_BLLG_SCHD_FROM_DT
            ,C.BLLG_SCHD_THRU_DT            AS RBIL_BLLG_SCHD_THRU_DT
            ,D.DS_CONTR_BLLG_SCHD_PK        AS ORIG_DS_CONTR_BLLG_SCHD_PK
<!-- START 2018/08/27 [QC#24555] -->
            ,A.SVC_CR_REBIL_MTR_BLLG_PK
            ,D.BLLG_SCHD_PRRT_FLG
<!-- END   2018/08/27 [QC#24555] -->
        FROM
             SVC_CR_REBIL_MTR_BLLG  A
            ,SVC_CR_REBIL_DTL       B
            ,DS_CONTR_BLLG_SCHD     C
            ,DS_CONTR_BLLG_SCHD     D
        WHERE
            A.GLBL_CMPY_CD               = #glblCmpyCd#
        AND A.EZCANCELFLAG               = '0'
        AND A.DS_CONTR_DTL_PK            = #dsContrDtlPk#
        AND A.DS_CONTR_BLLG_MTR_PK       = #dsContrBllgMtrPk#
        AND A.GLBL_CMPY_CD               = B.GLBL_CMPY_CD
        AND A.SVC_CR_REBIL_DTL_PK        = B.SVC_CR_REBIL_DTL_PK
        AND B.EZCANCELFLAG               = '0'
        AND B.SVC_CR_REBIL_PK            = #svcCrRebilPk#
        AND B.GLBL_CMPY_CD               = C.GLBL_CMPY_CD
        AND A.DS_CONTR_DTL_PK            = C.DS_CONTR_DTL_PK
        AND A.DS_CONTR_BLLG_MTR_PK       = C.DS_CONTR_BLLG_MTR_PK
        AND B.SVC_CR_REBIL_PK            = C.SVC_CR_REBIL_PK
        AND B.SVC_CR_REBIL_DTL_PK        = C.SVC_CR_REBIL_DTL_PK
        AND C.EZCANCELFLAG               = '0'
        AND C.INV_TP_CD                  = #invTpCd#
        AND C.DS_BLLG_SCHD_TP_CD         = #dsBllgSchdTpCd#
        AND C.USG_CHRG_FLG               = 'Y'
        AND C.GLBL_CMPY_CD               = D.GLBL_CMPY_CD
        AND C.ORIG_DS_CONTR_BLLG_SCHD_PK = D.DS_CONTR_BLLG_SCHD_PK
        AND D.EZCANCELFLAG               = '0'
        AND D.USG_CHRG_FLG               = 'Y'
        ORDER BY
            RBIL_BLLG_SCHD_FROM_DT
    </statement>
    <statement id="getTargetPrcEffPkForUsage" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             A.DS_CONTR_PRC_EFF_PK
        FROM
            DS_CONTR_PRC_EFF A
        WHERE
            A.GLBL_CMPY_CD              = #glblCmpyCd#
        AND A.EZCANCELFLAG              = '0'
        AND A.DS_CONTR_DTL_PK           = #dsContrDtlPk#
        AND A.DS_CONTR_BLLG_MTR_PK      = #dsContrBllgMtrPk#
        AND A.USG_CHRG_FLG              = 'Y'
        AND A.CONTR_PRC_EFF_FROM_DT &lt;= #targetDt#
        AND A.CONTR_PRC_EFF_THRU_DT &gt;= #targetDt#
    </statement>
    <statement id="getTargetTopSchdPkForUsage" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             A.DS_CONTR_BLLG_SCHD_SMRY_PK
        FROM
            DS_CONTR_BLLG_SCHD_SMRY A
        WHERE
            A.GLBL_CMPY_CD                 = #glblCmpyCd#
        AND A.EZCANCELFLAG                 = '0'
        AND A.DS_CONTR_DTL_PK              = #dsContrDtlPk#
        AND A.DS_CONTR_BLLG_MTR_PK         = #dsContrBllgMtrPk#
        AND A.DS_CONTR_PRC_EFF_PK          = #dsContrPrcEffPk#
        AND A.DS_CONTR_PRC_EFF_SQ_NUM      = #dsContrPrcEffSqNum#
        AND A.USG_CHRG_FLG                 = 'Y'
        AND A.BLLG_SCHD_FROM_DT        &lt;= #targetDt#
        AND A.BLLG_SCHD_THRU_DT        &gt;= #targetDt#
    </statement>
    <statement id="getDsContrDtlBySvcCrRebilPkForSchdApi" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            Z.DS_CONTR_DTL_PK
        FROM
            (
            SELECT
                    B.DS_CONTR_DTL_PK
                   ,CASE
                       WHEN E.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCd# THEN 0
                       ELSE E.DS_CONTR_DTL_TP_SORT_NUM
                    END AS DS_CONTR_DTL_TP_SORT_NUM
            FROM
                    SVC_CR_REBIL_DTL        A
                    ,SVC_CR_REBIL_BASE_BLLG B
                    ,DS_CONTR_DTL           D
                    ,DS_CONTR_DTL_TP        E
            WHERE
                    A.GLBL_CMPY_CD          = #glblCmpyCd#
                AND A.EZCANCELFLAG          = '0'
                AND A.SVC_CR_REBIL_PK       = #svcCrRebilPk#
                AND A.GLBL_CMPY_CD          = B.GLBL_CMPY_CD
                AND B.EZCANCELFLAG          = '0'
                AND A.SVC_CR_REBIL_DTL_PK   = B.SVC_CR_REBIL_DTL_PK
                AND B.GLBL_CMPY_CD          = D.GLBL_CMPY_CD
                AND B.DS_CONTR_DTL_PK       = D.DS_CONTR_DTL_PK
                AND D.EZCANCELFLAG          = '0'
                AND D.GLBL_CMPY_CD          = E.GLBL_CMPY_CD
                AND D.DS_CONTR_DTL_TP_CD    = E.DS_CONTR_DTL_TP_CD
                AND E.EZCANCELFLAG          = '0'
            UNION
            SELECT
                    C.DS_CONTR_DTL_PK
                   ,CASE
                       WHEN E.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCd# THEN 0
                       ELSE E.DS_CONTR_DTL_TP_SORT_NUM
                    END AS DS_CONTR_DTL_TP_SORT_NUM
            FROM
                    SVC_CR_REBIL_DTL       A
                    ,SVC_CR_REBIL_MTR_BLLG C
                    ,DS_CONTR_DTL           D
                    ,DS_CONTR_DTL_TP        E
            WHERE
                    A.GLBL_CMPY_CD          = #glblCmpyCd#
                AND A.EZCANCELFLAG          = '0'
                AND A.SVC_CR_REBIL_PK       = #svcCrRebilPk#
                AND A.GLBL_CMPY_CD          = C.GLBL_CMPY_CD
                AND C.EZCANCELFLAG          = '0'
                AND A.SVC_CR_REBIL_DTL_PK   = C.SVC_CR_REBIL_DTL_PK
                AND C.GLBL_CMPY_CD          = D.GLBL_CMPY_CD
                AND C.DS_CONTR_DTL_PK       = D.DS_CONTR_DTL_PK
                AND D.EZCANCELFLAG          = '0'
                AND D.GLBL_CMPY_CD          = E.GLBL_CMPY_CD
                AND D.DS_CONTR_DTL_TP_CD    = E.DS_CONTR_DTL_TP_CD
                AND E.EZCANCELFLAG          = '0'
            ) Z
        ORDER BY
            Z.DS_CONTR_DTL_TP_SORT_NUM, Z.DS_CONTR_DTL_PK
    </statement>
    <statement id="getSchdAmtForAggLine" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             SUM(C.NEW_BASE_DEAL_AMT) AS NEW_BASE_DEAL_AMT
        FROM
             DS_CONTR_BLLG_SCHD     A
            ,SVC_CR_REBIL_DTL       B
            ,SVC_CR_REBIL_BASE_BLLG C
        WHERE
            A.GLBL_CMPY_CD            =  #glblCmpyCd#
        AND A.EZCANCELFLAG            =  '0'
        AND A.DS_CONTR_BLLG_SCHD_PK   =  #dsContrBllgSchdPk#
        AND A.GLBL_CMPY_CD            =  B.GLBL_CMPY_CD
        AND A.SVC_CR_REBIL_PK         =  B.SVC_CR_REBIL_PK
        AND A.SVC_CR_REBIL_DTL_PK     =  B.SVC_CR_REBIL_DTL_PK
        AND B.EZCANCELFLAG            =  '0'
        AND B.GLBL_CMPY_CD            =  C.GLBL_CMPY_CD
        AND B.SVC_CR_REBIL_DTL_PK     =  C.SVC_CR_REBIL_DTL_PK
        AND C.EZCANCELFLAG            =  '0'
        AND C.NEW_BASE_DEAL_AMT       IS NOT NULL
    </statement>
    <statement id="getDtlTermDealAmt" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            SUM(A.BASE_PRC_TERM_DEAL_AMT_RATE)
        FROM
            DS_CONTR_PRC_EFF A
        WHERE
            A.GLBL_CMPY_CD    = #glblCmpyCd#
        AND A.EZCANCELFLAG    = '0'
        AND A.DS_CONTR_DTL_PK = #dsContrDtlPk#
        AND A.BASE_CHRG_FLG   = 'Y'
        <iterate property="dsContrPrcEffStsCdList" var="dsContrPrcEffStsCd[]" open="AND A.DS_CONTR_PRC_EFF_STS_CD NOT IN (" conjunction= ", " close=")">
            #dsContrPrcEffStsCd[]#
        </iterate>
    </statement>
    <statement id="getNextDsContrBllgSchdSq" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             COUNT(*) + 1 AS DS_CONTR_BLLG_SCHD_SQ_NUM
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
            A.GLBL_CMPY_CD               = #glblCmpyCd#
        AND A.EZCANCELFLAG               = '0'
        AND A.DS_CONTR_DTL_PK            = #dsContrDtlPk#
        AND A.DS_CONTR_PRC_EFF_PK        = #dsContrPrcEffPk#
        AND A.DS_CONTR_BLLG_SCHD_SMRY_PK = #dsContrBllgSchdSmryPk#
    </statement>
    <statement id="getCurPeBasePrcDealAmt" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            BASE_PRC_DEAL_AMT
        FROM
            (
                SELECT
                     DPE.BASE_PRC_DEAL_AMT
                    ,3                            AS SORT_KEY1
                    ,(TO_DATE(#slsDt#, 'YYYYMMDD') - TO_DATE(DPE.CONTR_PRC_EFF_THRU_DT, 'YYYYMMDD'))  AS SORT_KEY2
                FROM
                    DS_CONTR_PRC_EFF DPE
                WHERE
                        DPE.DS_CONTR_DTL_PK             =        #dsContrDtlPk#
                    AND DPE.GLBL_CMPY_CD                =        #glblCmpyCd#
                    AND DPE.EZCANCELFLAG                =        '0'
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD     &lt;&gt; #cancelSts#
                    AND DPE.BASE_CHRG_FLG               =        'Y'
                    AND DPE.CONTR_PRC_EFF_THRU_DT       &lt;     #slsDt#
                UNION
                SELECT
                     DPE.BASE_PRC_DEAL_AMT
                    ,1                            AS SORT_KEY1
                    ,0                            AS SORT_KEY2
                FROM
                    DS_CONTR_PRC_EFF DPE
                WHERE
                        DPE.DS_CONTR_DTL_PK             =        #dsContrDtlPk#
                    AND DPE.GLBL_CMPY_CD                =        #glblCmpyCd#
                    AND DPE.EZCANCELFLAG                =        '0'
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD     &lt;&gt; #cancelSts#
                    AND DPE.BASE_CHRG_FLG               =        'Y'
                    AND DPE.CONTR_PRC_EFF_FROM_DT       &lt;=    #slsDt#
                    AND DPE.CONTR_PRC_EFF_THRU_DT       &gt;=    #slsDt#
                UNION
                SELECT
                     DPE.BASE_PRC_DEAL_AMT
                    ,2                            AS SORT_KEY1
                    ,(TO_DATE(DPE.CONTR_PRC_EFF_FROM_DT, 'YYYYMMDD') - TO_DATE(#slsDt#, 'YYYYMMDD'))  AS SORT_KEY2
                FROM
                    DS_CONTR_PRC_EFF DPE
                WHERE
                        DPE.DS_CONTR_DTL_PK             =        #dsContrDtlPk#
                    AND DPE.GLBL_CMPY_CD                =        #glblCmpyCd#
                    AND DPE.EZCANCELFLAG                =        '0'
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD     &lt;&gt; #cancelSts#
                    AND DPE.BASE_CHRG_FLG               =        'Y'
                    AND DPE.CONTR_PRC_EFF_FROM_DT       &gt;=    #slsDt#
                ORDER BY
                     SORT_KEY1                    ASC
                    ,SORT_KEY2                    ASC
        )
        WHERE
            ROWNUM = 1
    </statement>

    <!-- START 2017/12/19 K.Kojima [QC#22385,ADD] -->
    <statement id="getSvcPhysMtrReadGrpSq" parameterClass="Map" resultClass="BigDecimal">
        <!-- START 2018/03/20 K.Kojima [QC#22386,ADD] -->
        SELECT DISTINCT
            SVC_PHYS_MTR_READ_GRP_SQ
        FROM
            (
        <!-- END 2018/03/20 K.Kojima [QC#22386,ADD] -->
        <!-- START 2018/03/20 K.Kojima [QC#22386,MOD] -->
        <!-- SELECT DISTINCT -->
        SELECT
        <!-- END 2018/03/20 K.Kojima [QC#22386,MOD] -->
            DCBS.SVC_PHYS_MTR_READ_GRP_SQ
        FROM
             SVC_CR_REBIL_DTL SCRD
            ,DS_CONTR_DTL DCD
            ,DS_CONTR_BLLG_SCHD DCBS
        WHERE
                SCRD.GLBL_CMPY_CD             = #glblCmpyCd#
            AND SCRD.SVC_CR_REBIL_PK          = #svcCrRebilPk#
            AND SCRD.EZCANCELFLAG             = '0'
            AND SCRD.GLBL_CMPY_CD             = DCD.GLBL_CMPY_CD
            AND SCRD.DS_CONTR_PK              = DCD.DS_CONTR_PK
            AND DCD.EZCANCELFLAG              = '0'
            AND DCD.GLBL_CMPY_CD              = DCBS.GLBL_CMPY_CD
            AND DCD.DS_CONTR_DTL_PK           = DCBS.DS_CONTR_DTL_PK
            AND DCBS.USG_CHRG_FLG             = 'Y'
            AND DCBS.SVC_PHYS_MTR_READ_GRP_SQ IS NOT NULL
            AND DCBS.DS_CONTR_PRC_EFF_PK      IS NOT NULL
            AND DCBS.EZCANCELFLAG             = '0'
        <!-- START 2018/03/20 K.Kojima [QC#22386,MOD] -->
        <!-- UNION -->
        <!-- SELECT DISTINCT -->
        UNION ALL
        SELECT
        <!-- END 2018/03/20 K.Kojima [QC#22386,MOD] -->
            DCBS.SVC_PHYS_MTR_READ_GRP_SQ
        FROM
             SVC_CR_REBIL_DTL SCRD
            ,DS_CONTR_DTL DCD
            ,DS_CONTR_BLLG_SCHD DCBS
        WHERE
                SCRD.GLBL_CMPY_CD             = #glblCmpyCd#
            AND SCRD.SVC_CR_REBIL_PK          = #svcCrRebilPk#
            AND SCRD.EZCANCELFLAG             = '0'
            AND SCRD.GLBL_CMPY_CD             = DCD.GLBL_CMPY_CD
            AND SCRD.DS_CONTR_PK              = DCD.DS_CONTR_PK
            AND DCD.EZCANCELFLAG              = '0'
            AND DCD.GLBL_CMPY_CD              = DCBS.GLBL_CMPY_CD
            AND DCD.DS_CONTR_DTL_PK           = DCBS.DS_CONTR_DTL_PK
            AND DCBS.USG_CHRG_FLG             = 'Y'
            AND DCBS.SVC_PHYS_MTR_READ_GRP_SQ IS NOT NULL
            AND EXISTS(
                SELECT
                    1
                FROM
                    DS_CONTR_BLLG_SCHD DCBSP
                WHERE
                        DCBSP.GLBL_CMPY_CD          = DCBS.GLBL_CMPY_CD
                    AND DCBSP.DS_CONTR_BLLG_SCHD_PK = DCBS.PRNT_DS_CONTR_BLLG_SCHD_PK
                    AND DCBSP.DS_CONTR_PRC_EFF_PK   IS NOT NULL
                    AND DCBSP.EZCANCELFLAG          = '0'
            )
            AND DCBS.EZCANCELFLAG             = '0'
        <!-- START 2018/03/20 K.Kojima [QC#22386,ADD] -->
            )
        <!-- END 2018/03/20 K.Kojima [QC#22386,ADD] -->
    </statement>
    <!-- END 2017/12/19 K.Kojima [QC#22385,ADD] -->

    <!-- START 2018/03/15 K.Kojima [QC#22669,ADD] -->
    <statement id="countNoInvoiceCrRebilCount" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
            SVC_CR_REBIL_DTL SCRD
        WHERE
                SCRD.GLBL_CMPY_CD    = #glblCmpyCd#
            AND SCRD.SVC_CR_REBIL_PK = #svcCrRebilPk#
            AND SCRD.EZCANCELFLAG    = '0'
            AND (SCRD.CR_SVC_INV_NUM IS NULL OR SCRD.REBIL_SVC_INV_NUM IS NULL)
    </statement>
    <!-- END 2018/03/15 K.Kojima [QC#22669,ADD] -->

    <!-- START 2018/05/30 K.Kitachi [QC#22336, ADD] -->
    <statement id="getHrchList" parameterClass="Map" resultClass="Map">
        WITH CONTR_HRCH AS ( 
          SELECT
            G.GLBL_CMPY_CD
            , G.SVC_CONTR_BR_CD
            , G.PSN_CD AS PRINCIPAL_CD
            , J.PSN_CD AS BOSS_CD
            <!-- START 2019/01/17 W.Honda [QC#29889, MOD] -->
            <!-- , I.APVL_LIMIT_AMT -->
            , I.CR_REBIL_APVL_LIMIT_AMT
            <!-- END 2019/01/17 W.Honda [QC#29889, MOD] -->
            , 'N'      AS AUTO_APVL_FLG
            , ROW_NUMBER() OVER ( 
              PARTITION BY
                G.GLBL_CMPY_CD
                , G.SVC_CONTR_BR_CD
                , G.PSN_CD 
              ORDER BY
                <!-- START 2019/01/17 W.Honda [QC#29889, MOD] -->
                <!-- I.APVL_LIMIT_AMT -->
                I.CR_REBIL_APVL_LIMIT_AMT
                <!-- END 2019/01/17 W.Honda [QC#29889, MOD] -->
            ) AS ROW_ID 
          FROM
            SVC_BR_RESRC_RELN G
            INNER JOIN ORG_FUNC_ROLE_TP H
              ON H.GLBL_CMPY_CD         = G.GLBL_CMPY_CD 
              AND H.ORG_FUNC_ROLE_TP_CD = G.SVC_ORG_FUNC_ROLE_TP_CD 
              AND H.ACTV_FLG            = 'Y' 
              AND H.FIRST_ORG_CD        = #condStr4#
              AND H.EZCANCELFLAG        = '0' 
            INNER JOIN ORG_FUNC_ROLE_TP I
              ON I.GLBL_CMPY_CD     = H.GLBL_CMPY_CD 
              <!-- START 2019/01/17 W.Honda [QC#29889, MOD] -->
              <!-- AND I.APVL_LIMIT_AMT  &gt;= H.APVL_LIMIT_AMT  -->
              AND I.CR_REBIL_APVL_LIMIT_AMT  &gt;= H.CR_REBIL_APVL_LIMIT_AMT 
              <!-- END 2019/01/17 W.Honda [QC#29889, MOD] -->
              AND I.ACTV_FLG        = 'Y' 
              AND I.FIRST_ORG_CD    = #condStr4#
              AND I.EZCANCELFLAG    = '0' 
            INNER JOIN SVC_BR_RESRC_RELN J
              ON J.GLBL_CMPY_CD             = I.GLBL_CMPY_CD 
              AND J.SVC_ORG_FUNC_ROLE_TP_CD = I.ORG_FUNC_ROLE_TP_CD 
              AND J.SVC_BR_RESRC_ACTV_FLG   = 'Y' 
              AND J.EZCANCELFLAG            = '0' 
              AND J.SVC_CONTR_BR_CD         = G.SVC_CONTR_BR_CD 
              AND ( 
                G.PSN_CD            = J.PSN_CD 
                <!-- START 2019/01/17 W.Honda [QC#29889, MOD] -->
                <!-- OR H.APVL_LIMIT_AMT &lt;&gt; I.APVL_LIMIT_AMT -->
                OR H.CR_REBIL_APVL_LIMIT_AMT &lt;&gt; I.CR_REBIL_APVL_LIMIT_AMT
                <!-- END 2019/01/17 W.Honda [QC#29889, MOD] -->
              )
          WHERE
            G.SVC_BR_RESRC_ACTV_FLG = 'Y' 
            AND G.EZCANCELFLAG = '0' 
          ORDER BY
            G.SVC_CONTR_BR_CD
            , G.PSN_CD
            <!-- START 2019/01/17 W.Honda [QC#29889, MOD] -->
            <!-- , I.APVL_LIMIT_AMT -->
            , I.CR_REBIL_APVL_LIMIT_AMT
            <!-- END 2019/01/17 W.Honda [QC#29889, MOD] -->
        ) 
        SELECT
          A.SVC_RG_PK as COND_NUM_1
          , C.SVC_CONTR_BR_CD as COND_STR_1
          , D.PSN_CD as COND_STR_2
          <!-- START 2019/01/17 W.Honda [QC#29889, MOD] -->
          <!-- , F.APVL_LIMIT_AMT as COND_NUM_2 -->
          , F.CR_REBIL_APVL_LIMIT_AMT as COND_NUM_2
          <!-- END 2019/01/17 W.Honda [QC#29889, MOD] -->
          , K.PSN_NUM as VAL_STR_1
        FROM
          SVC_RG A 
          INNER JOIN SVC_RG_BR_RELN B 
            ON B.GLBL_CMPY_CD   = A.GLBL_CMPY_CD 
            AND B.SVC_RG_PK     = A.SVC_RG_PK 
            AND B.EZCANCELFLAG  = '0' 
          INNER JOIN SVC_CONTR_BR C 
            ON C.GLBL_CMPY_CD           = B.GLBL_CMPY_CD 
            AND C.SVC_CONTR_BR_CD       = B.SVC_CONTR_BR_CD 
            AND C.SVC_CONTR_BR_ACTV_FLG = 'Y' 
            AND C.EZCANCELFLAG          = '0' 
          INNER JOIN SVC_BR_RESRC_RELN D 
            ON D.GLBL_CMPY_CD           = C.GLBL_CMPY_CD 
            AND D.SVC_CONTR_BR_CD       = C.SVC_CONTR_BR_CD 
            AND D.SVC_BR_RESRC_ACTV_FLG = 'Y' 
            AND D.EZCANCELFLAG          = '0' 
          INNER JOIN CONTR_HRCH F 
            ON F.GLBL_CMPY_CD       = D.GLBL_CMPY_CD 
            AND F.SVC_CONTR_BR_CD   = D.SVC_CONTR_BR_CD 
            AND F.PRINCIPAL_CD      = D.PSN_CD 
          INNER JOIN S21_PSN K 
            ON K.GLBL_CMPY_CD   = F.GLBL_CMPY_CD 
            AND K.PSN_CD        = F.BOSS_CD 
            AND K.EZCANCELFLAG  = '0' 
        WHERE
          A.SVC_RG_PK           = #condNum1#
          AND C.SVC_CONTR_BR_CD = #condStr1#
          AND D.PSN_CD          = #condStr2#
          AND A.SVC_RG_ACTV_FLG = 'Y' 
          AND A.GLBL_CMPY_CD    = #glblCmpyCd#
          AND A.EZCANCELFLAG    = '0'  
        ORDER BY
          A.SVC_RG_PK
          , B.SVC_CONTR_BR_CD
          , D.PSN_CD
          <!-- START 2019/01/17 W.Honda [QC#29889, MOD] -->
          <!-- , F.APVL_LIMIT_AMT -->
          , F.CR_REBIL_APVL_LIMIT_AMT
          <!-- END 2019/01/17 W.Honda [QC#29889, MOD] -->
    </statement>
    <!-- END 2018/05/30 K.Kitachi [QC#22336, ADD] -->
    <!-- START 2018/06/05 K.Kojima [QC#21974,ADD] -->
    <statement id="countFreeCopyRollOverUsed" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
             DS_CONTR_BLLG_SCHD     DCBS
            ,DS_CONTR_BLLG_MTR_USED DCBMU
        WHERE
                DCBS.GLBL_CMPY_CD          = #glblCmpyCd#
            <iterate property="svcInvNumList" var="svcInvNumList[]" open="AND DCBS.SVC_INV_NUM IN (" conjunction= ", " close=")">
            #svcInvNumList[]#
            </iterate>
            AND DCBS.EZCANCELFLAG          = '0'
            AND DCBS.GLBL_CMPY_CD          = DCBMU.GLBL_CMPY_CD
            AND DCBS.DS_CONTR_BLLG_SCHD_PK = DCBMU.DS_CONTR_BLLG_SCHD_PK
            AND DCBMU.EZCANCELFLAG         = '0'
    </statement>
    <!-- END 2018/06/05 K.Kojima [QC#21974,ADD] -->
    <!-- START 2018/06/25 K.Kitachi [QC#22245, ADD] -->
    <statement id="getUnapprovedUsgChrgForDtl" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.SVC_CONTR_BLLG_PK
        FROM
            SVC_CONTR_BLLG A
        WHERE
                A.EZCANCELFLAG       = '0'
            AND A.GLBL_CMPY_CD       = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK    = #dsContrDtlPk#
            AND A.BLLG_CPLT_STS_CD   = #bllgCpltStsCd#
            AND A.BLLG_APVL_REQ_FLG  = 'Y'
            AND A.BLLG_APVL_CPLT_FLG = 'N'
            AND A.USG_CHRG_FLG       = 'Y'
    </statement>
    <statement id="getUnapprovedUsgChrg" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.SVC_CONTR_BLLG_PK
        FROM
            SVC_CONTR_BLLG A
        WHERE
                A.EZCANCELFLAG       = '0'
            AND A.GLBL_CMPY_CD       = #glblCmpyCd#
            AND A.DS_CONTR_PK        = #dsContrPk#
            AND A.BLLG_CPLT_STS_CD   = #bllgCpltStsCd#
            AND A.BLLG_APVL_REQ_FLG  = 'Y'
            AND A.BLLG_APVL_CPLT_FLG = 'N'
            AND A.USG_CHRG_FLG       = 'Y'
    </statement>
    <statement id="getUnapprovedCrRebilForBase" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.SVC_CR_REBIL_PK
        FROM
             SVC_CR_REBIL             A
            ,SVC_CR_REBIL_DTL         B
            ,SVC_CR_REBIL_BASE_BLLG   C
        WHERE
                A.GLBL_CMPY_CD        = #glblCmpyCd#
            AND A.SVC_CR_REBIL_PK     &lt;&gt; #svcCrRebilPk#
            <iterate property="svcCrRebilStsCdList" var="svcCrRebilStsCd[]" open="AND A.SVC_CR_REBIL_STS_CD NOT IN (" conjunction= ", " close=")">
            #svcCrRebilStsCd[]#
            </iterate>
            AND A.EZCANCELFLAG        = '0'
            AND A.GLBL_CMPY_CD        = B.GLBL_CMPY_CD
            AND A.SVC_CR_REBIL_PK     = B.SVC_CR_REBIL_PK
            AND B.EZCANCELFLAG        = '0'
            AND B.GLBL_CMPY_CD        = C.GLBL_CMPY_CD
            AND B.SVC_CR_REBIL_DTL_PK = C.SVC_CR_REBIL_DTL_PK
            AND C.DS_CONTR_DTL_PK     = #dsContrDtlPk#
            AND C.EZCANCELFLAG        = '0'
        GROUP BY
            A.SVC_CR_REBIL_PK
        ORDER BY
            A.SVC_CR_REBIL_PK
    </statement>
    <statement id="getUnapprovedCrRebilForMtr" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.SVC_CR_REBIL_PK
        FROM
             SVC_CR_REBIL             A
            ,SVC_CR_REBIL_DTL         B
            ,SVC_CR_REBIL_MTR_BLLG    C
        WHERE
                A.GLBL_CMPY_CD        = #glblCmpyCd#
            AND A.SVC_CR_REBIL_PK     &lt;&gt; #svcCrRebilPk#
            <iterate property="svcCrRebilStsCdList" var="svcCrRebilStsCd[]" open="AND A.SVC_CR_REBIL_STS_CD NOT IN (" conjunction= ", " close=")">
            #svcCrRebilStsCd[]#
            </iterate>
            AND A.EZCANCELFLAG        = '0'
            AND A.GLBL_CMPY_CD        = B.GLBL_CMPY_CD
            AND A.SVC_CR_REBIL_PK     = B.SVC_CR_REBIL_PK
            AND B.EZCANCELFLAG        = '0'
            AND B.GLBL_CMPY_CD        = C.GLBL_CMPY_CD
            AND B.SVC_CR_REBIL_DTL_PK = C.SVC_CR_REBIL_DTL_PK
            AND C.DS_CONTR_DTL_PK     = #dsContrDtlPk#
            AND C.EZCANCELFLAG        = '0'
        GROUP BY
            A.SVC_CR_REBIL_PK
        ORDER BY
            A.SVC_CR_REBIL_PK
    </statement>
    <statement id="getUnapprovedCrRebil" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.SVC_CR_REBIL_PK
        FROM
             SVC_CR_REBIL             A
            ,SVC_CR_REBIL_DTL         B
        WHERE
                A.GLBL_CMPY_CD        = #glblCmpyCd#
            AND A.SVC_CR_REBIL_PK     &lt;&gt; #svcCrRebilPk#
            <iterate property="svcCrRebilStsCdList" var="svcCrRebilStsCd[]" open="AND A.SVC_CR_REBIL_STS_CD NOT IN (" conjunction= ", " close=")">
            #svcCrRebilStsCd[]#
            </iterate>
            AND A.EZCANCELFLAG        = '0'
            AND A.GLBL_CMPY_CD        = B.GLBL_CMPY_CD
            AND A.SVC_CR_REBIL_PK     = B.SVC_CR_REBIL_PK
            AND B.DS_CONTR_PK         = #dsContrPk#
            AND B.EZCANCELFLAG        = '0'
        GROUP BY
            A.SVC_CR_REBIL_PK
        ORDER BY
            A.SVC_CR_REBIL_PK
    </statement>
    <!-- END 2018/06/25 K.Kitachi [QC#22245, ADD] -->
    <!-- START 2018/07/18 K.Kojiima [QC#26791, ADD] -->
    <statement id="getAdjustTargetMachine" parameterClass="Map" resultClass="Map">
        SELECT DISTINCT
             SCRD.ORIG_SVC_INV_NUM
            ,SPM.SVC_MACH_MSTR_PK
        FROM
             SVC_CR_REBIL          SCR
            ,SVC_CR_REBIL_DTL      SCRD
            ,SVC_CR_REBIL_MTR_READ SCRMR
            ,SVC_PHYS_MTR          SPM
        WHERE
                SCR.GLBL_CMPY_CD         = #glblCmpyCd#
            AND SCR.SVC_CR_REBIL_PK      = #svcCrRebilPk#
            AND SCR.EZCANCELFLAG         = '0'
            AND SCR.GLBL_CMPY_CD         = SCRD.GLBL_CMPY_CD
            AND SCR.SVC_CR_REBIL_PK      = SCRD.SVC_CR_REBIL_PK
            AND SCRD.ORIG_SVC_INV_NUM    = #origSvcInvNum#
            AND SCRD.EZCANCELFLAG        = '0'
            AND SCRD.GLBL_CMPY_CD        = SCRMR.GLBL_CMPY_CD
            AND SCRD.SVC_CR_REBIL_DTL_PK = SCRMR.SVC_CR_REBIL_DTL_PK
            AND SCRMR.EZCANCELFLAG       = '0'
            AND SCRMR.GLBL_CMPY_CD       = SPM.GLBL_CMPY_CD
            AND SCRMR.SVC_PHYS_MTR_PK    = SPM.SVC_PHYS_MTR_PK
            AND SPM.EZCANCELFLAG         = '0'
        ORDER BY 
             SCRD.ORIG_SVC_INV_NUM
            ,SPM.SVC_MACH_MSTR_PK
    </statement>
    <statement id="getAdjustTargetMtrRead" parameterClass="Map" resultClass="Map">
        SELECT
             SCRMR.SVC_CR_REBIL_MTR_READ_PK
            ,SCRMR.PHYS_MTR_LB_CD
            ,SCRMR.OLD_START_READ_MTR_CNT
            ,SCRMR.OLD_END_READ_MTR_CNT
            ,SCRMR.OLD_TEST_MTR_CNT
            ,SCRMR.NEW_START_READ_MTR_CNT
            ,SCRMR.NEW_END_READ_MTR_CNT
            ,SCRMR.NEW_TEST_MTR_CNT
        FROM
             SVC_CR_REBIL          SCR
            ,SVC_CR_REBIL_DTL      SCRD
            ,SVC_CR_REBIL_MTR_READ SCRMR
            ,SVC_PHYS_MTR          SPM
        WHERE
                SCR.GLBL_CMPY_CD         = #glblCmpyCd#
            AND SCR.SVC_CR_REBIL_PK      = #svcCrRebilPk#
            AND SCR.EZCANCELFLAG         = '0'
            AND SCR.GLBL_CMPY_CD         = SCRD.GLBL_CMPY_CD
            AND SCR.SVC_CR_REBIL_PK      = SCRD.SVC_CR_REBIL_PK
            AND SCRD.ORIG_SVC_INV_NUM    = #origSvcInvNum#
            AND SCRD.EZCANCELFLAG        = '0'
            AND SCRD.GLBL_CMPY_CD        = SCRMR.GLBL_CMPY_CD
            AND SCRD.SVC_CR_REBIL_DTL_PK = SCRMR.SVC_CR_REBIL_DTL_PK
            AND SCRMR.EZCANCELFLAG       = '0'
            AND SCRMR.GLBL_CMPY_CD       = SPM.GLBL_CMPY_CD
            AND SCRMR.SVC_PHYS_MTR_PK    = SPM.SVC_PHYS_MTR_PK
            AND SPM.SVC_MACH_MSTR_PK     = #svcMachMstrPk#
            AND SPM.EZCANCELFLAG         = '0'
        ORDER BY 
             SCRD.ORIG_SVC_INV_NUM
            ,SPM.SVC_MACH_MSTR_PK
    </statement>
    <statement id="getMtrFmlaInfo" parameterClass="Map" resultClass="Map">
        SELECT
             MF.MTR_LB_CD
            ,MF.MTR_FMLA_TP_CD_01
            ,MF.FMLA_MTR_LB_CD_01
            ,MF.MTR_FMLA_TP_CD_02
            ,MF.FMLA_MTR_LB_CD_02
            ,MF.MTR_FMLA_TP_CD_03
            ,MF.FMLA_MTR_LB_CD_03
            ,MF.MTR_FMLA_TP_CD_04
            ,MF.FMLA_MTR_LB_CD_04
            ,MF.MTR_FMLA_TP_CD_05
            ,MF.FMLA_MTR_LB_CD_05
            ,MF.MTR_FMLA_TP_CD_06
            ,MF.FMLA_MTR_LB_CD_06
            ,MF.MTR_FMLA_TP_CD_07
            ,MF.FMLA_MTR_LB_CD_07
            ,MF.MTR_FMLA_TP_CD_08
            ,MF.FMLA_MTR_LB_CD_08
            ,MF.MTR_FMLA_TP_CD_09
            ,MF.FMLA_MTR_LB_CD_09
            ,MF.MTR_FMLA_TP_CD_10
            ,MF.FMLA_MTR_LB_CD_10
            ,SPM.DS_MDL_MTR_PK
            ,SPM.SVC_PHYS_MTR_PK
        FROM
             MTR_FMLA   MF
            ,SVC_PHYS_MTR SPM
        WHERE
                MF.GLBL_CMPY_CD      = #glblCmpyCd#
            AND MF.EZCANCELFLAG      = '0'
            AND MF.GLBL_CMPY_CD      = SPM.GLBL_CMPY_CD
            AND MF.MTR_GRP_PK        = SPM.MTR_GRP_PK
            AND MF.MTR_LB_CD         = SPM.MDL_MTR_LB_CD
            AND SPM.SVC_MACH_MSTR_PK = #svcMachMstrPk#
            AND SPM.EZCANCELFLAG     = '0'
    </statement>
    <statement id="countNegativeRead" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
             SVC_CR_REBIL_DTL      SCRD
            ,SVC_CR_REBIL_MTR_READ SCRMR
        WHERE
                SCRD.GLBL_CMPY_CD        = #glblCmpyCd#
            AND SCRD.SVC_CR_REBIL_PK     = #svcCrRebilPk#
            AND SCRD.EZCANCELFLAG        = '0'
            AND SCRD.GLBL_CMPY_CD        = SCRMR.GLBL_CMPY_CD
            AND SCRD.SVC_CR_REBIL_DTL_PK = SCRMR.SVC_CR_REBIL_DTL_PK
            AND (
                    (SCRMR.NEW_START_READ_MTR_CNT IS NOT NULL AND SCRMR.NEW_START_READ_MTR_CNT &lt; 0) OR
                    (SCRMR.NEW_END_READ_MTR_CNT   IS NOT NULL AND SCRMR.NEW_END_READ_MTR_CNT   &lt; 0) OR
                    (SCRMR.NEW_TEST_MTR_CNT       IS NOT NULL AND SCRMR.NEW_TEST_MTR_CNT       &lt; 0)
                )
            AND SCRMR.EZCANCELFLAG       = '0'
    </statement>
    <!-- END 2018/07/18 K.Kojiima [QC#26791, ADD] -->
    <!-- START 2018/08/27 [QC#24555, ADD] -->
    <statement id="getDsContrBllgSchdInfo" parameterClass="Map" resultClass="Map">
        SELECT
             B.BLLG_CYCLE_CD
            ,TO_DATE(BLLG_SCHD_THRU_DT, 'YYYYMMDD') - TO_DATE(BLLG_SCHD_FROM_DT, 'YYYYMMDD') + 1 AS PER_SCHD_NUM
            ,B.BLLG_SCHD_PRRT_FLG
            ,C.AFT_DECL_PNT_DIGIT_NUM  AS DIGIT_NUM
        FROM
            SVC_INV_LINE        A
           ,DS_CONTR_BLLG_SCHD  B
           ,CCY                 C
        WHERE
                A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.EZCANCELFLAG          = '0'
            AND A.SVC_INV_LINE_PK       = #svcInvLinePk#
            AND A.GLBL_CMPY_CD          = B.GLBL_CMPY_CD
            AND A.DS_CONTR_BLLG_SCHD_PK = B.DS_CONTR_BLLG_SCHD_PK
            AND B.EZCANCELFLAG          = '0'
            AND B.GLBL_CMPY_CD          = C.GLBL_CMPY_CD
            AND B.CCY_CD                = C.CCY_CD
            AND C.EZCANCELFLAG          = '0'
    </statement>
    <statement id="getInvSchdMaxThruDt" parameterClass="Map" resultClass="String">
        SELECT
            MAX(A.BLLG_SCHD_THRU_DT) AS BLLG_SCHD_THRU_DT
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.EZCANCELFLAG       = '0'
            AND A.GLBL_CMPY_CD       = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK    = #dsContrDtlPk#
        <isNotNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
        </isNotNull>
            AND A.DS_BLLG_SCHD_STS_CD = #stsClose#
            AND A.BASE_CHRG_FLG       = #baseChrgFlg#
            AND A.USG_CHRG_FLG        = #usgChrgFlg#
            AND A.DS_BLLG_SCHD_TP_CD  = #dsBllgSchdTpCd#
            AND A.INV_TP_CD           = #invTpCd#
    </statement>

    <statement id="getAdjustTopSchd" parameterClass="Map" resultClass="Map">
        SELECT
             DCBSS.DS_CONTR_BLLG_SCHD_SMRY_PK
            ,COUNT(*)                                                                                        AS PER_SCHD_NUM
            ,TO_DATE(DCBSS.BLLG_SCHD_THRU_DT, 'YYYYMMDD') - TO_DATE(DCBSS.BLLG_SCHD_FROM_DT, 'YYYYMMDD') + 1 AS PER_SCHD_NUM_D
            ,SUM(DCBS.BASE_ACTL_PRC_DEAL_AMT)                                                                AS BASE_SUB_TOT_PRC_DEAL_AMT
            ,SUM(DCBS.BASE_PRC_ADJ_DEAL_AMT)                                                                 AS BASE_PRC_DEAL_ADJ_AMT
        FROM
             DS_CONTR_BLLG_SCHD DCBS
            ,DS_CONTR_BLLG_SCHD_SMRY DCBSS
        WHERE
                DCBS.GLBL_CMPY_CD               = #glblCmpyCd#
            AND DCBS.DS_CONTR_DTL_PK            = #dsContrDtlPk#
            AND DCBS.DS_CONTR_PRC_EFF_PK        IS NOT NULL
            AND DCBS.BASE_CHRG_FLG              = #baseChrgFlg#
            AND DCBS.USG_CHRG_FLG               = #usgChrgFlg#
            AND DCBS.EZCANCELFLAG               = '0'
            AND DCBS.GLBL_CMPY_CD               = DCBSS.GLBL_CMPY_CD
            AND DCBS.DS_CONTR_BLLG_SCHD_SMRY_PK = DCBSS.DS_CONTR_BLLG_SCHD_SMRY_PK
            <isEqual property="usgChrgFlg" compareValue="Y">
            AND DCBS.DS_CONTR_BLLG_MTR_PK       = DCBSS.DS_CONTR_BLLG_MTR_PK
            </isEqual>
            AND DCBSS.BLLG_SCHD_FROM_DT     &gt;= #effFromDt#
            AND DCBSS.EZCANCELFLAG              = '0'
        GROUP BY
             DCBSS.DS_CONTR_BLLG_SCHD_SMRY_PK
            ,DCBSS.BLLG_SCHD_FROM_DT
            ,DCBSS.BLLG_SCHD_THRU_DT
    </statement>
    <!-- END   2018/08/27 [QC#24555, ADD] -->

    <!-- START 2018/08/31 K.Kojima [QC#27960,ADD] -->
    <statement id="getReplacePrcEffPkSkipMonth" parameterClass="Map" resultClass="Map">
        SELECT
             DCBS.DS_CONTR_BLLG_SCHD_PK
            ,DCPE.DS_CONTR_PRC_EFF_PK
            ,DCPE.DS_CONTR_PRC_EFF_SQ_NUM
            ,DCBSS.DS_CONTR_BLLG_SCHD_SMRY_PK
            ,DCBSS.DS_CONTR_BLLG_SCHD_SQ_NUM
        FROM
             DS_CONTR_BLLG_SCHD DCBS
            ,DS_CONTR_PRC_EFF   DCPE
            ,DS_CONTR_BLLG_SCHD_SMRY DCBSS
        WHERE
                DCBS.GLBL_CMPY_CD               = #glblCmpyCd#
            AND DCBS.DS_CONTR_DTL_PK            = #dsContrDtlPk#
            AND DCBS.DS_CONTR_PRC_EFF_PK        IS NOT NULL
            AND DCBS.BASE_CHRG_FLG              = #baseChrgFlg#
            AND DCBS.USG_CHRG_FLG               = #usgChrgFlg#
            AND DCBS.EZCANCELFLAG               = '0'
            AND DCBS.GLBL_CMPY_CD               = DCPE.GLBL_CMPY_CD
            AND DCBS.DS_CONTR_DTL_PK            = DCPE.DS_CONTR_DTL_PK
            <isEqual property="usgChrgFlg" compareValue="Y">
            AND DCBS.DS_CONTR_BLLG_MTR_PK       = DCPE.DS_CONTR_BLLG_MTR_PK
            </isEqual>
            AND DCBS.BLLG_SCHD_FROM_DT      &gt;= DCPE.CONTR_PRC_EFF_FROM_DT
            AND DCBS.BLLG_SCHD_THRU_DT      &lt;= DCPE.CONTR_PRC_EFF_THRU_DT
            AND DCBS.DS_CONTR_PRC_EFF_PK &lt;&gt; DCPE.DS_CONTR_PRC_EFF_PK
            AND DCPE.BASE_CHRG_FLG              = #baseChrgFlg#
            AND DCPE.USG_CHRG_FLG               = #usgChrgFlg#
            AND DCPE.EZCANCELFLAG               = '0'
            AND DCPE.GLBL_CMPY_CD               = DCBSS.GLBL_CMPY_CD
            AND DCPE.DS_CONTR_PRC_EFF_PK        = DCBSS.DS_CONTR_PRC_EFF_PK
            AND DCBS.BLLG_SCHD_FROM_DT      &gt;= DCBSS.BLLG_SCHD_FROM_DT
            AND DCBS.BLLG_SCHD_THRU_DT      &lt;= DCBSS.BLLG_SCHD_THRU_DT
            AND DCBSS.BASE_CHRG_FLG             = #baseChrgFlg#
            AND DCBSS.USG_CHRG_FLG              = #usgChrgFlg#
            AND DCBSS.EZCANCELFLAG              = '0'
    </statement>
    <statement id="getReplaceDsContrBllgSchdSqNumTarget" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            DCBS.DS_CONTR_BLLG_SCHD_PK
        FROM
            DS_CONTR_BLLG_SCHD DCBS
        WHERE
                DCBS.GLBL_CMPY_CD               = #glblCmpyCd#
            AND DCBS.DS_CONTR_BLLG_SCHD_SMRY_PK = #dsContrBllgSchdSmryPk#
            AND DCBS.EZCANCELFLAG               = '0'
        ORDER BY
            DCBS.BLLG_SCHD_FROM_DT
    </statement>
    <!-- END 2018/08/31 K.Kojima [QC#27960,ADD] -->
    <!-- START 2018/09/05 [QC#24555,ADD] -->
    <statement id="getDsContrDtlPkFromBaseRebil" parameterClass="Map" resultClass="BigDecimal">
        SELECT DISTINCT
             B.DS_CONTR_DTL_PK
        FROM
             SVC_CR_REBIL_DTL       A
            ,SVC_CR_REBIL_BASE_BLLG B
        WHERE
                A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.SVC_CR_REBIL_PK       = #svcCrRebilPk#
            AND A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = B.GLBL_CMPY_CD
            AND A.SVC_CR_REBIL_DTL_PK   = B.SVC_CR_REBIL_DTL_PK
            AND B.EZCANCELFLAG          = '0'
        ORDER BY
            B.DS_CONTR_DTL_PK
    </statement>
    <statement id="getRoundAdjustBaseForCiEntry" parameterClass="Map" resultClass="Map">
        SELECT
             B.SVC_CR_REBIL_BASE_BLLG_PK
            ,B.OLD_BASE_DEAL_AMT
            ,B.NEW_BASE_DEAL_AMT
            ,B.NEW_BASE_UNIT_AMT
            ,NVL(B.NEW_BASE_DEAL_AMT, B.OLD_BASE_DEAL_AMT) AS BASE_DEAL_AMT
            ,D.BLLG_SCHD_FROM_DT
            ,D.BLLG_SCHD_THRU_DT
            ,TO_DATE(D.BLLG_SCHD_THRU_DT, 'YYYYMMDD') - TO_DATE(D.BLLG_SCHD_FROM_DT, 'YYYYMMDD') + 1 AS PER_SCHD_NUM
            ,D.BLLG_CYCLE_CD
            ,B.DS_CONTR_DTL_PK
            ,E.BLLG_CYCLE_MTH_AOT
        FROM
             SVC_CR_REBIL_DTL       A
            ,SVC_CR_REBIL_BASE_BLLG B
            ,SVC_INV_LINE           C
            ,DS_CONTR_BLLG_SCHD     D
            ,BLLG_CYCLE             E
        WHERE
                A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.SVC_CR_REBIL_PK       = #svcCrRebilPk#
            AND A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = B.GLBL_CMPY_CD
            AND A.SVC_CR_REBIL_DTL_PK   = B.SVC_CR_REBIL_DTL_PK
            AND B.EZCANCELFLAG          = '0'
            AND B.DS_CONTR_DTL_PK       = #dsContrDtlPk#
            AND B.GLBL_CMPY_CD          = C.GLBL_CMPY_CD
            AND B.SVC_INV_LINE_PK       = C.SVC_INV_LINE_PK
            AND C.EZCANCELFLAG          = '0'
            AND C.GLBL_CMPY_CD          = D.GLBL_CMPY_CD
            AND C.DS_CONTR_BLLG_SCHD_PK = D.DS_CONTR_BLLG_SCHD_PK
            AND D.EZCANCELFLAG          = '0'
            AND D.BASE_CHRG_FLG         = 'Y'
            AND D.BLLG_SCHD_PRRT_FLG    = 'Y'
            AND D.GLBL_CMPY_CD          = E.GLBL_CMPY_CD
            AND D.BLLG_CYCLE_CD         = E.BLLG_CYCLE_CD
            AND E.EZCANCELFLAG          = '0'
        ORDER BY D.BLLG_SCHD_FROM_DT
    </statement>
    <statement id="getDsContrBllgMtrPkFromRebilMtr" parameterClass="Map" resultClass="BigDecimal">
        SELECT DISTINCT
             B.DS_CONTR_BLLG_MTR_PK
        FROM
             SVC_CR_REBIL_DTL       A
            ,SVC_CR_REBIL_MTR_BLLG  B
        WHERE
                A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.SVC_CR_REBIL_PK       = #svcCrRebilPk#
            AND A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = B.GLBL_CMPY_CD
            AND A.SVC_CR_REBIL_DTL_PK   = B.SVC_CR_REBIL_DTL_PK
            <isNotNull property="dsContrDtlPk">
            AND B.DS_CONTR_DTL_PK       = #dsContrDtlPk#
            </isNotNull>
            AND B.EZCANCELFLAG          = '0'
        ORDER BY
            B.DS_CONTR_BLLG_MTR_PK
    </statement>
    <statement id="getRoundAdjustMtrBllgForCiEntry" parameterClass="Map" resultClass="Map">
        SELECT
             B.SVC_CR_REBIL_MTR_BLLG_PK
            ,D.BLLG_SCHD_FROM_DT
            ,D.BLLG_SCHD_THRU_DT
            ,TO_DATE(D.BLLG_SCHD_THRU_DT, 'YYYYMMDD') - TO_DATE(D.BLLG_SCHD_FROM_DT, 'YYYYMMDD') + 1 AS PER_SCHD_NUM
            ,D.BLLG_CYCLE_CD
            ,B.DS_CONTR_DTL_PK
            ,E.BLLG_CYCLE_MTH_AOT
        FROM
             SVC_CR_REBIL_DTL       A
            ,SVC_CR_REBIL_MTR_BLLG  B
            ,SVC_INV_LINE           C
            ,DS_CONTR_BLLG_SCHD     D
            ,BLLG_CYCLE             E
        WHERE
                A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.SVC_CR_REBIL_PK       = #svcCrRebilPk#
            AND A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = B.GLBL_CMPY_CD
            AND A.SVC_CR_REBIL_DTL_PK   = B.SVC_CR_REBIL_DTL_PK
            AND B.EZCANCELFLAG          = '0'
            AND B.DS_CONTR_BLLG_MTR_PK  = #dsContrBllgMtrPk#
            AND B.GLBL_CMPY_CD          = C.GLBL_CMPY_CD
            AND B.SVC_INV_LINE_PK       = C.SVC_INV_LINE_PK
            AND C.EZCANCELFLAG          = '0'
            AND C.GLBL_CMPY_CD          = D.GLBL_CMPY_CD
            AND C.DS_CONTR_BLLG_SCHD_PK = D.DS_CONTR_BLLG_SCHD_PK
            AND D.EZCANCELFLAG          = '0'
            AND D.USG_CHRG_FLG          = 'Y'
            AND D.BLLG_SCHD_PRRT_FLG    = 'Y'
            AND D.GLBL_CMPY_CD          = E.GLBL_CMPY_CD
            AND D.BLLG_CYCLE_CD         = E.BLLG_CYCLE_CD
            AND E.EZCANCELFLAG          = '0'
        ORDER BY D.BLLG_SCHD_FROM_DT
    </statement>
    <statement id="getRoundAdjustXsMtrForCiEntry" parameterClass="Map" resultClass="Map">
        SELECT
             A.SVC_CR_REBIL_XS_MTR_BLLG_PK
            ,A.NEW_UNIT_XS_COPY_QTY                             AS UNIT_XS_COPY
            ,NVL(A.NEW_XS_MTR_AMT_RATE, A.OLD_XS_MTR_AMT_RATE)  AS CHRG_AMT
            ,NVL(A.NEW_XS_COPY_QTY, A.OLD_XS_COPY_QTY)          AS XS_COPY_QTY
        FROM
             SVC_CR_REBIL_XS_MTR_BLLG   A
        WHERE
                A.GLBL_CMPY_CD              = #glblCmpyCd#
            AND A.EZCANCELFLAG              = '0'
            AND A.SVC_CR_REBIL_MTR_BLLG_PK  = #svcCrRebilMtrBllgPk#
        ORDER BY NVL(A.NEW_XS_COPY_QTY, A.OLD_XS_COPY_QTY)
    </statement>
    <statement id="getRoundAdjustBaseForApproval" parameterClass="Map" resultClass="Map">
        SELECT
             B.SVC_CR_REBIL_BASE_BLLG_PK
            ,B.OLD_BASE_DEAL_AMT
            ,B.NEW_BASE_DEAL_AMT
            ,B.NEW_BASE_UNIT_AMT
            ,NVL(B.NEW_BASE_DEAL_AMT, B.OLD_BASE_DEAL_AMT) AS BASE_DEAL_AMT
            ,NVL(B.NEW_BASE_UNIT_AMT, B.OLD_BASE_UNIT_AMT) AS BASE_UNIT_AMT
            ,D.BLLG_SCHD_FROM_DT
            ,D.BLLG_SCHD_THRU_DT
            ,TO_DATE(D.BLLG_SCHD_THRU_DT, 'YYYYMMDD') - TO_DATE(D.BLLG_SCHD_FROM_DT, 'YYYYMMDD') + 1 AS PER_SCHD_NUM
            ,D.BLLG_CYCLE_CD
            ,D.BLLG_SCHD_PRRT_FLG
            ,B.DS_CONTR_DTL_PK
            ,E.BLLG_CYCLE_MTH_AOT
            ,F.AFT_DECL_PNT_DIGIT_NUM
        FROM
             SVC_CR_REBIL_DTL       A
            ,SVC_CR_REBIL_BASE_BLLG B
            ,SVC_INV_LINE           C
            ,DS_CONTR_BLLG_SCHD     D
            ,BLLG_CYCLE             E
            ,CCY                    F
        WHERE
                A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.SVC_CR_REBIL_PK       = #svcCrRebilPk#
            AND A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = B.GLBL_CMPY_CD
            AND A.SVC_CR_REBIL_DTL_PK   = B.SVC_CR_REBIL_DTL_PK
            AND B.EZCANCELFLAG          = '0'
            AND B.DS_CONTR_DTL_PK       = #dsContrDtlPk#
            AND B.GLBL_CMPY_CD          = C.GLBL_CMPY_CD
            AND B.SVC_INV_LINE_PK       = C.SVC_INV_LINE_PK
            AND C.EZCANCELFLAG          = '0'
            AND C.GLBL_CMPY_CD          = D.GLBL_CMPY_CD
            AND C.DS_CONTR_BLLG_SCHD_PK = D.DS_CONTR_BLLG_SCHD_PK
            AND D.EZCANCELFLAG          = '0'
            AND D.BASE_CHRG_FLG         = 'Y'
            AND D.GLBL_CMPY_CD          = E.GLBL_CMPY_CD
            AND D.BLLG_CYCLE_CD         = E.BLLG_CYCLE_CD
            AND E.EZCANCELFLAG          = '0'
            AND D.GLBL_CMPY_CD          = F.GLBL_CMPY_CD
            AND D.CCY_CD                = F.CCY_CD
            AND D.EZCANCELFLAG          = '0'
        ORDER BY D.BLLG_SCHD_FROM_DT
    </statement>
    <statement id="getTargetStubBase" parameterClass="Map" resultClass="Map">
        SELECT
             A.BASE_PRC_DEAL_AMT    UNIT_AMT
            ,B.DS_CONTR_BLLG_SCHD_PK
            ,B.BLLG_SCHD_FROM_DT
            ,B.BLLG_SCHD_THRU_DT
            ,TO_DATE(B.BLLG_SCHD_THRU_DT, 'YYYYMMDD') - TO_DATE(B.BLLG_SCHD_FROM_DT, 'YYYYMMDD') + 1 AS PER_SCHD_NUM
            ,B.BLLG_CYCLE_CD
            ,B.BASE_ACTL_PRC_DEAL_AMT    BASE_AMT
            ,B.DS_CONTR_PRC_EFF_PK
            ,B.DS_CONTR_BLLG_SCHD_SMRY_PK
        FROM
             DS_CONTR_PRC_EFF     A
            ,DS_CONTR_BLLG_SCHD   B
        WHERE
                A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK       = #dsContrDtlPk#
            AND A.EZCANCELFLAG          = '0'
            AND A.BASE_CHRG_FLG         = 'Y'
            AND A.GLBL_CMPY_CD          = B.GLBL_CMPY_CD
            AND A.DS_CONTR_PRC_EFF_PK   = B.DS_CONTR_PRC_EFF_PK
            AND B.EZCANCELFLAG          = '0'
            AND B.INV_TP_CD             = #invTpCd#
            AND B.BLLG_SCHD_FROM_DT     &gt; #targetFromDt#
            AND B.BLLG_SCHD_PRRT_FLG    = 'Y'
        ORDER BY B.BLLG_SCHD_FROM_DT
    </statement>
    <statement id="getRoundAdjustMtrBllgForApproval" parameterClass="Map" resultClass="Map">
        SELECT
             B.SVC_CR_REBIL_MTR_BLLG_PK
            ,D.BLLG_SCHD_FROM_DT
            ,D.BLLG_SCHD_THRU_DT
            ,D.BLLG_CYCLE_CD
            ,TO_DATE(D.BLLG_SCHD_THRU_DT, 'YYYYMMDD') - TO_DATE(D.BLLG_SCHD_FROM_DT, 'YYYYMMDD') + 1 AS PER_SCHD_NUM
            ,B.DS_CONTR_DTL_PK
            ,E.BLLG_CYCLE_MTH_AOT
        FROM
             SVC_CR_REBIL_DTL       A
            ,SVC_CR_REBIL_MTR_BLLG  B
            ,SVC_INV_LINE           C
            ,DS_CONTR_BLLG_SCHD     D
            ,BLLG_CYCLE             E
        WHERE
                A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.SVC_CR_REBIL_PK       = #svcCrRebilPk#
            AND A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = B.GLBL_CMPY_CD
            AND A.SVC_CR_REBIL_DTL_PK   = B.SVC_CR_REBIL_DTL_PK
            AND B.EZCANCELFLAG          = '0'
            AND B.DS_CONTR_BLLG_MTR_PK  = #dsContrBllgMtrPk#
            AND B.GLBL_CMPY_CD          = C.GLBL_CMPY_CD
            AND B.SVC_INV_LINE_PK       = C.SVC_INV_LINE_PK
            AND C.EZCANCELFLAG          = '0'
            AND C.GLBL_CMPY_CD          = D.GLBL_CMPY_CD
            AND C.DS_CONTR_BLLG_SCHD_PK = D.DS_CONTR_BLLG_SCHD_PK
            AND D.EZCANCELFLAG          = '0'
            AND D.USG_CHRG_FLG          = 'Y'
            AND D.GLBL_CMPY_CD          = E.GLBL_CMPY_CD
            AND D.BLLG_CYCLE_CD         = E.BLLG_CYCLE_CD
            AND E.EZCANCELFLAG          = '0'
        ORDER BY D.BLLG_SCHD_FROM_DT
    </statement>
    <statement id="getRoundAdjustXsMtrForApproval" parameterClass="Map" resultClass="Map">
        SELECT
             A.SVC_CR_REBIL_XS_MTR_BLLG_PK
            ,NVL(A.NEW_UNIT_XS_COPY_QTY, A.OLD_UNIT_XS_COPY_QTY) UNIT_XS_COPY
            ,NVL(A.NEW_XS_COPY_QTY, A.OLD_XS_COPY_QTY) AS XS_COPY_QTY
            ,NVL(A.NEW_XS_MTR_CHRG_DEAL_AMT, A.OLD_XS_MTR_CHRG_DEAL_AMT) CHRG_AMT
        FROM
             SVC_CR_REBIL_XS_MTR_BLLG   A
        WHERE
                A.GLBL_CMPY_CD              = #glblCmpyCd#
            AND A.EZCANCELFLAG              = '0'
            AND A.SVC_CR_REBIL_MTR_BLLG_PK  = #svcCrRebilMtrBllgPk#
        ORDER BY NVL(A.NEW_XS_COPY_QTY, A.OLD_XS_COPY_QTY)
    </statement>
    <statement id="getTargetStubUsage" parameterClass="Map" resultClass="Map">
        SELECT
             B.DS_CONTR_BLLG_SCHD_PK
            ,B.BLLG_SCHD_FROM_DT
            ,B.BLLG_SCHD_THRU_DT
            ,TO_DATE(B.BLLG_SCHD_THRU_DT, 'YYYYMMDD') - TO_DATE(B.BLLG_SCHD_FROM_DT, 'YYYYMMDD') + 1 AS PER_SCHD_NUM
            ,B.BLLG_CYCLE_CD
            ,B.DS_CONTR_PRC_EFF_PK
            ,B.DS_CONTR_BLLG_SCHD_SMRY_PK
        FROM
             DS_CONTR_PRC_EFF     A
            ,DS_CONTR_BLLG_SCHD   B
        WHERE
                A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.DS_CONTR_BLLG_MTR_PK  = #dsContrBllgMtrPk#
            AND A.EZCANCELFLAG          = '0'
            AND A.USG_CHRG_FLG         = 'Y'
            AND A.GLBL_CMPY_CD          = B.GLBL_CMPY_CD
            AND A.DS_CONTR_PRC_EFF_PK   = B.DS_CONTR_PRC_EFF_PK
            AND B.EZCANCELFLAG          = '0'
            AND B.INV_TP_CD             = #invTpCd#
            AND B.BLLG_SCHD_FROM_DT     &gt; #targetFromDt#
            AND B.BLLG_SCHD_PRRT_FLG    = 'Y'
        ORDER BY B.BLLG_SCHD_FROM_DT
    </statement>
    <statement id="getTargetXsCopy" parameterClass="Map" resultClass="Map">
        SELECT
             A.XS_MTR_COPY_QTY   UNIT_XS_COPY
            ,A.XS_MTR_AMT_RATE   CHRG_AMT
            ,C.XS_MTR_COPY_QTY   XS_COPY_QTY
            ,A.DS_CONTR_PRC_EFF_PK
            ,C.DS_CONTR_BLLG_SCHD_SMRY_PK
            ,C.DS_CONTR_BLLG_SCHD_MTR_PK
        FROM
             DS_CONTR_PRC_EFF_MTR       A
            ,DS_CONTR_BLLG_SCHD_SMRY    B
            ,DS_CONTR_BLLG_SCHD_MTR     C
        WHERE
                A.GLBL_CMPY_CD                  = #glblCmpyCd#
            AND A.EZCANCELFLAG                  = '0'
            AND A.DS_CONTR_PRC_EFF_PK           = #dsContrPrcEffPk#
            AND A.GLBL_CMPY_CD                  = B.GLBL_CMPY_CD
            AND A.DS_CONTR_PRC_EFF_PK           = B.DS_CONTR_PRC_EFF_PK
            AND B.EZCANCELFLAG                  = '0'
            AND B.GLBL_CMPY_CD                  = C.GLBL_CMPY_CD
            AND B.DS_CONTR_BLLG_SCHD_SMRY_PK    = C.DS_CONTR_BLLG_SCHD_SMRY_PK
            AND C.DS_CONTR_BLLG_SCHD_SMRY_PK    = #dsContrBllgSchdSmryPk#
            AND C.EZCANCELFLAG                  = '0'
    </statement>
    <statement id="getLogicalRemoveTopSchdPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            DCBSS.DS_CONTR_BLLG_SCHD_SMRY_PK
        FROM
            DS_CONTR_BLLG_SCHD_SMRY DCBSS
        WHERE
                DCBSS.GLBL_CMPY_CD         = #glblCmpyCd#
            AND DCBSS.DS_CONTR_DTL_PK      = #dsContrDtlPk#
            <isNotNull property="dsContrBllgMtrPk">
            AND DCBSS.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
            </isNotNull>
            AND DCBSS.BASE_CHRG_FLG        = #baseChrgFlg#
            AND DCBSS.USG_CHRG_FLG         = #usgChrgFlg#
            AND DCBSS.EZCANCELFLAG         = '0'
            AND NOT EXISTS(
                SELECT
                    1
                FROM
                    DS_CONTR_BLLG_SCHD DCBS
                WHERE
                        DCBS.GLBL_CMPY_CD               = DCBSS.GLBL_CMPY_CD
                    AND DCBS.DS_CONTR_BLLG_SCHD_SMRY_PK = DCBSS.DS_CONTR_BLLG_SCHD_SMRY_PK
                    AND DCBS.EZCANCELFLAG               = '0'
            )
            AND NOT EXISTS(
                SELECT
                    1
                FROM
                    DS_CONTR_PRC_EFF DCPE
                WHERE
                        DCPE.GLBL_CMPY_CD        = DCBSS.GLBL_CMPY_CD
                    AND DCPE.DS_CONTR_PRC_EFF_PK = DCBSS.DS_CONTR_PRC_EFF_PK
                    AND DCPE.EZCANCELFLAG        = '0'
            )
    </statement>
    <statement id="getLogicalRemovePrcEffPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            DCPE.DS_CONTR_PRC_EFF_PK
        FROM
            DS_CONTR_PRC_EFF DCPE
        WHERE
                DCPE.GLBL_CMPY_CD              = #glblCmpyCd#
            AND DCPE.DS_CONTR_DTL_PK           = #dsContrDtlPk#
            <isNotNull property="dsContrBllgMtrPk">
            AND DCPE.DS_CONTR_BLLG_MTR_PK      = #dsContrBllgMtrPk#
            </isNotNull>
            AND DCPE.BASE_CHRG_FLG             = #baseChrgFlg#
            AND DCPE.USG_CHRG_FLG              = #usgChrgFlg#
            AND DCPE.CONTR_PRC_EFF_FROM_DT &gt;= #effFromDt#
            AND DCPE.CONTR_PRC_EFF_FROM_DT &lt;= #effThruDt#
            AND DCPE.EZCANCELFLAG              = '0'
    </statement>
    <!-- END   2018/09/05 [QC#24555,ADD] -->
    <!-- START 2019/07/18  [QC#51706, ADD] -->
    <statement id="getManualHldCnt" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
            SVC_MEMO    A
        WHERE
                A.GLBL_CMPY_CD      = #glblCmpyCd#
            AND A.EZCANCELFLAG      = '0'
            AND A.DS_CONTR_PK       =  #dsContrPk#
        <isNotNull property="dsContrDtlPk">
            AND A.DS_CONTR_DTL_PK   = #dsContrDtlPk#
        </isNotNull>
        <isNull property="dsContrDtlPk">
            AND A.DS_CONTR_DTL_PK   IS NULL
        </isNull>
        <isNotNull property="dsContrBllgMtrPk">
            AND A.SVC_MEMO_TRX_NUM   = #dsContrBllgMtrPk#
        </isNotNull>
        <isNull property="dsContrBllgMtrPk">
            AND A.SVC_MEMO_TRX_NUM   IS NULL
        </isNull>
            AND A.SVC_MEMO_CATG_CD   = '__'
            AND A.SVC_MEMO_TP_CD     = '__'
            AND A.SVC_MEMO_RSN_CD    = '__'
    </statement>
    <!-- END 2019/07/18  [QC#51706, ADD] -->
    <!-- START 2020/01/08 [QC#55170, ADD] -->
    <statement id="getPrntSvcContrBllgForRegAcc" parameterClass="Map" resultClass="Map">
        SELECT
             A.SVC_CONTR_BLLG_PK
            ,C.SVC_CONTR_BLLG_PK  NEW_PRNT_SVC_CONTR_BLLG_PK
        FROM
             SVC_CONTR_BLLG     A
            ,DS_CONTR_BLLG_SCHD B
            ,SVC_CONTR_BLLG     C
            ,DS_CONTR_DTL       D
        WHERE
                A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.SVC_CR_REBIL_PK            = #svcCrRebilPk#
            AND A.DS_CONTR_CATG_CD           = #dsContrCatgCdReg#
            AND A.PRNT_SVC_CONTR_BLLG_PK     IS NULL
            AND A.GLBL_CMPY_CD               = B.GLBL_CMPY_CD
            AND A.DS_CONTR_BLLG_SCHD_PK      = B.DS_CONTR_BLLG_SCHD_PK
            AND B.GLBL_CMPY_CD               = C.GLBL_CMPY_CD
            AND B.PRNT_DS_CONTR_BLLG_SCHD_PK = C.DS_CONTR_BLLG_SCHD_PK
            <!-- add start 2022/07/05 QC#60284 -->
            AND C.ADDL_CHRG_FLG              = 'N'
            <!-- add end 2022/07/05 QC#60284 -->
            AND A.GLBL_CMPY_CD               = D.GLBL_CMPY_CD
            AND A.DS_CONTR_DTL_PK            = D.DS_CONTR_DTL_PK
            AND D.DS_CONTR_DTL_TP_CD         = #dsContrDtlTpCdAcc#
            AND A.EZCANCELFLAG               = '0'
            AND B.EZCANCELFLAG               = '0'
            AND C.EZCANCELFLAG               = '0'
            AND D.EZCANCELFLAG               = '0'
    </statement>
    <!-- END 2020/01/08 [QC#55170, ADD] -->
    <!-- ADD START 2020/06/09 QC#56945 -->
    <statement id="getLogicalRemoveDuplicatePrcEffPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            DCPE.DS_CONTR_PRC_EFF_PK
        FROM
            DS_CONTR_PRC_EFF DCPE
        WHERE
                DCPE.GLBL_CMPY_CD              = #glblCmpyCd#
            AND DCPE.DS_CONTR_DTL_PK           = #dsContrDtlPk#
            <isNotNull property="dsContrBllgMtrPk">
            AND DCPE.DS_CONTR_BLLG_MTR_PK      = #dsContrBllgMtrPk#
            </isNotNull>
            AND DCPE.BASE_CHRG_FLG             = #baseChrgFlg#
            AND DCPE.USG_CHRG_FLG              = #usgChrgFlg#
            AND DCPE.CONTR_PRC_EFF_FROM_DT &lt;= #effThruDt#
            AND DCPE.CONTR_PRC_EFF_THRU_DT &gt;= #effFromDt#
            AND DCPE.DS_CONTR_PRC_EFF_PK &lt;&gt; #dsContrPrcEffPk#
            AND DCPE.EZCANCELFLAG              = '0'
    </statement>
    <!-- START 2020/06/25 K.Kitachi [QC#56211, ADD] -->
    <statement id="getInvalidCustAcct" parameterClass="Map" resultClass="String">
        SELECT
        <!-- START 2022/11/02 L.Mandanas [QC#60652, MOD]  -->
        <!--     C.DS_ACCT_NM -->
            C.SELL_TO_CUST_CD || ',' || C.DS_ACCT_NM
        <!-- END 2022/11/02 L.Mandanas [QC#60652, MOD]  -->
        FROM
             S21_CSA_APPS.SVC_CR_REBIL_DTL A
            ,S21_CSA_APPS.SVC_INV          B
            ,S21_CSA_APPS.SELL_TO_CUST     C
        WHERE
                A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.SVC_CR_REBIL_PK      = #svcCrRebilPk#
            AND A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = B.GLBL_CMPY_CD
            AND A.ORIG_SVC_INV_NUM     = B.SVC_INV_NUM
            AND B.EZCANCELFLAG         = '0'
            AND B.GLBL_CMPY_CD         = C.GLBL_CMPY_CD
            AND B.BILL_TO_CUST_ACCT_CD = C.SELL_TO_CUST_CD
            AND C.RGTN_STS_CD          &lt;&gt; #rgtnStsCd#
            AND C.EZCANCELFLAG         = '0'
        UNION
        SELECT
        <!-- START 2022/11/02 L.Mandanas [QC#60652, MOD]  -->
        <!--     C.DS_ACCT_NM -->
            C.SELL_TO_CUST_CD || ',' || C.DS_ACCT_NM
        <!-- END 2022/11/02 L.Mandanas [QC#60652, MOD]  -->
        FROM
             S21_CSA_APPS.SVC_CR_REBIL_DTL A
            ,S21_CSA_APPS.SVC_INV_LINE     B
            ,S21_CSA_APPS.SHIP_TO_CUST     C
            ,S21_CSA_APPS.SELL_TO_CUST     D
        WHERE
                A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.SVC_CR_REBIL_PK      = #svcCrRebilPk#
            AND A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = B.GLBL_CMPY_CD
            AND A.ORIG_SVC_INV_NUM     = B.SVC_INV_NUM
            AND B.EZCANCELFLAG         = '0'
            AND B.GLBL_CMPY_CD         = C.GLBL_CMPY_CD
            AND B.SHIP_TO_CUST_CD      = C.SHIP_TO_CUST_CD
            AND C.EZCANCELFLAG         = '0'
            AND C.GLBL_CMPY_CD         = D.GLBL_CMPY_CD
            AND C.SELL_TO_CUST_CD      = D.SELL_TO_CUST_CD
            AND D.RGTN_STS_CD          &lt;&gt; #rgtnStsCd#
            AND D.EZCANCELFLAG         = '0'
    </statement>
    <!-- END 2020/06/25 K.Kitachi [QC#56211, ADD] -->

    <!-- Start 2021/04/05 T.Wada [QC#58177-2, ADD] -->
    <statement id="countChangeMtrAmtRate" parameterClass="Map" resultClass="BigDecimal">
            SELECT
                COUNT(*)
            FROM
                SVC_CR_REBIL_MTR_BLLG   A
               ,SVC_CR_REBIL_DTL B
            WHERE
                A.GLBL_CMPY_CD  = #glblCmpyCd#
            AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
            AND A.EZCANCELFLAG  = '0'
            AND A.GLBL_CMPY_CD  = B.GLBL_CMPY_CD
            AND B.EZCANCELFLAG  = '0'
            AND B.CUST_INCDT_ID = #custIncdtId#
            AND A.SVC_CR_REBIL_DTL_PK = B.SVC_CR_REBIL_DTL_PK
            AND EXISTS (
                    SELECT
                        1
                    FROM
                        SVC_CR_REBIL_XS_MTR_BLLG   X
                    WHERE
                            X.GLBL_CMPY_CD  = #glblCmpyCd#
                        AND X.EZCANCELFLAG  = '0'
                        AND X.SVC_CR_REBIL_MTR_BLLG_PK = A.SVC_CR_REBIL_MTR_BLLG_PK
                        AND ((X.OLD_XS_COPY_QTY &lt;&gt; X.NEW_XS_COPY_QTY) OR (X.OLD_XS_MTR_AMT_RATE &lt;&gt; X.NEW_XS_MTR_AMT_RATE))
                )
    </statement>
    <statement id="countChangeMtrAmtRate4Agg" parameterClass="Map" resultClass="BigDecimal">
            SELECT
                COUNT(*)
            FROM
                SVC_CR_REBIL_MTR_BLLG   A
               ,SVC_CR_REBIL_DTL B
               ,DS_CONTR_DTL C
            WHERE
                A.GLBL_CMPY_CD  = #glblCmpyCd#
            <!-- Start 2022/12/23 R.Jin [QC#60969, ADD] -->
            AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
            <!-- End 2022/12/23 R.Jin [QC#60969, ADD] -->
            AND A.EZCANCELFLAG  = '0'
            AND A.GLBL_CMPY_CD  = B.GLBL_CMPY_CD
            AND B.EZCANCELFLAG  = '0'
            AND B.CUST_INCDT_ID = #custIncdtId#
            AND A.SVC_CR_REBIL_DTL_PK = B.SVC_CR_REBIL_DTL_PK
            AND C.GLBL_CMPY_CD = A.GLBL_CMPY_CD
            AND A.DS_CONTR_DTL_PK = C.DS_CONTR_DTL_PK
            AND C.EZCANCELFLAG  = '0'
            AND EXISTS (
                    SELECT
                        1
                    FROM
                        SVC_CR_REBIL_XS_MTR_BLLG   X
                    WHERE
                            X.GLBL_CMPY_CD  = #glblCmpyCd#
                        AND X.EZCANCELFLAG  = '0'
                        AND X.SVC_CR_REBIL_MTR_BLLG_PK = A.SVC_CR_REBIL_MTR_BLLG_PK
                        <!-- START 2023/01/16 R.Jin [QC#58890, MOD] -->
                        <!-- AND ((X.OLD_XS_COPY_QTY &lt;&gt; X.NEW_XS_COPY_QTY) OR (X.OLD_XS_MTR_AMT_RATE &lt;&gt; X.NEW_XS_MTR_AMT_RATE)) -->
                        AND ((X.OLD_XS_COPY_QTY &lt;&gt; X.NEW_XS_COPY_QTY) OR (X.OLD_XS_COPY_QTY = X.NEW_XS_COPY_QTY) OR (X.OLD_XS_MTR_AMT_RATE &lt;&gt; X.NEW_XS_MTR_AMT_RATE))
                        <!-- END 2023/01/16 R.Jin [QC#58890, MOD] -->
                )
    </statement>
    <statement id="countChangeBaseUnitAmt" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
            SVC_CR_REBIL_BASE_BLLG   A
            ,SVC_CR_REBIL_DTL        B
        WHERE
            A.GLBL_CMPY_CD  = #glblCmpyCd#
        AND A.DS_CONTR_DTL_PK = #dsContrDtlPk#
        AND A.EZCANCELFLAG  = '0'
        AND A.GLBL_CMPY_CD  = B.GLBL_CMPY_CD
        AND B.EZCANCELFLAG  = '0'
        AND B.CUST_INCDT_ID = #custIncdtId#
        AND A.SVC_CR_REBIL_DTL_PK = B.SVC_CR_REBIL_DTL_PK
        AND A.OLD_BASE_UNIT_AMT &lt;&gt; A.NEW_BASE_UNIT_AMT
    </statement>
    <!-- End 2021/04/05 T.Wada [QC#58177-2, ADD] -->

    <!-- Start 2021/06/29 T.Wada [QC#58177-5, ADD]  -->
    <statement id="getPrntBllgSchdPk" parameterClass="Map" resultClass="Map">
        WITH TARGET_SCHD AS (
        SELECT
             A.DS_CONTR_BLLG_SCHD_PK
            ,A.NEXT_BLLG_DT
            ,A.EZINTIME
            ,CASE
                WHEN A.BASE_CHRG_FLG = 'Y' AND B.BASE_BLLG_TMG_CD = #bllgTmgTpAdvance#
                    THEN ROW_NUMBER() OVER(PARTITION BY A.DS_CONTR_DTL_PK ORDER BY A.NEXT_BLLG_DT, A.EZINTIME DESC)
                ELSE ROW_NUMBER() OVER(PARTITION BY A.DS_CONTR_DTL_PK ORDER BY A.NEXT_BLLG_DT DESC, A.EZINTIME DESC)
             END RNUM
        FROM
            DS_CONTR_BLLG_SCHD A
            ,DS_CONTR_DTL      B
            ,DS_CONTR_DTL      C
        WHERE
                A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK      = #dsContrDtlPk#
            AND A.BASE_CHRG_FLG        = #baseChrgFlg#
            AND (
                    (A.BLLG_SCHD_FROM_DT = #bllgSchdFromDt#     AND A.BASE_CHRG_FLG = 'Y' AND B.BASE_BLLG_TMG_CD = #bllgTmgTpAdvance# AND C.BASE_BLLG_TMG_CD = #bllgTmgTpAdvance#)
                 OR (A.BLLG_SCHD_THRU_DT = #bllgSchdThruDt#     AND A.BASE_CHRG_FLG = 'Y' AND B.BASE_BLLG_TMG_CD = #bllgTmgTpArrears# AND C.BASE_BLLG_TMG_CD = #bllgTmgTpArrears#)
                 OR (A.BLLG_SCHD_FROM_DT = #nextBllgSchdFromDt# AND A.BASE_CHRG_FLG = 'Y' AND B.BASE_BLLG_TMG_CD = #bllgTmgTpAdvance# AND C.BASE_BLLG_TMG_CD = #bllgTmgTpArrears#)
                 OR (A.BLLG_SCHD_THRU_DT = #prevBllgSchdThruDt# AND A.BASE_CHRG_FLG = 'Y' AND B.BASE_BLLG_TMG_CD = #bllgTmgTpArrears# AND C.BASE_BLLG_TMG_CD = #bllgTmgTpAdvance#)
                )
            AND A.INV_TP_CD            = #invTpCd#
            AND A.GLBL_CMPY_CD         = B.GLBL_CMPY_CD
            AND A.DS_CONTR_DTL_PK      = B.DS_CONTR_DTL_PK
            AND B.EZCANCELFLAG         = '0'
            AND B.GLBL_CMPY_CD         = C.GLBL_CMPY_CD
            AND B.DS_CONTR_DTL_PK      = C.PRNT_DS_CONTR_DTL_PK
            AND C.DS_CONTR_DTL_PK      = #childDsContrDtlPk#
            AND C.EZCANCELFLAG         = '0'
)
        SELECT
             A.DS_CONTR_BLLG_SCHD_PK
            ,A.NEXT_BLLG_DT
        FROM
            TARGET_SCHD A
        WHERE
            A.RNUM = 1
    </statement>
    <statement id="getPrntlessBllgSchd" parameterClass="Map" resultClass="Map">
        SELECT
            A.DS_CONTR_BLLG_SCHD_PK
            ,A.DS_CONTR_DTL_PK
            ,A.PRNT_DS_CONTR_DTL_PK
            ,A.NEXT_BLLG_DT
            ,A.BLLG_SCHD_FROM_DT
            ,A.BLLG_SCHD_THRU_DT
            ,A.DS_BLLG_SCHD_STS_CD
        FROM 
            DS_CONTR_BLLG_SCHD A 
            ,DS_CONTR_DTL      B
        WHERE 
            A.GLBL_CMPY_CD        = #glblCmpyCd#
        AND A.DS_CONTR_DTL_PK     = #dsContrDtlPk#
        AND A.GLBL_CMPY_CD        = B.GLBL_CMPY_CD
        AND A.DS_CONTR_DTL_PK     = B.DS_CONTR_DTL_PK
        AND B.DS_CONTR_DTL_TP_CD  = #dsContrDtlTpCd#
        AND A.EZCANCELFLAG        = '0'
        AND B.EZCANCELFLAG        = '0'
        AND NOT EXISTS (
            SELECT 1 
            FROM 
                DS_CONTR_BLLG_SCHD AA
                ,DS_CONTR_DTL      BB
            WHERE 
                AA.GLBL_CMPY_CD          = #glblCmpyCd#
            AND AA.GLBL_CMPY_CD         = BB.GLBL_CMPY_CD
            AND AA.DS_CONTR_DTL_PK      = BB.DS_CONTR_DTL_PK
            AND BB.DS_CONTR_DTL_TP_CD   IN (#dsContrDtlTpCdMacb#, #dsContrDtlTpCdMacbu#)
            AND BB.DS_CONTR_PK          = #dsContrPk#
            AND AA.EZCANCELFLAG         = '0'
            AND BB.EZCANCELFLAG         = '0'
            AND A.PRNT_DS_CONTR_BLLG_SCHD_PK  = AA.DS_CONTR_BLLG_SCHD_PK
        )
    </statement>
    <!-- End 2021/06/29 T.Wada [QC#58177-5, ADD]  -->
    <!-- START 2022/09/01 L.Mandanas [QC#58350, ADD]  -->
    <statement id="getSvcCrRebilDtlSorted" parameterClass="Map" resultClass="Map">
        SELECT
             BLLG_FROM_DT
            ,ORIG_SVC_INV_NUM
        FROM
           (
                SELECT
                     B.MTR_BLLG_FROM_DT AS BLLG_FROM_DT
                    ,A.ORIG_SVC_INV_NUM AS ORIG_SVC_INV_NUM
                FROM
                     SVC_CR_REBIL_DTL A
                    ,SVC_CR_REBIL_MTR_BLLG B
                    ,SVC_CR_REBIL_MTR_READ C
                WHERE
                        A.EZCANCELFLAG             = '0'
                    AND B.EZCANCELFLAG             = '0'
                    AND C.EZCANCELFLAG             = '0'
                    AND A.GLBL_CMPY_CD             = #glblCmpyCd#
                    AND B.GLBL_CMPY_CD             = A.GLBL_CMPY_CD
                    AND C.GLBL_CMPY_CD             = B.GLBL_CMPY_CD
                    AND A.SVC_CR_REBIL_PK          = #svcCrRebilPk#
                    AND A.SVC_CR_REBIL_DTL_PK      = B.SVC_CR_REBIL_DTL_PK
                    AND B.SVC_CR_REBIL_MTR_BLLG_PK = C.SVC_CR_REBIL_MTR_BLLG_PK
                ORDER BY
                     B.MTR_BLLG_FROM_DT
                    ,A.ORIG_SVC_INV_NUM ASC
           )
        UNION
        SELECT
             BLLG_FROM_DT
            ,ORIG_SVC_INV_NUM
        FROM (
                SELECT
                     E.BASE_BLLG_FROM_DT AS BLLG_FROM_DT
                    ,D.ORIG_SVC_INV_NUM AS ORIG_SVC_INV_NUM
                FROM
                     SVC_CR_REBIL_DTL D
                    ,SVC_CR_REBIL_BASE_BLLG E
                WHERE
                        D.EZCANCELFLAG        = '0'
                    AND E.EZCANCELFLAG        = '0'
                    AND D.GLBL_CMPY_CD        = #glblCmpyCd#
                    AND E.GLBL_CMPY_CD        = D.GLBL_CMPY_CD
                    AND D.SVC_CR_REBIL_PK     = #svcCrRebilPk#
                    AND D.SVC_CR_REBIL_DTL_PK = E.SVC_CR_REBIL_DTL_PK
                    AND E.SVC_INV_LINE_PK IS NOT NULL
                    AND NOT EXISTS (
                        SELECT
                            X.SVC_CR_REBIL_DTL_PK
                        FROM
                            SVC_CR_REBIL_MTR_BLLG X
                        WHERE
                                X.EZCANCELFLAG        = '0'
                            AND X.GLBL_CMPY_CD        = D.GLBL_CMPY_CD
                            AND E.DS_CONTR_DTL_PK     = X.DS_CONTR_DTL_PK
                            AND X.SVC_CR_REBIL_DTL_PK = D.SVC_CR_REBIL_DTL_PK
                    )
                ORDER BY
                     E.BASE_BLLG_FROM_DT
                    ,D.ORIG_SVC_INV_NUM ASC
        )
    </statement>
    <!-- END 2022/09/01 L.Mandanas [QC#58350, ADD]  -->

    <!-- START 2022/09/27 L.Mandanas [QC#58427, ADD]  -->
    <statement id="getBaseRnwlHold" parameterClass="Map" resultClass="String">
         SELECT
             A.DS_CONTR_PRC_EFF_STS_CD
         FROM
             DS_CONTR_PRC_EFF       A
         WHERE
             A.GLBL_CMPY_CD            = #glblCmpyCd#
         AND A.DS_CONTR_DTL_PK         = #dsContrDtlPk#
         AND A.DS_CONTR_PRC_EFF_STS_CD IN (#dsContrPrcEffStsCd_RNWH#, #dsContrPrcEffStsCd_RNPO#)
         AND A.BASE_CHRG_FLG           = #baseChrgFlg#
         AND A.CONTR_PRC_EFF_THRU_DT   = #contrEffThruDt#
         AND A.EZCANCELFLAG            = '0'
         AND ROWNUM = 1
    </statement>

    <statement id="getUsgRnwlHold" parameterClass="Map" resultClass="String">
         SELECT
             A.DS_CONTR_PRC_EFF_STS_CD
         FROM
             DS_CONTR_PRC_EFF       A
         WHERE
             A.GLBL_CMPY_CD            = #glblCmpyCd#
         AND A.DS_CONTR_DTL_PK         = #dsContrDtlPk#
         AND A.DS_CONTR_BLLG_MTR_PK    = #dsContrBllgMtrPk#
         AND A.DS_CONTR_PRC_EFF_STS_CD IN (#dsContrPrcEffStsCd_RNWH#, #dsContrPrcEffStsCd_RNPO#)
         AND A.USG_CHRG_FLG            = #usgChrgFlg#
         AND A.CONTR_PRC_EFF_THRU_DT   = #contrEffThruDt#
         AND A.EZCANCELFLAG            = '0'
         AND ROWNUM = 1
    </statement>
    <!-- END 2022/09/27 L.Mandanas [QC#58427, ADD]  -->
    <!-- START 2022/11/02 L.Mandanas [QC#60652, ADD]  -->
    <statement id="getInvalidBillToCust" parameterClass="Map" resultClass="String">
        SELECT DISTINCT
            C.BILL_TO_CUST_CD || ',' || C.LOC_NM   AS BILL_TO_TEXT
        FROM
             SVC_CR_REBIL_DTL A
            ,SVC_INV          B
            ,BILL_TO_CUST     C
        WHERE
                A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.SVC_CR_REBIL_PK      = #svcCrRebilPk#
            AND A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = B.GLBL_CMPY_CD
            AND A.ORIG_SVC_INV_NUM     = B.SVC_INV_NUM
            AND B.EZCANCELFLAG         = '0'
            AND B.GLBL_CMPY_CD         = C.GLBL_CMPY_CD
            AND B.BILL_TO_CUST_CD      = C.BILL_TO_CUST_CD
            AND C.RGTN_STS_CD          &lt;&gt; #rgtnStsCd#
            AND C.EZCANCELFLAG         = '0'
       ORDER BY
            BILL_TO_TEXT
    </statement>
    <statement id="getInvalidShipToCust" parameterClass="Map" resultClass="String">
        SELECT DISTINCT
            C.SHIP_TO_CUST_CD || ',' || C.LOC_NM   AS SHIP_TO_TEXT
        FROM
             SVC_CR_REBIL_DTL A
            ,SVC_INV_LINE     B
            ,SHIP_TO_CUST     C
        WHERE
                A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.SVC_CR_REBIL_PK      = #svcCrRebilPk#
            AND A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = B.GLBL_CMPY_CD
            AND A.ORIG_SVC_INV_NUM     = B.SVC_INV_NUM
            AND B.EZCANCELFLAG         = '0'
            AND B.GLBL_CMPY_CD         = C.GLBL_CMPY_CD
            AND B.SHIP_TO_CUST_CD      = C.SHIP_TO_CUST_CD
            AND C.RGTN_STS_CD          &lt;&gt; #rgtnStsCd#
            AND C.EZCANCELFLAG         = '0'
       ORDER BY
            SHIP_TO_TEXT
    </statement>
    <!-- END 2022/11/02 L.Mandanas [QC#60652, ADD]  -->
    <!-- START 2023/01/16 R.Jin [QC#58890, ADD] -->
    <statement id="getAggLineXscopyChangeTirInfo" parameterClass="Map" resultClass="Integer">
        SELECT
            ROW_NUM
        FROM
        (
            SELECT
                D.DS_CONTR_BLLG_MTR_PK AS DS_CONTR_BLLG_MTR_PK
                ,D.XS_MTR_COPY_QTY AS XS_MTR_COPY_QTY
                ,D.XS_MTR_AMT_RATE AS XS_MTR_AMT_RATE
                ,ROWNUM AS ROW_NUM
            FROM
                SVC_MACH_MSTR A
                ,DS_CONTR_DTL B
                ,DS_CONTR_BLLG_MTR C
                ,CONTR_XS_COPY D
            WHERE
                    A.GLBL_CMPY_CD          = #glblCmpyCd#
                AND A.SVC_MACH_MSTR_PK      = B.SVC_MACH_MSTR_PK
                AND A.GLBL_CMPY_CD          = B.GLBL_CMPY_CD
                AND B.DS_CONTR_DTL_PK       = C.DS_CONTR_DTL_PK
                AND B.GLBL_CMPY_CD          = C.GLBL_CMPY_CD
                AND C.DS_CONTR_BLLG_MTR_PK  = D.DS_CONTR_BLLG_MTR_PK
                AND C.GLBL_CMPY_CD          = D.GLBL_CMPY_CD
                AND A.EZCANCELFLAG          = '0'
                AND B.EZCANCELFLAG          = '0'
                AND C.EZCANCELFLAG          = '0'
                AND D.EZCANCELFLAG          = '0'
                AND A.SER_NUM               = #serNum#
                AND C.BLLG_MTR_LB_CD        = #bllgMtrLbCd#
            ORDER BY
                D.XS_MTR_COPY_QTY
        )
        WHERE
            XS_MTR_COPY_QTY = #xsMtrCopyQty#
    </statement>
    <!-- END 2023/01/16 R.Jin [QC#58890, ADD] -->
</sqlMap>
