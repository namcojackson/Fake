//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20170928154442000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSAL1070CMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NSAL1070;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL1070 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL1070CMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** DS_CONTR_DTL_PK*/
	public final EZDCBigDecimalItem              dsContrDtlPk;

    /** DS_CONTR_CATG_CD*/
	public final EZDCStringItem              dsContrCatgCd;

    /** MTR_PRC_UP_RATIO*/
	public final EZDCBigDecimalItem              mtrPrcUpRatio;

    /** RNW_PRC_METH_CD*/
	public final EZDCStringItem              rnwPrcMethCd;

    /** A*/
	public final business.blap.NSAL1070.NSAL1070_ACMsgArray              A;


	/**
	 * NSAL1070CMsg is constructor.
	 * The initialization when the instance of NSAL1070CMsg is generated.
	 */
	public NSAL1070CMsg() {
		this(false, -1);
	}

	/**
	 * NSAL1070CMsg is constructor.
	 * The initialization when the instance of NSAL1070CMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL1070CMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		dsContrDtlPk = (EZDCBigDecimalItem)newItem("dsContrDtlPk");
		dsContrCatgCd = (EZDCStringItem)newItem("dsContrCatgCd");
		mtrPrcUpRatio = (EZDCBigDecimalItem)newItem("mtrPrcUpRatio");
		rnwPrcMethCd = (EZDCStringItem)newItem("rnwPrcMethCd");
		A = (business.blap.NSAL1070.NSAL1070_ACMsgArray)newMsgArray("A");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL1070CMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL1070CMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"dsContrDtlPk", "dsContrDtlPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrCatgCd", "dsContrCatgCd", null, null, TYPE_HANKAKUEISU, "3", null},
	{"mtrPrcUpRatio", "mtrPrcUpRatio", null, null, TYPE_SEISU_SYOSU, "9", "5"},
	{"rnwPrcMethCd", "rnwPrcMethCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"A", "A", null, "200", "business.blap.NSAL1070.NSAL1070_ACMsgArray", null, null},
	
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"DS_CONTR_DTL_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrDtlPk
        {"DS_CONTR_CATG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrCatgCd
        {"MTR_PRC_UP_RATIO",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrPrcUpRatio
        {"RNW_PRC_METH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rnwPrcMethCd
		null,	//A
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

