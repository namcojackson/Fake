//This file was automatically generated by Business Component Interface Definition Document (Define Business Application Global Area) and XLA200710010.
// Generated on    :20170928154444000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSAL1070_BSMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NSAL1070;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL1070 Business Application Global Area Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL1070_BSMsg extends EZDSMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** DS_CONTR_PK_B1*/
	public final EZDSBigDecimalItem              dsContrPk_B1;

    /** DS_CONTR_DTL_PK_B1*/
	public final EZDSBigDecimalItem              dsContrDtlPk_B1;

    /** DS_CONTR_PRC_EFF_PK_B1*/
	public final EZDSBigDecimalItem              dsContrPrcEffPk_B1;

    /** DS_CONTR_BLLG_MTR_PK_B1*/
	public final EZDSBigDecimalItem              dsContrBllgMtrPk_B1;

    /** DS_CONTR_BLLG_MTR_ID_B1*/
	public final EZDSStringItem              dsContrBllgMtrId_B1;

    /** MTR_LB_DESC_TXT_B1*/
	public final EZDSStringItem              mtrLbDescTxt_B1;

    /** XS_MTR_COPY_QTY_B1*/
	public final EZDSBigDecimalItem              xsMtrCopyQty_B1;

    /** XS_MTR_AMT_RATE_B1*/
	public final EZDSBigDecimalItem              xsMtrAmtRate_B1;

    /** BLLG_MTR_LB_CD_B1*/
	public final EZDSStringItem              bllgMtrLbCd_B1;


	/**
	 * NSAL1070_BSMsg is constructor.
	 * The initialization when the instance of NSAL1070_BSMsg is generated.
	 */
	public NSAL1070_BSMsg() {
		this(false, -1);
	}

	/**
	 * NSAL1070_BSMsg is constructor.
	 * The initialization when the instance of NSAL1070_BSMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL1070_BSMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		dsContrPk_B1 = (EZDSBigDecimalItem)newItem("dsContrPk_B1");
		dsContrDtlPk_B1 = (EZDSBigDecimalItem)newItem("dsContrDtlPk_B1");
		dsContrPrcEffPk_B1 = (EZDSBigDecimalItem)newItem("dsContrPrcEffPk_B1");
		dsContrBllgMtrPk_B1 = (EZDSBigDecimalItem)newItem("dsContrBllgMtrPk_B1");
		dsContrBllgMtrId_B1 = (EZDSStringItem)newItem("dsContrBllgMtrId_B1");
		mtrLbDescTxt_B1 = (EZDSStringItem)newItem("mtrLbDescTxt_B1");
		xsMtrCopyQty_B1 = (EZDSBigDecimalItem)newItem("xsMtrCopyQty_B1");
		xsMtrAmtRate_B1 = (EZDSBigDecimalItem)newItem("xsMtrAmtRate_B1");
		bllgMtrLbCd_B1 = (EZDSStringItem)newItem("bllgMtrLbCd_B1");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL1070_BSMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL1070_BSMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"dsContrPk_B1", "dsContrPk_B1", "B1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrDtlPk_B1", "dsContrDtlPk_B1", "B1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrPrcEffPk_B1", "dsContrPrcEffPk_B1", "B1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrBllgMtrPk_B1", "dsContrBllgMtrPk_B1", "B1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrBllgMtrId_B1", "dsContrBllgMtrId_B1", "B1", null, TYPE_HANKAKUEISU, "2", null},
	{"mtrLbDescTxt_B1", "mtrLbDescTxt_B1", "B1", null, TYPE_HANKAKUEISU, "50", null},
	{"xsMtrCopyQty_B1", "xsMtrCopyQty_B1", "B1", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"xsMtrAmtRate_B1", "xsMtrAmtRate_B1", "B1", null, TYPE_SEISU_SYOSU, "19", "6"},
	{"bllgMtrLbCd_B1", "bllgMtrLbCd_B1", "B1", null, TYPE_HANKAKUEISU, "2", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"DS_CONTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrPk_B1
        {"DS_CONTR_DTL_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrDtlPk_B1
        {"DS_CONTR_PRC_EFF_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrPrcEffPk_B1
        {"DS_CONTR_BLLG_MTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgMtrPk_B1
        {"DS_CONTR_BLLG_MTR_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgMtrId_B1
        {"MTR_LB_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrLbDescTxt_B1
        {"XS_MTR_COPY_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xsMtrCopyQty_B1
        {"XS_MTR_AMT_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xsMtrAmtRate_B1
        {"BLLG_MTR_LB_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgMtrLbCd_B1
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

