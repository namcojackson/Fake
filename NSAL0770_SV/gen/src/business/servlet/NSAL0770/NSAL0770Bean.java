// This file was automatically generated by Screen Field Definition Document and XLA200710010
// Generated on    :20160218170222000
// Velocity Macro:svltdatabean.vm V200604010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0770Bean.java Copyright FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */

package  business.servlet.NSAL0770;

import parts.servletcommon.EZDCommonDataBean;

/*
 * NSAL0770 is data bean class.
 */
public class NSAL0770Bean extends EZDCommonDataBean {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	//Constant Definition Area
	/** DS_CONTR_TRK_TP_CD*/
	public static final String dsContrTrkTpCd = "dsContrTrkTpCd";

	/** DS_CONTR_PK*/
	public static final String dsContrPk = "dsContrPk";

	/** DS_CONTR_DTL_PK*/
	public static final String dsContrDtlPk = "dsContrDtlPk";

	/** DS_CONTR_BLLG_MTR_PK*/
	public static final String dsContrBllgMtrPk = "dsContrBllgMtrPk";

	/** XX_FROM_DT*/
	public static final String xxFromDt = "xxFromDt";

	/** XX_PAGE_SHOW_FROM_NUM*/
	public static final String xxPageShowFromNum = "xxPageShowFromNum";

	/** XX_PAGE_SHOW_TO_NUM*/
	public static final String xxPageShowToNum = "xxPageShowToNum";

	/** XX_PAGE_SHOW_OF_NUM*/
	public static final String xxPageShowOfNum = "xxPageShowOfNum";

	/** A*/
	public static final String A = "A";

	/** DS_CONTR_STS_NM_A1*/
	public static final String dsContrStsNm_A1 = "dsContrStsNm_A1";

	/** DS_CONTR_STS_NM_A2*/
	public static final String dsContrStsNm_A2 = "dsContrStsNm_A2";

	/** DS_CONTR_TRK_RSN_DESC_TXT*/
	public static final String dsContrTrkRsnDescTxt = "dsContrTrkRsnDescTxt";

	/** STS_MEMO_TXT*/
	public static final String stsMemoTxt = "stsMemoTxt";

	/** STS_MEMO_UPD_FULL_PSN_NM*/
	public static final String stsMemoUpdFullPsnNm = "stsMemoUpdFullPsnNm";

	/** XX_DT_TM*/
	public static final String xxDtTm = "xxDtTm";

	/**
	 * Method name:NSAL0770 is Bean's Constructor.
	 * <dd>method explanation:Initialization when instance of NSAL0770Bean is generated
	 * <dd>Remarks:
	 */
	public NSAL0770Bean() {
		super("business.servlet.NSAL0770.NSAL0770BMsg");
	}

	/**
	 * get  DS_CONTR_TRK_TP_CD.
	 * @return DS_CONTR_TRK_TP_CD
	 */
	public String getDsContrTrkTpCd() {
		return outputValue(dsContrTrkTpCd);
	}

	/**
	 * set  DS_CONTR_TRK_TP_CD.
	 * @param data DS_CONTR_TRK_TP_CD
	 */
	public void setDsContrTrkTpCd(String data) {
		inputValue(dsContrTrkTpCd,data);
	}

	/**
	 * get  DS_CONTR_PK.
	 * @return DS_CONTR_PK
	 */
	public String getDsContrPk() {
		return outputValue(dsContrPk);
	}

	/**
	 * set  DS_CONTR_PK.
	 * @param data DS_CONTR_PK
	 */
	public void setDsContrPk(String data) {
		inputValue(dsContrPk,data);
	}

	/**
	 * get  DS_CONTR_DTL_PK.
	 * @return DS_CONTR_DTL_PK
	 */
	public String getDsContrDtlPk() {
		return outputValue(dsContrDtlPk);
	}

	/**
	 * set  DS_CONTR_DTL_PK.
	 * @param data DS_CONTR_DTL_PK
	 */
	public void setDsContrDtlPk(String data) {
		inputValue(dsContrDtlPk,data);
	}

	/**
	 * get  DS_CONTR_BLLG_MTR_PK.
	 * @return DS_CONTR_BLLG_MTR_PK
	 */
	public String getDsContrBllgMtrPk() {
		return outputValue(dsContrBllgMtrPk);
	}

	/**
	 * set  DS_CONTR_BLLG_MTR_PK.
	 * @param data DS_CONTR_BLLG_MTR_PK
	 */
	public void setDsContrBllgMtrPk(String data) {
		inputValue(dsContrBllgMtrPk,data);
	}

	/**
	 * get  XX_FROM_DT(year).
	 * @return XX_FROM_DT(Year)
	 */
	public String getXxFromDt_y() {
		return outputValue(xxFromDt, VALUE_YEAR);
	}

	/**
	 * set  XX_FROM_DT(year).
	 * @param data XX_FROM_DT(Year)
	 */
	public void setXxFromDt_y(String data) {
		inputValue(xxFromDt, data, VALUE_YEAR);
	}

	/**
	 * get  XX_FROM_DT(month).
	 * @return XX_FROM_DT(Month)
	 */
	public String getXxFromDt_m() {
		return outputValue(xxFromDt, VALUE_MONTH);
	}

	/**
	 * set  XX_FROM_DT(month).
	 * @param data XX_FROM_DT(Month)
	 */
	public void setXxFromDt_m(String data) {
		inputValue(xxFromDt, data, VALUE_MONTH);
	}

	/**
	 * get  XX_FROM_DT(day).
	 * @return XX_FROM_DT(Day)
	 */
	public String getXxFromDt_d() {
		return outputValue(xxFromDt, VALUE_DAY);
	}

	/**
	 * set  XX_FROM_DT(day).
	 * @param data XX_FROM_DT(Day)
	 */
	public void setXxFromDt_d(String data) {
		inputValue(xxFromDt, data, VALUE_DAY);
	}

	/**
	 * get  XX_PAGE_SHOW_FROM_NUM.
	 * @return XX_PAGE_SHOW_FROM_NUM
	 */
	public String getXxPageShowFromNum() {
		return outputValue(xxPageShowFromNum);
	}

	/**
	 * set  XX_PAGE_SHOW_FROM_NUM.
	 * @param data XX_PAGE_SHOW_FROM_NUM
	 */
	public void setXxPageShowFromNum(String data) {
		inputValue(xxPageShowFromNum,data);
	}

	/**
	 * get  XX_PAGE_SHOW_TO_NUM.
	 * @return XX_PAGE_SHOW_TO_NUM
	 */
	public String getXxPageShowToNum() {
		return outputValue(xxPageShowToNum);
	}

	/**
	 * set  XX_PAGE_SHOW_TO_NUM.
	 * @param data XX_PAGE_SHOW_TO_NUM
	 */
	public void setXxPageShowToNum(String data) {
		inputValue(xxPageShowToNum,data);
	}

	/**
	 * get  XX_PAGE_SHOW_OF_NUM.
	 * @return XX_PAGE_SHOW_OF_NUM
	 */
	public String getXxPageShowOfNum() {
		return outputValue(xxPageShowOfNum);
	}

	/**
	 * set  XX_PAGE_SHOW_OF_NUM.
	 * @param data XX_PAGE_SHOW_OF_NUM
	 */
	public void setXxPageShowOfNum(String data) {
		inputValue(xxPageShowOfNum,data);
	}

	/**
	 * get  DS_CONTR_STS_NM_A1.
	 * @param idx1 List Number
	 * @return DS_CONTR_STS_NM_A1
	 */
	public String getDsContrStsNm_A1(int idx1) {
		return outputValue(A, idx1, dsContrStsNm_A1);
	}

	/**
	 * set  DS_CONTR_STS_NM_A1.
	 * @param data DS_CONTR_STS_NM_A1Array
	 */
	public void setDsContrStsNm_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsContrStsNm_A1, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_STS_NM_A2.
	 * @param idx1 List Number
	 * @return DS_CONTR_STS_NM_A2
	 */
	public String getDsContrStsNm_A2(int idx1) {
		return outputValue(A, idx1, dsContrStsNm_A2);
	}

	/**
	 * set  DS_CONTR_STS_NM_A2.
	 * @param data DS_CONTR_STS_NM_A2Array
	 */
	public void setDsContrStsNm_A2(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsContrStsNm_A2, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_TRK_RSN_DESC_TXT.
	 * @param idx1 List Number
	 * @return DS_CONTR_TRK_RSN_DESC_TXT
	 */
	public String getDsContrTrkRsnDescTxt(int idx1) {
		return outputValue(A, idx1, dsContrTrkRsnDescTxt);
	}

	/**
	 * set  DS_CONTR_TRK_RSN_DESC_TXT.
	 * @param data DS_CONTR_TRK_RSN_DESC_TXTArray
	 */
	public void setDsContrTrkRsnDescTxt(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsContrTrkRsnDescTxt, data[j]);
		}
	}

	/**
	 * get  STS_MEMO_TXT.
	 * @param idx1 List Number
	 * @return STS_MEMO_TXT
	 */
	public String getStsMemoTxt(int idx1) {
		return outputValue(A, idx1, stsMemoTxt);
	}

	/**
	 * set  STS_MEMO_TXT.
	 * @param data STS_MEMO_TXTArray
	 */
	public void setStsMemoTxt(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, stsMemoTxt, data[j]);
		}
	}

	/**
	 * get  STS_MEMO_UPD_FULL_PSN_NM.
	 * @param idx1 List Number
	 * @return STS_MEMO_UPD_FULL_PSN_NM
	 */
	public String getStsMemoUpdFullPsnNm(int idx1) {
		return outputValue(A, idx1, stsMemoUpdFullPsnNm);
	}

	/**
	 * set  STS_MEMO_UPD_FULL_PSN_NM.
	 * @param data STS_MEMO_UPD_FULL_PSN_NMArray
	 */
	public void setStsMemoUpdFullPsnNm(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, stsMemoUpdFullPsnNm, data[j]);
		}
	}

	/**
	 * get  XX_DT_TM.
	 * @param idx1 List Number
	 * @return XX_DT_TM
	 */
	public String getXxDtTm(int idx1) {
		return outputValue(A, idx1, xxDtTm);
	}

	/**
	 * set  XX_DT_TM.
	 * @param data XX_DT_TMArray
	 */
	public void setXxDtTm(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxDtTm, data[j]);
		}
	}

}

