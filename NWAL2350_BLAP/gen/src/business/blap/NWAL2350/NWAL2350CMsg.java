//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20170206160944000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NWAL2350CMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NWAL2350;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NWAL2350 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NWAL2350CMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** DS_IMPT_ORD_PK*/
	public final EZDCBigDecimalItem              dsImptOrdPk;

    /** NEGO_DEAL_AMT*/
	public final EZDCBigDecimalItem              negoDealAmt;

    /** TOT_REP_REV_AMT*/
	public final EZDCBigDecimalItem              totRepRevAmt;

    /** SOM_FINAL_FL_AMT*/
	public final EZDCBigDecimalItem              somFinalFlAmt;

    /** SOM_MKUP_AMT*/
	public final EZDCBigDecimalItem              somMkupAmt;

    /** GP_WOT_COST_TRNSF_RATE*/
	public final EZDCBigDecimalItem              gpWotCostTrnsfRate;

    /** GP_COST_PCT_TRNSF_RATE*/
	public final EZDCBigDecimalItem              gpCostPctTrnsfRate;

    /** LEASE_CMPY_NM*/
	public final EZDCStringItem              leaseCmpyNm;

    /** LEASE_PMT_AMT*/
	public final EZDCBigDecimalItem              leasePmtAmt;

    /** LEASE_TERM_MTH_AOT*/
	public final EZDCBigDecimalItem              leaseTermMthAot;

    /** SOM_TOT_FIN_AMT*/
	public final EZDCBigDecimalItem              somTotFinAmt;

    /** LEASE_TP_TXT*/
	public final EZDCStringItem              leaseTpTxt;

    /** MSRP_LIST_PRC_AMT*/
	public final EZDCBigDecimalItem              msrpListPrcAmt;

    /** EXT_FL_PRC_AMT*/
	public final EZDCBigDecimalItem              extFlPrcAmt;

    /** FL_ADJ_AMT*/
	public final EZDCBigDecimalItem              flAdjAmt;

    /** CSMP_IND_SOM_TXT*/
	public final EZDCStringItem              csmpIndSomTxt;

    /** CSMP_CR_AMT*/
	public final EZDCBigDecimalItem              csmpCrAmt;

    /** CSMP_CONTR_NUM*/
	public final EZDCStringItem              csmpContrNum;

    /** PRC_CATG_CD*/
	public final EZDCStringItem              prcCatgCd;

    /** SOM_BYOT_FIN_AMT*/
	public final EZDCBigDecimalItem              somByotFinAmt;

    /** SOM_SVC_REV_TRNSF_AMT*/
	public final EZDCBigDecimalItem              somSvcRevTrnsfAmt;

    /** SVC_COST_TRNSF_AMT*/
	public final EZDCBigDecimalItem              svcCostTrnsfAmt;

    /** SBSCR_SVC_AMT*/
	public final EZDCBigDecimalItem              sbscrSvcAmt;

    /** SOM_SVC_FIN_AMT*/
	public final EZDCBigDecimalItem              somSvcFinAmt;

    /** SOM_SPLY_FIN_AMT*/
	public final EZDCBigDecimalItem              somSplyFinAmt;

    /** SOM_PRMO_AMT*/
	public final EZDCBigDecimalItem              somPrmoAmt;

    /** SOM_TOT_COST_TRNSF_AMT*/
	public final EZDCBigDecimalItem              somTotCostTrnsfAmt;

    /** PRO_SVC_AMT*/
	public final EZDCBigDecimalItem              proSvcAmt;

    /** SOM_CBS_INV_AMT*/
	public final EZDCBigDecimalItem              somCbsInvAmt;

    /** SOM_TAX_ABLE_AMT*/
	public final EZDCBigDecimalItem              somTaxAbleAmt;

    /** SOM_TAX_AMT*/
	public final EZDCBigDecimalItem              somTaxAmt;

    /** NON_TAX_ABLE_AMT*/
	public final EZDCBigDecimalItem              nonTaxAbleAmt;

    /** GP_EQUIP_REV_AMT*/
	public final EZDCBigDecimalItem              gpEquipRevAmt;

    /** INTER_RG_REV_AMT*/
	public final EZDCBigDecimalItem              interRgRevAmt;

    /** SPIFF_REV_AMT*/
	public final EZDCBigDecimalItem              spiffRevAmt;

    /** INTER_TRTY_REV_AMT*/
	public final EZDCBigDecimalItem              interTrtyRevAmt;

    /** UNIT_SLD_REV_AMT*/
	public final EZDCBigDecimalItem              unitSldRevAmt;

    /** GP_EQUIP_EARN_AMT*/
	public final EZDCBigDecimalItem              gpEquipEarnAmt;

    /** INTER_RG_EARN_AMT*/
	public final EZDCBigDecimalItem              interRgEarnAmt;

    /** SPIFF_EARN_AMT*/
	public final EZDCBigDecimalItem              spiffEarnAmt;

    /** INTER_TRTY_EARN_AMT*/
	public final EZDCBigDecimalItem              interTrtyEarnAmt;

    /** UNIT_SLD_EARN_AMT*/
	public final EZDCBigDecimalItem              unitSldEarnAmt;

    /** SOM_TOT_EARN_AMT*/
	public final EZDCBigDecimalItem              somTotEarnAmt;


	/**
	 * NWAL2350CMsg is constructor.
	 * The initialization when the instance of NWAL2350CMsg is generated.
	 */
	public NWAL2350CMsg() {
		this(false, -1);
	}

	/**
	 * NWAL2350CMsg is constructor.
	 * The initialization when the instance of NWAL2350CMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NWAL2350CMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		dsImptOrdPk = (EZDCBigDecimalItem)newItem("dsImptOrdPk");
		negoDealAmt = (EZDCBigDecimalItem)newItem("negoDealAmt");
		totRepRevAmt = (EZDCBigDecimalItem)newItem("totRepRevAmt");
		somFinalFlAmt = (EZDCBigDecimalItem)newItem("somFinalFlAmt");
		somMkupAmt = (EZDCBigDecimalItem)newItem("somMkupAmt");
		gpWotCostTrnsfRate = (EZDCBigDecimalItem)newItem("gpWotCostTrnsfRate");
		gpCostPctTrnsfRate = (EZDCBigDecimalItem)newItem("gpCostPctTrnsfRate");
		leaseCmpyNm = (EZDCStringItem)newItem("leaseCmpyNm");
		leasePmtAmt = (EZDCBigDecimalItem)newItem("leasePmtAmt");
		leaseTermMthAot = (EZDCBigDecimalItem)newItem("leaseTermMthAot");
		somTotFinAmt = (EZDCBigDecimalItem)newItem("somTotFinAmt");
		leaseTpTxt = (EZDCStringItem)newItem("leaseTpTxt");
		msrpListPrcAmt = (EZDCBigDecimalItem)newItem("msrpListPrcAmt");
		extFlPrcAmt = (EZDCBigDecimalItem)newItem("extFlPrcAmt");
		flAdjAmt = (EZDCBigDecimalItem)newItem("flAdjAmt");
		csmpIndSomTxt = (EZDCStringItem)newItem("csmpIndSomTxt");
		csmpCrAmt = (EZDCBigDecimalItem)newItem("csmpCrAmt");
		csmpContrNum = (EZDCStringItem)newItem("csmpContrNum");
		prcCatgCd = (EZDCStringItem)newItem("prcCatgCd");
		somByotFinAmt = (EZDCBigDecimalItem)newItem("somByotFinAmt");
		somSvcRevTrnsfAmt = (EZDCBigDecimalItem)newItem("somSvcRevTrnsfAmt");
		svcCostTrnsfAmt = (EZDCBigDecimalItem)newItem("svcCostTrnsfAmt");
		sbscrSvcAmt = (EZDCBigDecimalItem)newItem("sbscrSvcAmt");
		somSvcFinAmt = (EZDCBigDecimalItem)newItem("somSvcFinAmt");
		somSplyFinAmt = (EZDCBigDecimalItem)newItem("somSplyFinAmt");
		somPrmoAmt = (EZDCBigDecimalItem)newItem("somPrmoAmt");
		somTotCostTrnsfAmt = (EZDCBigDecimalItem)newItem("somTotCostTrnsfAmt");
		proSvcAmt = (EZDCBigDecimalItem)newItem("proSvcAmt");
		somCbsInvAmt = (EZDCBigDecimalItem)newItem("somCbsInvAmt");
		somTaxAbleAmt = (EZDCBigDecimalItem)newItem("somTaxAbleAmt");
		somTaxAmt = (EZDCBigDecimalItem)newItem("somTaxAmt");
		nonTaxAbleAmt = (EZDCBigDecimalItem)newItem("nonTaxAbleAmt");
		gpEquipRevAmt = (EZDCBigDecimalItem)newItem("gpEquipRevAmt");
		interRgRevAmt = (EZDCBigDecimalItem)newItem("interRgRevAmt");
		spiffRevAmt = (EZDCBigDecimalItem)newItem("spiffRevAmt");
		interTrtyRevAmt = (EZDCBigDecimalItem)newItem("interTrtyRevAmt");
		unitSldRevAmt = (EZDCBigDecimalItem)newItem("unitSldRevAmt");
		gpEquipEarnAmt = (EZDCBigDecimalItem)newItem("gpEquipEarnAmt");
		interRgEarnAmt = (EZDCBigDecimalItem)newItem("interRgEarnAmt");
		spiffEarnAmt = (EZDCBigDecimalItem)newItem("spiffEarnAmt");
		interTrtyEarnAmt = (EZDCBigDecimalItem)newItem("interTrtyEarnAmt");
		unitSldEarnAmt = (EZDCBigDecimalItem)newItem("unitSldEarnAmt");
		somTotEarnAmt = (EZDCBigDecimalItem)newItem("somTotEarnAmt");
	}

	/**
	 * get the type of array which is stored
	 * @return NWAL2350CMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NWAL2350CMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"dsImptOrdPk", "dsImptOrdPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"negoDealAmt", "negoDealAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"totRepRevAmt", "totRepRevAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"somFinalFlAmt", "somFinalFlAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"somMkupAmt", "somMkupAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"gpWotCostTrnsfRate", "gpWotCostTrnsfRate", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"gpCostPctTrnsfRate", "gpCostPctTrnsfRate", null, null, TYPE_SEISU_SYOSU, "18", "6"},
	{"leaseCmpyNm", "leaseCmpyNm", null, null, TYPE_HANKAKUEISU, "250", null},
	{"leasePmtAmt", "leasePmtAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"leaseTermMthAot", "leaseTermMthAot", null, null, TYPE_SEISU_SYOSU, "3", "0"},
	{"somTotFinAmt", "somTotFinAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"leaseTpTxt", "leaseTpTxt", null, null, TYPE_HANKAKUEISU, "100", null},
	{"msrpListPrcAmt", "msrpListPrcAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"extFlPrcAmt", "extFlPrcAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"flAdjAmt", "flAdjAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"csmpIndSomTxt", "csmpIndSomTxt", null, null, TYPE_HANKAKUEISU, "5", null},
	{"csmpCrAmt", "csmpCrAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"csmpContrNum", "csmpContrNum", null, null, TYPE_HANKAKUEISU, "15", null},
	{"prcCatgCd", "prcCatgCd", null, null, TYPE_HANKAKUEISU, "10", null},
	{"somByotFinAmt", "somByotFinAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"somSvcRevTrnsfAmt", "somSvcRevTrnsfAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"svcCostTrnsfAmt", "svcCostTrnsfAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"sbscrSvcAmt", "sbscrSvcAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"somSvcFinAmt", "somSvcFinAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"somSplyFinAmt", "somSplyFinAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"somPrmoAmt", "somPrmoAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"somTotCostTrnsfAmt", "somTotCostTrnsfAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"proSvcAmt", "proSvcAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"somCbsInvAmt", "somCbsInvAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"somTaxAbleAmt", "somTaxAbleAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"somTaxAmt", "somTaxAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"nonTaxAbleAmt", "nonTaxAbleAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"gpEquipRevAmt", "gpEquipRevAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"interRgRevAmt", "interRgRevAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"spiffRevAmt", "spiffRevAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"interTrtyRevAmt", "interTrtyRevAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"unitSldRevAmt", "unitSldRevAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"gpEquipEarnAmt", "gpEquipEarnAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"interRgEarnAmt", "interRgEarnAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"spiffEarnAmt", "spiffEarnAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"interTrtyEarnAmt", "interTrtyEarnAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"unitSldEarnAmt", "unitSldEarnAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"somTotEarnAmt", "somTotEarnAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"DS_IMPT_ORD_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsImptOrdPk
        {"NEGO_DEAL_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//negoDealAmt
        {"TOT_REP_REV_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//totRepRevAmt
        {"SOM_FINAL_FL_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//somFinalFlAmt
        {"SOM_MKUP_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//somMkupAmt
        {"GP_WOT_COST_TRNSF_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//gpWotCostTrnsfRate
        {"GP_COST_PCT_TRNSF_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//gpCostPctTrnsfRate
        {"LEASE_CMPY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//leaseCmpyNm
        {"LEASE_PMT_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//leasePmtAmt
        {"LEASE_TERM_MTH_AOT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//leaseTermMthAot
        {"SOM_TOT_FIN_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//somTotFinAmt
        {"LEASE_TP_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//leaseTpTxt
        {"MSRP_LIST_PRC_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//msrpListPrcAmt
        {"EXT_FL_PRC_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//extFlPrcAmt
        {"FL_ADJ_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//flAdjAmt
        {"CSMP_IND_SOM_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//csmpIndSomTxt
        {"CSMP_CR_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//csmpCrAmt
        {"CSMP_CONTR_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//csmpContrNum
        {"PRC_CATG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCatgCd
        {"SOM_BYOT_FIN_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//somByotFinAmt
        {"SOM_SVC_REV_TRNSF_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//somSvcRevTrnsfAmt
        {"SVC_COST_TRNSF_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcCostTrnsfAmt
        {"SBSCR_SVC_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//sbscrSvcAmt
        {"SOM_SVC_FIN_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//somSvcFinAmt
        {"SOM_SPLY_FIN_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//somSplyFinAmt
        {"SOM_PRMO_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//somPrmoAmt
        {"SOM_TOT_COST_TRNSF_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//somTotCostTrnsfAmt
        {"PRO_SVC_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//proSvcAmt
        {"SOM_CBS_INV_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//somCbsInvAmt
        {"SOM_TAX_ABLE_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//somTaxAbleAmt
        {"SOM_TAX_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//somTaxAmt
        {"NON_TAX_ABLE_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//nonTaxAbleAmt
        {"GP_EQUIP_REV_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//gpEquipRevAmt
        {"INTER_RG_REV_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//interRgRevAmt
        {"SPIFF_REV_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//spiffRevAmt
        {"INTER_TRTY_REV_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//interTrtyRevAmt
        {"UNIT_SLD_REV_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//unitSldRevAmt
        {"GP_EQUIP_EARN_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//gpEquipEarnAmt
        {"INTER_RG_EARN_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//interRgEarnAmt
        {"SPIFF_EARN_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//spiffEarnAmt
        {"INTER_TRTY_EARN_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//interTrtyEarnAmt
        {"UNIT_SLD_EARN_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//unitSldEarnAmt
        {"SOM_TOT_EARN_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//somTotEarnAmt
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

