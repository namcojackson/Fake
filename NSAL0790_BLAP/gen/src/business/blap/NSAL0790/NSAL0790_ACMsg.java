//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20170321112523000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0790_ACMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NSAL0790;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL0790 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL0790_ACMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** SER_NUM_A*/
	public final EZDCStringItem              serNum_A;

    /** MTR_LB_DESC_TXT_A*/
	public final EZDCStringItem              mtrLbDescTxt_A;

    /** CUR_READ_MTR_CNT_A*/
	public final EZDCBigDecimalItem              curReadMtrCnt_A;

    /** TEST_COPY_QTY_A*/
	public final EZDCBigDecimalItem              testCopyQty_A;

    /** CUR_BLLG_PER_FROM_DT_A*/
	public final EZDCDateItem              curBllgPerFromDt_A;

    /** CUR_BLLG_PER_THRU_DT_A*/
	public final EZDCDateItem              curBllgPerThruDt_A;

    /** MTR_ENTRY_CPLT_FLG_A*/
	public final EZDCStringItem              mtrEntryCpltFlg_A;

    /** PRI_READ_MTR_CNT_A*/
	public final EZDCBigDecimalItem              priReadMtrCnt_A;

    /** FLEET_CALC_PROC_DESC_TXT_A*/
	public final EZDCStringItem              fleetCalcProcDescTxt_A;

    /** VLD_MSG_TXT_A*/
	public final EZDCStringItem              vldMsgTxt_A;

    /** SVC_MACH_MSTR_PK_A*/
	public final EZDCBigDecimalItem              svcMachMstrPk_A;

    /** MTR_READ_DT_A*/
	public final EZDCDateItem              mtrReadDt_A;

    /** FLEET_READ_ROLL_UP_PK_A*/
	public final EZDCBigDecimalItem              fleetReadRollUpPk_A;

    /** DS_CONTR_BLLG_MTR_PK_A*/
	public final EZDCBigDecimalItem              dsContrBllgMtrPk_A;

    /** FLEET_CALC_PROC_CD_A*/
	public final EZDCStringItem              fleetCalcProcCd_A;

    /** XX_ROW_NUM_A*/
	public final EZDCBigDecimalItem              xxRowNum_A;

    /** XX_BTN_FLG_A*/
	public final EZDCStringItem              xxBtnFlg_A;


	/**
	 * NSAL0790_ACMsg is constructor.
	 * The initialization when the instance of NSAL0790_ACMsg is generated.
	 */
	public NSAL0790_ACMsg() {
		this(false, -1);
	}

	/**
	 * NSAL0790_ACMsg is constructor.
	 * The initialization when the instance of NSAL0790_ACMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL0790_ACMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		serNum_A = (EZDCStringItem)newItem("serNum_A");
		mtrLbDescTxt_A = (EZDCStringItem)newItem("mtrLbDescTxt_A");
		curReadMtrCnt_A = (EZDCBigDecimalItem)newItem("curReadMtrCnt_A");
		testCopyQty_A = (EZDCBigDecimalItem)newItem("testCopyQty_A");
		curBllgPerFromDt_A = (EZDCDateItem)newItem("curBllgPerFromDt_A");
		curBllgPerThruDt_A = (EZDCDateItem)newItem("curBllgPerThruDt_A");
		mtrEntryCpltFlg_A = (EZDCStringItem)newItem("mtrEntryCpltFlg_A");
		priReadMtrCnt_A = (EZDCBigDecimalItem)newItem("priReadMtrCnt_A");
		fleetCalcProcDescTxt_A = (EZDCStringItem)newItem("fleetCalcProcDescTxt_A");
		vldMsgTxt_A = (EZDCStringItem)newItem("vldMsgTxt_A");
		svcMachMstrPk_A = (EZDCBigDecimalItem)newItem("svcMachMstrPk_A");
		mtrReadDt_A = (EZDCDateItem)newItem("mtrReadDt_A");
		fleetReadRollUpPk_A = (EZDCBigDecimalItem)newItem("fleetReadRollUpPk_A");
		dsContrBllgMtrPk_A = (EZDCBigDecimalItem)newItem("dsContrBllgMtrPk_A");
		fleetCalcProcCd_A = (EZDCStringItem)newItem("fleetCalcProcCd_A");
		xxRowNum_A = (EZDCBigDecimalItem)newItem("xxRowNum_A");
		xxBtnFlg_A = (EZDCStringItem)newItem("xxBtnFlg_A");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL0790_ACMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL0790_ACMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"serNum_A", "serNum_A", "A", null, TYPE_HANKAKUEISU, "30", null},
	{"mtrLbDescTxt_A", "mtrLbDescTxt_A", "A", null, TYPE_HANKAKUEISU, "50", null},
	{"curReadMtrCnt_A", "curReadMtrCnt_A", "A", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"testCopyQty_A", "testCopyQty_A", "A", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"curBllgPerFromDt_A", "curBllgPerFromDt_A", "A", null, TYPE_NENTSUKIHI, "8", null},
	{"curBllgPerThruDt_A", "curBllgPerThruDt_A", "A", null, TYPE_NENTSUKIHI, "8", null},
	{"mtrEntryCpltFlg_A", "mtrEntryCpltFlg_A", "A", null, TYPE_HANKAKUEISU, "1", null},
	{"priReadMtrCnt_A", "priReadMtrCnt_A", "A", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"fleetCalcProcDescTxt_A", "fleetCalcProcDescTxt_A", "A", null, TYPE_HANKAKUEISU, "50", null},
	{"vldMsgTxt_A", "vldMsgTxt_A", "A", null, TYPE_HANKAKUEISU, "1000", null},
	{"svcMachMstrPk_A", "svcMachMstrPk_A", "A", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"mtrReadDt_A", "mtrReadDt_A", "A", null, TYPE_NENTSUKIHI, "8", null},
	{"fleetReadRollUpPk_A", "fleetReadRollUpPk_A", "A", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrBllgMtrPk_A", "dsContrBllgMtrPk_A", "A", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"fleetCalcProcCd_A", "fleetCalcProcCd_A", "A", null, TYPE_HANKAKUEISU, "1", null},
	{"xxRowNum_A", "xxRowNum_A", "A", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxBtnFlg_A", "xxBtnFlg_A", "A", null, TYPE_HANKAKUEISU, "1", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"SER_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNum_A
        {"MTR_LB_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrLbDescTxt_A
        {"CUR_READ_MTR_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//curReadMtrCnt_A
        {"TEST_COPY_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//testCopyQty_A
        {"CUR_BLLG_PER_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//curBllgPerFromDt_A
        {"CUR_BLLG_PER_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//curBllgPerThruDt_A
        {"MTR_ENTRY_CPLT_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrEntryCpltFlg_A
        {"PRI_READ_MTR_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//priReadMtrCnt_A
        {"FLEET_CALC_PROC_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//fleetCalcProcDescTxt_A
        {"VLD_MSG_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//vldMsgTxt_A
        {"SVC_MACH_MSTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachMstrPk_A
        {"MTR_READ_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrReadDt_A
        {"FLEET_READ_ROLL_UP_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//fleetReadRollUpPk_A
        {"DS_CONTR_BLLG_MTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgMtrPk_A
        {"FLEET_CALC_PROC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//fleetCalcProcCd_A
        {"XX_ROW_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRowNum_A
        {"XX_BTN_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxBtnFlg_A
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

