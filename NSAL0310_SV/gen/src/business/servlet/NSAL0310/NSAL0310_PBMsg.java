//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20230417152455000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0310_PBMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NSAL0310;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL0310 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL0310_PBMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** SVC_CONFIG_MSTR_PK_P*/
	public final EZDBBigDecimalItem              svcConfigMstrPk_P;

    /** SVC_MACH_MSTR_PK_P*/
	public final EZDBBigDecimalItem              svcMachMstrPk_P;

    /** CONTR_EFF_FROM_DT_P*/
	public final EZDBDateItem              contrEffFromDt_P;

    /** CONTR_EFF_THRU_DT_P*/
	public final EZDBDateItem              contrEffThruDt_P;

    /** BLLG_FLG_P*/
	public final EZDBStringItem              bllgFlg_P;

    /** PRNT_DS_CONTR_DTL_PK_P*/
	public final EZDBBigDecimalItem              prntDsContrDtlPk_P;

    /** DS_CONTR_DTL_PK_P1*/
	public final EZDBBigDecimalItem              dsContrDtlPk_P1;


	/**
	 * NSAL0310_PBMsg is constructor.
	 * The initialization when the instance of NSAL0310_PBMsg is generated.
	 */
	public NSAL0310_PBMsg() {
		this(false, -1);
	}

	/**
	 * NSAL0310_PBMsg is constructor.
	 * The initialization when the instance of NSAL0310_PBMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL0310_PBMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		svcConfigMstrPk_P = (EZDBBigDecimalItem)newItem("svcConfigMstrPk_P");
		svcMachMstrPk_P = (EZDBBigDecimalItem)newItem("svcMachMstrPk_P");
		contrEffFromDt_P = (EZDBDateItem)newItem("contrEffFromDt_P");
		contrEffThruDt_P = (EZDBDateItem)newItem("contrEffThruDt_P");
		bllgFlg_P = (EZDBStringItem)newItem("bllgFlg_P");
		prntDsContrDtlPk_P = (EZDBBigDecimalItem)newItem("prntDsContrDtlPk_P");
		dsContrDtlPk_P1 = (EZDBBigDecimalItem)newItem("dsContrDtlPk_P1");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL0310_PBMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL0310_PBMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"svcConfigMstrPk_P", "svcConfigMstrPk_P", "P", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"svcMachMstrPk_P", "svcMachMstrPk_P", "P", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"contrEffFromDt_P", "contrEffFromDt_P", "P", null, TYPE_NENTSUKIHI, "8", null},
	{"contrEffThruDt_P", "contrEffThruDt_P", "P", null, TYPE_NENTSUKIHI, "8", null},
	{"bllgFlg_P", "bllgFlg_P", "P", null, TYPE_HANKAKUEISU, "1", null},
	{"prntDsContrDtlPk_P", "prntDsContrDtlPk_P", "P", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrDtlPk_P1", "dsContrDtlPk_P1", "P1", null, TYPE_SEISU_SYOSU, "28", "0"},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"SVC_CONFIG_MSTR_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcConfigMstrPk_P
        {"SVC_MACH_MSTR_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachMstrPk_P
        {"CONTR_EFF_FROM_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//contrEffFromDt_P
        {"CONTR_EFF_THRU_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//contrEffThruDt_P
        {"BLLG_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgFlg_P
        {"PRNT_DS_CONTR_DTL_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prntDsContrDtlPk_P
        {"DS_CONTR_DTL_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrDtlPk_P1
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

