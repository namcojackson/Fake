//This file was automatically generated by Common Business Component Interface Definition Document and XLA200710010.
// Generated on    :20180221164226000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :CommonBusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NWXC011002PMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.parts;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NWXC011002 Common Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NWXC011002PMsg extends EZDPMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** TRX_LINE_NUM*/
	public final EZDPStringItem              trxLineNum;

    /** TRX_LINE_SUB_NUM*/
	public final EZDPStringItem              trxLineSubNum;

    /** CONFIG_CATG_CD*/
	public final EZDPStringItem              configCatgCd;

    /** PRC_BASE_DT*/
	public final EZDPDateItem              prcBaseDt;

    /** SHIP_TO_CUST_CD*/
	public final EZDPStringItem              shipToCustCd;

    /** DS_ACCT_NUM*/
	public final EZDPStringItem              dsAcctNum;

    /** DS_ACCT_NM*/
	public final EZDPStringItem              dsAcctNm;

    /** DS_CUST_SIC_CD*/
	public final EZDPStringItem              dsCustSicCd;

    /** LOC_NUM*/
	public final EZDPStringItem              locNum;

    /** DS_ACCT_CLS_CD*/
	public final EZDPStringItem              dsAcctClsCd;

    /** DS_ACCT_TP_CD*/
	public final EZDPStringItem              dsAcctTpCd;

    /** DS_ACCT_DLR_CD*/
	public final EZDPStringItem              dsAcctDlrCd;

    /** DS_ACCT_GRP_CD*/
	public final EZDPStringItem              dsAcctGrpCd;

    /** COA_CH_CD*/
	public final EZDPStringItem              coaChCd;

    /** CSMP_NUM*/
	public final EZDPStringItem              csmpNum;

    /** DLR_REF_NUM*/
	public final EZDPStringItem              dlrRefNum;

    /** PRC_CONTR_NUM*/
	public final EZDPStringItem              prcContrNum;

    /** FRT_COND_CD*/
	public final EZDPStringItem              frtCondCd;

    /** ST_CD*/
	public final EZDPStringItem              stCd;

    /** CTRY_CD*/
	public final EZDPStringItem              ctryCd;

    /** POST_CD*/
	public final EZDPStringItem              postCd;

    /** SHPG_SVC_LVL_CD*/
	public final EZDPStringItem              shpgSvcLvlCd;

    /** FRT_CHRG_TO_CD*/
	public final EZDPStringItem              frtChrgToCd;

    /** FRT_CHRG_METH_CD*/
	public final EZDPStringItem              frtChrgMethCd;

    /** UNIT_NET_WT*/
	public final EZDPBigDecimalItem              unitNetWt;

    /** ORD_QTY*/
	public final EZDPBigDecimalItem              ordQty;

    /** INV_QTY*/
	public final EZDPBigDecimalItem              invQty;

    /** XX_PRC_CLO_FLG*/
	public final EZDPStringItem              xxPrcCloFlg;

    /** SPEC_COND_PRC_PK*/
	public final EZDPBigDecimalItem              specCondPrcPk;

    /** CCY_CD*/
	public final EZDPStringItem              ccyCd;

    /** xxMsgIdList*/
	public final business.parts.NWXC011002_xxMsgIdListPMsgArray              xxMsgIdList;

    /** $$NWXC011003PMsg*/
	public final business.parts.NWXC011003PMsgArray              NWXC011003PMsg;


	/**
	 * NWXC011002PMsg is constructor.
	 * The initialization when the instance of NWXC011002PMsg is generated.
	 */
	public NWXC011002PMsg() {
		this(false, -1);
	}

	/**
	 * NWXC011002PMsg is constructor.
	 * The initialization when the instance of NWXC011002PMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NWXC011002PMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		trxLineNum = (EZDPStringItem)newItem("trxLineNum");
		trxLineSubNum = (EZDPStringItem)newItem("trxLineSubNum");
		configCatgCd = (EZDPStringItem)newItem("configCatgCd");
		prcBaseDt = (EZDPDateItem)newItem("prcBaseDt");
		shipToCustCd = (EZDPStringItem)newItem("shipToCustCd");
		dsAcctNum = (EZDPStringItem)newItem("dsAcctNum");
		dsAcctNm = (EZDPStringItem)newItem("dsAcctNm");
		dsCustSicCd = (EZDPStringItem)newItem("dsCustSicCd");
		locNum = (EZDPStringItem)newItem("locNum");
		dsAcctClsCd = (EZDPStringItem)newItem("dsAcctClsCd");
		dsAcctTpCd = (EZDPStringItem)newItem("dsAcctTpCd");
		dsAcctDlrCd = (EZDPStringItem)newItem("dsAcctDlrCd");
		dsAcctGrpCd = (EZDPStringItem)newItem("dsAcctGrpCd");
		coaChCd = (EZDPStringItem)newItem("coaChCd");
		csmpNum = (EZDPStringItem)newItem("csmpNum");
		dlrRefNum = (EZDPStringItem)newItem("dlrRefNum");
		prcContrNum = (EZDPStringItem)newItem("prcContrNum");
		frtCondCd = (EZDPStringItem)newItem("frtCondCd");
		stCd = (EZDPStringItem)newItem("stCd");
		ctryCd = (EZDPStringItem)newItem("ctryCd");
		postCd = (EZDPStringItem)newItem("postCd");
		shpgSvcLvlCd = (EZDPStringItem)newItem("shpgSvcLvlCd");
		frtChrgToCd = (EZDPStringItem)newItem("frtChrgToCd");
		frtChrgMethCd = (EZDPStringItem)newItem("frtChrgMethCd");
		unitNetWt = (EZDPBigDecimalItem)newItem("unitNetWt");
		ordQty = (EZDPBigDecimalItem)newItem("ordQty");
		invQty = (EZDPBigDecimalItem)newItem("invQty");
		xxPrcCloFlg = (EZDPStringItem)newItem("xxPrcCloFlg");
		specCondPrcPk = (EZDPBigDecimalItem)newItem("specCondPrcPk");
		ccyCd = (EZDPStringItem)newItem("ccyCd");
		xxMsgIdList = (business.parts.NWXC011002_xxMsgIdListPMsgArray)newMsgArray("xxMsgIdList");
		NWXC011003PMsg = (business.parts.NWXC011003PMsgArray)newMsgArray("NWXC011003PMsg");
	}

	/**
	 * get the type of array which is stored
	 * @return NWXC011002PMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NWXC011002PMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"trxLineNum", "trxLineNum", null, null, TYPE_HANKAKUEISU, "3", null},
	{"trxLineSubNum", "trxLineSubNum", null, null, TYPE_HANKAKUEISU, "3", null},
	{"configCatgCd", "configCatgCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"prcBaseDt", "prcBaseDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"shipToCustCd", "shipToCustCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"dsAcctNum", "dsAcctNum", null, null, TYPE_HANKAKUEISU, "20", null},
	{"dsAcctNm", "dsAcctNm", null, null, TYPE_HANKAKUEISU, "360", null},
	{"dsCustSicCd", "dsCustSicCd", null, null, TYPE_HANKAKUEISU, "30", null},
	{"locNum", "locNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"dsAcctClsCd", "dsAcctClsCd", null, null, TYPE_HANKAKUEISU, "3", null},
	{"dsAcctTpCd", "dsAcctTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"dsAcctDlrCd", "dsAcctDlrCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"dsAcctGrpCd", "dsAcctGrpCd", null, null, TYPE_HANKAKUEISU, "28", null},
	{"coaChCd", "coaChCd", null, null, TYPE_HANKAKUEISU, "3", null},
	{"csmpNum", "csmpNum", null, null, TYPE_HANKAKUEISU, "15", null},
	{"dlrRefNum", "dlrRefNum", null, null, TYPE_HANKAKUEISU, "20", null},
	{"prcContrNum", "prcContrNum", null, null, TYPE_HANKAKUEISU, "50", null},
	{"frtCondCd", "frtCondCd", null, null, TYPE_HANKAKUEISU, "3", null},
	{"stCd", "stCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"ctryCd", "ctryCd", null, null, TYPE_HANKAKUEISU, "3", null},
	{"postCd", "postCd", null, null, TYPE_HANKAKUEISU, "15", null},
	{"shpgSvcLvlCd", "shpgSvcLvlCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"frtChrgToCd", "frtChrgToCd", null, null, TYPE_HANKAKUEISU, "1", null},
	{"frtChrgMethCd", "frtChrgMethCd", null, null, TYPE_HANKAKUEISU, "1", null},
	{"unitNetWt", "unitNetWt", null, null, TYPE_SEISU_SYOSU, "17", "6"},
	{"ordQty", "ordQty", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"invQty", "invQty", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"xxPrcCloFlg", "xxPrcCloFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"specCondPrcPk", "specCondPrcPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"ccyCd", "ccyCd", null, null, TYPE_HANKAKUEISU, "3", null},
	{"xxMsgIdList", "xxMsgIdList", null, "10", "business.parts.NWXC011002_xxMsgIdListPMsgArray", null, null},
	
	{"NWXC011003PMsg", "NWXC011003PMsg", null, "20", "business.parts.NWXC011003PMsgArray", null, null},
	
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"TRX_LINE_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trxLineNum
        {"TRX_LINE_SUB_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trxLineSubNum
        {"CONFIG_CATG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//configCatgCd
        {"PRC_BASE_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcBaseDt
        {"SHIP_TO_CUST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToCustCd
        {"DS_ACCT_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctNum
        {"DS_ACCT_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctNm
        {"DS_CUST_SIC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsCustSicCd
        {"LOC_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//locNum
        {"DS_ACCT_CLS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctClsCd
        {"DS_ACCT_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctTpCd
        {"DS_ACCT_DLR_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctDlrCd
        {"DS_ACCT_GRP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctGrpCd
        {"COA_CH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaChCd
        {"CSMP_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//csmpNum
        {"DLR_REF_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dlrRefNum
        {"PRC_CONTR_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcContrNum
        {"FRT_COND_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//frtCondCd
        {"ST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//stCd
        {"CTRY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ctryCd
        {"POST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//postCd
        {"SHPG_SVC_LVL_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shpgSvcLvlCd
        {"FRT_CHRG_TO_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//frtChrgToCd
        {"FRT_CHRG_METH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//frtChrgMethCd
        {"UNIT_NET_WT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//unitNetWt
        {"ORD_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordQty
        {"INV_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invQty
        {"XX_PRC_CLO_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPrcCloFlg
        {"SPEC_COND_PRC_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//specCondPrcPk
        {"CCY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ccyCd
		null,	//xxMsgIdList
		null,	//NWXC011003PMsg
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

