//This file was automatically generated by Text File Layout Definition Document and XLA200710010.
// Generated on    :20181207155354000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :TextFileLayoutDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NLCL0290F00FMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.file;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NLCL0290F00 File Layout Message class.
 * @author
 * @version XLA200710010
 */
public class NLCL0290F00FMsg extends EZDFMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** ADJ_TRX_TP_DESC_TXT*/
	public final EZDFStringItem              adjTrxTpDescTxt;

    /** INVTY_LOC_CD*/
	public final EZDFStringItem              invtyLocCd;

    /** RTL_WH_NM*/
	public final EZDFStringItem              rtlWhNm;

    /** MDSE_CD*/
	public final EZDFStringItem              mdseCd;

    /** MDSE_DESC_SHORT_TXT*/
	public final EZDFStringItem              mdseDescShortTxt;

    /** FROM_RTL_SWH_CD*/
	public final EZDFStringItem              fromRtlSwhCd;

    /** TO_RTL_SWH_CD*/
	public final EZDFStringItem              toRtlSwhCd;

    /** ORD_QTY*/
	public final EZDFBigDecimalItem              ordQty;

    /** STK_STS_DESC_TXT_F*/
	public final EZDFStringItem              stkStsDescTxt_F;

    /** STK_STS_DESC_TXT_T*/
	public final EZDFStringItem              stkStsDescTxt_T;

    /** ADJ_CATG_DESC_TXT*/
	public final EZDFStringItem              adjCatgDescTxt;

    /** COA_ACCT_CD*/
	public final EZDFStringItem              coaAcctCd;

    /** INVTY_ORD_LINE_CMNT_TXT*/
	public final EZDFStringItem              invtyOrdLineCmntTxt;

    /** SER_NUM*/
	public final EZDFStringItem              serNum;

    /** SVC_CONFIG_MSTR_PK*/
	public final EZDFBigDecimalItem              svcConfigMstrPk;

    /** SVC_MACH_TP_DESC_TXT*/
	public final EZDFStringItem              svcMachTpDescTxt;

    /** INVTY_ORD_STS_DESC_TXT*/
	public final EZDFStringItem              invtyOrdStsDescTxt;

    /** INVTY_ORD_LINE_COST_AMT*/
	public final EZDFBigDecimalItem              invtyOrdLineCostAmt;

    /** INVTY_ORD_NUM*/
	public final EZDFStringItem              invtyOrdNum;

    /** XX_SCR_ITEM_130_TXT*/
	public final EZDFStringItem              xxScrItem130Txt;

    /** INVTY_AVAL_QTY*/
	public final EZDFBigDecimalItem              invtyAvalQty;


	/**
	 * NLCL0290F00FMsg is constructor.
	 * The initialization when the instance of NLCL0290F00FMsg is generated.
	 */
	public NLCL0290F00FMsg() {
		this(false, -1);
	}

	/**
	 * NLCL0290F00FMsg is constructor.
	 * The initialization when the instance of NLCL0290F00FMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NLCL0290F00FMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		adjTrxTpDescTxt = (EZDFStringItem)newItem("adjTrxTpDescTxt");
		invtyLocCd = (EZDFStringItem)newItem("invtyLocCd");
		rtlWhNm = (EZDFStringItem)newItem("rtlWhNm");
		mdseCd = (EZDFStringItem)newItem("mdseCd");
		mdseDescShortTxt = (EZDFStringItem)newItem("mdseDescShortTxt");
		fromRtlSwhCd = (EZDFStringItem)newItem("fromRtlSwhCd");
		toRtlSwhCd = (EZDFStringItem)newItem("toRtlSwhCd");
		ordQty = (EZDFBigDecimalItem)newItem("ordQty");
		stkStsDescTxt_F = (EZDFStringItem)newItem("stkStsDescTxt_F");
		stkStsDescTxt_T = (EZDFStringItem)newItem("stkStsDescTxt_T");
		adjCatgDescTxt = (EZDFStringItem)newItem("adjCatgDescTxt");
		coaAcctCd = (EZDFStringItem)newItem("coaAcctCd");
		invtyOrdLineCmntTxt = (EZDFStringItem)newItem("invtyOrdLineCmntTxt");
		serNum = (EZDFStringItem)newItem("serNum");
		svcConfigMstrPk = (EZDFBigDecimalItem)newItem("svcConfigMstrPk");
		svcMachTpDescTxt = (EZDFStringItem)newItem("svcMachTpDescTxt");
		invtyOrdStsDescTxt = (EZDFStringItem)newItem("invtyOrdStsDescTxt");
		invtyOrdLineCostAmt = (EZDFBigDecimalItem)newItem("invtyOrdLineCostAmt");
		invtyOrdNum = (EZDFStringItem)newItem("invtyOrdNum");
		xxScrItem130Txt = (EZDFStringItem)newItem("xxScrItem130Txt");
		invtyAvalQty = (EZDFBigDecimalItem)newItem("invtyAvalQty");
	}

	/**
	 * get the type of array which is stored
	 * @return NLCL0290F00FMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NLCL0290F00FMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"adjTrxTpDescTxt", "adjTrxTpDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"invtyLocCd", "invtyLocCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"rtlWhNm", "rtlWhNm", null, null, TYPE_HANKAKUEISU, "30", null},
	{"mdseCd", "mdseCd", null, null, TYPE_HANKAKUEISU, "16", null},
	{"mdseDescShortTxt", "mdseDescShortTxt", null, null, TYPE_HANKAKUEISU, "250", null},
	{"fromRtlSwhCd", "fromRtlSwhCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"toRtlSwhCd", "toRtlSwhCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"ordQty", "ordQty", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"stkStsDescTxt_F", "stkStsDescTxt_F", "F", null, TYPE_HANKAKUEISU, "50", null},
	{"stkStsDescTxt_T", "stkStsDescTxt_T", "T", null, TYPE_HANKAKUEISU, "50", null},
	{"adjCatgDescTxt", "adjCatgDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"coaAcctCd", "coaAcctCd", null, null, TYPE_HANKAKUEISU, "8", null},
	{"invtyOrdLineCmntTxt", "invtyOrdLineCmntTxt", null, null, TYPE_HANKAKUEISU, "1000", null},
	{"serNum", "serNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"svcConfigMstrPk", "svcConfigMstrPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"svcMachTpDescTxt", "svcMachTpDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"invtyOrdStsDescTxt", "invtyOrdStsDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"invtyOrdLineCostAmt", "invtyOrdLineCostAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"invtyOrdNum", "invtyOrdNum", null, null, TYPE_HANKAKUEISU, "8", null},
	{"xxScrItem130Txt", "xxScrItem130Txt", null, null, TYPE_HANKAKUEISU, "130", null},
	{"invtyAvalQty", "invtyAvalQty", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"ADJ_TRX_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//adjTrxTpDescTxt
        {"INVTY_LOC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invtyLocCd
        {"RTL_WH_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlWhNm
        {"MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd
        {"MDSE_DESC_SHORT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseDescShortTxt
        {"FROM_RTL_SWH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//fromRtlSwhCd
        {"TO_RTL_SWH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//toRtlSwhCd
        {"ORD_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordQty
        {"STK_STS_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//stkStsDescTxt_F
        {"STK_STS_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//stkStsDescTxt_T
        {"ADJ_CATG_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//adjCatgDescTxt
        {"COA_ACCT_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaAcctCd
        {"INVTY_ORD_LINE_CMNT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invtyOrdLineCmntTxt
        {"SER_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNum
        {"SVC_CONFIG_MSTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcConfigMstrPk
        {"SVC_MACH_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachTpDescTxt
        {"INVTY_ORD_STS_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invtyOrdStsDescTxt
        {"INVTY_ORD_LINE_COST_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invtyOrdLineCostAmt
        {"INVTY_ORD_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invtyOrdNum
        {"XX_SCR_ITEM_130_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxScrItem130Txt
        {"INVTY_AVAL_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invtyAvalQty
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

