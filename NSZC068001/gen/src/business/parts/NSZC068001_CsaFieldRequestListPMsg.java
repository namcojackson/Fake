//This file was automatically generated by Common Business Component Interface Definition Document and XLA200710010.
// Generated on    :20220427134618000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :CommonBusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSZC068001_CsaFieldRequestListPMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.parts;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSZC068001 Common Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSZC068001_CsaFieldRequestListPMsg extends EZDPMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** SER_NUM*/
	public final EZDPStringItem              serNum;

    /** DS_ACCT_NM*/
	public final EZDPStringItem              dsAcctNm;

    /** FIRST_LINE_ADDR*/
	public final EZDPStringItem              firstLineAddr;

    /** SCD_LINE_ADDR*/
	public final EZDPStringItem              scdLineAddr;

    /** CTY_ADDR*/
	public final EZDPStringItem              ctyAddr;

    /** ST_CD*/
	public final EZDPStringItem              stCd;

    /** POST_CD*/
	public final EZDPStringItem              postCd;

    /** CTRY_CD*/
	public final EZDPStringItem              ctryCd;

    /** XTRNL_PBLM_TP_REF_TXT*/
	public final EZDPStringItem              xtrnlPblmTpRefTxt;

    /** SVC_CMNT_TXT*/
	public final EZDPStringItem              svcCmntTxt;

    /** XTRNL_CALL_TP_REF_TXT*/
	public final EZDPStringItem              xtrnlCallTpRefTxt;

    /** TECH_NM*/
	public final EZDPStringItem              techNm;

    /** TECH_CD*/
	public final EZDPStringItem              techCd;

    /** SVC_TASK_NUM*/
	public final EZDPStringItem              svcTaskNum;

    /** XTRNL_STS_REF_TXT*/
	public final EZDPStringItem              xtrnlStsRefTxt;


	/**
	 * NSZC068001_CsaFieldRequestListPMsg is constructor.
	 * The initialization when the instance of NSZC068001_CsaFieldRequestListPMsg is generated.
	 */
	public NSZC068001_CsaFieldRequestListPMsg() {
		this(false, -1);
	}

	/**
	 * NSZC068001_CsaFieldRequestListPMsg is constructor.
	 * The initialization when the instance of NSZC068001_CsaFieldRequestListPMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSZC068001_CsaFieldRequestListPMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		serNum = (EZDPStringItem)newItem("serNum");
		dsAcctNm = (EZDPStringItem)newItem("dsAcctNm");
		firstLineAddr = (EZDPStringItem)newItem("firstLineAddr");
		scdLineAddr = (EZDPStringItem)newItem("scdLineAddr");
		ctyAddr = (EZDPStringItem)newItem("ctyAddr");
		stCd = (EZDPStringItem)newItem("stCd");
		postCd = (EZDPStringItem)newItem("postCd");
		ctryCd = (EZDPStringItem)newItem("ctryCd");
		xtrnlPblmTpRefTxt = (EZDPStringItem)newItem("xtrnlPblmTpRefTxt");
		svcCmntTxt = (EZDPStringItem)newItem("svcCmntTxt");
		xtrnlCallTpRefTxt = (EZDPStringItem)newItem("xtrnlCallTpRefTxt");
		techNm = (EZDPStringItem)newItem("techNm");
		techCd = (EZDPStringItem)newItem("techCd");
		svcTaskNum = (EZDPStringItem)newItem("svcTaskNum");
		xtrnlStsRefTxt = (EZDPStringItem)newItem("xtrnlStsRefTxt");
	}

	/**
	 * get the type of array which is stored
	 * @return NSZC068001_CsaFieldRequestListPMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSZC068001_CsaFieldRequestListPMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"serNum", "serNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"dsAcctNm", "dsAcctNm", null, null, TYPE_HANKAKUEISU, "360", null},
	{"firstLineAddr", "firstLineAddr", null, null, TYPE_HANKAKUEISU, "60", null},
	{"scdLineAddr", "scdLineAddr", null, null, TYPE_HANKAKUEISU, "60", null},
	{"ctyAddr", "ctyAddr", null, null, TYPE_HANKAKUEISU, "25", null},
	{"stCd", "stCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"postCd", "postCd", null, null, TYPE_HANKAKUEISU, "15", null},
	{"ctryCd", "ctryCd", null, null, TYPE_HANKAKUEISU, "3", null},
	{"xtrnlPblmTpRefTxt", "xtrnlPblmTpRefTxt", null, null, TYPE_HANKAKUEISU, "500", null},
	{"svcCmntTxt", "svcCmntTxt", null, null, TYPE_HANKAKUEISU, "4000", null},
	{"xtrnlCallTpRefTxt", "xtrnlCallTpRefTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"techNm", "techNm", null, null, TYPE_HANKAKUEISU, "45", null},
	{"techCd", "techCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"svcTaskNum", "svcTaskNum", null, null, TYPE_HANKAKUEISU, "10", null},
	{"xtrnlStsRefTxt", "xtrnlStsRefTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"SER_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNum
        {"DS_ACCT_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctNm
        {"FIRST_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//firstLineAddr
        {"SCD_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//scdLineAddr
        {"CTY_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ctyAddr
        {"ST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//stCd
        {"POST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//postCd
        {"CTRY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ctryCd
        {"XTRNL_PBLM_TP_REF_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xtrnlPblmTpRefTxt
        {"SVC_CMNT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcCmntTxt
        {"XTRNL_CALL_TP_REF_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xtrnlCallTpRefTxt
        {"TECH_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//techNm
        {"TECH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//techCd
        {"SVC_TASK_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTaskNum
        {"XTRNL_STS_REF_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xtrnlStsRefTxt
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

