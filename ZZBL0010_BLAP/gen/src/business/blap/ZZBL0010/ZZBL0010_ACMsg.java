//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20140618165316000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *ZZBL0010_ACMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.ZZBL0010;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is ZZBL0010 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class ZZBL0010_ACMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_ROW_NUM_A*/
	public final EZDCBigDecimalItem              xxRowNum_A;

    /** BAT_PROC_LOG_PK_A*/
	public final EZDCBigDecimalItem              batProcLogPk_A;

    /** GLBL_CMPY_CD_A*/
	public final EZDCStringItem              glblCmpyCd_A;

    /** BAT_PROC_SUB_SYS_CD_A*/
	public final EZDCStringItem              batProcSubSysCd_A;

    /** BAT_PROC_JBNT_ID_A*/
	public final EZDCStringItem              batProcJbntId_A;

    /** BAT_PROC_JOB_ID_A*/
	public final EZDCStringItem              batProcJobId_A;

    /** BAT_PROC_PGM_ID_A*/
	public final EZDCStringItem              batProcPgmId_A;

    /** BAT_PROC_HOST_NM_A*/
	public final EZDCStringItem              batProcHostNm_A;

    /** XX_BAT_PROC_TRM_NM_A*/
	public final EZDCStringItem              xxBatProcTrmNm_A;

    /** XX_DT_TM_ST*/
	public final EZDCStringItem              xxDtTm_ST;

    /** BAT_PROC_START_TZ_A*/
	public final EZDCStringItem              batProcStartTz_A;

    /** XX_DT_TM_EN*/
	public final EZDCStringItem              xxDtTm_EN;

    /** BAT_PROC_END_TZ_A*/
	public final EZDCStringItem              batProcEndTz_A;

    /** BAT_PROC_TM_CNT_A*/
	public final EZDCBigDecimalItem              batProcTmCnt_A;

    /** BAT_PROC_JOB_LOG_PATH_NM_A*/
	public final EZDCStringItem              batProcJobLogPathNm_A;

    /** BAT_PROC_NORM_REC_CNT_A*/
	public final EZDCBigDecimalItem              batProcNormRecCnt_A;

    /** BAT_PROC_ERR_REC_CNT_A*/
	public final EZDCBigDecimalItem              batProcErrRecCnt_A;

    /** BAT_PROC_TOT_REC_CNT_A*/
	public final EZDCBigDecimalItem              batProcTotRecCnt_A;

    /** BAT_PROC_DEAD_LOCK_RTRY_CNT_A*/
	public final EZDCBigDecimalItem              batProcDeadLockRtryCnt_A;

    /** BAT_PROC_REC_LOCK_RTRY_CNT_A*/
	public final EZDCBigDecimalItem              batProcRecLockRtryCnt_A;


	/**
	 * ZZBL0010_ACMsg is constructor.
	 * The initialization when the instance of ZZBL0010_ACMsg is generated.
	 */
	public ZZBL0010_ACMsg() {
		this(false, -1);
	}

	/**
	 * ZZBL0010_ACMsg is constructor.
	 * The initialization when the instance of ZZBL0010_ACMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public ZZBL0010_ACMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxRowNum_A = (EZDCBigDecimalItem)newItem("xxRowNum_A");
		batProcLogPk_A = (EZDCBigDecimalItem)newItem("batProcLogPk_A");
		glblCmpyCd_A = (EZDCStringItem)newItem("glblCmpyCd_A");
		batProcSubSysCd_A = (EZDCStringItem)newItem("batProcSubSysCd_A");
		batProcJbntId_A = (EZDCStringItem)newItem("batProcJbntId_A");
		batProcJobId_A = (EZDCStringItem)newItem("batProcJobId_A");
		batProcPgmId_A = (EZDCStringItem)newItem("batProcPgmId_A");
		batProcHostNm_A = (EZDCStringItem)newItem("batProcHostNm_A");
		xxBatProcTrmNm_A = (EZDCStringItem)newItem("xxBatProcTrmNm_A");
		xxDtTm_ST = (EZDCStringItem)newItem("xxDtTm_ST");
		batProcStartTz_A = (EZDCStringItem)newItem("batProcStartTz_A");
		xxDtTm_EN = (EZDCStringItem)newItem("xxDtTm_EN");
		batProcEndTz_A = (EZDCStringItem)newItem("batProcEndTz_A");
		batProcTmCnt_A = (EZDCBigDecimalItem)newItem("batProcTmCnt_A");
		batProcJobLogPathNm_A = (EZDCStringItem)newItem("batProcJobLogPathNm_A");
		batProcNormRecCnt_A = (EZDCBigDecimalItem)newItem("batProcNormRecCnt_A");
		batProcErrRecCnt_A = (EZDCBigDecimalItem)newItem("batProcErrRecCnt_A");
		batProcTotRecCnt_A = (EZDCBigDecimalItem)newItem("batProcTotRecCnt_A");
		batProcDeadLockRtryCnt_A = (EZDCBigDecimalItem)newItem("batProcDeadLockRtryCnt_A");
		batProcRecLockRtryCnt_A = (EZDCBigDecimalItem)newItem("batProcRecLockRtryCnt_A");
	}

	/**
	 * get the type of array which is stored
	 * @return ZZBL0010_ACMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new ZZBL0010_ACMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxRowNum_A", "xxRowNum_A", "A", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"batProcLogPk_A", "batProcLogPk_A", "A", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"glblCmpyCd_A", "glblCmpyCd_A", "A", null, TYPE_HANKAKUEISU, "4", null},
	{"batProcSubSysCd_A", "batProcSubSysCd_A", "A", null, TYPE_HANKAKUEISU, "3", null},
	{"batProcJbntId_A", "batProcJbntId_A", "A", null, TYPE_HANKAKUEISU, "16", null},
	{"batProcJobId_A", "batProcJobId_A", "A", null, TYPE_HANKAKUEISU, "18", null},
	{"batProcPgmId_A", "batProcPgmId_A", "A", null, TYPE_HANKAKUEISU, "64", null},
	{"batProcHostNm_A", "batProcHostNm_A", "A", null, TYPE_HANKAKUEISU, "256", null},
	{"xxBatProcTrmNm_A", "xxBatProcTrmNm_A", "A", null, TYPE_HANKAKUEISU, "13", null},
	{"xxDtTm_ST", "xxDtTm_ST", "ST", null, TYPE_HANKAKUEISU, "23", null},
	{"batProcStartTz_A", "batProcStartTz_A", "A", null, TYPE_HANKAKUEISU, "5", null},
	{"xxDtTm_EN", "xxDtTm_EN", "EN", null, TYPE_HANKAKUEISU, "23", null},
	{"batProcEndTz_A", "batProcEndTz_A", "A", null, TYPE_HANKAKUEISU, "5", null},
	{"batProcTmCnt_A", "batProcTmCnt_A", "A", null, TYPE_SEISU_SYOSU, "12", "0"},
	{"batProcJobLogPathNm_A", "batProcJobLogPathNm_A", "A", null, TYPE_HANKAKUEISU, "256", null},
	{"batProcNormRecCnt_A", "batProcNormRecCnt_A", "A", null, TYPE_SEISU_SYOSU, "12", "0"},
	{"batProcErrRecCnt_A", "batProcErrRecCnt_A", "A", null, TYPE_SEISU_SYOSU, "12", "0"},
	{"batProcTotRecCnt_A", "batProcTotRecCnt_A", "A", null, TYPE_SEISU_SYOSU, "12", "0"},
	{"batProcDeadLockRtryCnt_A", "batProcDeadLockRtryCnt_A", "A", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"batProcRecLockRtryCnt_A", "batProcRecLockRtryCnt_A", "A", null, TYPE_SEISU_SYOSU, "5", "0"},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_ROW_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRowNum_A
        {"BAT_PROC_LOG_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//batProcLogPk_A
        {"GLBL_CMPY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//glblCmpyCd_A
        {"BAT_PROC_SUB_SYS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//batProcSubSysCd_A
        {"BAT_PROC_JBNT_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//batProcJbntId_A
        {"BAT_PROC_JOB_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//batProcJobId_A
        {"BAT_PROC_PGM_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//batProcPgmId_A
        {"BAT_PROC_HOST_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//batProcHostNm_A
        {"XX_BAT_PROC_TRM_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxBatProcTrmNm_A
        {"XX_DT_TM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDtTm_ST
        {"BAT_PROC_START_TZ",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//batProcStartTz_A
        {"XX_DT_TM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDtTm_EN
        {"BAT_PROC_END_TZ",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//batProcEndTz_A
        {"BAT_PROC_TM_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//batProcTmCnt_A
        {"BAT_PROC_JOB_LOG_PATH_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//batProcJobLogPathNm_A
        {"BAT_PROC_NORM_REC_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//batProcNormRecCnt_A
        {"BAT_PROC_ERR_REC_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//batProcErrRecCnt_A
        {"BAT_PROC_TOT_REC_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//batProcTotRecCnt_A
        {"BAT_PROC_DEAD_LOCK_RTRY_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//batProcDeadLockRtryCnt_A
        {"BAT_PROC_REC_LOCK_RTRY_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//batProcRecLockRtryCnt_A
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

