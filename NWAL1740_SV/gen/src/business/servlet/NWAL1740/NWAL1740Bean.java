// This file was automatically generated by Screen Field Definition Document and XLA200710010
// Generated on    :20160329184824000
// Velocity Macro:svltdatabean.vm V200604010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NWAL1740Bean.java Copyright FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */

package  business.servlet.NWAL1740;

import parts.servletcommon.EZDCommonDataBean;

/*
 * NWAL1740 is data bean class.
 */
public class NWAL1740Bean extends EZDCommonDataBean {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	//Constant Definition Area
	/** ORD_PROC_NODE_PRFL_CD_H*/
	public static final String ordProcNodePrflCd_H = "ordProcNodePrflCd_H";

	/** ORD_PROC_NODE_PRFL_CD*/
	public static final String ordProcNodePrflCd = "ordProcNodePrflCd";

	/** ORD_PROC_NODE_PRFL_CD_P*/
	public static final String ordProcNodePrflCd_P = "ordProcNodePrflCd_P";

	/** ORD_PROC_NODE_PRFL_NM_P*/
	public static final String ordProcNodePrflNm_P = "ordProcNodePrflNm_P";

	/** XX_YES_NO_CD_P*/
	public static final String xxYesNoCd_P = "xxYesNoCd_P";

	/** XX_YES_NO_NM_P*/
	public static final String xxYesNoNm_P = "xxYesNoNm_P";

	/** DISC_ALLOC_METH_CD_P*/
	public static final String discAllocMethCd_P = "discAllocMethCd_P";

	/** DISC_ALLOC_METH_DESC_TXT_P*/
	public static final String discAllocMethDescTxt_P = "discAllocMethDescTxt_P";

	/** XX_TAB_PROT_01*/
	public static final String xxTabProt_01 = "xxTabProt_01";

	/** XX_TAB_PROT_02*/
	public static final String xxTabProt_02 = "xxTabProt_02";

	/** XX_TAB_PROT_03*/
	public static final String xxTabProt_03 = "xxTabProt_03";

	/** A*/
	public static final String A = "A";

	/** XX_CHK_BOX_A*/
	public static final String xxChkBox_A = "xxChkBox_A";

	/** COA_MDSE_TP_CD_A*/
	public static final String coaMdseTpCd_A = "coaMdseTpCd_A";

	/** XX_BTN_FLG_A*/
	public static final String xxBtnFlg_A = "xxBtnFlg_A";

	/** COA_PROJ_NM_A*/
	public static final String coaProjNm_A = "coaProjNm_A";

	/** FL_PRC_CALC_INCL_FLG_A*/
	public static final String flPrcCalcInclFlg_A = "flPrcCalcInclFlg_A";

	/** REP_REV_CALC_INCL_FLG_AR*/
	public static final String repRevCalcInclFlg_AR = "repRevCalcInclFlg_AR";

	/** REP_REV_CALC_INCL_FLG_AD*/
	public static final String repRevCalcInclFlg_AD = "repRevCalcInclFlg_AD";

	/** REP_REV_CALC_INCL_FLG_AF*/
	public static final String repRevCalcInclFlg_AF = "repRevCalcInclFlg_AF";

	/** RED_REP_REV_FLG_A*/
	public static final String redRepRevFlg_A = "redRepRevFlg_A";

	/** DISC_ALLOC_METH_DESC_TXT_A*/
	public static final String discAllocMethDescTxt_A = "discAllocMethDescTxt_A";

	/** DLR_CR_PRFT_INCL_FLG_A*/
	public static final String dlrCrPrftInclFlg_A = "dlrCrPrftInclFlg_A";

	/** RED_COMP_AMT_FLG_A*/
	public static final String redCompAmtFlg_A = "redCompAmtFlg_A";

	/** _EZUpdateDateTime_A*/
	public static final String ezUpTime_A = "ezUpTime_A";

	/** _EZUpTimeZone_A*/
	public static final String ezUpTimeZone_A = "ezUpTimeZone_A";

	/** XX_ROW_ID_A*/
	public static final String xxRowId_A = "xxRowId_A";

	/** B*/
	public static final String B = "B";

	/** XX_CHK_BOX_B*/
	public static final String xxChkBox_B = "xxChkBox_B";

	/** DS_ORD_LINE_CATG_CD_B*/
	public static final String dsOrdLineCatgCd_B = "dsOrdLineCatgCd_B";

	/** XX_BTN_FLG_B*/
	public static final String xxBtnFlg_B = "xxBtnFlg_B";

	/** DS_ORD_LINE_CATG_NM_B*/
	public static final String dsOrdLineCatgNm_B = "dsOrdLineCatgNm_B";

	/** DS_ORD_LINE_CATG_DESC_TXT_B*/
	public static final String dsOrdLineCatgDescTxt_B = "dsOrdLineCatgDescTxt_B";

	/** ACTV_FLG_B*/
	public static final String actvFlg_B = "actvFlg_B";

	/** EFF_FROM_DT_B*/
	public static final String effFromDt_B = "effFromDt_B";

	/** EFF_THRU_DT_B*/
	public static final String effThruDt_B = "effThruDt_B";

	/** _EZUpdateDateTime_B*/
	public static final String ezUpTime_B = "ezUpTime_B";

	/** _EZUpTimeZone_B*/
	public static final String ezUpTimeZone_B = "ezUpTimeZone_B";

	/** XX_ROW_ID_B*/
	public static final String xxRowId_B = "xxRowId_B";

	/** C*/
	public static final String C = "C";

	/** XX_CHK_BOX_C*/
	public static final String xxChkBox_C = "xxChkBox_C";

	/** RTL_WH_CD_C*/
	public static final String rtlWhCd_C = "rtlWhCd_C";

	/** XX_BTN_FLG_C*/
	public static final String xxBtnFlg_C = "xxBtnFlg_C";

	/** RTL_WH_NM_C*/
	public static final String rtlWhNm_C = "rtlWhNm_C";

	/** RTL_SWH_CD_C*/
	public static final String rtlSwhCd_C = "rtlSwhCd_C";

	/** RTL_SWH_NM_C*/
	public static final String rtlSwhNm_C = "rtlSwhNm_C";

	/** MDSE_INVTY_COST_PCT_C*/
	public static final String mdseInvtyCostPct_C = "mdseInvtyCostPct_C";

	/** ACTV_FLG_C*/
	public static final String actvFlg_C = "actvFlg_C";

	/** EFF_FROM_DT_C*/
	public static final String effFromDt_C = "effFromDt_C";

	/** EFF_THRU_DT_C*/
	public static final String effThruDt_C = "effThruDt_C";

	/** _EZUpdateDateTime_C*/
	public static final String ezUpTime_C = "ezUpTime_C";

	/** _EZUpTimeZone_C*/
	public static final String ezUpTimeZone_C = "ezUpTimeZone_C";

	/** XX_ROW_ID_C*/
	public static final String xxRowId_C = "xxRowId_C";

	/** P*/
	public static final String P = "P";

	/** XX_POP_PRM*/
	public static final String xxPopPrm = "xxPopPrm";

	/** XX_COMN_SCR_COL_VAL_TXT*/
	public static final String xxComnScrColValTxt = "xxComnScrColValTxt";

	/** XX_SCR_EVENT_NM*/
	public static final String xxScrEventNm = "xxScrEventNm";

	/** XX_CELL_IDX*/
	public static final String xxCellIdx = "xxCellIdx";

	/** XX_DPLY_TAB*/
	public static final String xxDplyTab = "xxDplyTab";

	/**
	 * Method name:NWAL1740 is Bean's Constructor.
	 * <dd>method explanation:Initialization when instance of NWAL1740Bean is generated
	 * <dd>Remarks:
	 */
	public NWAL1740Bean() {
		super("business.servlet.NWAL1740.NWAL1740BMsg");
	}

	/**
	 * get  ORD_PROC_NODE_PRFL_CD_H.
	 * @return ORD_PROC_NODE_PRFL_CD_H
	 */
	public String getOrdProcNodePrflCd_H() {
		return outputValue(ordProcNodePrflCd_H);
	}

	/**
	 * set  ORD_PROC_NODE_PRFL_CD_H.
	 * @param data ORD_PROC_NODE_PRFL_CD_H
	 */
	public void setOrdProcNodePrflCd_H(String data) {
		inputValue(ordProcNodePrflCd_H,data);
	}

	/**
	 * get  ORD_PROC_NODE_PRFL_CD.
	 * @return ORD_PROC_NODE_PRFL_CD
	 */
	public String getOrdProcNodePrflCd() {
		return outputValue(ordProcNodePrflCd);
	}

	/**
	 * set  ORD_PROC_NODE_PRFL_CD.
	 * @param data ORD_PROC_NODE_PRFL_CD
	 */
	public void setOrdProcNodePrflCd(String data) {
		inputValue(ordProcNodePrflCd,data);
	}

	/**
	 * get  ORD_PROC_NODE_PRFL_CD_P.
	 * @param idx1 Index Number
	 * @return ORD_PROC_NODE_PRFL_CD_P
	 */
	public String getOrdProcNodePrflCd_P(int idx1) {
	 	 return outputValue(ordProcNodePrflCd_P, idx1);
	}

	/**
	 * get  ORD_PROC_NODE_PRFL_NM_P.
	 * @param idx1 Index Number
	 * @return ORD_PROC_NODE_PRFL_NM_P
	 */
	public String getOrdProcNodePrflNm_P(int idx1) {
	 	 return outputValue(ordProcNodePrflNm_P, idx1);
	}

	/**
	 * get  XX_YES_NO_CD_P.
	 * @param idx1 Index Number
	 * @return XX_YES_NO_CD_P
	 */
	public String getXxYesNoCd_P(int idx1) {
	 	 return outputValue(xxYesNoCd_P, idx1);
	}

	/**
	 * get  XX_YES_NO_NM_P.
	 * @param idx1 Index Number
	 * @return XX_YES_NO_NM_P
	 */
	public String getXxYesNoNm_P(int idx1) {
	 	 return outputValue(xxYesNoNm_P, idx1);
	}

	/**
	 * get  DISC_ALLOC_METH_CD_P.
	 * @param idx1 Index Number
	 * @return DISC_ALLOC_METH_CD_P
	 */
	public String getDiscAllocMethCd_P(int idx1) {
	 	 return outputValue(discAllocMethCd_P, idx1);
	}

	/**
	 * get  DISC_ALLOC_METH_DESC_TXT_P.
	 * @param idx1 Index Number
	 * @return DISC_ALLOC_METH_DESC_TXT_P
	 */
	public String getDiscAllocMethDescTxt_P(int idx1) {
	 	 return outputValue(discAllocMethDescTxt_P, idx1);
	}

	/**
	 * get  XX_TAB_PROT_01.
	 * @return XX_TAB_PROT_01
	 */
	public String getXxTabProt_01() {
		return outputValue(xxTabProt_01);
	}

	/**
	 * set  XX_TAB_PROT_01.
	 * @param data XX_TAB_PROT_01
	 */
	public void setXxTabProt_01(String data) {
		inputValue(xxTabProt_01,data);
	}

	/**
	 * get  XX_TAB_PROT_02.
	 * @return XX_TAB_PROT_02
	 */
	public String getXxTabProt_02() {
		return outputValue(xxTabProt_02);
	}

	/**
	 * set  XX_TAB_PROT_02.
	 * @param data XX_TAB_PROT_02
	 */
	public void setXxTabProt_02(String data) {
		inputValue(xxTabProt_02,data);
	}

	/**
	 * get  XX_TAB_PROT_03.
	 * @return XX_TAB_PROT_03
	 */
	public String getXxTabProt_03() {
		return outputValue(xxTabProt_03);
	}

	/**
	 * set  XX_TAB_PROT_03.
	 * @param data XX_TAB_PROT_03
	 */
	public void setXxTabProt_03(String data) {
		inputValue(xxTabProt_03,data);
	}

	/**
	 * get  XX_CHK_BOX_A.
	 * @param idx1 List Number
	 * @return XX_CHK_BOX_A
	 */
	public String getXxChkBox_A(int idx1) {
		return outputValue(A, idx1, xxChkBox_A);
	}

	/**
	 * set  XX_CHK_BOX_A.
	 * @param data XX_CHK_BOX_AArray
	 */
	public void setXxChkBox_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxChkBox_A, data[j]);
		}
	}

	/**
	 * get  COA_MDSE_TP_CD_A.
	 * @param idx1 List Number
	 * @return COA_MDSE_TP_CD_A
	 */
	public String getCoaMdseTpCd_A(int idx1) {
		return outputValue(A, idx1, coaMdseTpCd_A);
	}

	/**
	 * set  COA_MDSE_TP_CD_A.
	 * @param data COA_MDSE_TP_CD_AArray
	 */
	public void setCoaMdseTpCd_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, coaMdseTpCd_A, data[j]);
		}
	}

	/**
	 * get  XX_BTN_FLG_A.
	 * @param idx1 List Number
	 * @return XX_BTN_FLG_A
	 */
	public String getXxBtnFlg_A(int idx1) {
		return outputValue(A, idx1, xxBtnFlg_A);
	}

	/**
	 * set  XX_BTN_FLG_A.
	 * @param data XX_BTN_FLG_AArray
	 */
	public void setXxBtnFlg_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxBtnFlg_A, data[j]);
		}
	}

	/**
	 * get  COA_PROJ_NM_A.
	 * @param idx1 List Number
	 * @return COA_PROJ_NM_A
	 */
	public String getCoaProjNm_A(int idx1) {
		return outputValue(A, idx1, coaProjNm_A);
	}

	/**
	 * set  COA_PROJ_NM_A.
	 * @param data COA_PROJ_NM_AArray
	 */
	public void setCoaProjNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, coaProjNm_A, data[j]);
		}
	}

	/**
	 * get  FL_PRC_CALC_INCL_FLG_A.
	 * @param idx1 List Number
	 * @return FL_PRC_CALC_INCL_FLG_A
	 */
	public String getFlPrcCalcInclFlg_A(int idx1) {
		return outputValue(A, idx1, flPrcCalcInclFlg_A);
	}

	/**
	 * set  FL_PRC_CALC_INCL_FLG_A.
	 * @param data FL_PRC_CALC_INCL_FLG_AArray
	 */
	public void setFlPrcCalcInclFlg_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, flPrcCalcInclFlg_A, data[j]);
		}
	}

	/**
	 * get  REP_REV_CALC_INCL_FLG_AR.
	 * @param idx1 List Number
	 * @return REP_REV_CALC_INCL_FLG_AR
	 */
	public String getRepRevCalcInclFlg_AR(int idx1) {
		return outputValue(A, idx1, repRevCalcInclFlg_AR);
	}

	/**
	 * set  REP_REV_CALC_INCL_FLG_AR.
	 * @param data REP_REV_CALC_INCL_FLG_ARArray
	 */
	public void setRepRevCalcInclFlg_AR(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, repRevCalcInclFlg_AR, data[j]);
		}
	}

	/**
	 * get  REP_REV_CALC_INCL_FLG_AD.
	 * @param idx1 List Number
	 * @return REP_REV_CALC_INCL_FLG_AD
	 */
	public String getRepRevCalcInclFlg_AD(int idx1) {
		return outputValue(A, idx1, repRevCalcInclFlg_AD);
	}

	/**
	 * set  REP_REV_CALC_INCL_FLG_AD.
	 * @param data REP_REV_CALC_INCL_FLG_ADArray
	 */
	public void setRepRevCalcInclFlg_AD(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, repRevCalcInclFlg_AD, data[j]);
		}
	}

	/**
	 * get  REP_REV_CALC_INCL_FLG_AF.
	 * @param idx1 List Number
	 * @return REP_REV_CALC_INCL_FLG_AF
	 */
	public String getRepRevCalcInclFlg_AF(int idx1) {
		return outputValue(A, idx1, repRevCalcInclFlg_AF);
	}

	/**
	 * set  REP_REV_CALC_INCL_FLG_AF.
	 * @param data REP_REV_CALC_INCL_FLG_AFArray
	 */
	public void setRepRevCalcInclFlg_AF(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, repRevCalcInclFlg_AF, data[j]);
		}
	}

	/**
	 * get  RED_REP_REV_FLG_A.
	 * @param idx1 List Number
	 * @return RED_REP_REV_FLG_A
	 */
	public String getRedRepRevFlg_A(int idx1) {
		return outputValue(A, idx1, redRepRevFlg_A);
	}

	/**
	 * set  RED_REP_REV_FLG_A.
	 * @param data RED_REP_REV_FLG_AArray
	 */
	public void setRedRepRevFlg_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, redRepRevFlg_A, data[j]);
		}
	}

	/**
	 * get  DISC_ALLOC_METH_DESC_TXT_A.
	 * @param idx1 List Number
	 * @return DISC_ALLOC_METH_DESC_TXT_A
	 */
	public String getDiscAllocMethDescTxt_A(int idx1) {
		return outputValue(A, idx1, discAllocMethDescTxt_A);
	}

	/**
	 * set  DISC_ALLOC_METH_DESC_TXT_A.
	 * @param data DISC_ALLOC_METH_DESC_TXT_AArray
	 */
	public void setDiscAllocMethDescTxt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, discAllocMethDescTxt_A, data[j]);
		}
	}

	/**
	 * get  DLR_CR_PRFT_INCL_FLG_A.
	 * @param idx1 List Number
	 * @return DLR_CR_PRFT_INCL_FLG_A
	 */
	public String getDlrCrPrftInclFlg_A(int idx1) {
		return outputValue(A, idx1, dlrCrPrftInclFlg_A);
	}

	/**
	 * set  DLR_CR_PRFT_INCL_FLG_A.
	 * @param data DLR_CR_PRFT_INCL_FLG_AArray
	 */
	public void setDlrCrPrftInclFlg_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dlrCrPrftInclFlg_A, data[j]);
		}
	}

	/**
	 * get  RED_COMP_AMT_FLG_A.
	 * @param idx1 List Number
	 * @return RED_COMP_AMT_FLG_A
	 */
	public String getRedCompAmtFlg_A(int idx1) {
		return outputValue(A, idx1, redCompAmtFlg_A);
	}

	/**
	 * set  RED_COMP_AMT_FLG_A.
	 * @param data RED_COMP_AMT_FLG_AArray
	 */
	public void setRedCompAmtFlg_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, redCompAmtFlg_A, data[j]);
		}
	}

	/**
	 * get  _EZUpdateDateTime_A.
	 * @param idx1 List Number
	 * @return _EZUpdateDateTime_A
	 */
	public String getEzUpTime_A(int idx1) {
		return outputValue(A, idx1, ezUpTime_A);
	}

	/**
	 * set  _EZUpdateDateTime_A.
	 * @param data _EZUpdateDateTime_AArray
	 */
	public void setEzUpTime_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, ezUpTime_A, data[j]);
		}
	}

	/**
	 * get  _EZUpTimeZone_A.
	 * @param idx1 List Number
	 * @return _EZUpTimeZone_A
	 */
	public String getEzUpTimeZone_A(int idx1) {
		return outputValue(A, idx1, ezUpTimeZone_A);
	}

	/**
	 * set  _EZUpTimeZone_A.
	 * @param data _EZUpTimeZone_AArray
	 */
	public void setEzUpTimeZone_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, ezUpTimeZone_A, data[j]);
		}
	}

	/**
	 * get  XX_ROW_ID_A.
	 * @param idx1 List Number
	 * @return XX_ROW_ID_A
	 */
	public String getXxRowId_A(int idx1) {
		return outputValue(A, idx1, xxRowId_A);
	}

	/**
	 * set  XX_ROW_ID_A.
	 * @param data XX_ROW_ID_AArray
	 */
	public void setXxRowId_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRowId_A, data[j]);
		}
	}

	/**
	 * get  XX_CHK_BOX_B.
	 * @param idx1 List Number
	 * @return XX_CHK_BOX_B
	 */
	public String getXxChkBox_B(int idx1) {
		return outputValue(B, idx1, xxChkBox_B);
	}

	/**
	 * set  XX_CHK_BOX_B.
	 * @param data XX_CHK_BOX_BArray
	 */
	public void setXxChkBox_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, xxChkBox_B, data[j]);
		}
	}

	/**
	 * get  DS_ORD_LINE_CATG_CD_B.
	 * @param idx1 List Number
	 * @return DS_ORD_LINE_CATG_CD_B
	 */
	public String getDsOrdLineCatgCd_B(int idx1) {
		return outputValue(B, idx1, dsOrdLineCatgCd_B);
	}

	/**
	 * set  DS_ORD_LINE_CATG_CD_B.
	 * @param data DS_ORD_LINE_CATG_CD_BArray
	 */
	public void setDsOrdLineCatgCd_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, dsOrdLineCatgCd_B, data[j]);
		}
	}

	/**
	 * get  XX_BTN_FLG_B.
	 * @param idx1 List Number
	 * @return XX_BTN_FLG_B
	 */
	public String getXxBtnFlg_B(int idx1) {
		return outputValue(B, idx1, xxBtnFlg_B);
	}

	/**
	 * set  XX_BTN_FLG_B.
	 * @param data XX_BTN_FLG_BArray
	 */
	public void setXxBtnFlg_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, xxBtnFlg_B, data[j]);
		}
	}

	/**
	 * get  DS_ORD_LINE_CATG_NM_B.
	 * @param idx1 List Number
	 * @return DS_ORD_LINE_CATG_NM_B
	 */
	public String getDsOrdLineCatgNm_B(int idx1) {
		return outputValue(B, idx1, dsOrdLineCatgNm_B);
	}

	/**
	 * set  DS_ORD_LINE_CATG_NM_B.
	 * @param data DS_ORD_LINE_CATG_NM_BArray
	 */
	public void setDsOrdLineCatgNm_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, dsOrdLineCatgNm_B, data[j]);
		}
	}

	/**
	 * get  DS_ORD_LINE_CATG_DESC_TXT_B.
	 * @param idx1 List Number
	 * @return DS_ORD_LINE_CATG_DESC_TXT_B
	 */
	public String getDsOrdLineCatgDescTxt_B(int idx1) {
		return outputValue(B, idx1, dsOrdLineCatgDescTxt_B);
	}

	/**
	 * set  DS_ORD_LINE_CATG_DESC_TXT_B.
	 * @param data DS_ORD_LINE_CATG_DESC_TXT_BArray
	 */
	public void setDsOrdLineCatgDescTxt_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, dsOrdLineCatgDescTxt_B, data[j]);
		}
	}

	/**
	 * get  ACTV_FLG_B.
	 * @param idx1 List Number
	 * @return ACTV_FLG_B
	 */
	public String getActvFlg_B(int idx1) {
		return outputValue(B, idx1, actvFlg_B);
	}

	/**
	 * set  ACTV_FLG_B.
	 * @param data ACTV_FLG_BArray
	 */
	public void setActvFlg_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, actvFlg_B, data[j]);
		}
	}

	/**
	 * get  EFF_FROM_DT_B.
	 * @param idx1 List Number
	 * @return EFF_FROM_DT_B
	 */
	public String getEffFromDt_B(int idx1) {
		return outputValue(B, idx1, effFromDt_B, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  EFF_FROM_DT_B.
	 * @param data EFF_FROM_DT_BArray
	 */
	public void setEffFromDt_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i,  effFromDt_B, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  EFF_THRU_DT_B.
	 * @param idx1 List Number
	 * @return EFF_THRU_DT_B
	 */
	public String getEffThruDt_B(int idx1) {
		return outputValue(B, idx1, effThruDt_B, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  EFF_THRU_DT_B.
	 * @param data EFF_THRU_DT_BArray
	 */
	public void setEffThruDt_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i,  effThruDt_B, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  _EZUpdateDateTime_B.
	 * @param idx1 List Number
	 * @return _EZUpdateDateTime_B
	 */
	public String getEzUpTime_B(int idx1) {
		return outputValue(B, idx1, ezUpTime_B);
	}

	/**
	 * set  _EZUpdateDateTime_B.
	 * @param data _EZUpdateDateTime_BArray
	 */
	public void setEzUpTime_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, ezUpTime_B, data[j]);
		}
	}

	/**
	 * get  _EZUpTimeZone_B.
	 * @param idx1 List Number
	 * @return _EZUpTimeZone_B
	 */
	public String getEzUpTimeZone_B(int idx1) {
		return outputValue(B, idx1, ezUpTimeZone_B);
	}

	/**
	 * set  _EZUpTimeZone_B.
	 * @param data _EZUpTimeZone_BArray
	 */
	public void setEzUpTimeZone_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, ezUpTimeZone_B, data[j]);
		}
	}

	/**
	 * get  XX_ROW_ID_B.
	 * @param idx1 List Number
	 * @return XX_ROW_ID_B
	 */
	public String getXxRowId_B(int idx1) {
		return outputValue(B, idx1, xxRowId_B);
	}

	/**
	 * set  XX_ROW_ID_B.
	 * @param data XX_ROW_ID_BArray
	 */
	public void setXxRowId_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, xxRowId_B, data[j]);
		}
	}

	/**
	 * get  XX_CHK_BOX_C.
	 * @param idx1 List Number
	 * @return XX_CHK_BOX_C
	 */
	public String getXxChkBox_C(int idx1) {
		return outputValue(C, idx1, xxChkBox_C);
	}

	/**
	 * set  XX_CHK_BOX_C.
	 * @param data XX_CHK_BOX_CArray
	 */
	public void setXxChkBox_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, xxChkBox_C, data[j]);
		}
	}

	/**
	 * get  RTL_WH_CD_C.
	 * @param idx1 List Number
	 * @return RTL_WH_CD_C
	 */
	public String getRtlWhCd_C(int idx1) {
		return outputValue(C, idx1, rtlWhCd_C);
	}

	/**
	 * set  RTL_WH_CD_C.
	 * @param data RTL_WH_CD_CArray
	 */
	public void setRtlWhCd_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, rtlWhCd_C, data[j]);
		}
	}

	/**
	 * get  XX_BTN_FLG_C.
	 * @param idx1 List Number
	 * @return XX_BTN_FLG_C
	 */
	public String getXxBtnFlg_C(int idx1) {
		return outputValue(C, idx1, xxBtnFlg_C);
	}

	/**
	 * set  XX_BTN_FLG_C.
	 * @param data XX_BTN_FLG_CArray
	 */
	public void setXxBtnFlg_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, xxBtnFlg_C, data[j]);
		}
	}

	/**
	 * get  RTL_WH_NM_C.
	 * @param idx1 List Number
	 * @return RTL_WH_NM_C
	 */
	public String getRtlWhNm_C(int idx1) {
		return outputValue(C, idx1, rtlWhNm_C);
	}

	/**
	 * set  RTL_WH_NM_C.
	 * @param data RTL_WH_NM_CArray
	 */
	public void setRtlWhNm_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, rtlWhNm_C, data[j]);
		}
	}

	/**
	 * get  RTL_SWH_CD_C.
	 * @param idx1 List Number
	 * @return RTL_SWH_CD_C
	 */
	public String getRtlSwhCd_C(int idx1) {
		return outputValue(C, idx1, rtlSwhCd_C);
	}

	/**
	 * set  RTL_SWH_CD_C.
	 * @param data RTL_SWH_CD_CArray
	 */
	public void setRtlSwhCd_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, rtlSwhCd_C, data[j]);
		}
	}

	/**
	 * get  RTL_SWH_NM_C.
	 * @param idx1 List Number
	 * @return RTL_SWH_NM_C
	 */
	public String getRtlSwhNm_C(int idx1) {
		return outputValue(C, idx1, rtlSwhNm_C);
	}

	/**
	 * set  RTL_SWH_NM_C.
	 * @param data RTL_SWH_NM_CArray
	 */
	public void setRtlSwhNm_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, rtlSwhNm_C, data[j]);
		}
	}

	/**
	 * get  MDSE_INVTY_COST_PCT_C.
	 * @param idx1 List Number
	 * @return MDSE_INVTY_COST_PCT_C
	 */
	public String getMdseInvtyCostPct_C(int idx1) {
		return outputValue(C, idx1, mdseInvtyCostPct_C);
	}

	/**
	 * set  MDSE_INVTY_COST_PCT_C.
	 * @param data MDSE_INVTY_COST_PCT_CArray
	 */
	public void setMdseInvtyCostPct_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, mdseInvtyCostPct_C, data[j]);
		}
	}

	/**
	 * get  ACTV_FLG_C.
	 * @param idx1 List Number
	 * @return ACTV_FLG_C
	 */
	public String getActvFlg_C(int idx1) {
		return outputValue(C, idx1, actvFlg_C);
	}

	/**
	 * set  ACTV_FLG_C.
	 * @param data ACTV_FLG_CArray
	 */
	public void setActvFlg_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, actvFlg_C, data[j]);
		}
	}

	/**
	 * get  EFF_FROM_DT_C.
	 * @param idx1 List Number
	 * @return EFF_FROM_DT_C
	 */
	public String getEffFromDt_C(int idx1) {
		return outputValue(C, idx1, effFromDt_C, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  EFF_FROM_DT_C.
	 * @param data EFF_FROM_DT_CArray
	 */
	public void setEffFromDt_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i,  effFromDt_C, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  EFF_THRU_DT_C.
	 * @param idx1 List Number
	 * @return EFF_THRU_DT_C
	 */
	public String getEffThruDt_C(int idx1) {
		return outputValue(C, idx1, effThruDt_C, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  EFF_THRU_DT_C.
	 * @param data EFF_THRU_DT_CArray
	 */
	public void setEffThruDt_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i,  effThruDt_C, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  _EZUpdateDateTime_C.
	 * @param idx1 List Number
	 * @return _EZUpdateDateTime_C
	 */
	public String getEzUpTime_C(int idx1) {
		return outputValue(C, idx1, ezUpTime_C);
	}

	/**
	 * set  _EZUpdateDateTime_C.
	 * @param data _EZUpdateDateTime_CArray
	 */
	public void setEzUpTime_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, ezUpTime_C, data[j]);
		}
	}

	/**
	 * get  _EZUpTimeZone_C.
	 * @param idx1 List Number
	 * @return _EZUpTimeZone_C
	 */
	public String getEzUpTimeZone_C(int idx1) {
		return outputValue(C, idx1, ezUpTimeZone_C);
	}

	/**
	 * set  _EZUpTimeZone_C.
	 * @param data _EZUpTimeZone_CArray
	 */
	public void setEzUpTimeZone_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, ezUpTimeZone_C, data[j]);
		}
	}

	/**
	 * get  XX_ROW_ID_C.
	 * @param idx1 List Number
	 * @return XX_ROW_ID_C
	 */
	public String getXxRowId_C(int idx1) {
		return outputValue(C, idx1, xxRowId_C);
	}

	/**
	 * set  XX_ROW_ID_C.
	 * @param data XX_ROW_ID_CArray
	 */
	public void setXxRowId_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, xxRowId_C, data[j]);
		}
	}

	/**
	 * get  XX_POP_PRM.
	 * @param idx1 List Number
	 * @return XX_POP_PRM
	 */
	public String getXxPopPrm(int idx1) {
		return outputValue(P, idx1, xxPopPrm);
	}

	/**
	 * set  XX_POP_PRM.
	 * @param data XX_POP_PRMArray
	 */
	public void setXxPopPrm(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(P);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(P, i, xxPopPrm, data[j]);
		}
	}

	/**
	 * get  XX_COMN_SCR_COL_VAL_TXT.
	 * @param idx1 List Number
	 * @return XX_COMN_SCR_COL_VAL_TXT
	 */
	public String getXxComnScrColValTxt(int idx1) {
		return outputValue(P, idx1, xxComnScrColValTxt);
	}

	/**
	 * set  XX_COMN_SCR_COL_VAL_TXT.
	 * @param data XX_COMN_SCR_COL_VAL_TXTArray
	 */
	public void setXxComnScrColValTxt(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(P);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(P, i, xxComnScrColValTxt, data[j]);
		}
	}

	/**
	 * get  XX_SCR_EVENT_NM.
	 * @return XX_SCR_EVENT_NM
	 */
	public String getXxScrEventNm() {
		return outputValue(xxScrEventNm);
	}

	/**
	 * set  XX_SCR_EVENT_NM.
	 * @param data XX_SCR_EVENT_NM
	 */
	public void setXxScrEventNm(String data) {
		inputValue(xxScrEventNm,data);
	}

	/**
	 * get  XX_CELL_IDX.
	 * @return XX_CELL_IDX
	 */
	public String getXxCellIdx() {
		return outputValue(xxCellIdx);
	}

	/**
	 * set  XX_CELL_IDX.
	 * @param data XX_CELL_IDX
	 */
	public void setXxCellIdx(String data) {
		inputValue(xxCellIdx,data);
	}

	/**
	 * get  XX_DPLY_TAB.
	 * @return XX_DPLY_TAB
	 */
	public String getXxDplyTab() {
		return outputValue(xxDplyTab);
	}

	/**
	 * set  XX_DPLY_TAB.
	 * @param data XX_DPLY_TAB
	 */
	public void setXxDplyTab(String data) {
		inputValue(xxDplyTab,data);
	}

}

