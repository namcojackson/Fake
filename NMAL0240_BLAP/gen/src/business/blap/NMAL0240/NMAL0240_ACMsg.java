//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20180314034724000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NMAL0240_ACMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NMAL0240;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NMAL0240 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NMAL0240_ACMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_PG_FLG_A1*/
	public final EZDCStringItem              xxPgFlg_A1;

    /** XX_DPLY_CTRL_FLG_A1*/
	public final EZDCStringItem              xxDplyCtrlFlg_A1;

    /** XX_CHK_BOX_A1*/
	public final EZDCStringItem              xxChkBox_A1;

    /** XX_NUM_A1*/
	public final EZDCBigDecimalItem              xxNum_A1;

    /** XX_NUM_A2*/
	public final EZDCBigDecimalItem              xxNum_A2;

    /** XX_ROW_NUM_A1*/
	public final EZDCBigDecimalItem              xxRowNum_A1;

    /** CMPSN_CHNG_REQ_PK_A1*/
	public final EZDCBigDecimalItem              cmpsnChngReqPk_A1;

    /** CMPSN_PK_A1*/
	public final EZDCBigDecimalItem              cmpsnPk_A1;

    /** MDSE_CD_A1*/
	public final EZDCStringItem              mdseCd_A1;

    /** MDSE_DESC_SHORT_TXT_A1*/
	public final EZDCStringItem              mdseDescShortTxt_A1;

    /** CHILD_MDSE_QTY_A1*/
	public final EZDCBigDecimalItem              childMdseQty_A1;

    /** COA_PROJ_DESC_TXT_A1*/
	public final EZDCStringItem              coaProjDescTxt_A1;

    /** COA_PROD_CD_A1*/
	public final EZDCStringItem              coaProdCd_A1;

    /** EFF_FROM_DT_A1*/
	public final EZDCDateItem              effFromDt_A1;

    /** EFF_THRU_DT_A1*/
	public final EZDCDateItem              effThruDt_A1;

    /** XX_SCR_ITEM_10_TXT_A1*/
	public final EZDCStringItem              xxScrItem10Txt_A1;

    /** _EZUpdateDateTime_A1*/
	public final EZDCStringItem              ezUpTime_A1;

    /** _EZUpTimeZone_A1*/
	public final EZDCStringItem              ezUpTimeZone_A1;

    /** INVTY_CTRL_FLG_A1*/
	public final EZDCStringItem              invtyCtrlFlg_A1;

    /** BASE_PKG_UOM_CD_A1*/
	public final EZDCStringItem              basePkgUomCd_A1;

    /** ORD_TAKE_MDSE_CD_A1*/
	public final EZDCStringItem              ordTakeMdseCd_A1;

    /** MDSE_CD_A2*/
	public final EZDCStringItem              mdseCd_A2;

    /** COA_MDSE_TP_CD_A1*/
	public final EZDCStringItem              coaMdseTpCd_A1;

    /** MAIN_CMPSN_FLG_A1*/
	public final EZDCStringItem              mainCmpsnFlg_A1;

    /** MDSE_CMPSN_TP_CD_A1*/
	public final EZDCStringItem              mdseCmpsnTpCd_A1;

    /** XX_REC_HIST_CRAT_TS_A1*/
	public final EZDCStringItem              xxRecHistCratTs_A1;

    /** XX_REC_HIST_CRAT_BY_NM_A1*/
	public final EZDCStringItem              xxRecHistCratByNm_A1;

    /** XX_REC_HIST_UPD_TS_A1*/
	public final EZDCStringItem              xxRecHistUpdTs_A1;

    /** XX_REC_HIST_UPD_BY_NM_A1*/
	public final EZDCStringItem              xxRecHistUpdByNm_A1;

    /** XX_REC_HIST_TBL_NM_A1*/
	public final EZDCStringItem              xxRecHistTblNm_A1;


	/**
	 * NMAL0240_ACMsg is constructor.
	 * The initialization when the instance of NMAL0240_ACMsg is generated.
	 */
	public NMAL0240_ACMsg() {
		this(false, -1);
	}

	/**
	 * NMAL0240_ACMsg is constructor.
	 * The initialization when the instance of NMAL0240_ACMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NMAL0240_ACMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxPgFlg_A1 = (EZDCStringItem)newItem("xxPgFlg_A1");
		xxDplyCtrlFlg_A1 = (EZDCStringItem)newItem("xxDplyCtrlFlg_A1");
		xxChkBox_A1 = (EZDCStringItem)newItem("xxChkBox_A1");
		xxNum_A1 = (EZDCBigDecimalItem)newItem("xxNum_A1");
		xxNum_A2 = (EZDCBigDecimalItem)newItem("xxNum_A2");
		xxRowNum_A1 = (EZDCBigDecimalItem)newItem("xxRowNum_A1");
		cmpsnChngReqPk_A1 = (EZDCBigDecimalItem)newItem("cmpsnChngReqPk_A1");
		cmpsnPk_A1 = (EZDCBigDecimalItem)newItem("cmpsnPk_A1");
		mdseCd_A1 = (EZDCStringItem)newItem("mdseCd_A1");
		mdseDescShortTxt_A1 = (EZDCStringItem)newItem("mdseDescShortTxt_A1");
		childMdseQty_A1 = (EZDCBigDecimalItem)newItem("childMdseQty_A1");
		coaProjDescTxt_A1 = (EZDCStringItem)newItem("coaProjDescTxt_A1");
		coaProdCd_A1 = (EZDCStringItem)newItem("coaProdCd_A1");
		effFromDt_A1 = (EZDCDateItem)newItem("effFromDt_A1");
		effThruDt_A1 = (EZDCDateItem)newItem("effThruDt_A1");
		xxScrItem10Txt_A1 = (EZDCStringItem)newItem("xxScrItem10Txt_A1");
		ezUpTime_A1 = (EZDCStringItem)newItem("ezUpTime_A1");
		ezUpTimeZone_A1 = (EZDCStringItem)newItem("ezUpTimeZone_A1");
		invtyCtrlFlg_A1 = (EZDCStringItem)newItem("invtyCtrlFlg_A1");
		basePkgUomCd_A1 = (EZDCStringItem)newItem("basePkgUomCd_A1");
		ordTakeMdseCd_A1 = (EZDCStringItem)newItem("ordTakeMdseCd_A1");
		mdseCd_A2 = (EZDCStringItem)newItem("mdseCd_A2");
		coaMdseTpCd_A1 = (EZDCStringItem)newItem("coaMdseTpCd_A1");
		mainCmpsnFlg_A1 = (EZDCStringItem)newItem("mainCmpsnFlg_A1");
		mdseCmpsnTpCd_A1 = (EZDCStringItem)newItem("mdseCmpsnTpCd_A1");
		xxRecHistCratTs_A1 = (EZDCStringItem)newItem("xxRecHistCratTs_A1");
		xxRecHistCratByNm_A1 = (EZDCStringItem)newItem("xxRecHistCratByNm_A1");
		xxRecHistUpdTs_A1 = (EZDCStringItem)newItem("xxRecHistUpdTs_A1");
		xxRecHistUpdByNm_A1 = (EZDCStringItem)newItem("xxRecHistUpdByNm_A1");
		xxRecHistTblNm_A1 = (EZDCStringItem)newItem("xxRecHistTblNm_A1");
	}

	/**
	 * get the type of array which is stored
	 * @return NMAL0240_ACMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NMAL0240_ACMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxPgFlg_A1", "xxPgFlg_A1", "A1", null, TYPE_HANKAKUEISU, "1", null},
	{"xxDplyCtrlFlg_A1", "xxDplyCtrlFlg_A1", "A1", null, TYPE_HANKAKUEISU, "1", null},
	{"xxChkBox_A1", "xxChkBox_A1", "A1", null, TYPE_HANKAKUEIJI, "1", null},
	{"xxNum_A1", "xxNum_A1", "A1", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxNum_A2", "xxNum_A2", "A2", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxRowNum_A1", "xxRowNum_A1", "A1", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"cmpsnChngReqPk_A1", "cmpsnChngReqPk_A1", "A1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"cmpsnPk_A1", "cmpsnPk_A1", "A1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"mdseCd_A1", "mdseCd_A1", "A1", null, TYPE_HANKAKUEISU, "16", null},
	{"mdseDescShortTxt_A1", "mdseDescShortTxt_A1", "A1", null, TYPE_HANKAKUEISU, "250", null},
	{"childMdseQty_A1", "childMdseQty_A1", "A1", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"coaProjDescTxt_A1", "coaProjDescTxt_A1", "A1", null, TYPE_HANKAKUEISU, "50", null},
	{"coaProdCd_A1", "coaProdCd_A1", "A1", null, TYPE_HANKAKUEISU, "8", null},
	{"effFromDt_A1", "effFromDt_A1", "A1", null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt_A1", "effThruDt_A1", "A1", null, TYPE_NENTSUKIHI, "8", null},
	{"xxScrItem10Txt_A1", "xxScrItem10Txt_A1", "A1", null, TYPE_HANKAKUEISU, "10", null},
	{"ezUpTime_A1", "ezUpTime_A1", "A1", null, TYPE_HANKAKUEISU, "17", null},
	{"ezUpTimeZone_A1", "ezUpTimeZone_A1", "A1", null, TYPE_HANKAKUEISU, "5", null},
	{"invtyCtrlFlg_A1", "invtyCtrlFlg_A1", "A1", null, TYPE_HANKAKUEISU, "1", null},
	{"basePkgUomCd_A1", "basePkgUomCd_A1", "A1", null, TYPE_HANKAKUEISU, "4", null},
	{"ordTakeMdseCd_A1", "ordTakeMdseCd_A1", "A1", null, TYPE_HANKAKUEISU, "8", null},
	{"mdseCd_A2", "mdseCd_A2", "A2", null, TYPE_HANKAKUEISU, "16", null},
	{"coaMdseTpCd_A1", "coaMdseTpCd_A1", "A1", null, TYPE_HANKAKUEISU, "2", null},
	{"mainCmpsnFlg_A1", "mainCmpsnFlg_A1", "A1", null, TYPE_HANKAKUEISU, "1", null},
	{"mdseCmpsnTpCd_A1", "mdseCmpsnTpCd_A1", "A1", null, TYPE_HANKAKUEISU, "2", null},
	{"xxRecHistCratTs_A1", "xxRecHistCratTs_A1", "A1", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistCratByNm_A1", "xxRecHistCratByNm_A1", "A1", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistUpdTs_A1", "xxRecHistUpdTs_A1", "A1", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistUpdByNm_A1", "xxRecHistUpdByNm_A1", "A1", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistTblNm_A1", "xxRecHistTblNm_A1", "A1", null, TYPE_HANKAKUEISU, "60", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_PG_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPgFlg_A1
        {"XX_DPLY_CTRL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDplyCtrlFlg_A1
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_A1
        {"XX_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxNum_A1
        {"XX_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxNum_A2
        {"XX_ROW_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRowNum_A1
        {"CMPSN_CHNG_REQ_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cmpsnChngReqPk_A1
        {"CMPSN_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cmpsnPk_A1
        {"MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd_A1
        {"MDSE_DESC_SHORT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseDescShortTxt_A1
        {"CHILD_MDSE_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//childMdseQty_A1
        {"COA_PROJ_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaProjDescTxt_A1
        {"COA_PROD_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaProdCd_A1
        {"EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effFromDt_A1
        {"EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effThruDt_A1
        {"XX_SCR_ITEM_10_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxScrItem10Txt_A1
        {"_EZUpdateDateTime",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTime_A1
        {"_EZUpTimeZone",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTimeZone_A1
        {"INVTY_CTRL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invtyCtrlFlg_A1
        {"BASE_PKG_UOM_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//basePkgUomCd_A1
        {"ORD_TAKE_MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordTakeMdseCd_A1
        {"MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd_A2
        {"COA_MDSE_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaMdseTpCd_A1
        {"MAIN_CMPSN_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mainCmpsnFlg_A1
        {"MDSE_CMPSN_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCmpsnTpCd_A1
        {"XX_REC_HIST_CRAT_TS",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratTs_A1
        {"XX_REC_HIST_CRAT_BY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratByNm_A1
        {"XX_REC_HIST_UPD_TS",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdTs_A1
        {"XX_REC_HIST_UPD_BY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdByNm_A1
        {"XX_REC_HIST_TBL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistTblNm_A1
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

