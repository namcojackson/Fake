//This file was automatically generated by Business Component Interface Definition Document (Define Business Application Global Area) and XLA200710010.
// Generated on    :20100204110010000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *ZZIL0020_DSMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.ZZIL0020;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is ZZIL0020 Business Application Global Area Message class.
 * @author
 * @version XLA200710010
 */
public class ZZIL0020_DSMsg extends EZDSMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** MQ_CONFIG_ID_D*/
	public final EZDSStringItem              mqConfigId_D;

    /** TRNSP_TP_D*/
	public final EZDSStringItem              trnspTp_D;

    /** HOST_NM_D*/
	public final EZDSStringItem              hostNm_D;

    /** CH_NM_D*/
	public final EZDSStringItem              chNm_D;

    /** PORT_NUM_D*/
	public final EZDSStringItem              portNum_D;

    /** QUEUE_CONNECT_USR_D*/
	public final EZDSStringItem              queueConnectUsr_D;

    /** QUEUE_CONNECT_PASSWORD_D*/
	public final EZDSStringItem              queueConnectPassword_D;

    /** QUEUE_MGR_D*/
	public final EZDSStringItem              queueMgr_D;

    /** QUEUE_NM_D*/
	public final EZDSStringItem              queueNm_D;

    /** REPLY_QUEUE_NM_D*/
	public final EZDSStringItem              replyQueueNm_D;

    /** FAIL_QUEUE_NM_D*/
	public final EZDSStringItem              failQueueNm_D;


	/**
	 * ZZIL0020_DSMsg is constructor.
	 * The initialization when the instance of ZZIL0020_DSMsg is generated.
	 */
	public ZZIL0020_DSMsg() {
		this(false, -1);
	}

	/**
	 * ZZIL0020_DSMsg is constructor.
	 * The initialization when the instance of ZZIL0020_DSMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public ZZIL0020_DSMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		mqConfigId_D = (EZDSStringItem)newItem("mqConfigId_D");
		trnspTp_D = (EZDSStringItem)newItem("trnspTp_D");
		hostNm_D = (EZDSStringItem)newItem("hostNm_D");
		chNm_D = (EZDSStringItem)newItem("chNm_D");
		portNum_D = (EZDSStringItem)newItem("portNum_D");
		queueConnectUsr_D = (EZDSStringItem)newItem("queueConnectUsr_D");
		queueConnectPassword_D = (EZDSStringItem)newItem("queueConnectPassword_D");
		queueMgr_D = (EZDSStringItem)newItem("queueMgr_D");
		queueNm_D = (EZDSStringItem)newItem("queueNm_D");
		replyQueueNm_D = (EZDSStringItem)newItem("replyQueueNm_D");
		failQueueNm_D = (EZDSStringItem)newItem("failQueueNm_D");
	}

	/**
	 * get the type of array which is stored
	 * @return ZZIL0020_DSMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new ZZIL0020_DSMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"mqConfigId_D", "mqConfigId_D", "D", null, TYPE_HANKAKUEISU, "10", null},
	{"trnspTp_D", "trnspTp_D", "D", null, TYPE_HANKAKUEISU, "10", null},
	{"hostNm_D", "hostNm_D", "D", null, TYPE_HANKAKUEISU, "30", null},
	{"chNm_D", "chNm_D", "D", null, TYPE_HANKAKUEISU, "30", null},
	{"portNum_D", "portNum_D", "D", null, TYPE_HANKAKUSUJI, "5", null},
	{"queueConnectUsr_D", "queueConnectUsr_D", "D", null, TYPE_HANKAKUEISU, "16", null},
	{"queueConnectPassword_D", "queueConnectPassword_D", "D", null, TYPE_HANKAKUEISU, "16", null},
	{"queueMgr_D", "queueMgr_D", "D", null, TYPE_HANKAKUEISU, "100", null},
	{"queueNm_D", "queueNm_D", "D", null, TYPE_HANKAKUEISU, "100", null},
	{"replyQueueNm_D", "replyQueueNm_D", "D", null, TYPE_HANKAKUEISU, "100", null},
	{"failQueueNm_D", "failQueueNm_D", "D", null, TYPE_HANKAKUEISU, "100", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"MQ_CONFIG_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mqConfigId_D
        {"TRNSP_TP",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trnspTp_D
        {"HOST_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//hostNm_D
        {"CH_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//chNm_D
        {"PORT_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//portNum_D
        {"QUEUE_CONNECT_USR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//queueConnectUsr_D
        {"QUEUE_CONNECT_PASSWORD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//queueConnectPassword_D
        {"QUEUE_MGR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//queueMgr_D
        {"QUEUE_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//queueNm_D
        {"REPLY_QUEUE_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//replyQueueNm_D
        {"FAIL_QUEUE_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//failQueueNm_D
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

