//This file was automatically generated by Common Business Component Interface Definition Document and XLA200710010.
// Generated on    :20230411144945000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :CommonBusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSZC005001_xxTmEventListPMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.parts;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSZC005001 Common Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSZC005001_xxTmEventListPMsg extends EZDPMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** FSR_VISIT_TM_EVENT_PK*/
	public final EZDPBigDecimalItem              fsrVisitTmEventPk;

    /** FSR_NUM*/
	public final EZDPStringItem              fsrNum;

    /** FSR_VISIT_NUM*/
	public final EZDPStringItem              fsrVisitNum;

    /** SVC_TM_EVENT_CD*/
	public final EZDPStringItem              svcTmEventCd;

    /** MDSE_CD*/
	public final EZDPStringItem              mdseCd;

    /** SVC_TASK_NUM*/
	public final EZDPStringItem              svcTaskNum;

    /** SVC_TM_EVENT_FROM_DT*/
	public final EZDPDateItem              svcTmEventFromDt;

    /** SVC_TM_EVENT_FROM_TM*/
	public final EZDPStringItem              svcTmEventFromTm;

    /** SVC_TM_EVENT_TO_DT*/
	public final EZDPDateItem              svcTmEventToDt;

    /** SVC_TM_EVENT_TO_TM*/
	public final EZDPStringItem              svcTmEventToTm;

    /** SVC_TM_EVENT_TZ*/
	public final EZDPStringItem              svcTmEventTz;

    /** DURN_TM_NUM*/
	public final EZDPBigDecimalItem              durnTmNum;

    /** MACH_DOWN_FLG*/
	public final EZDPStringItem              machDownFlg;

    /** SVC_MOD_PLN_ID*/
	public final EZDPStringItem              svcModPlnId;

    /** SVC_LBOR_CMNT_TXT*/
	public final EZDPStringItem              svcLborCmntTxt;

    /** SVC_LBOR_CHRG_FLG*/
	public final EZDPStringItem              svcLborChrgFlg;

    /** SVC_CHRG_CHNG_RSN_CD*/
	public final EZDPStringItem              svcChrgChngRsnCd;

    /** SER_NUM_TXT*/
	public final EZDPStringItem              serNumTxt;

    /** MOD_ITEM_TXT*/
	public final EZDPStringItem              modItemTxt;


	/**
	 * NSZC005001_xxTmEventListPMsg is constructor.
	 * The initialization when the instance of NSZC005001_xxTmEventListPMsg is generated.
	 */
	public NSZC005001_xxTmEventListPMsg() {
		this(false, -1);
	}

	/**
	 * NSZC005001_xxTmEventListPMsg is constructor.
	 * The initialization when the instance of NSZC005001_xxTmEventListPMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSZC005001_xxTmEventListPMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		fsrVisitTmEventPk = (EZDPBigDecimalItem)newItem("fsrVisitTmEventPk");
		fsrNum = (EZDPStringItem)newItem("fsrNum");
		fsrVisitNum = (EZDPStringItem)newItem("fsrVisitNum");
		svcTmEventCd = (EZDPStringItem)newItem("svcTmEventCd");
		mdseCd = (EZDPStringItem)newItem("mdseCd");
		svcTaskNum = (EZDPStringItem)newItem("svcTaskNum");
		svcTmEventFromDt = (EZDPDateItem)newItem("svcTmEventFromDt");
		svcTmEventFromTm = (EZDPStringItem)newItem("svcTmEventFromTm");
		svcTmEventToDt = (EZDPDateItem)newItem("svcTmEventToDt");
		svcTmEventToTm = (EZDPStringItem)newItem("svcTmEventToTm");
		svcTmEventTz = (EZDPStringItem)newItem("svcTmEventTz");
		durnTmNum = (EZDPBigDecimalItem)newItem("durnTmNum");
		machDownFlg = (EZDPStringItem)newItem("machDownFlg");
		svcModPlnId = (EZDPStringItem)newItem("svcModPlnId");
		svcLborCmntTxt = (EZDPStringItem)newItem("svcLborCmntTxt");
		svcLborChrgFlg = (EZDPStringItem)newItem("svcLborChrgFlg");
		svcChrgChngRsnCd = (EZDPStringItem)newItem("svcChrgChngRsnCd");
		serNumTxt = (EZDPStringItem)newItem("serNumTxt");
		modItemTxt = (EZDPStringItem)newItem("modItemTxt");
	}

	/**
	 * get the type of array which is stored
	 * @return NSZC005001_xxTmEventListPMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSZC005001_xxTmEventListPMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"fsrVisitTmEventPk", "fsrVisitTmEventPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"fsrNum", "fsrNum", null, null, TYPE_HANKAKUEISU, "10", null},
	{"fsrVisitNum", "fsrVisitNum", null, null, TYPE_HANKAKUEISU, "10", null},
	{"svcTmEventCd", "svcTmEventCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"mdseCd", "mdseCd", null, null, TYPE_HANKAKUEISU, "16", null},
	{"svcTaskNum", "svcTaskNum", null, null, TYPE_HANKAKUEISU, "10", null},
	{"svcTmEventFromDt", "svcTmEventFromDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"svcTmEventFromTm", "svcTmEventFromTm", null, null, TYPE_HANKAKUSUJI, "6", null},
	{"svcTmEventToDt", "svcTmEventToDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"svcTmEventToTm", "svcTmEventToTm", null, null, TYPE_HANKAKUSUJI, "6", null},
	{"svcTmEventTz", "svcTmEventTz", null, null, TYPE_HANKAKUEISU, "5", null},
	{"durnTmNum", "durnTmNum", null, null, TYPE_SEISU_SYOSU, "4", "0"},
	{"machDownFlg", "machDownFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"svcModPlnId", "svcModPlnId", null, null, TYPE_HANKAKUEISU, "16", null},
	{"svcLborCmntTxt", "svcLborCmntTxt", null, null, TYPE_HANKAKUEISU, "60", null},
	{"svcLborChrgFlg", "svcLborChrgFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"svcChrgChngRsnCd", "svcChrgChngRsnCd", null, null, TYPE_HANKAKUEISU, "3", null},
	{"serNumTxt", "serNumTxt", null, null, TYPE_HANKAKUEISU, "80", null},
	{"modItemTxt", "modItemTxt", null, null, TYPE_HANKAKUEISU, "80", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"FSR_VISIT_TM_EVENT_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//fsrVisitTmEventPk
        {"FSR_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//fsrNum
        {"FSR_VISIT_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//fsrVisitNum
        {"SVC_TM_EVENT_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTmEventCd
        {"MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd
        {"SVC_TASK_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTaskNum
        {"SVC_TM_EVENT_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTmEventFromDt
        {"SVC_TM_EVENT_FROM_TM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTmEventFromTm
        {"SVC_TM_EVENT_TO_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTmEventToDt
        {"SVC_TM_EVENT_TO_TM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTmEventToTm
        {"SVC_TM_EVENT_TZ",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTmEventTz
        {"DURN_TM_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//durnTmNum
        {"MACH_DOWN_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//machDownFlg
        {"SVC_MOD_PLN_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcModPlnId
        {"SVC_LBOR_CMNT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcLborCmntTxt
        {"SVC_LBOR_CHRG_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcLborChrgFlg
        {"SVC_CHRG_CHNG_RSN_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcChrgChngRsnCd
        {"SER_NUM_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNumTxt
        {"MOD_ITEM_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//modItemTxt
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

