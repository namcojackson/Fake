<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<sqlMap namespace="NPAL1010Query">
    <typeAlias alias="NPAL1010_ACMsg"    type="business.blap.NPAL1010.NPAL1010_ACMsg"/>

    <statement id="searchUsgPullDown" parameterClass="Map" resultClass="Map">
        SELECT
                 R.LOC_ROLE_TP_CD  AS LOC_ROLE_TP_CD
            ,    R.LOC_ROLE_TP_NM  AS LOC_ROLE_TP_NM
        FROM 
              LOC_ROLE_TP R
        WHERE 
               R.GLBL_CMPY_CD     =     #glblCmpyCd#
              <iterate property="locRoleTpList" var="locRoleTpList[]" open="AND R.LOC_ROLE_TP_CD IN(" close=")" conjunction=",">
               #locRoleTpList[]#
              </iterate>
           AND R.EZCANCELFLAG     =     '0'
        ORDER BY
           LOC_ROLE_TP_SORT_NUM
    </statement>

    <statement id="searchCatgPullDown" parameterClass="Map" resultClass="Map">
        SELECT
                 C.RTL_WH_CATG_CD        AS RTL_WH_CATG_CD
            ,    C.RTL_WH_CATG_DESC_TXT  AS RTL_WH_CATG_DESC_TXT
        FROM 
               RTL_WH_CATG C
        WHERE 
               C.GLBL_CMPY_CD     =     #glblCmpyCd#
           AND C.EZCANCELFLAG     =     '0'
        ORDER BY
           C.RTL_WH_CATG_SORT_NUM
    </statement>

    <statement id="searchInvtyAcctPullDown" parameterClass="Map" resultClass="Map">
        SELECT
                 C.INVTY_ACCT_CD  AS INVTY_ACCT_CD
            ,    C.INVTY_ACCT_NM  AS INVTY_ACCT_NM
        FROM 
               INVTY_ACCT C
        WHERE 
               C.GLBL_CMPY_CD     =     #glblCmpyCd#
           AND C.EZCANCELFLAG     =     '0'
        ORDER BY
           C.INVTY_ACCT_SORT_NUM
    </statement>

    <statement id="searchInvtyOwnerPullDown" parameterClass="Map" resultClass="Map">
         SELECT
               IO.INVTY_OWNR_CD          AS INVTY_OWNR_CD
             , IO.INVTY_OWNR_DESC_TXT    AS INVTY_OWNR_DESC_TXT
          FROM 
               INVTY_OWNR IO
         WHERE
               IO.GLBL_CMPY_CD     = #glblCmpyCd#
           AND IO.EZCANCELFLAG     = '0'
         ORDER BY
               IO.INVTY_OWNR_SORT_NUM
    </statement>

    <statement id="searchWhOperationPullDown" parameterClass="Map" resultClass="Map">
         SELECT
               WO.WH_OWNR_CD          AS WH_OWNR_CD
             , WO.WH_OWNR_DESC_TXT    AS WH_OWNR_DESC_TXT
          FROM 
               WH_OWNR WO
         WHERE
               WO.GLBL_CMPY_CD     = #glblCmpyCd#
           AND WO.EZCANCELFLAG     = '0'
         ORDER BY
               WO.WH_OWNR_SORT_NUM
    </statement>

    <statement id="searchLocation" parameterClass="Map" resultMap="result.NPAL1010_ACMsg">
        SELECT
                 INVTY_LOC_CD
            ,    INVTY_LOC_NM
            ,    LOC_ROLE_TP_CD
            ,    POST_CD
            ,    XX_EDT_ADDR
            ,    ADDL_LOC_NM
            ,    RTL_WH_NM
            ,    RTL_SWH_NM
            ,    RTL_WH_CATG_DESC_TXT
            ,    RTL_WH_CD
            ,    RTL_SWH_CD
            ,    INVTY_ACCT_CD
            ,    INVTY_OWNR_NM
            ,    WH_OWNR_NM
            ,    INVTY_ACCT_NM
            ,    OWNR_CD
            ,    FULL_PSN_NM
            ,    LOC_NUM
            ,    DS_LOC_NM
         FROM (
        SELECT
            <isEqual property="onlyRtlWhFlg" compareValue="Y">
                 WH.RTL_WH_CD       AS INVTY_LOC_CD
            ,    WH.RTL_WH_NM       AS INVTY_LOC_NM
            </isEqual>
            <isEqual property="onlyRtlWhFlg" compareValue="N">
                 WH.INVTY_LOC_CD    AS INVTY_LOC_CD
            ,    WH.INVTY_LOC_NM    AS INVTY_LOC_NM
            </isEqual>
            ,    WH.INVTY_LOC_TP_CD AS INVTY_LOC_TP_CD
            ,    R.LOC_ROLE_TP_CD   AS LOC_ROLE_TP_CD
            ,    WH.POST_CD         AS POST_CD
            ,    RTRIM(WH.FIRST_LINE_ADDR) || ',' || RTRIM(WH.CTY_ADDR)  || ',' || RTRIM(WH.ST_CD) as XX_EDT_ADDR
            ,    WH.ADDL_LOC_NM     AS ADDL_LOC_NM
            ,    WH.RTL_WH_NM       AS RTL_WH_NM
            <isEqual property="onlyRtlWhFlg" compareValue="Y">
            ,    ''                 AS RTL_SWH_NM
            </isEqual>
            <isEqual property="onlyRtlWhFlg" compareValue="N">
            ,    WH.RTL_SWH_NM      AS RTL_SWH_NM
            </isEqual>
            ,    RC.RTL_WH_CATG_DESC_TXT  AS RTL_WH_CATG_DESC_TXT
            ,    WH.RTL_WH_CD       AS RTL_WH_CD
            <isEqual property="onlyRtlWhFlg" compareValue="Y">
            ,    ''                 AS RTL_SWH_CD
            </isEqual>
            <isEqual property="onlyRtlWhFlg" compareValue="N">
            ,    WH.RTL_SWH_CD      AS RTL_SWH_CD
            </isEqual>
            ,    RW.INVTY_ACCT_CD   AS INVTY_ACCT_CD
            ,    IO.INVTY_OWNR_NM   AS INVTY_OWNR_NM
            ,    WO.WH_OWNR_NM      AS WH_OWNR_NM
            ,    IA.INVTY_ACCT_NM   AS INVTY_ACCT_NM
            ,    CASE
                     WHEN RW.LOC_TP_CD = '06' THEN RW.TECH_TOC_CD
                     ELSE WH_MGR_PSN_CD
                 END                AS OWNR_CD
            ,    CASE
                     WHEN RW.LOC_TP_CD = '06' THEN NVL(TM.TECH_NM, SPVT.FULL_PSN_NM)
                     ELSE SPVWH.FULL_PSN_NM
                 END                AS FULL_PSN_NM
<!-- START 2018/10/15 M.Naito [QC#28394,MOD] -->
            <!-- ,    PLW.LOC_NUM        AS LOC_NUM -->
            <!-- ,    PLW.DS_LOC_NM     AS DS_LOC_NM -->
            ,    RW.RTL_WH_CD        AS LOC_NUM
            ,    RW.RTL_WH_NM     AS DS_LOC_NM
<!-- END 2018/10/15 M.Naito [QC#28394,MOD] -->
        FROM
              DS_INVTY_LOC_V WH
            , LOC_USG        U
            , LOC_ROLE_TP    R
            , RTL_WH         RW
            , RTL_WH_CATG    RC
            , INVTY_OWNR     IO
            , WH_OWNR        WO
            , INVTY_ACCT     IA
<!-- START 2018/10/15 M.Naito [QC#28394,DEL] -->
            <!-- , PTY_LOC_WRK    PLW -->
<!-- END 2018/10/15 M.Naito [QC#28394,DEL] -->
            , S21_PSN_V      SPVWH
            , S21_PSN_V      SPVT
            , TECH_MSTR      TM
        WHERE
                WH.RGTN_STS_CD              =     #rgtnStsCd#
            <isNotNull property="invtyLocCdList">
<!-- START 2018/10/15 M.Naito [QC#28394,MOD] -->
                <!-- <iterate property="invtyLocCdList" var="invtyLocCdList[]" open="AND (PLW.LOC_NUM LIKE " conjunction= "OR PLW.LOC_NUM LIKE " close=")"> -->
                <iterate property="invtyLocCdList" var="invtyLocCdList[]" open="AND (RW.RTL_WH_CD LIKE " conjunction= "OR RW.RTL_WH_CD LIKE " close=")">
<!-- END 2018/10/15 M.Naito [QC#28394,MOD] -->
                    #invtyLocCdList[]#
                </iterate>
            </isNotNull>
            <isNotNull property="locRoleTpCd">
              AND U.LOC_ROLE_TP_CD          =     #locRoleTpCd#
            </isNotNull>
            <isNull property="locRoleTpCd">
             <isNotNull property="locRoleTpList">
              <iterate property="locRoleTpList" var="locRoleTpList[]" open="AND U.LOC_ROLE_TP_CD IN(" close=")" conjunction=",">
               #locRoleTpList[]#
              </iterate>
             </isNotNull>
            </isNull>
<!-- START 2018/10/15 M.Naito [QC#28394,DEL] -->
            <!-- <isNotNull property="invtyLocNmList">
                <iterate property="invtyLocNmList" var="invtyLocNmList[]" open="AND (UPPER(DS_LOC_NM) LIKE " conjunction= "OR UPPER(DS_LOC_NM) LIKE " close=")">
                    #invtyLocNmList[]#
                </iterate>
            </isNotNull> -->
<!-- END 2018/10/15 M.Naito [QC#28394,DEL] -->
            <isNotNull property="addlLocNm">
              AND UPPER(WH.ADDL_LOC_NM)     LIKE  #addlLocNm#
            </isNotNull>
            <isNotNull property="firstLineAddr">
              AND UPPER(WH.FIRST_LINE_ADDR) LIKE  #firstLineAddr#
            </isNotNull>
            <isNotNull property="postCd">
              AND WH.POST_CD                =     #postCd#
            </isNotNull>
            <isNotNull property="ctyAddr">
              AND UPPER(WH.CTY_ADDR)        LIKE  #ctyAddr#
            </isNotNull>
            <isNotNull property="stCd">
              AND WH.ST_CD                  =     #stCd#
            </isNotNull>
            <isNotNull property="dataSecFlg">
             <isEqual property="dataSecFlg" compareValue="Y">
              <iterate property="dataSecList" var="dataSecList[]" open="AND WH.INVTY_LOC_CD IN(" close=")" conjunction=",">
               #dataSecList[]#
              </iterate>
             </isEqual>
            </isNotNull>
              AND (WH.WH_SYS_TP_CD    <![CDATA[ <> ]]>    #na# OR WH.WH_SYS_TP_CD IS NULL)
            <isNotNull property="rtlWhCdList">
                <iterate property="rtlWhCdList" var="rtlWhCdList[]" open="AND (WH.RTL_WH_CD LIKE " conjunction= "OR WH.RTL_WH_CD LIKE " close=")">
                    #rtlWhCdList[]#
                </iterate>
            </isNotNull>
            <isNotNull property="rtlWhNmList">
                <iterate property="rtlWhNmList" var="rtlWhNmList[]" open="AND (UPPER(WH.RTL_WH_NM) LIKE " conjunction= "OR UPPER(WH.RTL_WH_NM) LIKE " close=")">
                    #rtlWhNmList[]#
                </iterate>
            </isNotNull>
            <isNotNull property="rtlSwhCdList">
                <iterate property="rtlSwhCdList" var="rtlSwhCdList[]" open="AND (WH.RTL_SWH_CD LIKE " conjunction= "OR WH.RTL_SWH_CD LIKE " close=")">
                    #rtlSwhCdList[]#
                </iterate>
            </isNotNull>
            <isNotNull property="rtlSwhNmList">
                <iterate property="rtlSwhNmList" var="rtlSwhNmList[]" open="AND (UPPER(WH.RTL_SWH_NM) LIKE " conjunction= "OR UPPER(WH.RTL_SWH_NM) LIKE " close=")">
                    #rtlSwhNmList[]#
                </iterate>
            </isNotNull>
            <isNotNull property="invtyAcctCd">
              AND RW.INVTY_ACCT_CD          LIKE  #invtyAcctCd#
            </isNotNull>
            <isNotNull property="invtyOwnrCd">
              AND RW.INVTY_OWNR_CD          LIKE  #invtyOwnrCd#
            </isNotNull>
            <isNotNull property="whOwnrCd">
              AND RW.WH_OWNR_CD             LIKE  #whOwnrCd#
            </isNotNull>
              AND WH.PTY_LOC_PK             =     U.PTY_LOC_PK
              AND U.LOC_ROLE_TP_CD          =     R.LOC_ROLE_TP_CD
            <isNotNull property="rtlWhCatgCd">
              AND WH.RTL_WH_CATG_CD         =     #rtlWhCatgCd#
            </isNotNull>
            <isNotNull property="whMgrPsnCd">
              AND (    RW.WH_MGR_PSN_CD     LIKE  #whMgrPsnCd#
                    OR RW.TECH_TOC_CD       LIKE  #whMgrPsnCd# )
            </isNotNull>
            <isEqual property="activeFlg" compareValue="Y">
             AND RW.EFF_FROM_DT                          &lt;= #salesDate#
             AND NVL(RW.EFF_THRU_DT, #effThruDtDefalut#) &gt;= #salesDate#
            </isEqual>
            <isNotNull property="fullPsnNm">
              AND (    UPPER(SPVWH.FULL_PSN_NM) LIKE  UPPER(#fullPsnNm#)
                    OR UPPER(SPVT.FULL_PSN_NM)  LIKE  UPPER(#fullPsnNm#)
                    OR UPPER(TM.TECH_NM)        LIKE  UPPER(#fullPsnNm#) )
            </isNotNull>
<!-- 2017/08/14 QC#20555 ADD BEGIN -->
            <isNotNull property="dsLocNm">
<!-- START 2018/10/15 M.Naito [QC#28394,MOD] -->
              <!--AND PLW.DS_LOC_NM          LIKE     #dsLocNm# -->
              AND RW.RTL_WH_NM          LIKE     #dsLocNm#
<!-- END 2018/10/15 M.Naito [QC#28394,MOD] -->
            </isNotNull>
<!-- 2017/08/14 QC#20555 ADD END -->
              AND RW.RTL_WH_CD              =     WH.RTL_WH_CD
              AND RC.RTL_WH_CATG_CD         =     WH.RTL_WH_CATG_CD
              AND RW.INVTY_OWNR_CD          =     IO.INVTY_OWNR_CD (+)
              AND RW.WH_OWNR_CD             =     WO.WH_OWNR_CD (+)
              AND RW.INVTY_ACCT_CD          =     IA.INVTY_ACCT_CD (+)
<!-- START 2018/10/15 M.Naito [QC#28394,DEL] -->
             <!-- AND RW.RTL_WH_CD              =     PLW.LOC_NUM (+) -->
<!-- END 2018/10/15 M.Naito [QC#28394,DEL] -->
              AND RW.WH_MGR_PSN_CD          =     SPVWH.PSN_CD (+)
              AND RW.TECH_TOC_CD            =     SPVT.PSN_CD (+)
              AND RW.TECH_TOC_CD            =     TM.TECH_TOC_CD (+)
              AND WH.GLBL_CMPY_CD           =     #glblCmpyCd#
              AND U.GLBL_CMPY_CD            =     #glblCmpyCd#
              AND R.GLBL_CMPY_CD            =     #glblCmpyCd#
              AND RW.GLBL_CMPY_CD           =     #glblCmpyCd#
              AND RC.GLBL_CMPY_CD           =     #glblCmpyCd#
              AND IO.GLBL_CMPY_CD (+)       =     #glblCmpyCd#
              AND WO.GLBL_CMPY_CD (+)       =     #glblCmpyCd#
              AND IA.GLBL_CMPY_CD (+)       =     #glblCmpyCd#
<!-- START 2018/10/15 M.Naito [QC#28394,DEL] -->
             <!-- AND PLW.GLBL_CMPY_CD (+)      =     #glblCmpyCd# -->
<!-- END 2018/10/15 M.Naito [QC#28394,DEL] -->
              AND SPVWH.GLBL_CMPY_CD (+)    =     #glblCmpyCd#
              AND SPVT.GLBL_CMPY_CD (+)     =     #glblCmpyCd#
              AND TM.GLBL_CMPY_CD (+)       =     #glblCmpyCd#
              AND WH.EZCANCELFLAG           =     '0'
              AND U.EZCANCELFLAG            =     '0'
              AND R.EZCANCELFLAG            =     '0'
              AND RW.EZCANCELFLAG           =     '0'
              AND RC.EZCANCELFLAG           =     '0'
              AND IO.EZCANCELFLAG (+)       =     '0'
              AND WO.EZCANCELFLAG (+)       =     '0'
              AND IA.EZCANCELFLAG (+)       =     '0'
<!-- START 2018/10/15 M.Naito [QC#28394,DEL] -->
             <!-- AND PLW.EZCANCELFLAG (+)      =     '0' -->
<!-- END 2018/10/15 M.Naito [QC#28394,DEL] -->
              AND SPVWH.EZCANCELFLAG (+)    =     '0'
              AND SPVT.EZCANCELFLAG (+)     =     '0'
              AND TM.EZCANCELFLAG (+)       =     '0'
        <isEqual property="onlyRtlWhFlg" compareValue="Y">
        GROUP BY
                 WH.RTL_WH_CD
            ,    WH.INVTY_LOC_TP_CD
            ,    R.LOC_ROLE_TP_CD
            ,    WH.POST_CD
            ,    RTRIM(WH.FIRST_LINE_ADDR)
            ,    RTRIM(WH.CTY_ADDR)
            ,    RTRIM(WH.ST_CD)
            ,    WH.ADDL_LOC_NM
            ,    WH.RTL_WH_NM
            ,    RC.RTL_WH_CATG_DESC_TXT
            ,    WH.RTL_WH_CD
            ,    RW.INVTY_ACCT_CD
            ,    IO.INVTY_OWNR_NM
            ,    WO.WH_OWNR_NM
            ,    IA.INVTY_ACCT_NM
            ,    CASE
                     WHEN RW.LOC_TP_CD = '06' THEN RW.TECH_TOC_CD
                     ELSE WH_MGR_PSN_CD
                 END
            ,    CASE
                     WHEN RW.LOC_TP_CD = '06' THEN NVL(TM.TECH_NM, SPVT.FULL_PSN_NM)
                     ELSE SPVWH.FULL_PSN_NM
                 END
<!-- START 2018/10/15 M.Naito [QC#28394,MOD] -->
            <!--,    PLW.LOC_NUM -->
            <!--,    PLW.DS_LOC_NM -->
             ,    RW.RTL_WH_CD
             ,    RW.RTL_WH_NM
<!-- END 2018/10/15 M.Naito [QC#28394,MOD] -->
        </isEqual>
        <isNotNull property="virtualWHFlg">
         <isNull property="locRoleTpCd">
          <isEqual property="virtualWHFlg" compareValue="Y">
          UNION ALL SELECT
              <isEqual property="onlyRtlWhFlg" compareValue="Y">
                   WH.RTL_WH_CD       AS INVTY_LOC_CD
              ,    WH.RTL_WH_NM       AS INVTY_LOC_NM
              </isEqual>
              <isEqual property="onlyRtlWhFlg" compareValue="N">
                   WH.INVTY_LOC_CD    AS INVTY_LOC_CD
              ,    WH.INVTY_LOC_NM    AS INVTY_LOC_NM
              </isEqual>
              ,    WH.INVTY_LOC_TP_CD AS INVTY_LOC_TP_CD
              ,    ''                 AS LOC_ROLE_TP_CD
              ,    WH.POST_CD         AS POST_CD
              ,    RTRIM(WH.FIRST_LINE_ADDR) || ',' || RTRIM(WH.CTY_ADDR)  || ',' || RTRIM(WH.ST_CD) as XX_EDT_ADDR
              ,    WH.ADDL_LOC_NM     AS ADDL_LOC_NM
              ,    WH.RTL_WH_NM       AS RTL_WH_NM
              <isEqual property="onlyRtlWhFlg" compareValue="Y">
              ,    ''                 AS RTL_SWH_NM
              </isEqual>
              <isEqual property="onlyRtlWhFlg" compareValue="N">
              ,    WH.RTL_SWH_NM      AS RTL_SWH_NM
              </isEqual>
              ,    RC.RTL_WH_CATG_DESC_TXT  AS RTL_WH_CATG_DESC_TXT
              ,    WH.RTL_WH_CD       AS RTL_WH_CD
              <isEqual property="onlyRtlWhFlg" compareValue="Y">
              ,    ''                 AS RTL_SWH_CD
              </isEqual>
              <isEqual property="onlyRtlWhFlg" compareValue="N">
              ,    WH.RTL_SWH_CD      AS RTL_SWH_CD
              </isEqual>
              ,    RW.INVTY_ACCT_CD   AS INVTY_ACCT_CD
              ,    IO.INVTY_OWNR_NM   AS INVTY_OWNR_NM
              ,    WO.WH_OWNR_NM      AS WH_OWNR_NM
              ,    IA.INVTY_ACCT_NM   AS INVTY_ACCT_NM
              ,    CASE
                       WHEN RW.LOC_TP_CD = '06' THEN RW.TECH_TOC_CD
                       ELSE WH_MGR_PSN_CD
                   END                AS OWNR_CD
              ,    CASE
                       WHEN RW.LOC_TP_CD = '06' THEN NVL(TM.TECH_NM, SPVT.FULL_PSN_NM)
                       ELSE SPVWH.FULL_PSN_NM
                   END                AS FULL_PSN_NM
<!-- START 2018/10/15 M.Naito [QC#28394,MOD] -->
            <!-- ,    PLW.LOC_NUM        AS LOC_NUM -->
            <!-- ,    PLW.DS_LOC_NM     AS DS_LOC_NM -->
             ,    RW.RTL_WH_CD        AS LOC_NUM
             ,    RW.RTL_WH_NM     AS DS_LOC_NM
<!-- END 2018/10/15 M.Naito [QC#28394,MOD] -->
          from DS_INVTY_LOC_V  WH
              , RTL_WH         RW
              , RTL_WH_CATG    RC
              , INVTY_OWNR     IO
              , WH_OWNR        WO
              , INVTY_ACCT     IA
<!-- START 2018/10/15 M.Naito [QC#28394,DEL] -->
              <!-- , PTY_LOC_WRK    PLW -->
<!-- END 2018/10/15 M.Naito [QC#28394,DEL] -->
              , S21_PSN_V      SPVWH
              , S21_PSN_V      SPVT
              , TECH_MSTR      TM
          WHERE 
                  WH.RGTN_STS_CD              =     #rgtnStsCd#
              <isNotNull property="invtyLocCdList">
<!-- START 2018/10/15 M.Naito [QC#28394,MOD] -->
                  <!-- <iterate property="invtyLocCdList" var="invtyLocCdList[]" open="AND (PLW.LOC_NUM LIKE " conjunction= "OR PLW.LOC_NUM LIKE " close=")"> -->
                <iterate property="invtyLocCdList" var="invtyLocCdList[]" open="AND (RW.RTL_WH_CD LIKE " conjunction= "OR RW.RTL_WH_CD LIKE " close=")">
<!-- END 2018/10/15 M.Naito [QC#28394,MOD] -->
                      #invtyLocCdList[]#
                  </iterate>
              </isNotNull>
              <isNotNull property="dataSecFlg">
               <isEqual property="dataSecFlg" compareValue="Y">
                <iterate property="dataSecList" var="dataSecList[]" open="AND WH.INVTY_LOC_CD IN(" close=")" conjunction=",">
                 #dataSecList[]#
                </iterate>
               </isEqual>
              </isNotNull>
<!-- START 2018/10/15 M.Naito [QC#28394,DEL] -->
               <!--<isNotNull property="invtyLocNmList">
                  <iterate property="invtyLocNmList" var="invtyLocNmList[]" open="AND (UPPER(DS_LOC_NM) LIKE " conjunction= "OR UPPER(DS_LOC_NM) LIKE " close=")">
                      #invtyLocNmList[]#
                  </iterate>
              </isNotNull> -->
<!-- END 2018/10/15 M.Naito [QC#28394,DEL] -->
              <isNotNull property="addlLocNm">
                AND UPPER(WH.ADDL_LOC_NM)     LIKE  #addlLocNm#
              </isNotNull>
              <isNotNull property="firstLineAddr">
                AND UPPER(WH.FIRST_LINE_ADDR) LIKE  #firstLineAddr#
              </isNotNull>
              <isNotNull property="postCd">
                AND WH.POST_CD                =     #postCd#
              </isNotNull>
              <isNotNull property="ctyAddr">
                AND UPPER(WH.CTY_ADDR)        LIKE  #ctyAddr#
              </isNotNull>
              <isNotNull property="stCd">
                AND WH.ST_CD                  =     #stCd#
              </isNotNull>
                AND WH.WH_SYS_TP_CD    =     #na#
              <isNotNull property="rtlWhCdList">
                  <iterate property="rtlWhCdList" var="rtlWhCdList[]" open="AND (WH.RTL_WH_CD LIKE " conjunction= "OR WH.RTL_WH_CD LIKE " close=")">
                      #rtlWhCdList[]#
                  </iterate>
              </isNotNull>
              <isNotNull property="rtlWhNmList">
                  <iterate property="rtlWhNmList" var="rtlWhNmList[]" open="AND (UPPER(WH.RTL_WH_NM) LIKE " conjunction= "OR UPPER(WH.RTL_WH_NM) LIKE " close=")">
                      #rtlWhNmList[]#
                  </iterate>
              </isNotNull>
              <isNotNull property="rtlSwhCdList">
                  <iterate property="rtlSwhCdList" var="rtlSwhCdList[]" open="AND (WH.RTL_SWH_CD LIKE " conjunction= "OR WH.RTL_SWH_CD LIKE " close=")">
                      #rtlSwhCdList[]#
                  </iterate>
              </isNotNull>
              <isNotNull property="rtlSwhNmList">
                  <iterate property="rtlSwhNmList" var="rtlSwhNmList[]" open="AND (UPPER(WH.RTL_SWH_NM) LIKE " conjunction= "OR UPPER(WH.RTL_SWH_NM) LIKE " close=")">
                      #rtlSwhNmList[]#
                  </iterate>
              </isNotNull>
              <isNotNull property="invtyAcctCd">
                AND RW.INVTY_ACCT_CD         LIKE  #invtyAcctCd#
              </isNotNull>
              <isNotNull property="invtyOwnrCd">
                AND RW.INVTY_OWNR_CD          LIKE  #invtyOwnrCd#
              </isNotNull>
              <isNotNull property="whOwnrCd">
                AND RW.WH_OWNR_CD             LIKE  #whOwnrCd#
              </isNotNull>
              <isNotNull property="rtlWhCatgCd">
                AND WH.RTL_WH_CATG_CD        =     #rtlWhCatgCd#
              </isNotNull>
              <isNotNull property="whMgrPsnCd">
                AND (    RW.WH_MGR_PSN_CD    LIKE  #whMgrPsnCd#
                      OR RW.TECH_TOC_CD      LIKE  #whMgrPsnCd# )
              </isNotNull>
              <isNotNull property="fullPsnNm">
                AND (    UPPER(SPVWH.FULL_PSN_NM)   LIKE  UPPER(#fullPsnNm#)
                      OR UPPER(SPVT.FULL_PSN_NM)    LIKE  UPPER(#fullPsnNm#)
                      OR UPPER(TM.TECH_NM)          LIKE  UPPER(#fullPsnNm#) )
              </isNotNull>
<!-- 2017/08/14 QC#20555 ADD BEGIN -->
              <isNotNull property="dsLocNm">
<!-- START 2018/10/15 M.Naito [QC#28394,MOD] -->
              <!--AND PLW.DS_LOC_NM          LIKE     #dsLocNm# -->
              AND RW.RTL_WH_NM          LIKE     #dsLocNm#
<!-- END 2018/10/15 M.Naito [QC#28394,MOD] -->
              </isNotNull>
<!-- 2017/08/14 QC#20555 ADD END -->
                AND RW.RTL_WH_CD             =     WH.RTL_WH_CD
                AND RC.RTL_WH_CATG_CD        =     WH.RTL_WH_CATG_CD
                AND RW.INVTY_OWNR_CD         =     IO.INVTY_OWNR_CD (+)
                AND RW.WH_OWNR_CD            =     WO.WH_OWNR_CD (+)
                AND RW.INVTY_ACCT_CD         =     IA.INVTY_ACCT_CD (+)
<!-- START 2018/10/15 M.Naito [QC#28394,DEL] -->
                <!--AND RW.RTL_WH_CD             =     PLW.LOC_NUM (+) -->
<!-- END 2018/10/15 M.Naito [QC#28394,DEL] -->
                AND RW.WH_MGR_PSN_CD         =     SPVWH.PSN_CD (+)
                AND RW.TECH_TOC_CD           =     SPVT.PSN_CD (+)
<!-- START 2018/10/15 M.Naito [QC#28394,ADD] -->
                AND RW.TECH_TOC_CD           =     TM.TECH_TOC_CD (+)
<!-- END 2018/10/15 M.Naito [QC#28394,ADD] -->
                AND WH.GLBL_CMPY_CD          =     #glblCmpyCd#
                AND RW.GLBL_CMPY_CD          =     #glblCmpyCd#
                AND RC.GLBL_CMPY_CD          =     #glblCmpyCd#
                AND IO.GLBL_CMPY_CD (+)      =     #glblCmpyCd#
                AND WO.GLBL_CMPY_CD (+)      =     #glblCmpyCd#
                AND IA.GLBL_CMPY_CD (+)      =     #glblCmpyCd#
<!-- START 2018/10/15 M.Naito [QC#28394,DEL] -->
                <!--AND PLW.GLBL_CMPY_CD (+)     =     #glblCmpyCd# -->
<!-- END 2018/10/15 M.Naito [QC#28394,DEL] -->
                AND SPVWH.GLBL_CMPY_CD (+)   =     #glblCmpyCd#
                AND SPVT.GLBL_CMPY_CD (+)    =     #glblCmpyCd#
                AND TM.GLBL_CMPY_CD (+)      =     #glblCmpyCd#
                AND WH.EZCANCELFLAG          =     '0'
                AND RW.EZCANCELFLAG          =     '0'
                AND RC.EZCANCELFLAG          =     '0'
                AND IO.EZCANCELFLAG (+)      =     '0'
                AND WO.EZCANCELFLAG (+)      =     '0'
                AND IA.EZCANCELFLAG (+)      =     '0'
<!-- START 2018/10/15 M.Naito [QC#28394,DEL] -->
                <!--AND PLW.EZCANCELFLAG (+)     =     '0' -->
<!-- END 2018/10/15 M.Naito [QC#28394,DEL] -->
                AND SPVWH.EZCANCELFLAG (+)   =     '0'
                AND SPVT.EZCANCELFLAG (+)    =     '0'
                AND TM.EZCANCELFLAG (+)      =     '0'
           <isEqual property="onlyRtlWhFlg" compareValue="Y">
          GROUP BY
                   WH.RTL_WH_CD
              ,    WH.INVTY_LOC_TP_CD
              ,    WH.POST_CD
              ,    RTRIM(WH.FIRST_LINE_ADDR)
              ,    RTRIM(WH.CTY_ADDR)
              ,    RTRIM(WH.ST_CD)
              ,    WH.ADDL_LOC_NM
              ,    WH.RTL_WH_NM
              ,    RC.RTL_WH_CATG_DESC_TXT
              ,    WH.RTL_WH_CD
              ,    RW.INVTY_ACCT_CD
              ,    IO.INVTY_OWNR_NM
              ,    WO.WH_OWNR_NM
              ,    IA.INVTY_ACCT_NM
              ,    CASE
                       WHEN RW.LOC_TP_CD = '06' THEN RW.TECH_TOC_CD
                       ELSE WH_MGR_PSN_CD
                   END
              ,    CASE
                       WHEN RW.LOC_TP_CD = '06' THEN NVL(TM.TECH_NM, SPVT.FULL_PSN_NM)
                       ELSE SPVWH.FULL_PSN_NM
                   END
<!-- START 2018/10/15 M.Naito [QC#28394,MOD] -->
            <!--,    PLW.LOC_NUM -->
            <!--,    PLW.DS_LOC_NM -->
             ,    RW.RTL_WH_CD
             ,    RW.RTL_WH_NM
<!-- END 2018/10/15 M.Naito [QC#28394,MOD] -->
           </isEqual>
          </isEqual>
         </isNull>
        </isNotNull>
          ORDER BY
             INVTY_LOC_TP_CD
            ,INVTY_LOC_CD
        )
        WHERE
                ROWNUM               &lt;= 201
        GROUP BY
                 INVTY_LOC_CD
            ,    INVTY_LOC_NM
            ,    LOC_ROLE_TP_CD
            ,    POST_CD
            ,    XX_EDT_ADDR
            ,    ADDL_LOC_NM
            ,    RTL_WH_NM
            ,    RTL_SWH_NM
            ,    RTL_WH_CATG_DESC_TXT
            ,    RTL_WH_CD
            ,    RTL_SWH_CD
            ,    INVTY_ACCT_CD
            ,    INVTY_OWNR_NM
            ,    WH_OWNR_NM
            ,    INVTY_ACCT_NM
            ,    OWNR_CD
            ,    FULL_PSN_NM
            ,    LOC_NUM
            ,    DS_LOC_NM
        ORDER BY
                 INVTY_LOC_CD
            ,    INVTY_LOC_NM
            ,    LOC_ROLE_TP_CD
            ,    POST_CD
            ,    XX_EDT_ADDR
            ,    ADDL_LOC_NM
            ,    RTL_WH_NM
            ,    RTL_SWH_NM
            ,    RTL_WH_CATG_DESC_TXT
            ,    RTL_WH_CD
            ,    RTL_SWH_CD
            ,    INVTY_ACCT_CD
            ,    INVTY_OWNR_NM
            ,    WH_OWNR_NM
            ,    INVTY_ACCT_NM
            ,    OWNR_CD
            ,    FULL_PSN_NM
            ,    LOC_NUM
            ,    DS_LOC_NM
    </statement>

    <resultMap id="result.NPAL1010_ACMsg" class="NPAL1010_ACMsg">
        <result property="invtyLocCd_A"   column="INVTY_LOC_CD"    javaType="EZDSStringItem"/>
        <result property="locRoleTpCd_A"  column="LOC_ROLE_TP_CD"  javaType="EZDSStringItem"/>
        <result property="invtyLocNm_A"   column="INVTY_LOC_NM"    javaType="EZDSStringItem"/>
        <result property="postCd_A"       column="POST_CD"         javaType="EZDSStringItem"/>
        <result property="xxEdtAddr_A"    column="XX_EDT_ADDR"     javaType="EZDSStringItem"/>
        <result property="addlLocNm_A"    column="ADDL_LOC_NM"     javaType="EZDSStringItem"/>
        <result property="rtlWhNm_A"      column="RTL_WH_NM"       javaType="EZDSStringItem"/>
        <result property="rtlSwhNm_A"     column="RTL_SWH_NM"      javaType="EZDSStringItem"/>
        <result property="rtlWhCatgNm_A"  column="RTL_WH_CATG_DESC_TXT"  javaType="EZDSStringItem"/>
        <result property="rtlWhCd_A"      column="RTL_WH_CD"       javaType="EZDSStringItem"/>
        <result property="rtlSwhCd_A"     column="RTL_SWH_CD"      javaType="EZDSStringItem"/>
        <result property="invtyAcctCd_A"  column="INVTY_ACCT_CD"   javaType="EZDSStringItem"/>
        <result property="invtyOwnrNm_A"  column="INVTY_OWNR_NM"   javaType="EZDSStringItem"/>
        <result property="whOwnrNm_A"     column="WH_OWNR_NM"      javaType="EZDSStringItem"/>
        <result property="invtyAcctNm_A"  column="INVTY_ACCT_NM"   javaType="EZDSStringItem"/>
        <result property="whMgrPsnCd_A"   column="OWNR_CD"         javaType="EZDSStringItem"/>
        <result property="fullPsnNm_A"    column="FULL_PSN_NM"     javaType="EZDSStringItem"/>
        <result property="locNum_A"       column="LOC_NUM"         javaType="EZDSStringItem"/>
        <result property="locNm_A"        column="DS_LOC_NM"       javaType="EZDSStringItem"/>
    </resultMap>

    <statement id="getMgrNm" parameterClass="Map" resultClass="Map">
        SELECT
                 P.FULL_PSN_NM
        FROM
                 S21_PSN_V P
        WHERE
                P.GLBL_CMPY_CD  = #glblCmpyCd#
            AND P.PSN_CD        = #whMgrPsnCd#
            AND P.EZCANCELFLAG  = '0'
            <isEqual property="techFlg" compareValue="Y">
            AND EXISTS (
                    SELECT
                           '1'
                      FROM 
                           TECH_MSTR TM
                     WHERE
                           TM.GLBL_CMPY_CD = p.GLBL_CMPY_CD
                       AND TM.TECH_TOC_CD  = p.PSN_CD
                       AND TM.EZCANCELFLAG = '0'
            )
            </isEqual>
    </statement>
</sqlMap>
