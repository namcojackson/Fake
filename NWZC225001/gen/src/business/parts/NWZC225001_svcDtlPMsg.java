//This file was automatically generated by Common Business Component Interface Definition Document and XLA200710010.
// Generated on    :20210130090728000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :CommonBusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NWZC225001_svcDtlPMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.parts;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NWZC225001 Common Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NWZC225001_svcDtlPMsg extends EZDPMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** ORD_SRC_REF_NUM*/
	public final EZDPStringItem              ordSrcRefNum;

    /** DS_IMPT_SVC_LINE_NUM*/
	public final EZDPBigDecimalItem              dsImptSvcLineNum;

    /** DS_IMPT_SVC_MDSE_CD*/
	public final EZDPStringItem              dsImptSvcMdseCd;

    /** PRC_SVC_CONTR_TP_CD*/
	public final EZDPStringItem              prcSvcContrTpCd;

    /** PRC_SVC_PLN_TP_CD*/
	public final EZDPStringItem              prcSvcPlnTpCd;

    /** DS_CONTR_CATG_CD*/
	public final EZDPStringItem              dsContrCatgCd;

    /** BASE_BLLG_CYCLE_CD*/
	public final EZDPStringItem              baseBllgCycleCd;

    /** USG_BLLG_CYCLE_CD*/
	public final EZDPStringItem              usgBllgCycleCd;

    /** FROM_PER_NUM*/
	public final EZDPBigDecimalItem              fromPerNum;

    /** TO_PER_NUM*/
	public final EZDPBigDecimalItem              toPerNum;

    /** FROM_PER_MTH_NUM*/
	public final EZDPBigDecimalItem              fromPerMthNum;

    /** TO_PER_MTH_NUM*/
	public final EZDPBigDecimalItem              toPerMthNum;

    /** BILL_WITH_EQUIP_FLG*/
	public final EZDPStringItem              billWithEquipFlg;

    /** BILL_BY_TP_CD*/
	public final EZDPStringItem              billByTpCd;

    /** SOLD_TO_LOC_NUM*/
	public final EZDPStringItem              soldToLocNum;

    /** SELL_TO_CUST_CD*/
	public final EZDPStringItem              sellToCustCd;

    /** DS_CONTR_PK*/
	public final EZDPBigDecimalItem              dsContrPk;

    /** MAN_CONTR_OVRD_FLG*/
	public final EZDPStringItem              manContrOvrdFlg;

    /** MAN_CONTR_OVRD_RSN_CD*/
	public final EZDPStringItem              manContrOvrdRsnCd;

    /** MAN_CONTR_OVRD_CMNT_TXT*/
	public final EZDPStringItem              manContrOvrdCmntTxt;

    /** DS_IMPT_SVC_TP_CD*/
	public final EZDPStringItem              dsImptSvcTpCd;

    /** BDL_PMT_CD*/
	public final EZDPStringItem              bdlPmtCd;

    /** REF_IMPT_SVC_LINE_NUM*/
	public final EZDPBigDecimalItem              refImptSvcLineNum;

    /** FIX_TERM_IN_MTH_AOT*/
	public final EZDPBigDecimalItem              fixTermInMthAot;

    /** MAX_UPLFT_PCT*/
	public final EZDPBigDecimalItem              maxUplftPct;

    /** CPO_SVC_LINE_ACT_CD*/
	public final EZDPStringItem              cpoSvcLineActCd;

    /** CONTR_UPLFT_TP_CD*/
	public final EZDPStringItem              contrUplftTpCd;

    /** UPLFT_PRC_METH_CD*/
	public final EZDPStringItem              uplftPrcMethCd;

    /** UPLFT_BASE_PRC_RATIO*/
	public final EZDPBigDecimalItem              uplftBasePrcRatio;

    /** UPLFT_MTR_PRC_RATIO*/
	public final EZDPBigDecimalItem              uplftMtrPrcRatio;


	/**
	 * NWZC225001_svcDtlPMsg is constructor.
	 * The initialization when the instance of NWZC225001_svcDtlPMsg is generated.
	 */
	public NWZC225001_svcDtlPMsg() {
		this(false, -1);
	}

	/**
	 * NWZC225001_svcDtlPMsg is constructor.
	 * The initialization when the instance of NWZC225001_svcDtlPMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NWZC225001_svcDtlPMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		ordSrcRefNum = (EZDPStringItem)newItem("ordSrcRefNum");
		dsImptSvcLineNum = (EZDPBigDecimalItem)newItem("dsImptSvcLineNum");
		dsImptSvcMdseCd = (EZDPStringItem)newItem("dsImptSvcMdseCd");
		prcSvcContrTpCd = (EZDPStringItem)newItem("prcSvcContrTpCd");
		prcSvcPlnTpCd = (EZDPStringItem)newItem("prcSvcPlnTpCd");
		dsContrCatgCd = (EZDPStringItem)newItem("dsContrCatgCd");
		baseBllgCycleCd = (EZDPStringItem)newItem("baseBllgCycleCd");
		usgBllgCycleCd = (EZDPStringItem)newItem("usgBllgCycleCd");
		fromPerNum = (EZDPBigDecimalItem)newItem("fromPerNum");
		toPerNum = (EZDPBigDecimalItem)newItem("toPerNum");
		fromPerMthNum = (EZDPBigDecimalItem)newItem("fromPerMthNum");
		toPerMthNum = (EZDPBigDecimalItem)newItem("toPerMthNum");
		billWithEquipFlg = (EZDPStringItem)newItem("billWithEquipFlg");
		billByTpCd = (EZDPStringItem)newItem("billByTpCd");
		soldToLocNum = (EZDPStringItem)newItem("soldToLocNum");
		sellToCustCd = (EZDPStringItem)newItem("sellToCustCd");
		dsContrPk = (EZDPBigDecimalItem)newItem("dsContrPk");
		manContrOvrdFlg = (EZDPStringItem)newItem("manContrOvrdFlg");
		manContrOvrdRsnCd = (EZDPStringItem)newItem("manContrOvrdRsnCd");
		manContrOvrdCmntTxt = (EZDPStringItem)newItem("manContrOvrdCmntTxt");
		dsImptSvcTpCd = (EZDPStringItem)newItem("dsImptSvcTpCd");
		bdlPmtCd = (EZDPStringItem)newItem("bdlPmtCd");
		refImptSvcLineNum = (EZDPBigDecimalItem)newItem("refImptSvcLineNum");
		fixTermInMthAot = (EZDPBigDecimalItem)newItem("fixTermInMthAot");
		maxUplftPct = (EZDPBigDecimalItem)newItem("maxUplftPct");
		cpoSvcLineActCd = (EZDPStringItem)newItem("cpoSvcLineActCd");
		contrUplftTpCd = (EZDPStringItem)newItem("contrUplftTpCd");
		uplftPrcMethCd = (EZDPStringItem)newItem("uplftPrcMethCd");
		uplftBasePrcRatio = (EZDPBigDecimalItem)newItem("uplftBasePrcRatio");
		uplftMtrPrcRatio = (EZDPBigDecimalItem)newItem("uplftMtrPrcRatio");
	}

	/**
	 * get the type of array which is stored
	 * @return NWZC225001_svcDtlPMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NWZC225001_svcDtlPMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"ordSrcRefNum", "ordSrcRefNum", null, null, TYPE_HANKAKUEISU, "50", null},
	{"dsImptSvcLineNum", "dsImptSvcLineNum", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"dsImptSvcMdseCd", "dsImptSvcMdseCd", null, null, TYPE_HANKAKUEISU, "16", null},
	{"prcSvcContrTpCd", "prcSvcContrTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"prcSvcPlnTpCd", "prcSvcPlnTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"dsContrCatgCd", "dsContrCatgCd", null, null, TYPE_HANKAKUEISU, "3", null},
	{"baseBllgCycleCd", "baseBllgCycleCd", null, null, TYPE_HANKAKUEISU, "1", null},
	{"usgBllgCycleCd", "usgBllgCycleCd", null, null, TYPE_HANKAKUEISU, "1", null},
	{"fromPerNum", "fromPerNum", null, null, TYPE_SEISU_SYOSU, "3", "0"},
	{"toPerNum", "toPerNum", null, null, TYPE_SEISU_SYOSU, "3", "0"},
	{"fromPerMthNum", "fromPerMthNum", null, null, TYPE_SEISU_SYOSU, "3", "0"},
	{"toPerMthNum", "toPerMthNum", null, null, TYPE_SEISU_SYOSU, "3", "0"},
	{"billWithEquipFlg", "billWithEquipFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"billByTpCd", "billByTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"soldToLocNum", "soldToLocNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"sellToCustCd", "sellToCustCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"dsContrPk", "dsContrPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"manContrOvrdFlg", "manContrOvrdFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"manContrOvrdRsnCd", "manContrOvrdRsnCd", null, null, TYPE_HANKAKUEISU, "5", null},
	{"manContrOvrdCmntTxt", "manContrOvrdCmntTxt", null, null, TYPE_HANKAKUEISU, "2000", null},
	{"dsImptSvcTpCd", "dsImptSvcTpCd", null, null, TYPE_HANKAKUEISU, "1", null},
	{"bdlPmtCd", "bdlPmtCd", null, null, TYPE_HANKAKUEISU, "1", null},
	{"refImptSvcLineNum", "refImptSvcLineNum", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"fixTermInMthAot", "fixTermInMthAot", null, null, TYPE_SEISU_SYOSU, "3", "0"},
	{"maxUplftPct", "maxUplftPct", null, null, TYPE_SEISU_SYOSU, "3", "0"},
	{"cpoSvcLineActCd", "cpoSvcLineActCd", null, null, TYPE_HANKAKUEISU, "1", null},
	{"contrUplftTpCd", "contrUplftTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"uplftPrcMethCd", "uplftPrcMethCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"uplftBasePrcRatio", "uplftBasePrcRatio", null, null, TYPE_SEISU_SYOSU, "9", "5"},
	{"uplftMtrPrcRatio", "uplftMtrPrcRatio", null, null, TYPE_SEISU_SYOSU, "9", "5"},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"ORD_SRC_REF_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordSrcRefNum
        {"DS_IMPT_SVC_LINE_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsImptSvcLineNum
        {"DS_IMPT_SVC_MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsImptSvcMdseCd
        {"PRC_SVC_CONTR_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcSvcContrTpCd
        {"PRC_SVC_PLN_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcSvcPlnTpCd
        {"DS_CONTR_CATG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrCatgCd
        {"BASE_BLLG_CYCLE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//baseBllgCycleCd
        {"USG_BLLG_CYCLE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//usgBllgCycleCd
        {"FROM_PER_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//fromPerNum
        {"TO_PER_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//toPerNum
        {"FROM_PER_MTH_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//fromPerMthNum
        {"TO_PER_MTH_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//toPerMthNum
        {"BILL_WITH_EQUIP_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//billWithEquipFlg
        {"BILL_BY_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//billByTpCd
        {"SOLD_TO_LOC_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//soldToLocNum
        {"SELL_TO_CUST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//sellToCustCd
        {"DS_CONTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrPk
        {"MAN_CONTR_OVRD_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//manContrOvrdFlg
        {"MAN_CONTR_OVRD_RSN_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//manContrOvrdRsnCd
        {"MAN_CONTR_OVRD_CMNT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//manContrOvrdCmntTxt
        {"DS_IMPT_SVC_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsImptSvcTpCd
        {"BDL_PMT_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bdlPmtCd
        {"REF_IMPT_SVC_LINE_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//refImptSvcLineNum
        {"FIX_TERM_IN_MTH_AOT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//fixTermInMthAot
        {"MAX_UPLFT_PCT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//maxUplftPct
        {"CPO_SVC_LINE_ACT_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cpoSvcLineActCd
        {"CONTR_UPLFT_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrUplftTpCd
        {"UPLFT_PRC_METH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//uplftPrcMethCd
        {"UPLFT_BASE_PRC_RATIO",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//uplftBasePrcRatio
        {"UPLFT_MTR_PRC_RATIO",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//uplftMtrPrcRatio
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

