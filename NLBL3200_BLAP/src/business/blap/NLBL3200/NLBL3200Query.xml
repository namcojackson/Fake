<?xml version="1.0" encoding="UTF-8"?>
<sqlMap namespace="NLBL3200Query">

    <typeAlias alias="ORD_TAKE_MDSETMsg"  type="business.db.ORD_TAKE_MDSETMsg"/>

    <statement id="getSceOrdTypeList" parameterClass="Map" resultClass="Map">
        SELECT
            SOT.SCE_ORD_TP_CD
           ,SOT.SCE_ORD_TP_NM
        FROM
            SCE_ORD_TP SOT
           ,AVAL_SCE_ORD_TP_APP_ID ASOTAI
        WHERE
            SOT.GLBL_CMPY_CD     = #glblCmpyCd#
        AND SOT.INBD_OTBD_CD     = #inbdOtbdCd#
        AND SOT.EZCANCELFLAG     = '0'
        AND ASOTAI.GLBL_CMPY_CD  = SOT.GLBL_CMPY_CD
        AND ASOTAI.BIZ_APP_ID    = #bizAppId#
        AND ASOTAI.SCE_ORD_TP_CD = SOT.SCE_ORD_TP_CD
        AND ASOTAI.EZCANCELFLAG  = '0'
        ORDER BY
            SOT.SCE_ORD_TP_SORT_NUM
    </statement>

    <statement id="getSWHName" parameterClass="Map" resultClass="String">
        SELECT
            S.RTL_SWH_NM
        FROM
            SWH S
        WHERE
            S.GLBL_CMPY_CD = #glblCmpyCd#
        AND S.RTL_SWH_CD   = #rtlSwhCd#
        AND S.EZCANCELFLAG = '0'
    </statement>

<!-- START Tomimatsu -->
    <statement id="getShipOrdForShipNum" parameterClass="Map" resultClass="Map">
        SELECT
            S.SO_NUM
           ,S.SHPG_STS_CD
           ,S.WH_CD
           ,S.SHIP_TO_CUST_CD
           ,S.FRT_CHRG_TO_CD
           ,S.FRT_CHRG_METH_CD
        FROM
            SHPG_ORD S
        WHERE
            S.GLBL_CMPY_CD = #glblCmpyCd#
        AND S.SO_NUM = #soNum#
        AND S.EZCANCELFLAG = '0'
    </statement>
<!-- END Tomimatsu -->


    <statement id="getShipToCustName" parameterClass="Map" resultClass="String">
        SELECT
<!-- START 2019/03/08 H.Umeda [QC#30631,MOD] -->
<!--        CASE WHEN LT.LOC_TP_CD = #locTpCust# THEN SELL_TO.SELL_TO_CUST_CD -->
<!--             ELSE SHIP_TO.LOC_NM -->
<!--        END                     AS DS_ACCT_NM -->
            CASE WHEN LT.LOC_TP_CD = #locTpCust# THEN SELL_TO.DS_ACCT_NM
                 ELSE SHIP_TO.LOC_NM
            END                     AS DS_ACCT_NM
<!-- END   2019/03/08 H.Umeda [QC#30631,MOD] -->
        FROM
            SHIP_TO_CUST SHIP_TO
           ,LOC_TP       LT
           ,SELL_TO_CUST SELL_TO
        WHERE
            SHIP_TO.GLBL_CMPY_CD    = #glblCmpyCd#
        AND SHIP_TO.SHIP_TO_CUST_CD = #shipToCustCd#
        AND SHIP_TO.EZCANCELFLAG    = '0'
        AND SHIP_TO.GLBL_CMPY_CD    = LT.GLBL_CMPY_CD
        AND SHIP_TO.LOC_GRP_CD      = LT.LOC_GRP_CD
        AND SHIP_TO.LOC_ROLE_TP_CD  = LT.LOC_ROLE_TP_CD
        AND LT.EZCANCELFLAG         = '0'
        AND SHIP_TO.GLBL_CMPY_CD    = SELL_TO.GLBL_CMPY_CD(+)
        AND SHIP_TO.SELL_TO_CUST_CD = SELL_TO.SELL_TO_CUST_CD(+)
        AND SELL_TO.EZCANCELFLAG(+) = '0'
    </statement>

    <statement id="getPermissionWhList" parameterClass="Map" resultClass="String">
        SELECT
            SCWP.RTL_WH_CD
        FROM 
            SCHD_COORD_WH_PMSN SCWP
        WHERE
            SCWP.GLBL_CMPY_CD = #glblCmpyCd#
        AND SCWP.SCHD_COORD_PSN_CD = #schdCoordPsnCd#
        AND #salesDate# BETWEEN SCWP.EFF_FROM_DT AND NVL(SCWP.EFF_THRU_DT,'99991231')
        AND SCWP.EZCANCELFLAG = '0'
    </statement>

    <statement id="getSoSerialList" parameterClass="Map" resultClass="String">
        SELECT
            SS.SER_NUM
        FROM
            SO_SER SS
        WHERE
            SS.GLBL_CMPY_CD    = #glblCmpyCd#
        AND SS.SO_NUM          = #soNum#
        AND SS.SO_SLP_NUM      = #soSlpNum#
        AND (   SS.WH_PICK_FLG = #whPickFlg#
             OR SS.ORD_ASG_FLG = #ordAsgFlg#
            )
        AND SS.EZCANCELFLAG    = '0'
        AND NOT EXISTS(SELECT
                           1
                       FROM
                           SHIP_SER_NUM SSN
                       WHERE
                           SSN.GLBL_CMPY_CD = SS.GLBL_CMPY_CD
                       AND SSN.SO_NUM       = SS.SO_NUM
                       AND SSN.SER_NUM      = SS.SER_NUM
                       AND SSN.MDSE_CD      = SS.MDSE_CD
                       AND SSN.EZCANCELFLAG = '0'
                       AND ROWNUM           = 1
                      )
        ORDER BY
            SS.WH_PICK_FLG DESC
           ,SS.ORD_ASG_FLG DESC
    </statement>

    <statement id ="getSoCancelAvalFlg" parameterClass="Map" resultClass="Map">
        SELECT
            CC.SO_SCR_CANC_AVAL_FLG
           ,WST.WH_SYS_TP_DESC_TXT
        FROM
            RTL_WH               RW
           ,SO_RWS_SCR_CANC_CTRL CC
           ,WH_SYS_TP            WST
        WHERE
            RW.GLBL_CMPY_CD  = #glblCmpyCd#
        AND RW.RTL_WH_CD     = #rtlWhCd#
        AND RW.EZCANCELFLAG  = '0'
        AND RW.GLBL_CMPY_CD  = CC.GLBL_CMPY_CD
        AND RW.WH_SYS_TP_CD  = CC.WH_SYS_TP_CD
        AND CC.SCE_ORD_TP_CD = #sceOrdTpCd#
        AND CC.EZCANCELFLAG  = '0'
        AND RW.GLBL_CMPY_CD  = WST.GLBL_CMPY_CD
        AND RW.WH_SYS_TP_CD  = WST.WH_SYS_TP_CD
        AND WST.EZCANCELFLAG = '0'
        AND ROWNUM           = 1
    </statement>

    <statement id ="countSetItem" parameterClass="Map" resultClass="Integer">
        SELECT
            COUNT(*)
        FROM
              SHPG_ORD_DTL SOD
             ,SHPG_PLN     SP
        WHERE
            SOD.GLBL_CMPY_CD = #glblCmpyCd#
        AND SOD.TRX_HDR_NUM  = #trxHdrNum#
        AND SOD.TRX_LINE_NUM = #trxLineNum#
        AND SOD.SET_MDSE_CD  = #setMdseCd# 
        AND SOD.EZCANCELFLAG = '0'
        AND SOD.GLBL_CMPY_CD = SP.GLBL_CMPY_CD
        AND SOD.SHPG_PLN_NUM = SP.SHPG_PLN_NUM
        AND SP.EZCANCELFLAG  = '0'
    </statement>

    <statement id ="getSvcMachMstrPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             SS.SVC_MACH_MSTR_PK
        FROM
             SO_SER        SS
            ,SVC_MACH_MSTR SMM
        WHERE
            SS.GLBL_CMPY_CD             = #glblCmpyCd#
        AND SS.SO_NUM                   = #soNum#
        AND SS.EZCANCELFLAG             = '0'
        AND SMM.GLBL_CMPY_CD            = SS.GLBL_CMPY_CD
        AND SMM.SVC_MACH_MSTR_PK        = SS.SVC_MACH_MSTR_PK
        AND SMM.SVC_MACH_MAINT_AVAL_FLG = #flgN#
        AND SMM.EZCANCELFLAG            = '0'
        AND NOT EXISTS (SELECT
                            1
                        FROM
                            SHIP_SER_NUM SSN
                        WHERE
                            SSN.GLBL_CMPY_CD = SMM.GLBL_CMPY_CD
                        AND SSN.SO_NUM       = SS.SO_NUM
                        AND SSN.MDSE_CD      = SMM.MDSE_CD
                        AND SSN.SER_NUM      = SMM.SER_NUM
                        AND SSN.EZCANCELFLAG = '0'
                       )
    </statement>

    <statement id="searchSoList" parameterClass="Map">
        WITH SO_DTL_V AS (
<!-- START 2019/02/25 T.Ogura [QC#29827,MOD] -->
<!--        SELECT -->
            SELECT /*+ NO_AUTO_REOPTIMIZE NO_ADAPTIVE_PLAN */
<!-- END   2019/02/25 T.Ogura [QC#29827,MOD] -->
                SO.GLBL_CMPY_CD                           AS GLBL_CMPY_CD
               ,SO.SRC_ORD_NUM                            AS SRC_ORD_NUM
               ,CASE WHEN CD.CPO_ORD_NUM  IS NOT NULL THEN CONCAT(CD.DS_ORD_POSN_NUM, '.') || CONCAT(CD.DS_CPO_LINE_NUM, DECODE(CD.DS_CPO_LINE_SUB_NUM, NULL, '', '.')) || CD.DS_CPO_LINE_SUB_NUM
                     WHEN PD.PO_ORD_NUM   IS NOT NULL THEN PD.DISP_PO_DTL_LINE_NUM
                     WHEN SD.PRCH_REQ_NUM IS NOT NULL THEN TO_CHAR(TO_NUMBER(SD.PRCH_REQ_LINE_NUM)) || '.' || TO_CHAR(SD.PRCH_REQ_LINE_SUB_NUM)
                     ELSE TO_CHAR(TO_NUMBER(SD.TRX_LINE_NUM))
                END                                       AS DPLY_LINE_NUM
               ,CASE WHEN CD.CPO_ORD_NUM  IS NOT NULL THEN CD.CPO_DTL_LINE_NUM
                     WHEN PD.PO_ORD_NUM   IS NOT NULL THEN PD.PO_ORD_DTL_LINE_NUM
                     WHEN SD.PRCH_REQ_NUM IS NOT NULL THEN SD.PRCH_REQ_LINE_NUM
                     ELSE SD.TRX_LINE_NUM
                END                                       AS SRC_ORD_LINE_NUM
               ,CASE WHEN CD.CPO_ORD_NUM IS NOT NULL THEN CD.CPO_DTL_LINE_SUB_NUM
                     WHEN SD.PRCH_REQ_NUM IS NOT NULL THEN TO_CHAR(SD.PRCH_REQ_LINE_SUB_NUM)
                     ELSE SD.TRX_LINE_SUB_NUM
                END                                       AS SRC_ORD_LINE_SUB_NUM
               ,SO.SO_NUM                                 AS SO_NUM
               ,SD.SO_SLP_NUM                             AS SO_SLP_NUM
               ,SOT.SCE_ORD_TP_NM                         AS SCE_ORD_TP_NM
               ,RW.RTL_WH_NM                              AS SHIP_FROM_RTL_WH_NM
               ,SD.RTL_SWH_CD                             AS SHIP_FROM_RTL_SWH_CD
               ,DSLS.DS_SO_LINE_STS_DESC_TXT              AS DS_SO_LINE_STS_DESC_TXT
               ,DSLS.DS_SO_LINE_STS_CD                    AS DS_SO_LINE_STS_CD
               ,SD.RMV_CONFIG_FLG                         AS RMV_CONFIG_FLG
               ,CASE WHEN SD.RMV_CONFIG_FLG = #flgY# THEN NULL
                     ELSE SO.SVC_CONFIG_MSTR_PK
                     END                                  AS SHIP_SVC_CONFIG_MSTR_PK
               ,SD.PICK_SVC_CONFIG_MSTR_PK                AS PICK_SVC_CONFIG_MSTR_PK
               ,SD.MDSE_CD                                AS MDSE_CD
               ,M.MDSE_DESC_SHORT_TXT                     AS MDSE_DESC_SHORT_TXT
               ,BOIT.BACK_ORD_IMPCT_TP_DESC_TXT           AS BACK_ORD_IMPCT_TP_DESC_TXT
               ,SD.FROM_STK_STS_CD                        AS FROM_STK_STS_CD
               ,SD.SHPG_QTY                               AS SHPG_QTY
               ,NVL(MSP.BASE_PKG_UOM_CD, SP.CUST_UOM_CD)  AS DPLY_PKG_UOM_CD
               ,MSP.IN_EACH_QTY                           AS UOM_EACH_QTY
               ,SD.PICK_CONF_QTY                          AS PICK_CONF_QTY
               ,SD.SHIP_QTY                               AS SHIP_QTY
               ,SD.SHPG_QTY - SD.SHIP_QTY                 AS SHPG_BAL_QTY
               ,SO.RDD_DT                                 AS RDD_DT
               ,PRD.RQST_RCV_DT                           AS RQST_RCV_DT
               ,PRD.RQST_RCV_TM                           AS RQST_RCV_TM
               ,OSSL.SHPG_SVC_LVL_DESC_TXT                AS SHPG_SVC_LVL_DESC_TXT
               ,SO.SO_CRAT_TS                             AS SO_CRAT_TS
               ,NULL                                      AS CARR_CD
               ,NULL                                      AS CARR_NM
               ,SO.CARR_CD                                AS RQST_CARR_CD
               ,OV.LOC_NM                                 AS RQST_CARR_NM
               ,SO.CARR_ACCT_NUM                          AS CARR_ACCT_NUM
               ,T.TOC_NM                                  AS TOC_NM
               ,SO.SHIP_TO_CUST_ACCT_CD                   AS SHIP_TO_CUST_ACCT_CD
               ,SD.TO_INVTY_LOC_CD                        AS SHIP_TO_LOC_CD
               ,SOCD.SO_CUST_LINE_LOC_NM_01               AS SHIP_TO_LOC_NM
               ,SOCD.CTY_ADDR                             AS SHIP_TO_CTY_ADDR
               ,SOCD.ST_CD                                AS SHIP_TO_ST_CD
               <!-- QC#18367 Add. -->
               ,SOCD.CTRY_CD                              AS SHIP_TO_CTRY_CD
               ,SOCD.CTAC_PTNR_PSN_NM                     AS SHIP_TO_CTAC_PSN_NM
               <!-- Hidden Data -->
               ,SO.SCE_ORD_TP_CD                          AS SCE_ORD_TP_CD
               ,SO.TRX_SRC_TP_CD                          AS TRX_SRC_TP_CD
               ,SS.SO_PRINT_FLG                           AS SO_PRINT_FLG
               ,SS.SHIP_FLG                               AS SHIP_FLG
               ,SD.SER_NUM_TAKE_FLG                       AS SER_NUM_TAKE_FLG
               ,M.INSTL_BASE_CTRL_FLG                     AS INSTL_BASE_CTRL_FLG
               ,SD.RTL_WH_CD                              AS SHIP_FROM_RTL_WH_CD
               ,SD.INVTY_LOC_CD                           AS SHIP_FROM_LOC_CD
               ,SD.TRX_HDR_NUM                            AS TRX_HDR_NUM
               ,SD.TRX_LINE_NUM                           AS TRX_LINE_NUM
               ,SD.TRX_LINE_SUB_NUM                       AS TRX_LINE_SUB_NUM
               ,DSLS.SO_LINE_OPEN_FLG                     AS SO_LINE_OPEN_FLG
               ,SD.TO_STK_STS_CD                          AS TO_STK_STS_CD
               ,CASE WHEN WO.MAN_SEND_RQST_FLG  = #flgY# THEN #flgY#
                     WHEN OCT.MAN_SEND_RQST_FLG = #flgY# THEN #flgY#
                     ELSE #flgN#
                END                                       AS MAN_SEND_RQST_FLG
               ,CASE WHEN SO.DELY_REQ_FLG = #flgY#   THEN #flgY#
                     WHEN SO.DELY_REQ_TS IS NOT NULL THEN #flgY#
                     ELSE #flgN#
                END                                       AS SEND_RQST_FLG
               ,SD.SET_MDSE_CD                            AS SET_MDSE_CD
               ,DCC.DS_COND_CONST_VAL_TXT_01              AS DS_COND_CONST_VAL_TXT_01
               ,DCC.DS_COND_CONST_VAL_TXT_04              AS DS_COND_CONST_VAL_TXT_04
               ,DCC.DS_COND_CONST_VAL_TXT_05              AS DS_COND_CONST_VAL_TXT_05
               ,DCC.DS_COND_CONST_VAL_TXT_06              AS DS_COND_CONST_VAL_TXT_06
               ,RW.INVTY_ACCT_CD                          AS INVTY_ACCT_CD
               ,SO.MDL_ID                                 AS MDL_ID
               ,SO.EZUPTIME                               AS SO_EZUPTIME
               ,SO.EZUPTIMEZONE                           AS SO_EZUPTIMEZONE
               ,SD.EZINUSERID                             AS SOD_EZINUSERID
               ,NVL((
                    SELECT
                        CASE
                            WHEN IN_AP.MID_NM IS NULL AND IN_AP.FIRST_NM IS NULL THEN SD.EZINUSERID
                            WHEN IN_AP.MID_NM IS NULL THEN SD.EZINUSERID || ' : ' || IN_AP.FIRST_NM || ' ' || IN_AP.LAST_NM
                            WHEN IN_AP.MID_NM IS NOT NULL THEN SD.EZINUSERID || ' : ' || IN_AP.FIRST_NM || IN_AP.MID_NM || ' ' || IN_AP.LAST_NM
                            ELSE SD.EZINUSERID
                        END AS XX_REC_HIST_CRAT_BY_NM
                    FROM
                        AUTH_PSN        IN_AP
                    WHERE
                        SD.GLBL_CMPY_CD            = IN_AP.GLBL_CMPY_CD
                    AND UPPER(SD.EZINUSERID)       = UPPER(IN_AP.USR_NM)
                    AND IN_AP.EZCANCELFLAG         = '0'
                ), SD.EZINUSERID) AS XX_REC_HIST_CRAT_BY_NM
               ,SD.EZINTIME                               AS SOD_EZINTIME
               ,SD.EZUPUSERID                             AS SOD_EZUPUSERID
               ,NVL((
                    SELECT
                        CASE
                            WHEN IN_AP.MID_NM IS NULL AND IN_AP.FIRST_NM IS NULL THEN SD.EZUPUSERID
                            WHEN IN_AP.MID_NM IS NULL THEN SD.EZUPUSERID || ' : ' || IN_AP.FIRST_NM || ' ' || IN_AP.LAST_NM
                            WHEN IN_AP.MID_NM IS NOT NULL THEN SD.EZUPUSERID || ' : ' || IN_AP.FIRST_NM || IN_AP.MID_NM || ' ' || IN_AP.LAST_NM
                            ELSE SD.EZUPUSERID
                        END AS XX_REC_HIST_UPD_BY_NM
                    FROM
                        AUTH_PSN        IN_AP
                    WHERE
                        SD.GLBL_CMPY_CD            = IN_AP.GLBL_CMPY_CD
                    AND UPPER(SD.EZUPUSERID)       = UPPER(IN_AP.USR_NM)
                    AND IN_AP.EZCANCELFLAG         = '0'
                ), SD.EZUPUSERID) AS XX_REC_HIST_UPD_BY_NM
               ,SD.EZUPTIME                               AS SOD_EZUPTIME
               ,SD.EZUPTIMEZONE                           AS SOD_EZUPTIMEZONE
               ,CASE WHEN SODI.SHPG_INSTN_CMNT_TXT IS NOT NULL THEN #flgY#
                     ELSE #flgN#
                END                                       AS SHPG_ORD_DELY_INSTN_FLG
               ,SO.SHPG_SVC_LVL_CD                        AS SHPG_SVC_LVL_CD
               ,SODI.SHPG_INSTN_CMNT_TXT                  AS SHPG_INSTN_CMNT_TXT
               ,SO.WMS_DROP_FLG                           AS WMS_DROP_FLG
               ,WO.WH_OWNR_CD                             AS WH_OWNR_CD
               <!-- tomimatsu Add -->
               ,SO.SHPG_STS_CD                            AS SHPG_STS_CD
               ,SO.WH_CD                                  AS WH_CD
               ,SO.SHIP_TO_CUST_CD                        AS SHIP_TO_CUST_CD
               ,SO.FRT_CHRG_TO_CD                         AS FRT_CHRG_TO_CD
               ,SO.FRT_CHRG_METH_CD                       AS FRT_CHRG_METH_CD
               <!-- tomimatsu Add -->
            FROM
                SHPG_ORD                SO
               ,SHPG_ORD_CUST_DTL       SOCD
               ,SHPG_STS                SS
               ,SHPG_ORD_DTL            SD
               ,RTL_WH                  RW
               ,WH_OWNR                 WO
               ,PO_DTL                  PD
               ,CPO_DTL                 CD
               ,TOC                     T
               ,SCE_ORD_TP              SOT
               ,DS_SO_LINE_STS          DSLS
               ,MDSE                    M
               ,ORD_TAKE_MDSE           OTM
               ,MDL_BO_IMPCT            MBI
               ,BACK_ORD_IMPCT_TP       BOIT
               ,SHPG_ORD_DELY_INSTN     SODI
               ,PRCH_REQ_DTL            PRD
               ,AVAL_SCE_ORD_TP_APP_ID  ASOTAI
               ,DS_COND_CONST           DCC
               ,VND                     OV
               ,CARR_TP                 OCT
               ,SHPG_SVC_LVL            OSSL
               ,SHPG_PLN                SP
               ,MDSE_STORE_PKG          MSP
            WHERE
                SO.GLBL_CMPY_CD                 = #glblCmpyCd#
            <isNotNull property="srcOrdNum">
            AND SO.SRC_ORD_NUM = #srcOrdNum#
            </isNotNull>
            <isNotNull property="soNum">
            AND SO.SO_NUM                       = #soNum#
            </isNotNull>
            <isNotNull property="soNumList">
                <iterate property="soNumList" var="soNumList[]" open="AND SO.SO_NUM IN (" conjunction= ", " close=")">
                    #soNumList[]#
                </iterate>
            </isNotNull>
            <isNotNull property="sceOrdTpCd">
            AND SO.SCE_ORD_TP_CD                = #sceOrdTpCd#
            </isNotNull>
            <isNotNull property="rddDtFrm">
            AND NVL(SO.RDD_DT,'19000101')   &gt;= #rddDtFrm#
            </isNotNull>
            <isNotNull property="rddDtTo">
            AND NVL(SO.RDD_DT,'99991231')   &lt;= #rddDtTo#
            </isNotNull>
            <isNotNull property="wmsDropFlg">
            AND SO.WMS_DROP_FLG                 = #wmsDropFlg#
            </isNotNull>
            <isNotNull property="svcConfigMstrPk">
            AND SO.SVC_CONFIG_MSTR_PK           = #svcConfigMstrPk#
            </isNotNull>
            <isNotNull property="soCratTsFrm">
            AND NVL(SO.SO_CRAT_TS,'190001010000')  &gt;= #soCratTsFrm#
            </isNotNull>
            <isNotNull property="soCratTsTo">
            AND NVL(SO.SO_CRAT_TS,'999912310000')  &lt;= #soCratTsTo#
            </isNotNull>
            <isNotNull property="shpgSvcLvlCd">
            AND SO.SHPG_SVC_LVL_CD              = #shpgSvcLvlCd#
            </isNotNull>
            <isNotNull property="carrCd">
            AND SO.CARR_CD                       LIKE #carrCd#
            </isNotNull>
            <isNotNull property="carrCdList">
                <iterate property="carrCdList" var="carrCdList[]" open="AND (SO.CARR_CD LIKE " conjunction= "OR SO.CARR_CD LIKE " close=")">
                    #carrCdList[]#
                </iterate>
            </isNotNull>
            AND SO.EZCANCELFLAG                 = '0'
            AND SO.GLBL_CMPY_CD                 = SS.GLBL_CMPY_CD
            AND SO.SHPG_STS_CD                  = SS.SHPG_STS_CD
            AND SS.EZCANCELFLAG                 = '0'
            AND SO.GLBL_CMPY_CD                 = SOCD.GLBL_CMPY_CD(+)
            AND SO.SO_NUM                       = SOCD.SO_NUM(+)
            AND SOCD.SO_CUST_DATA_TP_CD(+)      = #soCustDataTpShipTo#
            AND SOCD.EZCANCELFLAG(+)            = '0'
            AND SO.GLBL_CMPY_CD                 = SD.GLBL_CMPY_CD
            AND SO.SO_NUM                       = SD.SO_NUM
            <isNotNull property="soNumSlpNumList">
                <iterate property="soNumSlpNumList" var="soNumSlpNumList[]" open="AND SD.SO_NUM||SD.SO_SLP_NUM IN (" conjunction= ", " close=")">
                    #soNumSlpNumList[]#
                </iterate>
            </isNotNull>
            <isNotNull property="dsSoLineStsCd">
            AND SD.DS_SO_LINE_STS_CD            = #dsSoLineStsCd#
            </isNotNull>
            <isNotNull property="whCdList">
                <iterate property="whCdList" var="whCdList[]" open="AND (SD.RTL_WH_CD LIKE " conjunction= "OR SD.RTL_WH_CD LIKE " close=")">
                    #whCdList[]#
                </iterate>
            </isNotNull>
            <isNotNull property="swhCdList">
                <iterate property="swhCdList" var="swhCdList[]" open="AND (SD.RTL_SWH_CD LIKE " conjunction= "OR SD.RTL_SWH_CD LIKE " close=")">
                     #swhCdList[]#
                </iterate>
            </isNotNull>
            <isNotNull property="shipToCdList">
                <iterate property="shipToCdList" var="shipToCdList[]" open="AND (SD.TO_INVTY_LOC_CD LIKE " conjunction= "OR SD.TO_INVTY_LOC_CD LIKE " close=")">
                    #shipToCdList[]#
                </iterate>
            </isNotNull>
            AND SD.EZCANCELFLAG                 = '0'
            AND SD.GLBL_CMPY_CD                 = RW.GLBL_CMPY_CD
            AND SD.RTL_WH_CD                    = RW.RTL_WH_CD
            AND RW.EZCANCELFLAG                 = '0'
            AND RW.GLBL_CMPY_CD                 = WO.GLBL_CMPY_CD(+)
            AND RW.WH_OWNR_CD                   = WO.WH_OWNR_CD(+)
            AND WO.EZCANCELFLAG(+)              = '0'
            AND SD.GLBL_CMPY_CD                 = PD.GLBL_CMPY_CD(+)
            AND SD.TRX_HDR_NUM                  = PD.PO_ORD_NUM(+)
            AND SD.TRX_LINE_NUM                 = PD.PO_ORD_DTL_LINE_NUM(+)
            AND PD.EZCANCELFLAG(+)             = '0'
            AND SD.GLBL_CMPY_CD                 = CD.GLBL_CMPY_CD(+)
            AND SD.TRX_HDR_NUM                  = CD.CPO_ORD_NUM(+)
            AND SD.TRX_LINE_NUM                 = CD.CPO_DTL_LINE_NUM(+)
            AND SD.TRX_LINE_SUB_NUM             = CD.CPO_DTL_LINE_SUB_NUM(+)
            AND CD.EZCANCELFLAG(+)              = '0'
            AND CD.GLBL_CMPY_CD                 = T.GLBL_CMPY_CD(+)
            AND CD.SLS_REP_OR_SLS_TEAM_TOC_CD   = T.TOC_CD(+)
            AND T.EZCANCELFLAG(+)               = '0'
            AND SO.GLBL_CMPY_CD                 = SOT.GLBL_CMPY_CD
            AND SO.SCE_ORD_TP_CD                = SOT.SCE_ORD_TP_CD
            AND SOT.INBD_OTBD_CD                = #inbdOtbdCd#
            AND SOT.EZCANCELFLAG                = '0'
            AND SD.GLBL_CMPY_CD                 = DSLS.GLBL_CMPY_CD
            AND SD.DS_SO_LINE_STS_CD            = DSLS.DS_SO_LINE_STS_CD
            <isNotNull property="soLineOpenFlg">
            AND DSLS.SO_LINE_OPEN_FLG           = #soLineOpenFlg#
            </isNotNull>
            AND DSLS.EZCANCELFLAG               = '0'
            AND SD.GLBL_CMPY_CD                 = M.GLBL_CMPY_CD
            AND SD.MDSE_CD                      = M.MDSE_CD
            AND M.EZCANCELFLAG                  = '0'

            AND M.GLBL_CMPY_CD                  = OTM.GLBL_CMPY_CD(+)
            AND SUBSTR(M.MDSE_CD, 1,8)          = OTM.ORD_TAKE_MDSE_CD(+)
            AND OTM.EZCANCELFLAG(+)             = '0'
            AND SO.GLBL_CMPY_CD                 = MBI.GLBL_CMPY_CD(+)
            AND SO.MDL_ID                       = MBI.MDL_ID(+)
            AND NVL(OTM.ORD_TAKE_MDSE_CD, M.MDSE_CD) 
                                                = MBI.MDSE_CD(+)
            AND MBI.EZCANCELFLAG(+)             = '0'
            
            AND M.GLBL_CMPY_CD                  = BOIT.GLBL_CMPY_CD(+)
            AND DECODE(MBI.MDL_ID , NULL, M.BACK_ORD_IMPCT_TP_CD, MBI.BO_IMPCT_TP_CD)
                                                = BOIT.BACK_ORD_IMPCT_TP_CD(+)
            AND BOIT.EZCANCELFLAG(+)            = '0'
            AND SO.GLBL_CMPY_CD                 = SODI.GLBL_CMPY_CD(+)
            AND SO.SO_NUM                       = SODI.SO_NUM(+)
            AND SODI.EZCANCELFLAG(+)            = '0'
            AND SD.GLBL_CMPY_CD                 = PRD.GLBL_CMPY_CD(+)
            AND SD.PRCH_REQ_NUM                 = PRD.PRCH_REQ_NUM(+)
            AND SD.PRCH_REQ_LINE_NUM            = PRD.PRCH_REQ_LINE_NUM(+)
            AND SD.PRCH_REQ_LINE_SUB_NUM        = PRD.PRCH_REQ_LINE_SUB_NUM(+)
            AND PRD.EZCANCELFLAG(+)             = '0'
            <isNotNull property="needByDtFrom">
            AND NVL(PRD.RQST_RCV_DT,'19000101') &gt;= #needByDtFrom#
            </isNotNull>
            <isNotNull property="needByTmFrom">
            AND NVL(PRD.RQST_RCV_TM,'0000')     &gt;= #needByTmFrom#
            </isNotNull>
            <isNotNull property="needByDtTo">
            AND NVL(PRD.RQST_RCV_DT,'99991231') &lt;= #needByDtTo#
            </isNotNull>
            <isNotNull property="needByTmTo">
            AND NVL(PRD.RQST_RCV_TM,'2359')     &lt;= #needByTmTo#
            </isNotNull>
            AND SO.GLBL_CMPY_CD                 = DCC.GLBL_CMPY_CD
            AND SO.SCE_ORD_TP_CD                = DCC.DS_COND_CONST_CD
            AND DCC.DS_COND_CONST_GRP_ID        = #dsCondConstGrpId#
            AND DCC.EZCANCELFLAG                = '0'
            AND SO.GLBL_CMPY_CD                 = ASOTAI.GLBL_CMPY_CD
            AND SO.SCE_ORD_TP_CD                = ASOTAI.SCE_ORD_TP_CD
            AND ASOTAI.BIZ_APP_ID               = #bizAppId#
            AND ASOTAI.EZCANCELFLAG             = '0'
            AND SO.GLBL_CMPY_CD                 = OV.GLBL_CMPY_CD(+)
            AND SO.CARR_CD                      = OV.VND_CD(+)
            AND OV.EZCANCELFLAG(+)              = '0'
            AND OV.GLBL_CMPY_CD                 = OCT.GLBL_CMPY_CD(+)
            AND OV.CARR_TP_CD                   = OCT.CARR_TP_CD(+)
            AND OCT.EZCANCELFLAG(+)             = '0'
            AND SO.GLBL_CMPY_CD                 = OSSL.GLBL_CMPY_CD(+)
            AND SO.SHPG_SVC_LVL_CD              = OSSL.SHPG_SVC_LVL_CD(+)
            AND OSSL.EZCANCELFLAG(+)            = '0'
            AND SD.GLBL_CMPY_CD                 = SP.GLBL_CMPY_CD(+)
            AND SD.SHPG_PLN_NUM                 = SP.SHPG_PLN_NUM(+)
            AND SP.EZCANCELFLAG(+)              = '0'
            AND SP.GLBL_CMPY_CD                 = MSP.GLBL_CMPY_CD(+)
            AND SP.CUST_UOM_CD                  = MSP.PKG_UOM_CD(+)
            AND SP.MDSE_CD                      = MSP.MDSE_CD(+)
            AND MSP.EZCANCELFLAG(+)             = '0'
            <isNotNull property="mdseCdList">
            AND EXISTS(
                       SELECT
                           1
                       FROM
                           SHPG_ORD_DTL ESOD
                       WHERE
                           ESOD.GLBL_CMPY_CD = SD.GLBL_CMPY_CD
                       AND ESOD.SO_NUM       = SD.SO_NUM
                       AND ESOD.SO_SLP_NUM   = SD.SO_SLP_NUM
                       <iterate property="mdseCdList" var="mdseCdList[]" open="AND (ESOD.MDSE_CD LIKE " conjunction= "OR ESOD.MDSE_CD LIKE " close=")">
                           #mdseCdList[]#
                       </iterate>
                       AND ESOD.EZCANCELFLAG = '0'
                      )
            </isNotNull>
            <isNotNull property="proNum">
            <!-- QC#21913 Modify SHPG_ORD_CONF_DTL => SHPG_ORD_PRO_NUM_LIST -->
            AND EXISTS (
                        SELECT
                            1
                        FROM
                            SHPG_ORD_PRO_NUM_LIST SOPNL
                        WHERE
                            SOPNL.GLBL_CMPY_CD = SO.GLBL_CMPY_CD
                        AND SOPNL.TRX_HDR_NUM  = SO.SO_NUM
                        AND SOPNL.PRO_NUM      = #proNum#
                        AND SOPNL.EZCANCELFLAG = '0'
                       )
            </isNotNull>
        )
        , SO_MSG AS (
            SELECT
                SOM.SO_NUM
               ,MAX(SOM.TXT_SQ_NUM) AS TXT_SQ_NUM
            FROM
                SO_DTL_V     SV
               ,SHPG_ORD_MSG SOM
             WHERE
                SOM.GLBL_CMPY_CD = SV.GLBL_CMPY_CD
            AND SOM.SO_NUM       = SV.SO_NUM
            AND SOM.SO_MSG_TP_CD = #soMsgTpCd#
            AND SOM.SO_MSG_DESC_TXT IS NOT NULL
            AND SOM.EZCANCELFLAG = '0'
            GROUP BY
                SOM.SO_NUM
        )
        , PKT_V AS (
             SELECT
                  P.GLBL_CMPY_CD    AS GLBL_CMPY_CD
                 ,P.SO_NUM          AS SO_NUM
                 ,P.SO_SLP_NUM      AS SO_SLP_NUM
                 ,MAX(CASE WHEN P.DS_SO_LINE_STS_CD = #pickConfSts# THEN P.PKT_STS_TS 
                       ELSE NULL
                  END) AS PKT_STS_TS
                 ,MAX(CASE WHEN P.DS_SO_LINE_STS_CD = #packConfSts# THEN P.PKT_STS_TS 
                       ELSE NULL
                  END)AS PKT_PACK_STS_TS
             FROM
                  SO_DTL_V SV
                 ,PKT      P
             WHERE
                 P.GLBL_CMPY_CD      = SV.GLBL_CMPY_CD
             AND P.SO_NUM            = SV.SO_NUM
             AND P.SO_SLP_NUM        = SV.SO_SLP_NUM
             AND P.EZCANCELFLAG      = '0'
             GROUP BY
                  P.GLBL_CMPY_CD
                 ,P.SO_NUM
                 ,P.SO_SLP_NUM
         )
        <isNotNull property="soLineBackOrdFlg">
        , BO_V AS (
             SELECT /*+ OPTIMIZER_FEATURES_ENABLE('10.2.0.5') */ 
                 SP.GLBL_CMPY_CD                           AS GLBL_CMPY_CD
                ,SP.TRX_HDR_NUM                            AS SRC_ORD_NUM
                ,CONCAT(CD.DS_ORD_POSN_NUM, '.') || CONCAT(CD.DS_CPO_LINE_NUM, DECODE(CD.DS_CPO_LINE_SUB_NUM, NULL, '', '.')) || CD.DS_CPO_LINE_SUB_NUM AS DPLY_LINE_NUM
                ,SP.TRX_LINE_NUM                           AS SRC_ORD_LINE_NUM
                ,SP.TRX_LINE_SUB_NUM                       AS SRC_ORD_LINE_SUB_NUM
                ,CD.CPO_ORD_NUM                            AS CPO_ORD_NUM
                ,CD.DS_CPO_CONFIG_PK                       AS DS_CPO_CONFIG_PK
                ,SP.SO_NUM                                 AS SO_NUM
                ,SP.SO_SLP_NUM                             AS SO_SLP_NUM
                ,SOT.SCE_ORD_TP_NM                         AS SCE_ORD_TP_NM
                ,RW.RTL_WH_NM                              AS SHIP_FROM_RTL_WH_NM
                ,CD.RTL_SWH_CD                             AS SHIP_FROM_RTL_SWH_CD
                ,#dsSoLineStsBoDesc#                       AS DS_SO_LINE_STS_DESC_TXT
                ,#dsSoLineStsBo#                           AS DS_SO_LINE_STS_CD
                ,CD.SVC_CONFIG_MSTR_PK                     AS SHIP_SVC_CONFIG_MSTR_PK
                ,CD.PICK_SVC_CONFIG_MSTR_PK                AS PICK_SVC_CONFIG_MSTR_PK
                ,SP.MDSE_CD                                AS MDSE_CD
                ,AMV.MDSE_DESC_SHORT_TXT                   AS MDSE_DESC_SHORT_TXT
                ,BOT.BACK_ORD_IMPCT_TP_DESC_TXT            AS BACK_ORD_IMPCT_TP_DESC_TXT
                ,SP.STK_STS_CD                             AS FROM_STK_STS_CD
                ,NVL(MSP.BASE_PKG_UOM_CD, SP.CUST_UOM_CD) AS DPLY_PKG_UOM_CD
                ,MSP.IN_EACH_QTY                           AS UOM_EACH_QTY
                ,SP.RDD_DT                                 AS RDD_DT
                ,PRD.RQST_RCV_DT                           AS RQST_RCV_DT
                ,PRD.RQST_RCV_TM                           AS RQST_RCV_TM
                ,SSL.SHPG_SVC_LVL_DESC_TXT                 AS SHPG_SVC_LVL_DESC_TXT
                ,SP.RQST_CARR_CD                           AS CARR_CD
                ,V.LOC_NM                                  AS CARR_NM
                ,NULL                                      AS RQST_CARR_CD
                ,NULL                                      AS RQST_CARR_NM
                ,SP.CARR_ACCT_NUM                          AS CARR_ACCT_NUM
                ,TC.TOC_NM                                 AS TOC_NM
                ,DCON.SHIP_TO_CUST_ACCT_CD                 AS SHIP_TO_CUST_ACCT_CD
                ,SP.SHIP_TO_CUST_CD                        AS SHIP_TO_LOC_CD
                ,SP.SHIP_TO_LOC_NM                         AS SHIP_TO_LOC_NM
                ,SP.SHIP_TO_CTY_ADDR                       AS SHIP_TO_CTY_ADDR
                ,SP.SHIP_TO_ST_CD                          AS SHIP_TO_ST_CD
                <!-- QC#18367 -->
                ,SP.SHIP_TO_CTRY_CD                        AS SHIP_TO_CTRY_CD
                ,SOT.SCE_ORD_TP_CD                         AS SCE_ORD_TP_CD
                ,SP.TRX_SRC_TP_CD                          AS TRX_SRC_TP_CD
                ,AMV.SHPG_SER_TAKE_FLG                     AS SER_NUM_TAKE_FLG
                ,AMV.INSTL_BASE_CTRL_FLG                   AS INSTL_BASE_CTRL_FLG
                ,CD.RTL_WH_CD                              AS SHIP_FROM_RTL_WH_CD
                ,SP.INVTY_LOC_CD                           AS SHIP_FROM_LOC_CD
                ,SP.TRX_HDR_NUM                            AS TRX_HDR_NUM
                ,SP.TRX_LINE_NUM                           AS TRX_LINE_NUM
                ,SP.TRX_LINE_SUB_NUM                       AS TRX_LINE_SUB_NUM
                ,CASE WHEN WO.MAN_SEND_RQST_FLG = #flgY# THEN #flgY#
                      WHEN CT.MAN_SEND_RQST_FLG = #flgY# THEN #flgY#
                      ELSE #flgN#
                  END                                      AS MAN_SEND_RQST_FLG
                ,SP.SET_MDSE_CD                            AS SET_MDSE_CD
                ,SP.ORD_QTY                                AS SHPG_QTY
                ,SP.ORD_QTY                                AS SHPG_BAL_QTY
                ,CASE WHEN DDI.DELY_ADDL_CMNT_TXT IS NOT NULL THEN #flgY#
                      ELSE #flgN#
                 END                                       AS SHPG_ORD_DELY_INSTN_FLG
                ,DDI.DELY_ADDL_CMNT_TXT                    AS SHPG_INSTN_CMNT_TXT
                ,SP.ORIG_SHPG_SVC_LVL_CD                   AS SHPG_SVC_LVL_CD
                ,RW.INVTY_ACCT_CD                          AS INVTY_ACCT_CD
                ,DCON.MDL_ID                               AS MDL_ID
                ,SP.EZINUSERID                             AS SP_EZINUSERID
                ,NVL((
                    SELECT
                        CASE
                            WHEN IN_AP.MID_NM IS NULL AND IN_AP.FIRST_NM IS NULL THEN SP.EZINUSERID
                            WHEN IN_AP.MID_NM IS NULL THEN SP.EZINUSERID || ' : ' || IN_AP.FIRST_NM || ' ' || IN_AP.LAST_NM
                            WHEN IN_AP.MID_NM IS NOT NULL THEN SP.EZINUSERID || ' : ' || IN_AP.FIRST_NM || IN_AP.MID_NM || ' ' || IN_AP.LAST_NM
                            ELSE SP.EZINUSERID
                        END AS XX_REC_HIST_CRAT_BY_NM
                    FROM
                        AUTH_PSN        IN_AP
                    WHERE
                        SP.GLBL_CMPY_CD            = IN_AP.GLBL_CMPY_CD
                    AND UPPER(SP.EZINUSERID)       = UPPER(IN_AP.USR_NM)
                    AND IN_AP.EZCANCELFLAG         = '0'
                ), SP.EZINUSERID) AS XX_REC_HIST_CRAT_BY_NM
                ,SP.EZINTIME                               AS SP_EZINTIME
                ,SP.EZUPUSERID                             AS SP_EZUPUSERID
                ,NVL((
                    SELECT
                        CASE
                            WHEN IN_AP.MID_NM IS NULL AND IN_AP.FIRST_NM IS NULL THEN SP.EZUPUSERID
                            WHEN IN_AP.MID_NM IS NULL THEN SP.EZUPUSERID || ' : ' || IN_AP.FIRST_NM || ' ' || IN_AP.LAST_NM
                            WHEN IN_AP.MID_NM IS NOT NULL THEN SP.EZUPUSERID || ' : ' || IN_AP.FIRST_NM || IN_AP.MID_NM || ' ' || IN_AP.LAST_NM
                            ELSE SP.EZUPUSERID
                        END AS XX_REC_HIST_CRAT_BY_NM
                    FROM
                        AUTH_PSN        IN_AP
                    WHERE
                        SP.GLBL_CMPY_CD            = IN_AP.GLBL_CMPY_CD
                    AND UPPER(SP.EZUPUSERID)       = UPPER(IN_AP.USR_NM)
                    AND IN_AP.EZCANCELFLAG         = '0'
                ), SP.EZUPUSERID) AS XX_REC_HIST_UPD_BY_NM
                ,SP.EZUPTIME                               AS SP_EZUPTIME
                ,CPO.SELL_TO_FIRST_REF_CMNT_TXT            AS SELL_TO_FIRST_REF_CMNT_TXT
             FROM
                 SHPG_PLN                SP
                ,CPO_DTL                 CD
                ,CPO                     CPO
                ,SCE_ORD_TP              SOT
                ,AVAL_SCE_ORD_TP_APP_ID  ASOTAI
                ,DS_CPO_CONFIG           DCON
                ,ALL_MDSE_V              AMV
                ,BACK_ORD_IMPCT_TP       BOT
                ,SHPG_SVC_LVL            SSL
                ,TOC                     TC
                ,MDSE_STORE_PKG          MSP
                ,RTL_WH                  RW
                ,WH_OWNR                 WO
                ,VND                     V
                ,CARR_TP                 CT
                ,PRCH_REQ_DTL            PRD
                ,DS_CPO_DELY_INFO        DDI
             WHERE
                 SP.GLBL_CMPY_CD              = #glblCmpyCd#
             AND SP.SHPG_STS_CD               = #shpgStsValid#
             <isNotNull property="srcOrdNum">
             AND SP.TRX_HDR_NUM               = #srcOrdNum#
             </isNotNull>
             <isNotNull property="srcBoNumList">
                 <iterate property="srcBoNumList" var="srcBoNumList[]" open="AND SP.TRX_HDR_NUM IN (" conjunction= ", " close=")">
                     #srcBoNumList[]#
                 </iterate>
             </isNotNull>
             <isNotNull property="rddDtFrm">
             AND NVL(SP.RDD_DT,'19000101') &gt;= #rddDtFrm#
             </isNotNull>
             <isNotNull property="rddDtTo">
             AND NVL(SP.RDD_DT,'99991231') &lt;= #rddDtTo#
             </isNotNull>
             <isNotNull property="shpgSvcLvlCd">
             AND SP.ORIG_SHPG_SVC_LVL_CD      = #shpgSvcLvlCd#
             </isNotNull>
             <isNotNull property="carrCdList">
                 <iterate property="carrCdList" var="carrCdList[]" open="AND (SP.RQST_CARR_CD LIKE " conjunction= "OR SP.RQST_CARR_CD LIKE " close=")">
                     #carrCdList[]#
                 </iterate>
             </isNotNull>
             <isNotNull property="shipToCdList">
                 <iterate property="shipToCdList" var="shipToCdList[]" open="AND (SP.SHIP_TO_CUST_CD LIKE " conjunction= "OR SP.SHIP_TO_CUST_CD LIKE " close=")">
                     #shipToCdList[]#
                 </iterate>
             </isNotNull>
             AND SP.EZCANCELFLAG              = '0'
             AND SP.GLBL_CMPY_CD              = CD.GLBL_CMPY_CD
             AND SP.TRX_HDR_NUM               = CD.CPO_ORD_NUM
             AND SP.TRX_LINE_NUM              = CD.CPO_DTL_LINE_NUM
             AND SP.TRX_LINE_SUB_NUM          = CD.CPO_DTL_LINE_SUB_NUM
             <isNotNull property="svcConfigMstrPk">
             AND CD.SVC_CONFIG_MSTR_PK        = #svcConfigMstrPk#
             </isNotNull>
             <isNotNull property="whCdList">
                 <iterate property="whCdList" var="whCdList[]" open="AND (CD.RTL_WH_CD LIKE " conjunction= "OR CD.RTL_WH_CD LIKE " close=")">
                     #whCdList[]#
                 </iterate>
             </isNotNull>
             <isNotNull property="swhCdList">
                 <iterate property="swhCdList" var="swhCdList[]" open="AND (CD.RTL_SWH_CD LIKE " conjunction= "OR CD.RTL_SWH_CD LIKE " close=")">
                     #swhCdList[]#
                 </iterate>
             </isNotNull>
             AND CD.EZCANCELFLAG              = '0'
             AND CD.GLBL_CMPY_CD              = CPO.GLBL_CMPY_CD
             AND CD.CPO_ORD_NUM               = CPO.CPO_ORD_NUM
             AND CPO.EZCANCELFLAG             = '0'
             AND CPO.GLBL_CMPY_CD             = SOT.GLBL_CMPY_CD
             <isNotNull property="dsOrdTpList">
                 <iterate property="dsOrdTpList" var="dsOrdTpList[]"
                     open="AND CASE WHEN CPO.DS_ORD_TP_CD in ( " 
                     conjunction= "," 
                     close=") THEN 'DT' ELSE 'RS' END = SOT.SCE_ORD_TP_CD">
                     #dsOrdTpList[]#
                 </iterate>
             </isNotNull>
             <isNotNull property="sceOrdTpCd">
             AND SOT.SCE_ORD_TP_CD            = #sceOrdTpCd#
             </isNotNull>
             AND SOT.INBD_OTBD_CD             = #inbdOtbdCd#
             AND SOT.EZCANCELFLAG             = '0'
             AND SOT.GLBL_CMPY_CD             = ASOTAI.GLBL_CMPY_CD
             AND SOT.SCE_ORD_TP_CD            = ASOTAI.SCE_ORD_TP_CD
             AND ASOTAI.BIZ_APP_ID            = #bizAppId#
             AND ASOTAI.EZCANCELFLAG          = '0'
             AND CD.GLBL_CMPY_CD              = DCON.GLBL_CMPY_CD
             AND CD.DS_CPO_CONFIG_PK          = DCON.DS_CPO_CONFIG_PK
             AND DCON.EZCANCELFLAG            = '0'
             AND SP.GLBL_CMPY_CD              = AMV.GLBL_CMPY_CD
             AND SP.MDSE_CD                   = AMV.MDSE_CD
             AND AMV.EZCANCELFLAG             = '0'
             AND AMV.GLBL_CMPY_CD             = BOT.GLBL_CMPY_CD(+)
             AND AMV.BACK_ORD_IMPCT_TP_CD     = BOT.BACK_ORD_IMPCT_TP_CD(+)
             AND BOT.EZCANCELFLAG(+)          = '0'
             AND SP.GLBL_CMPY_CD              = SSL.GLBL_CMPY_CD(+)
             AND SP.ORIG_SHPG_SVC_LVL_CD      = SSL.SHPG_SVC_LVL_CD(+)
             AND SSL.EZCANCELFLAG(+)          = '0'
             AND SP.GLBL_CMPY_CD              = TC.GLBL_CMPY_CD(+)
             AND SP.SLS_REP_TOC_CD            = TC.TOC_CD(+)
             AND TC.EZCANCELFLAG(+)           = '0'
             AND SP.GLBL_CMPY_CD              = MSP.GLBL_CMPY_CD(+)
             AND SP.CUST_UOM_CD               = MSP.PKG_UOM_CD(+)
             AND SP.MDSE_CD                   = MSP.MDSE_CD(+)
             AND MSP.EZCANCELFLAG(+)          = '0'
             AND CD.GLBL_CMPY_CD              = RW.GLBL_CMPY_CD(+)
             AND CD.RTL_WH_CD                 = RW.RTL_WH_CD(+)
             AND RW.EZCANCELFLAG(+)           = '0'
             AND RW.GLBL_CMPY_CD              = WO.GLBL_CMPY_CD(+)
             AND RW.WH_OWNR_CD                = WO.WH_OWNR_CD(+)
             AND WO.EZCANCELFLAG(+)           = '0'
             AND SP.GLBL_CMPY_CD              = V.GLBL_CMPY_CD(+)
             AND SP.RQST_CARR_CD              = V.VND_CD(+)
             AND V.EZCANCELFLAG(+)            = '0'
             AND V.GLBL_CMPY_CD               = CT.GLBL_CMPY_CD(+)
             AND V.CARR_TP_CD                 = CT.CARR_TP_CD(+)
             AND CT.EZCANCELFLAG(+)           = '0'
             AND CD.GLBL_CMPY_CD              = PRD.GLBL_CMPY_CD(+)
             AND CASE
                     WHEN CD.CPO_SRC_TP_CD IS NULL
                     THEN
                        CPO.ORD_SRC_REF_NUM
                     ELSE
                        CD.ORD_SRC_REF_NUM
                     END                      = PRD.PRCH_REQ_NUM(+)
             AND CD.ORD_SRC_REF_LINE_NUM      = PRD.PRCH_REQ_LINE_NUM(+)
             AND CD.ORD_SRC_REF_LINE_SUB_NUM  = PRD.PRCH_REQ_LINE_SUB_NUM(+)
             <isNotNull property="needByDtFrom">
             AND NVL(PRD.RQST_RCV_DT,'19000101') &gt;= #needByDtFrom#
             </isNotNull>
             <isNotNull property="needByTmFrom">
             AND NVL(PRD.RQST_RCV_TM,'0000')     &gt;= #needByTmFrom#
             </isNotNull>
             <isNotNull property="needByDtTo">
             AND NVL(PRD.RQST_RCV_DT,'99991231') &lt;= #needByDtTo#
             </isNotNull>
             <isNotNull property="needByTmTo">
             AND NVL(PRD.RQST_RCV_TM,'2359')     &lt;= #needByTmTo#
             </isNotNull>
             AND PRD.EZCANCELFLAG(+)          = '0'
             AND DCON.GLBL_CMPY_CD            = DDI.GLBL_CMPY_CD(+)
             AND DCON.CPO_ORD_NUM             = DDI.CPO_ORD_NUM(+)
             AND DCON.DS_CPO_CONFIG_PK        = DDI.DS_CPO_CONFIG_PK(+)
             AND DDI.EZCANCELFLAG(+)          = '0'
             <isNotNull property="mdseCdList">
             AND EXISTS(
                        SELECT
                            1
                        FROM
                            SHPG_PLN SPP
                        WHERE
                            SPP.GLBL_CMPY_CD = SP.GLBL_CMPY_CD
                        AND SPP.SHPG_PLN_NUM = SP.SHPG_PLN_NUM
                        <iterate property="mdseCdList" var="mdseCdList[]" open="AND (SPP.MDSE_CD LIKE " conjunction= "OR SPP.MDSE_CD LIKE " close=")">
                            #mdseCdList[]#
                        </iterate>
                        AND SPP.EZCANCELFLAG = '0'
                       )
             </isNotNull>
         )
        </isNotNull>
        <!-- NO SHIP CONF DATA (CLOSE OR OPEN NOT SHIPED) -->
        SELECT
            SDV.GLBL_CMPY_CD
           ,SDV.SRC_ORD_NUM
           ,SDV.DPLY_LINE_NUM
           ,SDV.SRC_ORD_LINE_NUM
           ,SDV.SRC_ORD_LINE_SUB_NUM
           ,SDV.SO_NUM
           ,SDV.SO_SLP_NUM
           ,SDV.SCE_ORD_TP_NM
           ,SDV.SHIP_FROM_RTL_WH_NM
           ,SDV.SHIP_FROM_RTL_SWH_CD
           ,SDV.DS_SO_LINE_STS_DESC_TXT
           ,SDV.DS_SO_LINE_STS_CD
           ,SDV.RMV_CONFIG_FLG
           ,SDV.SHIP_SVC_CONFIG_MSTR_PK
           ,SDV.PICK_SVC_CONFIG_MSTR_PK
           ,SDV.MDSE_CD
           ,SDV.MDSE_DESC_SHORT_TXT
           ,SDV.BACK_ORD_IMPCT_TP_DESC_TXT
           ,SDV.FROM_STK_STS_CD
           ,SDV.DPLY_PKG_UOM_CD
           ,SDV.UOM_EACH_QTY
           ,SDV.RDD_DT
           ,SDV.RQST_RCV_DT
           ,SDV.RQST_RCV_TM
           ,SDV.SO_CRAT_TS
           ,SDV.SHPG_SVC_LVL_DESC_TXT
           ,SDV.CARR_CD
           ,SDV.CARR_NM
           ,SDV.RQST_CARR_CD
           ,SDV.RQST_CARR_NM
           ,SDV.CARR_ACCT_NUM
           ,SDV.TOC_NM
           ,SDV.SHIP_TO_CUST_ACCT_CD
           ,SDV.SHIP_TO_LOC_CD
           ,SDV.SHIP_TO_LOC_NM
           ,SDV.SHIP_TO_CTY_ADDR
           ,SDV.SHIP_TO_ST_CD
           <!-- QC#18367 Add -->
           ,SDV.SHIP_TO_CTRY_CD
           ,SDV.SHIP_TO_CTAC_PSN_NM
           ,SDV.SCE_ORD_TP_CD
           ,SDV.TRX_SRC_TP_CD
           ,SDV.SER_NUM_TAKE_FLG
           ,SDV.INSTL_BASE_CTRL_FLG
           ,SDV.SHIP_FROM_RTL_WH_CD
           ,SDV.SHIP_FROM_LOC_CD
           ,SDV.TRX_HDR_NUM
           ,SDV.TRX_LINE_NUM
           ,SDV.TRX_LINE_SUB_NUM
           ,SDV.TO_STK_STS_CD
           ,SDV.MAN_SEND_RQST_FLG
           ,SDV.SEND_RQST_FLG
           ,SDV.SET_MDSE_CD
           ,SDV.DS_COND_CONST_VAL_TXT_01
           ,SDV.DS_COND_CONST_VAL_TXT_04
           ,SDV.DS_COND_CONST_VAL_TXT_05
           ,SDV.DS_COND_CONST_VAL_TXT_06
           ,SDV.INVTY_ACCT_CD
           ,SDV.MDL_ID
           ,SDV.SO_EZUPTIME
           ,SDV.SO_EZUPTIMEZONE
           ,SDV.SOD_EZUPTIME
           ,SDV.SOD_EZUPTIMEZONE
           ,SDV.SHPG_QTY
           ,SDV.PICK_CONF_QTY
           ,0 AS SHIP_QTY
           ,SDV.SHPG_BAL_QTY
           ,NULL AS PRO_NUM
           ,NULL AS TOT_FRT_AMT
           ,CASE WHEN SDV.PICK_CONF_QTY = 0 THEN NULL
                 ELSE PV.PKT_STS_TS
            END  AS PKT_STS_TS
           ,PV.PKT_PACK_STS_TS
           ,NULL AS SHIP_DT_TM_TS
           ,SDV.SO_PRINT_FLG
           ,SDV.SHIP_FLG
           ,SDV.SO_LINE_OPEN_FLG
           ,NULL AS PACK_SLP_NUM
           ,CASE WHEN SM.TXT_SQ_NUM IS NOT NULL THEN #flgY#
                 ELSE SDV.SHPG_ORD_DELY_INSTN_FLG
            END  AS SHPG_ORD_DELY_INSTN_FLG
           ,SDV.SHPG_INSTN_CMNT_TXT
           ,SDV.SHPG_SVC_LVL_CD
           ,TO_NUMBER(SDV.SRC_ORD_LINE_NUM)     AS LINE_NUM
           ,TO_NUMBER(SDV.SRC_ORD_LINE_SUB_NUM) AS LINE_SUB_NUM
           ,SDV.SOD_EZINTIME                    AS XX_REC_HIST_CRAT_TS
           ,SDV.XX_REC_HIST_CRAT_BY_NM
           ,SDV.SOD_EZUPTIME                    AS XX_REC_HIST_UPD_TS
           ,SDV.XX_REC_HIST_UPD_BY_NM
           ,'SHPG_ORD_DTL'                      AS XX_REC_HIST_TBL_NM
           ,SDV.SHPG_SVC_LVL_CD AS ACTL_SVC_LVL_CD
           ,SDV.WMS_DROP_FLG
           ,SDV.WH_OWNR_CD
           <!-- tomimatsu Add -->
           ,SDV.SHPG_STS_CD                     AS SHPG_STS_CD
           ,SDV.WH_CD                           AS WH_CD
           ,SDV.SHIP_TO_CUST_CD                 AS SHIP_TO_CUST_CD
           ,SDV.FRT_CHRG_TO_CD                  AS FRT_CHRG_TO_CD
           ,SDV.FRT_CHRG_METH_CD                AS FRT_CHRG_METH_CD
           ,SN.PRT_SHIP_NUM                     AS PRT_SHIP_NUM
           <!-- tomimatsu Add -->
           -- Serial
           ,(
                SELECT
                    RTRIM(XMLAGG(XMLELEMENT(e,SS.SER_NUM,',').EXTRACT('//text()')).GetClobVal(),',')
                FROM(
                    SELECT
                        SER_NUM
                    FROM
                        SO_SER SS
                    WHERE
                        SS.GLBL_CMPY_CD    = SDV.GLBL_CMPY_CD
                    AND SS.SO_NUM          = SDV.SO_NUM
                    AND SS.SO_SLP_NUM      = SDV.SO_SLP_NUM
                    AND (   SS.WH_PICK_FLG = 'Y'
                         OR SS.ORD_ASG_FLG = 'Y'
                        )
                    AND SS.EZCANCELFLAG    = '0'
                    AND NOT EXISTS(
                        SELECT
                            1
                        FROM
                            SHIP_SER_NUM SSN
                        WHERE
                            SSN.GLBL_CMPY_CD = SS.GLBL_CMPY_CD
                        AND SSN.SO_NUM       = SS.SO_NUM
                        AND SSN.SER_NUM      = SS.SER_NUM
                        AND SSN.MDSE_CD      = SS.MDSE_CD
                        AND SSN.EZCANCELFLAG = '0'
                        AND ROWNUM           = 1
                    )
                    ORDER BY
                         SS.WH_PICK_FLG DESC
                        ,SS.ORD_ASG_FLG DESC
                    ) SS
                WHERE
                    (ROWNUM &lt;= SDV.SHPG_BAL_QTY OR (SDV.SCE_ORD_TP_CD = #itemChange# AND SDV.SHPG_BAL_QTY &lt; 0))
             ) AS SER_NUM
        FROM
            SO_DTL_V        SDV
           ,PKT_V           PV
           ,SO_MSG          SM
          <!-- tomimatsu Add -->
           ,PRT_SHIP_NUM_MAP     SN
          <!-- tomimatsu Add -->
        WHERE
            NOT EXISTS (SELECT
                            1
                        FROM
                            SHPG_ORD_CONF_DTL SOCD
                        WHERE
                            SOCD.GLBL_CMPY_CD   = SDV.GLBL_CMPY_CD
                        AND SOCD.SO_NUM         = SDV.SO_NUM
                        AND SOCD.SO_SLP_NUM     = SDV.SO_SLP_NUM
                        AND SOCD.SO_PROC_STS_CD = #soProcStsCdShip#
                        AND SOCD.EZCANCELFLAG   = '0')
        AND SDV.GLBL_CMPY_CD                    = PV.GLBL_CMPY_CD(+)
        AND SDV.SO_NUM                          = PV.SO_NUM(+)
        AND SDV.SO_SLP_NUM                      = PV.SO_SLP_NUM(+)
        AND SDV.SO_NUM                          = SM.SO_NUM(+)
        AND SDV.SO_NUM                          = SN.SO_NUM(+)
        <!-- SHIP CONF LINE CLOSE DATA -->
        <isNull property="soLineOpenFlg">
        UNION ALL
        SELECT
            SDV.GLBL_CMPY_CD
           ,SDV.SRC_ORD_NUM
           ,SDV.DPLY_LINE_NUM
           ,SDV.SRC_ORD_LINE_NUM
           ,SDV.SRC_ORD_LINE_SUB_NUM
           ,SDV.SO_NUM
           ,SDV.SO_SLP_NUM
           ,SDV.SCE_ORD_TP_NM
           ,SDV.SHIP_FROM_RTL_WH_NM
           ,SDV.SHIP_FROM_RTL_SWH_CD
           ,SDV.DS_SO_LINE_STS_DESC_TXT
           ,SDV.DS_SO_LINE_STS_CD
           ,SDV.RMV_CONFIG_FLG
           ,SDV.SHIP_SVC_CONFIG_MSTR_PK
           ,SDV.PICK_SVC_CONFIG_MSTR_PK
           ,SDV.MDSE_CD
           ,SDV.MDSE_DESC_SHORT_TXT
           ,SDV.BACK_ORD_IMPCT_TP_DESC_TXT
           ,SDV.FROM_STK_STS_CD
           ,SDV.DPLY_PKG_UOM_CD
           ,SDV.UOM_EACH_QTY
           ,SDV.RDD_DT
           ,SDV.RQST_RCV_DT
           ,SDV.RQST_RCV_TM
           ,SDV.SO_CRAT_TS
           ,SDV.SHPG_SVC_LVL_DESC_TXT
           ,SOCD.VND_CD                  AS CARR_CD
           ,V.LOC_NM                     AS CARR_NM
           ,SDV.RQST_CARR_CD
           ,SDV.RQST_CARR_NM
           ,SDV.CARR_ACCT_NUM
           ,SDV.TOC_NM
           ,SDV.SHIP_TO_CUST_ACCT_CD
           ,SDV.SHIP_TO_LOC_CD
           ,SDV.SHIP_TO_LOC_NM
           ,SDV.SHIP_TO_CTY_ADDR
           ,SDV.SHIP_TO_ST_CD
           <!-- QC#18367 Add -->
           ,SDV.SHIP_TO_CTRY_CD
           ,SDV.SHIP_TO_CTAC_PSN_NM
           ,SDV.SCE_ORD_TP_CD
           ,SDV.TRX_SRC_TP_CD
           ,SDV.SER_NUM_TAKE_FLG
           ,SDV.INSTL_BASE_CTRL_FLG
           ,SDV.SHIP_FROM_RTL_WH_CD
           ,SDV.SHIP_FROM_LOC_CD
           ,SDV.TRX_HDR_NUM
           ,SDV.TRX_LINE_NUM
           ,SDV.TRX_LINE_SUB_NUM
           ,SDV.TO_STK_STS_CD
           ,SDV.MAN_SEND_RQST_FLG
           ,SDV.SEND_RQST_FLG
           ,SDV.SET_MDSE_CD
           ,SDV.DS_COND_CONST_VAL_TXT_01
           ,SDV.DS_COND_CONST_VAL_TXT_04
           ,SDV.DS_COND_CONST_VAL_TXT_05
           ,SDV.DS_COND_CONST_VAL_TXT_06
           ,SDV.INVTY_ACCT_CD
           ,SDV.MDL_ID
           ,SDV.SO_EZUPTIME
           ,SDV.SO_EZUPTIMEZONE
           ,SDV.SOD_EZUPTIME
           ,SDV.SOD_EZUPTIMEZONE
           ,CASE WHEN DS_SO_LINE_STS_CD = #partiallyShipped# THEN SDV.SHIP_QTY
                 ELSE SDV.SHPG_QTY
            END AS SHPG_QTY
           ,SDV.SHIP_QTY AS PICK_CONF_QTY
           ,SOCD.SHIP_QTY
           ,0  AS SHPG_BAL_QTY
           ,DECODE(SOCD.PRO_NUM, '*', NULL, SOCD.PRO_NUM) AS PRO_NUM
           ,SOCD.TOT_FRT_AMT
           ,PV.PKT_STS_TS
           ,PV.PKT_PACK_STS_TS
           ,SOCD.SHIP_DT_TM_TS
           ,SDV.SO_PRINT_FLG
           ,SDV.SHIP_FLG
           ,#flgN# AS SO_LINE_OPEN_FLG
           ,SDV.SO_NUM || '-1' AS PACK_SLP_NUM
           ,CASE WHEN SM.TXT_SQ_NUM IS NOT NULL THEN #flgY#
                 ELSE SDV.SHPG_ORD_DELY_INSTN_FLG
            END                AS SHPG_ORD_DELY_INSTN_FLG
           ,SDV.SHPG_INSTN_CMNT_TXT
           ,SDV.SHPG_SVC_LVL_CD
           ,TO_NUMBER(SDV.SRC_ORD_LINE_NUM)     AS LINE_NUM
           ,TO_NUMBER(SDV.SRC_ORD_LINE_SUB_NUM) AS LINE_SUB_NUM
           ,SOCD.EZINTIME                       AS XX_REC_HIST_CRAT_TS
           ,SDV.XX_REC_HIST_CRAT_BY_NM
           ,SDV.SOD_EZUPTIME                    AS XX_REC_HIST_UPD_TS
           ,SDV.XX_REC_HIST_UPD_BY_NM
           ,'SHPG_ORD_CONF_DTL'                 AS XX_REC_HIST_TBL_NM
           ,SOCD.SHPG_SVC_LVL_CD                AS ACTL_SVC_LVL_CD
           ,NULL   AS WMS_DROP_FLG
           ,NULL   AS WH_OWNR_CD
           -- Serial
           ,(
                SELECT
                    RTRIM(XMLAGG(XMLELEMENT(e,SS.SER_NUM,',').EXTRACT('//text()')).GetClobVal(),',')
                FROM(
                    SELECT
                        SS.SER_NUM
                    FROM
                        SHIP_SER_NUM SS
                    WHERE
                        SS.GLBL_CMPY_CD    = SDV.GLBL_CMPY_CD
                    AND SS.SO_NUM          = SDV.SO_NUM
                    AND SS.SO_SLP_NUM      = SDV.SO_SLP_NUM
                    AND SS.EZCANCELFLAG    = '0'
                    ORDER BY
                        SS.SER_NUM ASC
                ) SS
            ) AS SER_NUM
        FROM
            SO_DTL_V          SDV
           ,SHPG_ORD_CONF_DTL SOCD
           ,PKT_V             PV
           ,SO_MSG            SM
           ,VND               V
        WHERE
            SDV.GLBL_CMPY_CD           = SOCD.GLBL_CMPY_CD
        AND SDV.SO_NUM                 = SOCD.SO_NUM
        AND SDV.SO_SLP_NUM             = SOCD.SO_SLP_NUM
        AND SOCD.SO_PROC_STS_CD        = #soProcStsCdShip#
        AND SOCD.EZCANCELFLAG          = '0'
        AND SDV.GLBL_CMPY_CD           = PV.GLBL_CMPY_CD(+)
        AND SDV.SO_NUM                 = PV.SO_NUM(+)
        AND SDV.SO_SLP_NUM             = PV.SO_SLP_NUM(+)
        AND SDV.SO_NUM                 = SM.SO_NUM(+)
        AND SOCD.GLBL_CMPY_CD          = V.GLBL_CMPY_CD(+)
        AND SOCD.VND_CD                = V.VND_CD(+)
        AND V.EZCANCELFLAG(+)          = '0'
        </isNull>
        <!-- SHIP CONF LINE OPEN (Split Shipment) -->
        UNION ALL
        SELECT
            SDV.GLBL_CMPY_CD
           ,SDV.SRC_ORD_NUM
           ,SDV.DPLY_LINE_NUM
           ,SDV.SRC_ORD_LINE_NUM
           ,SDV.SRC_ORD_LINE_SUB_NUM
           ,SDV.SO_NUM
           ,SDV.SO_SLP_NUM
           ,SDV.SCE_ORD_TP_NM
           ,SDV.SHIP_FROM_RTL_WH_NM
           ,SDV.SHIP_FROM_RTL_SWH_CD
           ,SDV.DS_SO_LINE_STS_DESC_TXT
           ,SDV.DS_SO_LINE_STS_CD
           ,SDV.RMV_CONFIG_FLG
           ,SDV.SHIP_SVC_CONFIG_MSTR_PK
           ,SDV.PICK_SVC_CONFIG_MSTR_PK
           ,SDV.MDSE_CD
           ,SDV.MDSE_DESC_SHORT_TXT
           ,SDV.BACK_ORD_IMPCT_TP_DESC_TXT
           ,SDV.FROM_STK_STS_CD
           ,SDV.DPLY_PKG_UOM_CD
           ,SDV.UOM_EACH_QTY
           ,SDV.RDD_DT
           ,SDV.RQST_RCV_DT
           ,SDV.RQST_RCV_TM
           ,SDV.SO_CRAT_TS
           ,SDV.SHPG_SVC_LVL_DESC_TXT
           ,SDV.CARR_CD
           ,SDV.CARR_NM
           ,SDV.RQST_CARR_CD
           ,SDV.RQST_CARR_NM
           ,SDV.CARR_ACCT_NUM
           ,SDV.TOC_NM
           ,SDV.SHIP_TO_CUST_ACCT_CD
           ,SDV.SHIP_TO_LOC_CD
           ,SDV.SHIP_TO_LOC_NM
           ,SDV.SHIP_TO_CTY_ADDR
           ,SDV.SHIP_TO_ST_CD
           <!-- QC#18367 Add -->
           ,SDV.SHIP_TO_CTRY_CD
           ,SDV.SHIP_TO_CTAC_PSN_NM
           ,SDV.SCE_ORD_TP_CD
           ,SDV.TRX_SRC_TP_CD
           ,SDV.SER_NUM_TAKE_FLG
           ,SDV.INSTL_BASE_CTRL_FLG
           ,SDV.SHIP_FROM_RTL_WH_CD
           ,SDV.SHIP_FROM_LOC_CD
           ,SDV.TRX_HDR_NUM
           ,SDV.TRX_LINE_NUM
           ,SDV.TRX_LINE_SUB_NUM
           ,SDV.TO_STK_STS_CD
           ,SDV.MAN_SEND_RQST_FLG
           ,SDV.SEND_RQST_FLG
           ,SDV.SET_MDSE_CD
           ,SDV.DS_COND_CONST_VAL_TXT_01
           ,SDV.DS_COND_CONST_VAL_TXT_04
           ,SDV.DS_COND_CONST_VAL_TXT_05
           ,SDV.DS_COND_CONST_VAL_TXT_06
           ,SDV.INVTY_ACCT_CD
           ,SDV.MDL_ID
           ,SDV.SO_EZUPTIME
           ,SDV.SO_EZUPTIMEZONE
           ,SDV.SOD_EZUPTIME
           ,SDV.SOD_EZUPTIMEZONE
           ,SDV.SHPG_QTY - SDV.SHIP_QTY AS SHPG_QTY
           ,CASE WHEN SDV.PICK_CONF_QTY - SDV.SHIP_QTY &lt; 0 THEN 0 
                 ELSE SDV.PICK_CONF_QTY - SDV.SHIP_QTY 
            END AS PICK_CONF_QTY
           ,0 AS SHIP_QTY
           ,SDV.SHPG_BAL_QTY
           ,NULL AS PRO_NUM
           ,NULL AS TOT_FRT_AMT
           ,PV.PKT_STS_TS
           ,PV.PKT_PACK_STS_TS
           ,NULL AS SHIP_DT_TM_TS
           ,SDV.SO_PRINT_FLG
           ,SDV.SHIP_FLG
           ,SDV.SO_LINE_OPEN_FLG
           ,NULL AS PACK_SLP_NUM
           ,CASE WHEN SM.TXT_SQ_NUM IS NOT NULL THEN #flgY#
                 ELSE SDV.SHPG_ORD_DELY_INSTN_FLG
            END  AS SHPG_ORD_DELY_INSTN_FLG
           ,SDV.SHPG_INSTN_CMNT_TXT
           ,SDV.SHPG_SVC_LVL_CD
           ,TO_NUMBER(SDV.SRC_ORD_LINE_NUM)     AS LINE_NUM
           ,TO_NUMBER(SDV.SRC_ORD_LINE_SUB_NUM) AS LINE_SUB_NUM
           ,SDV.SOD_EZINTIME                    AS XX_REC_HIST_CRAT_TS
           ,SDV.XX_REC_HIST_CRAT_BY_NM
           ,SDV.SOD_EZUPTIME                    AS XX_REC_HIST_UPD_TS
           ,SDV.XX_REC_HIST_UPD_BY_NM
           ,'SHPG_ORD_DTL'                      AS XX_REC_HIST_TBL_NM
           ,SDV.SHPG_SVC_LVL_CD AS ACTL_SVC_LVL_CD
           ,SDV.WMS_DROP_FLG    AS WMS_DROP_FLG
           ,SDV.WH_OWNR_CD      AS WH_OWNR_CD
           <!-- tomimatsu Add -->
           ,SDV.SHPG_STS_CD       AS SHPG_STS_CD
           ,SDV.WH_CD             AS WH_CD
           ,SDV.SHIP_TO_CUST_CD   AS SHIP_TO_CUST_CD
           ,SDV.FRT_CHRG_TO_CD    AS FRT_CHRG_TO_CD
           ,SDV.FRT_CHRG_METH_CD  AS FRT_CHRG_METH_CD
           ,SN.PRT_SHIP_NUM       AS PRT_SHIP_NUM
           <!-- tomimatsu Add -->
           -- Serial
           ,(
                SELECT
                    RTRIM(XMLAGG(XMLELEMENT(e,SS.SER_NUM,',').EXTRACT('//text()')).GetClobVal(),',')
                FROM(
                    SELECT
                        SER_NUM
                    FROM
                        SO_SER SS
                    WHERE
                        SS.GLBL_CMPY_CD    = SDV.GLBL_CMPY_CD
                    AND SS.SO_NUM          = SDV.SO_NUM
                    AND SS.SO_SLP_NUM      = SDV.SO_SLP_NUM
                    AND (   SS.WH_PICK_FLG = 'Y'
                         OR SS.ORD_ASG_FLG = 'Y'
                        )
                    AND SS.EZCANCELFLAG    = '0'
                    AND NOT EXISTS(
                        SELECT
                            1
                        FROM
                            SHIP_SER_NUM SSN
                        WHERE
                            SSN.GLBL_CMPY_CD = SS.GLBL_CMPY_CD
                        AND SSN.SO_NUM       = SS.SO_NUM
                        AND SSN.SER_NUM      = SS.SER_NUM
                        AND SSN.MDSE_CD      = SS.MDSE_CD
                        AND SSN.EZCANCELFLAG = '0'
                        AND ROWNUM           = 1
                    )
                    ORDER BY
                         SS.WH_PICK_FLG DESC
                        ,SS.ORD_ASG_FLG DESC
                ) SS
            ) AS SER_NUM
        FROM
            SO_DTL_V         SDV
           ,PKT_V            PV
           ,SO_MSG           SM
          <!-- tomimatsu Add -->
           ,PRT_SHIP_NUM_MAP SN
           <!-- tomimatsu Add -->
        WHERE
            EXISTS (SELECT
                        1
                    FROM
                        SHPG_ORD_CONF_DTL SOCD
                    WHERE
                        SOCD.GLBL_CMPY_CD   = SDV.GLBL_CMPY_CD
                    AND SOCD.SO_NUM         = SDV.SO_NUM
                    AND SOCD.SO_SLP_NUM     = SDV.SO_SLP_NUM
                    AND SOCD.SO_PROC_STS_CD = #soProcStsCdShip#
                    AND SOCD.EZCANCELFLAG   = '0')
        AND SDV.SO_PRINT_FLG                = #soPrintFlg#
        AND SDV.SHIP_FLG                    = #shipFlg#
        AND SDV.SO_LINE_OPEN_FLG            = #flgY#
        AND SDV.GLBL_CMPY_CD                = PV.GLBL_CMPY_CD(+)
        AND SDV.SO_NUM                      = PV.SO_NUM(+)
        AND SDV.SO_SLP_NUM                  = PV.SO_SLP_NUM(+)
        AND SDV.SO_NUM                      = SM.SO_NUM(+)
        AND SDV.SO_NUM                      = SN.SO_NUM(+)
        <isNotNull property="soLineBackOrdFlg">
        UNION ALL
        SELECT 
            BV.GLBL_CMPY_CD
           ,BV.SRC_ORD_NUM
           ,BV.DPLY_LINE_NUM
           ,BV.SRC_ORD_LINE_NUM
           ,BV.SRC_ORD_LINE_SUB_NUM
           ,BV.SO_NUM
           ,BV.SO_SLP_NUM
           ,BV.SCE_ORD_TP_NM
           ,BV.SHIP_FROM_RTL_WH_NM
           ,BV.SHIP_FROM_RTL_SWH_CD
           ,BV.DS_SO_LINE_STS_DESC_TXT
           ,BV.DS_SO_LINE_STS_CD
           ,'N' AS RMV_CONFIG_FLG
           ,BV.SHIP_SVC_CONFIG_MSTR_PK
           ,BV.PICK_SVC_CONFIG_MSTR_PK
           ,BV.MDSE_CD
           ,BV.MDSE_DESC_SHORT_TXT
           ,BV.BACK_ORD_IMPCT_TP_DESC_TXT
           ,BV.FROM_STK_STS_CD
           ,BV.DPLY_PKG_UOM_CD
           ,BV.UOM_EACH_QTY
           ,BV.RDD_DT
           ,BV.RQST_RCV_DT
           ,BV.RQST_RCV_TM
           ,NULL   AS SO_CRAT_TS
           ,BV.SHPG_SVC_LVL_DESC_TXT
           ,BV.CARR_CD
           ,BV.CARR_NM
           ,BV.RQST_CARR_CD
           ,BV.RQST_CARR_NM
           ,BV.CARR_ACCT_NUM
           ,BV.TOC_NM
           ,BV.SHIP_TO_CUST_ACCT_CD
           ,BV.SHIP_TO_LOC_CD
           ,BV.SHIP_TO_LOC_NM
           ,BV.SHIP_TO_CTY_ADDR
           ,BV.SHIP_TO_ST_CD
           <!-- QC#18367 Add -->
           ,BV.SHIP_TO_CTRY_CD
           ,BV.SELL_TO_FIRST_REF_CMNT_TXT AS SHIP_TO_CTAC_PSN_NM
           ,BV.SCE_ORD_TP_CD
           ,BV.TRX_SRC_TP_CD
           ,BV.SER_NUM_TAKE_FLG
           ,BV.INSTL_BASE_CTRL_FLG
           ,BV.SHIP_FROM_RTL_WH_CD
           ,BV.SHIP_FROM_LOC_CD
           ,BV.TRX_HDR_NUM
           ,BV.TRX_LINE_NUM
           ,BV.TRX_LINE_SUB_NUM
           ,NULL   AS TO_STK_STS_CD
           ,BV.MAN_SEND_RQST_FLG
           ,#flgN# AS SEND_RQST_FLG
           ,BV.SET_MDSE_CD
           ,#flgN# AS DS_COND_CONST_VAL_TXT_01
           ,#flgN# AS DS_COND_CONST_VAL_TXT_04
           ,#flgN# AS DS_COND_CONST_VAL_TXT_05
           ,#flgN# AS DS_COND_CONST_VAL_TXT_06
           ,BV.INVTY_ACCT_CD
           ,BV.MDL_ID
           ,NULL   AS SO_EZUPTIME
           ,NULL   AS SO_EZUPTIMEZONE
           ,NULL   AS SOD_EZUPTIME
           ,NULL   AS SOD_EZUPTIMEZONE
           ,BV.SHPG_QTY
           ,0      AS PICK_CONF_QTY
           ,0      AS SHIP_QTY
           ,BV.SHPG_BAL_QTY
           ,NULL   AS PRO_NUM
           ,NULL   AS TOT_FRT_AMT
           ,NULL   AS PKT_STS_TS
           ,NULL   AS PKT_PACK_STS_TS
           ,NULL   AS SHIP_DT_TM_TS
           ,#flgN# AS SO_PRINT_FLG
           ,#flgN# AS SHIP_FLG
           ,#flgN# AS SO_LINE_OPEN_FLG
           ,NULL   AS PACK_SLP_NUM
           ,BV.SHPG_ORD_DELY_INSTN_FLG
           ,BV.SHPG_INSTN_CMNT_TXT
           ,BV.SHPG_SVC_LVL_CD
           ,TO_NUMBER(BV.SRC_ORD_LINE_NUM)     AS LINE_NUM
           ,TO_NUMBER(BV.SRC_ORD_LINE_SUB_NUM) AS LINE_SUB_NUM
           ,BV.SP_EZINTIME                     AS XX_REC_HIST_CRAT_TS
           ,BV.XX_REC_HIST_CRAT_BY_NM
           ,BV.SP_EZUPTIME                    AS XX_REC_HIST_UPD_TS
           ,BV.XX_REC_HIST_UPD_BY_NM
           ,'SHPG_PLN'                         AS XX_REC_HIST_TBL_NM
           ,BV.SHPG_SVC_LVL_CD AS ACTL_SVC_LVL_CD
           ,NULL               AS WMS_DROP_FLG
           ,NULL               AS WH_OWNR_CD
           -- Serial
           ,NULL AS SER_NUM
        FROM
            BO_V           BV
        </isNotNull>
        ORDER BY
            SRC_ORD_NUM
           ,LINE_NUM
           ,LINE_SUB_NUM
           ,SO_NUM
           ,SO_SLP_NUM
           ,SHIP_DT_TM_TS NULLS FIRST
    </statement>

    <statement id="searchPickList" parameterClass="Map" resultClass="Map">
        WITH SO_LIST AS (
            SELECT
                SO.GLBL_CMPY_CD
               ,SO.SRC_ORD_NUM                AS SRC_ORD_NUM
               ,CASE WHEN CD.CPO_ORD_NUM   IS NOT NULL THEN CONCAT (CD.DS_ORD_POSN_NUM, '.') || CONCAT (CD.DS_CPO_LINE_NUM, DECODE(CD.DS_CPO_LINE_SUB_NUM, NULL, '', '.')) || CD.DS_CPO_LINE_SUB_NUM
                     WHEN PD.PO_ORD_NUM    IS NOT NULL THEN PD.DISP_PO_DTL_LINE_NUM
                     WHEN SOD.PRCH_REQ_NUM IS NOT NULL THEN TO_CHAR(TO_NUMBER(SOD.PRCH_REQ_LINE_NUM)) || '.' || TO_CHAR(SOD.PRCH_REQ_LINE_SUB_NUM)
                     ELSE TO_CHAR(TO_NUMBER(SOD.TRX_LINE_NUM))
                END                           AS DPLY_LINE_NUM
               ,CASE WHEN CD.CPO_ORD_NUM   IS NOT NULL THEN CD.CPO_DTL_LINE_NUM
                     WHEN PD.PO_ORD_NUM    IS NOT NULL THEN PD.PO_ORD_DTL_LINE_NUM
                     WHEN SOD.PRCH_REQ_NUM IS NOT NULL THEN SOD.PRCH_REQ_LINE_NUM
                     ELSE SOD.TRX_LINE_NUM
                END                           AS SRC_ORD_LINE_NUM
               ,CASE WHEN CD.CPO_ORD_NUM   IS NOT NULL THEN CD.CPO_DTL_LINE_SUB_NUM
                     WHEN PD.PO_ORD_NUM    IS NOT NULL THEN NULL
                     WHEN SOD.PRCH_REQ_NUM IS NOT NULL THEN TO_CHAR(SOD.PRCH_REQ_LINE_SUB_NUM)
                     ELSE SOD.TRX_LINE_SUB_NUM
                END                           AS SRC_ORD_LINE_SUB_NUM
               ,SO.TRX_HDR_NUM
               ,SOD.TRX_LINE_NUM
               ,SOD.TRX_LINE_SUB_NUM
               ,SOD.SO_NUM
               ,SOD.SO_SLP_NUM
               ,SO.SCE_ORD_TP_CD
               ,SOD.RTL_WH_CD                 AS SHIP_FROM_RTL_WH_CD
               ,RW.RTL_WH_NM                  AS SHIP_FROM_RTL_WH_NM
               ,SOD.RTL_SWH_CD                AS SHIP_FROM_RTL_SWH_CD
               ,SOD.INVTY_LOC_CD              AS SHIP_FROM_LOC_CD
               ,RW.INVTY_ACCT_CD
               ,SOD.PICK_SVC_CONFIG_MSTR_PK   AS PICK_SVC_CONFIG_MSTR_PK
               ,SO.MDL_ID
               ,SOD.MDSE_CD
               ,M.MDSE_DESC_SHORT_TXT
               ,SOD.SHPG_QTY
               ,SOD.SHIP_QTY
               ,SOD.SHPG_QTY - SOD.SHIP_QTY   AS SHPG_BAL_QTY
               ,CASE WHEN SOD.SHIP_QTY - SOD.PICK_CONF_QTY &gt; 0 THEN SOD.SHIP_QTY
                     ELSE SOD.PICK_CONF_QTY
                END                           AS PICK_CONF_QTY
               ,SOD.PICK_CONF_QTY             AS DB_PICK_QTY
               ,DSLS.SO_LINE_OPEN_FLG
               ,SOD.SER_NUM_TAKE_FLG
               ,SO.TRX_SRC_TP_CD
               ,SO.EZUPTIME                   AS SO_EZUPTIME
               ,SO.EZUPTIMEZONE               AS SO_EZUPTIMEZONE
               ,SOD.EZUPTIME                  AS SOD_EZUPTIME
               ,SOD.EZUPTIMEZONE              AS SOD_EZUPTIMEZONE
               ,SOD.EZINTIME                  AS SOD_EZINTIME
               ,SOD.EZINUSERID                AS SOD_EZINUSERID
               ,SOD.EZUPUSERID                AS SOD_EZUPUSERID
            FROM
                SHPG_ORD          SO
               ,SHPG_ORD_DTL      SOD
               ,DS_SO_LINE_STS    DSLS
               ,SVC_CONFIG_MSTR   SCM
               ,RTL_WH            RW
               ,MDSE              M
               ,CPO_DTL           CD
               ,PO_DTL            PD
            WHERE
                SO.GLBL_CMPY_CD           = #glblCmpyCd#
            <iterate property="soNumList" var="soNumList[]" open="AND SO.SO_NUM IN (" conjunction= ", " close=")">
                #soNumList[]#
            </iterate>
            AND SO.EZCANCELFLAG           = '0'
            AND SO.GLBL_CMPY_CD           = SOD.GLBL_CMPY_CD
            AND SO.SO_NUM                 = SOD.SO_NUM
            AND SOD.SHPG_QTY - SOD.SHIP_QTY &gt; 0
            AND SOD.SHPG_QTY                &gt; 0
            AND SOD.EZCANCELFLAG          = '0'
            AND SOD.SO_NUM || SOD.SO_SLP_NUM IN
            <iterate property="soNumSlpNumList" var="soNumSlpNumList[]" open="(" close=")" conjunction=",">
                #soNumSlpNumList[]#
            </iterate>
            AND SOD.GLBL_CMPY_CD            = DSLS.GLBL_CMPY_CD
            AND SOD.DS_SO_LINE_STS_CD       = DSLS.DS_SO_LINE_STS_CD
            AND DSLS.SO_LINE_OPEN_FLG       = 'Y'
            AND DSLS.EZCANCELFLAG           = '0'
            AND SOD.GLBL_CMPY_CD            = SCM.GLBL_CMPY_CD(+)
            AND SOD.PICK_SVC_CONFIG_MSTR_PK = SCM.SVC_CONFIG_MSTR_PK(+)
            AND SCM.EZCANCELFLAG(+)         = '0'
            AND SOD.GLBL_CMPY_CD            = RW.GLBL_CMPY_CD
            AND SOD.RTL_WH_CD               = RW.RTL_WH_CD
            AND RW.EZCANCELFLAG             = '0'
            AND SOD.GLBL_CMPY_CD            = M.GLBL_CMPY_CD
            AND SOD.MDSE_CD                 = M.MDSE_CD
            AND M.EZCANCELFLAG              = '0'
            AND SOD.GLBL_CMPY_CD            = CD.GLBL_CMPY_CD(+)
            AND SOD.TRX_HDR_NUM             = CD.CPO_ORD_NUM(+)
            AND SOD.TRX_LINE_NUM            = CD.CPO_DTL_LINE_NUM(+) 
            AND SOD.TRX_LINE_SUB_NUM        = CD.CPO_DTL_LINE_SUB_NUM(+)
            AND CD.EZCANCELFLAG(+)         = '0'
            AND SOD.GLBL_CMPY_CD            = PD.GLBL_CMPY_CD(+)
            AND SOD.TRX_HDR_NUM             = PD.PO_ORD_NUM(+)
            AND SOD.TRX_LINE_NUM            = PD.PO_ORD_DTL_LINE_NUM(+)
            AND PD.EZCANCELFLAG(+)          = '0'
        )
        , SO_SER_LIST AS (
            SELECT
                SS.SO_NUM
               ,SS.SO_SLP_NUM
               ,SS.SER_NUM
               ,SS.WH_PICK_FLG
               ,SS.ORD_ASG_FLG
               ,ROW_NUMBER() OVER(PARTITION BY SS.SO_NUM, SS.SO_SLP_NUM ORDER BY SS.WH_PICK_FLG DESC, SS.ORD_ASG_FLG DESC, SS.EZUPTIME DESC, SS.EZINTIME DESC) AS ROW_NUM
            FROM
                SO_LIST SL
               ,SO_SER  SS
            WHERE
                SS.GLBL_CMPY_CD     = SL.GLBL_CMPY_CD
            AND SS.SO_NUM           = SL.SO_NUM
            AND SS.SO_SLP_NUM       = SL.SO_SLP_NUM
            AND SS.EZCANCELFLAG     = '0'
            AND SL.SER_NUM_TAKE_FLG = 'Y'
            AND NOT EXISTS (SELECT
                                1
                            FROM
                                SHIP_SER_NUM SSN
                            WHERE
                                SSN.GLBL_CMPY_CD = SS.GLBL_CMPY_CD
                            AND SSN.SO_NUM       = SS.SO_NUM
                            AND SSN.MDSE_CD      = SS.MDSE_CD
                            AND SSN.SER_NUM      = SS.SER_NUM
                            AND SSN.EZCANCELFLAG = '0'
                           )
        )
        SELECT
            SOL.GLBL_CMPY_CD
           ,SOL.SRC_ORD_NUM
           ,SOL.DPLY_LINE_NUM
           ,SOL.SRC_ORD_LINE_NUM
           ,SOL.SRC_ORD_LINE_SUB_NUM
           ,SOL.TRX_HDR_NUM
           ,SOL.TRX_LINE_NUM
           ,SOL.TRX_LINE_SUB_NUM
           ,SOL.SO_NUM
           ,SOL.SO_SLP_NUM
           ,SOL.SCE_ORD_TP_CD
           ,SOL.SHIP_FROM_RTL_WH_CD
           ,SOL.SHIP_FROM_RTL_WH_NM
           ,SOL.SHIP_FROM_RTL_SWH_CD
           ,SOL.SHIP_FROM_LOC_CD
           ,SOL.INVTY_ACCT_CD
           ,SOL.PICK_SVC_CONFIG_MSTR_PK
           ,SOL.MDL_ID
           ,SOL.MDSE_CD
           ,SOL.MDSE_DESC_SHORT_TXT
           ,SSL.SER_NUM
           ,SOL.SHPG_QTY
           ,SOL.SHIP_QTY
           ,SOL.SHPG_BAL_QTY
           ,SOL.PICK_CONF_QTY
           ,SOL.DB_PICK_QTY
           ,SOL.SO_LINE_OPEN_FLG
           ,SOL.SER_NUM_TAKE_FLG
           ,SOL.TRX_SRC_TP_CD
           ,SOL.SO_EZUPTIME
           ,SOL.SO_EZUPTIMEZONE
           ,SOL.SOD_EZUPTIME
           ,SOL.SOD_EZUPTIMEZONE
           ,SOL.SOD_EZINTIME
           ,SOL.SOD_EZINUSERID
           ,SOL.SOD_EZUPUSERID
           ,SSL.WH_PICK_FLG
           ,SSL.ORD_ASG_FLG
           ,'N' AS SHIP_FLG
           ,TO_NUMBER(SOL.SRC_ORD_LINE_NUM)     AS LINE_NUM
           ,TO_NUMBER(SOL.SRC_ORD_LINE_SUB_NUM) AS LINE_SUB_NUM
        FROM
            SO_LIST       SOL
           ,SO_SER_LIST   SSL
        WHERE
            SOL.SO_NUM           = SSL.SO_NUM
        AND SOL.SO_SLP_NUM       = SSL.SO_SLP_NUM
        AND SOL.SHPG_BAL_QTY &gt;= SSL.ROW_NUM
        AND SOL.SER_NUM_TAKE_FLG = 'Y'
        UNION
        SELECT
            SOL.GLBL_CMPY_CD
           ,SOL.SRC_ORD_NUM
           ,SOL.DPLY_LINE_NUM
           ,SOL.SRC_ORD_LINE_NUM
           ,SOL.SRC_ORD_LINE_SUB_NUM
           ,SOL.TRX_HDR_NUM
           ,SOL.TRX_LINE_NUM
           ,SOL.TRX_LINE_SUB_NUM
           ,SOL.SO_NUM
           ,SOL.SO_SLP_NUM
           ,SOL.SCE_ORD_TP_CD
           ,SOL.SHIP_FROM_RTL_WH_CD
           ,SOL.SHIP_FROM_RTL_WH_NM
           ,SOL.SHIP_FROM_RTL_SWH_CD
           ,SOL.SHIP_FROM_LOC_CD
           ,SOL.INVTY_ACCT_CD
           ,SOL.PICK_SVC_CONFIG_MSTR_PK
           ,SOL.MDL_ID
           ,SOL.MDSE_CD
           ,SOL.MDSE_DESC_SHORT_TXT
           ,NULL AS SER_NUM
           ,SOL.SHPG_QTY
           ,SOL.SHIP_QTY
           ,SOL.SHPG_BAL_QTY
           ,SOL.PICK_CONF_QTY
           ,SOL.DB_PICK_QTY
           ,SOL.SO_LINE_OPEN_FLG
           ,SOL.SER_NUM_TAKE_FLG
           ,SOL.TRX_SRC_TP_CD
           ,SOL.SO_EZUPTIME
           ,SOL.SO_EZUPTIMEZONE
           ,SOL.SOD_EZUPTIME
           ,SOL.SOD_EZUPTIMEZONE
           ,SOL.SOD_EZINTIME
           ,SOL.SOD_EZINUSERID
           ,SOL.SOD_EZUPUSERID
           ,NULL AS WH_PICK_FLG
           ,NULL AS ORD_ASG_FLG
           ,NULL AS SHIP_FLG
           ,TO_NUMBER(SOL.SRC_ORD_LINE_NUM)     AS LINE_NUM
           ,TO_NUMBER(SOL.SRC_ORD_LINE_SUB_NUM) AS LINE_SUB_NUM
        FROM
            SO_LIST SOL
        WHERE
            NOT EXISTS (SELECT
                            1
                        FROM
                            SO_SER_LIST SSL
                        WHERE
                            SOL.SO_NUM     = SSL.SO_NUM
                        AND SOL.SO_SLP_NUM = SSL.SO_SLP_NUM
                       )
        ORDER BY
             SRC_ORD_NUM
            ,LINE_NUM
            ,LINE_SUB_NUM
            ,SO_NUM
            ,SO_SLP_NUM
            ,WH_PICK_FLG DESC NULLS LAST
            ,ORD_ASG_FLG DESC NULLS LAST
            ,SHIP_FLG    DESC NULLS LAST
    </statement>

    <statement id="getSoSum" parameterClass="Map" resultClass="Map">
        SELECT
            COUNT(*)            COUNT
           ,SUM(SOD.SHPG_QTY)   SUM_ORD_QTY
        FROM
            SHPG_ORD_DTL        SOD
        WHERE
            SOD.GLBL_CMPY_CD    = #glblCmpyCd#
        AND SOD.SO_NUM          = #soNum#
        AND SOD.EZCANCELFLAG    = '0'
    </statement>

    <statement id="getCarrCdList" parameterClass="Map" resultClass="String">
        SELECT
            CARR_CD
        FROM
            OTBD_CARR_V
        WHERE
            GLBL_CMPY_CD = #glblCmpyCd#
        <isNotNull property="carrCd">
        AND CARR_CD      = #carrCd#
        </isNotNull>
        AND CARR_NM      = #carrNm#
        AND EZCANCELFLAG = '0'
    </statement>

    <statement id="getAcctCarrCnt" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
            DS_ACCT_CARR
        WHERE
            GLBL_CMPY_CD        = #glblCmpyCd#
        AND DS_ACCT_NUM         = #dsAcctNum#
        AND VND_CD              = #carrCd#
        AND DS_CARR_ACCT_NUM    = #carrAcctNum#
        AND EFF_FROM_DT     &lt;= #slsDt#
        AND (   EFF_THRU_DT &gt;= #slsDt#
             OR EFF_THRU_DT IS NULL
            )
        AND EZCANCELFLAG        = '0'
    </statement>

    <statement id="getCarrSvcLvlCdList" parameterClass="Map" resultClass="String">
        SELECT
            CARR_SVC_LVL_CD
        FROM
            SHPG_SVC_LVL_CARR_RELN
        WHERE
            GLBL_CMPY_CD    = #glblCmpyCd#
        AND SHPG_SVC_LVL_CD = #shpgSvcLvlCd#
        AND CARR_CD         = #carrCd#
        AND EZCANCELFLAG    = '0'
    </statement>

    <statement id="getRtlWhList" parameterClass="Map" resultClass="Map">
        SELECT DISTINCT
            RTL_WH_CD
           ,RTL_WH_NM
        FROM
            RTL_WH
        WHERE
            GLBL_CMPY_CD = #glblCmpyCd#
        <iterate property="whCdList" var="whCdList[]" open="AND (RTL_WH_CD LIKE " conjunction= "OR RTL_WH_CD LIKE " close=")">
            #whCdList[]#
        </iterate>
        AND ROWNUM   &lt;= 2
        AND EZCANCELFLAG = '0'
    </statement>

    <statement id="getRtlSwhList" parameterClass="Map" resultClass="Map">
        SELECT DISTINCT
            RTL_SWH_CD
           ,RTL_SWH_NM
        FROM
            SWH
        WHERE
            GLBL_CMPY_CD = #glblCmpyCd#
        <iterate property="swhCdList" var="swhCdList[]" open="AND (RTL_SWH_CD LIKE " conjunction= "OR RTL_SWH_CD LIKE " close=")">
            #swhCdList[]#
        </iterate>
        AND ROWNUM   &lt;= 2
        AND EZCANCELFLAG = '0'
    </statement>

    <statement id="getCarrList" parameterClass="Map" resultClass="Map">
        SELECT DISTINCT
            CARR_CD
           ,CARR_NM
        FROM
            OTBD_CARR_V
        WHERE
            GLBL_CMPY_CD = #glblCmpyCd#
        <iterate property="carrCdList" var="carrCdList[]" open="AND (CARR_CD LIKE " conjunction= "OR CARR_CD LIKE " close=")">
            #carrCdList[]#
        </iterate>
        AND ROWNUM   &lt;= 2
        AND EZCANCELFLAG = '0'
    </statement>

    <statement id="getMdseList" parameterClass="Map" resultClass="Map">
        SELECT DISTINCT
            MDSE_CD
           ,MDSE_DESC_SHORT_TXT
        FROM
            ALL_MDSE_V
        WHERE
            GLBL_CMPY_CD = #glblCmpyCd#
        <iterate property="mdseCdList" var="mdseCdList[]" open="AND (MDSE_CD LIKE " conjunction= "OR MDSE_CD LIKE " close=")">
            #mdseCdList[]#
        </iterate>
        AND ROWNUM   &lt;= 2
        AND EZCANCELFLAG = '0'
    </statement>

    <statement id="getShipToList" parameterClass="Map" resultClass="Map">
        SELECT
            SHIP_TO.SHIP_TO_CUST_CD     AS LOC_CD
           ,CASE WHEN LT.LOC_TP_CD = #locTpCust# THEN SELL_TO.DS_ACCT_NM
                 ELSE SHIP_TO.LOC_NM
            END                     AS LOC_NM
        FROM
            SHIP_TO_CUST SHIP_TO
           ,LOC_TP       LT
           ,SELL_TO_CUST SELL_TO
        WHERE
            SHIP_TO.GLBL_CMPY_CD    = #glblCmpyCd#
        <iterate property="shipToCdList" var="shipToCdList[]" open="AND (SHIP_TO.SHIP_TO_CUST_CD LIKE " conjunction= "OR SHIP_TO.SHIP_TO_CUST_CD LIKE " close=")">
            #shipToCdList[]#
        </iterate>
        AND SHIP_TO.EZCANCELFLAG    = '0'
        AND SHIP_TO.GLBL_CMPY_CD    = LT.GLBL_CMPY_CD
        AND SHIP_TO.LOC_GRP_CD      = LT.LOC_GRP_CD
        AND SHIP_TO.LOC_ROLE_TP_CD  = LT.LOC_ROLE_TP_CD
        AND LT.EZCANCELFLAG         = '0'
        AND SHIP_TO.GLBL_CMPY_CD    = SELL_TO.GLBL_CMPY_CD(+)
<!-- START 2019/02/26 T.Ogura [QC#30518,MOD] -->
<!--    AND SHIP_TO.SELL_TO_CUST_CD = SELL_TO.DS_ACCT_NUM(+) -->
        AND SHIP_TO.SELL_TO_CUST_CD = SELL_TO.SELL_TO_CUST_CD(+)
<!-- END   2019/02/26 T.Ogura [QC#30518,MOD] -->
        AND SELL_TO.EZCANCELFLAG(+) = '0'
        AND ROWNUM          &lt;= 2
    </statement>

    <statement id="getInvtyLocCnt" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
            RTL_SWH
        WHERE
            GLBL_CMPY_CD = #glblCmpyCd#
        <iterate property="whCdList" var="whCdList[]" open="AND (RTL_WH_CD LIKE " conjunction= "OR RTL_WH_CD LIKE " close=")">
            #whCdList[]#
        </iterate>
        <iterate property="swhCdList" var="swhCdList[]" open="AND (RTL_SWH_CD LIKE " conjunction= "OR RTL_SWH_CD LIKE " close=")">
            #swhCdList[]#
        </iterate>
        AND EZCANCELFLAG = '0'
    </statement>

    <statement id="getOrdTakeMdseList" parameterClass="Map" resultMap="result.ORD_TAKE_MDSETMsg">
        SELECT
            ORD_TAKE_MDSE_CD
        FROM
            ORD_TAKE_MDSE
        WHERE
            GLBL_CMPY_CD  = #glblCmpyCd#
        <iterate property="itemList" var="itemList[]" open="AND ORD_TAKE_MDSE_CD IN (" conjunction= ", " close=")">
            #itemList[]#
        </iterate>
        AND EZCANCELFLAG  = '0'
    </statement>

    <resultMap id="result.ORD_TAKE_MDSETMsg" class="ORD_TAKE_MDSETMsg">
        <result property="ordTakeMdseCd"   column="ORD_TAKE_MDSE_CD"  javaType="EZDCStringItem"/>
    </resultMap>

    <statement id="getSvcMachMstr" parameterClass="Map" resultClass="Map">
        SELECT
            SMM.SVC_MACH_MSTR_PK
           ,SMM.SER_NUM
           ,SMM.MDSE_CD
           ,SMM.SVC_CONFIG_MSTR_PK
           ,SMM.SVC_MACH_MSTR_STS_CD
           ,SMM.SVC_MACH_MAINT_AVAL_FLG
           ,SMM.TRX_HDR_NUM
           ,SMM.SVC_MACH_MSTR_LOC_STS_CD
           ,SMM.STK_STS_CD
           ,SMM.CUR_LOC_NUM
           ,SMM.SVC_MACH_USG_STS_CD
           ,(
                CASE
                WHEN EXISTS(
                    SELECT NULL
                    FROM SVC_CONFIG_MSTR        SCM
                    WHERE SCM.GLBL_CMPY_CD      = SMM.GLBL_CMPY_CD
                    AND SCM.SVC_CONFIG_MSTR_PK  = SMM.SVC_CONFIG_MSTR_PK
                    AND SCM.SVC_MACH_MSTR_PK    = SMM.SVC_MACH_MSTR_PK
                    AND SCM.EZCANCELFLAG        = '0'
                ) THEN 'Y'
                ELSE 'N'
                END
            ) AS MAIN_MACH_FLG
        FROM
            SVC_MACH_MSTR   SMM
        WHERE
            SMM.GLBL_CMPY_CD    = #glblCmpyCd#
        AND SMM.SER_NUM         = #serNum#
        AND SMM.MDSE_CD         = #mdseCd#
        AND SMM.SVC_MACH_MSTR_STS_CD NOT IN (#svcMachMstrStsCdTerm#, #svcMachMstrStsCdDup#)
        AND SMM.EZCANCELFLAG    = '0'
    </statement>

    <statement id="getRwsNumListBySo" parameterClass="Map" resultClass="String">
        SELECT
             RH.RWS_NUM
        FROM
             RWS_HDR RH
        WHERE
            RH.GLBL_CMPY_CD      = #glblCmpyCd#
        AND RH.TRX_ORD_NUM       = #soNum#
        AND RH.EZCANCELFLAG      = '0'
        AND EXISTS
            (
              SELECT 1
              FROM   RWS_DTL RD
                    ,RWS_STS RS
              WHERE  RD.GLBL_CMPY_CD = RH.GLBL_CMPY_CD
              AND    RD.RWS_NUM      = RH.RWS_NUM
              AND    RD.TRX_LINE_NUM = #soSlpNum#
              AND    RD.EZCANCELFLAG = '0'
              AND    RS.GLBL_CMPY_CD = RD.GLBL_CMPY_CD
              AND    RS.RWS_STS_CD   = RD.RWS_STS_CD
              AND    RS.RWS_OPEN_FLG = 'Y'
              AND    RS.EZCANCELFLAG = '0'
            )
        ORDER BY
            RWS_NUM
    </statement>

    <statement id="getConfigCmptList" parameterClass="Map" resultClass="Map">
        SELECT
               SD.SO_SLP_NUM                 SO_SLP_NUM
              ,SD.MDSE_CD                    MDSE_CD
              ,SMM.SER_NUM                   SER_NUM
              ,SO.SVC_CONFIG_MSTR_PK         SVC_CONFIG_MSTR_PK
              ,SD.PICK_SVC_CONFIG_MSTR_PK    PICK_SVC_CONFIG_MSTR_PK
              ,SD.RMV_CONFIG_FLG             RMV_CONFIG_FLG
              ,RWH.INVTY_ACCT_CD             INVTY_ACCT_CD
              ,SMM.SVC_MACH_MSTR_PK          SVC_MACH_MSTR_PK
              ,SMM.SVC_MACH_MSTR_STS_CD      SVC_MACH_MSTR_STS_CD
              ,SMM.SVC_MACH_TP_CD            SVC_MACH_TP_CD
              ,SMM.EFF_FROM_DT               EFF_FROM_DT
              ,SMM.SVC_MACH_USG_STS_CD       SVC_MACH_USG_STS_CD
              ,SMM.PRNT_SER_NUM              PRNT_SER_NUM
              ,SMM.SVC_MACH_TRX_TP_CD        SVC_MACH_TRX_TP_CD
              ,SMM.SVC_MACH_QTY              SVC_MACH_QTY
              ,SMM.CUR_LOC_NUM               CUR_LOC_NUM
              ,SMM.SVC_MACH_MSTR_LOC_STS_CD  SVC_MACH_MSTR_LOC_STS_CD
              ,SMM.SVC_MACH_MAINT_AVAL_FLG   SVC_MACH_MAINT_AVAL_FLG

        FROM
               SHPG_ORD        SO
              ,SHPG_ORD_DTL    SD
              ,SVC_MACH_MSTR   SMM
              ,RTL_WH          RWH

        WHERE SO.GLBL_CMPY_CD                 = #glblCmpyCd#
        AND   SO.SO_NUM                       = #soNum#
        AND   SO.EZCANCELFLAG                 = '0'
        AND   SD.GLBL_CMPY_CD                 = SO.GLBL_CMPY_CD
        AND   SD.SO_NUM                       = SO.SO_NUM
        AND   SD.SO_SLP_NUM                   = #soSlpNum#
        AND   SD.EZCANCELFLAG                 = '0'
        AND   SD.GLBL_CMPY_CD                 = SMM.GLBL_CMPY_CD (+)
        AND   SD.MDSE_CD                      = SMM.MDSE_CD (+)
       <isNotNull property="serNum">
        AND   SMM.SER_NUM (+)                 = #serNum#
       </isNotNull>
       <isEqual property="svcMachMaintAvalFlg" compareValue="Y">
           <isNull property="serNum">
            AND   SD.INVTY_LOC_CD                 = SMM.CUR_LOC_NUM (+)
            AND   NVL(SD.SVC_CONFIG_MSTR_PK, -1)  = NVL(SMM.SVC_CONFIG_MSTR_PK (+), -1)
            AND   SMM.SVC_MACH_MAINT_AVAL_FLG (+) = 'Y'
           </isNull>
       </isEqual>
       <isEqual property="svcMachMaintAvalFlg" compareValue="N">
           <isNull property="serNum">
            AND   SD.INVTY_LOC_CD                 = SMM.CUR_LOC_NUM (+)
            AND   SMM.SVC_MACH_MAINT_AVAL_FLG (+) = 'N'
            AND   SMM.TRX_HDR_NUM (+)             = #trxHdrNum# 
            AND   SMM.TRX_LINE_NUM (+)            = #trxLineNum#
            AND   SMM.TRX_LINE_SUB_NUM (+)        = #trxLineSubNum#
           </isNull>
       </isEqual>
       <iterate property="svcMachMstrStsCdList" var="elem[]" open="AND SMM.SVC_MACH_MSTR_STS_CD (+) IN (" close=")" conjunction=",">
           #elem[]#
       </iterate>
        AND   SMM.EZCANCELFLAG (+)            = '0'
        AND   SD.GLBL_CMPY_CD                = RWH.GLBL_CMPY_CD (+)
        AND   SD.SHIP_TO_RTL_WH_CD           = RWH.RTL_WH_CD (+)
        AND   RWH.EZCANCELFLAG (+)            = '0'
        AND   ROWNUM                          = 1
    </statement>

    <statement id="getShpgInstnCmntTxt" parameterClass="Map" resultClass="String">
        SELECT
            SO_MSG_DESC_TXT
        FROM
            SHPG_ORD_MSG
        WHERE
            GLBL_CMPY_CD = #glblCmpyCd#
        AND SO_NUM       = #soNum#
        AND SO_MSG_TP_CD = #soMsgTpCd#
        AND EZCANCELFLAG = '0'
        ORDER BY
            TXT_SQ_NUM
    </statement>

    <statement id="getBolRelnCnt" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(BR.GLBL_CMPY_CD)
        FROM
            BOL_RELN BR
        WHERE
            BR.GLBL_CMPY_CD = #glblCmpyCd#
        AND BR.CARR_CD      = #carrCd#
        AND BR.PRO_NUM      = #proNum#
        AND BR.EZCANCELFLAG = '0'
    </statement>

    <statement id="getExportPdfData" parameterClass="Map" resultClass="Map">
          SELECT NVL(CPO.CUST_ISS_PO_NUM, VND_RTRN_NUM)                         AS CUSTOMER_PO_OR_VND_RTN_NUM
                ,NVL(CPO.CUST_ISS_PO_DT, VND_RTRN_DTL_SUBMT_DT)                 AS CPO_DATE_OR_VND_RTN_DATE
                ,PT.PMT_TERM_CASH_DISC_DESC_TXT                                 AS PMT_TERM_CASH_DISC_DESC_TXT
                ,SO.SRC_ORD_NUM                                                 AS SRC_ORD_NUM
                ,CASE
                     WHEN CD.CPO_ORD_NUM IS NOT NULL
                     THEN
                         CONCAT(CD.DS_ORD_POSN_NUM, '.')
                         || CONCAT(CD.DS_CPO_LINE_NUM, DECODE(CD.DS_CPO_LINE_SUB_NUM, NULL, '', '.'))
                         || CD.DS_CPO_LINE_SUB_NUM
                     WHEN SD.PRCH_REQ_NUM IS NOT NULL
                     THEN
                         TO_CHAR(TO_NUMBER(SD.PRCH_REQ_LINE_NUM)) || '.' || TO_CHAR(SD.PRCH_REQ_LINE_SUB_NUM)
                     ELSE
                         TO_CHAR(TO_NUMBER(SD.TRX_LINE_NUM))
                 END
                                                                                AS DPLY_LINE_NUM
                ,SO.SO_NUM                                                      AS SO_NUM
                ,SD.SO_SLP_NUM                                                  AS SO_SLP_NUM
                ,SO.SCE_ORD_TP_CD                                               AS SCE_ORD_TP_CD
                ,RW.RTL_WH_NM                                                   AS SHIP_FROM_RTL_WH_NM
                ,RW.SHIP_TO_LOC_NM                                              AS SHIP_TO_LOC_NM
                ,RW.FIRST_LINE_ADDR                                             AS FIRST_LINE_ADDR
                ,RW.SCD_LINE_ADDR                                               AS SCD_LINE_ADDR
                ,RW.THIRD_LINE_ADDR                                             AS THIRD_LINE_ADDR
                ,RW.FRTH_LINE_ADDR                                              AS FRTH_LINE_ADDR
                ,RW.CTY_ADDR                                                    AS CTY_ADDR
                ,RW.ST_CD                                                       AS ST_CD
                ,RW.POST_CD                                                     AS POST_CD
                ,RW.CTRY_CD                                                     AS CTRY_CD
                ,RW.TEL_NUM                                                     AS TEL_NUM
                ,SD.MDSE_CD                                                     AS MDSE_CD
                ,M.MDSE_DESC_SHORT_TXT                                          AS MDSE_DESC_SHORT_TXT
                ,SD.SHPG_QTY                                                    AS SHPG_QTY
                ,NVL(MSP.BASE_PKG_UOM_CD, SP.CUST_UOM_CD)                       AS DPLY_PKG_UOM_CD
                ,SP.SP_DEAL_UNIT_PRC_AMT                                        AS SP_DEAL_UNIT_PRC_AMT
                ,SP.SP_TOT_DEAL_SLS_AMT                                         AS SP_TOT_DEAL_SLS_AMT
                ,SO.RDD_DT                                                      AS RDD_DT
                ,OSSL.SHPG_SVC_LVL_DESC_TXT                                     AS SHPG_SVC_LVL_DESC_TXT
                ,SO.SO_CRAT_TS                                                  AS SO_CRAT_TS
                ,NVL(OV.LOC_NM, SP.CARR_NM)                                     AS CARR_NM
                ,NVL(SO.CARR_CD, SP.CARR_CD)                                    AS CARR_CD
                ,SO.SHIP_TO_CUST_ACCT_CD                                        AS SHIP_TO_CUST_ACCT_CD
                ,SD.TO_INVTY_LOC_CD                                             AS SHIP_TO_LOC_CD
                ,SOCD.SO_CUST_LINE_LOC_NM_01                                    AS SHIP_SO_CUST_LINE_LOC_NM_01
                ,SOCD.SO_CUST_LINE_LOC_NM_02                                    AS SHIP_SO_CUST_LINE_LOC_NM_02
                ,SOCD.CTAC_PTNR_PSN_NM                                          AS SHIP_TO_CTAC_PSN_NM
                ,SOCD.SO_CUST_LINE_ADDR_01                                      AS SHIP_SO_CUST_LINE_ADDR_01
                ,SOCD.SO_CUST_LINE_ADDR_02                                      AS SHIP_SO_CUST_LINE_ADDR_02
                ,SOCD.SO_CUST_LINE_ADDR_03                                      AS SHIP_SO_CUST_LINE_ADDR_03
                ,SOCD.SO_CUST_LINE_ADDR_04                                      AS SHIP_SO_CUST_LINE_ADDR_04
                ,SOCD.CTY_ADDR                                                  AS SHIP_TO_CTY_ADDR
                ,SOCD.ST_CD                                                     AS SHIP_TO_ST_CD
                ,SOCD.POST_CD                                                   AS SHIP_TO_POST_CD
                ,SOCD1.SO_CUST_LINE_LOC_NM_01                                   AS BILL_SO_CUST_LINE_LOC_NM_01
                ,SOCD1.SO_CUST_LINE_LOC_NM_02                                   AS BILL_SO_CUST_LINE_LOC_NM_02
                ,SOCD1.CTAC_PTNR_PSN_NM                                         AS BILL_TO_CTAC_PSN_NM
                ,SOCD1.SO_CUST_LINE_ADDR_01                                     AS BILL_SO_CUST_LINE_ADDR_01
                ,SOCD1.SO_CUST_LINE_ADDR_02                                     AS BILL_SO_CUST_LINE_ADDR_02
                ,SOCD1.SO_CUST_LINE_ADDR_03                                     AS BILL_SO_CUST_LINE_ADDR_03
                ,SOCD1.SO_CUST_LINE_ADDR_04                                     AS BILL_SO_CUST_LINE_ADDR_04
                ,SOCD1.CTY_ADDR                                                 AS BILL_TO_CTY_ADDR
                ,SOCD1.ST_CD                                                    AS BILL_TO_ST_CD
                ,SOCD1.POST_CD                                                  AS BILL_TO_POST_CD
                ,SD.INVTY_LOC_CD                                                AS SHIP_FROM_LOC_CD
                ,MSP.IN_POUND_WT                                                AS EACH_POUND_WT
                ,MSP.IN_POUND_WT * SD.SHPG_QTY                                  AS LINE_POUND_WT
                ,ROUND(MSP.IN_POUND_WT * SD.SHPG_QTY * #poundToKg#, #scaleFactor#)  AS LINE_KG_WT
                ,DECODE(M.TRF_CD, 'DUMMY', NULL, M.TRF_CD)                      AS TRF_CD
                ,MSI.MADE_IN_CTRY_CD                                            AS MADE_IN_CTRY_CD
                ,CM.CTRY_NM                                                     AS MADE_IN_CTRY_NM
                ,SO_SER.SER_NUM                                                 AS SER_NUM
                ,CTRY.CTRY_NM                                                   AS SHIP_TO_CTRY_NM
                ,CTRY1.CTRY_NM                                                  AS BILL_TO_CTRY_NM
                ,FC.FRT_COND_DESC_TXT                                           AS FRT_COND_DESC_TXT
                ,SOC.SHIP_DT_TM_TS                                              AS SO_CONF_DATE
                ,M.MNF_ITEM_CD                                                  AS MNF_ITEM_CD
                ,SOCDTL.TOT_SHIP_WT                                             AS LINE_GRS_WT
                ,SP.PRO_NUM                                                     AS PRO_NUM
            FROM 
                 SHPG_ORD SO
                ,SHPG_ORD_CUST_DTL SOCD
                ,SHPG_ORD_CUST_DTL SOCD1
                ,CTRY CTRY
                ,CTRY CTRY1
                ,SHPG_ORD_CONF SOC
                ,SHPG_ORD_CONF_DTL SOCDTL
                ,FRT_COND FC
                ,SHPG_ORD_DTL SD
                ,RTL_WH RW
                ,CPO_DTL CD
                ,CPO CPO
                ,MDSE M
                ,VND OV
                ,SHPG_SVC_LVL OSSL
                ,SHPG_PLN SP
                ,MDSE_STORE_PKG MSP
                ,PMT_TERM_CASH_DISC PT
                ,MDSE_SFTY_INFO MSI
                ,CTRY CM
                ,CTRY CA
                ,SO_SER
                ,VND_RTRN_DTL VND_RD
           WHERE
                 SO.GLBL_CMPY_CD = #glblCmpyCd#
             AND SO.SO_NUM = #soNum#
             AND SO.EZCANCELFLAG = '0'
             AND SO.SCE_ORD_TP_CD IN (#ReturnToVendor#, #DirectSales#)
             AND SO.GLBL_CMPY_CD = CPO.GLBL_CMPY_CD(+)
             AND SO.SRC_ORD_NUM = CPO.CPO_ORD_NUM(+)
             AND CPO.EZCANCELFLAG(+) = '0'
             AND SO.GLBL_CMPY_CD = SOC.GLBL_CMPY_CD(+)
             AND SO.SO_NUM = SOC.SO_NUM(+)
             AND SOC.EZCANCELFLAG(+) = '0'
             AND SP.GLBL_CMPY_CD = PT.GLBL_CMPY_CD(+)
             AND SP.PMT_TERM_CASH_DISC_CD = PT.PMT_TERM_CASH_DISC_CD(+)
             AND PT.EZCANCELFLAG(+) = '0'
             AND SO.GLBL_CMPY_CD = SOCD.GLBL_CMPY_CD(+)
             AND SO.SO_NUM = SOCD.SO_NUM(+)
             AND SOCD.SO_CUST_DATA_TP_CD(+) = #shipTo#
             AND SOCD.EZCANCELFLAG(+) = '0'
             AND SO.GLBL_CMPY_CD = SOCD1.GLBL_CMPY_CD(+)
             AND SO.SO_NUM = SOCD1.SO_NUM(+)
             AND SOCD.GLBL_CMPY_CD = CTRY.GLBL_CMPY_CD(+)
             AND SOCD.CTRY_CD = CTRY.CTRY_CD(+)
             AND CTRY.EZCANCELFLAG(+) = '0'
             AND CPO.GLBL_CMPY_CD = FC.GLBL_CMPY_CD(+)
             AND CPO.FRT_COND_CD = FC.FRT_COND_CD(+)
             AND FC.EZCANCELFLAG(+) = '0'
             AND SOCD1.GLBL_CMPY_CD = CTRY1.GLBL_CMPY_CD(+)
             AND SOCD1.CTRY_CD = CTRY1.CTRY_CD(+)
             AND CTRY1.EZCANCELFLAG(+) = '0'
             AND SOCD1.SO_CUST_DATA_TP_CD(+) = #billTo#
             AND SOCD1.EZCANCELFLAG(+) = '0'
             AND SO.GLBL_CMPY_CD = SD.GLBL_CMPY_CD
             AND SO.SO_NUM = SD.SO_NUM
             AND SD.EZCANCELFLAG = '0'
             AND SD.GLBL_CMPY_CD = VND_RD.GLBL_CMPY_CD(+)
             AND SD.TRX_HDR_NUM = VND_RD.VND_RTRN_NUM(+)
             AND SD.TRX_LINE_NUM = VND_RD.TRX_LINE_NUM(+)
             AND SD.TRX_LINE_SUB_NUM = VND_RD.TRX_LINE_SUB_NUM(+)
             AND VND_RD.EZCANCELFLAG(+) = '0'
             AND SD.GLBL_CMPY_CD = SOCDTL.GLBL_CMPY_CD(+)
             AND SD.SO_NUM = SOCDTL.SO_NUM(+)
             AND SD.SO_SLP_NUM = SOCDTL.SO_SLP_NUM(+)
             AND SOCDTL.EZCANCELFLAG(+) = '0'
             AND SD.GLBL_CMPY_CD = RW.GLBL_CMPY_CD
             AND SD.RTL_WH_CD = RW.RTL_WH_CD
             AND SD.GLBL_CMPY_CD = SO_SER.GLBL_CMPY_CD(+)
             AND SD.SO_NUM = SO_SER.SO_NUM(+)
             AND SD.SO_SLP_NUM = SO_SER.SO_SLP_NUM(+)
             AND SD.EZCANCELFLAG(+) = '0'
             AND RW.EZCANCELFLAG = '0'
             AND SD.GLBL_CMPY_CD = CD.GLBL_CMPY_CD(+)
             AND SD.TRX_HDR_NUM = CD.CPO_ORD_NUM(+)
             AND SD.TRX_LINE_NUM = CD.CPO_DTL_LINE_NUM(+)
             AND SD.TRX_LINE_SUB_NUM = CD.CPO_DTL_LINE_SUB_NUM(+)
             AND CD.EZCANCELFLAG(+) = '0'
             AND SD.GLBL_CMPY_CD = M.GLBL_CMPY_CD
             AND SD.MDSE_CD = M.MDSE_CD
             AND M.EZCANCELFLAG = '0'
             AND SO.GLBL_CMPY_CD = OV.GLBL_CMPY_CD(+)
             AND SO.CARR_CD = OV.VND_CD(+)
             AND OV.EZCANCELFLAG(+) = '0'
             AND SO.GLBL_CMPY_CD = OSSL.GLBL_CMPY_CD(+)
             AND SO.SHPG_SVC_LVL_CD = OSSL.SHPG_SVC_LVL_CD(+)
             AND OSSL.EZCANCELFLAG(+) = '0'
             AND SD.GLBL_CMPY_CD = SP.GLBL_CMPY_CD(+)
             AND SD.SHPG_PLN_NUM = SP.SHPG_PLN_NUM(+)
             AND SP.EZCANCELFLAG(+) = '0'
             AND SP.GLBL_CMPY_CD = MSP.GLBL_CMPY_CD(+)
             AND SP.CUST_UOM_CD = MSP.PKG_UOM_CD(+)
             AND SP.MDSE_CD = MSP.MDSE_CD(+)
             AND MSP.EZCANCELFLAG(+) = '0'
             AND MSI.EZCANCELFLAG(+) = '0'
             AND M.GLBL_CMPY_CD = MSI.GLBL_CMPY_CD(+)
             AND M.MDSE_CD = MSI.MDSE_CD(+)
             AND CM.EZCANCELFLAG(+) = '0'
             AND MSI.GLBL_CMPY_CD = CM.GLBL_CMPY_CD(+)
             AND MSI.MADE_IN_CTRY_CD = CM.CTRY_CD(+)
             AND CA.EZCANCELFLAG(+) = '0'
             AND MSI.GLBL_CMPY_CD = CA.GLBL_CMPY_CD(+)
             AND MSI.ASM_IN_CTRY_CD = CA.CTRY_CD(+)
        ORDER BY SRC_ORD_NUM
                ,TO_NUMBER(REGEXP_SUBSTR(DPLY_LINE_NUM, #regexNum#))
                ,SER_NUM
    </statement>
</sqlMap>