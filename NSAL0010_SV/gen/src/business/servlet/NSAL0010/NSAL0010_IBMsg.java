//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20231031100058000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0010_IBMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NSAL0010;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL0010 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL0010_IBMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** SVC_MACH_MSTR_TRK_PK_I*/
	public final EZDBBigDecimalItem              svcMachMstrTrkPk_I;

    /** TRX_RGTN_DT_I*/
	public final EZDBDateItem              trxRgtnDt_I;

    /** MACH_HIST_ATTRB_LONG_NM_I*/
	public final EZDBStringItem              machHistAttrbLongNm_I;

    /** OLD_VAL_TXT_I*/
	public final EZDBStringItem              oldValTxt_I;

    /** NEW_VAL_TXT_I*/
	public final EZDBStringItem              newValTxt_I;

    /** UPD_USR_ID_I*/
	public final EZDBStringItem              updUsrId_I;

    /** XX_YES_NO_CD_IA*/
	public final EZDBStringItem              xxYesNoCd_IA;

    /** XX_YES_NO_CD_I*/
	public final EZDBStringItem              xxYesNoCd_I;


	/**
	 * NSAL0010_IBMsg is constructor.
	 * The initialization when the instance of NSAL0010_IBMsg is generated.
	 */
	public NSAL0010_IBMsg() {
		this(false, -1);
	}

	/**
	 * NSAL0010_IBMsg is constructor.
	 * The initialization when the instance of NSAL0010_IBMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL0010_IBMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		svcMachMstrTrkPk_I = (EZDBBigDecimalItem)newItem("svcMachMstrTrkPk_I");
		trxRgtnDt_I = (EZDBDateItem)newItem("trxRgtnDt_I");
		machHistAttrbLongNm_I = (EZDBStringItem)newItem("machHistAttrbLongNm_I");
		oldValTxt_I = (EZDBStringItem)newItem("oldValTxt_I");
		newValTxt_I = (EZDBStringItem)newItem("newValTxt_I");
		updUsrId_I = (EZDBStringItem)newItem("updUsrId_I");
		xxYesNoCd_IA = (EZDBStringItem)newItem("xxYesNoCd_IA");
		xxYesNoCd_I = (EZDBStringItem)newItem("xxYesNoCd_I");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL0010_IBMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL0010_IBMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"svcMachMstrTrkPk_I", "svcMachMstrTrkPk_I", "I", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"trxRgtnDt_I", "trxRgtnDt_I", "I", null, TYPE_NENTSUKIHI, "8", null},
	{"machHistAttrbLongNm_I", "machHistAttrbLongNm_I", "I", null, TYPE_HANKAKUEISU, "200", null},
	{"oldValTxt_I", "oldValTxt_I", "I", null, TYPE_HANKAKUEISU, "300", null},
	{"newValTxt_I", "newValTxt_I", "I", null, TYPE_HANKAKUEISU, "300", null},
	{"updUsrId_I", "updUsrId_I", "I", null, TYPE_HANKAKUEISU, "16", null},
	{"xxYesNoCd_IA", "xxYesNoCd_IA", "IA", null, TYPE_HANKAKUEISU, "1", null},
	{"xxYesNoCd_I", "xxYesNoCd_I", "I", null, TYPE_HANKAKUEISU, "1", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"SVC_MACH_MSTR_TRK_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachMstrTrkPk_I
        {"TRX_RGTN_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//trxRgtnDt_I
        {"MACH_HIST_ATTRB_LONG_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//machHistAttrbLongNm_I
        {"OLD_VAL_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//oldValTxt_I
        {"NEW_VAL_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//newValTxt_I
        {"UPD_USR_ID",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//updUsrId_I
        {"XX_YES_NO_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxYesNoCd_IA
        {"XX_YES_NO_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxYesNoCd_I
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

