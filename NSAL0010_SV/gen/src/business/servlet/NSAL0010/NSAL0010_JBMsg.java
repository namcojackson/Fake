//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20231031100058000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0010_JBMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NSAL0010;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL0010 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL0010_JBMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** DS_CONTR_NUM_JA*/
	public final EZDBStringItem              dsContrNum_JA;

    /** DS_CONTR_NUM_J*/
	public final EZDBStringItem              dsContrNum_J;

    /** DS_CONTR_PK_J*/
	public final EZDBBigDecimalItem              dsContrPk_J;

    /** DS_CONTR_CTRL_STS_NM_J*/
	public final EZDBStringItem              dsContrCtrlStsNm_J;

    /** CONTR_EFF_FROM_DT_J*/
	public final EZDBDateItem              contrEffFromDt_J;

    /** CONTR_EFF_THRU_DT_J*/
	public final EZDBDateItem              contrEffThruDt_J;

    /** DS_CONTR_CATG_DESC_TXT_J*/
	public final EZDBStringItem              dsContrCatgDescTxt_J;

    /** XX_CHK_BOX_J*/
	public final EZDBStringItem              xxChkBox_J;

    /** BLLG_CYCLE_DESC_TXT_J*/
	public final EZDBStringItem              bllgCycleDescTxt_J;

    /** MTR_READ_METH_DESC_TXT_J*/
	public final EZDBStringItem              mtrReadMethDescTxt_J;

    /** SVC_CONTR_REF_CMNT_TXT_J*/
	public final EZDBStringItem              svcContrRefCmntTxt_J;

    /** SVC_CONTR_BR_DESC_TXT_J*/
	public final EZDBStringItem              svcContrBrDescTxt_J;


	/**
	 * NSAL0010_JBMsg is constructor.
	 * The initialization when the instance of NSAL0010_JBMsg is generated.
	 */
	public NSAL0010_JBMsg() {
		this(false, -1);
	}

	/**
	 * NSAL0010_JBMsg is constructor.
	 * The initialization when the instance of NSAL0010_JBMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL0010_JBMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		dsContrNum_JA = (EZDBStringItem)newItem("dsContrNum_JA");
		dsContrNum_J = (EZDBStringItem)newItem("dsContrNum_J");
		dsContrPk_J = (EZDBBigDecimalItem)newItem("dsContrPk_J");
		dsContrCtrlStsNm_J = (EZDBStringItem)newItem("dsContrCtrlStsNm_J");
		contrEffFromDt_J = (EZDBDateItem)newItem("contrEffFromDt_J");
		contrEffThruDt_J = (EZDBDateItem)newItem("contrEffThruDt_J");
		dsContrCatgDescTxt_J = (EZDBStringItem)newItem("dsContrCatgDescTxt_J");
		xxChkBox_J = (EZDBStringItem)newItem("xxChkBox_J");
		bllgCycleDescTxt_J = (EZDBStringItem)newItem("bllgCycleDescTxt_J");
		mtrReadMethDescTxt_J = (EZDBStringItem)newItem("mtrReadMethDescTxt_J");
		svcContrRefCmntTxt_J = (EZDBStringItem)newItem("svcContrRefCmntTxt_J");
		svcContrBrDescTxt_J = (EZDBStringItem)newItem("svcContrBrDescTxt_J");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL0010_JBMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL0010_JBMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"dsContrNum_JA", "dsContrNum_JA", "JA", null, TYPE_HANKAKUEISU, "30", null},
	{"dsContrNum_J", "dsContrNum_J", "J", null, TYPE_HANKAKUEISU, "30", null},
	{"dsContrPk_J", "dsContrPk_J", "J", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrCtrlStsNm_J", "dsContrCtrlStsNm_J", "J", null, TYPE_HANKAKUEISU, "50", null},
	{"contrEffFromDt_J", "contrEffFromDt_J", "J", null, TYPE_NENTSUKIHI, "8", null},
	{"contrEffThruDt_J", "contrEffThruDt_J", "J", null, TYPE_NENTSUKIHI, "8", null},
	{"dsContrCatgDescTxt_J", "dsContrCatgDescTxt_J", "J", null, TYPE_HANKAKUEISU, "50", null},
	{"xxChkBox_J", "xxChkBox_J", "J", null, TYPE_HANKAKUEIJI, "1", null},
	{"bllgCycleDescTxt_J", "bllgCycleDescTxt_J", "J", null, TYPE_HANKAKUEISU, "50", null},
	{"mtrReadMethDescTxt_J", "mtrReadMethDescTxt_J", "J", null, TYPE_HANKAKUEISU, "50", null},
	{"svcContrRefCmntTxt_J", "svcContrRefCmntTxt_J", "J", null, TYPE_HANKAKUEISU, "90", null},
	{"svcContrBrDescTxt_J", "svcContrBrDescTxt_J", "J", null, TYPE_HANKAKUEISU, "50", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"DS_CONTR_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrNum_JA
        {"DS_CONTR_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrNum_J
        {"DS_CONTR_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrPk_J
        {"DS_CONTR_CTRL_STS_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrCtrlStsNm_J
        {"CONTR_EFF_FROM_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//contrEffFromDt_J
        {"CONTR_EFF_THRU_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//contrEffThruDt_J
        {"DS_CONTR_CATG_DESC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrCatgDescTxt_J
        {"XX_CHK_BOX",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_J
        {"BLLG_CYCLE_DESC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgCycleDescTxt_J
        {"MTR_READ_METH_DESC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrReadMethDescTxt_J
        {"SVC_CONTR_REF_CMNT_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcContrRefCmntTxt_J
        {"SVC_CONTR_BR_DESC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcContrBrDescTxt_J
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

