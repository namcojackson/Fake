//This file was automatically generated by Common Business Component Interface Definition Document and XLA200710010.
// Generated on    :20171220134113000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :CommonBusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NWZC036101PMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.parts;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NWZC036101 Common Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NWZC036101PMsg extends EZDPMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** GLBL_CMPY_CD*/
	public final EZDPStringItem              glblCmpyCd;

    /** SLS_DT*/
	public final EZDPDateItem              slsDt;

    /** XX_MODE_CD*/
	public final EZDPStringItem              xxModeCd;

    /** DS_ACCT_NUM_SE*/
	public final EZDPStringItem              dsAcctNum_SE;

    /** BILL_TO_ACCT_NUM*/
	public final EZDPStringItem              billToAcctNum;

    /** BILL_TO_LOC_NUM*/
	public final EZDPStringItem              billToLocNum;

    /** DS_TAX_GRP_EXEM_CD_B*/
	public final EZDPStringItem              dsTaxGrpExemCd_B;

    /** DS_TAX_GRP_EXEM_RESL_FLG_B*/
	public final EZDPStringItem              dsTaxGrpExemReslFlg_B;

    /** DS_ACCT_NUM_ST*/
	public final EZDPStringItem              dsAcctNum_ST;

    /** SHIP_TO_LOC_NUM*/
	public final EZDPStringItem              shipToLocNum;

    /** DS_TAX_GRP_EXEM_CD_ST*/
	public final EZDPStringItem              dsTaxGrpExemCd_ST;

    /** TAX_CALC_FLG*/
	public final EZDPStringItem              taxCalcFlg;

    /** TAX_EXEM_FLG*/
	public final EZDPStringItem              taxExemFlg;

    /** TAX_EXEM_RSN_CD*/
	public final EZDPStringItem              taxExemRsnCd;

    /** LEASE_PRCH_OPT_CD*/
	public final EZDPStringItem              leasePrchOptCd;

    /** TRX_DT*/
	public final EZDPDateItem              trxDt;

    /** XX_TAX_CALC_HDR_NUM*/
	public final EZDPStringItem              xxTaxCalcHdrNum;

    /** GEO_CD_ST*/
	public final EZDPStringItem              geoCd_ST;

    /** DS_INSD_CTY_LIMIT_FLG_ST*/
	public final EZDPStringItem              dsInsdCtyLimitFlg_ST;

    /** TAX_AREA_ID_ST*/
	public final EZDPStringItem              taxAreaId_ST;

    /** FIRST_LINE_ADDR_ST*/
	public final EZDPStringItem              firstLineAddr_ST;

    /** SCD_LINE_ADDR_ST*/
	public final EZDPStringItem              scdLineAddr_ST;

    /** CTY_ADDR_ST*/
	public final EZDPStringItem              ctyAddr_ST;

    /** ST_CD_ST*/
	public final EZDPStringItem              stCd_ST;

    /** CNTY_NM_ST*/
	public final EZDPStringItem              cntyNm_ST;

    /** POST_CD_ST*/
	public final EZDPStringItem              postCd_ST;

    /** CTRY_CD_ST*/
	public final EZDPStringItem              ctryCd_ST;

    /** GEO_CD_SR*/
	public final EZDPStringItem              geoCd_SR;

    /** DS_INSD_CTY_LIMIT_FLG_SR*/
	public final EZDPStringItem              dsInsdCtyLimitFlg_SR;

    /** FIRST_LINE_ADDR_SR*/
	public final EZDPStringItem              firstLineAddr_SR;

    /** SCD_LINE_ADDR_SR*/
	public final EZDPStringItem              scdLineAddr_SR;

    /** CTY_ADDR_SR*/
	public final EZDPStringItem              ctyAddr_SR;

    /** ST_CD_SR*/
	public final EZDPStringItem              stCd_SR;

    /** CNTY_NM_SR*/
	public final EZDPStringItem              cntyNm_SR;

    /** POST_CD_SR*/
	public final EZDPStringItem              postCd_SR;

    /** CTRY_CD_SR*/
	public final EZDPStringItem              ctryCd_SR;

    /** GEO_CD_SF*/
	public final EZDPStringItem              geoCd_SF;

    /** WH_CD_SF*/
	public final EZDPStringItem              whCd_SF;

    /** FIRST_LINE_ADDR_SF*/
	public final EZDPStringItem              firstLineAddr_SF;

    /** SCD_LINE_ADDR_SF*/
	public final EZDPStringItem              scdLineAddr_SF;

    /** CTY_ADDR_SF*/
	public final EZDPStringItem              ctyAddr_SF;

    /** ST_CD_SF*/
	public final EZDPStringItem              stCd_SF;

    /** CNTY_NM_SF*/
	public final EZDPStringItem              cntyNm_SF;

    /** POST_CD_SF*/
	public final EZDPStringItem              postCd_SF;

    /** CTRY_CD_SF*/
	public final EZDPStringItem              ctryCd_SF;

    /** INV_TP_CD*/
	public final EZDPStringItem              invTpCd;

    /** taxCalculateInputLine*/
	public final business.parts.NWZC036101_taxCalculateInputLinePMsgArray              taxCalculateInputLine;

    /** taxCalculateOutputLine*/
	public final business.parts.NWZC036101_taxCalculateOutputLinePMsgArray              taxCalculateOutputLine;

    /** xxMsgIdList*/
	public final business.parts.NWZC036101_xxMsgIdListPMsgArray              xxMsgIdList;


	/**
	 * NWZC036101PMsg is constructor.
	 * The initialization when the instance of NWZC036101PMsg is generated.
	 */
	public NWZC036101PMsg() {
		this(false, -1);
	}

	/**
	 * NWZC036101PMsg is constructor.
	 * The initialization when the instance of NWZC036101PMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NWZC036101PMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		glblCmpyCd = (EZDPStringItem)newItem("glblCmpyCd");
		slsDt = (EZDPDateItem)newItem("slsDt");
		xxModeCd = (EZDPStringItem)newItem("xxModeCd");
		dsAcctNum_SE = (EZDPStringItem)newItem("dsAcctNum_SE");
		billToAcctNum = (EZDPStringItem)newItem("billToAcctNum");
		billToLocNum = (EZDPStringItem)newItem("billToLocNum");
		dsTaxGrpExemCd_B = (EZDPStringItem)newItem("dsTaxGrpExemCd_B");
		dsTaxGrpExemReslFlg_B = (EZDPStringItem)newItem("dsTaxGrpExemReslFlg_B");
		dsAcctNum_ST = (EZDPStringItem)newItem("dsAcctNum_ST");
		shipToLocNum = (EZDPStringItem)newItem("shipToLocNum");
		dsTaxGrpExemCd_ST = (EZDPStringItem)newItem("dsTaxGrpExemCd_ST");
		taxCalcFlg = (EZDPStringItem)newItem("taxCalcFlg");
		taxExemFlg = (EZDPStringItem)newItem("taxExemFlg");
		taxExemRsnCd = (EZDPStringItem)newItem("taxExemRsnCd");
		leasePrchOptCd = (EZDPStringItem)newItem("leasePrchOptCd");
		trxDt = (EZDPDateItem)newItem("trxDt");
		xxTaxCalcHdrNum = (EZDPStringItem)newItem("xxTaxCalcHdrNum");
		geoCd_ST = (EZDPStringItem)newItem("geoCd_ST");
		dsInsdCtyLimitFlg_ST = (EZDPStringItem)newItem("dsInsdCtyLimitFlg_ST");
		taxAreaId_ST = (EZDPStringItem)newItem("taxAreaId_ST");
		firstLineAddr_ST = (EZDPStringItem)newItem("firstLineAddr_ST");
		scdLineAddr_ST = (EZDPStringItem)newItem("scdLineAddr_ST");
		ctyAddr_ST = (EZDPStringItem)newItem("ctyAddr_ST");
		stCd_ST = (EZDPStringItem)newItem("stCd_ST");
		cntyNm_ST = (EZDPStringItem)newItem("cntyNm_ST");
		postCd_ST = (EZDPStringItem)newItem("postCd_ST");
		ctryCd_ST = (EZDPStringItem)newItem("ctryCd_ST");
		geoCd_SR = (EZDPStringItem)newItem("geoCd_SR");
		dsInsdCtyLimitFlg_SR = (EZDPStringItem)newItem("dsInsdCtyLimitFlg_SR");
		firstLineAddr_SR = (EZDPStringItem)newItem("firstLineAddr_SR");
		scdLineAddr_SR = (EZDPStringItem)newItem("scdLineAddr_SR");
		ctyAddr_SR = (EZDPStringItem)newItem("ctyAddr_SR");
		stCd_SR = (EZDPStringItem)newItem("stCd_SR");
		cntyNm_SR = (EZDPStringItem)newItem("cntyNm_SR");
		postCd_SR = (EZDPStringItem)newItem("postCd_SR");
		ctryCd_SR = (EZDPStringItem)newItem("ctryCd_SR");
		geoCd_SF = (EZDPStringItem)newItem("geoCd_SF");
		whCd_SF = (EZDPStringItem)newItem("whCd_SF");
		firstLineAddr_SF = (EZDPStringItem)newItem("firstLineAddr_SF");
		scdLineAddr_SF = (EZDPStringItem)newItem("scdLineAddr_SF");
		ctyAddr_SF = (EZDPStringItem)newItem("ctyAddr_SF");
		stCd_SF = (EZDPStringItem)newItem("stCd_SF");
		cntyNm_SF = (EZDPStringItem)newItem("cntyNm_SF");
		postCd_SF = (EZDPStringItem)newItem("postCd_SF");
		ctryCd_SF = (EZDPStringItem)newItem("ctryCd_SF");
		invTpCd = (EZDPStringItem)newItem("invTpCd");
		taxCalculateInputLine = (business.parts.NWZC036101_taxCalculateInputLinePMsgArray)newMsgArray("taxCalculateInputLine");
		taxCalculateOutputLine = (business.parts.NWZC036101_taxCalculateOutputLinePMsgArray)newMsgArray("taxCalculateOutputLine");
		xxMsgIdList = (business.parts.NWZC036101_xxMsgIdListPMsgArray)newMsgArray("xxMsgIdList");
	}

	/**
	 * get the type of array which is stored
	 * @return NWZC036101PMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NWZC036101PMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"glblCmpyCd", "glblCmpyCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"slsDt", "slsDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"xxModeCd", "xxModeCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"dsAcctNum_SE", "dsAcctNum_SE", "SE", null, TYPE_HANKAKUEISU, "20", null},
	{"billToAcctNum", "billToAcctNum", null, null, TYPE_HANKAKUEISU, "20", null},
	{"billToLocNum", "billToLocNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"dsTaxGrpExemCd_B", "dsTaxGrpExemCd_B", "B", null, TYPE_HANKAKUEISU, "60", null},
	{"dsTaxGrpExemReslFlg_B", "dsTaxGrpExemReslFlg_B", "B", null, TYPE_HANKAKUEISU, "1", null},
	{"dsAcctNum_ST", "dsAcctNum_ST", "ST", null, TYPE_HANKAKUEISU, "20", null},
	{"shipToLocNum", "shipToLocNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"dsTaxGrpExemCd_ST", "dsTaxGrpExemCd_ST", "ST", null, TYPE_HANKAKUEISU, "60", null},
	{"taxCalcFlg", "taxCalcFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"taxExemFlg", "taxExemFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"taxExemRsnCd", "taxExemRsnCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"leasePrchOptCd", "leasePrchOptCd", null, null, TYPE_HANKAKUEISU, "10", null},
	{"trxDt", "trxDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"xxTaxCalcHdrNum", "xxTaxCalcHdrNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"geoCd_ST", "geoCd_ST", "ST", null, TYPE_HANKAKUEISU, "9", null},
	{"dsInsdCtyLimitFlg_ST", "dsInsdCtyLimitFlg_ST", "ST", null, TYPE_HANKAKUEISU, "1", null},
	{"taxAreaId_ST", "taxAreaId_ST", "ST", null, TYPE_HANKAKUEISU, "9", null},
	{"firstLineAddr_ST", "firstLineAddr_ST", "ST", null, TYPE_HANKAKUEISU, "60", null},
	{"scdLineAddr_ST", "scdLineAddr_ST", "ST", null, TYPE_HANKAKUEISU, "60", null},
	{"ctyAddr_ST", "ctyAddr_ST", "ST", null, TYPE_HANKAKUEISU, "25", null},
	{"stCd_ST", "stCd_ST", "ST", null, TYPE_HANKAKUEISU, "2", null},
	{"cntyNm_ST", "cntyNm_ST", "ST", null, TYPE_HANKAKUEISU, "30", null},
	{"postCd_ST", "postCd_ST", "ST", null, TYPE_HANKAKUEISU, "15", null},
	{"ctryCd_ST", "ctryCd_ST", "ST", null, TYPE_HANKAKUEISU, "3", null},
	{"geoCd_SR", "geoCd_SR", "SR", null, TYPE_HANKAKUEISU, "9", null},
	{"dsInsdCtyLimitFlg_SR", "dsInsdCtyLimitFlg_SR", "SR", null, TYPE_HANKAKUEISU, "1", null},
	{"firstLineAddr_SR", "firstLineAddr_SR", "SR", null, TYPE_HANKAKUEISU, "60", null},
	{"scdLineAddr_SR", "scdLineAddr_SR", "SR", null, TYPE_HANKAKUEISU, "60", null},
	{"ctyAddr_SR", "ctyAddr_SR", "SR", null, TYPE_HANKAKUEISU, "25", null},
	{"stCd_SR", "stCd_SR", "SR", null, TYPE_HANKAKUEISU, "2", null},
	{"cntyNm_SR", "cntyNm_SR", "SR", null, TYPE_HANKAKUEISU, "30", null},
	{"postCd_SR", "postCd_SR", "SR", null, TYPE_HANKAKUEISU, "15", null},
	{"ctryCd_SR", "ctryCd_SR", "SR", null, TYPE_HANKAKUEISU, "3", null},
	{"geoCd_SF", "geoCd_SF", "SF", null, TYPE_HANKAKUEISU, "9", null},
	{"whCd_SF", "whCd_SF", "SF", null, TYPE_HANKAKUEISU, "20", null},
	{"firstLineAddr_SF", "firstLineAddr_SF", "SF", null, TYPE_HANKAKUEISU, "60", null},
	{"scdLineAddr_SF", "scdLineAddr_SF", "SF", null, TYPE_HANKAKUEISU, "60", null},
	{"ctyAddr_SF", "ctyAddr_SF", "SF", null, TYPE_HANKAKUEISU, "25", null},
	{"stCd_SF", "stCd_SF", "SF", null, TYPE_HANKAKUEISU, "2", null},
	{"cntyNm_SF", "cntyNm_SF", "SF", null, TYPE_HANKAKUEISU, "30", null},
	{"postCd_SF", "postCd_SF", "SF", null, TYPE_HANKAKUEISU, "15", null},
	{"ctryCd_SF", "ctryCd_SF", "SF", null, TYPE_HANKAKUEISU, "3", null},
	{"invTpCd", "invTpCd", null, null, TYPE_HANKAKUEISU, "1", null},
	{"taxCalculateInputLine", "taxCalculateInputLine", null, "3000", "business.parts.NWZC036101_taxCalculateInputLinePMsgArray", null, null},
	
	{"taxCalculateOutputLine", "taxCalculateOutputLine", null, "3000", "business.parts.NWZC036101_taxCalculateOutputLinePMsgArray", null, null},
	
	{"xxMsgIdList", "xxMsgIdList", null, "100", "business.parts.NWZC036101_xxMsgIdListPMsgArray", null, null},
	
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"GLBL_CMPY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//glblCmpyCd
        {"SLS_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//slsDt
        {"XX_MODE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxModeCd
        {"DS_ACCT_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctNum_SE
        {"BILL_TO_ACCT_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//billToAcctNum
        {"BILL_TO_LOC_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//billToLocNum
        {"DS_TAX_GRP_EXEM_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsTaxGrpExemCd_B
        {"DS_TAX_GRP_EXEM_RESL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsTaxGrpExemReslFlg_B
        {"DS_ACCT_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctNum_ST
        {"SHIP_TO_LOC_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToLocNum
        {"DS_TAX_GRP_EXEM_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsTaxGrpExemCd_ST
        {"TAX_CALC_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//taxCalcFlg
        {"TAX_EXEM_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//taxExemFlg
        {"TAX_EXEM_RSN_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//taxExemRsnCd
        {"LEASE_PRCH_OPT_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//leasePrchOptCd
        {"TRX_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trxDt
        {"XX_TAX_CALC_HDR_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxTaxCalcHdrNum
        {"GEO_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//geoCd_ST
        {"DS_INSD_CTY_LIMIT_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsInsdCtyLimitFlg_ST
        {"TAX_AREA_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//taxAreaId_ST
        {"FIRST_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//firstLineAddr_ST
        {"SCD_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//scdLineAddr_ST
        {"CTY_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ctyAddr_ST
        {"ST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//stCd_ST
        {"CNTY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cntyNm_ST
        {"POST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//postCd_ST
        {"CTRY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ctryCd_ST
        {"GEO_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//geoCd_SR
        {"DS_INSD_CTY_LIMIT_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsInsdCtyLimitFlg_SR
        {"FIRST_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//firstLineAddr_SR
        {"SCD_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//scdLineAddr_SR
        {"CTY_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ctyAddr_SR
        {"ST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//stCd_SR
        {"CNTY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cntyNm_SR
        {"POST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//postCd_SR
        {"CTRY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ctryCd_SR
        {"GEO_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//geoCd_SF
        {"WH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//whCd_SF
        {"FIRST_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//firstLineAddr_SF
        {"SCD_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//scdLineAddr_SF
        {"CTY_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ctyAddr_SF
        {"ST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//stCd_SF
        {"CNTY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cntyNm_SF
        {"POST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//postCd_SF
        {"CTRY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ctryCd_SF
        {"INV_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invTpCd
		null,	//taxCalculateInputLine
		null,	//taxCalculateOutputLine
		null,	//xxMsgIdList
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

