//This file was automatically generated by Common Business Component Interface Definition Document and XLA200710010.
// Generated on    :20171220134113000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :CommonBusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NWZC036101_taxCalculateInputLinePMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.parts;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NWZC036101 Common Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NWZC036101_taxCalculateInputLinePMsg extends EZDPMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_TAX_CALC_LINE_NUM_A*/
	public final EZDPStringItem              xxTaxCalcLineNum_A;

    /** TRX_DT_A*/
	public final EZDPDateItem              trxDt_A;

    /** MDSE_CD_A*/
	public final EZDPStringItem              mdseCd_A;

    /** SVC_ALLOC_TP_CD_A*/
	public final EZDPStringItem              svcAllocTpCd_A;

    /** SVC_ALLOC_TRX_TP_NM_A*/
	public final EZDPStringItem              svcAllocTrxTpNm_A;

    /** TAX_EXEM_TP_CD_A*/
	public final EZDPStringItem              taxExemTpCd_A;

    /** SHIP_QTY_A*/
	public final EZDPBigDecimalItem              shipQty_A;

    /** FUNC_NET_UNIT_PRC_AMT_A*/
	public final EZDPBigDecimalItem              funcNetUnitPrcAmt_A;

    /** SLS_AMT_A*/
	public final EZDPBigDecimalItem              slsAmt_A;

    /** TAX_AMT_A*/
	public final EZDPBigDecimalItem              taxAmt_A;

    /** BILL_TO_ACCT_NUM_A*/
	public final EZDPStringItem              billToAcctNum_A;

    /** BILL_TO_LOC_NUM_A*/
	public final EZDPStringItem              billToLocNum_A;

    /** DS_TAX_GRP_EXEM_CD_AB*/
	public final EZDPStringItem              dsTaxGrpExemCd_AB;

    /** DS_TAX_GRP_EXEM_RESL_FLG_AB*/
	public final EZDPStringItem              dsTaxGrpExemReslFlg_AB;

    /** DS_ACCT_NUM_AT*/
	public final EZDPStringItem              dsAcctNum_AT;

    /** SHIP_TO_LOC_NUM_A*/
	public final EZDPStringItem              shipToLocNum_A;

    /** DS_TAX_GRP_EXEM_CD_AT*/
	public final EZDPStringItem              dsTaxGrpExemCd_AT;

    /** GEO_CD_AT*/
	public final EZDPStringItem              geoCd_AT;

    /** DS_INSD_CTY_LIMIT_FLG_AT*/
	public final EZDPStringItem              dsInsdCtyLimitFlg_AT;

    /** TAX_AREA_ID_AT*/
	public final EZDPStringItem              taxAreaId_AT;

    /** FIRST_LINE_ADDR_AT*/
	public final EZDPStringItem              firstLineAddr_AT;

    /** SCD_LINE_ADDR_AT*/
	public final EZDPStringItem              scdLineAddr_AT;

    /** CTY_ADDR_AT*/
	public final EZDPStringItem              ctyAddr_AT;

    /** ST_CD_AT*/
	public final EZDPStringItem              stCd_AT;

    /** CNTY_NM_AT*/
	public final EZDPStringItem              cntyNm_AT;

    /** POST_CD_AT*/
	public final EZDPStringItem              postCd_AT;

    /** CTRY_CD_AT*/
	public final EZDPStringItem              ctryCd_AT;

    /** GEO_CD_AR*/
	public final EZDPStringItem              geoCd_AR;

    /** DS_INSD_CTY_LIMIT_FLG_AR*/
	public final EZDPStringItem              dsInsdCtyLimitFlg_AR;

    /** FIRST_LINE_ADDR_AR*/
	public final EZDPStringItem              firstLineAddr_AR;

    /** SCD_LINE_ADDR_AR*/
	public final EZDPStringItem              scdLineAddr_AR;

    /** CTY_ADDR_AR*/
	public final EZDPStringItem              ctyAddr_AR;

    /** ST_CD_AR*/
	public final EZDPStringItem              stCd_AR;

    /** CNTY_NM_AR*/
	public final EZDPStringItem              cntyNm_AR;

    /** POST_CD_AR*/
	public final EZDPStringItem              postCd_AR;

    /** CTRY_CD_AR*/
	public final EZDPStringItem              ctryCd_AR;

    /** GEO_CD_AF*/
	public final EZDPStringItem              geoCd_AF;

    /** WH_CD_AF*/
	public final EZDPStringItem              whCd_AF;

    /** FIRST_LINE_ADDR_AF*/
	public final EZDPStringItem              firstLineAddr_AF;

    /** SCD_LINE_ADDR_AF*/
	public final EZDPStringItem              scdLineAddr_AF;

    /** CTY_ADDR_AF*/
	public final EZDPStringItem              ctyAddr_AF;

    /** ST_CD_AF*/
	public final EZDPStringItem              stCd_AF;

    /** CNTY_NM_AF*/
	public final EZDPStringItem              cntyNm_AF;

    /** POST_CD_AF*/
	public final EZDPStringItem              postCd_AF;

    /** CTRY_CD_AF*/
	public final EZDPStringItem              ctryCd_AF;

    /** TRX_LINE_NUM*/
	public final EZDPStringItem              trxLineNum;

    /** PRC_COND_TP_CD*/
	public final EZDPStringItem              prcCondTpCd;


	/**
	 * NWZC036101_taxCalculateInputLinePMsg is constructor.
	 * The initialization when the instance of NWZC036101_taxCalculateInputLinePMsg is generated.
	 */
	public NWZC036101_taxCalculateInputLinePMsg() {
		this(false, -1);
	}

	/**
	 * NWZC036101_taxCalculateInputLinePMsg is constructor.
	 * The initialization when the instance of NWZC036101_taxCalculateInputLinePMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NWZC036101_taxCalculateInputLinePMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxTaxCalcLineNum_A = (EZDPStringItem)newItem("xxTaxCalcLineNum_A");
		trxDt_A = (EZDPDateItem)newItem("trxDt_A");
		mdseCd_A = (EZDPStringItem)newItem("mdseCd_A");
		svcAllocTpCd_A = (EZDPStringItem)newItem("svcAllocTpCd_A");
		svcAllocTrxTpNm_A = (EZDPStringItem)newItem("svcAllocTrxTpNm_A");
		taxExemTpCd_A = (EZDPStringItem)newItem("taxExemTpCd_A");
		shipQty_A = (EZDPBigDecimalItem)newItem("shipQty_A");
		funcNetUnitPrcAmt_A = (EZDPBigDecimalItem)newItem("funcNetUnitPrcAmt_A");
		slsAmt_A = (EZDPBigDecimalItem)newItem("slsAmt_A");
		taxAmt_A = (EZDPBigDecimalItem)newItem("taxAmt_A");
		billToAcctNum_A = (EZDPStringItem)newItem("billToAcctNum_A");
		billToLocNum_A = (EZDPStringItem)newItem("billToLocNum_A");
		dsTaxGrpExemCd_AB = (EZDPStringItem)newItem("dsTaxGrpExemCd_AB");
		dsTaxGrpExemReslFlg_AB = (EZDPStringItem)newItem("dsTaxGrpExemReslFlg_AB");
		dsAcctNum_AT = (EZDPStringItem)newItem("dsAcctNum_AT");
		shipToLocNum_A = (EZDPStringItem)newItem("shipToLocNum_A");
		dsTaxGrpExemCd_AT = (EZDPStringItem)newItem("dsTaxGrpExemCd_AT");
		geoCd_AT = (EZDPStringItem)newItem("geoCd_AT");
		dsInsdCtyLimitFlg_AT = (EZDPStringItem)newItem("dsInsdCtyLimitFlg_AT");
		taxAreaId_AT = (EZDPStringItem)newItem("taxAreaId_AT");
		firstLineAddr_AT = (EZDPStringItem)newItem("firstLineAddr_AT");
		scdLineAddr_AT = (EZDPStringItem)newItem("scdLineAddr_AT");
		ctyAddr_AT = (EZDPStringItem)newItem("ctyAddr_AT");
		stCd_AT = (EZDPStringItem)newItem("stCd_AT");
		cntyNm_AT = (EZDPStringItem)newItem("cntyNm_AT");
		postCd_AT = (EZDPStringItem)newItem("postCd_AT");
		ctryCd_AT = (EZDPStringItem)newItem("ctryCd_AT");
		geoCd_AR = (EZDPStringItem)newItem("geoCd_AR");
		dsInsdCtyLimitFlg_AR = (EZDPStringItem)newItem("dsInsdCtyLimitFlg_AR");
		firstLineAddr_AR = (EZDPStringItem)newItem("firstLineAddr_AR");
		scdLineAddr_AR = (EZDPStringItem)newItem("scdLineAddr_AR");
		ctyAddr_AR = (EZDPStringItem)newItem("ctyAddr_AR");
		stCd_AR = (EZDPStringItem)newItem("stCd_AR");
		cntyNm_AR = (EZDPStringItem)newItem("cntyNm_AR");
		postCd_AR = (EZDPStringItem)newItem("postCd_AR");
		ctryCd_AR = (EZDPStringItem)newItem("ctryCd_AR");
		geoCd_AF = (EZDPStringItem)newItem("geoCd_AF");
		whCd_AF = (EZDPStringItem)newItem("whCd_AF");
		firstLineAddr_AF = (EZDPStringItem)newItem("firstLineAddr_AF");
		scdLineAddr_AF = (EZDPStringItem)newItem("scdLineAddr_AF");
		ctyAddr_AF = (EZDPStringItem)newItem("ctyAddr_AF");
		stCd_AF = (EZDPStringItem)newItem("stCd_AF");
		cntyNm_AF = (EZDPStringItem)newItem("cntyNm_AF");
		postCd_AF = (EZDPStringItem)newItem("postCd_AF");
		ctryCd_AF = (EZDPStringItem)newItem("ctryCd_AF");
		trxLineNum = (EZDPStringItem)newItem("trxLineNum");
		prcCondTpCd = (EZDPStringItem)newItem("prcCondTpCd");
	}

	/**
	 * get the type of array which is stored
	 * @return NWZC036101_taxCalculateInputLinePMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NWZC036101_taxCalculateInputLinePMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxTaxCalcLineNum_A", "xxTaxCalcLineNum_A", "A", null, TYPE_HANKAKUEISU, "28", null},
	{"trxDt_A", "trxDt_A", "A", null, TYPE_NENTSUKIHI, "8", null},
	{"mdseCd_A", "mdseCd_A", "A", null, TYPE_HANKAKUEISU, "16", null},
	{"svcAllocTpCd_A", "svcAllocTpCd_A", "A", null, TYPE_HANKAKUEISU, "2", null},
	{"svcAllocTrxTpNm_A", "svcAllocTrxTpNm_A", "A", null, TYPE_HANKAKUEISU, "40", null},
	{"taxExemTpCd_A", "taxExemTpCd_A", "A", null, TYPE_HANKAKUEISU, "30", null},
	{"shipQty_A", "shipQty_A", "A", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"funcNetUnitPrcAmt_A", "funcNetUnitPrcAmt_A", "A", null, TYPE_SEISU_SYOSU, "19", "4"},
	{"slsAmt_A", "slsAmt_A", "A", null, TYPE_SEISU_SYOSU, "19", "4"},
	{"taxAmt_A", "taxAmt_A", "A", null, TYPE_SEISU_SYOSU, "19", "4"},
	{"billToAcctNum_A", "billToAcctNum_A", "A", null, TYPE_HANKAKUEISU, "20", null},
	{"billToLocNum_A", "billToLocNum_A", "A", null, TYPE_HANKAKUEISU, "30", null},
	{"dsTaxGrpExemCd_AB", "dsTaxGrpExemCd_AB", "AB", null, TYPE_HANKAKUEISU, "60", null},
	{"dsTaxGrpExemReslFlg_AB", "dsTaxGrpExemReslFlg_AB", "AB", null, TYPE_HANKAKUEISU, "1", null},
	{"dsAcctNum_AT", "dsAcctNum_AT", "AT", null, TYPE_HANKAKUEISU, "20", null},
	{"shipToLocNum_A", "shipToLocNum_A", "A", null, TYPE_HANKAKUEISU, "30", null},
	{"dsTaxGrpExemCd_AT", "dsTaxGrpExemCd_AT", "AT", null, TYPE_HANKAKUEISU, "60", null},
	{"geoCd_AT", "geoCd_AT", "AT", null, TYPE_HANKAKUEISU, "9", null},
	{"dsInsdCtyLimitFlg_AT", "dsInsdCtyLimitFlg_AT", "AT", null, TYPE_HANKAKUEISU, "1", null},
	{"taxAreaId_AT", "taxAreaId_AT", "AT", null, TYPE_HANKAKUEISU, "9", null},
	{"firstLineAddr_AT", "firstLineAddr_AT", "AT", null, TYPE_HANKAKUEISU, "60", null},
	{"scdLineAddr_AT", "scdLineAddr_AT", "AT", null, TYPE_HANKAKUEISU, "60", null},
	{"ctyAddr_AT", "ctyAddr_AT", "AT", null, TYPE_HANKAKUEISU, "25", null},
	{"stCd_AT", "stCd_AT", "AT", null, TYPE_HANKAKUEISU, "2", null},
	{"cntyNm_AT", "cntyNm_AT", "AT", null, TYPE_HANKAKUEISU, "30", null},
	{"postCd_AT", "postCd_AT", "AT", null, TYPE_HANKAKUEISU, "15", null},
	{"ctryCd_AT", "ctryCd_AT", "AT", null, TYPE_HANKAKUEISU, "3", null},
	{"geoCd_AR", "geoCd_AR", "AR", null, TYPE_HANKAKUEISU, "9", null},
	{"dsInsdCtyLimitFlg_AR", "dsInsdCtyLimitFlg_AR", "AR", null, TYPE_HANKAKUEISU, "1", null},
	{"firstLineAddr_AR", "firstLineAddr_AR", "AR", null, TYPE_HANKAKUEISU, "60", null},
	{"scdLineAddr_AR", "scdLineAddr_AR", "AR", null, TYPE_HANKAKUEISU, "60", null},
	{"ctyAddr_AR", "ctyAddr_AR", "AR", null, TYPE_HANKAKUEISU, "25", null},
	{"stCd_AR", "stCd_AR", "AR", null, TYPE_HANKAKUEISU, "2", null},
	{"cntyNm_AR", "cntyNm_AR", "AR", null, TYPE_HANKAKUEISU, "30", null},
	{"postCd_AR", "postCd_AR", "AR", null, TYPE_HANKAKUEISU, "15", null},
	{"ctryCd_AR", "ctryCd_AR", "AR", null, TYPE_HANKAKUEISU, "3", null},
	{"geoCd_AF", "geoCd_AF", "AF", null, TYPE_HANKAKUEISU, "9", null},
	{"whCd_AF", "whCd_AF", "AF", null, TYPE_HANKAKUEISU, "20", null},
	{"firstLineAddr_AF", "firstLineAddr_AF", "AF", null, TYPE_HANKAKUEISU, "60", null},
	{"scdLineAddr_AF", "scdLineAddr_AF", "AF", null, TYPE_HANKAKUEISU, "60", null},
	{"ctyAddr_AF", "ctyAddr_AF", "AF", null, TYPE_HANKAKUEISU, "25", null},
	{"stCd_AF", "stCd_AF", "AF", null, TYPE_HANKAKUEISU, "2", null},
	{"cntyNm_AF", "cntyNm_AF", "AF", null, TYPE_HANKAKUEISU, "30", null},
	{"postCd_AF", "postCd_AF", "AF", null, TYPE_HANKAKUEISU, "15", null},
	{"ctryCd_AF", "ctryCd_AF", "AF", null, TYPE_HANKAKUEISU, "3", null},
	{"trxLineNum", "trxLineNum", null, null, TYPE_HANKAKUEISU, "3", null},
	{"prcCondTpCd", "prcCondTpCd", null, null, TYPE_HANKAKUEISU, "4", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_TAX_CALC_LINE_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxTaxCalcLineNum_A
        {"TRX_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trxDt_A
        {"MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd_A
        {"SVC_ALLOC_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcAllocTpCd_A
        {"SVC_ALLOC_TRX_TP_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcAllocTrxTpNm_A
        {"TAX_EXEM_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//taxExemTpCd_A
        {"SHIP_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipQty_A
        {"FUNC_NET_UNIT_PRC_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//funcNetUnitPrcAmt_A
        {"SLS_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//slsAmt_A
        {"TAX_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//taxAmt_A
        {"BILL_TO_ACCT_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//billToAcctNum_A
        {"BILL_TO_LOC_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//billToLocNum_A
        {"DS_TAX_GRP_EXEM_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsTaxGrpExemCd_AB
        {"DS_TAX_GRP_EXEM_RESL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsTaxGrpExemReslFlg_AB
        {"DS_ACCT_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctNum_AT
        {"SHIP_TO_LOC_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToLocNum_A
        {"DS_TAX_GRP_EXEM_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsTaxGrpExemCd_AT
        {"GEO_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//geoCd_AT
        {"DS_INSD_CTY_LIMIT_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsInsdCtyLimitFlg_AT
        {"TAX_AREA_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//taxAreaId_AT
        {"FIRST_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//firstLineAddr_AT
        {"SCD_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//scdLineAddr_AT
        {"CTY_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ctyAddr_AT
        {"ST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//stCd_AT
        {"CNTY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cntyNm_AT
        {"POST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//postCd_AT
        {"CTRY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ctryCd_AT
        {"GEO_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//geoCd_AR
        {"DS_INSD_CTY_LIMIT_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsInsdCtyLimitFlg_AR
        {"FIRST_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//firstLineAddr_AR
        {"SCD_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//scdLineAddr_AR
        {"CTY_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ctyAddr_AR
        {"ST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//stCd_AR
        {"CNTY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cntyNm_AR
        {"POST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//postCd_AR
        {"CTRY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ctryCd_AR
        {"GEO_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//geoCd_AF
        {"WH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//whCd_AF
        {"FIRST_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//firstLineAddr_AF
        {"SCD_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//scdLineAddr_AF
        {"CTY_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ctyAddr_AF
        {"ST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//stCd_AF
        {"CNTY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cntyNm_AF
        {"POST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//postCd_AF
        {"CTRY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ctryCd_AF
        {"TRX_LINE_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trxLineNum
        {"PRC_COND_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCondTpCd
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

