//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20170530120339000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NLAL2040_ACMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NLAL2040;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NLAL2040 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NLAL2040_ACMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_CHK_BOX_A1*/
	public final EZDCStringItem              xxChkBox_A1;

    /** EFF_FROM_DT_A1*/
	public final EZDCDateItem              effFromDt_A1;

    /** EFF_THRU_DT_A1*/
	public final EZDCDateItem              effThruDt_A1;

    /** T_MDL_NM_A1*/
	public final EZDCStringItem              t_MdlNm_A1;

    /** SVC_SEG_DESC_TXT_A1*/
	public final EZDCStringItem              svcSegDescTxt_A1;

    /** COA_MDSE_TP_CD_A1*/
	public final EZDCStringItem              coaMdseTpCd_A1;

    /** COA_PROD_CD_A1*/
	public final EZDCStringItem              coaProdCd_A1;

    /** FROM_MTR_CNT_A1*/
	public final EZDCBigDecimalItem              fromMtrCnt_A1;

    /** TO_MTR_CNT_A1*/
	public final EZDCBigDecimalItem              toMtrCnt_A1;

    /** FROM_ELPS_MTH_AOT_A1*/
	public final EZDCBigDecimalItem              fromElpsMthAot_A1;

    /** TO_ELPS_MTH_AOT_A1*/
	public final EZDCBigDecimalItem              toElpsMthAot_A1;

    /** RTL_SWH_CD_AS*/
	public final EZDCStringItem              rtlSwhCd_AS;

    /** INVTY_OWNR_CD_AS*/
	public final EZDCStringItem              invtyOwnrCd_AS;

    /** THIRD_PTY_DSP_TP_CD_AS*/
	public final EZDCStringItem              thirdPtyDspTpCd_AS;

    /** MDL_ID_A1*/
	public final EZDCBigDecimalItem              mdlId_A1;

    /** SQ_ID_A1*/
	public final EZDCStringItem              sqId_A1;

    /** MTR_REQ_MDL_FLG_A1*/
	public final EZDCStringItem              mtrReqMdlFlg_A1;

    /** XX_RQST_TS_A1*/
	public final EZDCStringItem              xxRqstTs_A1;

    /** XX_RQST_TZ_A1*/
	public final EZDCStringItem              xxRqstTz_A1;


	/**
	 * NLAL2040_ACMsg is constructor.
	 * The initialization when the instance of NLAL2040_ACMsg is generated.
	 */
	public NLAL2040_ACMsg() {
		this(false, -1);
	}

	/**
	 * NLAL2040_ACMsg is constructor.
	 * The initialization when the instance of NLAL2040_ACMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NLAL2040_ACMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxChkBox_A1 = (EZDCStringItem)newItem("xxChkBox_A1");
		effFromDt_A1 = (EZDCDateItem)newItem("effFromDt_A1");
		effThruDt_A1 = (EZDCDateItem)newItem("effThruDt_A1");
		t_MdlNm_A1 = (EZDCStringItem)newItem("t_MdlNm_A1");
		svcSegDescTxt_A1 = (EZDCStringItem)newItem("svcSegDescTxt_A1");
		coaMdseTpCd_A1 = (EZDCStringItem)newItem("coaMdseTpCd_A1");
		coaProdCd_A1 = (EZDCStringItem)newItem("coaProdCd_A1");
		fromMtrCnt_A1 = (EZDCBigDecimalItem)newItem("fromMtrCnt_A1");
		toMtrCnt_A1 = (EZDCBigDecimalItem)newItem("toMtrCnt_A1");
		fromElpsMthAot_A1 = (EZDCBigDecimalItem)newItem("fromElpsMthAot_A1");
		toElpsMthAot_A1 = (EZDCBigDecimalItem)newItem("toElpsMthAot_A1");
		rtlSwhCd_AS = (EZDCStringItem)newItem("rtlSwhCd_AS");
		invtyOwnrCd_AS = (EZDCStringItem)newItem("invtyOwnrCd_AS");
		thirdPtyDspTpCd_AS = (EZDCStringItem)newItem("thirdPtyDspTpCd_AS");
		mdlId_A1 = (EZDCBigDecimalItem)newItem("mdlId_A1");
		sqId_A1 = (EZDCStringItem)newItem("sqId_A1");
		mtrReqMdlFlg_A1 = (EZDCStringItem)newItem("mtrReqMdlFlg_A1");
		xxRqstTs_A1 = (EZDCStringItem)newItem("xxRqstTs_A1");
		xxRqstTz_A1 = (EZDCStringItem)newItem("xxRqstTz_A1");
	}

	/**
	 * get the type of array which is stored
	 * @return NLAL2040_ACMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NLAL2040_ACMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxChkBox_A1", "xxChkBox_A1", "A1", null, TYPE_HANKAKUEIJI, "1", null},
	{"effFromDt_A1", "effFromDt_A1", "A1", null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt_A1", "effThruDt_A1", "A1", null, TYPE_NENTSUKIHI, "8", null},
	{"t_MdlNm_A1", "t_MdlNm_A1", "A1", null, TYPE_HANKAKUEISU, "50", null},
	{"svcSegDescTxt_A1", "svcSegDescTxt_A1", "A1", null, TYPE_HANKAKUEISU, "50", null},
	{"coaMdseTpCd_A1", "coaMdseTpCd_A1", "A1", null, TYPE_HANKAKUEISU, "2", null},
	{"coaProdCd_A1", "coaProdCd_A1", "A1", null, TYPE_HANKAKUEISU, "8", null},
	{"fromMtrCnt_A1", "fromMtrCnt_A1", "A1", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"toMtrCnt_A1", "toMtrCnt_A1", "A1", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"fromElpsMthAot_A1", "fromElpsMthAot_A1", "A1", null, TYPE_SEISU_SYOSU, "3", "0"},
	{"toElpsMthAot_A1", "toElpsMthAot_A1", "A1", null, TYPE_SEISU_SYOSU, "3", "0"},
	{"rtlSwhCd_AS", "rtlSwhCd_AS", "AS", null, TYPE_HANKAKUEISU, "20", null},
	{"invtyOwnrCd_AS", "invtyOwnrCd_AS", "AS", null, TYPE_HANKAKUEISU, "3", null},
	{"thirdPtyDspTpCd_AS", "thirdPtyDspTpCd_AS", "AS", null, TYPE_HANKAKUEISU, "2", null},
	{"mdlId_A1", "mdlId_A1", "A1", null, TYPE_SEISU_SYOSU, "22", "0"},
	{"sqId_A1", "sqId_A1", "A1", null, TYPE_HANKAKUEISU, "10", null},
	{"mtrReqMdlFlg_A1", "mtrReqMdlFlg_A1", "A1", null, TYPE_HANKAKUEISU, "1", null},
	{"xxRqstTs_A1", "xxRqstTs_A1", "A1", null, TYPE_HANKAKUEISU, "17", null},
	{"xxRqstTz_A1", "xxRqstTz_A1", "A1", null, TYPE_HANKAKUEISU, "5", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_A1
        {"EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effFromDt_A1
        {"EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effThruDt_A1
        {"T_MDL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//t_MdlNm_A1
        {"SVC_SEG_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcSegDescTxt_A1
        {"COA_MDSE_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaMdseTpCd_A1
        {"COA_PROD_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaProdCd_A1
        {"FROM_MTR_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//fromMtrCnt_A1
        {"TO_MTR_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//toMtrCnt_A1
        {"FROM_ELPS_MTH_AOT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//fromElpsMthAot_A1
        {"TO_ELPS_MTH_AOT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//toElpsMthAot_A1
        {"RTL_SWH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlSwhCd_AS
        {"INVTY_OWNR_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invtyOwnrCd_AS
        {"THIRD_PTY_DSP_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//thirdPtyDspTpCd_AS
        {"MDL_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdlId_A1
        {"SQ_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//sqId_A1
        {"MTR_REQ_MDL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrReqMdlFlg_A1
        {"XX_RQST_TS",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRqstTs_A1
        {"XX_RQST_TZ",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRqstTz_A1
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

