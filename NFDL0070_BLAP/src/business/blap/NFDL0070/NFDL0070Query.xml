<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<sqlMap namespace="NFDL0070Query">

    <!-- *********************************************************** -->
    <!-- ********** Bean Definition ******************************** -->
    <!-- *********************************************************** -->
    <typeAlias alias="NFDL0070_ASMsg"    type="business.blap.NFDL0070.NFDL0070_ASMsg"/>
    <typeAlias alias="NFDL0070CMsg"      type="business.blap.NFDL0070.NFDL0070CMsg"/>

    <statement id="findApplicationInfoList" parameterClass="Map" resultMap="result.findApplicationInfoList">
     SELECT
              AR.XX_TOT_CNT                             XX_TOT_CNT
            , AR.AR_TRX_NUM                             AR_TRX_NUM
            , NVL(AR.AR_CUST_REF_NUM, AR.AR_TRX_NUM)    AR_CUST_REF_NUM
            , AR.GRP_INV_NUM                            GRP_INV_NUM
            , AR.AR_TRX_TP_CD                           AR_TRX_TP_CD
            , AR.AR_TRX_TP_NM                           AR_TRX_TP_NM
            , AR.AR_TRX_DT                              AR_TRX_DT
            , AR.DS_CONTR_NUM                           DS_CONTR_NUM
            , AR.CUST_ISS_PO_NUM                        CUST_ISS_PO_NUM
            , AR.BLLG_PER_FROM_DT                       BLLG_PER_FROM_DT
            , AR.BLLG_PER_TO_DT                         BLLG_PER_TO_DT
            , AR.DEAL_ORIG_GRS_AMT                      DEAL_ORIG_GRS_AMT
            , AR.DEAL_RMNG_BAL_GRS_AMT                  DEAL_RMNG_BAL_GRS_AMT
            , AR.AR_TRX_BAL_PK                          AR_TRX_BAL_PK
            , AR.BILL_TO_CUST_CD                        BILL_TO_CUST_CD
     FROM(
             SELECT
                      COUNT(*) OVER (PARTITION BY A.GLBL_CMPY_CD)    XX_TOT_CNT
                    , A.AR_TRX_NUM                                   AR_TRX_NUM
                    , A.AR_CUST_REF_NUM                              AR_CUST_REF_NUM
                    , A.GRP_INV_NUM                                  GRP_INV_NUM
                    , A.AR_TRX_TP_CD                                 AR_TRX_TP_CD
                    , C.AR_TRX_TP_NM                                 AR_TRX_TP_NM
                    , A.AR_TRX_DT                                    AR_TRX_DT
                    , I.DS_CONTR_NUM                                 DS_CONTR_NUM
                    , A.CUST_ISS_PO_NUM                              CUST_ISS_PO_NUM
                    , SIL.BLLG_PER_FROM_DT                           BLLG_PER_FROM_DT
                    , SIL.BLLG_PER_TO_DT                             BLLG_PER_TO_DT
                    --
                    , CASE A.AR_TRX_TP_CD 
                        WHEN #receipt# THEN - A.DEAL_ORIG_GRS_AMT
                        ELSE                  A.DEAL_ORIG_GRS_AMT
                        END                                          DEAL_ORIG_GRS_AMT
                    , CASE A.AR_TRX_TP_CD 
                        WHEN #receipt# THEN - A.DEAL_APPLY_GRS_AMT
                        ELSE                  A.DEAL_APPLY_GRS_AMT
                        END                                          DEAL_APPLY_GRS_AMT
                    , CASE A.AR_TRX_TP_CD 
                        WHEN #receipt# THEN - A.DEAL_RMNG_BAL_GRS_AMT
                        ELSE                  A.DEAL_RMNG_BAL_GRS_AMT
                        END                                          DEAL_RMNG_BAL_GRS_AMT
                    , CASE A.AR_TRX_TP_CD 
                        WHEN #receipt# THEN - A.DEAL_NET_SLS_AMT
                        ELSE                  A.DEAL_NET_SLS_AMT
                        END                                          DEAL_NET_SLS_AMT
                    , CASE A.AR_TRX_TP_CD 
                        WHEN #receipt# THEN - A.DEAL_FRT_AMT
                        ELSE                  A.DEAL_FRT_AMT
                        END                                          DEAL_FRT_AMT
                    , CASE A.AR_TRX_TP_CD 
                        WHEN #receipt# THEN - A.DEAL_TAX_AMT
                        ELSE                  A.DEAL_TAX_AMT
                        END                                          DEAL_TAX_AMT
                    , CASE A.AR_TRX_TP_CD 
                        WHEN #receipt# THEN - A.DEAL_APPLY_CASH_DISC_AMT
                        ELSE                  A.DEAL_APPLY_CASH_DISC_AMT
                        END                                          DEAL_APPLY_CASH_DISC_AMT
                    , CASE A.AR_TRX_TP_CD 
                        WHEN #receipt# THEN - A.DEAL_APPLY_CR_AMT
                        ELSE                  A.DEAL_APPLY_CR_AMT
                        END                                          DEAL_APPLY_CR_AMT
                    , CASE A.AR_TRX_TP_CD 
                        WHEN #receipt# THEN - A.DEAL_APPLY_ADJ_AMT
                        ELSE                  A.DEAL_APPLY_ADJ_AMT
                        END                                          DEAL_APPLY_ADJ_AMT
                    --
                    , A.AR_TRX_BAL_PK                                AR_TRX_BAL_PK
                    , A.BILL_TO_CUST_CD                              BILL_TO_CUST_CD
             FROM
                      AR_TRX_TP        C
                    , AR_TRX_BAL       A
                    , SVC_INV          I
                    , ( SELECT
                            SIL.SVC_INV_NUM
                          , MIN(SIL.BLLG_PER_FROM_DT) AS BLLG_PER_FROM_DT
                          , MAX(BLLG_PER_THRU_DT)     AS BLLG_PER_TO_DT
                        FROM SVC_INV_LINE SIL
                        WHERE
                            SIL.GLBL_CMPY_CD        = #cMsg.glblCmpyCd#
                        AND SIL.EZCANCELFLAG        = '0' 
                        GROUP BY SIL.SVC_INV_NUM
                      ) SIL
                    <!-- START 2021/03/25 G.Delgado [QC#58587,ADD] -->
                    , ( SELECT
                            REQ.AR_TRX_NUM
                          , REQ.AR_RF_RQST_PK
                          , REQ.AR_RF_RQST_DTL_PK
                          , REQ.AR_DS_WF_STS_CD
                          , RANK() OVER(PARTITION BY REQ.AR_TRX_NUM ORDER BY REQ.EZINTIME DESC) AS RANK_REQ
                        FROM
                            ( SELECT
                                ARR.AR_RF_RQST_PK
                              , ARR.EZINTIME
                              , ARR.AR_DS_WF_STS_CD
                              , ARRD.AR_RF_RQST_DTL_PK
                              , ARRD.AR_TRX_NUM
                            FROM
                                AR_RF_RQST          ARR
                              , AR_RF_RQST_DTL      ARRD
                            WHERE
                                    ARR.GLBL_CMPY_CD      = #cMsg.glblCmpyCd#
                                AND ARR.AR_RF_RQST_PK     = ARRD.AR_RF_RQST_PK
                                AND ARR.GLBL_CMPY_CD      = ARRD.GLBL_CMPY_CD
                                AND ARR.EZCANCELFLAG      = '0'
                                AND ARRD.EZCANCELFLAG     = '0'
                                AND ARRD.AR_TRX_NUM         IS NOT NULL
                            UNION ALL
                            SELECT
                                ARR.AR_RF_RQST_PK
                              , ARR.EZINTIME
                              , ARR.AR_DS_WF_STS_CD
                              , ARRD.AR_RF_RQST_DTL_PK
                              , ARRD.AR_ORIG_RCPT_NUM AS AR_TRX_NUM
                            FROM
                                AR_RF_RQST          ARR
                              , AR_RF_RQST_DTL      ARRD
                            WHERE
                                    ARR.GLBL_CMPY_CD      = #cMsg.glblCmpyCd#
                                AND ARR.AR_RF_RQST_PK     = ARRD.AR_RF_RQST_PK
                                AND ARR.GLBL_CMPY_CD      = ARRD.GLBL_CMPY_CD
                                AND ARR.EZCANCELFLAG      = '0'
                                AND ARRD.EZCANCELFLAG     = '0'
                                AND ARRD.AR_ORIG_RCPT_NUM   IS NOT NULL
                            ) REQ
                      ) RF_REQ
                      <!-- END 2021/03/25 G.Delgado [QC#58587,ADD] -->
             WHERE
                          A.GLBL_CMPY_CD            =  #cMsg.glblCmpyCd#
                     AND  A.AR_CASH_APPLY_STS_CD   IN (#unapplied#, #partial#)
                     AND  A.BILL_TO_CUST_ACCT_CD    =  #cMsg.billToCustAcctCd#
                     AND  A.AR_TRX_TP_CD            =  C.AR_TRX_TP_CD(+)
                     AND  A.GLBL_CMPY_CD            =  C.GLBL_CMPY_CD(+)
                     AND  A.AR_TRX_NUM              =  I.SVC_INV_NUM(+)
                     AND  A.GLBL_CMPY_CD            =  I.GLBL_CMPY_CD(+)
                     AND  A.AR_TRX_NUM              = SIL.SVC_INV_NUM(+)
                     <!-- START 2021/03/25 G.Delgado [QC#58587,ADD] -->
                     AND  A.AR_TRX_NUM              =  RF_REQ.AR_TRX_NUM(+)
                     AND  (RF_REQ.AR_RF_RQST_PK     IS NULL
                          OR RF_REQ.RANK_REQ        =  1)
                     <!-- START 2021/04/22 K.Suzuki [QC#59333,DEL] -->
                     <!-- AND  (RF_REQ.AR_DS_WF_STS_CD   IS NULL -->
                     <!--      <iterate property="exclArDsWfStsCd" var="arDsWfStsCd[]" open="OR RF_REQ.AR_DS_WF_STS_CD   NOT IN (" close="))" conjunction=","> -->
                     <!--      #arDsWfStsCd[]# -->
                     <!--      </iterate> -->
                     <!-- END   2021/04/22 K.Suzuki [QC#59333,DEL] -->
                     <!-- END 2021/03/25 G.Delgado [QC#58587,ADD] -->
                     <!-- START 2021/04/22 K.Suzuki [QC#59333,ADD] -->
                     AND A.DEAL_RMNG_BAL_GRS_AMT   &lt;&gt; 0
                     <!-- END   2021/04/22 K.Suzuki [QC#59333,ADD] -->
                     AND  A.AR_TRX_TP_CD           IN
                      <iterate property="arTrxTpCd" var="elem[]" open="(" close=")" conjunction=",">
                          #elem[]#
                      </iterate>
                     <isNotNull property="cMsg.arCustRefNum">
                     AND NVL(A.AR_CUST_REF_NUM, A.AR_TRX_NUM) LIKE #cMsg.arCustRefNum#
                     </isNotNull>
                     <isNotNull property="cMsg.custIssPoNum">
                     AND UPPER(A.CUST_ISS_PO_NUM) LIKE UPPER(#cMsg.custIssPoNum#) <!-- 2019/03/25 QC#30758 Add 'UPPER' Function -->
                     </isNotNull>

                     AND  A.EZCANCELFLAG            =  '0'
                     AND  C.EZCANCELFLAG(+)         =  '0'
                     AND  I.EZCANCELFLAG(+)         =  '0'
             GROUP BY
                           A.GLBL_CMPY_CD
                         , A.AR_TRX_NUM
                         , A.AR_CUST_REF_NUM
                         , A.GRP_INV_NUM
                         , A.AR_TRX_TP_CD
                         , C.AR_TRX_TP_NM
                         , A.AR_TRX_DT
                         , I.DS_CONTR_NUM
                         , A.CUST_ISS_PO_NUM
                         , SIL.BLLG_PER_FROM_DT
                         , SIL.BLLG_PER_TO_DT
                         , A.DEAL_ORIG_GRS_AMT
                         , A.DEAL_APPLY_GRS_AMT
                         , A.DEAL_RMNG_BAL_GRS_AMT
                         , A.DEAL_NET_SLS_AMT
                         , A.DEAL_FRT_AMT
                         , A.DEAL_TAX_AMT
                         , A.DEAL_APPLY_CASH_DISC_AMT
                         , A.DEAL_APPLY_CR_AMT
                         , A.DEAL_APPLY_ADJ_AMT
                         , A.AR_TRX_BAL_PK
                         , A.BILL_TO_CUST_CD
             ORDER BY
                           A.AR_TRX_NUM        ASC
     ) AR
     WHERE ROWNUM                              &lt;= #rowNum#

    </statement>
    
    <resultMap id="result.findApplicationInfoList" class="NFDL0070_ASMsg">
        <result property="xxTotCnt"                    column="XX_TOT_CNT"                         javaType="EZDSBigDecimalItem"/>
        <result property="arTrxNum_A1"                 column="AR_TRX_NUM"                         javaType="EZDSStringItem"/>
        <result property="arCustRefNum_A1"             column="AR_CUST_REF_NUM"                    javaType="EZDSStringItem"/>
        <result property="grpInvNum_A1"                column="GRP_INV_NUM"                        javaType="EZDSStringItem"/>
        <result property="arTrxTpCd_A1"                column="AR_TRX_TP_CD"                       javaType="EZDSStringItem"/>
        <result property="arTrxTpNm_A1"                column="AR_TRX_TP_NM"                       javaType="EZDSStringItem"/>
        <result property="arTrxDt_A1"                  column="AR_TRX_DT"                          javaType="EZDSDateItem"/>
        <result property="dsContrNum_A1"               column="DS_CONTR_NUM"                       javaType="EZDSStringItem"/>
        <result property="custIssPoNum_A1"             column="CUST_ISS_PO_NUM"                    javaType="EZDSStringItem"/>
        <result property="bllgPerFromDt_A1"            column="BLLG_PER_FROM_DT"                   javaType="EZDSDateItem"/>
        <result property="bllgPerToDt_A1"              column="BLLG_PER_TO_DT"                     javaType="EZDSDateItem"/>
        <result property="dealOrigGrsAmt_A1"           column="DEAL_ORIG_GRS_AMT"                  javaType="EZDSBigDecimalItem"/>
        <result property="dealRmngBalGrsAmt_A1"        column="DEAL_RMNG_BAL_GRS_AMT"              javaType="EZDSBigDecimalItem"/>
        <result property="dealRmngBalGrsAmt_A2"        column="DEAL_RMNG_BAL_GRS_AMT"              javaType="EZDSBigDecimalItem"/>
        <result property="billToCustCd_A1"             column="BILL_TO_CUST_CD"                    javaType="EZDSStringItem"/>
        <result property="arTrxBalPk_A1"               column="AR_TRX_BAL_PK"                      javaType="EZDSBigDecimalItem"/>
    </resultMap>

    <statement id="getArRfRqstPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
               COUNT(RF_RQST.AR_RF_RQST_PK) AS AR_RF_RQST_PK_COUNT
            FROM
               AR_RF_RQST_DTL RF_RQST_DTL
             , AR_RF_RQST RF_RQST
            WHERE
               RF_RQST_DTL.GLBL_CMPY_CD            = #glblCmpyCd#
               AND RF_RQST_DTL.AR_TRX_NUM          = #arTrxNum#
               AND RF_RQST_DTL.EZCANCELFLAG        = '0'
               AND RF_RQST_DTL.GLBL_CMPY_CD        = RF_RQST.GLBL_CMPY_CD
               AND RF_RQST_DTL.AR_RF_RQST_PK       = RF_RQST.AR_RF_RQST_PK
               AND RF_RQST.AR_RF_TP_CD             = #arRfTpCd#
               AND RF_RQST.AR_RF_STS_CD            IS NULL
               AND RF_RQST.EZCANCELFLAG            = '0'
               <!-- START 2022/05/18 D.Mamaril [QC#59333,ADD] -->
               AND RF_RQST.AR_DS_WF_STS_CD         &lt;&gt; #arDsWfStsCd#
               <!-- END 2022/05/18 D.Mamaril [QC#59333,ADD] -->
    </statement>

    <!-- START 2021/04/22 K.Suzuki [QC#59333,ADD] -->
    <statement id="getCountNotProcessRefundRqst" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*) AS COUNT
        FROM
            AR_TRX_BAL     ATB
           ,AR_RF_RQST     ARR
           ,AR_RF_RQST_DTL ARRD
        WHERE
            ATB.GLBL_CMPY_CD    = #glblCmpyCd#
        AND ATB.EZCANCELFLAG    = '0'
        AND ARR.GLBL_CMPY_CD    = ATB.GLBL_CMPY_CD
        AND ARR.EZCANCELFLAG    = '0'
        AND ARRD.GLBL_CMPY_CD   = ATB.GLBL_CMPY_CD
        AND ARRD.EZCANCELFLAG   = '0'
        AND ARRD.AR_TRX_NUM     = ATB.AR_TRX_NUM
        AND ARRD.AR_TRX_NUM     = #arTrxNum#
        AND ARRD.AR_RF_RQST_PK  = ARR.AR_RF_RQST_PK
        AND ARR.AR_RF_STS_CD    IS NULL
        <!-- START 2022/05/18 D.Mamaril [QC#59333,ADD] -->
        AND ARR.AR_DS_WF_STS_CD &lt;&gt; #arDsWfStsCd#
        <!-- END 2022/05/18 D.Mamaril [QC#59333,ADD] -->
    </statement>
    <!-- END   2021/04/22 K.Suzuki [QC#59333,ADD] -->
</sqlMap>
