//This file was automatically generated by Common Business Component Interface Definition Document and XLA200710010.
// Generated on    :20090824201022000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :CommonBusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NWZC102001PMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.parts;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NWZC102001 Common Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NWZC102001PMsg extends EZDPMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** GLBL_CMPY_CD*/
	public final EZDPStringItem              glblCmpyCd;

    /** xxMsgIdList*/
	public final business.parts.NWZC102001_xxMsgIdListPMsgArray              xxMsgIdList;

    /** XX_ORIG_FUNC_TP_CD*/
	public final EZDPStringItem              xxOrigFuncTpCd;

    /** XX_RQST_TP_CD*/
	public final EZDPStringItem              xxRqstTpCd;

    /** XX_ALLOC_TP_CD*/
	public final EZDPStringItem              xxAllocTpCd;

    /** XX_PRTL_ACPT_FLG*/
	public final EZDPStringItem              xxPrtlAcptFlg;

    /** XX_ITEM_FLIP_ACPT_FLG*/
	public final EZDPStringItem              xxItemFlipAcptFlg;

    /** XX_WH_FLIP_ACPT_FLG*/
	public final EZDPStringItem              xxWhFlipAcptFlg;

    /** TRX_SRC_TP_CD*/
	public final EZDPStringItem              trxSrcTpCd;

    /** TRX_HDR_NUM*/
	public final EZDPStringItem              trxHdrNum;

    /** TRX_LINE_NUM*/
	public final EZDPStringItem              trxLineNum;

    /** TRX_LINE_SUB_NUM*/
	public final EZDPStringItem              trxLineSubNum;

    /** MDSE_CD*/
	public final EZDPStringItem              mdseCd;

    /** CPO_ORD_TS*/
	public final EZDPStringItem              cpoOrdTs;

    /** RDD_DT*/
	public final EZDPDateItem              rddDt;

    /** RSD_DT*/
	public final EZDPDateItem              rsdDt;

    /** EXPD_SHIP_DT*/
	public final EZDPDateItem              expdShipDt;

    /** SLS_REP_TOC_CD*/
	public final EZDPStringItem              slsRepTocCd;

    /** BILL_TO_CUST_CD*/
	public final EZDPStringItem              billToCustCd;

    /** SELL_TO_CUST_CD*/
	public final EZDPStringItem              sellToCustCd;

    /** SHIP_TO_CUST_CD*/
	public final EZDPStringItem              shipToCustCd;

    /** SHIP_TO_ST_CD*/
	public final EZDPStringItem              shipToStCd;

    /** SHIP_TO_POST_CD*/
	public final EZDPStringItem              shipToPostCd;

    /** INVTY_LOC_CD*/
	public final EZDPStringItem              invtyLocCd;

    /** STK_STS_CD*/
	public final EZDPStringItem              stkStsCd;

    /** FRT_CHRG_METH_CD*/
	public final EZDPStringItem              frtChrgMethCd;

    /** FRT_CHRG_TO_CD*/
	public final EZDPStringItem              frtChrgToCd;

    /** SHPG_SVC_LVL_CD*/
	public final EZDPStringItem              shpgSvcLvlCd;

    /** SHIP_CPLT_CD*/
	public final EZDPStringItem              shipCpltCd;

    /** SET_ITEM_SHIP_CPLT_FLG*/
	public final EZDPStringItem              setItemShipCpltFlg;

    /** UOM_CPLT_FLG*/
	public final EZDPStringItem              uomCpltFlg;

    /** UOM_CD*/
	public final EZDPStringItem              uomCd;

    /** DIST_PLN_NUM*/
	public final EZDPStringItem              distPlnNum;

    /** DIST_PK*/
	public final EZDPBigDecimalItem              distPk;

    /** DIST_TM_FRAME_NUM*/
	public final EZDPStringItem              distTmFrameNum;

    /** DIST_STRU_SEG_PK*/
	public final EZDPBigDecimalItem              distStruSegPk;

    /** MDSE_CD_SA*/
	public final EZDPStringItem              mdseCd_SA;

    /** INVTY_LOC_CD_SA*/
	public final EZDPStringItem              invtyLocCd_SA;

    /** SHPG_SVC_LVL_CD_SA*/
	public final EZDPStringItem              shpgSvcLvlCd_SA;

    /** SOFT_ALLOC_PK*/
	public final EZDPBigDecimalItem              softAllocPk;

    /** XX_RQST_QTY*/
	public final EZDPBigDecimalItem              xxRqstQty;

    /** SLS_DT*/
	public final EZDPDateItem              slsDt;


	/**
	 * NWZC102001PMsg is constructor.
	 * The initialization when the instance of NWZC102001PMsg is generated.
	 */
	public NWZC102001PMsg() {
		this(false, -1);
	}

	/**
	 * NWZC102001PMsg is constructor.
	 * The initialization when the instance of NWZC102001PMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NWZC102001PMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		glblCmpyCd = (EZDPStringItem)newItem("glblCmpyCd");
		xxMsgIdList = (business.parts.NWZC102001_xxMsgIdListPMsgArray)newMsgArray("xxMsgIdList");
		xxOrigFuncTpCd = (EZDPStringItem)newItem("xxOrigFuncTpCd");
		xxRqstTpCd = (EZDPStringItem)newItem("xxRqstTpCd");
		xxAllocTpCd = (EZDPStringItem)newItem("xxAllocTpCd");
		xxPrtlAcptFlg = (EZDPStringItem)newItem("xxPrtlAcptFlg");
		xxItemFlipAcptFlg = (EZDPStringItem)newItem("xxItemFlipAcptFlg");
		xxWhFlipAcptFlg = (EZDPStringItem)newItem("xxWhFlipAcptFlg");
		trxSrcTpCd = (EZDPStringItem)newItem("trxSrcTpCd");
		trxHdrNum = (EZDPStringItem)newItem("trxHdrNum");
		trxLineNum = (EZDPStringItem)newItem("trxLineNum");
		trxLineSubNum = (EZDPStringItem)newItem("trxLineSubNum");
		mdseCd = (EZDPStringItem)newItem("mdseCd");
		cpoOrdTs = (EZDPStringItem)newItem("cpoOrdTs");
		rddDt = (EZDPDateItem)newItem("rddDt");
		rsdDt = (EZDPDateItem)newItem("rsdDt");
		expdShipDt = (EZDPDateItem)newItem("expdShipDt");
		slsRepTocCd = (EZDPStringItem)newItem("slsRepTocCd");
		billToCustCd = (EZDPStringItem)newItem("billToCustCd");
		sellToCustCd = (EZDPStringItem)newItem("sellToCustCd");
		shipToCustCd = (EZDPStringItem)newItem("shipToCustCd");
		shipToStCd = (EZDPStringItem)newItem("shipToStCd");
		shipToPostCd = (EZDPStringItem)newItem("shipToPostCd");
		invtyLocCd = (EZDPStringItem)newItem("invtyLocCd");
		stkStsCd = (EZDPStringItem)newItem("stkStsCd");
		frtChrgMethCd = (EZDPStringItem)newItem("frtChrgMethCd");
		frtChrgToCd = (EZDPStringItem)newItem("frtChrgToCd");
		shpgSvcLvlCd = (EZDPStringItem)newItem("shpgSvcLvlCd");
		shipCpltCd = (EZDPStringItem)newItem("shipCpltCd");
		setItemShipCpltFlg = (EZDPStringItem)newItem("setItemShipCpltFlg");
		uomCpltFlg = (EZDPStringItem)newItem("uomCpltFlg");
		uomCd = (EZDPStringItem)newItem("uomCd");
		distPlnNum = (EZDPStringItem)newItem("distPlnNum");
		distPk = (EZDPBigDecimalItem)newItem("distPk");
		distTmFrameNum = (EZDPStringItem)newItem("distTmFrameNum");
		distStruSegPk = (EZDPBigDecimalItem)newItem("distStruSegPk");
		mdseCd_SA = (EZDPStringItem)newItem("mdseCd_SA");
		invtyLocCd_SA = (EZDPStringItem)newItem("invtyLocCd_SA");
		shpgSvcLvlCd_SA = (EZDPStringItem)newItem("shpgSvcLvlCd_SA");
		softAllocPk = (EZDPBigDecimalItem)newItem("softAllocPk");
		xxRqstQty = (EZDPBigDecimalItem)newItem("xxRqstQty");
		slsDt = (EZDPDateItem)newItem("slsDt");
	}

	/**
	 * get the type of array which is stored
	 * @return NWZC102001PMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NWZC102001PMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"glblCmpyCd", "glblCmpyCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"xxMsgIdList", "xxMsgIdList", null, "100", "business.parts.NWZC102001_xxMsgIdListPMsgArray", null, null},
	
	{"xxOrigFuncTpCd", "xxOrigFuncTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"xxRqstTpCd", "xxRqstTpCd", null, null, TYPE_HANKAKUEISU, "1", null},
	{"xxAllocTpCd", "xxAllocTpCd", null, null, TYPE_HANKAKUEISU, "1", null},
	{"xxPrtlAcptFlg", "xxPrtlAcptFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"xxItemFlipAcptFlg", "xxItemFlipAcptFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"xxWhFlipAcptFlg", "xxWhFlipAcptFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"trxSrcTpCd", "trxSrcTpCd", null, null, TYPE_HANKAKUEISU, "3", null},
	{"trxHdrNum", "trxHdrNum", null, null, TYPE_HANKAKUEISU, "8", null},
	{"trxLineNum", "trxLineNum", null, null, TYPE_HANKAKUEISU, "3", null},
	{"trxLineSubNum", "trxLineSubNum", null, null, TYPE_HANKAKUEISU, "3", null},
	{"mdseCd", "mdseCd", null, null, TYPE_HANKAKUEISU, "16", null},
	{"cpoOrdTs", "cpoOrdTs", null, null, TYPE_HANKAKUSUJI, "17", null},
	{"rddDt", "rddDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"rsdDt", "rsdDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"expdShipDt", "expdShipDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"slsRepTocCd", "slsRepTocCd", null, null, TYPE_HANKAKUEISU, "8", null},
	{"billToCustCd", "billToCustCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"sellToCustCd", "sellToCustCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"shipToCustCd", "shipToCustCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"shipToStCd", "shipToStCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"shipToPostCd", "shipToPostCd", null, null, TYPE_HANKAKUEISU, "15", null},
	{"invtyLocCd", "invtyLocCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"stkStsCd", "stkStsCd", null, null, TYPE_HANKAKUEISU, "1", null},
	{"frtChrgMethCd", "frtChrgMethCd", null, null, TYPE_HANKAKUEISU, "1", null},
	{"frtChrgToCd", "frtChrgToCd", null, null, TYPE_HANKAKUEISU, "1", null},
	{"shpgSvcLvlCd", "shpgSvcLvlCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"shipCpltCd", "shipCpltCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"setItemShipCpltFlg", "setItemShipCpltFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"uomCpltFlg", "uomCpltFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"uomCd", "uomCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"distPlnNum", "distPlnNum", null, null, TYPE_HANKAKUEISU, "28", null},
	{"distPk", "distPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"distTmFrameNum", "distTmFrameNum", null, null, TYPE_HANKAKUEISU, "3", null},
	{"distStruSegPk", "distStruSegPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"mdseCd_SA", "mdseCd_SA", "SA", null, TYPE_HANKAKUEISU, "16", null},
	{"invtyLocCd_SA", "invtyLocCd_SA", "SA", null, TYPE_HANKAKUEISU, "20", null},
	{"shpgSvcLvlCd_SA", "shpgSvcLvlCd_SA", "SA", null, TYPE_HANKAKUEISU, "2", null},
	{"softAllocPk", "softAllocPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"xxRqstQty", "xxRqstQty", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"slsDt", "slsDt", null, null, TYPE_NENTSUKIHI, "8", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"GLBL_CMPY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//glblCmpyCd
		null,	//xxMsgIdList
        {"XX_ORIG_FUNC_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxOrigFuncTpCd
        {"XX_RQST_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRqstTpCd
        {"XX_ALLOC_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxAllocTpCd
        {"XX_PRTL_ACPT_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPrtlAcptFlg
        {"XX_ITEM_FLIP_ACPT_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxItemFlipAcptFlg
        {"XX_WH_FLIP_ACPT_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxWhFlipAcptFlg
        {"TRX_SRC_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trxSrcTpCd
        {"TRX_HDR_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trxHdrNum
        {"TRX_LINE_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trxLineNum
        {"TRX_LINE_SUB_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trxLineSubNum
        {"MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd
        {"CPO_ORD_TS",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cpoOrdTs
        {"RDD_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rddDt
        {"RSD_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rsdDt
        {"EXPD_SHIP_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//expdShipDt
        {"SLS_REP_TOC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//slsRepTocCd
        {"BILL_TO_CUST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//billToCustCd
        {"SELL_TO_CUST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//sellToCustCd
        {"SHIP_TO_CUST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToCustCd
        {"SHIP_TO_ST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToStCd
        {"SHIP_TO_POST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToPostCd
        {"INVTY_LOC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invtyLocCd
        {"STK_STS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//stkStsCd
        {"FRT_CHRG_METH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//frtChrgMethCd
        {"FRT_CHRG_TO_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//frtChrgToCd
        {"SHPG_SVC_LVL_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shpgSvcLvlCd
        {"SHIP_CPLT_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipCpltCd
        {"SET_ITEM_SHIP_CPLT_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//setItemShipCpltFlg
        {"UOM_CPLT_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//uomCpltFlg
        {"UOM_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//uomCd
        {"DIST_PLN_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//distPlnNum
        {"DIST_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//distPk
        {"DIST_TM_FRAME_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//distTmFrameNum
        {"DIST_STRU_SEG_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//distStruSegPk
        {"MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd_SA
        {"INVTY_LOC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invtyLocCd_SA
        {"SHPG_SVC_LVL_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shpgSvcLvlCd_SA
        {"SOFT_ALLOC_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//softAllocPk
        {"XX_RQST_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRqstQty
        {"SLS_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//slsDt
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

