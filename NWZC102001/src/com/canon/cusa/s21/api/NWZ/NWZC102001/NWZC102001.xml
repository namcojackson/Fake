<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<sqlMap namespace="NWZC102001">

	<!-- typeAlias alias="NWZC103002PMsg"				type="business.parts.NWZC103002PMsg"/ -->
	<typeAlias alias="NWZC104001PMsg"				type="business.parts.NWZC104001PMsg"/>
	<typeAlias alias="MDSETMsg"						type="business.db.MDSETMsg"/>
	<typeAlias alias="NWZC104002PMsg"				type="business.parts.NWZC104002PMsg"/>
		
	<statement id="queryInvty" parameterClass="Map" resultMap="result.NWZC104002PMsg">
		
		SELECT 	  
				  INV.GLBL_CMPY_CD 				AS GLBL_CMPY_CD 	
				, INV.MDSE_CD					AS MDSE_CD
				, INV.INVTY_LOC_CD 				AS INVTY_LOC_CD 
				, INV.LOC_STS_CD 				AS LOC_STS_CD
				, INV.STK_STS_CD  				AS STK_STS_CD
				, INV.LOC_TP_CD 				AS LOC_TP_CD 
				, INV.INVTY_QTY					AS INVTY_QTY	
				, INV.INVTY_ALLOC_QTY			AS INVTY_ALLOC_QTY
				, INV.INVTY_AVAL_QTY			AS INVTY_AVAL_QTY		
		FROM 	 
				INVTY INV
		WHERE 
				INV.GLBL_CMPY_CD 			= #glblCmpyCd#
			AND INV.LOC_STS_CD				= #locStsCd#
			AND INV.STK_STS_CD				= #stkStsCd#
			AND INV.INVTY_LOC_CD 			= #invtyLocCd#
			AND INV.INVTY_AVAL_QTY 			&gt;  0	
			AND INV.EZCANCELFLAG 			= '0' 	
			<isEqual property="ordTakeMdseFlg" compareValue="0">		
			AND INV.MDSE_CD					LIKE #mdseCd# ||'%'	
			</isEqual>
			<isEqual property="ordTakeMdseFlg" compareValue="1">
			AND (
					INV.MDSE_CD				= #mdseCd#
				OR	EXISTS	(
						SELECT
							*
						FROM
							ALLOC_THRHD THR
						WHERE
							THR.GLBL_CMPY_CD 			= #glblCmpyCd#
						AND THR.INVTY_LOC_CD 			= #invtyLocCd#
						AND THR.ORD_TAKE_MDSE_CD		= #thrOrdTakeMdseCd#
						AND THR.EZCANCELFLAG 			= '0'
						AND THR.MDSE_CD                 = INV.MDSE_CD
					)
				)
			</isEqual>

	</statement>	
	
	<resultMap id="result.NWZC104002PMsg" class="NWZC104002PMsg">

		<result property="mdseCd"					column="MDSE_CD"				javaType="EZDPStringItem"/>
		<result property="invtyLocCd"				column="INVTY_LOC_CD"			javaType="EZDPStringItem"/>
		<result property="locStsCd"					column="LOC_STS_CD"				javaType="EZDPStringItem"/>
		<result property="stkStsCd"					column="STK_STS_CD"				javaType="EZDPStringItem"/>
		<result property="invtyAvalQty"				column="INVTY_AVAL_QTY"			javaType="EZDPBigDecimalItem"/>

	</resultMap>
		
		
	<statement id="queryOrdTakeMdse" parameterClass="Map" resultMap="result.MDSETMsg">


		SELECT 	  
				  M.MDSE_CD 					AS MDSE_CD
				, M.INVTY_DIST_TP_CD			AS INVTY_DIST_TP_CD
				, M.INVTY_SOFT_ALLOC_TP_CD 		AS INVTY_SOFT_ALLOC_TP_CD 
				, M.INVTY_HARD_ALLOC_TP_CD 		AS INVTY_HARD_ALLOC_TP_CD
				, M.MDSE_TP_CD  				AS MDSE_TP_CD
				, M.INVTY_CTRL_FLG 				AS INVTY_CTRL_FLG 
				, M.DAYS_PRI_ALLOC_NUM			AS DAYS_PRI_ALLOC_NUM
				, M.GLBL_CMPY_CD				AS GLBL_CMPY_CD			
		FROM 	 
				MDSE M
				,ORD_TAKE_MDSE OTM
		WHERE 
				OTM.GLBL_CMPY_CD 			= #glblCmpyCd#
			AND OTM.ORD_TAKE_MDSE_CD		= #mdseCd#			
			AND M.GLBL_CMPY_CD 				= OTM.GLBL_CMPY_CD
			AND M.MDSE_CD					= OTM.MDSE_CD
			AND M.EZCANCELFLAG 				= '0' 
			AND OTM.EZCANCELFLAG 			= '0' 	

	</statement>
	
	<resultMap id="result.MDSETMsg" class="MDSETMsg">

		<result property="mdseCd"					column="MDSE_CD"					javaType="EZDPStringItem"/>
		<result property="invtyDistTpCd"			column="INVTY_DIST_TP_CD"			javaType="EZDPStringItem"/>
		<result property="invtySoftAllocTpCd"		column="INVTY_SOFT_ALLOC_TP_CD"		javaType="EZDPStringItem"/>
		<result property="invtyHardAllocTpCd"		column="INVTY_HARD_ALLOC_TP_CD"		javaType="EZDPStringItem"/>
		<result property="mdseTpCd"					column="MDSE_TP_CD"					javaType="EZDPStringItem"/>
		<result property="invtyCtrlFlg"				column="INVTY_CTRL_FLG"				javaType="EZDTStringItem"/>
		<result property="daysPriAllocNum"			column="DAYS_PRI_ALLOC_NUM"			javaType="EZDPBigDecimalItem"/>
		<result property="glblCmpyCd"				column="GLBL_CMPY_CD"				javaType="EZDTStringItem"/>

	</resultMap>

	<!-- statement id="queryDistributionInfo1" parameterClass="Map" resultMap="result.NWZC103002PMsg" -->


	<!-- 	SELECT 	   -->
	<!-- 			  DD.DIST_PLN_NUM 			AS DIST_PLN_NUM -->
	<!-- 			, DD.DIST_PK 				AS DIST_PK -->
	<!-- 			, DD.DIST_TM_FRAME_NUM 		AS DIST_TM_FRAME -->
	<!-- 			, DD.TM_FRAME_FROM_DT 		AS TM_FRAME_FROM_DT -->
	<!-- 			, DD.TM_FRAME_THRU_DT 		AS TM_FRAME_THRU_DT -->
	<!-- 			, DD.DIST_STRU_SEG_PK 		AS DIST_STRU_SEG_PK -->
	<!-- 			, DD.DIST_AVAL_QTY 			AS DIST_AVAL_QTY -->
	<!-- 	FROM 	  -->
	<!-- 			DIST_DTL DD -->
	<!-- 	WHERE  -->
	<!-- 			DD.GLBL_CMPY_CD 			= #glblCmpyCd# -->
	<!-- 		AND DD.DIST_PLN_NUM				= #distPlnNum#			 -->
	<!-- 		AND DD.DIST_PK					= #distPk# -->
	<!-- 		AND DD.DIST_TM_FRAME_NUM		= #distTmFrameNum#			 -->
	<!-- 		AND DD.DIST_AVAL_QTY			&gt;  0		 -->
	<!-- 		AND DD.DIST_STRU_SEG_PK 		= #distStruSegPk# -->
	<!-- 		AND DD.EZCANCELFLAG 			= '0' 	 -->


	<!-- /statement -->


	<!-- statement id="queryDistributionInfo2" parameterClass="Map" resultMap="result.NWZC103002PMsg" -->
	
	<!-- 	SELECT 	  -->
	<!-- 			  DD.DIST_PLN_NUM 			AS DIST_PLN_NUM -->
	<!-- 			, DD.DIST_PK 				AS DIST_PK -->
	<!-- 			, DD.DIST_TM_FRAME_NUM 		AS DIST_TM_FRAME -->
	<!-- 			, DD.TM_FRAME_FROM_DT 		AS TM_FRAME_FROM_DT -->
	<!-- 			, DD.TM_FRAME_THRU_DT 		AS TM_FRAME_THRU_DT -->
	<!-- 			, DD.DIST_STRU_SEG_PK 		AS DIST_STRU_SEG_PK -->
	<!-- 			, DD.DIST_AVAL_QTY 			AS DIST_AVAL_QTY -->
	<!-- 	FROM 	  -->
	<!-- 			 SOFT_ALLOC_AVAL_SEG SAA -->
	<!-- 			,DIST D -->
	<!-- 			,DIST_PLN_DTL DPD -->
	<!-- 			,DIST_DTL DD -->
	<!-- 	WHERE  -->
	<!-- 			SAA.GLBL_CMPY_CD 			= #glblCmpyCd# -->
	<!-- 		AND SAA.TRX_SRC_TP_CD 			= #trxSrcTpCd# -->
	<!-- 		AND SAA.TRX_HDR_NUM 			= #trxHdrNum# -->
	<!-- 		AND SAA.TRX_LINE_NUM 			= #trxLineNum# -->
	<!-- 		AND SAA.TRX_LINE_SUB_NUM 		= #trxLineSubNum# -->
	<!-- 		AND SAA.DIST_STRU_SEG_PK		= DD.DIST_STRU_SEG_PK -->
	<!-- 		AND SAA.GLBL_CMPY_CD 			= D.GLBL_CMPY_CD -->
	<!-- 		<isEqual property="ordTakeMdseFlg" compareValue="0"> -->
	<!-- 		AND D.ORD_TAKE_MDSE_CD 			= #mdseCd#	 -->
	<!-- 		</isEqual> -->
	<!-- 		<isEqual property="ordTakeMdseFlg" compareValue="1"> -->
	<!-- 		AND D.MDSE_CD 					= #mdseCd# -->
	<!-- 		</isEqual>  -->
	<!-- 		AND DD.GLBL_CMPY_CD 			= D.GLBL_CMPY_CD -->
	<!-- 		AND DD.DIST_PLN_NUM				= D.DIST_PLN_NUM			 -->
	<!-- 		AND DD.DIST_PK					= D.DIST_PK	 -->
	<!-- 		AND DD.TM_FRAME_THRU_DT			&gt;= #slsDt# -->
	<!-- 		AND DD.DIST_AVAL_QTY			&gt; 0		 -->
	<!-- 		AND DPD.GLBL_CMPY_CD 			= DD.GLBL_CMPY_CD -->
	<!-- 		AND DPD.DIST_PLN_NUM 			= DD.DIST_PLN_NUM -->
	<!-- 		AND DPD.DIST_PK 				= DD.DIST_PK								 -->
	<!-- 		AND DPD.DIST_TM_FRAME_NUM 		= DD.DIST_TM_FRAME_NUM   -->
	<!-- 		AND DPD.DIST_PLN_STS_CD			= #distPlnStsCd# -->
	<!-- 		AND SAA.EZCANCELFLAG 			= '0' -->
	<!-- 		AND D.EZCANCELFLAG 				= '0' -->
	<!-- 		AND DPD.EZCANCELFLAG 			= '0' -->
	<!-- 		AND DD.EZCANCELFLAG 			= '0'   -->
            
	<!-- /statement -->
	
	<!-- resultMap id="result.NWZC103002PMsg" class="NWZC103002PMsg" -->

		<!-- result property="distPk"			column="DIST_PK"				javaType="EZDPBigDecimalItem"/ -->
		<!-- result property="distPlnNum"		column="DIST_PLN_NUM"			javaType="EZDPStringItem"/ -->
		<!-- result property="distTmFrameNum"	column="DIST_TM_FRAME"			javaType="EZDPStringItem"/ -->
		<!-- result property="tmFrameFromDt"	column="TM_FRAME_FROM_DT"		javaType="EZDPDateItem"/ -->
		<!-- result property="tmFrameThruDt"	column="TM_FRAME_THRU_DT"		javaType="EZDPDateItem"/ -->
		<!-- result property="distStruSegPk"	column="DIST_STRU_SEG_PK"		javaType="EZDPBigDecimalItem"/ -->
		<!-- result property="avalQty"			column="DIST_AVAL_QTY"			javaType="EZDPBigDecimalItem"/ -->

	<!-- /resultMap -->
	

	<statement id="queryTmFrameFromDt" parameterClass="Map" resultMap="String">


		SELECT 	  
				DPF.TM_FRAME_FROM_DT
		FROM 	 
				SHPG_PLN			SP
				,SOFT_ALLOC  		SA
				,DIST_PLN_TM_FRAME  DPF

		WHERE 
				SP.GLBL_CMPY_CD 			= #glblCmpyCd#
			AND SP.TRX_SRC_TP_CD 			= #trxSrcTpCd#
			AND SP.TRX_HDR_NUM 				= #trxHdrNum#
			AND SP.TRX_LINE_NUM 			= #trxLineNum#
			AND SP.TRX_LINE_SUB_NUM 		= #trxLineSubNum#
			AND SP.SHPG_STS_CD 				= #shpgStsCd#
			AND SP.GLBL_CMPY_CD 			= SA.GLBL_CMPY_CD
			AND SP.TRX_SRC_TP_CD 			= SA.TRX_SRC_TP_CD 	
			AND SP.TRX_HDR_NUM 				= SA.TRX_HDR_NUM 	
			AND SP.TRX_LINE_NUM 			= SA.TRX_LINE_NUM
			AND SP.TRX_LINE_SUB_NUM 		= SA.TRX_LINE_SUB_NUM		
			AND DPF.GLBL_CMPY_CD 			= SA.GLBL_CMPY_CD		
			AND DPF.DIST_PLN_NUM 			= SA.DIST_PLN_NUM			
			AND DPF.DIST_TM_FRAME_NUM	 	= SA.DIST_TM_FRAME_NUM
			AND SP.EZCANCELFLAG 			= '0' 		
			AND SA.EZCANCELFLAG 			= '0' 	
			AND DPF.EZCANCELFLAG 			= '0' 			

	</statement>
	
	<statement id="getSoftAllocInfo" parameterClass="Map" resultMap="result.NWZC104001PMsg">
	
		SELECT
				 SA.SOFT_ALLOC_PK				AS SOFT_ALLOC_PK
				,SA.HARD_ALLOC_MDSE_CD			AS HARD_ALLOC_MDSE_CD
				,SA.HARD_ALLOC_INVTY_LOC_CD		AS HARD_ALLOC_INVTY_LOC_CD
				,SA.HARD_ALLOC_SHPG_SVC_LVL_CD	AS HARD_ALLOC_SHPG_SVC_LVL_CD
				,SA.HARD_ALLOC_AVAL_QTY			AS HARD_ALLOC_AVAL_QTY					
	   	FROM
			    SOFT_ALLOC SA
				,SOFT_ALLOC_AVAL_SEG SAA
				,DIST_PLN_TM_FRAME  DPF
        WHERE	
		        SA.GLBL_CMPY_CD             =   #glblCmpyCd# 
	<isEqual property="origFuncTpCd" compareValue="1"> 
		    AND SA.TRX_SRC_TP_CD            =   #trxSrcTpCd#   
		    AND SA.TRX_HDR_NUM              =   #trxHdrNum#         
		    AND SA.TRX_LINE_NUM             =   #trxLineNum#         
		    AND SA.TRX_LINE_SUB_NUM         =   #trxLineSubNum#  
	</isEqual>
	<isEqual property="origFuncTpCd" compareValue="3"> 
		    AND SA.SHPG_PLN_NUM            =    #shpgPlnNum#  
	</isEqual>
		    AND SA.HARD_ALLOC_AVAL_QTY	   &gt; 0	   
		    AND SAA.GLBL_CMPY_CD            =   SA.GLBL_CMPY_CD
		    AND SAA.TRX_SRC_TP_CD           =   SA.TRX_SRC_TP_CD
		    AND SAA.TRX_HDR_NUM             =   SA.TRX_HDR_NUM    
		    AND SAA.TRX_LINE_NUM            =   SA.TRX_LINE_NUM        
		    AND SAA.TRX_LINE_SUB_NUM        =	#settrxLineSubNum#   
		    AND SAA.DIST_PLN_NUM        	=   SA.DIST_PLN_NUM 
		    AND SAA.DIST_STRU_SEG_PK        =   SA.DIST_STRU_SEG_PK 
		    AND DPF.GLBL_CMPY_CD 			= 	SA.GLBL_CMPY_CD		
			AND DPF.DIST_PLN_NUM 			= 	SA.DIST_PLN_NUM			
			AND DPF.DIST_TM_FRAME_NUM	 	= 	SA.DIST_TM_FRAME_NUM
	<isNotEqual property="origFuncTpCd" compareValue="3">			
			AND DPF.TM_FRAME_FROM_DT	 	&lt;= #slsDt#  	
	</isNotEqual>
		    AND SA.EZCANCELFLAG 			= 	'0'
			AND SAA.EZCANCELFLAG 			= 	'0'
			AND DPF.EZCANCELFLAG 			= 	'0' 	
		    AND EXISTS (
	            	SELECT 
	            			* 
		            FROM 
		                    SHPG_PLN SP 
		            WHERE 
			                SP.SHPG_STS_CD          =   #shpgStsCd# 
			            AND SP.GLBL_CMPY_CD         =   SA.GLBL_CMPY_CD
			            AND SP.TRX_SRC_TP_CD        =   SA.TRX_SRC_TP_CD
			            AND SP.TRX_HDR_NUM          =   SA.TRX_HDR_NUM
			            AND SP.TRX_LINE_NUM         =   SA.TRX_LINE_NUM
			            AND SP.TRX_LINE_SUB_NUM     =   SA.TRX_LINE_SUB_NUM 
			           	AND SP.EZCANCELFLAG 		=   '0'
		            )
		ORDER BY     
				DPF.TM_FRAME_FROM_DT
				,SA.HARD_ALLOC_PRTY_NUM	       
				,SA.SOFT_ALLOC_TS
				
	</statement>
	
	<resultMap id="result.NWZC104001PMsg" class="NWZC104001PMsg">

		<result property="softAllocPk"				column="SOFT_ALLOC_PK"				javaType="EZDPBigDecimalItem"/>
		<result property="mdseCd_SA" 				column="HARD_ALLOC_MDSE_CD"			javaType="EZDPStringItem"/>
		<result property="invtyLocCd_SA" 			column="HARD_ALLOC_INVTY_LOC_CD"	javaType="EZDPStringItem"/>
		<result property="shpgSvcLvlCd_SA" 			column="HARD_ALLOC_SHPG_SVC_LVL_CD"	javaType="EZDPDateItem"/>
		<result property="xxRqstQty" 				column="HARD_ALLOC_AVAL_QTY"		javaType="EZDPBigDecimalItem"/>
	
	</resultMap>
	
	<statement id="queryShpgPlnForStsValidated" parameterClass="Map" >

		SELECT 	  
				SP.SHPG_PLN_NUM					AS SHPG_PLN_NUM
				,SA.SOFT_ALLOC_PK				AS SOFT_ALLOC_PK
		FROM 	 
				SHPG_PLN			SP
				,SOFT_ALLOC  		SA

		WHERE 
				SP.GLBL_CMPY_CD 			= #glblCmpyCd#
			AND SP.TRX_SRC_TP_CD 			= #trxSrcTpCd#
			AND SP.TRX_HDR_NUM 				= #trxHdrNum#
			AND SP.TRX_LINE_SUB_NUM 			&lt;&gt;#trxLineSubNumSetMdse#
			AND SP.SHPG_STS_CD 				= #shpgStsCd#
			AND SP.GLBL_CMPY_CD 			= SA.GLBL_CMPY_CD(+)
			AND SP.TRX_SRC_TP_CD			= SA.TRX_SRC_TP_CD(+)
			AND SP.TRX_HDR_NUM  			= SA.TRX_HDR_NUM(+)
			AND SP.TRX_LINE_NUM 			= SA.TRX_LINE_NUM(+) 
			AND SP.TRX_LINE_SUB_NUM			= SA.TRX_LINE_SUB_NUM(+)
			AND SP.EZCANCELFLAG 			= '0'
			AND SA.EZCANCELFLAG(+) 			= '0'
	</statement>
	
	<statement id="queryShpgPlnForStsHardAlloc" parameterClass="Map" resultMap="String">

		SELECT 	  
				SP.SHPG_PLN_NUM					AS SHPG_PLN_NUM
		FROM 	 
				SHPG_PLN			SP

		WHERE 
				SP.GLBL_CMPY_CD 			= #glblCmpyCd#
			AND SP.TRX_SRC_TP_CD 			= #trxSrcTpCd#
			AND SP.TRX_HDR_NUM 				= #trxHdrNum#
			AND SP.TRX_LINE_SUB_NUM 			&lt;&gt;#trxLineSubNumSetMdse#
			AND SP.SHPG_STS_CD 				= #shpgStsCd#
			AND SP.EZCANCELFLAG 			= '0'			

	</statement>
	
	
	<statement id="queryDistStruSegMdseAsg" parameterClass="Map" resultClass="String">

		SELECT 
				SAA.GLBL_CMPY_CD AS GLBL_CMPY_CD
		FROM 	
				CPO_DTL CD
				,SOFT_ALLOC_AVAL_SEG SAA
				,MDSE M
		WHERE 
				CD.GLBL_CMPY_CD 			= #glblCmpyCd#
			AND CD.CPO_ORD_NUM 				= #trxHdrNum#
			AND CD.CPO_DTL_LINE_NUM 		= #trxLineNum#
			AND CD.CPO_DTL_LINE_SUB_NUM 	= #trxLineSubNum#
			AND CD.EZCANCELFLAG 			= '0'
			AND CD.GLBL_CMPY_CD 			= SAA.GLBL_CMPY_CD
			AND CD.CPO_ORD_NUM 				= SAA.TRX_HDR_NUM
			AND CD.CPO_DTL_LINE_NUM 		= SAA.TRX_LINE_NUM
			AND CD.CPO_DTL_LINE_SUB_NUM 	= SAA.TRX_LINE_SUB_NUM
			AND SAA.TRX_SRC_TP_CD 			= #trxSrcTpCd#
			AND SAA.EZCANCELFLAG 			= '0'
			AND CD.GLBL_CMPY_CD 			= M.GLBL_CMPY_CD
			AND CD.MDSE_CD 					= M.MDSE_CD
			AND M.EZCANCELFLAG 				= '0'
			AND M.INVTY_SOFT_ALLOC_TP_CD 	= #invtySoftAllocTpCd#
			AND NOT EXISTS (
				SELECT 
						*
				FROM 
						DIST_STRU_SEG_MDSE_ASG DSM
				WHERE 
						DSM.GLBL_CMPY_CD 			= SAA.GLBL_CMPY_CD
					AND DSM.DIST_STRU_SEG_PK 		= SAA.DIST_STRU_SEG_PK
					AND ( DSM.MDSE_CD = CD.MDSE_CD OR DSM.ORD_TAKE_MDSE_CD = SUBSTR(CD.MDSE_CD,1,8))
					AND DSM.DEF_SOFT_ALLOC_TP_CD 	= #softAllocTpCd#
					AND DSM.EZCANCELFLAG 			= '0'
			)
		UNION ALL
		SELECT 
				SAA.GLBL_CMPY_CD AS GLBL_CMPY_CD
		FROM 	
				CPO_DTL CD
				,SOFT_ALLOC_AVAL_SEG SAA
				,ORD_TAKE_MDSE OTM
				,MDSE M
		WHERE 
				CD.GLBL_CMPY_CD 				= #glblCmpyCd#
			AND CD.CPO_ORD_NUM 					= #trxHdrNum#
			AND CD.CPO_DTL_LINE_NUM 			= #trxLineNum#
			AND CD.CPO_DTL_LINE_SUB_NUM 		= #trxLineSubNum#
			AND CD.EZCANCELFLAG 				= '0'
			AND CD.GLBL_CMPY_CD 				= SAA.GLBL_CMPY_CD
			AND CD.CPO_ORD_NUM 					= SAA.TRX_HDR_NUM
			AND CD.CPO_DTL_LINE_NUM 			= SAA.TRX_LINE_NUM
			AND CD.CPO_DTL_LINE_SUB_NUM 		= SAA.TRX_LINE_SUB_NUM
			AND SAA.TRX_SRC_TP_CD 				= #trxSrcTpCd#
			AND SAA.EZCANCELFLAG 				= '0'
			AND CD.GLBL_CMPY_CD 				= OTM.GLBL_CMPY_CD
			AND CD.MDSE_CD 						= OTM.ORD_TAKE_MDSE_CD
			AND OTM.EZCANCELFLAG 				= '0'
			AND OTM.GLBL_CMPY_CD 				= M.GLBL_CMPY_CD
			AND OTM.MDSE_CD 					= M.MDSE_CD
			AND M.EZCANCELFLAG 					= '0'
			AND M.INVTY_SOFT_ALLOC_TP_CD 		= #invtySoftAllocTpCd#
			AND NOT EXISTS (
				SELECT 
						*
				FROM 
						DIST_STRU_SEG_MDSE_ASG DSM
				WHERE 
						DSM.GLBL_CMPY_CD = SAA.GLBL_CMPY_CD
					AND DSM.DIST_STRU_SEG_PK = SAA.DIST_STRU_SEG_PK
					AND DSM.ORD_TAKE_MDSE_CD = CD.MDSE_CD
					AND DSM.EZCANCELFLAG = '0'
			)
	</statement>
	
	
	
	<statement id="checkSoftAllocBackOrder" parameterClass="Map" resultClass="String">

<!-- ******* Whole Sales Regular 10 Digit Item/8Digit OrderTake ******** -->
<!--******* Whole Sales  SetComponent ******* -->
		SELECT 
			SP.SHPG_PLN_NUM AS SHPG_PLN_NUM
		FROM 
		  	  SHPG_PLN 					SP
			, CPO_DTL					CD
            , MDSE 						M_SET
		WHERE 
				SP.GLBL_CMPY_CD			= #glblCmpyCd#
			AND SP.MDSE_CD 				LIKE #mdseCd# ||'%'
			AND SP.TRX_SRC_TP_CD 		= #trxSrcTpCd#									
			AND SP.SHPG_STS_CD 			= #Validated# 									
		    AND SP.TRX_LINE_SUB_NUM 	&lt;&gt;  #trxLineSubNumSetMdse#						<!-- Not SetComponent -->
			AND SP.STK_STS_CD 			= #stkStsCdGood# 
		   	AND SP.PO_REQ_FLG           = 'N'
		   	AND SP.SOFT_ALLOC_QTY 		&lt;&gt; SP.ORD_QTY
			AND	NOT EXISTS	 (
			            SELECT  
						    * 
	 				    FROM	
						     HLD 			H
						    ,HLD_PROC_DFN 	HPD 
						    ,HLD_RSN 		HR 						    
					    WHERE
					    			SP.GLBL_CMPY_CD              = H.GLBL_CMPY_CD		    		
			                    AND (
				                    	(			                    	
				                    			SP.TRX_HDR_NUM           = H.CPO_ORD_NUM
				                    		AND	H.CPO_DTL_LINE_NUM		 IS NULL
			                    			AND	H.CPO_DTL_LINE_SUB_NUM	 IS NULL
			                    			AND	HR.HLD_LVL_CD 			 = #hldLvlCd1#
			                    			
	                   					)
			                    	OR  (
				                    			SP.TRX_HDR_NUM           = H.CPO_ORD_NUM
				                    		AND	SP.TRX_LINE_NUM 		 = H.CPO_DTL_LINE_NUM
			                    			AND	SP.TRX_LINE_SUB_NUM 	 = H.CPO_DTL_LINE_SUB_NUM
			                    			AND	HR.HLD_LVL_CD			 IN 
			                    		<iterate property="hlbLvlCdList" var="hlbLvlCd[]" open="(" close=")" conjunction=",">
			                    			#hlbLvlCd[]#
			                    		</iterate>
			                    		)

							        OR  (
					                    		SP.TRX_HDR_NUM           = H.CPO_ORD_NUM
					                    	AND	SP.TRX_LINE_NUM 		 = H.CPO_DTL_LINE_NUM
								            AND	H.CPO_DTL_LINE_SUB_NUM	 = #trxLineSubNumSetMdse#
								            AND	HR.HLD_LVL_CD			 IN 
							            <iterate property="hlbLvlCdList" var="hlbLvlCd[]" open="(" close=")" conjunction=",">
							                #hlbLvlCd[]#
							            </iterate>
							             )
			                    	)
			                    AND H.REL_FLG					 = 'N'
			    		        AND H.GLBL_CMPY_CD               = HR.GLBL_CMPY_CD			
			                    AND H.HLD_RSN_CD                 = HR.HLD_RSN_CD 			    		                            	
			    		        AND H.GLBL_CMPY_CD               = HPD.GLBL_CMPY_CD
			                    AND H.HLD_RSN_CD                 = HPD.HLD_RSN_CD 
			                    AND HPD.REL_PNT_SOFT_ALLOC_FLG   = #relPntSoftAllocFlg# 	
			    		        AND H.EZCANCELFLAG               = '0'
			    		        AND HR.EZCANCELFLAG              = '0'
			    		        AND HPD.EZCANCELFLAG             = '0'
		    	) 	
			AND NOT (
							SP.TRX_SRC_TP_CD	= #trxSrcTpCd#
						AND SP.TRX_HDR_NUM 		= #trxHdrNum#
						AND SP.TRX_LINE_NUM		= #trxLineNum#
						AND SP.TRX_LINE_SUB_NUM = #trxLineSubNum#	
					)
			AND SP.SET_MDSE_CD					= M_SET.MDSE_CD(+) 							<!-- SetItemType None-->
			AND M_SET.INVTY_DIST_TP_CD (+)	    = #distTpNone#	
			AND SP.GLBL_CMPY_CD			= CD.GLBL_CMPY_CD
			AND SP.TRX_HDR_NUM			= CD.CPO_ORD_NUM
			AND SP.TRX_LINE_NUM			= CD.CPO_DTL_LINE_NUM
			AND SP.TRX_LINE_SUB_NUM	 	= CD.CPO_DTL_LINE_SUB_NUM
			AND CD.CPO_ORD_SUBMT_TS 	&lt;= #cpoOrdTs# 			
			AND CD.EZCANCELFLAG 		= '0'
			AND SP.EZCANCELFLAG 		= '0'
			AND ROWNUM 					= 1
				<!-- ******* Whole Sales SetItem ******** -->
		UNION ALL
		SELECT 
    		SP.SHPG_PLN_NUM	SHPG_PLN_NUM
		FROM
			 SHPG_PLN SP
			,CPO_DTL  CD
		WHERE
		 	SP.GLBL_CMPY_CD             = #glblCmpyCd#
		    AND SP.MDSE_CD              LIKE  #mdseCd# ||'%'
		    AND SP.TRX_SRC_TP_CD        = #trxSrcTpCd#													
		    AND SP.SHPG_STS_CD          = #Validated# 														
		    AND SP.SET_MDSE_CD          IS NULL													
		    AND SP.TRX_LINE_SUB_NUM     = #trxLineSubNumSetMdse#	
		    AND SP.PO_REQ_FLG           = 'N'													
		    AND SP.SOFT_ALLOC_QTY 		&lt;&gt; SP.ORD_QTY											
			AND	NOT EXISTS	 (
			           			            SELECT  
						    * 
	 				    FROM	
						     HLD 			H
						    ,HLD_PROC_DFN 	HPD 
						    ,HLD_RSN 		HR 						    
					    WHERE
					    			SP.GLBL_CMPY_CD              = H.GLBL_CMPY_CD		    		
			                    AND (
				                    	(			                    	
				                    			SP.TRX_HDR_NUM           = H.CPO_ORD_NUM
				                    		AND	H.CPO_DTL_LINE_NUM		 IS NULL
			                    			AND	H.CPO_DTL_LINE_SUB_NUM	 IS NULL
			                    			AND	HR.HLD_LVL_CD 			 = #hldLvlCd1#
			                    			
	                   					)
			                    	OR  (
				                    			SP.TRX_HDR_NUM           = H.CPO_ORD_NUM
				                    		AND	SP.TRX_LINE_NUM 		 = H.CPO_DTL_LINE_NUM
			                    			AND	SP.TRX_LINE_SUB_NUM 	 = H.CPO_DTL_LINE_SUB_NUM
			                    			AND	HR.HLD_LVL_CD			 IN 
			                    		<iterate property="hlbLvlCdList" var="hlbLvlCd[]" open="(" close=")" conjunction=",">
			                    			#hlbLvlCd[]#
			                    		</iterate>
			                    		)
			                    	)
			                    AND H.REL_FLG					 = 'N'
			                    AND H.GLBL_CMPY_CD               = HR.GLBL_CMPY_CD			
			                    AND H.HLD_RSN_CD                 = HR.HLD_RSN_CD 			    		                            	
			    		        AND H.GLBL_CMPY_CD               = HPD.GLBL_CMPY_CD
			                    AND H.HLD_RSN_CD                 = HPD.HLD_RSN_CD 
			                    AND HPD.REL_PNT_SOFT_ALLOC_FLG   = #relPntSoftAllocFlg# 	
			    		        AND H.EZCANCELFLAG               = '0'
			    		        AND HR.EZCANCELFLAG              = '0'
			    		        AND HPD.EZCANCELFLAG             = '0'
		    	) 	
			AND NOT (
							SP.TRX_SRC_TP_CD	= #trxSrcTpCd#
						AND SP.TRX_HDR_NUM 		= #trxHdrNum#
						AND SP.TRX_LINE_NUM		= #trxLineNum#
						AND SP.TRX_LINE_SUB_NUM = #trxLineSubNum#	
					)
			AND SP.STK_STS_CD 			= #stkStsCdGood# 								
			AND SP.GLBL_CMPY_CD			= CD.GLBL_CMPY_CD
			AND SP.TRX_HDR_NUM			= CD.CPO_ORD_NUM
			AND SP.TRX_LINE_NUM			= CD.CPO_DTL_LINE_NUM
			AND SP.TRX_LINE_SUB_NUM	 	= CD.CPO_DTL_LINE_SUB_NUM
			AND CD.CPO_ORD_SUBMT_TS 	&lt;= #cpoOrdTs# 			
			AND CD.EZCANCELFLAG 		= '0'
			AND SP.EZCANCELFLAG 		= '0'
			AND ROWNUM 					= 1

	</statement>

	<statement id="querySoftAllocHold" parameterClass="Map" resultMap="String">

		SELECT  
			H.GLBL_CMPY_CD	GLBL_CMPY_CD
	 	FROM	
			HLD 			H
			,HLD_PROC_DFN 	HPD 
		    ,HLD_RSN 		HR 	
		WHERE
				H.GLBL_CMPY_CD              = #glblCmpyCd#
			AND (
				        (			                    	
				       		H.CPO_ORD_NUM            = #trxHdrNum# 
				       	AND	H.CPO_DTL_LINE_NUM		 IS NULL
			           	AND	H.CPO_DTL_LINE_SUB_NUM	 IS NULL
			           	AND	HR.HLD_LVL_CD			 = #hldLvlCd1#
					    )
			        OR  (
				            H.CPO_ORD_NUM            = #trxHdrNum# 
				        AND	H.CPO_DTL_LINE_NUM		 = #trxLineNum#
			            AND	H.CPO_DTL_LINE_SUB_NUM	 = #trxLinesSubNum#
			            AND	HR.HLD_LVL_CD			 IN 
			            <iterate property="hlbLvlCdList" var="hlbLvlCd[]" open="(" close=")" conjunction=",">
			                #hlbLvlCd[]#
			            </iterate>
			             )
			        OR  (
				            H.CPO_ORD_NUM            = #trxHdrNum# 
				        AND	H.CPO_DTL_LINE_NUM		 = #trxLineNum#
			            AND	H.CPO_DTL_LINE_SUB_NUM	 = #trxLineSubNumSetMdse#
			            AND	HR.HLD_LVL_CD			 IN 
			            <iterate property="hlbLvlCdList" var="hlbLvlCd[]" open="(" close=")" conjunction=",">
			                #hlbLvlCd[]#
			            </iterate>
			             )
			     )
			AND H.REL_FLG					 = 'N'
			AND H.GLBL_CMPY_CD               = HR.GLBL_CMPY_CD			
			AND H.HLD_RSN_CD                 = HR.HLD_RSN_CD 		                    	
			AND H.GLBL_CMPY_CD               = HPD.GLBL_CMPY_CD
			AND H.HLD_RSN_CD                 = HPD.HLD_RSN_CD 
			AND HPD.REL_PNT_SOFT_ALLOC_FLG   = #relPntSoftAllocFlg# 
			AND H.EZCANCELFLAG               = '0'
			AND HR.EZCANCELFLAG              = '0'
			AND HPD.EZCANCELFLAG             = '0'

	</statement>
	
	<statement id="cntHardAllocHlds" parameterClass="Map" resultMap="BigDecimal">
		SELECT
			COUNT(*)

		FROM
		    HLD_PROC_DFN	HPD
		  ,	HLD_RSN			HR
		  , HLD				H

		WHERE
			    HPD.GLBL_CMPY_CD             = #glblCmpyCd#
			AND HPD.REL_PNT_HARD_ALLOC_FLG   = 'Y'
			AND HPD.EZCANCELFLAG             = '0'

			AND HR.GLBL_CMPY_CD              = HPD.GLBL_CMPY_CD
			AND HR.HLD_RSN_CD                = HPD.HLD_RSN_CD
			AND HR.EZCANCELFLAG              = '0'
			
			AND H.GLBL_CMPY_CD				 = HR.GLBL_CMPY_CD
			AND H.HLD_RSN_CD				 = HR.HLD_RSN_CD
			AND H.REL_FLG					 = 'N'
			AND H.EZCANCELFLAG               = '0'

			AND (
				   		(			                    	
				       		H.CPO_ORD_NUM            = #trxHdrNum# 
				       	AND	H.CPO_DTL_LINE_NUM		  IS NULL
			           	AND	H.CPO_DTL_LINE_SUB_NUM	  IS NULL
			          	AND	HR.HLD_LVL_CD 			  = #hldLvlCd1#
						)
			        OR  (
				           	H.CPO_ORD_NUM            = #trxHdrNum# 
				        AND	H.CPO_DTL_LINE_NUM		 = #trxLineNum#
			            AND	H.CPO_DTL_LINE_SUB_NUM	 = #trxLinesSubNum#
			            AND	HR.HLD_LVL_CD			 IN 
			            <iterate property="hlbLvlCdList" var="hlbLvlCd[]" open="(" close=")" conjunction=",">
			                #hlbLvlCd[]#
			            </iterate>
			             )
			        OR  (
				            H.CPO_ORD_NUM            = #trxHdrNum# 
				        AND	H.CPO_DTL_LINE_NUM		 = #trxLineNum#
			            AND	H.CPO_DTL_LINE_SUB_NUM	 = #trxLineSubNumSetMdse#
			            AND	HR.HLD_LVL_CD			 IN 
			            <iterate property="hlbLvlCdList" var="hlbLvlCd[]" open="(" close=")" conjunction=",">
			                #hlbLvlCd[]#
			            </iterate>
			             )
			    )
			    
			AND ROWNUM <![CDATA[ <= ]]> 1
	</statement>
<!-- Add Start S21_NA#5872(L3#001) -->
    <statement id="getAllocTpFromWH_MDSE" parameterClass="Map" resultClass="String">
        SELECT
            MWC.INVTY_HARD_ALLOC_TP_CD  INVTY_HARD_ALLOC_TP_CD
        FROM 
            RTL_SWH         RS
           ,ORD_TAKE_MDSE   OTM
           ,MDSE_WH_COND    MWC
        WHERE 
            RS.GLBL_CMPY_CD         = #glblCmpyCd#
        AND RS.INVTY_LOC_CD         = #invtyLocCd#
        AND RS.EZCANCELFLAG         = '0'
        AND RS.GLBL_CMPY_CD         = OTM.GLBL_CMPY_CD(+)
        AND OTM.ORD_TAKE_MDSE_CD(+) = SUBSTR(#mdseCd#, 1, 8)
        AND OTM.EZCANCELFLAG(+)     = '0'
        
        AND RS.GLBL_CMPY_CD         = MWC.GLBL_CMPY_CD
        AND RS.RTL_WH_CD            = MWC.RTL_WH_CD
        AND (CASE WHEN OTM.ORD_TAKE_MDSE_CD = #mdseCd# THEN OTM.MDSE_CD
                  ELSE #mdseCd#
                  END                   = MWC.MDSE_CD
               OR OTM.ORD_TAKE_MDSE_CD  = MWC.MDSE_CD)
        AND (RS.RTL_SWH_CD          = MWC.RTL_SWH_CD
            OR (   MWC.RTL_SWH_CD      = '*'
               AND NOT EXISTS ( SELECT 1 FROM MDSE_WH_COND MWC_B
                                WHERE MWC_B.GLBL_CMPY_CD    = RS.GLBL_CMPY_CD
                                AND   MWC_B.RTL_WH_CD       = RS.RTL_WH_CD
                                AND  (CASE WHEN OTM.ORD_TAKE_MDSE_CD = #mdseCd# THEN OTM.MDSE_CD
                                           ELSE #mdseCd#
                                           END                  = MWC_B.MDSE_CD
                                        OR OTM.ORD_TAKE_MDSE_CD = MWC_B.MDSE_CD)
                                AND   MWC_B.RTL_SWH_CD      = RS.RTL_SWH_CD
                                AND   MWC_B.EZCANCELFLAG    = '0'
                                )
                )
            )
        AND MWC.EZCANCELFLAG       = '0'
    </statement>

    <statement id="getAllocTpFromBU_WH_CATG" parameterClass="Map" resultClass="Map">
        SELECT
            MWC.INVTY_HARD_ALLOC_TP_CD      INVTY_HARD_ALLOC_TP_CD
           ,MWC.TM_FENCE_DAYS_AOT           TM_FENCE_DAYS_AOT
        FROM
             CPO                    C
            ,CPO_DTL                CD
            ,DS_ORD_TP_PROC_DFN     DOTPD
            ,MDSE_WH_COND           MWC
        WHERE
            C.GLBL_CMPY_CD          = #glblCmpyCd#
        AND C.CPO_ORD_NUM           = #cpoOrdNum#
        AND C.EZCANCELFLAG          = '0'
        AND C.GLBL_CMPY_CD          = CD.GLBL_CMPY_CD
        AND C.CPO_ORD_NUM           = CD.CPO_ORD_NUM
        AND CD.CPO_DTL_LINE_NUM     = #cpoDtlLineNum#
        AND CD.CPO_DTL_LINE_SUB_NUM = #cpoDtlLineSubNum#
        AND CD.EZCANCELFLAG         = '0'
        AND C.GLBL_CMPY_CD          = DOTPD.GLBL_CMPY_CD
        AND C.DS_ORD_TP_CD          = DOTPD.DS_ORD_TP_CD
        AND DOTPD.EZCANCELFLAG      = '0'
        
        AND CD.GLBL_CMPY_CD         = MWC.GLBL_CMPY_CD
        AND DOTPD.LINE_BIZ_TP_CD    = MWC.LINE_BIZ_TP_CD
        AND CD.RTL_WH_CD            = MWC.RTL_WH_CD
        AND (
               (    CD.RTL_SWH_CD       = MWC.RTL_SWH_CD
                AND C.DS_ORD_CATG_CD    = MWC.DS_ORD_CATG_CD
                )
            OR (    MWC.RTL_SWH_CD      = '*'
                AND C.DS_ORD_CATG_CD    = MWC.DS_ORD_CATG_CD
                AND NOT EXISTS ( SELECT 1 FROM MDSE_WH_COND MWC_B
                                WHERE MWC_B.GLBL_CMPY_CD    = CD.GLBL_CMPY_CD
                                AND   MWC_B.LINE_BIZ_TP_CD  = DOTPD.LINE_BIZ_TP_CD 
                                AND   MWC_B.RTL_WH_CD       = CD.RTL_WH_CD
                                AND   MWC_B.RTL_SWH_CD      = CD.RTL_SWH_CD
                                AND   MWC_B.DS_ORD_CATG_CD  = C.DS_ORD_CATG_CD
                                AND   MWC_B.EZCANCELFLAG    = '0'
                                )
                )
            OR (    CD.RTL_SWH_CD       = MWC.RTL_SWH_CD
                AND MWC.DS_ORD_CATG_CD  = '*'
                AND NOT EXISTS ( SELECT 1 FROM MDSE_WH_COND MWC_B
                                WHERE MWC_B.GLBL_CMPY_CD    = CD.GLBL_CMPY_CD
                                AND   MWC_B.LINE_BIZ_TP_CD  = DOTPD.LINE_BIZ_TP_CD 
                                AND   MWC_B.RTL_WH_CD       = CD.RTL_WH_CD 
                                AND  (  MWC_B.RTL_SWH_CD        = CD.RTL_SWH_CD
                                    OR  MWC_B.RTL_SWH_CD        = '*'
                                      )
                                AND MWC_B.DS_ORD_CATG_CD    = C.DS_ORD_CATG_CD
                                AND MWC_B.EZCANCELFLAG      = '0'
                                )
                )
            OR (    MWC.RTL_SWH_CD         = '*'
                AND MWC.DS_ORD_CATG_CD     = '*'
                AND NOT EXISTS ( SELECT 1 FROM MDSE_WH_COND MWC_B
                                WHERE MWC_B.GLBL_CMPY_CD    = CD.GLBL_CMPY_CD
                                AND   MWC_B.LINE_BIZ_TP_CD  = DOTPD.LINE_BIZ_TP_CD 
                                AND   MWC_B.RTL_WH_CD       = CD.RTL_WH_CD 
                                AND  (  
                                        (   MWC_B.RTL_SWH_CD        = CD.RTL_SWH_CD
                                        AND MWC_B.DS_ORD_CATG_CD    = C.DS_ORD_CATG_CD
                                        )
                                    OR  (   MWC_B.RTL_SWH_CD        = '*'
                                        AND MWC_B.DS_ORD_CATG_CD    = C.DS_ORD_CATG_CD
                                        )
                                    OR  (   MWC_B.RTL_SWH_CD        = CD.RTL_SWH_CD
                                        AND MWC_B.DS_ORD_CATG_CD    = '*'
                                        )
                                     )
                                AND   MWC_B.EZCANCELFLAG    = '0'
                                )
                )   
            )
        AND MWC.EZCANCELFLAG       = '0'
    </statement>
<!-- Add End S21_NA#5872(L3#001) -->
</sqlMap>
