//This file was automatically generated by Business Component Interface Definition Document (Define Business Application Global Area) and XLA200710010.
// Generated on    :20171226035406000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0360_BSMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NSAL0360;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL0360 Business Application Global Area Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL0360_BSMsg extends EZDSMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_CHK_BOX_B1*/
	public final EZDSStringItem              xxChkBox_B1;

    /** DS_CONTR_BLLG_MTR_PK_B1*/
	public final EZDSBigDecimalItem              dsContrBllgMtrPk_B1;

    /** MTR_LB_NM_B1*/
	public final EZDSStringItem              mtrLbNm_B1;

    /** DS_CONTR_BLLG_SCHD_MTR_PK_B1*/
	public final EZDSBigDecimalItem              dsContrBllgSchdMtrPk_B1;

    /** DS_CONTR_BLLG_SCHD_SMRY_PK_B1*/
	public final EZDSBigDecimalItem              dsContrBllgSchdSmryPk_B1;

    /** DS_CONTR_BLLG_SCHD_SQ_NUM_B1*/
	public final EZDSStringItem              dsContrBllgSchdSqNum_B1;

    /** DS_CONTR_PRC_EFF_PK_B1*/
	public final EZDSBigDecimalItem              dsContrPrcEffPk_B1;

    /** DS_CONTR_PRC_EFF_SQ_NUM_B1*/
	public final EZDSBigDecimalItem              dsContrPrcEffSqNum_B1;

    /** PER_SCHD_NUM_B1*/
	public final EZDSBigDecimalItem              perSchdNum_B1;

    /** BLLG_CYCLE_UOM_CD_B1*/
	public final EZDSStringItemArray              bllgCycleUomCd_B1;

    /** BLLG_CYCLE_UOM_NM_B2*/
	public final EZDSStringItemArray              bllgCycleUomNm_B2;

    /** PER_BLLG_CYCLE_CD_B1*/
	public final EZDSStringItem              perBllgCycleCd_B1;

    /** BLLG_SCHD_FROM_DT_B1*/
	public final EZDSDateItem              bllgSchdFromDt_B1;

    /** BLLG_SCHD_THRU_DT_B1*/
	public final EZDSDateItem              bllgSchdThruDt_B1;

    /** BLLG_CYCLE_CD_B1*/
	public final EZDSStringItem              bllgCycleCd_B1;

    /** BLLG_CYCLE_DESC_TXT_B1*/
	public final EZDSStringItem              bllgCycleDescTxt_B1;

    /** BLLG_CYCLE_START_MTH_B1*/
	public final EZDSStringItem              bllgCycleStartMth_B1;

    /** XS_MTR_COPY_QTY_B1*/
	public final EZDSBigDecimalItem              xsMtrCopyQty_B1;

    /** XS_MTR_COPY_QTY_BS*/
	public final EZDSBigDecimalItem              xsMtrCopyQty_BS;

    /** XS_MTR_AMT_RATE_B1*/
	public final EZDSBigDecimalItem              xsMtrAmtRate_B1;

    /** CCY_CD_B1*/
	public final EZDSStringItem              ccyCd_B1;

    /** CONTR_XS_COPY_PK_B1*/
	public final EZDSBigDecimalItem              contrXsCopyPk_B1;

    /** XS_MTR_FIRST_FLG_B1*/
	public final EZDSStringItem              xsMtrFirstFlg_B1;

    /** INV_FLG_B1*/
	public final EZDSStringItem              invFlg_B1;

    /** XX_DTL_CNT_B1*/
	public final EZDSBigDecimalItem              xxDtlCnt_B1;

    /** _EZUpdateDateTime_B1*/
	public final EZDSStringItem              ezUpTime_B1;

    /** _EZUpTimeZone_B1*/
	public final EZDSStringItem              ezUpTimeZone_B1;

    /** XX_REC_HIST_CRAT_TS_B1*/
	public final EZDSStringItem              xxRecHistCratTs_B1;

    /** XX_REC_HIST_CRAT_BY_NM_B1*/
	public final EZDSStringItem              xxRecHistCratByNm_B1;

    /** XX_REC_HIST_UPD_TS_B1*/
	public final EZDSStringItem              xxRecHistUpdTs_B1;

    /** XX_REC_HIST_UPD_BY_NM_B1*/
	public final EZDSStringItem              xxRecHistUpdByNm_B1;

    /** XX_REC_HIST_TBL_NM_B1*/
	public final EZDSStringItem              xxRecHistTblNm_B1;

    /** _EZUpdateDateTime_BM*/
	public final EZDSStringItem              ezUpTime_BM;

    /** _EZUpTimeZone_BM*/
	public final EZDSStringItem              ezUpTimeZone_BM;


	/**
	 * NSAL0360_BSMsg is constructor.
	 * The initialization when the instance of NSAL0360_BSMsg is generated.
	 */
	public NSAL0360_BSMsg() {
		this(false, -1);
	}

	/**
	 * NSAL0360_BSMsg is constructor.
	 * The initialization when the instance of NSAL0360_BSMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL0360_BSMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxChkBox_B1 = (EZDSStringItem)newItem("xxChkBox_B1");
		dsContrBllgMtrPk_B1 = (EZDSBigDecimalItem)newItem("dsContrBllgMtrPk_B1");
		mtrLbNm_B1 = (EZDSStringItem)newItem("mtrLbNm_B1");
		dsContrBllgSchdMtrPk_B1 = (EZDSBigDecimalItem)newItem("dsContrBllgSchdMtrPk_B1");
		dsContrBllgSchdSmryPk_B1 = (EZDSBigDecimalItem)newItem("dsContrBllgSchdSmryPk_B1");
		dsContrBllgSchdSqNum_B1 = (EZDSStringItem)newItem("dsContrBllgSchdSqNum_B1");
		dsContrPrcEffPk_B1 = (EZDSBigDecimalItem)newItem("dsContrPrcEffPk_B1");
		dsContrPrcEffSqNum_B1 = (EZDSBigDecimalItem)newItem("dsContrPrcEffSqNum_B1");
		perSchdNum_B1 = (EZDSBigDecimalItem)newItem("perSchdNum_B1");
		bllgCycleUomCd_B1 = (EZDSStringItemArray)newItemArray("bllgCycleUomCd_B1");
		bllgCycleUomNm_B2 = (EZDSStringItemArray)newItemArray("bllgCycleUomNm_B2");
		perBllgCycleCd_B1 = (EZDSStringItem)newItem("perBllgCycleCd_B1");
		bllgSchdFromDt_B1 = (EZDSDateItem)newItem("bllgSchdFromDt_B1");
		bllgSchdThruDt_B1 = (EZDSDateItem)newItem("bllgSchdThruDt_B1");
		bllgCycleCd_B1 = (EZDSStringItem)newItem("bllgCycleCd_B1");
		bllgCycleDescTxt_B1 = (EZDSStringItem)newItem("bllgCycleDescTxt_B1");
		bllgCycleStartMth_B1 = (EZDSStringItem)newItem("bllgCycleStartMth_B1");
		xsMtrCopyQty_B1 = (EZDSBigDecimalItem)newItem("xsMtrCopyQty_B1");
		xsMtrCopyQty_BS = (EZDSBigDecimalItem)newItem("xsMtrCopyQty_BS");
		xsMtrAmtRate_B1 = (EZDSBigDecimalItem)newItem("xsMtrAmtRate_B1");
		ccyCd_B1 = (EZDSStringItem)newItem("ccyCd_B1");
		contrXsCopyPk_B1 = (EZDSBigDecimalItem)newItem("contrXsCopyPk_B1");
		xsMtrFirstFlg_B1 = (EZDSStringItem)newItem("xsMtrFirstFlg_B1");
		invFlg_B1 = (EZDSStringItem)newItem("invFlg_B1");
		xxDtlCnt_B1 = (EZDSBigDecimalItem)newItem("xxDtlCnt_B1");
		ezUpTime_B1 = (EZDSStringItem)newItem("ezUpTime_B1");
		ezUpTimeZone_B1 = (EZDSStringItem)newItem("ezUpTimeZone_B1");
		xxRecHistCratTs_B1 = (EZDSStringItem)newItem("xxRecHistCratTs_B1");
		xxRecHistCratByNm_B1 = (EZDSStringItem)newItem("xxRecHistCratByNm_B1");
		xxRecHistUpdTs_B1 = (EZDSStringItem)newItem("xxRecHistUpdTs_B1");
		xxRecHistUpdByNm_B1 = (EZDSStringItem)newItem("xxRecHistUpdByNm_B1");
		xxRecHistTblNm_B1 = (EZDSStringItem)newItem("xxRecHistTblNm_B1");
		ezUpTime_BM = (EZDSStringItem)newItem("ezUpTime_BM");
		ezUpTimeZone_BM = (EZDSStringItem)newItem("ezUpTimeZone_BM");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL0360_BSMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL0360_BSMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxChkBox_B1", "xxChkBox_B1", "B1", null, TYPE_HANKAKUEIJI, "1", null},
	{"dsContrBllgMtrPk_B1", "dsContrBllgMtrPk_B1", "B1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"mtrLbNm_B1", "mtrLbNm_B1", "B1", null, TYPE_HANKAKUEISU, "30", null},
	{"dsContrBllgSchdMtrPk_B1", "dsContrBllgSchdMtrPk_B1", "B1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrBllgSchdSmryPk_B1", "dsContrBllgSchdSmryPk_B1", "B1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrBllgSchdSqNum_B1", "dsContrBllgSchdSqNum_B1", "B1", null, TYPE_HANKAKUEISU, "3", null},
	{"dsContrPrcEffPk_B1", "dsContrPrcEffPk_B1", "B1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrPrcEffSqNum_B1", "dsContrPrcEffSqNum_B1", "B1", null, TYPE_SEISU_SYOSU, "4", "0"},
	{"perSchdNum_B1", "perSchdNum_B1", "B1", null, TYPE_SEISU_SYOSU, "4", "0"},
	{"bllgCycleUomCd_B1", "bllgCycleUomCd_B1", "B1", "99", TYPE_HANKAKUEISU, "1", null},
	{"bllgCycleUomNm_B2", "bllgCycleUomNm_B2", "B2", "99", TYPE_HANKAKUEISU, "30", null},
	{"perBllgCycleCd_B1", "perBllgCycleCd_B1", "B1", null, TYPE_HANKAKUEISU, "1", null},
	{"bllgSchdFromDt_B1", "bllgSchdFromDt_B1", "B1", null, TYPE_NENTSUKIHI, "8", null},
	{"bllgSchdThruDt_B1", "bllgSchdThruDt_B1", "B1", null, TYPE_NENTSUKIHI, "8", null},
	{"bllgCycleCd_B1", "bllgCycleCd_B1", "B1", null, TYPE_HANKAKUEISU, "1", null},
	{"bllgCycleDescTxt_B1", "bllgCycleDescTxt_B1", "B1", null, TYPE_HANKAKUEISU, "50", null},
	{"bllgCycleStartMth_B1", "bllgCycleStartMth_B1", "B1", null, TYPE_HANKAKUSUJI, "2", null},
	{"xsMtrCopyQty_B1", "xsMtrCopyQty_B1", "B1", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"xsMtrCopyQty_BS", "xsMtrCopyQty_BS", "BS", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"xsMtrAmtRate_B1", "xsMtrAmtRate_B1", "B1", null, TYPE_SEISU_SYOSU, "19", "6"},
	{"ccyCd_B1", "ccyCd_B1", "B1", null, TYPE_HANKAKUEISU, "3", null},
	{"contrXsCopyPk_B1", "contrXsCopyPk_B1", "B1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"xsMtrFirstFlg_B1", "xsMtrFirstFlg_B1", "B1", null, TYPE_HANKAKUEISU, "1", null},
	{"invFlg_B1", "invFlg_B1", "B1", null, TYPE_HANKAKUEISU, "1", null},
	{"xxDtlCnt_B1", "xxDtlCnt_B1", "B1", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"ezUpTime_B1", "ezUpTime_B1", "B1", null, TYPE_HANKAKUEISU, "17", null},
	{"ezUpTimeZone_B1", "ezUpTimeZone_B1", "B1", null, TYPE_HANKAKUEISU, "5", null},
	{"xxRecHistCratTs_B1", "xxRecHistCratTs_B1", "B1", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistCratByNm_B1", "xxRecHistCratByNm_B1", "B1", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistUpdTs_B1", "xxRecHistUpdTs_B1", "B1", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistUpdByNm_B1", "xxRecHistUpdByNm_B1", "B1", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistTblNm_B1", "xxRecHistTblNm_B1", "B1", null, TYPE_HANKAKUEISU, "60", null},
	{"ezUpTime_BM", "ezUpTime_BM", "BM", null, TYPE_HANKAKUEISU, "17", null},
	{"ezUpTimeZone_BM", "ezUpTimeZone_BM", "BM", null, TYPE_HANKAKUEISU, "5", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_B1
        {"DS_CONTR_BLLG_MTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgMtrPk_B1
        {"MTR_LB_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrLbNm_B1
        {"DS_CONTR_BLLG_SCHD_MTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgSchdMtrPk_B1
        {"DS_CONTR_BLLG_SCHD_SMRY_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgSchdSmryPk_B1
        {"DS_CONTR_BLLG_SCHD_SQ_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgSchdSqNum_B1
        {"DS_CONTR_PRC_EFF_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrPrcEffPk_B1
        {"DS_CONTR_PRC_EFF_SQ_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrPrcEffSqNum_B1
        {"PER_SCHD_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//perSchdNum_B1
        {"BLLG_CYCLE_UOM_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgCycleUomCd_B1
        {"BLLG_CYCLE_UOM_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgCycleUomNm_B2
        {"PER_BLLG_CYCLE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//perBllgCycleCd_B1
        {"BLLG_SCHD_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgSchdFromDt_B1
        {"BLLG_SCHD_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgSchdThruDt_B1
        {"BLLG_CYCLE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgCycleCd_B1
        {"BLLG_CYCLE_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgCycleDescTxt_B1
        {"BLLG_CYCLE_START_MTH",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgCycleStartMth_B1
        {"XS_MTR_COPY_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xsMtrCopyQty_B1
        {"XS_MTR_COPY_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xsMtrCopyQty_BS
        {"XS_MTR_AMT_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xsMtrAmtRate_B1
        {"CCY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ccyCd_B1
        {"CONTR_XS_COPY_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrXsCopyPk_B1
        {"XS_MTR_FIRST_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xsMtrFirstFlg_B1
        {"INV_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invFlg_B1
        {"XX_DTL_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDtlCnt_B1
        {"_EZUpdateDateTime",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTime_B1
        {"_EZUpTimeZone",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTimeZone_B1
        {"XX_REC_HIST_CRAT_TS",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratTs_B1
        {"XX_REC_HIST_CRAT_BY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratByNm_B1
        {"XX_REC_HIST_UPD_TS",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdTs_B1
        {"XX_REC_HIST_UPD_BY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdByNm_B1
        {"XX_REC_HIST_TBL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistTblNm_B1
        {"_EZUpdateDateTime",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTime_BM
        {"_EZUpTimeZone",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTimeZone_BM
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

