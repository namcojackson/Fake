// This file was automatically generated by Screen Field Definition Document and XLA200710010
// Generated on    :20220804153359000
// Velocity Macro:svltdatabean.vm V200604010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0440Bean.java Copyright FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */

package  business.servlet.NSAL0440;

import parts.servletcommon.EZDCommonDataBean;

/*
 * NSAL0440 is data bean class.
 */
public class NSAL0440Bean extends EZDCommonDataBean {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	//Constant Definition Area
	/** GLBL_CMPY_CD*/
	public static final String glblCmpyCd = "glblCmpyCd";

	/** SLS_DT*/
	public static final String slsDt = "slsDt";

	/** DS_CONTR_PK*/
	public static final String dsContrPk = "dsContrPk";

	/** DS_CONTR_NUM*/
	public static final String dsContrNum = "dsContrNum";

	/** DS_ACCT_NM*/
	public static final String dsAcctNm = "dsAcctNm";

	/** CONTR_VRSN_EFF_FROM_DT*/
	public static final String contrVrsnEffFromDt = "contrVrsnEffFromDt";

	/** CONTR_VRSN_EFF_THRU_DT*/
	public static final String contrVrsnEffThruDt = "contrVrsnEffThruDt";

	/** SER_NUM_AR*/
	public static final String serNum_AR = "serNum_AR";

	/** SER_NUM*/
	public static final String serNum = "serNum";

	/** XX_CHK_BOX_H1*/
	public static final String xxChkBox_H1 = "xxChkBox_H1";

	/** XX_CHK_BOX_H2*/
	public static final String xxChkBox_H2 = "xxChkBox_H2";

	/** DS_CONTR_DTL_PK_P*/
	public static final String dsContrDtlPk_P = "dsContrDtlPk_P";

	/** XX_MODE_CD_P*/
	public static final String xxModeCd_P = "xxModeCd_P";

	/** X*/
	public static final String X = "X";

	/** XX_CHK_BOX_X*/
	public static final String xxChkBox_X = "xxChkBox_X";

	/** SVC_TERM_COND_CATG_PK_X*/
	public static final String svcTermCondCatgPk_X = "svcTermCondCatgPk_X";

	/** SVC_TERM_COND_CATG_DESC_TXT_X*/
	public static final String svcTermCondCatgDescTxt_X = "svcTermCondCatgDescTxt_X";

	/** XX_FILE_PATH_TXT*/
	public static final String xxFilePathTxt = "xxFilePathTxt";

	/** R*/
	public static final String R = "R";

	/** DS_CONTR_DTL_PK_R*/
	public static final String dsContrDtlPk_R = "dsContrDtlPk_R";

	/** A*/
	public static final String A = "A";

	/** SVC_TERM_COND_CATG_PK_A*/
	public static final String svcTermCondCatgPk_A = "svcTermCondCatgPk_A";

	/** SVC_TERM_COND_CATG_DESC_TXT_A*/
	public static final String svcTermCondCatgDescTxt_A = "svcTermCondCatgDescTxt_A";

	/** SVC_TERM_ATTRB_DESC_TXT_A*/
	public static final String svcTermAttrbDescTxt_A = "svcTermAttrbDescTxt_A";

	/** SVC_TERM_COND_ATTRB_PK_A*/
	public static final String svcTermCondAttrbPk_A = "svcTermCondAttrbPk_A";

	/** SVC_TERM_ATTRB_MAP_VAL_CD_A*/
	public static final String svcTermAttrbMapValCd_A = "svcTermAttrbMapValCd_A";

	/** SVC_TERM_COND_CATG_SORT_NUM_A*/
	public static final String svcTermCondCatgSortNum_A = "svcTermCondCatgSortNum_A";

	/** SVC_TERM_ATTRB_SORT_NUM_A*/
	public static final String svcTermAttrbSortNum_A = "svcTermAttrbSortNum_A";

	/** DS_CONTR_DTL_PK_A*/
	public static final String dsContrDtlPk_A = "dsContrDtlPk_A";

	/** SER_NUM_A*/
	public static final String serNum_A = "serNum_A";

	/** SVC_TERM_COND_DATA_SRC_CD_A*/
	public static final String svcTermCondDataSrcCd_A = "svcTermCondDataSrcCd_A";

	/** XX_TRX_DT_A*/
	public static final String xxTrxDt_A = "xxTrxDt_A";

	/** COND_VAL_NUM_A*/
	public static final String condValNum_A = "condValNum_A";

	/** SVC_TERM_DATA_TP_CD_A*/
	public static final String svcTermDataTpCd_A = "svcTermDataTpCd_A";

	/** SVC_TERM_ATTRB_MAP_VAL_CD_M*/
	public static final String svcTermAttrbMapValCd_M = "svcTermAttrbMapValCd_M";

	/** XX_TRX_DT_M*/
	public static final String xxTrxDt_M = "xxTrxDt_M";

	/** COND_VAL_NUM_M*/
	public static final String condValNum_M = "condValNum_M";

	/** SVC_TERM_DATA_TP_CD_M*/
	public static final String svcTermDataTpCd_M = "svcTermDataTpCd_M";

	/** SVC_TERM_COND_DATA_VAL_CD_PS*/
	public static final String svcTermCondDataValCd_PS = "svcTermCondDataValCd_PS";

	/** SVC_TERM_COND_DATA_VAL_CD_PC*/
	public static final String svcTermCondDataValCd_PC = "svcTermCondDataValCd_PC";

	/** SVC_TERM_COND_DATA_DISP_TXT_PN*/
	public static final String svcTermCondDataDispTxt_PN = "svcTermCondDataDispTxt_PN";

	/** SVC_TERM_COND_DATA_VAL_CD_MS*/
	public static final String svcTermCondDataValCd_MS = "svcTermCondDataValCd_MS";

	/** SVC_TERM_COND_DATA_VAL_CD_MC*/
	public static final String svcTermCondDataValCd_MC = "svcTermCondDataValCd_MC";

	/** SVC_TERM_COND_DATA_DISP_TXT_MN*/
	public static final String svcTermCondDataDispTxt_MN = "svcTermCondDataDispTxt_MN";

	/** XX_ROW_NUM_A*/
	public static final String xxRowNum_A = "xxRowNum_A";

	/** XX_LIST_NUM_A*/
	public static final String xxListNum_A = "xxListNum_A";

	/** XX_BTN_FLG_A*/
	public static final String xxBtnFlg_A = "xxBtnFlg_A";

	/** XX_DPLY_CTRL_FLG_A*/
	public static final String xxDplyCtrlFlg_A = "xxDplyCtrlFlg_A";

	/** DS_CONTR_CTRL_STS_CD_A*/
	public static final String dsContrCtrlStsCd_A = "dsContrCtrlStsCd_A";

	/** DS_CONTR_STS_CD_A*/
	public static final String dsContrStsCd_A = "dsContrStsCd_A";

	/** DS_CONTR_DTL_STS_CD_A*/
	public static final String dsContrDtlStsCd_A = "dsContrDtlStsCd_A";

	/** ATTRB_UPD_AVAL_FLG_A*/
	public static final String attrbUpdAvalFlg_A = "attrbUpdAvalFlg_A";

	/** SVC_PGM_MDSE_CD_A*/
	public static final String svcPgmMdseCd_A = "svcPgmMdseCd_A";

	/** PHYS_MAINT_TRGT_TBL_NM_A*/
	public static final String physMaintTrgtTblNm_A = "physMaintTrgtTblNm_A";

	/** LOGIC_MAINT_TRGT_TBL_NM_A*/
	public static final String logicMaintTrgtTblNm_A = "logicMaintTrgtTblNm_A";

	/** PHYS_MAINT_TRGT_COL_NM_A*/
	public static final String physMaintTrgtColNm_A = "physMaintTrgtColNm_A";

	/** LOGIC_MAINT_TRGT_COL_NM_A*/
	public static final String logicMaintTrgtColNm_A = "logicMaintTrgtColNm_A";

	/** PHYS_DPLY_TRGT_COL_NM_A*/
	public static final String physDplyTrgtColNm_A = "physDplyTrgtColNm_A";

	/** LOGIC_DPLY_TRGT_COL_NM_A*/
	public static final String logicDplyTrgtColNm_A = "logicDplyTrgtColNm_A";

	/** XX_REC_HIST_CRAT_TS_A*/
	public static final String xxRecHistCratTs_A = "xxRecHistCratTs_A";

	/** XX_REC_HIST_CRAT_BY_NM_A*/
	public static final String xxRecHistCratByNm_A = "xxRecHistCratByNm_A";

	/** XX_REC_HIST_UPD_TS_A*/
	public static final String xxRecHistUpdTs_A = "xxRecHistUpdTs_A";

	/** XX_REC_HIST_UPD_BY_NM_A*/
	public static final String xxRecHistUpdByNm_A = "xxRecHistUpdByNm_A";

	/** XX_REC_HIST_TBL_NM_A*/
	public static final String xxRecHistTblNm_A = "xxRecHistTblNm_A";

	/** XX_PAGE_SHOW_FROM_NUM*/
	public static final String xxPageShowFromNum = "xxPageShowFromNum";

	/** XX_PAGE_SHOW_TO_NUM*/
	public static final String xxPageShowToNum = "xxPageShowToNum";

	/** XX_PAGE_SHOW_OF_NUM*/
	public static final String xxPageShowOfNum = "xxPageShowOfNum";

	/** O*/
	public static final String O = "O";

	/** SER_NUM_O*/
	public static final String serNum_O = "serNum_O";

	/** MDSE_CD_O*/
	public static final String mdseCd_O = "mdseCd_O";

	/** CUR_LOC_NUM_O*/
	public static final String curLocNum_O = "curLocNum_O";

	/** LOC_NM_O*/
	public static final String locNm_O = "locNm_O";

	/** SVC_MACH_USG_STS_CD_O*/
	public static final String svcMachUsgStsCd_O = "svcMachUsgStsCd_O";

	/** SVC_MACH_MSTR_STS_CD_O*/
	public static final String svcMachMstrStsCd_O = "svcMachMstrStsCd_O";

	/** SVC_MACH_MSTR_PK_O*/
	public static final String svcMachMstrPk_O = "svcMachMstrPk_O";

	/** SVC_MACH_TP_CD_O*/
	public static final String svcMachTpCd_O = "svcMachTpCd_O";

	/** Q*/
	public static final String Q = "Q";

	/** SER_NUM_Q*/
	public static final String serNum_Q = "serNum_Q";

	/** SVC_MACH_MSTR_PK_Q*/
	public static final String svcMachMstrPk_Q = "svcMachMstrPk_Q";

	/** Z*/
	public static final String Z = "Z";

	/** XX_COMN_SCR_COL_VAL_TXT*/
	public static final String xxComnScrColValTxt = "xxComnScrColValTxt";

	/** Y*/
	public static final String Y = "Y";

	/** SVC_TERM_COND_ATTRB_PK_Y*/
	public static final String svcTermCondAttrbPk_Y = "svcTermCondAttrbPk_Y";

	/** XX_SCR_EVENT_NM*/
	public static final String xxScrEventNm = "xxScrEventNm";

	/**
	 * Method name:NSAL0440 is Bean's Constructor.
	 * <dd>method explanation:Initialization when instance of NSAL0440Bean is generated
	 * <dd>Remarks:
	 */
	public NSAL0440Bean() {
		super("business.servlet.NSAL0440.NSAL0440BMsg");
	}

	/**
	 * get  GLBL_CMPY_CD.
	 * @return GLBL_CMPY_CD
	 */
	public String getGlblCmpyCd() {
		return outputValue(glblCmpyCd);
	}

	/**
	 * set  GLBL_CMPY_CD.
	 * @param data GLBL_CMPY_CD
	 */
	public void setGlblCmpyCd(String data) {
		inputValue(glblCmpyCd,data);
	}

	/**
	 * get  SLS_DT.
	 * @return SLS_DT
	 */
	public String getSlsDt() {
		return outputValue(slsDt, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  SLS_DT.
	 * @param data SLS_DT
	 */
	public void setSlsDt(String data) {
		inputValue(slsDt, data, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * get  DS_CONTR_PK.
	 * @return DS_CONTR_PK
	 */
	public String getDsContrPk() {
		return outputValue(dsContrPk);
	}

	/**
	 * set  DS_CONTR_PK.
	 * @param data DS_CONTR_PK
	 */
	public void setDsContrPk(String data) {
		inputValue(dsContrPk,data);
	}

	/**
	 * get  DS_CONTR_NUM.
	 * @return DS_CONTR_NUM
	 */
	public String getDsContrNum() {
		return outputValue(dsContrNum);
	}

	/**
	 * set  DS_CONTR_NUM.
	 * @param data DS_CONTR_NUM
	 */
	public void setDsContrNum(String data) {
		inputValue(dsContrNum,data);
	}

	/**
	 * get  DS_ACCT_NM.
	 * @return DS_ACCT_NM
	 */
	public String getDsAcctNm() {
		return outputValue(dsAcctNm);
	}

	/**
	 * set  DS_ACCT_NM.
	 * @param data DS_ACCT_NM
	 */
	public void setDsAcctNm(String data) {
		inputValue(dsAcctNm,data);
	}

	/**
	 * get  CONTR_VRSN_EFF_FROM_DT.
	 * @return CONTR_VRSN_EFF_FROM_DT
	 */
	public String getContrVrsnEffFromDt() {
		return outputValue(contrVrsnEffFromDt, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  CONTR_VRSN_EFF_FROM_DT.
	 * @param data CONTR_VRSN_EFF_FROM_DT
	 */
	public void setContrVrsnEffFromDt(String data) {
		inputValue(contrVrsnEffFromDt, data, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * get  CONTR_VRSN_EFF_THRU_DT.
	 * @return CONTR_VRSN_EFF_THRU_DT
	 */
	public String getContrVrsnEffThruDt() {
		return outputValue(contrVrsnEffThruDt, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  CONTR_VRSN_EFF_THRU_DT.
	 * @param data CONTR_VRSN_EFF_THRU_DT
	 */
	public void setContrVrsnEffThruDt(String data) {
		inputValue(contrVrsnEffThruDt, data, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * get  SER_NUM_AR.
	 * @return SER_NUM_AR
	 */
	public String getSerNum_AR() {
		return outputValue(serNum_AR);
	}

	/**
	 * set  SER_NUM_AR.
	 * @param data SER_NUM_AR
	 */
	public void setSerNum_AR(String data) {
		inputValue(serNum_AR,data);
	}

	/**
	 * get  SER_NUM.
	 * @return SER_NUM
	 */
	public String getSerNum() {
		return outputValue(serNum);
	}

	/**
	 * set  SER_NUM.
	 * @param data SER_NUM
	 */
	public void setSerNum(String data) {
		inputValue(serNum,data);
	}

	/**
	 * get  XX_CHK_BOX_H1.
	 * @return XX_CHK_BOX_H1
	 */
	public String getXxChkBox_H1() {
		return outputValue(xxChkBox_H1);
	}

	/**
	 * set  XX_CHK_BOX_H1.
	 * @param data XX_CHK_BOX_H1
	 */
	public void setXxChkBox_H1(String data) {
		inputValue(xxChkBox_H1,data);
	}

	/**
	 * get  XX_CHK_BOX_H2.
	 * @return XX_CHK_BOX_H2
	 */
	public String getXxChkBox_H2() {
		return outputValue(xxChkBox_H2);
	}

	/**
	 * set  XX_CHK_BOX_H2.
	 * @param data XX_CHK_BOX_H2
	 */
	public void setXxChkBox_H2(String data) {
		inputValue(xxChkBox_H2,data);
	}

	/**
	 * get  DS_CONTR_DTL_PK_P.
	 * @return DS_CONTR_DTL_PK_P
	 */
	public String getDsContrDtlPk_P() {
		return outputValue(dsContrDtlPk_P);
	}

	/**
	 * set  DS_CONTR_DTL_PK_P.
	 * @param data DS_CONTR_DTL_PK_P
	 */
	public void setDsContrDtlPk_P(String data) {
		inputValue(dsContrDtlPk_P,data);
	}

	/**
	 * get  XX_MODE_CD_P.
	 * @return XX_MODE_CD_P
	 */
	public String getXxModeCd_P() {
		return outputValue(xxModeCd_P);
	}

	/**
	 * set  XX_MODE_CD_P.
	 * @param data XX_MODE_CD_P
	 */
	public void setXxModeCd_P(String data) {
		inputValue(xxModeCd_P,data);
	}

	/**
	 * get  XX_CHK_BOX_X.
	 * @param idx1 List Number
	 * @return XX_CHK_BOX_X
	 */
	public String getXxChkBox_X(int idx1) {
		return outputValue(X, idx1, xxChkBox_X);
	}

	/**
	 * set  XX_CHK_BOX_X.
	 * @param data XX_CHK_BOX_XArray
	 */
	public void setXxChkBox_X(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(X);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(X, i, xxChkBox_X, data[j]);
		}
	}

	/**
	 * get  SVC_TERM_COND_CATG_PK_X.
	 * @param idx1 List Number
	 * @return SVC_TERM_COND_CATG_PK_X
	 */
	public String getSvcTermCondCatgPk_X(int idx1) {
		return outputValue(X, idx1, svcTermCondCatgPk_X);
	}

	/**
	 * set  SVC_TERM_COND_CATG_PK_X.
	 * @param data SVC_TERM_COND_CATG_PK_XArray
	 */
	public void setSvcTermCondCatgPk_X(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(X);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(X, i, svcTermCondCatgPk_X, data[j]);
		}
	}

	/**
	 * get  SVC_TERM_COND_CATG_DESC_TXT_X.
	 * @param idx1 List Number
	 * @return SVC_TERM_COND_CATG_DESC_TXT_X
	 */
	public String getSvcTermCondCatgDescTxt_X(int idx1) {
		return outputValue(X, idx1, svcTermCondCatgDescTxt_X);
	}

	/**
	 * set  SVC_TERM_COND_CATG_DESC_TXT_X.
	 * @param data SVC_TERM_COND_CATG_DESC_TXT_XArray
	 */
	public void setSvcTermCondCatgDescTxt_X(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(X);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(X, i, svcTermCondCatgDescTxt_X, data[j]);
		}
	}

	/**
	 * get  XX_FILE_PATH_TXT.
	 * @return XX_FILE_PATH_TXT
	 */
	public String getXxFilePathTxt() {
		return outputValue(xxFilePathTxt);
	}

	/**
	 * set  XX_FILE_PATH_TXT.
	 * @param data XX_FILE_PATH_TXT
	 */
	public void setXxFilePathTxt(String data) {
		inputValue(xxFilePathTxt,data);
	}

	/**
	 * get  DS_CONTR_DTL_PK_R.
	 * @param idx1 List Number
	 * @return DS_CONTR_DTL_PK_R
	 */
	public String getDsContrDtlPk_R(int idx1) {
		return outputValue(R, idx1, dsContrDtlPk_R);
	}

	/**
	 * set  DS_CONTR_DTL_PK_R.
	 * @param data DS_CONTR_DTL_PK_RArray
	 */
	public void setDsContrDtlPk_R(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(R);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(R, i, dsContrDtlPk_R, data[j]);
		}
	}

	/**
	 * get  SVC_TERM_COND_CATG_PK_A.
	 * @param idx1 List Number
	 * @return SVC_TERM_COND_CATG_PK_A
	 */
	public String getSvcTermCondCatgPk_A(int idx1) {
		return outputValue(A, idx1, svcTermCondCatgPk_A);
	}

	/**
	 * set  SVC_TERM_COND_CATG_PK_A.
	 * @param data SVC_TERM_COND_CATG_PK_AArray
	 */
	public void setSvcTermCondCatgPk_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcTermCondCatgPk_A, data[j]);
		}
	}

	/**
	 * get  SVC_TERM_COND_CATG_DESC_TXT_A.
	 * @param idx1 List Number
	 * @return SVC_TERM_COND_CATG_DESC_TXT_A
	 */
	public String getSvcTermCondCatgDescTxt_A(int idx1) {
		return outputValue(A, idx1, svcTermCondCatgDescTxt_A);
	}

	/**
	 * set  SVC_TERM_COND_CATG_DESC_TXT_A.
	 * @param data SVC_TERM_COND_CATG_DESC_TXT_AArray
	 */
	public void setSvcTermCondCatgDescTxt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcTermCondCatgDescTxt_A, data[j]);
		}
	}

	/**
	 * get  SVC_TERM_ATTRB_DESC_TXT_A.
	 * @param idx1 List Number
	 * @return SVC_TERM_ATTRB_DESC_TXT_A
	 */
	public String getSvcTermAttrbDescTxt_A(int idx1) {
		return outputValue(A, idx1, svcTermAttrbDescTxt_A);
	}

	/**
	 * set  SVC_TERM_ATTRB_DESC_TXT_A.
	 * @param data SVC_TERM_ATTRB_DESC_TXT_AArray
	 */
	public void setSvcTermAttrbDescTxt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcTermAttrbDescTxt_A, data[j]);
		}
	}

	/**
	 * get  SVC_TERM_COND_ATTRB_PK_A.
	 * @param idx1 List Number
	 * @return SVC_TERM_COND_ATTRB_PK_A
	 */
	public String getSvcTermCondAttrbPk_A(int idx1) {
		return outputValue(A, idx1, svcTermCondAttrbPk_A);
	}

	/**
	 * set  SVC_TERM_COND_ATTRB_PK_A.
	 * @param data SVC_TERM_COND_ATTRB_PK_AArray
	 */
	public void setSvcTermCondAttrbPk_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcTermCondAttrbPk_A, data[j]);
		}
	}

	/**
	 * get  SVC_TERM_ATTRB_MAP_VAL_CD_A.
	 * @param idx1 List Number
	 * @return SVC_TERM_ATTRB_MAP_VAL_CD_A
	 */
	public String getSvcTermAttrbMapValCd_A(int idx1) {
		return outputValue(A, idx1, svcTermAttrbMapValCd_A);
	}

	/**
	 * set  SVC_TERM_ATTRB_MAP_VAL_CD_A.
	 * @param data SVC_TERM_ATTRB_MAP_VAL_CD_AArray
	 */
	public void setSvcTermAttrbMapValCd_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcTermAttrbMapValCd_A, data[j]);
		}
	}

	/**
	 * get  SVC_TERM_COND_CATG_SORT_NUM_A.
	 * @param idx1 List Number
	 * @return SVC_TERM_COND_CATG_SORT_NUM_A
	 */
	public String getSvcTermCondCatgSortNum_A(int idx1) {
		return outputValue(A, idx1, svcTermCondCatgSortNum_A);
	}

	/**
	 * set  SVC_TERM_COND_CATG_SORT_NUM_A.
	 * @param data SVC_TERM_COND_CATG_SORT_NUM_AArray
	 */
	public void setSvcTermCondCatgSortNum_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcTermCondCatgSortNum_A, data[j]);
		}
	}

	/**
	 * get  SVC_TERM_ATTRB_SORT_NUM_A.
	 * @param idx1 List Number
	 * @return SVC_TERM_ATTRB_SORT_NUM_A
	 */
	public String getSvcTermAttrbSortNum_A(int idx1) {
		return outputValue(A, idx1, svcTermAttrbSortNum_A);
	}

	/**
	 * set  SVC_TERM_ATTRB_SORT_NUM_A.
	 * @param data SVC_TERM_ATTRB_SORT_NUM_AArray
	 */
	public void setSvcTermAttrbSortNum_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcTermAttrbSortNum_A, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_DTL_PK_A.
	 * @param idx1 List Number
	 * @return DS_CONTR_DTL_PK_A
	 */
	public String getDsContrDtlPk_A(int idx1) {
		return outputValue(A, idx1, dsContrDtlPk_A);
	}

	/**
	 * set  DS_CONTR_DTL_PK_A.
	 * @param data DS_CONTR_DTL_PK_AArray
	 */
	public void setDsContrDtlPk_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsContrDtlPk_A, data[j]);
		}
	}

	/**
	 * get  SER_NUM_A.
	 * @param idx1 List Number
	 * @return SER_NUM_A
	 */
	public String getSerNum_A(int idx1) {
		return outputValue(A, idx1, serNum_A);
	}

	/**
	 * set  SER_NUM_A.
	 * @param data SER_NUM_AArray
	 */
	public void setSerNum_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, serNum_A, data[j]);
		}
	}

	/**
	 * get  SVC_TERM_COND_DATA_SRC_CD_A.
	 * @param idx1 List Number
	 * @return SVC_TERM_COND_DATA_SRC_CD_A
	 */
	public String getSvcTermCondDataSrcCd_A(int idx1) {
		return outputValue(A, idx1, svcTermCondDataSrcCd_A);
	}

	/**
	 * set  SVC_TERM_COND_DATA_SRC_CD_A.
	 * @param data SVC_TERM_COND_DATA_SRC_CD_AArray
	 */
	public void setSvcTermCondDataSrcCd_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcTermCondDataSrcCd_A, data[j]);
		}
	}

	/**
	 * get  XX_TRX_DT_A.
	 * @param idx1 List Number
	 * @return XX_TRX_DT_A
	 */
	public String getXxTrxDt_A(int idx1) {
		return outputValue(A, idx1, xxTrxDt_A, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  XX_TRX_DT_A.
	 * @param data XX_TRX_DT_AArray
	 */
	public void setXxTrxDt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i,  xxTrxDt_A, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  COND_VAL_NUM_A.
	 * @param idx1 List Number
	 * @return COND_VAL_NUM_A
	 */
	public String getCondValNum_A(int idx1) {
		return outputValue(A, idx1, condValNum_A);
	}

	/**
	 * set  COND_VAL_NUM_A.
	 * @param data COND_VAL_NUM_AArray
	 */
	public void setCondValNum_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, condValNum_A, data[j]);
		}
	}

	/**
	 * get  SVC_TERM_DATA_TP_CD_A.
	 * @param idx1 List Number
	 * @return SVC_TERM_DATA_TP_CD_A
	 */
	public String getSvcTermDataTpCd_A(int idx1) {
		return outputValue(A, idx1, svcTermDataTpCd_A);
	}

	/**
	 * set  SVC_TERM_DATA_TP_CD_A.
	 * @param data SVC_TERM_DATA_TP_CD_AArray
	 */
	public void setSvcTermDataTpCd_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcTermDataTpCd_A, data[j]);
		}
	}

	/**
	 * get  SVC_TERM_ATTRB_MAP_VAL_CD_M.
	 * @param idx1 List Number
	 * @return SVC_TERM_ATTRB_MAP_VAL_CD_M
	 */
	public String getSvcTermAttrbMapValCd_M(int idx1) {
		return outputValue(A, idx1, svcTermAttrbMapValCd_M);
	}

	/**
	 * set  SVC_TERM_ATTRB_MAP_VAL_CD_M.
	 * @param data SVC_TERM_ATTRB_MAP_VAL_CD_MArray
	 */
	public void setSvcTermAttrbMapValCd_M(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcTermAttrbMapValCd_M, data[j]);
		}
	}

	/**
	 * get  XX_TRX_DT_M.
	 * @param idx1 List Number
	 * @return XX_TRX_DT_M
	 */
	public String getXxTrxDt_M(int idx1) {
		return outputValue(A, idx1, xxTrxDt_M, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  XX_TRX_DT_M.
	 * @param data XX_TRX_DT_MArray
	 */
	public void setXxTrxDt_M(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i,  xxTrxDt_M, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  COND_VAL_NUM_M.
	 * @param idx1 List Number
	 * @return COND_VAL_NUM_M
	 */
	public String getCondValNum_M(int idx1) {
		return outputValue(A, idx1, condValNum_M);
	}

	/**
	 * set  COND_VAL_NUM_M.
	 * @param data COND_VAL_NUM_MArray
	 */
	public void setCondValNum_M(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, condValNum_M, data[j]);
		}
	}

	/**
	 * get  SVC_TERM_DATA_TP_CD_M.
	 * @param idx1 List Number
	 * @return SVC_TERM_DATA_TP_CD_M
	 */
	public String getSvcTermDataTpCd_M(int idx1) {
		return outputValue(A, idx1, svcTermDataTpCd_M);
	}

	/**
	 * set  SVC_TERM_DATA_TP_CD_M.
	 * @param data SVC_TERM_DATA_TP_CD_MArray
	 */
	public void setSvcTermDataTpCd_M(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcTermDataTpCd_M, data[j]);
		}
	}

	/**
	 * get  SVC_TERM_COND_DATA_VAL_CD_PS.
	 * @param idx1 List Number
	 * @return SVC_TERM_COND_DATA_VAL_CD_PS
	 */
	public String getSvcTermCondDataValCd_PS(int idx1) {
		return outputValue(A, idx1, svcTermCondDataValCd_PS);
	}

	/**
	 * set  SVC_TERM_COND_DATA_VAL_CD_PS.
	 * @param data SVC_TERM_COND_DATA_VAL_CD_PSArray
	 */
	public void setSvcTermCondDataValCd_PS(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcTermCondDataValCd_PS, data[j]);
		}
	}

	/**
	 * get  SVC_TERM_COND_DATA_VAL_CD_PC.
	 * @param idx1 List Number
	 * @param idx2 Index Number
	 * @return SVC_TERM_COND_DATA_VAL_CD_PC
	 */
	public String getSvcTermCondDataValCd_PC(int idx1, int idx2) {
		return outputValue(A, idx1, svcTermCondDataValCd_PC, idx2);
	}

	/**
	 * get  SVC_TERM_COND_DATA_DISP_TXT_PN.
	 * @param idx1 List Number
	 * @param idx2 Index Number
	 * @return SVC_TERM_COND_DATA_DISP_TXT_PN
	 */
	public String getSvcTermCondDataDispTxt_PN(int idx1, int idx2) {
		return outputValue(A, idx1, svcTermCondDataDispTxt_PN, idx2);
	}

	/**
	 * get  SVC_TERM_COND_DATA_VAL_CD_MS.
	 * @param idx1 List Number
	 * @return SVC_TERM_COND_DATA_VAL_CD_MS
	 */
	public String getSvcTermCondDataValCd_MS(int idx1) {
		return outputValue(A, idx1, svcTermCondDataValCd_MS);
	}

	/**
	 * set  SVC_TERM_COND_DATA_VAL_CD_MS.
	 * @param data SVC_TERM_COND_DATA_VAL_CD_MSArray
	 */
	public void setSvcTermCondDataValCd_MS(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcTermCondDataValCd_MS, data[j]);
		}
	}

	/**
	 * get  SVC_TERM_COND_DATA_VAL_CD_MC.
	 * @param idx1 List Number
	 * @param idx2 Index Number
	 * @return SVC_TERM_COND_DATA_VAL_CD_MC
	 */
	public String getSvcTermCondDataValCd_MC(int idx1, int idx2) {
		return outputValue(A, idx1, svcTermCondDataValCd_MC, idx2);
	}

	/**
	 * get  SVC_TERM_COND_DATA_DISP_TXT_MN.
	 * @param idx1 List Number
	 * @param idx2 Index Number
	 * @return SVC_TERM_COND_DATA_DISP_TXT_MN
	 */
	public String getSvcTermCondDataDispTxt_MN(int idx1, int idx2) {
		return outputValue(A, idx1, svcTermCondDataDispTxt_MN, idx2);
	}

	/**
	 * get  XX_ROW_NUM_A.
	 * @param idx1 List Number
	 * @return XX_ROW_NUM_A
	 */
	public String getXxRowNum_A(int idx1) {
		return outputValue(A, idx1, xxRowNum_A);
	}

	/**
	 * set  XX_ROW_NUM_A.
	 * @param data XX_ROW_NUM_AArray
	 */
	public void setXxRowNum_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRowNum_A, data[j]);
		}
	}

	/**
	 * get  XX_LIST_NUM_A.
	 * @param idx1 List Number
	 * @return XX_LIST_NUM_A
	 */
	public String getXxListNum_A(int idx1) {
		return outputValue(A, idx1, xxListNum_A);
	}

	/**
	 * set  XX_LIST_NUM_A.
	 * @param data XX_LIST_NUM_AArray
	 */
	public void setXxListNum_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxListNum_A, data[j]);
		}
	}

	/**
	 * get  XX_BTN_FLG_A.
	 * @param idx1 List Number
	 * @return XX_BTN_FLG_A
	 */
	public String getXxBtnFlg_A(int idx1) {
		return outputValue(A, idx1, xxBtnFlg_A);
	}

	/**
	 * set  XX_BTN_FLG_A.
	 * @param data XX_BTN_FLG_AArray
	 */
	public void setXxBtnFlg_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxBtnFlg_A, data[j]);
		}
	}

	/**
	 * get  XX_DPLY_CTRL_FLG_A.
	 * @param idx1 List Number
	 * @return XX_DPLY_CTRL_FLG_A
	 */
	public String getXxDplyCtrlFlg_A(int idx1) {
		return outputValue(A, idx1, xxDplyCtrlFlg_A);
	}

	/**
	 * set  XX_DPLY_CTRL_FLG_A.
	 * @param data XX_DPLY_CTRL_FLG_AArray
	 */
	public void setXxDplyCtrlFlg_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxDplyCtrlFlg_A, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_CTRL_STS_CD_A.
	 * @param idx1 List Number
	 * @return DS_CONTR_CTRL_STS_CD_A
	 */
	public String getDsContrCtrlStsCd_A(int idx1) {
		return outputValue(A, idx1, dsContrCtrlStsCd_A);
	}

	/**
	 * set  DS_CONTR_CTRL_STS_CD_A.
	 * @param data DS_CONTR_CTRL_STS_CD_AArray
	 */
	public void setDsContrCtrlStsCd_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsContrCtrlStsCd_A, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_STS_CD_A.
	 * @param idx1 List Number
	 * @return DS_CONTR_STS_CD_A
	 */
	public String getDsContrStsCd_A(int idx1) {
		return outputValue(A, idx1, dsContrStsCd_A);
	}

	/**
	 * set  DS_CONTR_STS_CD_A.
	 * @param data DS_CONTR_STS_CD_AArray
	 */
	public void setDsContrStsCd_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsContrStsCd_A, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_DTL_STS_CD_A.
	 * @param idx1 List Number
	 * @return DS_CONTR_DTL_STS_CD_A
	 */
	public String getDsContrDtlStsCd_A(int idx1) {
		return outputValue(A, idx1, dsContrDtlStsCd_A);
	}

	/**
	 * set  DS_CONTR_DTL_STS_CD_A.
	 * @param data DS_CONTR_DTL_STS_CD_AArray
	 */
	public void setDsContrDtlStsCd_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsContrDtlStsCd_A, data[j]);
		}
	}

	/**
	 * get  ATTRB_UPD_AVAL_FLG_A.
	 * @param idx1 List Number
	 * @return ATTRB_UPD_AVAL_FLG_A
	 */
	public String getAttrbUpdAvalFlg_A(int idx1) {
		return outputValue(A, idx1, attrbUpdAvalFlg_A);
	}

	/**
	 * set  ATTRB_UPD_AVAL_FLG_A.
	 * @param data ATTRB_UPD_AVAL_FLG_AArray
	 */
	public void setAttrbUpdAvalFlg_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, attrbUpdAvalFlg_A, data[j]);
		}
	}

	/**
	 * get  SVC_PGM_MDSE_CD_A.
	 * @param idx1 List Number
	 * @return SVC_PGM_MDSE_CD_A
	 */
	public String getSvcPgmMdseCd_A(int idx1) {
		return outputValue(A, idx1, svcPgmMdseCd_A);
	}

	/**
	 * set  SVC_PGM_MDSE_CD_A.
	 * @param data SVC_PGM_MDSE_CD_AArray
	 */
	public void setSvcPgmMdseCd_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcPgmMdseCd_A, data[j]);
		}
	}

	/**
	 * get  PHYS_MAINT_TRGT_TBL_NM_A.
	 * @param idx1 List Number
	 * @return PHYS_MAINT_TRGT_TBL_NM_A
	 */
	public String getPhysMaintTrgtTblNm_A(int idx1) {
		return outputValue(A, idx1, physMaintTrgtTblNm_A);
	}

	/**
	 * set  PHYS_MAINT_TRGT_TBL_NM_A.
	 * @param data PHYS_MAINT_TRGT_TBL_NM_AArray
	 */
	public void setPhysMaintTrgtTblNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, physMaintTrgtTblNm_A, data[j]);
		}
	}

	/**
	 * get  LOGIC_MAINT_TRGT_TBL_NM_A.
	 * @param idx1 List Number
	 * @return LOGIC_MAINT_TRGT_TBL_NM_A
	 */
	public String getLogicMaintTrgtTblNm_A(int idx1) {
		return outputValue(A, idx1, logicMaintTrgtTblNm_A);
	}

	/**
	 * set  LOGIC_MAINT_TRGT_TBL_NM_A.
	 * @param data LOGIC_MAINT_TRGT_TBL_NM_AArray
	 */
	public void setLogicMaintTrgtTblNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, logicMaintTrgtTblNm_A, data[j]);
		}
	}

	/**
	 * get  PHYS_MAINT_TRGT_COL_NM_A.
	 * @param idx1 List Number
	 * @return PHYS_MAINT_TRGT_COL_NM_A
	 */
	public String getPhysMaintTrgtColNm_A(int idx1) {
		return outputValue(A, idx1, physMaintTrgtColNm_A);
	}

	/**
	 * set  PHYS_MAINT_TRGT_COL_NM_A.
	 * @param data PHYS_MAINT_TRGT_COL_NM_AArray
	 */
	public void setPhysMaintTrgtColNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, physMaintTrgtColNm_A, data[j]);
		}
	}

	/**
	 * get  LOGIC_MAINT_TRGT_COL_NM_A.
	 * @param idx1 List Number
	 * @return LOGIC_MAINT_TRGT_COL_NM_A
	 */
	public String getLogicMaintTrgtColNm_A(int idx1) {
		return outputValue(A, idx1, logicMaintTrgtColNm_A);
	}

	/**
	 * set  LOGIC_MAINT_TRGT_COL_NM_A.
	 * @param data LOGIC_MAINT_TRGT_COL_NM_AArray
	 */
	public void setLogicMaintTrgtColNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, logicMaintTrgtColNm_A, data[j]);
		}
	}

	/**
	 * get  PHYS_DPLY_TRGT_COL_NM_A.
	 * @param idx1 List Number
	 * @return PHYS_DPLY_TRGT_COL_NM_A
	 */
	public String getPhysDplyTrgtColNm_A(int idx1) {
		return outputValue(A, idx1, physDplyTrgtColNm_A);
	}

	/**
	 * set  PHYS_DPLY_TRGT_COL_NM_A.
	 * @param data PHYS_DPLY_TRGT_COL_NM_AArray
	 */
	public void setPhysDplyTrgtColNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, physDplyTrgtColNm_A, data[j]);
		}
	}

	/**
	 * get  LOGIC_DPLY_TRGT_COL_NM_A.
	 * @param idx1 List Number
	 * @return LOGIC_DPLY_TRGT_COL_NM_A
	 */
	public String getLogicDplyTrgtColNm_A(int idx1) {
		return outputValue(A, idx1, logicDplyTrgtColNm_A);
	}

	/**
	 * set  LOGIC_DPLY_TRGT_COL_NM_A.
	 * @param data LOGIC_DPLY_TRGT_COL_NM_AArray
	 */
	public void setLogicDplyTrgtColNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, logicDplyTrgtColNm_A, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_CRAT_TS_A.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_CRAT_TS_A
	 */
	public String getXxRecHistCratTs_A(int idx1) {
		return outputValue(A, idx1, xxRecHistCratTs_A);
	}

	/**
	 * set  XX_REC_HIST_CRAT_TS_A.
	 * @param data XX_REC_HIST_CRAT_TS_AArray
	 */
	public void setXxRecHistCratTs_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRecHistCratTs_A, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_CRAT_BY_NM_A.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_CRAT_BY_NM_A
	 */
	public String getXxRecHistCratByNm_A(int idx1) {
		return outputValue(A, idx1, xxRecHistCratByNm_A);
	}

	/**
	 * set  XX_REC_HIST_CRAT_BY_NM_A.
	 * @param data XX_REC_HIST_CRAT_BY_NM_AArray
	 */
	public void setXxRecHistCratByNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRecHistCratByNm_A, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_UPD_TS_A.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_UPD_TS_A
	 */
	public String getXxRecHistUpdTs_A(int idx1) {
		return outputValue(A, idx1, xxRecHistUpdTs_A);
	}

	/**
	 * set  XX_REC_HIST_UPD_TS_A.
	 * @param data XX_REC_HIST_UPD_TS_AArray
	 */
	public void setXxRecHistUpdTs_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRecHistUpdTs_A, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_UPD_BY_NM_A.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_UPD_BY_NM_A
	 */
	public String getXxRecHistUpdByNm_A(int idx1) {
		return outputValue(A, idx1, xxRecHistUpdByNm_A);
	}

	/**
	 * set  XX_REC_HIST_UPD_BY_NM_A.
	 * @param data XX_REC_HIST_UPD_BY_NM_AArray
	 */
	public void setXxRecHistUpdByNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRecHistUpdByNm_A, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_TBL_NM_A.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_TBL_NM_A
	 */
	public String getXxRecHistTblNm_A(int idx1) {
		return outputValue(A, idx1, xxRecHistTblNm_A);
	}

	/**
	 * set  XX_REC_HIST_TBL_NM_A.
	 * @param data XX_REC_HIST_TBL_NM_AArray
	 */
	public void setXxRecHistTblNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRecHistTblNm_A, data[j]);
		}
	}

	/**
	 * get  XX_PAGE_SHOW_FROM_NUM.
	 * @return XX_PAGE_SHOW_FROM_NUM
	 */
	public String getXxPageShowFromNum() {
		return outputValue(xxPageShowFromNum);
	}

	/**
	 * set  XX_PAGE_SHOW_FROM_NUM.
	 * @param data XX_PAGE_SHOW_FROM_NUM
	 */
	public void setXxPageShowFromNum(String data) {
		inputValue(xxPageShowFromNum,data);
	}

	/**
	 * get  XX_PAGE_SHOW_TO_NUM.
	 * @return XX_PAGE_SHOW_TO_NUM
	 */
	public String getXxPageShowToNum() {
		return outputValue(xxPageShowToNum);
	}

	/**
	 * set  XX_PAGE_SHOW_TO_NUM.
	 * @param data XX_PAGE_SHOW_TO_NUM
	 */
	public void setXxPageShowToNum(String data) {
		inputValue(xxPageShowToNum,data);
	}

	/**
	 * get  XX_PAGE_SHOW_OF_NUM.
	 * @return XX_PAGE_SHOW_OF_NUM
	 */
	public String getXxPageShowOfNum() {
		return outputValue(xxPageShowOfNum);
	}

	/**
	 * set  XX_PAGE_SHOW_OF_NUM.
	 * @param data XX_PAGE_SHOW_OF_NUM
	 */
	public void setXxPageShowOfNum(String data) {
		inputValue(xxPageShowOfNum,data);
	}

	/**
	 * get  SER_NUM_O.
	 * @param idx1 List Number
	 * @return SER_NUM_O
	 */
	public String getSerNum_O(int idx1) {
		return outputValue(O, idx1, serNum_O);
	}

	/**
	 * set  SER_NUM_O.
	 * @param data SER_NUM_OArray
	 */
	public void setSerNum_O(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(O);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(O, i, serNum_O, data[j]);
		}
	}

	/**
	 * get  MDSE_CD_O.
	 * @param idx1 List Number
	 * @return MDSE_CD_O
	 */
	public String getMdseCd_O(int idx1) {
		return outputValue(O, idx1, mdseCd_O);
	}

	/**
	 * set  MDSE_CD_O.
	 * @param data MDSE_CD_OArray
	 */
	public void setMdseCd_O(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(O);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(O, i, mdseCd_O, data[j]);
		}
	}

	/**
	 * get  CUR_LOC_NUM_O.
	 * @param idx1 List Number
	 * @return CUR_LOC_NUM_O
	 */
	public String getCurLocNum_O(int idx1) {
		return outputValue(O, idx1, curLocNum_O);
	}

	/**
	 * set  CUR_LOC_NUM_O.
	 * @param data CUR_LOC_NUM_OArray
	 */
	public void setCurLocNum_O(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(O);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(O, i, curLocNum_O, data[j]);
		}
	}

	/**
	 * get  LOC_NM_O.
	 * @param idx1 List Number
	 * @return LOC_NM_O
	 */
	public String getLocNm_O(int idx1) {
		return outputValue(O, idx1, locNm_O);
	}

	/**
	 * set  LOC_NM_O.
	 * @param data LOC_NM_OArray
	 */
	public void setLocNm_O(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(O);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(O, i, locNm_O, data[j]);
		}
	}

	/**
	 * get  SVC_MACH_USG_STS_CD_O.
	 * @param idx1 List Number
	 * @return SVC_MACH_USG_STS_CD_O
	 */
	public String getSvcMachUsgStsCd_O(int idx1) {
		return outputValue(O, idx1, svcMachUsgStsCd_O);
	}

	/**
	 * set  SVC_MACH_USG_STS_CD_O.
	 * @param data SVC_MACH_USG_STS_CD_OArray
	 */
	public void setSvcMachUsgStsCd_O(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(O);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(O, i, svcMachUsgStsCd_O, data[j]);
		}
	}

	/**
	 * get  SVC_MACH_MSTR_STS_CD_O.
	 * @param idx1 List Number
	 * @return SVC_MACH_MSTR_STS_CD_O
	 */
	public String getSvcMachMstrStsCd_O(int idx1) {
		return outputValue(O, idx1, svcMachMstrStsCd_O);
	}

	/**
	 * set  SVC_MACH_MSTR_STS_CD_O.
	 * @param data SVC_MACH_MSTR_STS_CD_OArray
	 */
	public void setSvcMachMstrStsCd_O(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(O);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(O, i, svcMachMstrStsCd_O, data[j]);
		}
	}

	/**
	 * get  SVC_MACH_MSTR_PK_O.
	 * @param idx1 List Number
	 * @return SVC_MACH_MSTR_PK_O
	 */
	public String getSvcMachMstrPk_O(int idx1) {
		return outputValue(O, idx1, svcMachMstrPk_O);
	}

	/**
	 * set  SVC_MACH_MSTR_PK_O.
	 * @param data SVC_MACH_MSTR_PK_OArray
	 */
	public void setSvcMachMstrPk_O(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(O);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(O, i, svcMachMstrPk_O, data[j]);
		}
	}

	/**
	 * get  SVC_MACH_TP_CD_O.
	 * @param idx1 List Number
	 * @return SVC_MACH_TP_CD_O
	 */
	public String getSvcMachTpCd_O(int idx1) {
		return outputValue(O, idx1, svcMachTpCd_O);
	}

	/**
	 * set  SVC_MACH_TP_CD_O.
	 * @param data SVC_MACH_TP_CD_OArray
	 */
	public void setSvcMachTpCd_O(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(O);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(O, i, svcMachTpCd_O, data[j]);
		}
	}

	/**
	 * get  SER_NUM_Q.
	 * @param idx1 List Number
	 * @return SER_NUM_Q
	 */
	public String getSerNum_Q(int idx1) {
		return outputValue(Q, idx1, serNum_Q);
	}

	/**
	 * set  SER_NUM_Q.
	 * @param data SER_NUM_QArray
	 */
	public void setSerNum_Q(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(Q);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(Q, i, serNum_Q, data[j]);
		}
	}

	/**
	 * get  SVC_MACH_MSTR_PK_Q.
	 * @param idx1 List Number
	 * @return SVC_MACH_MSTR_PK_Q
	 */
	public String getSvcMachMstrPk_Q(int idx1) {
		return outputValue(Q, idx1, svcMachMstrPk_Q);
	}

	/**
	 * set  SVC_MACH_MSTR_PK_Q.
	 * @param data SVC_MACH_MSTR_PK_QArray
	 */
	public void setSvcMachMstrPk_Q(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(Q);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(Q, i, svcMachMstrPk_Q, data[j]);
		}
	}

	/**
	 * get  XX_COMN_SCR_COL_VAL_TXT.
	 * @param idx1 List Number
	 * @return XX_COMN_SCR_COL_VAL_TXT
	 */
	public String getXxComnScrColValTxt(int idx1) {
		return outputValue(Z, idx1, xxComnScrColValTxt);
	}

	/**
	 * set  XX_COMN_SCR_COL_VAL_TXT.
	 * @param data XX_COMN_SCR_COL_VAL_TXTArray
	 */
	public void setXxComnScrColValTxt(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(Z);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(Z, i, xxComnScrColValTxt, data[j]);
		}
	}

	/**
	 * get  SVC_TERM_COND_ATTRB_PK_Y.
	 * @param idx1 List Number
	 * @return SVC_TERM_COND_ATTRB_PK_Y
	 */
	public String getSvcTermCondAttrbPk_Y(int idx1) {
		return outputValue(Y, idx1, svcTermCondAttrbPk_Y);
	}

	/**
	 * set  SVC_TERM_COND_ATTRB_PK_Y.
	 * @param data SVC_TERM_COND_ATTRB_PK_YArray
	 */
	public void setSvcTermCondAttrbPk_Y(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(Y);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(Y, i, svcTermCondAttrbPk_Y, data[j]);
		}
	}

	/**
	 * get  XX_SCR_EVENT_NM.
	 * @return XX_SCR_EVENT_NM
	 */
	public String getXxScrEventNm() {
		return outputValue(xxScrEventNm);
	}

	/**
	 * set  XX_SCR_EVENT_NM.
	 * @param data XX_SCR_EVENT_NM
	 */
	public void setXxScrEventNm(String data) {
		inputValue(xxScrEventNm,data);
	}

}

