// This file was automatically generated by Screen Field Definition Document and XLA200710010
// Generated on    :20170224142321000
// Velocity Macro:svltdatabean.vm V200604010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0670Bean.java Copyright FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */

package  business.servlet.NSAL0670;

import parts.servletcommon.EZDCommonDataBean;

/*
 * NSAL0670 is data bean class.
 */
public class NSAL0670Bean extends EZDCommonDataBean {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	//Constant Definition Area
	/** GLBL_CMPY_CD*/
	public static final String glblCmpyCd = "glblCmpyCd";

	/** SVC_MEMO_RSN_CD_H1*/
	public static final String svcMemoRsnCd_H1 = "svcMemoRsnCd_H1";

	/** SVC_MEMO_RSN_NM_H2*/
	public static final String svcMemoRsnNm_H2 = "svcMemoRsnNm_H2";

	/** SVC_MEMO_RSN_CD_H3*/
	public static final String svcMemoRsnCd_H3 = "svcMemoRsnCd_H3";

	/** SVC_CMNT_TXT_H1*/
	public static final String svcCmntTxt_H1 = "svcCmntTxt_H1";

	/** XX_CHK_BOX_AL*/
	public static final String xxChkBox_AL = "xxChkBox_AL";

	/** XX_PAGE_SHOW_FROM_NUM*/
	public static final String xxPageShowFromNum = "xxPageShowFromNum";

	/** XX_PAGE_SHOW_TO_NUM*/
	public static final String xxPageShowToNum = "xxPageShowToNum";

	/** XX_PAGE_SHOW_OF_NUM*/
	public static final String xxPageShowOfNum = "xxPageShowOfNum";

	/** XX_ROW_NUM*/
	public static final String xxRowNum = "xxRowNum";

	/** DS_CONTR_PK_PR*/
	public static final String dsContrPk_PR = "dsContrPk_PR";

	/** P*/
	public static final String P = "P";

	/** DS_CONTR_PK_P1*/
	public static final String dsContrPk_P1 = "dsContrPk_P1";

	/** DS_CONTR_DTL_PK_P1*/
	public static final String dsContrDtlPk_P1 = "dsContrDtlPk_P1";

	/** A*/
	public static final String A = "A";

	/** DS_CONTR_PK_A1*/
	public static final String dsContrPk_A1 = "dsContrPk_A1";

	/** DS_CONTR_DTL_PK_A1*/
	public static final String dsContrDtlPk_A1 = "dsContrDtlPk_A1";

	/** XX_CHK_BOX_A1*/
	public static final String xxChkBox_A1 = "xxChkBox_A1";

	/** DS_CONTR_CATG_CD_A1*/
	public static final String dsContrCatgCd_A1 = "dsContrCatgCd_A1";

	/** DS_CONTR_NUM_A1*/
	public static final String dsContrNum_A1 = "dsContrNum_A1";

	/** XX_SCR_ITEM_34_TXT_A1*/
	public static final String xxScrItem34Txt_A1 = "xxScrItem34Txt_A1";

	/** DS_ACCT_NM_A1*/
	public static final String dsAcctNm_A1 = "dsAcctNm_A1";

	/** SER_NUM_A1*/
	public static final String serNum_A1 = "serNum_A1";

	/** DS_CONTR_CTRL_STS_CD_AH*/
	public static final String dsContrCtrlStsCd_AH = "dsContrCtrlStsCd_AH";

	/** DS_CONTR_CTRL_STS_NM_AH*/
	public static final String dsContrCtrlStsNm_AH = "dsContrCtrlStsNm_AH";

	/** DS_CONTR_CTRL_STS_CD_AD*/
	public static final String dsContrCtrlStsCd_AD = "dsContrCtrlStsCd_AD";

	/** DS_CONTR_CTRL_STS_NM_AD*/
	public static final String dsContrCtrlStsNm_AD = "dsContrCtrlStsNm_AD";

	/** T_MDL_NM_A1*/
	public static final String t_MdlNm_A1 = "t_MdlNm_A1";

	/** CONTR_VRSN_EFF_FROM_DT_A1*/
	public static final String contrVrsnEffFromDt_A1 = "contrVrsnEffFromDt_A1";

	/** CONTR_EFF_FROM_DT_A1*/
	public static final String contrEffFromDt_A1 = "contrEffFromDt_A1";

	/** CONTR_VRSN_EFF_THRU_DT_A1*/
	public static final String contrVrsnEffThruDt_A1 = "contrVrsnEffThruDt_A1";

	/** CONTR_EFF_THRU_DT_A1*/
	public static final String contrEffThruDt_A1 = "contrEffThruDt_A1";

	/** DS_CONTR_STS_CD_A1*/
	public static final String dsContrStsCd_A1 = "dsContrStsCd_A1";

	/** DS_CONTR_DTL_STS_CD_A1*/
	public static final String dsContrDtlStsCd_A1 = "dsContrDtlStsCd_A1";

	/** XX_GENL_FLD_AREA_TXT_A1*/
	public static final String xxGenlFldAreaTxt_A1 = "xxGenlFldAreaTxt_A1";

	/** DS_CONTR_SRC_TP_CD_A1*/
	public static final String dsContrSrcTpCd_A1 = "dsContrSrcTpCd_A1";

	/** DS_CONTR_DTL_TP_CD_A1*/
	public static final String dsContrDtlTpCd_A1 = "dsContrDtlTpCd_A1";

	/** XX_ROW_NUM_A1*/
	public static final String xxRowNum_A1 = "xxRowNum_A1";

	/** _EZUpdateDateTime_AH*/
	public static final String ezUpTime_AH = "ezUpTime_AH";

	/** _EZUpTimeZone_AH*/
	public static final String ezUpTimeZone_AH = "ezUpTimeZone_AH";

	/** _EZUpdateDateTime_AD*/
	public static final String ezUpTime_AD = "ezUpTime_AD";

	/** _EZUpTimeZone_AD*/
	public static final String ezUpTimeZone_AD = "ezUpTimeZone_AD";

	/**
	 * Method name:NSAL0670 is Bean's Constructor.
	 * <dd>method explanation:Initialization when instance of NSAL0670Bean is generated
	 * <dd>Remarks:
	 */
	public NSAL0670Bean() {
		super("business.servlet.NSAL0670.NSAL0670BMsg");
	}

	/**
	 * get  GLBL_CMPY_CD.
	 * @return GLBL_CMPY_CD
	 */
	public String getGlblCmpyCd() {
		return outputValue(glblCmpyCd);
	}

	/**
	 * set  GLBL_CMPY_CD.
	 * @param data GLBL_CMPY_CD
	 */
	public void setGlblCmpyCd(String data) {
		inputValue(glblCmpyCd,data);
	}

	/**
	 * get  SVC_MEMO_RSN_CD_H1.
	 * @param idx1 Index Number
	 * @return SVC_MEMO_RSN_CD_H1
	 */
	public String getSvcMemoRsnCd_H1(int idx1) {
	 	 return outputValue(svcMemoRsnCd_H1, idx1);
	}

	/**
	 * get  SVC_MEMO_RSN_NM_H2.
	 * @param idx1 Index Number
	 * @return SVC_MEMO_RSN_NM_H2
	 */
	public String getSvcMemoRsnNm_H2(int idx1) {
	 	 return outputValue(svcMemoRsnNm_H2, idx1);
	}

	/**
	 * get  SVC_MEMO_RSN_CD_H3.
	 * @return SVC_MEMO_RSN_CD_H3
	 */
	public String getSvcMemoRsnCd_H3() {
		return outputValue(svcMemoRsnCd_H3);
	}

	/**
	 * set  SVC_MEMO_RSN_CD_H3.
	 * @param data SVC_MEMO_RSN_CD_H3
	 */
	public void setSvcMemoRsnCd_H3(String data) {
		inputValue(svcMemoRsnCd_H3,data);
	}

	/**
	 * get  SVC_CMNT_TXT_H1.
	 * @return SVC_CMNT_TXT_H1
	 */
	public String getSvcCmntTxt_H1() {
		return outputValue(svcCmntTxt_H1);
	}

	/**
	 * set  SVC_CMNT_TXT_H1.
	 * @param data SVC_CMNT_TXT_H1
	 */
	public void setSvcCmntTxt_H1(String data) {
		inputValue(svcCmntTxt_H1,data);
	}

	/**
	 * get  XX_CHK_BOX_AL.
	 * @return XX_CHK_BOX_AL
	 */
	public String getXxChkBox_AL() {
		return outputValue(xxChkBox_AL);
	}

	/**
	 * set  XX_CHK_BOX_AL.
	 * @param data XX_CHK_BOX_AL
	 */
	public void setXxChkBox_AL(String data) {
		inputValue(xxChkBox_AL,data);
	}

	/**
	 * get  XX_PAGE_SHOW_FROM_NUM.
	 * @return XX_PAGE_SHOW_FROM_NUM
	 */
	public String getXxPageShowFromNum() {
		return outputValue(xxPageShowFromNum);
	}

	/**
	 * set  XX_PAGE_SHOW_FROM_NUM.
	 * @param data XX_PAGE_SHOW_FROM_NUM
	 */
	public void setXxPageShowFromNum(String data) {
		inputValue(xxPageShowFromNum,data);
	}

	/**
	 * get  XX_PAGE_SHOW_TO_NUM.
	 * @return XX_PAGE_SHOW_TO_NUM
	 */
	public String getXxPageShowToNum() {
		return outputValue(xxPageShowToNum);
	}

	/**
	 * set  XX_PAGE_SHOW_TO_NUM.
	 * @param data XX_PAGE_SHOW_TO_NUM
	 */
	public void setXxPageShowToNum(String data) {
		inputValue(xxPageShowToNum,data);
	}

	/**
	 * get  XX_PAGE_SHOW_OF_NUM.
	 * @return XX_PAGE_SHOW_OF_NUM
	 */
	public String getXxPageShowOfNum() {
		return outputValue(xxPageShowOfNum);
	}

	/**
	 * set  XX_PAGE_SHOW_OF_NUM.
	 * @param data XX_PAGE_SHOW_OF_NUM
	 */
	public void setXxPageShowOfNum(String data) {
		inputValue(xxPageShowOfNum,data);
	}

	/**
	 * get  XX_ROW_NUM.
	 * @return XX_ROW_NUM
	 */
	public String getXxRowNum() {
		return outputValue(xxRowNum);
	}

	/**
	 * set  XX_ROW_NUM.
	 * @param data XX_ROW_NUM
	 */
	public void setXxRowNum(String data) {
		inputValue(xxRowNum,data);
	}

	/**
	 * get  DS_CONTR_PK_PR.
	 * @return DS_CONTR_PK_PR
	 */
	public String getDsContrPk_PR() {
		return outputValue(dsContrPk_PR);
	}

	/**
	 * set  DS_CONTR_PK_PR.
	 * @param data DS_CONTR_PK_PR
	 */
	public void setDsContrPk_PR(String data) {
		inputValue(dsContrPk_PR,data);
	}

	/**
	 * get  DS_CONTR_PK_P1.
	 * @param idx1 List Number
	 * @return DS_CONTR_PK_P1
	 */
	public String getDsContrPk_P1(int idx1) {
		return outputValue(P, idx1, dsContrPk_P1);
	}

	/**
	 * set  DS_CONTR_PK_P1.
	 * @param data DS_CONTR_PK_P1Array
	 */
	public void setDsContrPk_P1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(P);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(P, i, dsContrPk_P1, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_DTL_PK_P1.
	 * @param idx1 List Number
	 * @return DS_CONTR_DTL_PK_P1
	 */
	public String getDsContrDtlPk_P1(int idx1) {
		return outputValue(P, idx1, dsContrDtlPk_P1);
	}

	/**
	 * set  DS_CONTR_DTL_PK_P1.
	 * @param data DS_CONTR_DTL_PK_P1Array
	 */
	public void setDsContrDtlPk_P1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(P);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(P, i, dsContrDtlPk_P1, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_PK_A1.
	 * @param idx1 List Number
	 * @return DS_CONTR_PK_A1
	 */
	public String getDsContrPk_A1(int idx1) {
		return outputValue(A, idx1, dsContrPk_A1);
	}

	/**
	 * set  DS_CONTR_PK_A1.
	 * @param data DS_CONTR_PK_A1Array
	 */
	public void setDsContrPk_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsContrPk_A1, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_DTL_PK_A1.
	 * @param idx1 List Number
	 * @return DS_CONTR_DTL_PK_A1
	 */
	public String getDsContrDtlPk_A1(int idx1) {
		return outputValue(A, idx1, dsContrDtlPk_A1);
	}

	/**
	 * set  DS_CONTR_DTL_PK_A1.
	 * @param data DS_CONTR_DTL_PK_A1Array
	 */
	public void setDsContrDtlPk_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsContrDtlPk_A1, data[j]);
		}
	}

	/**
	 * get  XX_CHK_BOX_A1.
	 * @param idx1 List Number
	 * @return XX_CHK_BOX_A1
	 */
	public String getXxChkBox_A1(int idx1) {
		return outputValue(A, idx1, xxChkBox_A1);
	}

	/**
	 * set  XX_CHK_BOX_A1.
	 * @param data XX_CHK_BOX_A1Array
	 */
	public void setXxChkBox_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxChkBox_A1, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_CATG_CD_A1.
	 * @param idx1 List Number
	 * @return DS_CONTR_CATG_CD_A1
	 */
	public String getDsContrCatgCd_A1(int idx1) {
		return outputValue(A, idx1, dsContrCatgCd_A1);
	}

	/**
	 * set  DS_CONTR_CATG_CD_A1.
	 * @param data DS_CONTR_CATG_CD_A1Array
	 */
	public void setDsContrCatgCd_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsContrCatgCd_A1, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_NUM_A1.
	 * @param idx1 List Number
	 * @return DS_CONTR_NUM_A1
	 */
	public String getDsContrNum_A1(int idx1) {
		return outputValue(A, idx1, dsContrNum_A1);
	}

	/**
	 * set  DS_CONTR_NUM_A1.
	 * @param data DS_CONTR_NUM_A1Array
	 */
	public void setDsContrNum_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsContrNum_A1, data[j]);
		}
	}

	/**
	 * get  XX_SCR_ITEM_34_TXT_A1.
	 * @param idx1 List Number
	 * @return XX_SCR_ITEM_34_TXT_A1
	 */
	public String getXxScrItem34Txt_A1(int idx1) {
		return outputValue(A, idx1, xxScrItem34Txt_A1);
	}

	/**
	 * set  XX_SCR_ITEM_34_TXT_A1.
	 * @param data XX_SCR_ITEM_34_TXT_A1Array
	 */
	public void setXxScrItem34Txt_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxScrItem34Txt_A1, data[j]);
		}
	}

	/**
	 * get  DS_ACCT_NM_A1.
	 * @param idx1 List Number
	 * @return DS_ACCT_NM_A1
	 */
	public String getDsAcctNm_A1(int idx1) {
		return outputValue(A, idx1, dsAcctNm_A1);
	}

	/**
	 * set  DS_ACCT_NM_A1.
	 * @param data DS_ACCT_NM_A1Array
	 */
	public void setDsAcctNm_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsAcctNm_A1, data[j]);
		}
	}

	/**
	 * get  SER_NUM_A1.
	 * @param idx1 List Number
	 * @return SER_NUM_A1
	 */
	public String getSerNum_A1(int idx1) {
		return outputValue(A, idx1, serNum_A1);
	}

	/**
	 * set  SER_NUM_A1.
	 * @param data SER_NUM_A1Array
	 */
	public void setSerNum_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, serNum_A1, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_CTRL_STS_CD_AH.
	 * @param idx1 List Number
	 * @return DS_CONTR_CTRL_STS_CD_AH
	 */
	public String getDsContrCtrlStsCd_AH(int idx1) {
		return outputValue(A, idx1, dsContrCtrlStsCd_AH);
	}

	/**
	 * set  DS_CONTR_CTRL_STS_CD_AH.
	 * @param data DS_CONTR_CTRL_STS_CD_AHArray
	 */
	public void setDsContrCtrlStsCd_AH(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsContrCtrlStsCd_AH, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_CTRL_STS_NM_AH.
	 * @param idx1 List Number
	 * @return DS_CONTR_CTRL_STS_NM_AH
	 */
	public String getDsContrCtrlStsNm_AH(int idx1) {
		return outputValue(A, idx1, dsContrCtrlStsNm_AH);
	}

	/**
	 * set  DS_CONTR_CTRL_STS_NM_AH.
	 * @param data DS_CONTR_CTRL_STS_NM_AHArray
	 */
	public void setDsContrCtrlStsNm_AH(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsContrCtrlStsNm_AH, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_CTRL_STS_CD_AD.
	 * @param idx1 List Number
	 * @return DS_CONTR_CTRL_STS_CD_AD
	 */
	public String getDsContrCtrlStsCd_AD(int idx1) {
		return outputValue(A, idx1, dsContrCtrlStsCd_AD);
	}

	/**
	 * set  DS_CONTR_CTRL_STS_CD_AD.
	 * @param data DS_CONTR_CTRL_STS_CD_ADArray
	 */
	public void setDsContrCtrlStsCd_AD(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsContrCtrlStsCd_AD, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_CTRL_STS_NM_AD.
	 * @param idx1 List Number
	 * @return DS_CONTR_CTRL_STS_NM_AD
	 */
	public String getDsContrCtrlStsNm_AD(int idx1) {
		return outputValue(A, idx1, dsContrCtrlStsNm_AD);
	}

	/**
	 * set  DS_CONTR_CTRL_STS_NM_AD.
	 * @param data DS_CONTR_CTRL_STS_NM_ADArray
	 */
	public void setDsContrCtrlStsNm_AD(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsContrCtrlStsNm_AD, data[j]);
		}
	}

	/**
	 * get  T_MDL_NM_A1.
	 * @param idx1 List Number
	 * @return T_MDL_NM_A1
	 */
	public String getT_MdlNm_A1(int idx1) {
		return outputValue(A, idx1, t_MdlNm_A1);
	}

	/**
	 * set  T_MDL_NM_A1.
	 * @param data T_MDL_NM_A1Array
	 */
	public void setT_MdlNm_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, t_MdlNm_A1, data[j]);
		}
	}

	/**
	 * get  CONTR_VRSN_EFF_FROM_DT_A1.
	 * @param idx1 List Number
	 * @return CONTR_VRSN_EFF_FROM_DT_A1
	 */
	public String getContrVrsnEffFromDt_A1(int idx1) {
		return outputValue(A, idx1, contrVrsnEffFromDt_A1, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  CONTR_VRSN_EFF_FROM_DT_A1.
	 * @param data CONTR_VRSN_EFF_FROM_DT_A1Array
	 */
	public void setContrVrsnEffFromDt_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i,  contrVrsnEffFromDt_A1, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  CONTR_EFF_FROM_DT_A1.
	 * @param idx1 List Number
	 * @return CONTR_EFF_FROM_DT_A1
	 */
	public String getContrEffFromDt_A1(int idx1) {
		return outputValue(A, idx1, contrEffFromDt_A1, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  CONTR_EFF_FROM_DT_A1.
	 * @param data CONTR_EFF_FROM_DT_A1Array
	 */
	public void setContrEffFromDt_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i,  contrEffFromDt_A1, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  CONTR_VRSN_EFF_THRU_DT_A1.
	 * @param idx1 List Number
	 * @return CONTR_VRSN_EFF_THRU_DT_A1
	 */
	public String getContrVrsnEffThruDt_A1(int idx1) {
		return outputValue(A, idx1, contrVrsnEffThruDt_A1, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  CONTR_VRSN_EFF_THRU_DT_A1.
	 * @param data CONTR_VRSN_EFF_THRU_DT_A1Array
	 */
	public void setContrVrsnEffThruDt_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i,  contrVrsnEffThruDt_A1, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  CONTR_EFF_THRU_DT_A1.
	 * @param idx1 List Number
	 * @return CONTR_EFF_THRU_DT_A1
	 */
	public String getContrEffThruDt_A1(int idx1) {
		return outputValue(A, idx1, contrEffThruDt_A1, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  CONTR_EFF_THRU_DT_A1.
	 * @param data CONTR_EFF_THRU_DT_A1Array
	 */
	public void setContrEffThruDt_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i,  contrEffThruDt_A1, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  DS_CONTR_STS_CD_A1.
	 * @param idx1 List Number
	 * @return DS_CONTR_STS_CD_A1
	 */
	public String getDsContrStsCd_A1(int idx1) {
		return outputValue(A, idx1, dsContrStsCd_A1);
	}

	/**
	 * set  DS_CONTR_STS_CD_A1.
	 * @param data DS_CONTR_STS_CD_A1Array
	 */
	public void setDsContrStsCd_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsContrStsCd_A1, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_DTL_STS_CD_A1.
	 * @param idx1 List Number
	 * @return DS_CONTR_DTL_STS_CD_A1
	 */
	public String getDsContrDtlStsCd_A1(int idx1) {
		return outputValue(A, idx1, dsContrDtlStsCd_A1);
	}

	/**
	 * set  DS_CONTR_DTL_STS_CD_A1.
	 * @param data DS_CONTR_DTL_STS_CD_A1Array
	 */
	public void setDsContrDtlStsCd_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsContrDtlStsCd_A1, data[j]);
		}
	}

	/**
	 * get  XX_GENL_FLD_AREA_TXT_A1.
	 * @param idx1 List Number
	 * @return XX_GENL_FLD_AREA_TXT_A1
	 */
	public String getXxGenlFldAreaTxt_A1(int idx1) {
		return outputValue(A, idx1, xxGenlFldAreaTxt_A1);
	}

	/**
	 * set  XX_GENL_FLD_AREA_TXT_A1.
	 * @param data XX_GENL_FLD_AREA_TXT_A1Array
	 */
	public void setXxGenlFldAreaTxt_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxGenlFldAreaTxt_A1, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_SRC_TP_CD_A1.
	 * @param idx1 List Number
	 * @return DS_CONTR_SRC_TP_CD_A1
	 */
	public String getDsContrSrcTpCd_A1(int idx1) {
		return outputValue(A, idx1, dsContrSrcTpCd_A1);
	}

	/**
	 * set  DS_CONTR_SRC_TP_CD_A1.
	 * @param data DS_CONTR_SRC_TP_CD_A1Array
	 */
	public void setDsContrSrcTpCd_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsContrSrcTpCd_A1, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_DTL_TP_CD_A1.
	 * @param idx1 List Number
	 * @return DS_CONTR_DTL_TP_CD_A1
	 */
	public String getDsContrDtlTpCd_A1(int idx1) {
		return outputValue(A, idx1, dsContrDtlTpCd_A1);
	}

	/**
	 * set  DS_CONTR_DTL_TP_CD_A1.
	 * @param data DS_CONTR_DTL_TP_CD_A1Array
	 */
	public void setDsContrDtlTpCd_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsContrDtlTpCd_A1, data[j]);
		}
	}

	/**
	 * get  XX_ROW_NUM_A1.
	 * @param idx1 List Number
	 * @return XX_ROW_NUM_A1
	 */
	public String getXxRowNum_A1(int idx1) {
		return outputValue(A, idx1, xxRowNum_A1);
	}

	/**
	 * set  XX_ROW_NUM_A1.
	 * @param data XX_ROW_NUM_A1Array
	 */
	public void setXxRowNum_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRowNum_A1, data[j]);
		}
	}

	/**
	 * get  _EZUpdateDateTime_AH.
	 * @param idx1 List Number
	 * @return _EZUpdateDateTime_AH
	 */
	public String getEzUpTime_AH(int idx1) {
		return outputValue(A, idx1, ezUpTime_AH);
	}

	/**
	 * set  _EZUpdateDateTime_AH.
	 * @param data _EZUpdateDateTime_AHArray
	 */
	public void setEzUpTime_AH(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, ezUpTime_AH, data[j]);
		}
	}

	/**
	 * get  _EZUpTimeZone_AH.
	 * @param idx1 List Number
	 * @return _EZUpTimeZone_AH
	 */
	public String getEzUpTimeZone_AH(int idx1) {
		return outputValue(A, idx1, ezUpTimeZone_AH);
	}

	/**
	 * set  _EZUpTimeZone_AH.
	 * @param data _EZUpTimeZone_AHArray
	 */
	public void setEzUpTimeZone_AH(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, ezUpTimeZone_AH, data[j]);
		}
	}

	/**
	 * get  _EZUpdateDateTime_AD.
	 * @param idx1 List Number
	 * @return _EZUpdateDateTime_AD
	 */
	public String getEzUpTime_AD(int idx1) {
		return outputValue(A, idx1, ezUpTime_AD);
	}

	/**
	 * set  _EZUpdateDateTime_AD.
	 * @param data _EZUpdateDateTime_ADArray
	 */
	public void setEzUpTime_AD(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, ezUpTime_AD, data[j]);
		}
	}

	/**
	 * get  _EZUpTimeZone_AD.
	 * @param idx1 List Number
	 * @return _EZUpTimeZone_AD
	 */
	public String getEzUpTimeZone_AD(int idx1) {
		return outputValue(A, idx1, ezUpTimeZone_AD);
	}

	/**
	 * set  _EZUpTimeZone_AD.
	 * @param data _EZUpTimeZone_ADArray
	 */
	public void setEzUpTimeZone_AD(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, ezUpTimeZone_AD, data[j]);
		}
	}

}

