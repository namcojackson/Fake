//This file was automatically generated by Business Component Interface Definition Document (Define Business Application Global Area) and XLA200710010.
// Generated on    :20230808180407000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NLBL2020_CSMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NLBL2020;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NLBL2020 Business Application Global Area Message class.
 * @author
 * @version XLA200710010
 */
public class NLBL2020_CSMsg extends EZDSMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** TRX_HDR_NUM_C1*/
	public final EZDSStringItem              trxHdrNum_C1;

    /** DPLY_LINE_NUM_C1*/
	public final EZDSStringItem              dplyLineNum_C1;

    /** TRX_LINE_NUM_C1*/
	public final EZDSStringItem              trxLineNum_C1;

    /** TRX_LINE_SUB_NUM_C1*/
	public final EZDSStringItem              trxLineSubNum_C1;

    /** SO_NUM_C1*/
	public final EZDSStringItem              soNum_C1;

    /** SO_SLP_NUM_C1*/
	public final EZDSStringItem              soSlpNum_C1;

    /** RTL_WH_NM_C1*/
	public final EZDSStringItem              rtlWhNm_C1;

    /** SHIP_FROM_RTL_SWH_CD_C1*/
	public final EZDSStringItem              shipFromRtlSwhCd_C1;

    /** PICK_SVC_CONFIG_MSTR_PK_C1*/
	public final EZDSBigDecimalItem              pickSvcConfigMstrPk_C1;

    /** MDSE_CD_C1*/
	public final EZDSStringItem              mdseCd_C1;

    /** MDSE_DESC_SHORT_TXT_C1*/
	public final EZDSStringItem              mdseDescShortTxt_C1;

    /** SHPG_QTY_C1*/
	public final EZDSBigDecimalItem              shpgQty_C1;

    /** SHIP_QTY_C1*/
	public final EZDSBigDecimalItem              shipQty_C1;

    /** PICK_CONF_QTY_C1*/
	public final EZDSBigDecimalItem              pickConfQty_C1;

    /** SER_NUM_C1*/
	public final EZDSStringItem              serNum_C1;

    /** SER_NUM_TAKE_FLG_C1*/
	public final EZDSStringItem              serNumTakeFlg_C1;

    /** SO_LINE_OPEN_FLG_C1*/
	public final EZDSStringItem              soLineOpenFlg_C1;


	/**
	 * NLBL2020_CSMsg is constructor.
	 * The initialization when the instance of NLBL2020_CSMsg is generated.
	 */
	public NLBL2020_CSMsg() {
		this(false, -1);
	}

	/**
	 * NLBL2020_CSMsg is constructor.
	 * The initialization when the instance of NLBL2020_CSMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NLBL2020_CSMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		trxHdrNum_C1 = (EZDSStringItem)newItem("trxHdrNum_C1");
		dplyLineNum_C1 = (EZDSStringItem)newItem("dplyLineNum_C1");
		trxLineNum_C1 = (EZDSStringItem)newItem("trxLineNum_C1");
		trxLineSubNum_C1 = (EZDSStringItem)newItem("trxLineSubNum_C1");
		soNum_C1 = (EZDSStringItem)newItem("soNum_C1");
		soSlpNum_C1 = (EZDSStringItem)newItem("soSlpNum_C1");
		rtlWhNm_C1 = (EZDSStringItem)newItem("rtlWhNm_C1");
		shipFromRtlSwhCd_C1 = (EZDSStringItem)newItem("shipFromRtlSwhCd_C1");
		pickSvcConfigMstrPk_C1 = (EZDSBigDecimalItem)newItem("pickSvcConfigMstrPk_C1");
		mdseCd_C1 = (EZDSStringItem)newItem("mdseCd_C1");
		mdseDescShortTxt_C1 = (EZDSStringItem)newItem("mdseDescShortTxt_C1");
		shpgQty_C1 = (EZDSBigDecimalItem)newItem("shpgQty_C1");
		shipQty_C1 = (EZDSBigDecimalItem)newItem("shipQty_C1");
		pickConfQty_C1 = (EZDSBigDecimalItem)newItem("pickConfQty_C1");
		serNum_C1 = (EZDSStringItem)newItem("serNum_C1");
		serNumTakeFlg_C1 = (EZDSStringItem)newItem("serNumTakeFlg_C1");
		soLineOpenFlg_C1 = (EZDSStringItem)newItem("soLineOpenFlg_C1");
	}

	/**
	 * get the type of array which is stored
	 * @return NLBL2020_CSMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NLBL2020_CSMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"trxHdrNum_C1", "trxHdrNum_C1", "C1", null, TYPE_HANKAKUEISU, "8", null},
	{"dplyLineNum_C1", "dplyLineNum_C1", "C1", null, TYPE_HANKAKUEISU, "20", null},
	{"trxLineNum_C1", "trxLineNum_C1", "C1", null, TYPE_HANKAKUEISU, "3", null},
	{"trxLineSubNum_C1", "trxLineSubNum_C1", "C1", null, TYPE_HANKAKUEISU, "3", null},
	{"soNum_C1", "soNum_C1", "C1", null, TYPE_HANKAKUEISU, "8", null},
	{"soSlpNum_C1", "soSlpNum_C1", "C1", null, TYPE_HANKAKUEISU, "3", null},
	{"rtlWhNm_C1", "rtlWhNm_C1", "C1", null, TYPE_HANKAKUEISU, "30", null},
	{"shipFromRtlSwhCd_C1", "shipFromRtlSwhCd_C1", "C1", null, TYPE_HANKAKUEISU, "20", null},
	{"pickSvcConfigMstrPk_C1", "pickSvcConfigMstrPk_C1", "C1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"mdseCd_C1", "mdseCd_C1", "C1", null, TYPE_HANKAKUEISU, "16", null},
	{"mdseDescShortTxt_C1", "mdseDescShortTxt_C1", "C1", null, TYPE_HANKAKUEISU, "250", null},
	{"shpgQty_C1", "shpgQty_C1", "C1", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"shipQty_C1", "shipQty_C1", "C1", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"pickConfQty_C1", "pickConfQty_C1", "C1", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"serNum_C1", "serNum_C1", "C1", null, TYPE_HANKAKUEISU, "30", null},
	{"serNumTakeFlg_C1", "serNumTakeFlg_C1", "C1", null, TYPE_HANKAKUEISU, "1", null},
	{"soLineOpenFlg_C1", "soLineOpenFlg_C1", "C1", null, TYPE_HANKAKUEISU, "1", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"TRX_HDR_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trxHdrNum_C1
        {"DPLY_LINE_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dplyLineNum_C1
        {"TRX_LINE_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trxLineNum_C1
        {"TRX_LINE_SUB_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trxLineSubNum_C1
        {"SO_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//soNum_C1
        {"SO_SLP_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//soSlpNum_C1
        {"RTL_WH_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlWhNm_C1
        {"SHIP_FROM_RTL_SWH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipFromRtlSwhCd_C1
        {"PICK_SVC_CONFIG_MSTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//pickSvcConfigMstrPk_C1
        {"MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd_C1
        {"MDSE_DESC_SHORT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseDescShortTxt_C1
        {"SHPG_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shpgQty_C1
        {"SHIP_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipQty_C1
        {"PICK_CONF_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//pickConfQty_C1
        {"SER_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNum_C1
        {"SER_NUM_TAKE_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNumTakeFlg_C1
        {"SO_LINE_OPEN_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//soLineOpenFlg_C1
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

