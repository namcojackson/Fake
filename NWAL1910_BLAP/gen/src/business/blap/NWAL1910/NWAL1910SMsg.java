//This file was automatically generated by Business Component Interface Definition Document (Define Business Application Global Area) and XLA200710010.
// Generated on    :20180919101304000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NWAL1910SMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NWAL1910;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NWAL1910 Business Application Global Area Message class.
 * @author
 * @version XLA200710010
 */
public class NWAL1910SMsg extends EZDSMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** ORD_SRC_REF_NUM*/
	public final EZDSStringItem              ordSrcRefNum;

    /** DS_ORD_POSN_NUM*/
	public final EZDSStringItem              dsOrdPosnNum;

    /** XX_LINE_NUM*/
	public final EZDSStringItem              xxLineNum;

    /** DS_CPO_LINE_NUM*/
	public final EZDSBigDecimalItem              dsCpoLineNum;

    /** A*/
	public final business.blap.NWAL1910.NWAL1910_ASMsgArray              A;

    /** XX_MODE_CD*/
	public final EZDSStringItem              xxModeCd;

    /** XX_VIEW_CHNG_LOG_SRC_CD*/
	public final EZDSStringItem              xxViewChngLogSrcCd;

    /** CONFIG_CATG_CD*/
	public final EZDSStringItem              configCatgCd;

    /** XX_PAGE_SHOW_FROM_NUM*/
	public final EZDSBigDecimalItem              xxPageShowFromNum;

    /** XX_PAGE_SHOW_TO_NUM*/
	public final EZDSBigDecimalItem              xxPageShowToNum;

    /** XX_PAGE_SHOW_OF_NUM*/
	public final EZDSBigDecimalItem              xxPageShowOfNum;


	/**
	 * NWAL1910SMsg is constructor.
	 * The initialization when the instance of NWAL1910SMsg is generated.
	 */
	public NWAL1910SMsg() {
		this(false, -1);
	}

	/**
	 * NWAL1910SMsg is constructor.
	 * The initialization when the instance of NWAL1910SMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NWAL1910SMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		ordSrcRefNum = (EZDSStringItem)newItem("ordSrcRefNum");
		dsOrdPosnNum = (EZDSStringItem)newItem("dsOrdPosnNum");
		xxLineNum = (EZDSStringItem)newItem("xxLineNum");
		dsCpoLineNum = (EZDSBigDecimalItem)newItem("dsCpoLineNum");
		A = (business.blap.NWAL1910.NWAL1910_ASMsgArray)newMsgArray("A");
		xxModeCd = (EZDSStringItem)newItem("xxModeCd");
		xxViewChngLogSrcCd = (EZDSStringItem)newItem("xxViewChngLogSrcCd");
		configCatgCd = (EZDSStringItem)newItem("configCatgCd");
		xxPageShowFromNum = (EZDSBigDecimalItem)newItem("xxPageShowFromNum");
		xxPageShowToNum = (EZDSBigDecimalItem)newItem("xxPageShowToNum");
		xxPageShowOfNum = (EZDSBigDecimalItem)newItem("xxPageShowOfNum");
	}

	/**
	 * get the type of array which is stored
	 * @return NWAL1910SMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NWAL1910SMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"ordSrcRefNum", "ordSrcRefNum", null, null, TYPE_HANKAKUEISU, "50", null},
	{"dsOrdPosnNum", "dsOrdPosnNum", null, null, TYPE_HANKAKUEISU, "6", null},
	{"xxLineNum", "xxLineNum", null, null, TYPE_HANKAKUEISU, "11", null},
	{"dsCpoLineNum", "dsCpoLineNum", null, null, TYPE_SEISU_SYOSU, "4", "0"},
	{"A", "A", null, "2000", "business.blap.NWAL1910.NWAL1910_ASMsgArray", null, null},
	
	{"xxModeCd", "xxModeCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"xxViewChngLogSrcCd", "xxViewChngLogSrcCd", null, null, TYPE_HANKAKUEISU, "10", null},
	{"configCatgCd", "configCatgCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"xxPageShowFromNum", "xxPageShowFromNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowToNum", "xxPageShowToNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowOfNum", "xxPageShowOfNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"ORD_SRC_REF_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordSrcRefNum
        {"DS_ORD_POSN_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdPosnNum
        {"XX_LINE_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxLineNum
        {"DS_CPO_LINE_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsCpoLineNum
		null,	//A
        {"XX_MODE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxModeCd
        {"XX_VIEW_CHNG_LOG_SRC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxViewChngLogSrcCd
        {"CONFIG_CATG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//configCatgCd
        {"XX_PAGE_SHOW_FROM_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowFromNum
        {"XX_PAGE_SHOW_TO_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowToNum
        {"XX_PAGE_SHOW_OF_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowOfNum
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

