// This file was automatically generated by Screen Field Definition Document and XLA200710010
// Generated on    :20180307171423000
// Velocity Macro:svltdatabean.vm V200604010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL1300Bean.java Copyright FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */

package  business.servlet.NSAL1300;

import parts.servletcommon.EZDCommonDataBean;

/*
 * NSAL1300 is data bean class.
 */
public class NSAL1300Bean extends EZDCommonDataBean {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	//Constant Definition Area
	/** SVC_CONTR_BLLG_PK*/
	public static final String svcContrBllgPk = "svcContrBllgPk";

	/** XX_COMN_COL_ORD_TXT*/
	public static final String xxComnColOrdTxt = "xxComnColOrdTxt";

	/** XX_PAGE_SHOW_FROM_NUM*/
	public static final String xxPageShowFromNum = "xxPageShowFromNum";

	/** XX_PAGE_SHOW_TO_NUM*/
	public static final String xxPageShowToNum = "xxPageShowToNum";

	/** XX_PAGE_SHOW_OF_NUM*/
	public static final String xxPageShowOfNum = "xxPageShowOfNum";

	/** XX_PAGE_SHOW_CUR_NUM*/
	public static final String xxPageShowCurNum = "xxPageShowCurNum";

	/** XX_PAGE_SHOW_TOT_NUM*/
	public static final String xxPageShowTotNum = "xxPageShowTotNum";

	/** A*/
	public static final String A = "A";

	/** MTR_LB_CD_A*/
	public static final String mtrLbCd_A = "mtrLbCd_A";

	/** SVC_CONTR_MTR_BLLG_PK_A*/
	public static final String svcContrMtrBllgPk_A = "svcContrMtrBllgPk_A";

	/** SVC_CONTR_BLLG_PK_A*/
	public static final String svcContrBllgPk_A = "svcContrBllgPk_A";

	/** DS_CONTR_BLLG_MTR_PK_A*/
	public static final String dsContrBllgMtrPk_A = "dsContrBllgMtrPk_A";

	/** SVC_CONTR_XS_MTR_BLLG_PK_A*/
	public static final String svcContrXsMtrBllgPk_A = "svcContrXsMtrBllgPk_A";

	/** CONTR_XS_COPY_PK_A*/
	public static final String contrXsCopyPk_A = "contrXsCopyPk_A";

	/** MTR_LB_DESC_TXT_A*/
	public static final String mtrLbDescTxt_A = "mtrLbDescTxt_A";

	/** COPY_INCL_QTY_A*/
	public static final String copyInclQty_A = "copyInclQty_A";

	/** MTR_COPY_QTY_A*/
	public static final String mtrCopyQty_A = "mtrCopyQty_A";

	/** BLLG_COPY_QTY_A*/
	public static final String bllgCopyQty_A = "bllgCopyQty_A";

	/** XS_MTR_AMT_RATE_A*/
	public static final String xsMtrAmtRate_A = "xsMtrAmtRate_A";

	/** MTR_CHRG_DEAL_AMT_A*/
	public static final String mtrChrgDealAmt_A = "mtrChrgDealAmt_A";

	/** XX_TOT_AMT_A*/
	public static final String xxTotAmt_A = "xxTotAmt_A";

	/** XS_MTR_COPY_QTY_A*/
	public static final String xsMtrCopyQty_A = "xsMtrCopyQty_A";

	/** XS_MTR_CHRG_DEAL_AMT_A*/
	public static final String xsMtrChrgDealAmt_A = "xsMtrChrgDealAmt_A";

	/** XX_DTL_CNT_A*/
	public static final String xxDtlCnt_A = "xxDtlCnt_A";

	/** XS_CHRG_TP_CD_A*/
	public static final String xsChrgTpCd_A = "xsChrgTpCd_A";

	/** XX_REC_HIST_CRAT_TS_A*/
	public static final String xxRecHistCratTs_A = "xxRecHistCratTs_A";

	/** XX_REC_HIST_CRAT_BY_NM_A*/
	public static final String xxRecHistCratByNm_A = "xxRecHistCratByNm_A";

	/** XX_REC_HIST_UPD_TS_A*/
	public static final String xxRecHistUpdTs_A = "xxRecHistUpdTs_A";

	/** XX_REC_HIST_UPD_BY_NM_A*/
	public static final String xxRecHistUpdByNm_A = "xxRecHistUpdByNm_A";

	/** XX_REC_HIST_TBL_NM_A*/
	public static final String xxRecHistTblNm_A = "xxRecHistTblNm_A";

	/** B*/
	public static final String B = "B";

	/** BILL_TO_CUST_CD_B*/
	public static final String billToCustCd_B = "billToCustCd_B";

	/** SVC_CONTR_BLLG_THRU_DT_B*/
	public static final String svcContrBllgThruDt_B = "svcContrBllgThruDt_B";

	/** DS_CONTR_CATG_CD_B*/
	public static final String dsContrCatgCd_B = "dsContrCatgCd_B";

	/** SVC_PHYS_MTR_READ_PK_B*/
	public static final String svcPhysMtrReadPk_B = "svcPhysMtrReadPk_B";

	/** DS_CONTR_PK_B*/
	public static final String dsContrPk_B = "dsContrPk_B";

	/** DS_CONTR_NUM_B*/
	public static final String dsContrNum_B = "dsContrNum_B";

	/** MTR_LB_CD_B*/
	public static final String mtrLbCd_B = "mtrLbCd_B";

	/** SVC_MACH_MSTR_PK_B*/
	public static final String svcMachMstrPk_B = "svcMachMstrPk_B";

	/** SER_NUM_B*/
	public static final String serNum_B = "serNum_B";

	/** MDSE_CD_B*/
	public static final String mdseCd_B = "mdseCd_B";

	/** SVC_CONFIG_MSTR_PK_B*/
	public static final String svcConfigMstrPk_B = "svcConfigMstrPk_B";

	/** SVC_MACH_SQ_NUM_B*/
	public static final String svcMachSqNum_B = "svcMachSqNum_B";

	/** DS_MTR_READ_TP_CD_B*/
	public static final String dsMtrReadTpCd_B = "dsMtrReadTpCd_B";

	/** DS_MTR_READ_TP_SORT_NUM_B*/
	public static final String dsMtrReadTpSortNum_B = "dsMtrReadTpSortNum_B";

	/** SVC_PHYS_MTR_PK_B*/
	public static final String svcPhysMtrPk_B = "svcPhysMtrPk_B";

	/** PHYS_MTR_ID_B*/
	public static final String physMtrId_B = "physMtrId_B";

	/** MTR_CLS_TP_CD_B*/
	public static final String mtrClsTpCd_B = "mtrClsTpCd_B";

	/** MTR_READ_SRC_TP_CD_B*/
	public static final String mtrReadSrcTpCd_B = "mtrReadSrcTpCd_B";

	/** MTR_READ_SRC_TP_SORT_NUM_B*/
	public static final String mtrReadSrcTpSortNum_B = "mtrReadSrcTpSortNum_B";

	/** DS_MTR_READ_TP_DESC_TXT_B*/
	public static final String dsMtrReadTpDescTxt_B = "dsMtrReadTpDescTxt_B";

	/** MTR_READ_DT_BS*/
	public static final String mtrReadDt_BS = "mtrReadDt_BS";

	/** MTR_READ_DT_BL*/
	public static final String mtrReadDt_BL = "mtrReadDt_BL";

	/** MTR_READ_DT_B*/
	public static final String mtrReadDt_B = "mtrReadDt_B";

	/** MTR_LB_DESC_TXT_B*/
	public static final String mtrLbDescTxt_B = "mtrLbDescTxt_B";

	/** READ_MTR_CNT_BL*/
	public static final String readMtrCnt_BL = "readMtrCnt_BL";

	/** READ_MTR_CNT_B*/
	public static final String readMtrCnt_B = "readMtrCnt_B";

	/** SVC_PHYS_MTR_READ_GRP_SQ_B*/
	public static final String svcPhysMtrReadGrpSq_B = "svcPhysMtrReadGrpSq_B";

	/** MTR_READ_SRC_TP_DESC_TXT_B*/
	public static final String mtrReadSrcTpDescTxt_B = "mtrReadSrcTpDescTxt_B";

	/** AVG_MTR_READ_CNT_B*/
	public static final String avgMtrReadCnt_B = "avgMtrReadCnt_B";

	/** MTR_ENTRY_CMNT_TXT_B*/
	public static final String mtrEntryCmntTxt_B = "mtrEntryCmntTxt_B";

	/** READ_MTR_CNT_BN*/
	public static final String readMtrCnt_BN = "readMtrCnt_BN";

	/** MTR_ENTRY_CMNT_TXT_BN*/
	public static final String mtrEntryCmntTxt_BN = "mtrEntryCmntTxt_BN";

	/** XX_REC_HIST_CRAT_TS_B*/
	public static final String xxRecHistCratTs_B = "xxRecHistCratTs_B";

	/** XX_REC_HIST_CRAT_BY_NM_B*/
	public static final String xxRecHistCratByNm_B = "xxRecHistCratByNm_B";

	/** XX_REC_HIST_UPD_TS_B*/
	public static final String xxRecHistUpdTs_B = "xxRecHistUpdTs_B";

	/** XX_REC_HIST_UPD_BY_NM_B*/
	public static final String xxRecHistUpdByNm_B = "xxRecHistUpdByNm_B";

	/** XX_REC_HIST_TBL_NM_B*/
	public static final String xxRecHistTblNm_B = "xxRecHistTblNm_B";

	/** MTR_LB_DESC_TXT_FN*/
	public static final String mtrLbDescTxt_FN = "mtrLbDescTxt_FN";

	/** MTR_LB_DESC_TXT_FT*/
	public static final String mtrLbDescTxt_FT = "mtrLbDescTxt_FT";

	/** SER_NUM_F*/
	public static final String serNum_F = "serNum_F";

	/** XX_WRN_SKIP_FLG*/
	public static final String xxWrnSkipFlg = "xxWrnSkipFlg";

	/**
	 * Method name:NSAL1300 is Bean's Constructor.
	 * <dd>method explanation:Initialization when instance of NSAL1300Bean is generated
	 * <dd>Remarks:
	 */
	public NSAL1300Bean() {
		super("business.servlet.NSAL1300.NSAL1300BMsg");
	}

	/**
	 * get  SVC_CONTR_BLLG_PK.
	 * @return SVC_CONTR_BLLG_PK
	 */
	public String getSvcContrBllgPk() {
		return outputValue(svcContrBllgPk);
	}

	/**
	 * set  SVC_CONTR_BLLG_PK.
	 * @param data SVC_CONTR_BLLG_PK
	 */
	public void setSvcContrBllgPk(String data) {
		inputValue(svcContrBllgPk,data);
	}

	/**
	 * get  XX_COMN_COL_ORD_TXT.
	 * @return XX_COMN_COL_ORD_TXT
	 */
	public String getXxComnColOrdTxt() {
		return outputValue(xxComnColOrdTxt);
	}

	/**
	 * set  XX_COMN_COL_ORD_TXT.
	 * @param data XX_COMN_COL_ORD_TXT
	 */
	public void setXxComnColOrdTxt(String data) {
		inputValue(xxComnColOrdTxt,data);
	}

	/**
	 * get  XX_PAGE_SHOW_FROM_NUM.
	 * @return XX_PAGE_SHOW_FROM_NUM
	 */
	public String getXxPageShowFromNum() {
		return outputValue(xxPageShowFromNum);
	}

	/**
	 * set  XX_PAGE_SHOW_FROM_NUM.
	 * @param data XX_PAGE_SHOW_FROM_NUM
	 */
	public void setXxPageShowFromNum(String data) {
		inputValue(xxPageShowFromNum,data);
	}

	/**
	 * get  XX_PAGE_SHOW_TO_NUM.
	 * @return XX_PAGE_SHOW_TO_NUM
	 */
	public String getXxPageShowToNum() {
		return outputValue(xxPageShowToNum);
	}

	/**
	 * set  XX_PAGE_SHOW_TO_NUM.
	 * @param data XX_PAGE_SHOW_TO_NUM
	 */
	public void setXxPageShowToNum(String data) {
		inputValue(xxPageShowToNum,data);
	}

	/**
	 * get  XX_PAGE_SHOW_OF_NUM.
	 * @return XX_PAGE_SHOW_OF_NUM
	 */
	public String getXxPageShowOfNum() {
		return outputValue(xxPageShowOfNum);
	}

	/**
	 * set  XX_PAGE_SHOW_OF_NUM.
	 * @param data XX_PAGE_SHOW_OF_NUM
	 */
	public void setXxPageShowOfNum(String data) {
		inputValue(xxPageShowOfNum,data);
	}

	/**
	 * get  XX_PAGE_SHOW_CUR_NUM.
	 * @return XX_PAGE_SHOW_CUR_NUM
	 */
	public String getXxPageShowCurNum() {
		return outputValue(xxPageShowCurNum);
	}

	/**
	 * set  XX_PAGE_SHOW_CUR_NUM.
	 * @param data XX_PAGE_SHOW_CUR_NUM
	 */
	public void setXxPageShowCurNum(String data) {
		inputValue(xxPageShowCurNum,data);
	}

	/**
	 * get  XX_PAGE_SHOW_TOT_NUM.
	 * @return XX_PAGE_SHOW_TOT_NUM
	 */
	public String getXxPageShowTotNum() {
		return outputValue(xxPageShowTotNum);
	}

	/**
	 * set  XX_PAGE_SHOW_TOT_NUM.
	 * @param data XX_PAGE_SHOW_TOT_NUM
	 */
	public void setXxPageShowTotNum(String data) {
		inputValue(xxPageShowTotNum,data);
	}

	/**
	 * get  MTR_LB_CD_A.
	 * @param idx1 List Number
	 * @return MTR_LB_CD_A
	 */
	public String getMtrLbCd_A(int idx1) {
		return outputValue(A, idx1, mtrLbCd_A);
	}

	/**
	 * set  MTR_LB_CD_A.
	 * @param data MTR_LB_CD_AArray
	 */
	public void setMtrLbCd_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, mtrLbCd_A, data[j]);
		}
	}

	/**
	 * get  SVC_CONTR_MTR_BLLG_PK_A.
	 * @param idx1 List Number
	 * @return SVC_CONTR_MTR_BLLG_PK_A
	 */
	public String getSvcContrMtrBllgPk_A(int idx1) {
		return outputValue(A, idx1, svcContrMtrBllgPk_A);
	}

	/**
	 * set  SVC_CONTR_MTR_BLLG_PK_A.
	 * @param data SVC_CONTR_MTR_BLLG_PK_AArray
	 */
	public void setSvcContrMtrBllgPk_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcContrMtrBllgPk_A, data[j]);
		}
	}

	/**
	 * get  SVC_CONTR_BLLG_PK_A.
	 * @param idx1 List Number
	 * @return SVC_CONTR_BLLG_PK_A
	 */
	public String getSvcContrBllgPk_A(int idx1) {
		return outputValue(A, idx1, svcContrBllgPk_A);
	}

	/**
	 * set  SVC_CONTR_BLLG_PK_A.
	 * @param data SVC_CONTR_BLLG_PK_AArray
	 */
	public void setSvcContrBllgPk_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcContrBllgPk_A, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_BLLG_MTR_PK_A.
	 * @param idx1 List Number
	 * @return DS_CONTR_BLLG_MTR_PK_A
	 */
	public String getDsContrBllgMtrPk_A(int idx1) {
		return outputValue(A, idx1, dsContrBllgMtrPk_A);
	}

	/**
	 * set  DS_CONTR_BLLG_MTR_PK_A.
	 * @param data DS_CONTR_BLLG_MTR_PK_AArray
	 */
	public void setDsContrBllgMtrPk_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsContrBllgMtrPk_A, data[j]);
		}
	}

	/**
	 * get  SVC_CONTR_XS_MTR_BLLG_PK_A.
	 * @param idx1 List Number
	 * @return SVC_CONTR_XS_MTR_BLLG_PK_A
	 */
	public String getSvcContrXsMtrBllgPk_A(int idx1) {
		return outputValue(A, idx1, svcContrXsMtrBllgPk_A);
	}

	/**
	 * set  SVC_CONTR_XS_MTR_BLLG_PK_A.
	 * @param data SVC_CONTR_XS_MTR_BLLG_PK_AArray
	 */
	public void setSvcContrXsMtrBllgPk_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcContrXsMtrBllgPk_A, data[j]);
		}
	}

	/**
	 * get  CONTR_XS_COPY_PK_A.
	 * @param idx1 List Number
	 * @return CONTR_XS_COPY_PK_A
	 */
	public String getContrXsCopyPk_A(int idx1) {
		return outputValue(A, idx1, contrXsCopyPk_A);
	}

	/**
	 * set  CONTR_XS_COPY_PK_A.
	 * @param data CONTR_XS_COPY_PK_AArray
	 */
	public void setContrXsCopyPk_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, contrXsCopyPk_A, data[j]);
		}
	}

	/**
	 * get  MTR_LB_DESC_TXT_A.
	 * @param idx1 List Number
	 * @return MTR_LB_DESC_TXT_A
	 */
	public String getMtrLbDescTxt_A(int idx1) {
		return outputValue(A, idx1, mtrLbDescTxt_A);
	}

	/**
	 * set  MTR_LB_DESC_TXT_A.
	 * @param data MTR_LB_DESC_TXT_AArray
	 */
	public void setMtrLbDescTxt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, mtrLbDescTxt_A, data[j]);
		}
	}

	/**
	 * get  COPY_INCL_QTY_A.
	 * @param idx1 List Number
	 * @return COPY_INCL_QTY_A
	 */
	public String getCopyInclQty_A(int idx1) {
		return outputValue(A, idx1, copyInclQty_A);
	}

	/**
	 * set  COPY_INCL_QTY_A.
	 * @param data COPY_INCL_QTY_AArray
	 */
	public void setCopyInclQty_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, copyInclQty_A, data[j]);
		}
	}

	/**
	 * get  MTR_COPY_QTY_A.
	 * @param idx1 List Number
	 * @return MTR_COPY_QTY_A
	 */
	public String getMtrCopyQty_A(int idx1) {
		return outputValue(A, idx1, mtrCopyQty_A);
	}

	/**
	 * set  MTR_COPY_QTY_A.
	 * @param data MTR_COPY_QTY_AArray
	 */
	public void setMtrCopyQty_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, mtrCopyQty_A, data[j]);
		}
	}

	/**
	 * get  BLLG_COPY_QTY_A.
	 * @param idx1 List Number
	 * @return BLLG_COPY_QTY_A
	 */
	public String getBllgCopyQty_A(int idx1) {
		return outputValue(A, idx1, bllgCopyQty_A);
	}

	/**
	 * set  BLLG_COPY_QTY_A.
	 * @param data BLLG_COPY_QTY_AArray
	 */
	public void setBllgCopyQty_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, bllgCopyQty_A, data[j]);
		}
	}

	/**
	 * get  XS_MTR_AMT_RATE_A.
	 * @param idx1 List Number
	 * @return XS_MTR_AMT_RATE_A
	 */
	public String getXsMtrAmtRate_A(int idx1) {
		return outputValue(A, idx1, xsMtrAmtRate_A);
	}

	/**
	 * set  XS_MTR_AMT_RATE_A.
	 * @param data XS_MTR_AMT_RATE_AArray
	 */
	public void setXsMtrAmtRate_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xsMtrAmtRate_A, data[j]);
		}
	}

	/**
	 * get  MTR_CHRG_DEAL_AMT_A.
	 * @param idx1 List Number
	 * @return MTR_CHRG_DEAL_AMT_A
	 */
	public String getMtrChrgDealAmt_A(int idx1) {
		return outputValue(A, idx1, mtrChrgDealAmt_A);
	}

	/**
	 * set  MTR_CHRG_DEAL_AMT_A.
	 * @param data MTR_CHRG_DEAL_AMT_AArray
	 */
	public void setMtrChrgDealAmt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, mtrChrgDealAmt_A, data[j]);
		}
	}

	/**
	 * get  XX_TOT_AMT_A.
	 * @param idx1 List Number
	 * @return XX_TOT_AMT_A
	 */
	public String getXxTotAmt_A(int idx1) {
		return outputValue(A, idx1, xxTotAmt_A);
	}

	/**
	 * set  XX_TOT_AMT_A.
	 * @param data XX_TOT_AMT_AArray
	 */
	public void setXxTotAmt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxTotAmt_A, data[j]);
		}
	}

	/**
	 * get  XS_MTR_COPY_QTY_A.
	 * @param idx1 List Number
	 * @return XS_MTR_COPY_QTY_A
	 */
	public String getXsMtrCopyQty_A(int idx1) {
		return outputValue(A, idx1, xsMtrCopyQty_A);
	}

	/**
	 * set  XS_MTR_COPY_QTY_A.
	 * @param data XS_MTR_COPY_QTY_AArray
	 */
	public void setXsMtrCopyQty_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xsMtrCopyQty_A, data[j]);
		}
	}

	/**
	 * get  XS_MTR_CHRG_DEAL_AMT_A.
	 * @param idx1 List Number
	 * @return XS_MTR_CHRG_DEAL_AMT_A
	 */
	public String getXsMtrChrgDealAmt_A(int idx1) {
		return outputValue(A, idx1, xsMtrChrgDealAmt_A);
	}

	/**
	 * set  XS_MTR_CHRG_DEAL_AMT_A.
	 * @param data XS_MTR_CHRG_DEAL_AMT_AArray
	 */
	public void setXsMtrChrgDealAmt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xsMtrChrgDealAmt_A, data[j]);
		}
	}

	/**
	 * get  XX_DTL_CNT_A.
	 * @param idx1 List Number
	 * @return XX_DTL_CNT_A
	 */
	public String getXxDtlCnt_A(int idx1) {
		return outputValue(A, idx1, xxDtlCnt_A);
	}

	/**
	 * set  XX_DTL_CNT_A.
	 * @param data XX_DTL_CNT_AArray
	 */
	public void setXxDtlCnt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxDtlCnt_A, data[j]);
		}
	}

	/**
	 * get  XS_CHRG_TP_CD_A.
	 * @param idx1 List Number
	 * @return XS_CHRG_TP_CD_A
	 */
	public String getXsChrgTpCd_A(int idx1) {
		return outputValue(A, idx1, xsChrgTpCd_A);
	}

	/**
	 * set  XS_CHRG_TP_CD_A.
	 * @param data XS_CHRG_TP_CD_AArray
	 */
	public void setXsChrgTpCd_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xsChrgTpCd_A, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_CRAT_TS_A.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_CRAT_TS_A
	 */
	public String getXxRecHistCratTs_A(int idx1) {
		return outputValue(A, idx1, xxRecHistCratTs_A);
	}

	/**
	 * set  XX_REC_HIST_CRAT_TS_A.
	 * @param data XX_REC_HIST_CRAT_TS_AArray
	 */
	public void setXxRecHistCratTs_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRecHistCratTs_A, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_CRAT_BY_NM_A.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_CRAT_BY_NM_A
	 */
	public String getXxRecHistCratByNm_A(int idx1) {
		return outputValue(A, idx1, xxRecHistCratByNm_A);
	}

	/**
	 * set  XX_REC_HIST_CRAT_BY_NM_A.
	 * @param data XX_REC_HIST_CRAT_BY_NM_AArray
	 */
	public void setXxRecHistCratByNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRecHistCratByNm_A, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_UPD_TS_A.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_UPD_TS_A
	 */
	public String getXxRecHistUpdTs_A(int idx1) {
		return outputValue(A, idx1, xxRecHistUpdTs_A);
	}

	/**
	 * set  XX_REC_HIST_UPD_TS_A.
	 * @param data XX_REC_HIST_UPD_TS_AArray
	 */
	public void setXxRecHistUpdTs_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRecHistUpdTs_A, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_UPD_BY_NM_A.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_UPD_BY_NM_A
	 */
	public String getXxRecHistUpdByNm_A(int idx1) {
		return outputValue(A, idx1, xxRecHistUpdByNm_A);
	}

	/**
	 * set  XX_REC_HIST_UPD_BY_NM_A.
	 * @param data XX_REC_HIST_UPD_BY_NM_AArray
	 */
	public void setXxRecHistUpdByNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRecHistUpdByNm_A, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_TBL_NM_A.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_TBL_NM_A
	 */
	public String getXxRecHistTblNm_A(int idx1) {
		return outputValue(A, idx1, xxRecHistTblNm_A);
	}

	/**
	 * set  XX_REC_HIST_TBL_NM_A.
	 * @param data XX_REC_HIST_TBL_NM_AArray
	 */
	public void setXxRecHistTblNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRecHistTblNm_A, data[j]);
		}
	}

	/**
	 * get  BILL_TO_CUST_CD_B.
	 * @param idx1 List Number
	 * @return BILL_TO_CUST_CD_B
	 */
	public String getBillToCustCd_B(int idx1) {
		return outputValue(B, idx1, billToCustCd_B);
	}

	/**
	 * set  BILL_TO_CUST_CD_B.
	 * @param data BILL_TO_CUST_CD_BArray
	 */
	public void setBillToCustCd_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, billToCustCd_B, data[j]);
		}
	}

	/**
	 * get  SVC_CONTR_BLLG_THRU_DT_B.
	 * @param idx1 List Number
	 * @return SVC_CONTR_BLLG_THRU_DT_B
	 */
	public String getSvcContrBllgThruDt_B(int idx1) {
		return outputValue(B, idx1, svcContrBllgThruDt_B, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  SVC_CONTR_BLLG_THRU_DT_B.
	 * @param data SVC_CONTR_BLLG_THRU_DT_BArray
	 */
	public void setSvcContrBllgThruDt_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i,  svcContrBllgThruDt_B, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  DS_CONTR_CATG_CD_B.
	 * @param idx1 List Number
	 * @return DS_CONTR_CATG_CD_B
	 */
	public String getDsContrCatgCd_B(int idx1) {
		return outputValue(B, idx1, dsContrCatgCd_B);
	}

	/**
	 * set  DS_CONTR_CATG_CD_B.
	 * @param data DS_CONTR_CATG_CD_BArray
	 */
	public void setDsContrCatgCd_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, dsContrCatgCd_B, data[j]);
		}
	}

	/**
	 * get  SVC_PHYS_MTR_READ_PK_B.
	 * @param idx1 List Number
	 * @return SVC_PHYS_MTR_READ_PK_B
	 */
	public String getSvcPhysMtrReadPk_B(int idx1) {
		return outputValue(B, idx1, svcPhysMtrReadPk_B);
	}

	/**
	 * set  SVC_PHYS_MTR_READ_PK_B.
	 * @param data SVC_PHYS_MTR_READ_PK_BArray
	 */
	public void setSvcPhysMtrReadPk_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, svcPhysMtrReadPk_B, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_PK_B.
	 * @param idx1 List Number
	 * @return DS_CONTR_PK_B
	 */
	public String getDsContrPk_B(int idx1) {
		return outputValue(B, idx1, dsContrPk_B);
	}

	/**
	 * set  DS_CONTR_PK_B.
	 * @param data DS_CONTR_PK_BArray
	 */
	public void setDsContrPk_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, dsContrPk_B, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_NUM_B.
	 * @param idx1 List Number
	 * @return DS_CONTR_NUM_B
	 */
	public String getDsContrNum_B(int idx1) {
		return outputValue(B, idx1, dsContrNum_B);
	}

	/**
	 * set  DS_CONTR_NUM_B.
	 * @param data DS_CONTR_NUM_BArray
	 */
	public void setDsContrNum_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, dsContrNum_B, data[j]);
		}
	}

	/**
	 * get  MTR_LB_CD_B.
	 * @param idx1 List Number
	 * @return MTR_LB_CD_B
	 */
	public String getMtrLbCd_B(int idx1) {
		return outputValue(B, idx1, mtrLbCd_B);
	}

	/**
	 * set  MTR_LB_CD_B.
	 * @param data MTR_LB_CD_BArray
	 */
	public void setMtrLbCd_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, mtrLbCd_B, data[j]);
		}
	}

	/**
	 * get  SVC_MACH_MSTR_PK_B.
	 * @param idx1 List Number
	 * @return SVC_MACH_MSTR_PK_B
	 */
	public String getSvcMachMstrPk_B(int idx1) {
		return outputValue(B, idx1, svcMachMstrPk_B);
	}

	/**
	 * set  SVC_MACH_MSTR_PK_B.
	 * @param data SVC_MACH_MSTR_PK_BArray
	 */
	public void setSvcMachMstrPk_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, svcMachMstrPk_B, data[j]);
		}
	}

	/**
	 * get  SER_NUM_B.
	 * @param idx1 List Number
	 * @return SER_NUM_B
	 */
	public String getSerNum_B(int idx1) {
		return outputValue(B, idx1, serNum_B);
	}

	/**
	 * set  SER_NUM_B.
	 * @param data SER_NUM_BArray
	 */
	public void setSerNum_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, serNum_B, data[j]);
		}
	}

	/**
	 * get  MDSE_CD_B.
	 * @param idx1 List Number
	 * @return MDSE_CD_B
	 */
	public String getMdseCd_B(int idx1) {
		return outputValue(B, idx1, mdseCd_B);
	}

	/**
	 * set  MDSE_CD_B.
	 * @param data MDSE_CD_BArray
	 */
	public void setMdseCd_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, mdseCd_B, data[j]);
		}
	}

	/**
	 * get  SVC_CONFIG_MSTR_PK_B.
	 * @param idx1 List Number
	 * @return SVC_CONFIG_MSTR_PK_B
	 */
	public String getSvcConfigMstrPk_B(int idx1) {
		return outputValue(B, idx1, svcConfigMstrPk_B);
	}

	/**
	 * set  SVC_CONFIG_MSTR_PK_B.
	 * @param data SVC_CONFIG_MSTR_PK_BArray
	 */
	public void setSvcConfigMstrPk_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, svcConfigMstrPk_B, data[j]);
		}
	}

	/**
	 * get  SVC_MACH_SQ_NUM_B.
	 * @param idx1 List Number
	 * @return SVC_MACH_SQ_NUM_B
	 */
	public String getSvcMachSqNum_B(int idx1) {
		return outputValue(B, idx1, svcMachSqNum_B);
	}

	/**
	 * set  SVC_MACH_SQ_NUM_B.
	 * @param data SVC_MACH_SQ_NUM_BArray
	 */
	public void setSvcMachSqNum_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, svcMachSqNum_B, data[j]);
		}
	}

	/**
	 * get  DS_MTR_READ_TP_CD_B.
	 * @param idx1 List Number
	 * @return DS_MTR_READ_TP_CD_B
	 */
	public String getDsMtrReadTpCd_B(int idx1) {
		return outputValue(B, idx1, dsMtrReadTpCd_B);
	}

	/**
	 * set  DS_MTR_READ_TP_CD_B.
	 * @param data DS_MTR_READ_TP_CD_BArray
	 */
	public void setDsMtrReadTpCd_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, dsMtrReadTpCd_B, data[j]);
		}
	}

	/**
	 * get  DS_MTR_READ_TP_SORT_NUM_B.
	 * @param idx1 List Number
	 * @return DS_MTR_READ_TP_SORT_NUM_B
	 */
	public String getDsMtrReadTpSortNum_B(int idx1) {
		return outputValue(B, idx1, dsMtrReadTpSortNum_B);
	}

	/**
	 * set  DS_MTR_READ_TP_SORT_NUM_B.
	 * @param data DS_MTR_READ_TP_SORT_NUM_BArray
	 */
	public void setDsMtrReadTpSortNum_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, dsMtrReadTpSortNum_B, data[j]);
		}
	}

	/**
	 * get  SVC_PHYS_MTR_PK_B.
	 * @param idx1 List Number
	 * @return SVC_PHYS_MTR_PK_B
	 */
	public String getSvcPhysMtrPk_B(int idx1) {
		return outputValue(B, idx1, svcPhysMtrPk_B);
	}

	/**
	 * set  SVC_PHYS_MTR_PK_B.
	 * @param data SVC_PHYS_MTR_PK_BArray
	 */
	public void setSvcPhysMtrPk_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, svcPhysMtrPk_B, data[j]);
		}
	}

	/**
	 * get  PHYS_MTR_ID_B.
	 * @param idx1 List Number
	 * @return PHYS_MTR_ID_B
	 */
	public String getPhysMtrId_B(int idx1) {
		return outputValue(B, idx1, physMtrId_B);
	}

	/**
	 * set  PHYS_MTR_ID_B.
	 * @param data PHYS_MTR_ID_BArray
	 */
	public void setPhysMtrId_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, physMtrId_B, data[j]);
		}
	}

	/**
	 * get  MTR_CLS_TP_CD_B.
	 * @param idx1 List Number
	 * @return MTR_CLS_TP_CD_B
	 */
	public String getMtrClsTpCd_B(int idx1) {
		return outputValue(B, idx1, mtrClsTpCd_B);
	}

	/**
	 * set  MTR_CLS_TP_CD_B.
	 * @param data MTR_CLS_TP_CD_BArray
	 */
	public void setMtrClsTpCd_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, mtrClsTpCd_B, data[j]);
		}
	}

	/**
	 * get  MTR_READ_SRC_TP_CD_B.
	 * @param idx1 List Number
	 * @return MTR_READ_SRC_TP_CD_B
	 */
	public String getMtrReadSrcTpCd_B(int idx1) {
		return outputValue(B, idx1, mtrReadSrcTpCd_B);
	}

	/**
	 * set  MTR_READ_SRC_TP_CD_B.
	 * @param data MTR_READ_SRC_TP_CD_BArray
	 */
	public void setMtrReadSrcTpCd_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, mtrReadSrcTpCd_B, data[j]);
		}
	}

	/**
	 * get  MTR_READ_SRC_TP_SORT_NUM_B.
	 * @param idx1 List Number
	 * @return MTR_READ_SRC_TP_SORT_NUM_B
	 */
	public String getMtrReadSrcTpSortNum_B(int idx1) {
		return outputValue(B, idx1, mtrReadSrcTpSortNum_B);
	}

	/**
	 * set  MTR_READ_SRC_TP_SORT_NUM_B.
	 * @param data MTR_READ_SRC_TP_SORT_NUM_BArray
	 */
	public void setMtrReadSrcTpSortNum_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, mtrReadSrcTpSortNum_B, data[j]);
		}
	}

	/**
	 * get  DS_MTR_READ_TP_DESC_TXT_B.
	 * @param idx1 List Number
	 * @return DS_MTR_READ_TP_DESC_TXT_B
	 */
	public String getDsMtrReadTpDescTxt_B(int idx1) {
		return outputValue(B, idx1, dsMtrReadTpDescTxt_B);
	}

	/**
	 * set  DS_MTR_READ_TP_DESC_TXT_B.
	 * @param data DS_MTR_READ_TP_DESC_TXT_BArray
	 */
	public void setDsMtrReadTpDescTxt_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, dsMtrReadTpDescTxt_B, data[j]);
		}
	}

	/**
	 * get  MTR_READ_DT_BS.
	 * @param idx1 List Number
	 * @return MTR_READ_DT_BS
	 */
	public String getMtrReadDt_BS(int idx1) {
		return outputValue(B, idx1, mtrReadDt_BS, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  MTR_READ_DT_BS.
	 * @param data MTR_READ_DT_BSArray
	 */
	public void setMtrReadDt_BS(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i,  mtrReadDt_BS, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  MTR_READ_DT_BL.
	 * @param idx1 List Number
	 * @return MTR_READ_DT_BL
	 */
	public String getMtrReadDt_BL(int idx1) {
		return outputValue(B, idx1, mtrReadDt_BL, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  MTR_READ_DT_BL.
	 * @param data MTR_READ_DT_BLArray
	 */
	public void setMtrReadDt_BL(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i,  mtrReadDt_BL, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  MTR_READ_DT_B.
	 * @param idx1 List Number
	 * @return MTR_READ_DT_B
	 */
	public String getMtrReadDt_B(int idx1) {
		return outputValue(B, idx1, mtrReadDt_B, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  MTR_READ_DT_B.
	 * @param data MTR_READ_DT_BArray
	 */
	public void setMtrReadDt_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i,  mtrReadDt_B, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  MTR_LB_DESC_TXT_B.
	 * @param idx1 List Number
	 * @return MTR_LB_DESC_TXT_B
	 */
	public String getMtrLbDescTxt_B(int idx1) {
		return outputValue(B, idx1, mtrLbDescTxt_B);
	}

	/**
	 * set  MTR_LB_DESC_TXT_B.
	 * @param data MTR_LB_DESC_TXT_BArray
	 */
	public void setMtrLbDescTxt_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, mtrLbDescTxt_B, data[j]);
		}
	}

	/**
	 * get  READ_MTR_CNT_BL.
	 * @param idx1 List Number
	 * @return READ_MTR_CNT_BL
	 */
	public String getReadMtrCnt_BL(int idx1) {
		return outputValue(B, idx1, readMtrCnt_BL);
	}

	/**
	 * set  READ_MTR_CNT_BL.
	 * @param data READ_MTR_CNT_BLArray
	 */
	public void setReadMtrCnt_BL(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, readMtrCnt_BL, data[j]);
		}
	}

	/**
	 * get  READ_MTR_CNT_B.
	 * @param idx1 List Number
	 * @return READ_MTR_CNT_B
	 */
	public String getReadMtrCnt_B(int idx1) {
		return outputValue(B, idx1, readMtrCnt_B);
	}

	/**
	 * set  READ_MTR_CNT_B.
	 * @param data READ_MTR_CNT_BArray
	 */
	public void setReadMtrCnt_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, readMtrCnt_B, data[j]);
		}
	}

	/**
	 * get  SVC_PHYS_MTR_READ_GRP_SQ_B.
	 * @param idx1 List Number
	 * @return SVC_PHYS_MTR_READ_GRP_SQ_B
	 */
	public String getSvcPhysMtrReadGrpSq_B(int idx1) {
		return outputValue(B, idx1, svcPhysMtrReadGrpSq_B);
	}

	/**
	 * set  SVC_PHYS_MTR_READ_GRP_SQ_B.
	 * @param data SVC_PHYS_MTR_READ_GRP_SQ_BArray
	 */
	public void setSvcPhysMtrReadGrpSq_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, svcPhysMtrReadGrpSq_B, data[j]);
		}
	}

	/**
	 * get  MTR_READ_SRC_TP_DESC_TXT_B.
	 * @param idx1 List Number
	 * @return MTR_READ_SRC_TP_DESC_TXT_B
	 */
	public String getMtrReadSrcTpDescTxt_B(int idx1) {
		return outputValue(B, idx1, mtrReadSrcTpDescTxt_B);
	}

	/**
	 * set  MTR_READ_SRC_TP_DESC_TXT_B.
	 * @param data MTR_READ_SRC_TP_DESC_TXT_BArray
	 */
	public void setMtrReadSrcTpDescTxt_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, mtrReadSrcTpDescTxt_B, data[j]);
		}
	}

	/**
	 * get  AVG_MTR_READ_CNT_B.
	 * @param idx1 List Number
	 * @return AVG_MTR_READ_CNT_B
	 */
	public String getAvgMtrReadCnt_B(int idx1) {
		return outputValue(B, idx1, avgMtrReadCnt_B);
	}

	/**
	 * set  AVG_MTR_READ_CNT_B.
	 * @param data AVG_MTR_READ_CNT_BArray
	 */
	public void setAvgMtrReadCnt_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, avgMtrReadCnt_B, data[j]);
		}
	}

	/**
	 * get  MTR_ENTRY_CMNT_TXT_B.
	 * @param idx1 List Number
	 * @return MTR_ENTRY_CMNT_TXT_B
	 */
	public String getMtrEntryCmntTxt_B(int idx1) {
		return outputValue(B, idx1, mtrEntryCmntTxt_B);
	}

	/**
	 * set  MTR_ENTRY_CMNT_TXT_B.
	 * @param data MTR_ENTRY_CMNT_TXT_BArray
	 */
	public void setMtrEntryCmntTxt_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, mtrEntryCmntTxt_B, data[j]);
		}
	}

	/**
	 * get  READ_MTR_CNT_BN.
	 * @param idx1 List Number
	 * @return READ_MTR_CNT_BN
	 */
	public String getReadMtrCnt_BN(int idx1) {
		return outputValue(B, idx1, readMtrCnt_BN);
	}

	/**
	 * set  READ_MTR_CNT_BN.
	 * @param data READ_MTR_CNT_BNArray
	 */
	public void setReadMtrCnt_BN(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, readMtrCnt_BN, data[j]);
		}
	}

	/**
	 * get  MTR_ENTRY_CMNT_TXT_BN.
	 * @param idx1 List Number
	 * @return MTR_ENTRY_CMNT_TXT_BN
	 */
	public String getMtrEntryCmntTxt_BN(int idx1) {
		return outputValue(B, idx1, mtrEntryCmntTxt_BN);
	}

	/**
	 * set  MTR_ENTRY_CMNT_TXT_BN.
	 * @param data MTR_ENTRY_CMNT_TXT_BNArray
	 */
	public void setMtrEntryCmntTxt_BN(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, mtrEntryCmntTxt_BN, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_CRAT_TS_B.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_CRAT_TS_B
	 */
	public String getXxRecHistCratTs_B(int idx1) {
		return outputValue(B, idx1, xxRecHistCratTs_B);
	}

	/**
	 * set  XX_REC_HIST_CRAT_TS_B.
	 * @param data XX_REC_HIST_CRAT_TS_BArray
	 */
	public void setXxRecHistCratTs_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, xxRecHistCratTs_B, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_CRAT_BY_NM_B.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_CRAT_BY_NM_B
	 */
	public String getXxRecHistCratByNm_B(int idx1) {
		return outputValue(B, idx1, xxRecHistCratByNm_B);
	}

	/**
	 * set  XX_REC_HIST_CRAT_BY_NM_B.
	 * @param data XX_REC_HIST_CRAT_BY_NM_BArray
	 */
	public void setXxRecHistCratByNm_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, xxRecHistCratByNm_B, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_UPD_TS_B.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_UPD_TS_B
	 */
	public String getXxRecHistUpdTs_B(int idx1) {
		return outputValue(B, idx1, xxRecHistUpdTs_B);
	}

	/**
	 * set  XX_REC_HIST_UPD_TS_B.
	 * @param data XX_REC_HIST_UPD_TS_BArray
	 */
	public void setXxRecHistUpdTs_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, xxRecHistUpdTs_B, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_UPD_BY_NM_B.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_UPD_BY_NM_B
	 */
	public String getXxRecHistUpdByNm_B(int idx1) {
		return outputValue(B, idx1, xxRecHistUpdByNm_B);
	}

	/**
	 * set  XX_REC_HIST_UPD_BY_NM_B.
	 * @param data XX_REC_HIST_UPD_BY_NM_BArray
	 */
	public void setXxRecHistUpdByNm_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, xxRecHistUpdByNm_B, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_TBL_NM_B.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_TBL_NM_B
	 */
	public String getXxRecHistTblNm_B(int idx1) {
		return outputValue(B, idx1, xxRecHistTblNm_B);
	}

	/**
	 * set  XX_REC_HIST_TBL_NM_B.
	 * @param data XX_REC_HIST_TBL_NM_BArray
	 */
	public void setXxRecHistTblNm_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, xxRecHistTblNm_B, data[j]);
		}
	}

	/**
	 * get  MTR_LB_DESC_TXT_FN.
	 * @return MTR_LB_DESC_TXT_FN
	 */
	public String getMtrLbDescTxt_FN() {
		return outputValue(mtrLbDescTxt_FN);
	}

	/**
	 * set  MTR_LB_DESC_TXT_FN.
	 * @param data MTR_LB_DESC_TXT_FN
	 */
	public void setMtrLbDescTxt_FN(String data) {
		inputValue(mtrLbDescTxt_FN,data);
	}

	/**
	 * get  MTR_LB_DESC_TXT_FT.
	 * @return MTR_LB_DESC_TXT_FT
	 */
	public String getMtrLbDescTxt_FT() {
		return outputValue(mtrLbDescTxt_FT);
	}

	/**
	 * set  MTR_LB_DESC_TXT_FT.
	 * @param data MTR_LB_DESC_TXT_FT
	 */
	public void setMtrLbDescTxt_FT(String data) {
		inputValue(mtrLbDescTxt_FT,data);
	}

	/**
	 * get  SER_NUM_F.
	 * @return SER_NUM_F
	 */
	public String getSerNum_F() {
		return outputValue(serNum_F);
	}

	/**
	 * set  SER_NUM_F.
	 * @param data SER_NUM_F
	 */
	public void setSerNum_F(String data) {
		inputValue(serNum_F,data);
	}

	/**
	 * get  XX_WRN_SKIP_FLG.
	 * @return XX_WRN_SKIP_FLG
	 */
	public String getXxWrnSkipFlg() {
		return outputValue(xxWrnSkipFlg);
	}

	/**
	 * set  XX_WRN_SKIP_FLG.
	 * @param data XX_WRN_SKIP_FLG
	 */
	public void setXxWrnSkipFlg(String data) {
		inputValue(xxWrnSkipFlg,data);
	}

}

