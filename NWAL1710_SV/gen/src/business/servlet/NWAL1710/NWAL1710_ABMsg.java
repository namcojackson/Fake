//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20160310174556000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NWAL1710_ABMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NWAL1710;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NWAL1710 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NWAL1710_ABMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** DS_ORD_CATG_CD_A*/
	public final EZDBStringItem              dsOrdCatgCd_A;

    /** DS_ORD_CATG_NM_A*/
	public final EZDBStringItem              dsOrdCatgNm_A;

    /** DS_ORD_TP_CD_A*/
	public final EZDBStringItem              dsOrdTpCd_A;

    /** DS_ORD_TP_NM_A*/
	public final EZDBStringItem              dsOrdTpNm_A;

    /** ORD_PROC_TP_NM_A*/
	public final EZDBStringItem              ordProcTpNm_A;

    /** DS_ORD_RSN_GRP_NM_A*/
	public final EZDBStringItem              dsOrdRsnGrpNm_A;

    /** DS_ORD_TP_DESC_TXT_A*/
	public final EZDBStringItem              dsOrdTpDescTxt_A;

    /** LINE_BIZ_TP_NM_A*/
	public final EZDBStringItem              lineBizTpNm_A;

    /** EFF_FROM_DT_A*/
	public final EZDBDateItem              effFromDt_A;

    /** EFF_THRU_DT_A*/
	public final EZDBDateItem              effThruDt_A;

    /** XX_YES_NO_NM_A*/
	public final EZDBStringItem              xxYesNoNm_A;


	/**
	 * NWAL1710_ABMsg is constructor.
	 * The initialization when the instance of NWAL1710_ABMsg is generated.
	 */
	public NWAL1710_ABMsg() {
		this(false, -1);
	}

	/**
	 * NWAL1710_ABMsg is constructor.
	 * The initialization when the instance of NWAL1710_ABMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NWAL1710_ABMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		dsOrdCatgCd_A = (EZDBStringItem)newItem("dsOrdCatgCd_A");
		dsOrdCatgNm_A = (EZDBStringItem)newItem("dsOrdCatgNm_A");
		dsOrdTpCd_A = (EZDBStringItem)newItem("dsOrdTpCd_A");
		dsOrdTpNm_A = (EZDBStringItem)newItem("dsOrdTpNm_A");
		ordProcTpNm_A = (EZDBStringItem)newItem("ordProcTpNm_A");
		dsOrdRsnGrpNm_A = (EZDBStringItem)newItem("dsOrdRsnGrpNm_A");
		dsOrdTpDescTxt_A = (EZDBStringItem)newItem("dsOrdTpDescTxt_A");
		lineBizTpNm_A = (EZDBStringItem)newItem("lineBizTpNm_A");
		effFromDt_A = (EZDBDateItem)newItem("effFromDt_A");
		effThruDt_A = (EZDBDateItem)newItem("effThruDt_A");
		xxYesNoNm_A = (EZDBStringItem)newItem("xxYesNoNm_A");
	}

	/**
	 * get the type of array which is stored
	 * @return NWAL1710_ABMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NWAL1710_ABMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"dsOrdCatgCd_A", "dsOrdCatgCd_A", "A", null, TYPE_HANKAKUEISU, "4", null},
	{"dsOrdCatgNm_A", "dsOrdCatgNm_A", "A", null, TYPE_HANKAKUEISU, "50", null},
	{"dsOrdTpCd_A", "dsOrdTpCd_A", "A", null, TYPE_HANKAKUEISU, "4", null},
	{"dsOrdTpNm_A", "dsOrdTpNm_A", "A", null, TYPE_HANKAKUEISU, "30", null},
	{"ordProcTpNm_A", "ordProcTpNm_A", "A", null, TYPE_HANKAKUEISU, "30", null},
	{"dsOrdRsnGrpNm_A", "dsOrdRsnGrpNm_A", "A", null, TYPE_HANKAKUEISU, "50", null},
	{"dsOrdTpDescTxt_A", "dsOrdTpDescTxt_A", "A", null, TYPE_HANKAKUEISU, "50", null},
	{"lineBizTpNm_A", "lineBizTpNm_A", "A", null, TYPE_HANKAKUEISU, "70", null},
	{"effFromDt_A", "effFromDt_A", "A", null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt_A", "effThruDt_A", "A", null, TYPE_NENTSUKIHI, "8", null},
	{"xxYesNoNm_A", "xxYesNoNm_A", "A", null, TYPE_HANKAKUEISU, "3", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"DS_ORD_CATG_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdCatgCd_A
        {"DS_ORD_CATG_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdCatgNm_A
        {"DS_ORD_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdTpCd_A
        {"DS_ORD_TP_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdTpNm_A
        {"ORD_PROC_TP_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordProcTpNm_A
        {"DS_ORD_RSN_GRP_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdRsnGrpNm_A
        {"DS_ORD_TP_DESC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdTpDescTxt_A
        {"LINE_BIZ_TP_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//lineBizTpNm_A
        {"EFF_FROM_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//effFromDt_A
        {"EFF_THRU_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//effThruDt_A
        {"XX_YES_NO_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxYesNoNm_A
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

