//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20170530103912000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0340BMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NSAL0340;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL0340 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL0340BMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** GLBL_CMPY_CD*/
	public final EZDBStringItem              glblCmpyCd;

    /** DS_CONTR_DTL_PK*/
	public final EZDBBigDecimalItem              dsContrDtlPk;

    /** SVC_INV_CHRG_TP_CD*/
	public final EZDBStringItem              svcInvChrgTpCd;

    /** SVC_INV_CHRG_TP_NM*/
	public final EZDBStringItem              svcInvChrgTpNm;

    /** XX_MODE_CD*/
	public final EZDBStringItem              xxModeCd;

    /** DS_CONTR_NUM*/
	public final EZDBStringItem              dsContrNum;

    /** SER_NUM*/
	public final EZDBStringItem              serNum;

    /** T_MDL_NM*/
	public final EZDBStringItem              t_MdlNm;

    /** MDSE_CD*/
	public final EZDBStringItem              mdseCd;

    /** MDSE_DESC_SHORT_TXT*/
	public final EZDBStringItem              mdseDescShortTxt;

    /** DS_CONTR_STS_CD*/
	public final EZDBStringItem              dsContrStsCd;

    /** DS_CONTR_DTL_STS_CD*/
	public final EZDBStringItem              dsContrDtlStsCd;

    /** A*/
	public final business.servlet.NSAL0340.NSAL0340_ABMsgArray              A;

    /** SKIP_RECOV_TP_CD_L0*/
	public final EZDBStringItemArray              skipRecovTpCd_L0;

    /** SKIP_RECOV_TP_DESC_TXT_L0*/
	public final EZDBStringItemArray              skipRecovTpDescTxt_L0;

    /** ACTV_FLG*/
	public final EZDBStringItem              actvFlg;


	/**
	 * NSAL0340BMsg is constructor.
	 * The initialization when the instance of NSAL0340BMsg is generated.
	 */
	public NSAL0340BMsg() {
		this(false, -1);
	}

	/**
	 * NSAL0340BMsg is constructor.
	 * The initialization when the instance of NSAL0340BMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL0340BMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		glblCmpyCd = (EZDBStringItem)newItem("glblCmpyCd");
		dsContrDtlPk = (EZDBBigDecimalItem)newItem("dsContrDtlPk");
		svcInvChrgTpCd = (EZDBStringItem)newItem("svcInvChrgTpCd");
		svcInvChrgTpNm = (EZDBStringItem)newItem("svcInvChrgTpNm");
		xxModeCd = (EZDBStringItem)newItem("xxModeCd");
		dsContrNum = (EZDBStringItem)newItem("dsContrNum");
		serNum = (EZDBStringItem)newItem("serNum");
		t_MdlNm = (EZDBStringItem)newItem("t_MdlNm");
		mdseCd = (EZDBStringItem)newItem("mdseCd");
		mdseDescShortTxt = (EZDBStringItem)newItem("mdseDescShortTxt");
		dsContrStsCd = (EZDBStringItem)newItem("dsContrStsCd");
		dsContrDtlStsCd = (EZDBStringItem)newItem("dsContrDtlStsCd");
		A = (business.servlet.NSAL0340.NSAL0340_ABMsgArray)newMsgArray("A");
		skipRecovTpCd_L0 = (EZDBStringItemArray)newItemArray("skipRecovTpCd_L0");
		skipRecovTpDescTxt_L0 = (EZDBStringItemArray)newItemArray("skipRecovTpDescTxt_L0");
		actvFlg = (EZDBStringItem)newItem("actvFlg");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL0340BMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL0340BMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"glblCmpyCd", "glblCmpyCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"dsContrDtlPk", "dsContrDtlPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"svcInvChrgTpCd", "svcInvChrgTpCd", null, null, TYPE_HANKAKUEISU, "6", null},
	{"svcInvChrgTpNm", "svcInvChrgTpNm", null, null, TYPE_HANKAKUEISU, "30", null},
	{"xxModeCd", "xxModeCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"dsContrNum", "dsContrNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"serNum", "serNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"t_MdlNm", "t_MdlNm", null, null, TYPE_HANKAKUEISU, "50", null},
	{"mdseCd", "mdseCd", null, null, TYPE_HANKAKUEISU, "16", null},
	{"mdseDescShortTxt", "mdseDescShortTxt", null, null, TYPE_HANKAKUEISU, "250", null},
	{"dsContrStsCd", "dsContrStsCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"dsContrDtlStsCd", "dsContrDtlStsCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"A", "A", null, "12", "business.servlet.NSAL0340.NSAL0340_ABMsgArray", null, null},
	
	{"skipRecovTpCd_L0", "skipRecovTpCd_L0", "L0", "99", TYPE_HANKAKUEISU, "2", null},
	{"skipRecovTpDescTxt_L0", "skipRecovTpDescTxt_L0", "L0", "99", TYPE_HANKAKUEISU, "50", null},
	{"actvFlg", "actvFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"GLBL_CMPY_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//glblCmpyCd
        {"DS_CONTR_DTL_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrDtlPk
        {"SVC_INV_CHRG_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcInvChrgTpCd
        {"SVC_INV_CHRG_TP_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcInvChrgTpNm
        {"XX_MODE_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxModeCd
        {"DS_CONTR_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrNum
        {"SER_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNum
        {"T_MDL_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//t_MdlNm
        {"MDSE_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd
        {"MDSE_DESC_SHORT_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseDescShortTxt
        {"DS_CONTR_STS_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrStsCd
        {"DS_CONTR_DTL_STS_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrDtlStsCd
		null,	//A
        {"SKIP_RECOV_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//skipRecovTpCd_L0
        {"SKIP_RECOV_TP_DESC_TXT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//skipRecovTpDescTxt_L0
        {"ACTV_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//actvFlg
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

