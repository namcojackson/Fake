<?xml version="1.0" encoding="UTF-8"?>
<sqlMap namespace="NFZC202001">

    <statement id="checkAccount_Mode01" parameterClass="Map" resultClass="Map">
        SELECT
             MAX(NVL(B.AR_BAL_AMT, 0))       AS AR_BAL_AMT
            ,MAX(B.LAST_PMT_RCPT_DT)         AS LAST_PMT_RCPT_DT
            ,MAX(B.OVD_WS_FLG)               AS OVD_WS_FLG
            ,MAX(B.OVD_PRT_FLG)              AS OVD_PRT_FLG
            ,MAX(C.GRACE_PER_DAYS_AOT)       AS GRACE_PER_DAYS_AOT
            ,MAX(NVL(D.CONTR_GRACE_PER_DAYS_AOT ,0)) AS CONTR_GRACE_PER_DAYS_AOT <!-- QC#22095 add -->
        FROM
             SELL_TO_CUST       A
            ,DS_ACCT_CR_PRFL    B
            ,CR_RISK_CLS        C
            ,CONTR_CR_RISK_CLS  D <!-- QC#22095 add -->
        WHERE
                A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND B.GLBL_CMPY_CD         = A.GLBL_CMPY_CD
            AND C.GLBL_CMPY_CD         = A.GLBL_CMPY_CD
            AND D.GLBL_CMPY_CD         = A.GLBL_CMPY_CD <!-- QC#22095 add -->
            AND A.SELL_TO_CUST_CD      = #sellToCustCd#
            AND A.RGTN_STS_CD          IN ($rgtnStsCd$)
            AND B.DS_ACCT_NUM          = A.SELL_TO_CUST_CD
            AND B.CR_RISK_CLS_CD       = C.CR_RISK_CLS_CD
            AND B.CONTR_CR_RISK_CLS_CD = D.CONTR_CR_RISK_CLS_CD <!-- QC#22095 add -->
            AND A.EZCANCELFLAG         = '0'
            AND B.EZCANCELFLAG         = '0'
            AND C.EZCANCELFLAG         = '0'
            AND D.EZCANCELFLAG         = '0' <!-- QC#22095 add -->
    </statement>

    <statement id="checkAccount_Mode02" parameterClass="Map" resultClass="Map">
        SELECT
             MAX(C.AR_BAL_AMT)               AS AR_BAL_AMT
            ,MAX(C.LAST_PMT_RCPT_DT)         AS LAST_PMT_RCPT_DT
            ,MAX(C.OVD_WS_FLG)               AS OVD_WS_FLG
            ,MAX(C.OVD_PRT_FLG)              AS OVD_PRT_FLG
            ,MAX(D.GRACE_PER_DAYS_AOT)       AS GRACE_PER_DAYS_AOT
            ,MAX(A.SELL_TO_CUST_CD)          AS SELL_TO_CUST_CD
            ,MAX(A.BILL_TO_CUST_PK)          AS BILL_TO_CUST_PK
            ,MAX(NVL(E.CONTR_GRACE_PER_DAYS_AOT, 0)) AS CONTR_GRACE_PER_DAYS_AOT <!-- QC#22095 add -->
        FROM
             BILL_TO_CUST       A
            ,CUST_CR_PRFL       C
            ,CR_RISK_CLS        D
            ,CONTR_CR_RISK_CLS  E <!-- QC#22095 add -->
        WHERE
                A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.GLBL_CMPY_CD         = C.GLBL_CMPY_CD(+)
            AND A.GLBL_CMPY_CD         = D.GLBL_CMPY_CD(+)
            AND A.GLBL_CMPY_CD         = E.GLBL_CMPY_CD(+) <!-- QC#22095 add -->
            AND A.BILL_TO_CUST_CD      = #billToCustCd#
            AND A.RGTN_STS_CD          IN ($rgtnStsCd$)
            AND A.BILL_TO_CUST_CD      = C.BILL_TO_CUST_CD(+)
            AND C.CR_RISK_CLS_CD       = D.CR_RISK_CLS_CD(+)
            AND C.CONTR_CR_RISK_CLS_CD = E.CONTR_CR_RISK_CLS_CD(+) <!-- QC#22095 add -->
            AND A.EZCANCELFLAG         = '0'
            AND C.EZCANCELFLAG(+)      = '0'
            AND D.EZCANCELFLAG(+)      = '0'
            AND E.EZCANCELFLAG(+)      = '0' <!-- QC#22095 add -->
    </statement>
    
    <statement id="checkAccount_Mode03" parameterClass="Map" resultClass="Map">
        SELECT
             MAX(C.AR_BAL_AMT)               AS AR_BAL_AMT
            ,MAX(C.LAST_PMT_RCPT_DT)         AS LAST_PMT_RCPT_DT
            ,MAX(C.OVD_WS_FLG)               AS OVD_WS_FLG
            ,MAX(C.OVD_PRT_FLG)              AS OVD_PRT_FLG
            ,MAX(D.GRACE_PER_DAYS_AOT)       AS GRACE_PER_DAYS_AOT
            ,MAX(B.BILL_TO_CUST_CD)          AS BILL_TO_CUST_CD
            ,MAX(NVL(E.CONTR_GRACE_PER_DAYS_AOT, 0)) AS CONTR_GRACE_PER_DAYS_AOT <!-- QC#22095 add -->
        FROM
             BILL_TO_CUST       B
            ,CUST_CR_PRFL       C
            ,CR_RISK_CLS        D
            ,CONTR_CR_RISK_CLS  E <!-- QC#22095 add -->
        WHERE
                B.GLBL_CMPY_CD         = #glblCmpyCd#
            AND B.GLBL_CMPY_CD         = C.GLBL_CMPY_CD
            AND B.GLBL_CMPY_CD         = D.GLBL_CMPY_CD
            AND B.GLBL_CMPY_CD         = E.GLBL_CMPY_CD <!-- QC#22095 add -->
            AND B.SELL_TO_CUST_CD      = #sellToCustCd#
            AND B.RGTN_STS_CD          IN ($rgtnStsCd$)
            AND B.BILL_TO_CUST_CD      = C.BILL_TO_CUST_CD
            AND C.CR_RISK_CLS_CD       = D.CR_RISK_CLS_CD
            AND C.CONTR_CR_RISK_CLS_CD = E.CONTR_CR_RISK_CLS_CD <!-- QC#22095 add -->
            AND B.EZCANCELFLAG         = '0'
            AND C.EZCANCELFLAG         = '0'
            AND D.EZCANCELFLAG         = '0'
            AND E.EZCANCELFLAG         = '0' <!-- QC#22095 add -->
        GROUP BY
            B.BILL_TO_CUST_CD
    </statement>
    
    <statement id="checkTrx_Mode01" parameterClass="Map" resultClass="Map">
        SELECT
             SUM(GRS_AMT)    AS SUM_AMT
        FROM
            (
             SELECT
                   SUM(A.FUNC_RMNG_BAL_GRS_AMT)    AS GRS_AMT
             FROM
                   AR_TRX_BAL     A
                  ,(
                    SELECT
                          CDT.GLBL_CMPY_CD
                         ,CDT.EZCANCELFLAG
                         ,CDT.AR_TRX_NUM
                         ,NVL(SUM(CDT.FUNC_CLT_DSPT_AMT),0) AS FUNC_CLT_DSPT_AMT
                    FROM
                          CLT_DSPT_TRX CDT
                    WHERE
                          CDT.GLBL_CMPY_CD    = #glblCmpyCd#
                      AND CDT.CLT_DSPT_STS_CD = #cltDsptStsCdApproved#
                      AND CDT.EZCANCELFLAG    = '0'
                    GROUP BY
                          CDT.GLBL_CMPY_CD
                         ,CDT.EZCANCELFLAG
                         ,CDT.AR_TRX_NUM
                   ) B
             WHERE
                  A.GLBL_CMPY_CD              = #glblCmpyCd#
              AND B.GLBL_CMPY_CD(+)           = A.GLBL_CMPY_CD
              AND A.BILL_TO_CUST_ACCT_CD      = #sellToCustCd#
              AND A.AR_CASH_APPLY_STS_CD      IN(#applyStsCd_U#,#applyStsCd_P#)
              AND A.AR_TRX_TP_CD              &lt;&gt; #arTrxTp_Rcpt#
              AND B.AR_TRX_NUM(+)             = A.AR_TRX_NUM
              AND A.FUNC_RMNG_BAL_GRS_AMT - B.FUNC_CLT_DSPT_AMT(+) &gt; 0
              AND A.EZCANCELFLAG              = '0'
              AND B.EZCANCELFLAG(+)           = '0'
             UNION
             SELECT
                  /*+ INDEX(C INV_I18) */
                  SUM(C.INV_TOT_DEAL_NET_AMT)    AS GRS_AMT
             FROM
                  INV     C
             WHERE
                     C.GLBL_CMPY_CD              = #glblCmpyCd#
                 AND C.EZCANCELFLAG              = '0'
                 AND C.FNLZ_INV_FLG              = #fnlzInvFlg#
                 AND C.BILL_TO_CUST_ACCT_CD      = #sellToCustCd#
                 AND NOT EXISTS
                          (
                           SELECT 
                                /*+ INDEX(D AR_TRX_BAL_I4) */
                                1
                           FROM
                                AR_TRX_BAL D
                           WHERE
                                    D.EZCANCELFLAG   = '0'
                               AND  D.GLBL_CMPY_CD   = #glblCmpyCd#
                               AND  D.AR_TRX_NUM  like CONCAT(C.INV_NUM, '%')
                          )
                 AND EXISTS
                          (
                           SELECT
                                1
                           FROM
                                DS_INV_TP DIT
                           WHERE
                                DIT.GLBL_CMPY_CD = #glblCmpyCd#
                            AND DIT.EZCANCELFLAG = '0'
                            AND DIT.DS_INV_TP_CD = C.DS_INV_TP_CD
                            AND DIT.OPEN_AR_FLG  = 'Y'
                          )
             UNION
             SELECT
                   SUM(E.FUNC_RMNG_BAL_GRS_AMT * -1)    AS GRS_AMT
             FROM
                  AR_TRX_BAL     E
             WHERE
                     E.GLBL_CMPY_CD              = #glblCmpyCd#
                 AND E.BILL_TO_CUST_ACCT_CD      = #sellToCustCd#
                 AND E.AR_CASH_APPLY_STS_CD      IN(#applyStsCd_U#,#applyStsCd_P#)
                 AND E.AR_TRX_TP_CD              = #arTrxTp_Rcpt#
                 AND E.EZCANCELFLAG              = '0'
             )
<!--
        GROUP BY
            A.BILL_TO_CUST_ACCT_CD
-->
    </statement>

   <statement id="checkTrx_Mode02" parameterClass="Map" resultClass="Map">
        SELECT
             SUM(GRS_AMT)    AS SUM_AMT
        FROM
            (
             SELECT
                   SUM(A.FUNC_RMNG_BAL_GRS_AMT)    AS GRS_AMT
             FROM
                   AR_TRX_BAL     A
                  ,(
                    SELECT
                          CDT.GLBL_CMPY_CD
                         ,CDT.EZCANCELFLAG
                         ,CDT.AR_TRX_NUM
                         ,NVL(SUM(CDT.FUNC_CLT_DSPT_AMT),0) AS FUNC_CLT_DSPT_AMT
                    FROM
                          CLT_DSPT_TRX CDT
                    WHERE
                          CDT.GLBL_CMPY_CD    = #glblCmpyCd#
                      AND CDT.CLT_DSPT_STS_CD = #cltDsptStsCdApproved#
                      AND CDT.EZCANCELFLAG    = '0'
                    GROUP BY
                          CDT.GLBL_CMPY_CD
                         ,CDT.EZCANCELFLAG
                         ,CDT.AR_TRX_NUM
                   ) B
             WHERE
                  A.GLBL_CMPY_CD              = #glblCmpyCd#
              AND B.GLBL_CMPY_CD(+)           = A.GLBL_CMPY_CD
              AND A.BILL_TO_CUST_CD           = #billToCustCd#
              AND A.AR_CASH_APPLY_STS_CD      IN(#applyStsCd_U#,#applyStsCd_P#)
              AND A.AR_TRX_TP_CD              &lt;&gt; #arTrxTp_Rcpt#
              AND B.AR_TRX_NUM(+)             = A.AR_TRX_NUM
              AND A.FUNC_RMNG_BAL_GRS_AMT - B.FUNC_CLT_DSPT_AMT(+) &gt; 0
              AND A.EZCANCELFLAG              = '0'
              AND B.EZCANCELFLAG(+)           = '0'
             UNION
             SELECT
                  SUM(C.INV_TOT_DEAL_NET_AMT)    AS GRS_AMT
             FROM
                  INV     C
             WHERE
                     C.GLBL_CMPY_CD              = #glblCmpyCd#
                 AND C.EZCANCELFLAG              = '0'
                 AND C.FNLZ_INV_FLG              = #fnlzInvFlg#
                 AND C.BILL_TO_CUST_CD           = #billToCustCd#
                 AND NOT EXISTS
                          (
                           SELECT 
                                /*+ INDEX(D AR_TRX_BAL_I4) */
                                1
                           FROM
                                AR_TRX_BAL D
                           WHERE
                                    D.EZCANCELFLAG   = '0'
                               AND  D.GLBL_CMPY_CD   = #glblCmpyCd#
                               AND  D.AR_TRX_NUM  like CONCAT(C.INV_NUM, '%')
                          )
                 AND EXISTS
                          (
                           SELECT
                                1
                           FROM
                                DS_INV_TP DIT
                           WHERE
                                DIT.GLBL_CMPY_CD = #glblCmpyCd#
                            AND DIT.EZCANCELFLAG = '0'
                            AND DIT.DS_INV_TP_CD = C.DS_INV_TP_CD
                            AND DIT.OPEN_AR_FLG  = 'Y'
                          )
             UNION
             SELECT
                   SUM(E.FUNC_RMNG_BAL_GRS_AMT * -1)    AS GRS_AMT
             FROM
                  AR_TRX_BAL     E
             WHERE
                     E.GLBL_CMPY_CD              = #glblCmpyCd#
                 AND E.BILL_TO_CUST_CD           = #billToCustCd#
                 AND E.AR_CASH_APPLY_STS_CD      IN(#applyStsCd_U#,#applyStsCd_P#)
                 AND E.AR_TRX_TP_CD              = #arTrxTp_Rcpt#
                 AND E.EZCANCELFLAG              = '0'
             )
<!--
        GROUP BY
            A.BILL_TO_CUST_CD
-->
    </statement>
    
    <statement id="checkOverDue_Mode01" parameterClass="Map" resultClass="Map">
        SELECT
             MIN(A.INV_DUE_DT)    AS INV_DUE_DT
        FROM
             AR_TRX_BAL     A
            ,(
                SELECT
                    CDT.GLBL_CMPY_CD
                   ,CDT.EZCANCELFLAG
                   ,CDT.AR_TRX_NUM
                   ,NVL(SUM(CDT.FUNC_CLT_DSPT_AMT),0) AS FUNC_CLT_DSPT_AMT
                FROM
                    CLT_DSPT_TRX CDT
                WHERE
                        CDT.GLBL_CMPY_CD    = #glblCmpyCd#
                    AND CDT.CLT_DSPT_STS_CD = #cltDsptStsCdApproved#
                    AND CDT.EZCANCELFLAG    = '0'
                GROUP BY
                    CDT.GLBL_CMPY_CD
                   ,CDT.EZCANCELFLAG
                   ,CDT.AR_TRX_NUM
             ) B
        WHERE
                A.GLBL_CMPY_CD              = #glblCmpyCd#
            AND B.GLBL_CMPY_CD(+)           = A.GLBL_CMPY_CD
            AND A.BILL_TO_CUST_ACCT_CD      = #sellToCustCd#
            AND A.AR_CASH_APPLY_STS_CD      IN(#applyStsCd_U#,#applyStsCd_P#)
            AND A.AR_TRX_TP_CD              = #arTrxTp_Inv#
            AND B.AR_TRX_NUM(+)             = A.AR_TRX_NUM
            AND A.FUNC_RMNG_BAL_GRS_AMT - B.FUNC_CLT_DSPT_AMT(+) &gt; 0
            AND A.EZCANCELFLAG              = '0'
            AND B.EZCANCELFLAG(+)           = '0'
<!--
        GROUP BY
            A.BILL_TO_CUST_ACCT_CD
-->
    </statement>

    <statement id="checkOverDue_Mode02" parameterClass="Map" resultClass="Map">
        SELECT
             MIN(A.INV_DUE_DT)    AS INV_DUE_DT
        FROM
             AR_TRX_BAL     A
            ,(
                SELECT
                    CDT.GLBL_CMPY_CD
                   ,CDT.EZCANCELFLAG
                   ,CDT.AR_TRX_NUM
                   ,NVL(SUM(CDT.FUNC_CLT_DSPT_AMT),0) AS FUNC_CLT_DSPT_AMT
                FROM
                    CLT_DSPT_TRX CDT
                WHERE
                        CDT.GLBL_CMPY_CD    = #glblCmpyCd#
                    AND CDT.CLT_DSPT_STS_CD = #cltDsptStsCdApproved#
                    AND CDT.EZCANCELFLAG    = '0'
                GROUP BY
                    CDT.GLBL_CMPY_CD
                   ,CDT.EZCANCELFLAG
                   ,CDT.AR_TRX_NUM
             ) B
        WHERE
                A.GLBL_CMPY_CD              = #glblCmpyCd#
            AND B.GLBL_CMPY_CD(+)           = A.GLBL_CMPY_CD
            AND A.BILL_TO_CUST_CD           = #billToCustCd#
            AND A.AR_CASH_APPLY_STS_CD      IN(#applyStsCd_U#,#applyStsCd_P#)
            AND A.AR_TRX_TP_CD              = #arTrxTp_Inv#
            AND B.AR_TRX_NUM(+)             = A.AR_TRX_NUM
            AND A.FUNC_RMNG_BAL_GRS_AMT - B.FUNC_CLT_DSPT_AMT(+) &gt; 0
            AND A.EZCANCELFLAG              = '0'
            AND B.EZCANCELFLAG(+)           = '0'
<!--
        GROUP BY
            A.BILL_TO_CUST_ACCT_CD
-->
    </statement>

    <statement id="updateDsContract_Mode01" parameterClass="Map" resultClass="Map">
        SELECT
             D.DS_CONTR_PK
            ,D.DS_CONTR_SRC_TP_CD
            ,E.DS_CONTR_DTL_PK
            ,F.DS_CONTR_BLLG_MTR_PK
            ,G.DS_CONTR_PRC_EFF_PK
        FROM
             AR_TRX_BAL         A
            ,(
                SELECT
                    CDT.GLBL_CMPY_CD
                   ,CDT.EZCANCELFLAG
                   ,CDT.AR_TRX_NUM
                   ,NVL(SUM(CDT.FUNC_CLT_DSPT_AMT),0) AS FUNC_CLT_DSPT_AMT
                FROM
                    CLT_DSPT_TRX CDT
                WHERE
                        CDT.GLBL_CMPY_CD    = #glblCmpyCd#
                    AND CDT.CLT_DSPT_STS_CD = #cltDsptStsCdApproved#
                    AND CDT.EZCANCELFLAG    = '0'
                GROUP BY
                    CDT.GLBL_CMPY_CD
                   ,CDT.EZCANCELFLAG
                   ,CDT.AR_TRX_NUM
             ) B
            ,SVC_INV            C
            ,DS_CONTR           D
            ,DS_CONTR_DTL       E
            ,DS_CONTR_BLLG_MTR  F
            ,DS_CONTR_PRC_EFF   G
        WHERE
                A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.GLBL_CMPY_CD          = B.GLBL_CMPY_CD(+)
            AND A.GLBL_CMPY_CD          = C.GLBL_CMPY_CD
            AND A.GLBL_CMPY_CD          = D.GLBL_CMPY_CD
            AND A.GLBL_CMPY_CD          = E.GLBL_CMPY_CD
            AND A.GLBL_CMPY_CD          = F.GLBL_CMPY_CD
            AND A.GLBL_CMPY_CD          = G.GLBL_CMPY_CD
            AND A.BILL_TO_CUST_ACCT_CD  = #sellToCustCd#
            AND A.AR_CASH_APPLY_STS_CD  IN('P','U')
            AND A.AR_TRX_TP_CD          = #arTrxTp_Inv#

        <isEqual property="overDueFlg" compareValue="N">
            AND A.INV_DUE_DT            &lt; #procDt#
        </isEqual>
        <isEqual property="overDueFlg" compareValue="Y">
            AND A.INV_DUE_DT            &gt; #procDt#
        </isEqual>

            AND B.AR_TRX_NUM(+)         = A.AR_TRX_NUM
            AND A.FUNC_RMNG_BAL_GRS_AMT - B.FUNC_CLT_DSPT_AMT(+) &gt; 0
            AND C.SVC_INV_NUM           = A.AR_TRX_NUM
            AND C.DS_CONTR_PK           = D.DS_CONTR_PK
            AND D.DS_CONTR_PK           = E.DS_CONTR_PK
            AND E.DS_CONTR_DTL_PK       = F.DS_CONTR_DTL_PK
            AND E.DS_CONTR_DTL_PK       = G.DS_CONTR_DTL_PK
            AND A.EZCANCELFLAG          = '0'
            AND B.EZCANCELFLAG(+)       = '0'
            AND C.EZCANCELFLAG          = '0'
            AND D.EZCANCELFLAG          = '0'
            AND E.EZCANCELFLAG          = '0'
            AND F.EZCANCELFLAG          = '0'
            AND G.EZCANCELFLAG          = '0'
            
            AND D.CONTR_HLD_FLG         = #overDueFlg#
        GROUP BY
             D.DS_CONTR_PK
            ,D.DS_CONTR_SRC_TP_CD
            ,E.DS_CONTR_DTL_PK
            ,F.DS_CONTR_BLLG_MTR_PK
            ,G.DS_CONTR_PRC_EFF_PK
        ORDER BY
             D.DS_CONTR_PK
            ,E.DS_CONTR_DTL_PK
            ,F.DS_CONTR_BLLG_MTR_PK
            ,G.DS_CONTR_PRC_EFF_PK
    </statement>

    <statement id="updateDsContract_Mode02" parameterClass="Map" resultClass="Map">
        SELECT
             D.DS_CONTR_PK
            ,D.DS_CONTR_SRC_TP_CD
        FROM
             AR_TRX_BAL   A
            ,(
                SELECT
                    CDT.GLBL_CMPY_CD
                   ,CDT.EZCANCELFLAG
                   ,CDT.AR_TRX_NUM
                   ,NVL(SUM(CDT.FUNC_CLT_DSPT_AMT),0) AS FUNC_CLT_DSPT_AMT
                FROM
                    CLT_DSPT_TRX CDT
                WHERE
                        CDT.GLBL_CMPY_CD    = #glblCmpyCd#
                    AND CDT.CLT_DSPT_STS_CD = #cltDsptStsCdApproved#
                    AND CDT.EZCANCELFLAG    = '0'
                GROUP BY
                    CDT.GLBL_CMPY_CD
                   ,CDT.EZCANCELFLAG
                   ,CDT.AR_TRX_NUM
             ) B
            ,SVC_INV      C
            ,DS_CONTR     D
        WHERE
                A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND B.GLBL_CMPY_CD(+)       = A.GLBL_CMPY_CD
            AND C.GLBL_CMPY_CD          = A.GLBL_CMPY_CD
            AND D.GLBL_CMPY_CD          = A.GLBL_CMPY_CD
            AND A.BILL_TO_CUST_CD       = #billToCustCd#
            AND A.AR_CASH_APPLY_STS_CD  IN('P','U')
            AND A.AR_TRX_TP_CD          = #arTrxTp_Inv#
            AND A.INV_DUE_DT            &lt; #procDt#
            AND B.AR_TRX_NUM(+)         = A.AR_TRX_NUM
            AND A.FUNC_RMNG_BAL_GRS_AMT - B.FUNC_CLT_DSPT_AMT(+) &gt; 0
            AND C.SVC_INV_NUM           = A.AR_TRX_NUM
            AND D.DS_CONTR_PK           = C.DS_CONTR_PK
            AND A.EZCANCELFLAG          = '0'
            AND B.EZCANCELFLAG(+)       = '0'
            AND C.EZCANCELFLAG          = '0'
            AND D.EZCANCELFLAG          = '0'
        GROUP BY
             D.DS_CONTR_PK
            ,D.DS_CONTR_SRC_TP_CD            
    </statement>

    <statement id="getDsContractInfo" parameterClass="Map" resultClass="Map">
        SELECT
             A.DS_CONTR_PK
            ,B.DS_CONTR_DTL_PK
            ,C.DS_CONTR_BLLG_MTR_PK
        FROM
             DS_CONTR             A
            ,DS_CONTR_DTL         B
            ,DS_CONTR_BLLG_MTR    C
        WHERE
                A.GLBL_CMPY_CD      = #glblCmpyCd#
                A.DS_CONTR_PK=
            AND A.DS_CONTR_PK=B.DS_CONTR_PK
            AND B.DS_CONTR_DTL_PK=C.DS_CONTR_DTL_PK
        GROUP BY
             A.DS_CONTR_PK
            ,B.DS_CONTR_DTL_PK
            ,C.DS_CONTR_BLLG_MTR_PK
        ORDER BY
             A.DS_CONTR_PK
            ,B.DS_CONTR_DTL_PK
            ,C.DS_CONTR_BLLG_MTR_PK
    </statement>
</sqlMap>
