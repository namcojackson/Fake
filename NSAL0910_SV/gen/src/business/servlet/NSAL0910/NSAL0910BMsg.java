//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20160616091432000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0910BMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NSAL0910;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL0910 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL0910BMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** GLBL_CMPY_CD*/
	public final EZDBStringItem              glblCmpyCd;

    /** SLS_DT*/
	public final EZDBDateItem              slsDt;

    /** DS_ACCT_DLR_CD*/
	public final EZDBStringItem              dsAcctDlrCd;

    /** PROC_DT_FR*/
	public final EZDBDateItem              procDt_FR;

    /** PROC_DT_TO*/
	public final EZDBDateItem              procDt_TO;

    /** XX_CRAT_DT_FR*/
	public final EZDBDateItem              xxCratDt_FR;

    /** XX_CRAT_DT_TO*/
	public final EZDBDateItem              xxCratDt_TO;

    /** CFS_INV_PROC_STS_CD*/
	public final EZDBStringItem              cfsInvProcStsCd;

    /** CSA_INV_NUM*/
	public final EZDBStringItem              csaInvNum;

    /** CFS_SER_NUM*/
	public final EZDBStringItem              cfsSerNum;

    /** CSA_CONTR_NUM*/
	public final EZDBStringItem              csaContrNum;

    /** DS_ACCT_DLR_CD_PC*/
	public final EZDBStringItemArray              dsAcctDlrCd_PC;

    /** DS_ACCT_DLR_CD_PD*/
	public final EZDBStringItemArray              dsAcctDlrCd_PD;

    /** CFS_INV_PROC_STS_CD_PC*/
	public final EZDBStringItemArray              cfsInvProcStsCd_PC;

    /** CFS_INV_PROC_STS_DESC_TXT_PD*/
	public final EZDBStringItemArray              cfsInvProcStsDescTxt_PD;

    /** XX_SORT_TBL_NM*/
	public final EZDBStringItem              xxSortTblNm;

    /** XX_SORT_ITEM_NM*/
	public final EZDBStringItem              xxSortItemNm;

    /** XX_SORT_ORD_BY_TXT*/
	public final EZDBStringItem              xxSortOrdByTxt;

    /** XX_PAGE_SHOW_FROM_NUM*/
	public final EZDBBigDecimalItem              xxPageShowFromNum;

    /** XX_PAGE_SHOW_TO_NUM*/
	public final EZDBBigDecimalItem              xxPageShowToNum;

    /** XX_PAGE_SHOW_OF_NUM*/
	public final EZDBBigDecimalItem              xxPageShowOfNum;

    /** XX_PAGE_SHOW_CUR_NUM*/
	public final EZDBBigDecimalItem              xxPageShowCurNum;

    /** XX_PAGE_SHOW_TOT_NUM*/
	public final EZDBBigDecimalItem              xxPageShowTotNum;

    /** XX_COMN_COL_ORD_TXT*/
	public final EZDBStringItem              xxComnColOrdTxt;

    /** A*/
	public final business.servlet.NSAL0910.NSAL0910_ABMsgArray              A;

    /** D*/
	public final business.servlet.NSAL0910.NSAL0910_DBMsgArray              D;


	/**
	 * NSAL0910BMsg is constructor.
	 * The initialization when the instance of NSAL0910BMsg is generated.
	 */
	public NSAL0910BMsg() {
		this(false, -1);
	}

	/**
	 * NSAL0910BMsg is constructor.
	 * The initialization when the instance of NSAL0910BMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL0910BMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		glblCmpyCd = (EZDBStringItem)newItem("glblCmpyCd");
		slsDt = (EZDBDateItem)newItem("slsDt");
		dsAcctDlrCd = (EZDBStringItem)newItem("dsAcctDlrCd");
		procDt_FR = (EZDBDateItem)newItem("procDt_FR");
		procDt_TO = (EZDBDateItem)newItem("procDt_TO");
		xxCratDt_FR = (EZDBDateItem)newItem("xxCratDt_FR");
		xxCratDt_TO = (EZDBDateItem)newItem("xxCratDt_TO");
		cfsInvProcStsCd = (EZDBStringItem)newItem("cfsInvProcStsCd");
		csaInvNum = (EZDBStringItem)newItem("csaInvNum");
		cfsSerNum = (EZDBStringItem)newItem("cfsSerNum");
		csaContrNum = (EZDBStringItem)newItem("csaContrNum");
		dsAcctDlrCd_PC = (EZDBStringItemArray)newItemArray("dsAcctDlrCd_PC");
		dsAcctDlrCd_PD = (EZDBStringItemArray)newItemArray("dsAcctDlrCd_PD");
		cfsInvProcStsCd_PC = (EZDBStringItemArray)newItemArray("cfsInvProcStsCd_PC");
		cfsInvProcStsDescTxt_PD = (EZDBStringItemArray)newItemArray("cfsInvProcStsDescTxt_PD");
		xxSortTblNm = (EZDBStringItem)newItem("xxSortTblNm");
		xxSortItemNm = (EZDBStringItem)newItem("xxSortItemNm");
		xxSortOrdByTxt = (EZDBStringItem)newItem("xxSortOrdByTxt");
		xxPageShowFromNum = (EZDBBigDecimalItem)newItem("xxPageShowFromNum");
		xxPageShowToNum = (EZDBBigDecimalItem)newItem("xxPageShowToNum");
		xxPageShowOfNum = (EZDBBigDecimalItem)newItem("xxPageShowOfNum");
		xxPageShowCurNum = (EZDBBigDecimalItem)newItem("xxPageShowCurNum");
		xxPageShowTotNum = (EZDBBigDecimalItem)newItem("xxPageShowTotNum");
		xxComnColOrdTxt = (EZDBStringItem)newItem("xxComnColOrdTxt");
		A = (business.servlet.NSAL0910.NSAL0910_ABMsgArray)newMsgArray("A");
		D = (business.servlet.NSAL0910.NSAL0910_DBMsgArray)newMsgArray("D");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL0910BMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL0910BMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"glblCmpyCd", "glblCmpyCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"slsDt", "slsDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"dsAcctDlrCd", "dsAcctDlrCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"procDt_FR", "procDt_FR", "FR", null, TYPE_NENTSUKIHI, "8", null},
	{"procDt_TO", "procDt_TO", "TO", null, TYPE_NENTSUKIHI, "8", null},
	{"xxCratDt_FR", "xxCratDt_FR", "FR", null, TYPE_NENTSUKIHI, "8", null},
	{"xxCratDt_TO", "xxCratDt_TO", "TO", null, TYPE_NENTSUKIHI, "8", null},
	{"cfsInvProcStsCd", "cfsInvProcStsCd", null, null, TYPE_HANKAKUEISU, "10", null},
	{"csaInvNum", "csaInvNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"cfsSerNum", "cfsSerNum", null, null, TYPE_HANKAKUEISU, "25", null},
	{"csaContrNum", "csaContrNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"dsAcctDlrCd_PC", "dsAcctDlrCd_PC", "PC", "99", TYPE_HANKAKUEISU, "20", null},
	{"dsAcctDlrCd_PD", "dsAcctDlrCd_PD", "PD", "99", TYPE_HANKAKUEISU, "20", null},
	{"cfsInvProcStsCd_PC", "cfsInvProcStsCd_PC", "PC", "99", TYPE_HANKAKUEISU, "10", null},
	{"cfsInvProcStsDescTxt_PD", "cfsInvProcStsDescTxt_PD", "PD", "99", TYPE_HANKAKUEISU, "50", null},
	{"xxSortTblNm", "xxSortTblNm", null, null, TYPE_HANKAKUEISU, "1", null},
	{"xxSortItemNm", "xxSortItemNm", null, null, TYPE_HANKAKUEISU, "50", null},
	{"xxSortOrdByTxt", "xxSortOrdByTxt", null, null, TYPE_HANKAKUEISU, "4", null},
	{"xxPageShowFromNum", "xxPageShowFromNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowToNum", "xxPageShowToNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowOfNum", "xxPageShowOfNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowCurNum", "xxPageShowCurNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowTotNum", "xxPageShowTotNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxComnColOrdTxt", "xxComnColOrdTxt", null, null, TYPE_HANKAKUEISU, "2000", null},
	{"A", "A", null, "200", "business.servlet.NSAL0910.NSAL0910_ABMsgArray", null, null},
	
	{"D", "D", null, "40", "business.servlet.NSAL0910.NSAL0910_DBMsgArray", null, null},
	
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"GLBL_CMPY_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//glblCmpyCd
        {"SLS_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO,  NO},	//slsDt
        {"DS_ACCT_DLR_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctDlrCd
        {"PROC_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//procDt_FR
        {"PROC_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//procDt_TO
        {"XX_CRAT_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//xxCratDt_FR
        {"XX_CRAT_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//xxCratDt_TO
        {"CFS_INV_PROC_STS_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cfsInvProcStsCd
        {"CSA_INV_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//csaInvNum
        {"CFS_SER_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cfsSerNum
        {"CSA_CONTR_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//csaContrNum
        {"DS_ACCT_DLR_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctDlrCd_PC
        {"DS_ACCT_DLR_CD",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctDlrCd_PD
        {"CFS_INV_PROC_STS_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cfsInvProcStsCd_PC
        {"CFS_INV_PROC_STS_DESC_TXT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cfsInvProcStsDescTxt_PD
        {"XX_SORT_TBL_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxSortTblNm
        {"XX_SORT_ITEM_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxSortItemNm
        {"XX_SORT_ORD_BY_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxSortOrdByTxt
        {"XX_PAGE_SHOW_FROM_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowFromNum
        {"XX_PAGE_SHOW_TO_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowToNum
        {"XX_PAGE_SHOW_OF_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowOfNum
        {"XX_PAGE_SHOW_CUR_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowCurNum
        {"XX_PAGE_SHOW_TOT_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowTotNum
        {"XX_COMN_COL_ORD_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxComnColOrdTxt
		null,	//A
		null,	//D
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

