//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20190402130753000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSBL0310_ACMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NSBL0310;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSBL0310 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSBL0310_ACMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** GLBL_CMPY_CD_A*/
	public final EZDCStringItem              glblCmpyCd_A;

    /** SVC_RG_PK_A*/
	public final EZDCBigDecimalItem              svcRgPk_A;

    /** SVC_CONTR_BR_CD_A*/
	public final EZDCStringItem              svcContrBrCd_A;

    /** SVC_MGR_PSN_CD_A*/
	public final EZDCStringItem              svcMgrPsnCd_A;

    /** PSN_FIRST_NM_A*/
	public final EZDCStringItem              psnFirstNm_A;

    /** PSN_LAST_NM_A*/
	public final EZDCStringItem              psnLastNm_A;

    /** MGR_NM_A*/
	public final EZDCStringItem              mgrNm_A;

    /** PREV_OPEN_TASK_CNT_A*/
	public final EZDCBigDecimalItem              prevOpenTaskCnt_A;

    /** INPROC_TASK_CNT_A*/
	public final EZDCBigDecimalItem              inprocTaskCnt_A;

    /** CLO_TASK_CNT_A*/
	public final EZDCBigDecimalItem              cloTaskCnt_A;

    /** CANC_TASK_CNT_A*/
	public final EZDCBigDecimalItem              cancTaskCnt_A;

    /** REJ_TASK_CNT_A*/
	public final EZDCBigDecimalItem              rejTaskCnt_A;

    /** SVC_RSP_TM_NUM_A*/
	public final EZDCBigDecimalItem              svcRspTmNum_A;

    /** XX_RCV_TM_A*/
	public final EZDCStringItem              xxRcvTm_A;

    /** TO_BE_OPTM_TASK_CNT_A*/
	public final EZDCBigDecimalItem              toBeOptmTaskCnt_A;

    /** SCHD_TASK_CNT_A*/
	public final EZDCBigDecimalItem              schdTaskCnt_A;

    /** ASG_TASK_CNT_A*/
	public final EZDCBigDecimalItem              asgTaskCnt_A;

    /** OPEN_TASK_CNT_A*/
	public final EZDCBigDecimalItem              openTaskCnt_A;

    /** HLD_TASK_CNT_A*/
	public final EZDCBigDecimalItem              hldTaskCnt_A;

    /** ESCL_TASK_CNT_A*/
	public final EZDCBigDecimalItem              esclTaskCnt_A;

    /** VIP_TASK_CNT_A*/
	public final EZDCBigDecimalItem              vipTaskCnt_A;

    /** ATTN_TASK_CNT_A*/
	public final EZDCBigDecimalItem              attnTaskCnt_A;

    /** ORG_CD_A*/
	public final EZDCStringItem              orgCd_A;

    /** ORG_LAYER_NUM_A*/
	public final EZDCBigDecimalItem              orgLayerNum_A;


	/**
	 * NSBL0310_ACMsg is constructor.
	 * The initialization when the instance of NSBL0310_ACMsg is generated.
	 */
	public NSBL0310_ACMsg() {
		this(false, -1);
	}

	/**
	 * NSBL0310_ACMsg is constructor.
	 * The initialization when the instance of NSBL0310_ACMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSBL0310_ACMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		glblCmpyCd_A = (EZDCStringItem)newItem("glblCmpyCd_A");
		svcRgPk_A = (EZDCBigDecimalItem)newItem("svcRgPk_A");
		svcContrBrCd_A = (EZDCStringItem)newItem("svcContrBrCd_A");
		svcMgrPsnCd_A = (EZDCStringItem)newItem("svcMgrPsnCd_A");
		psnFirstNm_A = (EZDCStringItem)newItem("psnFirstNm_A");
		psnLastNm_A = (EZDCStringItem)newItem("psnLastNm_A");
		mgrNm_A = (EZDCStringItem)newItem("mgrNm_A");
		prevOpenTaskCnt_A = (EZDCBigDecimalItem)newItem("prevOpenTaskCnt_A");
		inprocTaskCnt_A = (EZDCBigDecimalItem)newItem("inprocTaskCnt_A");
		cloTaskCnt_A = (EZDCBigDecimalItem)newItem("cloTaskCnt_A");
		cancTaskCnt_A = (EZDCBigDecimalItem)newItem("cancTaskCnt_A");
		rejTaskCnt_A = (EZDCBigDecimalItem)newItem("rejTaskCnt_A");
		svcRspTmNum_A = (EZDCBigDecimalItem)newItem("svcRspTmNum_A");
		xxRcvTm_A = (EZDCStringItem)newItem("xxRcvTm_A");
		toBeOptmTaskCnt_A = (EZDCBigDecimalItem)newItem("toBeOptmTaskCnt_A");
		schdTaskCnt_A = (EZDCBigDecimalItem)newItem("schdTaskCnt_A");
		asgTaskCnt_A = (EZDCBigDecimalItem)newItem("asgTaskCnt_A");
		openTaskCnt_A = (EZDCBigDecimalItem)newItem("openTaskCnt_A");
		hldTaskCnt_A = (EZDCBigDecimalItem)newItem("hldTaskCnt_A");
		esclTaskCnt_A = (EZDCBigDecimalItem)newItem("esclTaskCnt_A");
		vipTaskCnt_A = (EZDCBigDecimalItem)newItem("vipTaskCnt_A");
		attnTaskCnt_A = (EZDCBigDecimalItem)newItem("attnTaskCnt_A");
		orgCd_A = (EZDCStringItem)newItem("orgCd_A");
		orgLayerNum_A = (EZDCBigDecimalItem)newItem("orgLayerNum_A");
	}

	/**
	 * get the type of array which is stored
	 * @return NSBL0310_ACMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSBL0310_ACMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"glblCmpyCd_A", "glblCmpyCd_A", "A", null, TYPE_HANKAKUEISU, "4", null},
	{"svcRgPk_A", "svcRgPk_A", "A", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"svcContrBrCd_A", "svcContrBrCd_A", "A", null, TYPE_HANKAKUEISU, "3", null},
	{"svcMgrPsnCd_A", "svcMgrPsnCd_A", "A", null, TYPE_HANKAKUEISU, "8", null},
	{"psnFirstNm_A", "psnFirstNm_A", "A", null, TYPE_HANKAKUEISU, "30", null},
	{"psnLastNm_A", "psnLastNm_A", "A", null, TYPE_HANKAKUEISU, "30", null},
	{"mgrNm_A", "mgrNm_A", "A", null, TYPE_HANKAKUEISU, "90", null},
	{"prevOpenTaskCnt_A", "prevOpenTaskCnt_A", "A", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"inprocTaskCnt_A", "inprocTaskCnt_A", "A", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"cloTaskCnt_A", "cloTaskCnt_A", "A", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"cancTaskCnt_A", "cancTaskCnt_A", "A", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"rejTaskCnt_A", "rejTaskCnt_A", "A", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"svcRspTmNum_A", "svcRspTmNum_A", "A", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxRcvTm_A", "xxRcvTm_A", "A", null, TYPE_HANKAKUEISU, "8", null},
	{"toBeOptmTaskCnt_A", "toBeOptmTaskCnt_A", "A", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"schdTaskCnt_A", "schdTaskCnt_A", "A", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"asgTaskCnt_A", "asgTaskCnt_A", "A", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"openTaskCnt_A", "openTaskCnt_A", "A", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"hldTaskCnt_A", "hldTaskCnt_A", "A", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"esclTaskCnt_A", "esclTaskCnt_A", "A", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"vipTaskCnt_A", "vipTaskCnt_A", "A", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"attnTaskCnt_A", "attnTaskCnt_A", "A", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"orgCd_A", "orgCd_A", "A", null, TYPE_HANKAKUEISU, "8", null},
	{"orgLayerNum_A", "orgLayerNum_A", "A", null, TYPE_SEISU_SYOSU, "2", "0"},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"GLBL_CMPY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//glblCmpyCd_A
        {"SVC_RG_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcRgPk_A
        {"SVC_CONTR_BR_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcContrBrCd_A
        {"SVC_MGR_PSN_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMgrPsnCd_A
        {"PSN_FIRST_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//psnFirstNm_A
        {"PSN_LAST_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//psnLastNm_A
        {"MGR_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mgrNm_A
        {"PREV_OPEN_TASK_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prevOpenTaskCnt_A
        {"INPROC_TASK_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//inprocTaskCnt_A
        {"CLO_TASK_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cloTaskCnt_A
        {"CANC_TASK_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cancTaskCnt_A
        {"REJ_TASK_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rejTaskCnt_A
        {"SVC_RSP_TM_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcRspTmNum_A
        {"XX_RCV_TM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRcvTm_A
        {"TO_BE_OPTM_TASK_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//toBeOptmTaskCnt_A
        {"SCHD_TASK_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//schdTaskCnt_A
        {"ASG_TASK_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//asgTaskCnt_A
        {"OPEN_TASK_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//openTaskCnt_A
        {"HLD_TASK_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//hldTaskCnt_A
        {"ESCL_TASK_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//esclTaskCnt_A
        {"VIP_TASK_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//vipTaskCnt_A
        {"ATTN_TASK_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//attnTaskCnt_A
        {"ORG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//orgCd_A
        {"ORG_LAYER_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//orgLayerNum_A
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

