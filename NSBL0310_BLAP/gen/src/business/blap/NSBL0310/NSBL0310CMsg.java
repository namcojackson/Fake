//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20190402130753000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSBL0310CMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NSBL0310;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSBL0310 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSBL0310CMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** GLBL_CMPY_CD*/
	public final EZDCStringItem              glblCmpyCd;

    /** SLS_DT*/
	public final EZDCDateItem              slsDt;

    /** SVC_RG_PK_H*/
	public final EZDCBigDecimalItem              svcRgPk_H;

    /** SVC_RG_NM_H*/
	public final EZDCStringItem              svcRgNm_H;

    /** SVC_CONTR_BR_CD_H*/
	public final EZDCStringItem              svcContrBrCd_H;

    /** SVC_CONTR_BR_DESC_TXT_H*/
	public final EZDCStringItem              svcContrBrDescTxt_H;

    /** SVC_MGR_TP_CD_H*/
	public final EZDCStringItem              svcMgrTpCd_H;

    /** SVC_MGR_TP_CD_HD*/
	public final EZDCStringItem              svcMgrTpCd_HD;

    /** ORG_CD_HL*/
	public final EZDCStringItem              orgCd_HL;

    /** ORG_CD_HT*/
	public final EZDCStringItem              orgCd_HT;

    /** ORG_DESC_TXT_H*/
	public final EZDCStringItem              orgDescTxt_H;

    /** ORG_LAYER_NUM*/
	public final EZDCBigDecimalItem              orgLayerNum;

    /** XX_PAGE_SHOW_FROM_NUM*/
	public final EZDCBigDecimalItem              xxPageShowFromNum;

    /** XX_PAGE_SHOW_TO_NUM*/
	public final EZDCBigDecimalItem              xxPageShowToNum;

    /** XX_PAGE_SHOW_OF_NUM*/
	public final EZDCBigDecimalItem              xxPageShowOfNum;

    /** XX_ROW_NUM*/
	public final EZDCBigDecimalItem              xxRowNum;

    /** A*/
	public final business.blap.NSBL0310.NSBL0310_ACMsgArray              A;

    /** PREV_OPEN_TASK_CNT_T*/
	public final EZDCBigDecimalItem              prevOpenTaskCnt_T;

    /** INPROC_TASK_CNT_T*/
	public final EZDCBigDecimalItem              inprocTaskCnt_T;

    /** CLO_TASK_CNT_T*/
	public final EZDCBigDecimalItem              cloTaskCnt_T;

    /** CANC_TASK_CNT_T*/
	public final EZDCBigDecimalItem              cancTaskCnt_T;

    /** REJ_TASK_CNT_T*/
	public final EZDCBigDecimalItem              rejTaskCnt_T;

    /** XX_RCV_TM_T*/
	public final EZDCStringItem              xxRcvTm_T;

    /** TO_BE_OPTM_TASK_CNT_T*/
	public final EZDCBigDecimalItem              toBeOptmTaskCnt_T;

    /** SCHD_TASK_CNT_T*/
	public final EZDCBigDecimalItem              schdTaskCnt_T;

    /** ASG_TASK_CNT_T*/
	public final EZDCBigDecimalItem              asgTaskCnt_T;

    /** OPEN_TASK_CNT_T*/
	public final EZDCBigDecimalItem              openTaskCnt_T;

    /** HLD_TASK_CNT_T*/
	public final EZDCBigDecimalItem              hldTaskCnt_T;

    /** ESCL_TASK_CNT_T*/
	public final EZDCBigDecimalItem              esclTaskCnt_T;

    /** VIP_TASK_CNT_T*/
	public final EZDCBigDecimalItem              vipTaskCnt_T;

    /** ATTN_TASK_CNT_T*/
	public final EZDCBigDecimalItem              attnTaskCnt_T;


	/**
	 * NSBL0310CMsg is constructor.
	 * The initialization when the instance of NSBL0310CMsg is generated.
	 */
	public NSBL0310CMsg() {
		this(false, -1);
	}

	/**
	 * NSBL0310CMsg is constructor.
	 * The initialization when the instance of NSBL0310CMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSBL0310CMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		glblCmpyCd = (EZDCStringItem)newItem("glblCmpyCd");
		slsDt = (EZDCDateItem)newItem("slsDt");
		svcRgPk_H = (EZDCBigDecimalItem)newItem("svcRgPk_H");
		svcRgNm_H = (EZDCStringItem)newItem("svcRgNm_H");
		svcContrBrCd_H = (EZDCStringItem)newItem("svcContrBrCd_H");
		svcContrBrDescTxt_H = (EZDCStringItem)newItem("svcContrBrDescTxt_H");
		svcMgrTpCd_H = (EZDCStringItem)newItem("svcMgrTpCd_H");
		svcMgrTpCd_HD = (EZDCStringItem)newItem("svcMgrTpCd_HD");
		orgCd_HL = (EZDCStringItem)newItem("orgCd_HL");
		orgCd_HT = (EZDCStringItem)newItem("orgCd_HT");
		orgDescTxt_H = (EZDCStringItem)newItem("orgDescTxt_H");
		orgLayerNum = (EZDCBigDecimalItem)newItem("orgLayerNum");
		xxPageShowFromNum = (EZDCBigDecimalItem)newItem("xxPageShowFromNum");
		xxPageShowToNum = (EZDCBigDecimalItem)newItem("xxPageShowToNum");
		xxPageShowOfNum = (EZDCBigDecimalItem)newItem("xxPageShowOfNum");
		xxRowNum = (EZDCBigDecimalItem)newItem("xxRowNum");
		A = (business.blap.NSBL0310.NSBL0310_ACMsgArray)newMsgArray("A");
		prevOpenTaskCnt_T = (EZDCBigDecimalItem)newItem("prevOpenTaskCnt_T");
		inprocTaskCnt_T = (EZDCBigDecimalItem)newItem("inprocTaskCnt_T");
		cloTaskCnt_T = (EZDCBigDecimalItem)newItem("cloTaskCnt_T");
		cancTaskCnt_T = (EZDCBigDecimalItem)newItem("cancTaskCnt_T");
		rejTaskCnt_T = (EZDCBigDecimalItem)newItem("rejTaskCnt_T");
		xxRcvTm_T = (EZDCStringItem)newItem("xxRcvTm_T");
		toBeOptmTaskCnt_T = (EZDCBigDecimalItem)newItem("toBeOptmTaskCnt_T");
		schdTaskCnt_T = (EZDCBigDecimalItem)newItem("schdTaskCnt_T");
		asgTaskCnt_T = (EZDCBigDecimalItem)newItem("asgTaskCnt_T");
		openTaskCnt_T = (EZDCBigDecimalItem)newItem("openTaskCnt_T");
		hldTaskCnt_T = (EZDCBigDecimalItem)newItem("hldTaskCnt_T");
		esclTaskCnt_T = (EZDCBigDecimalItem)newItem("esclTaskCnt_T");
		vipTaskCnt_T = (EZDCBigDecimalItem)newItem("vipTaskCnt_T");
		attnTaskCnt_T = (EZDCBigDecimalItem)newItem("attnTaskCnt_T");
	}

	/**
	 * get the type of array which is stored
	 * @return NSBL0310CMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSBL0310CMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"glblCmpyCd", "glblCmpyCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"slsDt", "slsDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"svcRgPk_H", "svcRgPk_H", "H", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"svcRgNm_H", "svcRgNm_H", "H", null, TYPE_HANKAKUEISU, "30", null},
	{"svcContrBrCd_H", "svcContrBrCd_H", "H", null, TYPE_HANKAKUEISU, "3", null},
	{"svcContrBrDescTxt_H", "svcContrBrDescTxt_H", "H", null, TYPE_HANKAKUEISU, "50", null},
	{"svcMgrTpCd_H", "svcMgrTpCd_H", "H", null, TYPE_HANKAKUEISU, "2", null},
	{"svcMgrTpCd_HD", "svcMgrTpCd_HD", "HD", null, TYPE_HANKAKUEISU, "2", null},
	{"orgCd_HL", "orgCd_HL", "HL", null, TYPE_HANKAKUEISU, "8", null},
	{"orgCd_HT", "orgCd_HT", "HT", null, TYPE_HANKAKUEISU, "8", null},
	{"orgDescTxt_H", "orgDescTxt_H", "H", null, TYPE_HANKAKUEISU, "50", null},
	{"orgLayerNum", "orgLayerNum", null, null, TYPE_SEISU_SYOSU, "2", "0"},
	{"xxPageShowFromNum", "xxPageShowFromNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowToNum", "xxPageShowToNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowOfNum", "xxPageShowOfNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxRowNum", "xxRowNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"A", "A", null, "20", "business.blap.NSBL0310.NSBL0310_ACMsgArray", null, null},
	
	{"prevOpenTaskCnt_T", "prevOpenTaskCnt_T", "T", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"inprocTaskCnt_T", "inprocTaskCnt_T", "T", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"cloTaskCnt_T", "cloTaskCnt_T", "T", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"cancTaskCnt_T", "cancTaskCnt_T", "T", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"rejTaskCnt_T", "rejTaskCnt_T", "T", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"xxRcvTm_T", "xxRcvTm_T", "T", null, TYPE_HANKAKUEISU, "8", null},
	{"toBeOptmTaskCnt_T", "toBeOptmTaskCnt_T", "T", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"schdTaskCnt_T", "schdTaskCnt_T", "T", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"asgTaskCnt_T", "asgTaskCnt_T", "T", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"openTaskCnt_T", "openTaskCnt_T", "T", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"hldTaskCnt_T", "hldTaskCnt_T", "T", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"esclTaskCnt_T", "esclTaskCnt_T", "T", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"vipTaskCnt_T", "vipTaskCnt_T", "T", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"attnTaskCnt_T", "attnTaskCnt_T", "T", null, TYPE_SEISU_SYOSU, "10", "0"},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"GLBL_CMPY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//glblCmpyCd
        {"SLS_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//slsDt
        {"SVC_RG_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcRgPk_H
        {"SVC_RG_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcRgNm_H
        {"SVC_CONTR_BR_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcContrBrCd_H
        {"SVC_CONTR_BR_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcContrBrDescTxt_H
        {"SVC_MGR_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMgrTpCd_H
        {"SVC_MGR_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMgrTpCd_HD
        {"ORG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//orgCd_HL
        {"ORG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//orgCd_HT
        {"ORG_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//orgDescTxt_H
        {"ORG_LAYER_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//orgLayerNum
        {"XX_PAGE_SHOW_FROM_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowFromNum
        {"XX_PAGE_SHOW_TO_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowToNum
        {"XX_PAGE_SHOW_OF_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowOfNum
        {"XX_ROW_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRowNum
		null,	//A
        {"PREV_OPEN_TASK_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prevOpenTaskCnt_T
        {"INPROC_TASK_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//inprocTaskCnt_T
        {"CLO_TASK_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cloTaskCnt_T
        {"CANC_TASK_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cancTaskCnt_T
        {"REJ_TASK_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rejTaskCnt_T
        {"XX_RCV_TM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRcvTm_T
        {"TO_BE_OPTM_TASK_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//toBeOptmTaskCnt_T
        {"SCHD_TASK_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//schdTaskCnt_T
        {"ASG_TASK_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//asgTaskCnt_T
        {"OPEN_TASK_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//openTaskCnt_T
        {"HLD_TASK_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//hldTaskCnt_T
        {"ESCL_TASK_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//esclTaskCnt_T
        {"VIP_TASK_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//vipTaskCnt_T
        {"ATTN_TASK_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//attnTaskCnt_T
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

