// This file was automatically generated by Screen Field Definition Document and XLA200710010
// Generated on    :20151218144027000
// Velocity Macro:svltdatabean.vm V200604010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0880Bean.java Copyright FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */

package  business.servlet.NSAL0880;

import parts.servletcommon.EZDCommonDataBean;

/*
 * NSAL0880 is data bean class.
 */
public class NSAL0880Bean extends EZDCommonDataBean {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	//Constant Definition Area
	/** GLBL_CMPY_CD*/
	public static final String glblCmpyCd = "glblCmpyCd";

	/** SLS_DT*/
	public static final String slsDt = "slsDt";

	/** SVC_MACH_MSTR_PK*/
	public static final String svcMachMstrPk = "svcMachMstrPk";

	/** SVC_PHYS_MTR_READ_GRP_SQ*/
	public static final String svcPhysMtrReadGrpSq = "svcPhysMtrReadGrpSq";

	/** SER_NUM*/
	public static final String serNum = "serNum";

	/** A*/
	public static final String A = "A";

	/** DS_MTR_INTFC_PK_A*/
	public static final String dsMtrIntfcPk_A = "dsMtrIntfcPk_A";

	/** SER_NUM_A*/
	public static final String serNum_A = "serNum_A";

	/** MTR_LB_DESC_TXT_A*/
	public static final String mtrLbDescTxt_A = "mtrLbDescTxt_A";

	/** READ_MTR_CNT_A*/
	public static final String readMtrCnt_A = "readMtrCnt_A";

	/** DS_MSG_TXT_A*/
	public static final String dsMsgTxt_A = "dsMsgTxt_A";

	/** DS_MTR_PROC_STS_DESC_TXT_A*/
	public static final String dsMtrProcStsDescTxt_A = "dsMtrProcStsDescTxt_A";

	/**
	 * Method name:NSAL0880 is Bean's Constructor.
	 * <dd>method explanation:Initialization when instance of NSAL0880Bean is generated
	 * <dd>Remarks:
	 */
	public NSAL0880Bean() {
		super("business.servlet.NSAL0880.NSAL0880BMsg");
	}

	/**
	 * get  GLBL_CMPY_CD.
	 * @return GLBL_CMPY_CD
	 */
	public String getGlblCmpyCd() {
		return outputValue(glblCmpyCd);
	}

	/**
	 * set  GLBL_CMPY_CD.
	 * @param data GLBL_CMPY_CD
	 */
	public void setGlblCmpyCd(String data) {
		inputValue(glblCmpyCd,data);
	}

	/**
	 * get  SLS_DT.
	 * @return SLS_DT
	 */
	public String getSlsDt() {
		return outputValue(slsDt, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  SLS_DT.
	 * @param data SLS_DT
	 */
	public void setSlsDt(String data) {
		inputValue(slsDt, data, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * get  SVC_MACH_MSTR_PK.
	 * @return SVC_MACH_MSTR_PK
	 */
	public String getSvcMachMstrPk() {
		return outputValue(svcMachMstrPk);
	}

	/**
	 * set  SVC_MACH_MSTR_PK.
	 * @param data SVC_MACH_MSTR_PK
	 */
	public void setSvcMachMstrPk(String data) {
		inputValue(svcMachMstrPk,data);
	}

	/**
	 * get  SVC_PHYS_MTR_READ_GRP_SQ.
	 * @return SVC_PHYS_MTR_READ_GRP_SQ
	 */
	public String getSvcPhysMtrReadGrpSq() {
		return outputValue(svcPhysMtrReadGrpSq);
	}

	/**
	 * set  SVC_PHYS_MTR_READ_GRP_SQ.
	 * @param data SVC_PHYS_MTR_READ_GRP_SQ
	 */
	public void setSvcPhysMtrReadGrpSq(String data) {
		inputValue(svcPhysMtrReadGrpSq,data);
	}

	/**
	 * get  SER_NUM.
	 * @return SER_NUM
	 */
	public String getSerNum() {
		return outputValue(serNum);
	}

	/**
	 * set  SER_NUM.
	 * @param data SER_NUM
	 */
	public void setSerNum(String data) {
		inputValue(serNum,data);
	}

	/**
	 * get  DS_MTR_INTFC_PK_A.
	 * @param idx1 List Number
	 * @return DS_MTR_INTFC_PK_A
	 */
	public String getDsMtrIntfcPk_A(int idx1) {
		return outputValue(A, idx1, dsMtrIntfcPk_A);
	}

	/**
	 * set  DS_MTR_INTFC_PK_A.
	 * @param data DS_MTR_INTFC_PK_AArray
	 */
	public void setDsMtrIntfcPk_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsMtrIntfcPk_A, data[j]);
		}
	}

	/**
	 * get  SER_NUM_A.
	 * @param idx1 List Number
	 * @return SER_NUM_A
	 */
	public String getSerNum_A(int idx1) {
		return outputValue(A, idx1, serNum_A);
	}

	/**
	 * set  SER_NUM_A.
	 * @param data SER_NUM_AArray
	 */
	public void setSerNum_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, serNum_A, data[j]);
		}
	}

	/**
	 * get  MTR_LB_DESC_TXT_A.
	 * @param idx1 List Number
	 * @return MTR_LB_DESC_TXT_A
	 */
	public String getMtrLbDescTxt_A(int idx1) {
		return outputValue(A, idx1, mtrLbDescTxt_A);
	}

	/**
	 * set  MTR_LB_DESC_TXT_A.
	 * @param data MTR_LB_DESC_TXT_AArray
	 */
	public void setMtrLbDescTxt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, mtrLbDescTxt_A, data[j]);
		}
	}

	/**
	 * get  READ_MTR_CNT_A.
	 * @param idx1 List Number
	 * @return READ_MTR_CNT_A
	 */
	public String getReadMtrCnt_A(int idx1) {
		return outputValue(A, idx1, readMtrCnt_A);
	}

	/**
	 * set  READ_MTR_CNT_A.
	 * @param data READ_MTR_CNT_AArray
	 */
	public void setReadMtrCnt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, readMtrCnt_A, data[j]);
		}
	}

	/**
	 * get  DS_MSG_TXT_A.
	 * @param idx1 List Number
	 * @return DS_MSG_TXT_A
	 */
	public String getDsMsgTxt_A(int idx1) {
		return outputValue(A, idx1, dsMsgTxt_A);
	}

	/**
	 * set  DS_MSG_TXT_A.
	 * @param data DS_MSG_TXT_AArray
	 */
	public void setDsMsgTxt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsMsgTxt_A, data[j]);
		}
	}

	/**
	 * get  DS_MTR_PROC_STS_DESC_TXT_A.
	 * @param idx1 List Number
	 * @return DS_MTR_PROC_STS_DESC_TXT_A
	 */
	public String getDsMtrProcStsDescTxt_A(int idx1) {
		return outputValue(A, idx1, dsMtrProcStsDescTxt_A);
	}

	/**
	 * set  DS_MTR_PROC_STS_DESC_TXT_A.
	 * @param data DS_MTR_PROC_STS_DESC_TXT_AArray
	 */
	public void setDsMtrProcStsDescTxt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsMtrProcStsDescTxt_A, data[j]);
		}
	}

}

