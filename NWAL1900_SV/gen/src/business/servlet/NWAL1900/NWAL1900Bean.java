// This file was automatically generated by Screen Field Definition Document and XLA200710010
// Generated on    :20181130181851000
// Velocity Macro:svltdatabean.vm V200604010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NWAL1900Bean.java Copyright FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */

package  business.servlet.NWAL1900;

import parts.servletcommon.EZDCommonDataBean;

/*
 * NWAL1900 is data bean class.
 */
public class NWAL1900Bean extends EZDCommonDataBean {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	//Constant Definition Area
	/** XX_MODE_CD*/
	public static final String xxModeCd = "xxModeCd";

	/** LINE_BIZ_TP_CD*/
	public static final String lineBizTpCd = "lineBizTpCd";

	/** PRC_RULE_MOD_TP_CD*/
	public static final String prcRuleModTpCd = "prcRuleModTpCd";

	/** DS_ORD_CATG_CD*/
	public static final String dsOrdCatgCd = "dsOrdCatgCd";

	/** DS_ORD_TP_CD*/
	public static final String dsOrdTpCd = "dsOrdTpCd";

	/** PRC_GRP_TRX_TP_CD_H1*/
	public static final String prcGrpTrxTpCd_H1 = "prcGrpTrxTpCd_H1";

	/** PRC_GRP_TRX_TP_CD_L1*/
	public static final String prcGrpTrxTpCd_L1 = "prcGrpTrxTpCd_L1";

	/** PRC_GRP_TRX_TP_DESC_TXT_L1*/
	public static final String prcGrpTrxTpDescTxt_L1 = "prcGrpTrxTpDescTxt_L1";

	/** A*/
	public static final String A = "A";

	/** PRC_RULE_HDR_PK_A*/
	public static final String prcRuleHdrPk_A = "prcRuleHdrPk_A";

	/** PRC_RULE_NM_A*/
	public static final String prcRuleNm_A = "prcRuleNm_A";

	/** PRC_RULE_NM_LK*/
	public static final String prcRuleNm_LK = "prcRuleNm_LK";

	/** PRC_RULE_COND_TP_CD_A*/
	public static final String prcRuleCondTpCd_A = "prcRuleCondTpCd_A";

	/** PRC_RULE_COND_TP_NM_A*/
	public static final String prcRuleCondTpNm_A = "prcRuleCondTpNm_A";

	/** XX_CMNT_TXT_A1*/
	public static final String xxCmntTxt_A1 = "xxCmntTxt_A1";

	/** XX_CMNT_TXT_A2*/
	public static final String xxCmntTxt_A2 = "xxCmntTxt_A2";

	/** DEF_RULE_PRCD_NUM_A*/
	public static final String defRulePrcdNum_A = "defRulePrcdNum_A";

	/** EFF_FROM_DT_A*/
	public static final String effFromDt_A = "effFromDt_A";

	/** EFF_THRU_DT_A*/
	public static final String effThruDt_A = "effThruDt_A";

	/** XX_CMNT_TXT_A3*/
	public static final String xxCmntTxt_A3 = "xxCmntTxt_A3";

	/** PRC_RULE_PRCD_PK_A*/
	public static final String prcRulePrcdPk_A = "prcRulePrcdPk_A";

	/** PRC_PRCD_ACT_TP_NM_A*/
	public static final String prcPrcdActTpNm_A = "prcPrcdActTpNm_A";

	/** PRC_ADJ_DTL_PK_A*/
	public static final String prcAdjDtlPk_A = "prcAdjDtlPk_A";

	/** PRC_RULE_DTL_PK_A*/
	public static final String prcRuleDtlPk_A = "prcRuleDtlPk_A";

	/** XX_PAGE_SHOW_FROM_NUM*/
	public static final String xxPageShowFromNum = "xxPageShowFromNum";

	/** XX_PAGE_SHOW_TO_NUM*/
	public static final String xxPageShowToNum = "xxPageShowToNum";

	/** XX_PAGE_SHOW_OF_NUM*/
	public static final String xxPageShowOfNum = "xxPageShowOfNum";

	/** B*/
	public static final String B = "B";

	/** PRC_RULE_HDR_PK_B*/
	public static final String prcRuleHdrPk_B = "prcRuleHdrPk_B";

	/** PRC_ADJ_DTL_PK_B*/
	public static final String prcAdjDtlPk_B = "prcAdjDtlPk_B";

	/** PRC_RULE_APPLY_FLG_B*/
	public static final String prcRuleApplyFlg_B = "prcRuleApplyFlg_B";

	/** PRC_RULE_PRCD_PK_B*/
	public static final String prcRulePrcdPk_B = "prcRulePrcdPk_B";

	/** L*/
	public static final String L = "L";

	/** PRC_COND_TP_CD_PL*/
	public static final String prcCondTpCd_PL = "prcCondTpCd_PL";

	/** PRC_COND_TP_DESC_TXT_PL*/
	public static final String prcCondTpDescTxt_PL = "prcCondTpDescTxt_PL";

	/** PRC_DTL_GRP_CD_PL*/
	public static final String prcDtlGrpCd_PL = "prcDtlGrpCd_PL";

	/** PRC_JRNL_GRP_CD_PL*/
	public static final String prcJrnlGrpCd_PL = "prcJrnlGrpCd_PL";

	/** PRC_CATG_CD_PL*/
	public static final String prcCatgCd_PL = "prcCatgCd_PL";

	/** PRC_COND_MAN_ENTRY_FLG_PL*/
	public static final String prcCondManEntryFlg_PL = "prcCondManEntryFlg_PL";

	/** PRC_COND_MAN_ADD_FLG_PL*/
	public static final String prcCondManAddFlg_PL = "prcCondManAddFlg_PL";

	/** PRC_COND_MAN_DEL_FLG_PL*/
	public static final String prcCondManDelFlg_PL = "prcCondManDelFlg_PL";

	/** PKG_UOM_CD_PL*/
	public static final String pkgUomCd_PL = "pkgUomCd_PL";

	/** PRC_COND_UNIT_CD_PL*/
	public static final String prcCondUnitCd_PL = "prcCondUnitCd_PL";

	/** PRC_CALC_METH_CD_PL*/
	public static final String prcCalcMethCd_PL = "prcCalcMethCd_PL";

	/** AUTO_PRC_CCY_CD_PL*/
	public static final String autoPrcCcyCd_PL = "autoPrcCcyCd_PL";

	/** AUTO_PRC_AMT_RATE_PL*/
	public static final String autoPrcAmtRate_PL = "autoPrcAmtRate_PL";

	/** MAX_PRC_AMT_RATE_PL*/
	public static final String maxPrcAmtRate_PL = "maxPrcAmtRate_PL";

	/** MIN_PRC_AMT_RATE_PL*/
	public static final String minPrcAmtRate_PL = "minPrcAmtRate_PL";

	/** MAN_PRC_AMT_RATE_PL*/
	public static final String manPrcAmtRate_PL = "manPrcAmtRate_PL";

	/** CALC_PRC_AMT_RATE_PL*/
	public static final String calcPrcAmtRate_PL = "calcPrcAmtRate_PL";

	/** UNIT_PRC_AMT_PL*/
	public static final String unitPrcAmt_PL = "unitPrcAmt_PL";

	/** DS_MDSE_PRC_PK_PL*/
	public static final String dsMdsePrcPk_PL = "dsMdsePrcPk_PL";

	/** SPEC_COND_PRC_PK_PL*/
	public static final String specCondPrcPk_PL = "specCondPrcPk_PL";

	/** FRT_PER_WT_PK_PL*/
	public static final String frtPerWtPk_PL = "frtPerWtPk_PL";

	/** ORD_PRC_CALC_BASE_PK_PL*/
	public static final String ordPrcCalcBasePk_PL = "ordPrcCalcBasePk_PL";

	/** PRC_RULE_APPLY_FLG_PL*/
	public static final String prcRuleApplyFlg_PL = "prcRuleApplyFlg_PL";

	/** PRC_RULE_PRCD_PK_PL*/
	public static final String prcRulePrcdPk_PL = "prcRulePrcdPk_PL";

	/**
	 * Method name:NWAL1900 is Bean's Constructor.
	 * <dd>method explanation:Initialization when instance of NWAL1900Bean is generated
	 * <dd>Remarks:
	 */
	public NWAL1900Bean() {
		super("business.servlet.NWAL1900.NWAL1900BMsg");
	}

	/**
	 * get  XX_MODE_CD.
	 * @return XX_MODE_CD
	 */
	public String getXxModeCd() {
		return outputValue(xxModeCd);
	}

	/**
	 * set  XX_MODE_CD.
	 * @param data XX_MODE_CD
	 */
	public void setXxModeCd(String data) {
		inputValue(xxModeCd,data);
	}

	/**
	 * get  LINE_BIZ_TP_CD.
	 * @return LINE_BIZ_TP_CD
	 */
	public String getLineBizTpCd() {
		return outputValue(lineBizTpCd);
	}

	/**
	 * set  LINE_BIZ_TP_CD.
	 * @param data LINE_BIZ_TP_CD
	 */
	public void setLineBizTpCd(String data) {
		inputValue(lineBizTpCd,data);
	}

	/**
	 * get  PRC_RULE_MOD_TP_CD.
	 * @return PRC_RULE_MOD_TP_CD
	 */
	public String getPrcRuleModTpCd() {
		return outputValue(prcRuleModTpCd);
	}

	/**
	 * set  PRC_RULE_MOD_TP_CD.
	 * @param data PRC_RULE_MOD_TP_CD
	 */
	public void setPrcRuleModTpCd(String data) {
		inputValue(prcRuleModTpCd,data);
	}

	/**
	 * get  DS_ORD_CATG_CD.
	 * @return DS_ORD_CATG_CD
	 */
	public String getDsOrdCatgCd() {
		return outputValue(dsOrdCatgCd);
	}

	/**
	 * set  DS_ORD_CATG_CD.
	 * @param data DS_ORD_CATG_CD
	 */
	public void setDsOrdCatgCd(String data) {
		inputValue(dsOrdCatgCd,data);
	}

	/**
	 * get  DS_ORD_TP_CD.
	 * @return DS_ORD_TP_CD
	 */
	public String getDsOrdTpCd() {
		return outputValue(dsOrdTpCd);
	}

	/**
	 * set  DS_ORD_TP_CD.
	 * @param data DS_ORD_TP_CD
	 */
	public void setDsOrdTpCd(String data) {
		inputValue(dsOrdTpCd,data);
	}

	/**
	 * get  PRC_GRP_TRX_TP_CD_H1.
	 * @return PRC_GRP_TRX_TP_CD_H1
	 */
	public String getPrcGrpTrxTpCd_H1() {
		return outputValue(prcGrpTrxTpCd_H1);
	}

	/**
	 * set  PRC_GRP_TRX_TP_CD_H1.
	 * @param data PRC_GRP_TRX_TP_CD_H1
	 */
	public void setPrcGrpTrxTpCd_H1(String data) {
		inputValue(prcGrpTrxTpCd_H1,data);
	}

	/**
	 * get  PRC_GRP_TRX_TP_CD_L1.
	 * @param idx1 Index Number
	 * @return PRC_GRP_TRX_TP_CD_L1
	 */
	public String getPrcGrpTrxTpCd_L1(int idx1) {
	 	 return outputValue(prcGrpTrxTpCd_L1, idx1);
	}

	/**
	 * get  PRC_GRP_TRX_TP_DESC_TXT_L1.
	 * @param idx1 Index Number
	 * @return PRC_GRP_TRX_TP_DESC_TXT_L1
	 */
	public String getPrcGrpTrxTpDescTxt_L1(int idx1) {
	 	 return outputValue(prcGrpTrxTpDescTxt_L1, idx1);
	}

	/**
	 * get  PRC_RULE_HDR_PK_A.
	 * @param idx1 List Number
	 * @return PRC_RULE_HDR_PK_A
	 */
	public String getPrcRuleHdrPk_A(int idx1) {
		return outputValue(A, idx1, prcRuleHdrPk_A);
	}

	/**
	 * set  PRC_RULE_HDR_PK_A.
	 * @param data PRC_RULE_HDR_PK_AArray
	 */
	public void setPrcRuleHdrPk_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleHdrPk_A, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_NM_A.
	 * @param idx1 List Number
	 * @return PRC_RULE_NM_A
	 */
	public String getPrcRuleNm_A(int idx1) {
		return outputValue(A, idx1, prcRuleNm_A);
	}

	/**
	 * set  PRC_RULE_NM_A.
	 * @param data PRC_RULE_NM_AArray
	 */
	public void setPrcRuleNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleNm_A, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_NM_LK.
	 * @param idx1 List Number
	 * @return PRC_RULE_NM_LK
	 */
	public String getPrcRuleNm_LK(int idx1) {
		return outputValue(A, idx1, prcRuleNm_LK);
	}

	/**
	 * set  PRC_RULE_NM_LK.
	 * @param data PRC_RULE_NM_LKArray
	 */
	public void setPrcRuleNm_LK(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleNm_LK, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_COND_TP_CD_A.
	 * @param idx1 List Number
	 * @return PRC_RULE_COND_TP_CD_A
	 */
	public String getPrcRuleCondTpCd_A(int idx1) {
		return outputValue(A, idx1, prcRuleCondTpCd_A);
	}

	/**
	 * set  PRC_RULE_COND_TP_CD_A.
	 * @param data PRC_RULE_COND_TP_CD_AArray
	 */
	public void setPrcRuleCondTpCd_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleCondTpCd_A, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_COND_TP_NM_A.
	 * @param idx1 List Number
	 * @return PRC_RULE_COND_TP_NM_A
	 */
	public String getPrcRuleCondTpNm_A(int idx1) {
		return outputValue(A, idx1, prcRuleCondTpNm_A);
	}

	/**
	 * set  PRC_RULE_COND_TP_NM_A.
	 * @param data PRC_RULE_COND_TP_NM_AArray
	 */
	public void setPrcRuleCondTpNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleCondTpNm_A, data[j]);
		}
	}

	/**
	 * get  XX_CMNT_TXT_A1.
	 * @param idx1 List Number
	 * @return XX_CMNT_TXT_A1
	 */
	public String getXxCmntTxt_A1(int idx1) {
		return outputValue(A, idx1, xxCmntTxt_A1);
	}

	/**
	 * set  XX_CMNT_TXT_A1.
	 * @param data XX_CMNT_TXT_A1Array
	 */
	public void setXxCmntTxt_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxCmntTxt_A1, data[j]);
		}
	}

	/**
	 * get  XX_CMNT_TXT_A2.
	 * @param idx1 List Number
	 * @return XX_CMNT_TXT_A2
	 */
	public String getXxCmntTxt_A2(int idx1) {
		return outputValue(A, idx1, xxCmntTxt_A2);
	}

	/**
	 * set  XX_CMNT_TXT_A2.
	 * @param data XX_CMNT_TXT_A2Array
	 */
	public void setXxCmntTxt_A2(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxCmntTxt_A2, data[j]);
		}
	}

	/**
	 * get  DEF_RULE_PRCD_NUM_A.
	 * @param idx1 List Number
	 * @return DEF_RULE_PRCD_NUM_A
	 */
	public String getDefRulePrcdNum_A(int idx1) {
		return outputValue(A, idx1, defRulePrcdNum_A);
	}

	/**
	 * set  DEF_RULE_PRCD_NUM_A.
	 * @param data DEF_RULE_PRCD_NUM_AArray
	 */
	public void setDefRulePrcdNum_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, defRulePrcdNum_A, data[j]);
		}
	}

	/**
	 * get  EFF_FROM_DT_A.
	 * @param idx1 List Number
	 * @return EFF_FROM_DT_A
	 */
	public String getEffFromDt_A(int idx1) {
		return outputValue(A, idx1, effFromDt_A, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  EFF_FROM_DT_A.
	 * @param data EFF_FROM_DT_AArray
	 */
	public void setEffFromDt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i,  effFromDt_A, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  EFF_THRU_DT_A.
	 * @param idx1 List Number
	 * @return EFF_THRU_DT_A
	 */
	public String getEffThruDt_A(int idx1) {
		return outputValue(A, idx1, effThruDt_A, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  EFF_THRU_DT_A.
	 * @param data EFF_THRU_DT_AArray
	 */
	public void setEffThruDt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i,  effThruDt_A, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  XX_CMNT_TXT_A3.
	 * @param idx1 List Number
	 * @return XX_CMNT_TXT_A3
	 */
	public String getXxCmntTxt_A3(int idx1) {
		return outputValue(A, idx1, xxCmntTxt_A3);
	}

	/**
	 * set  XX_CMNT_TXT_A3.
	 * @param data XX_CMNT_TXT_A3Array
	 */
	public void setXxCmntTxt_A3(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxCmntTxt_A3, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_PRCD_PK_A.
	 * @param idx1 List Number
	 * @return PRC_RULE_PRCD_PK_A
	 */
	public String getPrcRulePrcdPk_A(int idx1) {
		return outputValue(A, idx1, prcRulePrcdPk_A);
	}

	/**
	 * set  PRC_RULE_PRCD_PK_A.
	 * @param data PRC_RULE_PRCD_PK_AArray
	 */
	public void setPrcRulePrcdPk_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRulePrcdPk_A, data[j]);
		}
	}

	/**
	 * get  PRC_PRCD_ACT_TP_NM_A.
	 * @param idx1 List Number
	 * @return PRC_PRCD_ACT_TP_NM_A
	 */
	public String getPrcPrcdActTpNm_A(int idx1) {
		return outputValue(A, idx1, prcPrcdActTpNm_A);
	}

	/**
	 * set  PRC_PRCD_ACT_TP_NM_A.
	 * @param data PRC_PRCD_ACT_TP_NM_AArray
	 */
	public void setPrcPrcdActTpNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcPrcdActTpNm_A, data[j]);
		}
	}

	/**
	 * get  PRC_ADJ_DTL_PK_A.
	 * @param idx1 List Number
	 * @return PRC_ADJ_DTL_PK_A
	 */
	public String getPrcAdjDtlPk_A(int idx1) {
		return outputValue(A, idx1, prcAdjDtlPk_A);
	}

	/**
	 * set  PRC_ADJ_DTL_PK_A.
	 * @param data PRC_ADJ_DTL_PK_AArray
	 */
	public void setPrcAdjDtlPk_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcAdjDtlPk_A, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_DTL_PK_A.
	 * @param idx1 List Number
	 * @return PRC_RULE_DTL_PK_A
	 */
	public String getPrcRuleDtlPk_A(int idx1) {
		return outputValue(A, idx1, prcRuleDtlPk_A);
	}

	/**
	 * set  PRC_RULE_DTL_PK_A.
	 * @param data PRC_RULE_DTL_PK_AArray
	 */
	public void setPrcRuleDtlPk_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcRuleDtlPk_A, data[j]);
		}
	}

	/**
	 * get  XX_PAGE_SHOW_FROM_NUM.
	 * @return XX_PAGE_SHOW_FROM_NUM
	 */
	public String getXxPageShowFromNum() {
		return outputValue(xxPageShowFromNum);
	}

	/**
	 * set  XX_PAGE_SHOW_FROM_NUM.
	 * @param data XX_PAGE_SHOW_FROM_NUM
	 */
	public void setXxPageShowFromNum(String data) {
		inputValue(xxPageShowFromNum,data);
	}

	/**
	 * get  XX_PAGE_SHOW_TO_NUM.
	 * @return XX_PAGE_SHOW_TO_NUM
	 */
	public String getXxPageShowToNum() {
		return outputValue(xxPageShowToNum);
	}

	/**
	 * set  XX_PAGE_SHOW_TO_NUM.
	 * @param data XX_PAGE_SHOW_TO_NUM
	 */
	public void setXxPageShowToNum(String data) {
		inputValue(xxPageShowToNum,data);
	}

	/**
	 * get  XX_PAGE_SHOW_OF_NUM.
	 * @return XX_PAGE_SHOW_OF_NUM
	 */
	public String getXxPageShowOfNum() {
		return outputValue(xxPageShowOfNum);
	}

	/**
	 * set  XX_PAGE_SHOW_OF_NUM.
	 * @param data XX_PAGE_SHOW_OF_NUM
	 */
	public void setXxPageShowOfNum(String data) {
		inputValue(xxPageShowOfNum,data);
	}

	/**
	 * get  PRC_RULE_HDR_PK_B.
	 * @param idx1 List Number
	 * @return PRC_RULE_HDR_PK_B
	 */
	public String getPrcRuleHdrPk_B(int idx1) {
		return outputValue(B, idx1, prcRuleHdrPk_B);
	}

	/**
	 * set  PRC_RULE_HDR_PK_B.
	 * @param data PRC_RULE_HDR_PK_BArray
	 */
	public void setPrcRuleHdrPk_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, prcRuleHdrPk_B, data[j]);
		}
	}

	/**
	 * get  PRC_ADJ_DTL_PK_B.
	 * @param idx1 List Number
	 * @return PRC_ADJ_DTL_PK_B
	 */
	public String getPrcAdjDtlPk_B(int idx1) {
		return outputValue(B, idx1, prcAdjDtlPk_B);
	}

	/**
	 * set  PRC_ADJ_DTL_PK_B.
	 * @param data PRC_ADJ_DTL_PK_BArray
	 */
	public void setPrcAdjDtlPk_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, prcAdjDtlPk_B, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_APPLY_FLG_B.
	 * @param idx1 List Number
	 * @return PRC_RULE_APPLY_FLG_B
	 */
	public String getPrcRuleApplyFlg_B(int idx1) {
		return outputValue(B, idx1, prcRuleApplyFlg_B);
	}

	/**
	 * set  PRC_RULE_APPLY_FLG_B.
	 * @param data PRC_RULE_APPLY_FLG_BArray
	 */
	public void setPrcRuleApplyFlg_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, prcRuleApplyFlg_B, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_PRCD_PK_B.
	 * @param idx1 List Number
	 * @return PRC_RULE_PRCD_PK_B
	 */
	public String getPrcRulePrcdPk_B(int idx1) {
		return outputValue(B, idx1, prcRulePrcdPk_B);
	}

	/**
	 * set  PRC_RULE_PRCD_PK_B.
	 * @param data PRC_RULE_PRCD_PK_BArray
	 */
	public void setPrcRulePrcdPk_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, prcRulePrcdPk_B, data[j]);
		}
	}

	/**
	 * get  PRC_COND_TP_CD_PL.
	 * @param idx1 List Number
	 * @return PRC_COND_TP_CD_PL
	 */
	public String getPrcCondTpCd_PL(int idx1) {
		return outputValue(L, idx1, prcCondTpCd_PL);
	}

	/**
	 * set  PRC_COND_TP_CD_PL.
	 * @param data PRC_COND_TP_CD_PLArray
	 */
	public void setPrcCondTpCd_PL(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(L);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(L, i, prcCondTpCd_PL, data[j]);
		}
	}

	/**
	 * get  PRC_COND_TP_DESC_TXT_PL.
	 * @param idx1 List Number
	 * @return PRC_COND_TP_DESC_TXT_PL
	 */
	public String getPrcCondTpDescTxt_PL(int idx1) {
		return outputValue(L, idx1, prcCondTpDescTxt_PL);
	}

	/**
	 * set  PRC_COND_TP_DESC_TXT_PL.
	 * @param data PRC_COND_TP_DESC_TXT_PLArray
	 */
	public void setPrcCondTpDescTxt_PL(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(L);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(L, i, prcCondTpDescTxt_PL, data[j]);
		}
	}

	/**
	 * get  PRC_DTL_GRP_CD_PL.
	 * @param idx1 List Number
	 * @return PRC_DTL_GRP_CD_PL
	 */
	public String getPrcDtlGrpCd_PL(int idx1) {
		return outputValue(L, idx1, prcDtlGrpCd_PL);
	}

	/**
	 * set  PRC_DTL_GRP_CD_PL.
	 * @param data PRC_DTL_GRP_CD_PLArray
	 */
	public void setPrcDtlGrpCd_PL(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(L);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(L, i, prcDtlGrpCd_PL, data[j]);
		}
	}

	/**
	 * get  PRC_JRNL_GRP_CD_PL.
	 * @param idx1 List Number
	 * @return PRC_JRNL_GRP_CD_PL
	 */
	public String getPrcJrnlGrpCd_PL(int idx1) {
		return outputValue(L, idx1, prcJrnlGrpCd_PL);
	}

	/**
	 * set  PRC_JRNL_GRP_CD_PL.
	 * @param data PRC_JRNL_GRP_CD_PLArray
	 */
	public void setPrcJrnlGrpCd_PL(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(L);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(L, i, prcJrnlGrpCd_PL, data[j]);
		}
	}

	/**
	 * get  PRC_CATG_CD_PL.
	 * @param idx1 List Number
	 * @return PRC_CATG_CD_PL
	 */
	public String getPrcCatgCd_PL(int idx1) {
		return outputValue(L, idx1, prcCatgCd_PL);
	}

	/**
	 * set  PRC_CATG_CD_PL.
	 * @param data PRC_CATG_CD_PLArray
	 */
	public void setPrcCatgCd_PL(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(L);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(L, i, prcCatgCd_PL, data[j]);
		}
	}

	/**
	 * get  PRC_COND_MAN_ENTRY_FLG_PL.
	 * @param idx1 List Number
	 * @return PRC_COND_MAN_ENTRY_FLG_PL
	 */
	public String getPrcCondManEntryFlg_PL(int idx1) {
		return outputValue(L, idx1, prcCondManEntryFlg_PL);
	}

	/**
	 * set  PRC_COND_MAN_ENTRY_FLG_PL.
	 * @param data PRC_COND_MAN_ENTRY_FLG_PLArray
	 */
	public void setPrcCondManEntryFlg_PL(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(L);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(L, i, prcCondManEntryFlg_PL, data[j]);
		}
	}

	/**
	 * get  PRC_COND_MAN_ADD_FLG_PL.
	 * @param idx1 List Number
	 * @return PRC_COND_MAN_ADD_FLG_PL
	 */
	public String getPrcCondManAddFlg_PL(int idx1) {
		return outputValue(L, idx1, prcCondManAddFlg_PL);
	}

	/**
	 * set  PRC_COND_MAN_ADD_FLG_PL.
	 * @param data PRC_COND_MAN_ADD_FLG_PLArray
	 */
	public void setPrcCondManAddFlg_PL(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(L);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(L, i, prcCondManAddFlg_PL, data[j]);
		}
	}

	/**
	 * get  PRC_COND_MAN_DEL_FLG_PL.
	 * @param idx1 List Number
	 * @return PRC_COND_MAN_DEL_FLG_PL
	 */
	public String getPrcCondManDelFlg_PL(int idx1) {
		return outputValue(L, idx1, prcCondManDelFlg_PL);
	}

	/**
	 * set  PRC_COND_MAN_DEL_FLG_PL.
	 * @param data PRC_COND_MAN_DEL_FLG_PLArray
	 */
	public void setPrcCondManDelFlg_PL(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(L);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(L, i, prcCondManDelFlg_PL, data[j]);
		}
	}

	/**
	 * get  PKG_UOM_CD_PL.
	 * @param idx1 List Number
	 * @return PKG_UOM_CD_PL
	 */
	public String getPkgUomCd_PL(int idx1) {
		return outputValue(L, idx1, pkgUomCd_PL);
	}

	/**
	 * set  PKG_UOM_CD_PL.
	 * @param data PKG_UOM_CD_PLArray
	 */
	public void setPkgUomCd_PL(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(L);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(L, i, pkgUomCd_PL, data[j]);
		}
	}

	/**
	 * get  PRC_COND_UNIT_CD_PL.
	 * @param idx1 List Number
	 * @return PRC_COND_UNIT_CD_PL
	 */
	public String getPrcCondUnitCd_PL(int idx1) {
		return outputValue(L, idx1, prcCondUnitCd_PL);
	}

	/**
	 * set  PRC_COND_UNIT_CD_PL.
	 * @param data PRC_COND_UNIT_CD_PLArray
	 */
	public void setPrcCondUnitCd_PL(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(L);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(L, i, prcCondUnitCd_PL, data[j]);
		}
	}

	/**
	 * get  PRC_CALC_METH_CD_PL.
	 * @param idx1 List Number
	 * @return PRC_CALC_METH_CD_PL
	 */
	public String getPrcCalcMethCd_PL(int idx1) {
		return outputValue(L, idx1, prcCalcMethCd_PL);
	}

	/**
	 * set  PRC_CALC_METH_CD_PL.
	 * @param data PRC_CALC_METH_CD_PLArray
	 */
	public void setPrcCalcMethCd_PL(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(L);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(L, i, prcCalcMethCd_PL, data[j]);
		}
	}

	/**
	 * get  AUTO_PRC_CCY_CD_PL.
	 * @param idx1 List Number
	 * @return AUTO_PRC_CCY_CD_PL
	 */
	public String getAutoPrcCcyCd_PL(int idx1) {
		return outputValue(L, idx1, autoPrcCcyCd_PL);
	}

	/**
	 * set  AUTO_PRC_CCY_CD_PL.
	 * @param data AUTO_PRC_CCY_CD_PLArray
	 */
	public void setAutoPrcCcyCd_PL(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(L);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(L, i, autoPrcCcyCd_PL, data[j]);
		}
	}

	/**
	 * get  AUTO_PRC_AMT_RATE_PL.
	 * @param idx1 List Number
	 * @return AUTO_PRC_AMT_RATE_PL
	 */
	public String getAutoPrcAmtRate_PL(int idx1) {
		return outputValue(L, idx1, autoPrcAmtRate_PL);
	}

	/**
	 * set  AUTO_PRC_AMT_RATE_PL.
	 * @param data AUTO_PRC_AMT_RATE_PLArray
	 */
	public void setAutoPrcAmtRate_PL(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(L);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(L, i, autoPrcAmtRate_PL, data[j]);
		}
	}

	/**
	 * get  MAX_PRC_AMT_RATE_PL.
	 * @param idx1 List Number
	 * @return MAX_PRC_AMT_RATE_PL
	 */
	public String getMaxPrcAmtRate_PL(int idx1) {
		return outputValue(L, idx1, maxPrcAmtRate_PL);
	}

	/**
	 * set  MAX_PRC_AMT_RATE_PL.
	 * @param data MAX_PRC_AMT_RATE_PLArray
	 */
	public void setMaxPrcAmtRate_PL(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(L);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(L, i, maxPrcAmtRate_PL, data[j]);
		}
	}

	/**
	 * get  MIN_PRC_AMT_RATE_PL.
	 * @param idx1 List Number
	 * @return MIN_PRC_AMT_RATE_PL
	 */
	public String getMinPrcAmtRate_PL(int idx1) {
		return outputValue(L, idx1, minPrcAmtRate_PL);
	}

	/**
	 * set  MIN_PRC_AMT_RATE_PL.
	 * @param data MIN_PRC_AMT_RATE_PLArray
	 */
	public void setMinPrcAmtRate_PL(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(L);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(L, i, minPrcAmtRate_PL, data[j]);
		}
	}

	/**
	 * get  MAN_PRC_AMT_RATE_PL.
	 * @param idx1 List Number
	 * @return MAN_PRC_AMT_RATE_PL
	 */
	public String getManPrcAmtRate_PL(int idx1) {
		return outputValue(L, idx1, manPrcAmtRate_PL);
	}

	/**
	 * set  MAN_PRC_AMT_RATE_PL.
	 * @param data MAN_PRC_AMT_RATE_PLArray
	 */
	public void setManPrcAmtRate_PL(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(L);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(L, i, manPrcAmtRate_PL, data[j]);
		}
	}

	/**
	 * get  CALC_PRC_AMT_RATE_PL.
	 * @param idx1 List Number
	 * @return CALC_PRC_AMT_RATE_PL
	 */
	public String getCalcPrcAmtRate_PL(int idx1) {
		return outputValue(L, idx1, calcPrcAmtRate_PL);
	}

	/**
	 * set  CALC_PRC_AMT_RATE_PL.
	 * @param data CALC_PRC_AMT_RATE_PLArray
	 */
	public void setCalcPrcAmtRate_PL(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(L);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(L, i, calcPrcAmtRate_PL, data[j]);
		}
	}

	/**
	 * get  UNIT_PRC_AMT_PL.
	 * @param idx1 List Number
	 * @return UNIT_PRC_AMT_PL
	 */
	public String getUnitPrcAmt_PL(int idx1) {
		return outputValue(L, idx1, unitPrcAmt_PL);
	}

	/**
	 * set  UNIT_PRC_AMT_PL.
	 * @param data UNIT_PRC_AMT_PLArray
	 */
	public void setUnitPrcAmt_PL(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(L);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(L, i, unitPrcAmt_PL, data[j]);
		}
	}

	/**
	 * get  DS_MDSE_PRC_PK_PL.
	 * @param idx1 List Number
	 * @return DS_MDSE_PRC_PK_PL
	 */
	public String getDsMdsePrcPk_PL(int idx1) {
		return outputValue(L, idx1, dsMdsePrcPk_PL);
	}

	/**
	 * set  DS_MDSE_PRC_PK_PL.
	 * @param data DS_MDSE_PRC_PK_PLArray
	 */
	public void setDsMdsePrcPk_PL(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(L);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(L, i, dsMdsePrcPk_PL, data[j]);
		}
	}

	/**
	 * get  SPEC_COND_PRC_PK_PL.
	 * @param idx1 List Number
	 * @return SPEC_COND_PRC_PK_PL
	 */
	public String getSpecCondPrcPk_PL(int idx1) {
		return outputValue(L, idx1, specCondPrcPk_PL);
	}

	/**
	 * set  SPEC_COND_PRC_PK_PL.
	 * @param data SPEC_COND_PRC_PK_PLArray
	 */
	public void setSpecCondPrcPk_PL(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(L);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(L, i, specCondPrcPk_PL, data[j]);
		}
	}

	/**
	 * get  FRT_PER_WT_PK_PL.
	 * @param idx1 List Number
	 * @return FRT_PER_WT_PK_PL
	 */
	public String getFrtPerWtPk_PL(int idx1) {
		return outputValue(L, idx1, frtPerWtPk_PL);
	}

	/**
	 * set  FRT_PER_WT_PK_PL.
	 * @param data FRT_PER_WT_PK_PLArray
	 */
	public void setFrtPerWtPk_PL(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(L);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(L, i, frtPerWtPk_PL, data[j]);
		}
	}

	/**
	 * get  ORD_PRC_CALC_BASE_PK_PL.
	 * @param idx1 List Number
	 * @return ORD_PRC_CALC_BASE_PK_PL
	 */
	public String getOrdPrcCalcBasePk_PL(int idx1) {
		return outputValue(L, idx1, ordPrcCalcBasePk_PL);
	}

	/**
	 * set  ORD_PRC_CALC_BASE_PK_PL.
	 * @param data ORD_PRC_CALC_BASE_PK_PLArray
	 */
	public void setOrdPrcCalcBasePk_PL(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(L);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(L, i, ordPrcCalcBasePk_PL, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_APPLY_FLG_PL.
	 * @param idx1 List Number
	 * @return PRC_RULE_APPLY_FLG_PL
	 */
	public String getPrcRuleApplyFlg_PL(int idx1) {
		return outputValue(L, idx1, prcRuleApplyFlg_PL);
	}

	/**
	 * set  PRC_RULE_APPLY_FLG_PL.
	 * @param data PRC_RULE_APPLY_FLG_PLArray
	 */
	public void setPrcRuleApplyFlg_PL(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(L);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(L, i, prcRuleApplyFlg_PL, data[j]);
		}
	}

	/**
	 * get  PRC_RULE_PRCD_PK_PL.
	 * @param idx1 List Number
	 * @return PRC_RULE_PRCD_PK_PL
	 */
	public String getPrcRulePrcdPk_PL(int idx1) {
		return outputValue(L, idx1, prcRulePrcdPk_PL);
	}

	/**
	 * set  PRC_RULE_PRCD_PK_PL.
	 * @param data PRC_RULE_PRCD_PK_PLArray
	 */
	public void setPrcRulePrcdPk_PL(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(L);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(L, i, prcRulePrcdPk_PL, data[j]);
		}
	}

}

