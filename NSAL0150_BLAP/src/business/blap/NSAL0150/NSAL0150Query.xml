<?xml version="1.0" encoding="UTF-8"?>
<sqlMap namespace="NSAL0150Query">

    <typeAlias alias="NSAL0150_FSMsg"  type="business.blap.NSAL0150.NSAL0150_FSMsg"/>

<statement id="getDsMtrReadTpGrp" parameterClass="Map" resultClass="Map">
SELECT
	MTG.*
FROM
	DS_MTR_READ_TP_GRP	MTG
WHERE
	MTG.GLBL_CMPY_CD			=	#glblCmpyCd#
            <iterate property="dsMtrReadTpGrpCdList" var="dsMtrReadTpGrpCd[]" open="AND MTG.DS_MTR_READ_TP_GRP_CD IN (" close=")" conjunction=",">
                #dsMtrReadTpGrpCd[]#
            </iterate>
AND	MTG.EZCANCELFLAG			=	'0'
ORDER BY
	MTG.DS_MTR_READ_TP_GRP_SORT_NUM
</statement>

<statement id="getMachDtl" parameterClass="Map" resultClass="Map">
        SELECT
             SMM.SVC_MACH_MSTR_PK         AS    SVC_MACH_MSTR_PK
            ,BTC.LOC_NM                   AS    BILL_TO_LOC_NM
            ,STC.LOC_NM                   AS    SHIP_TO_LOC_NM
            ,MDN.T_MDL_NM                 AS    MDL_NM
            ,CPP.CTAC_NM                  AS    CTAC_NM
            ,CPF.CTAC_NM                  AS    FAX_CTAC_NM
<!-- START 2016/11/24 [QC#14992, MOD] -->
            ,TRIM(STK.SVC_CUST_ATTN_TXT) || ' ' || TRIM(STK.CUST_TEL_NUM) || ' ' || TRIM(STK.CUST_TEL_EXTN_NUM)
                                          AS    LAST_SVC_CALL_CTAC
<!-- START 2018/09/25 [QC#28443, MOD] -->
            ,TRIM(CPP.DS_CTAC_PNT_VAL_TXT
                        || ' ' || CPP.DS_CTAC_PSN_EXTN_NUM)  AS    TEL
<!-- END   2018/09/25 [QC#28443, MOD] -->
<!-- END   2016/11/24 [QC#14992, MOD] -->
            ,CPF.FAX_NUM                  AS    FAX
<!-- START 2018/09/25 [QC#28443, MOD] -->
            ,CPE.DS_CTAC_PNT_VAL_TXT      AS    EML
<!-- END   2018/09/25 [QC#28443, MOD] -->
            ,CASE WHEN SMM.ISTL_LOC_OVRD_FLG = 'Y'
                  THEN
                    TRIM(SMM.FIRST_LINE_ADDR
                        || ' ' || SMM.SCD_LINE_ADDR
                        || ' ' || SMM.THIRD_LINE_ADDR
                        || ' ' || SMM.FRTH_LINE_ADDR
                        || ' ' || SMM.CTY_ADDR
                        || ' ' || SMM.ST_CD
                        || ' ' || SMM.POST_CD)
                  ELSE
                    TRIM(STC.FIRST_LINE_ADDR
                        || ' ' || STC.SCD_LINE_ADDR
                        || ' ' || STC.THIRD_LINE_ADDR
                        || ' ' || STC.FRTH_LINE_ADDR
                        || ' ' || STC.CTY_ADDR
                        || ' ' || STC.ST_CD
                        || ' ' || STC.POST_CD)
             END                          AS    MACH_LOC
            ,ICD.IWR_COND_NM              AS    IWR_COND_NM
            ,ICD.IWR_COND_DESC_TXT        AS    IWR_COND_DESC_TXT
            ,MDS.IWR_ENBL_FLG             AS    IWR_ENBL_FLG
            ,SA.SCHD_AGMT_NUM             AS    SCHD_AGMT_NUM
<!-- START 2019/04/09 K.Kitachi [QC#31089, ADD] -->
            ,SM.SVC_MEMO_PK               AS    SVC_MEMO_PK
            ,SM.SVC_CMNT_TXT              AS    SVC_CMNT_TXT
            ,SM.EZUPTIME                  AS    EZUPTIME_SM
            ,SM.EZUPTIMEZONE              AS    EZUPTIMEZONE_SM
<!-- END 2019/04/09 K.Kitachi [QC#31089, ADD] -->
        FROM
             SVC_MACH_MSTR        SMM
            ,BILL_TO_CUST         BTC
            ,SHIP_TO_CUST         STC
            ,SVC_CONFIG_MSTR      SCM
            ,MDL_NM               MDN
            ,IWR_COND             ICD
            ,MDSE                 MDS
            ,SCHD_AGMT            SA
            ,(
              SELECT
                  SVC_MACH_MSTR_PK
                 ,CTAC_NM
                 ,EML_FLG
                 ,DS_CTAC_PNT_VAL_TXT
                 ,DS_CTAC_PSN_EXTN_NUM
              FROM
                  (
                  SELECT
                       CP1.SVC_MACH_MSTR_PK         AS    SVC_MACH_MSTR_PK
                      ,TRIM(CTP.CTAC_PSN_FIRST_NM
                          || ' ' || CTP.CTAC_PSN_LAST_NM)
                                                    AS    CTAC_NM
                      ,CTT.EML_FLG                  AS    EML_FLG
                      ,DCP.DS_CTAC_PNT_VAL_TXT      AS    DS_CTAC_PNT_VAL_TXT
                      ,DCP.DS_CTAC_PSN_EXTN_NUM     AS    DS_CTAC_PSN_EXTN_NUM
                  FROM
                       SVC_MACH_CTAC_PSN    CP1
                      ,DS_CTAC_PNT          DCP
                      ,CTAC_PSN             CTP
                      ,DS_CTAC_PNT_TP       CTT
                  WHERE
                          CP1.SVC_MACH_MSTR_PK    = #svcMachMstrPk#
                      AND CP1.GLBL_CMPY_CD        = #glblCmpyCd#
                      AND CP1.SVC_CTAC_TP_CD      = #svcCtacTp1#
                      AND CP1.EZCANCELFLAG        = '0'
                      AND CP1.DS_CTAC_PNT_PK      = DCP.DS_CTAC_PNT_PK
                      AND CP1.GLBL_CMPY_CD        = DCP.GLBL_CMPY_CD
                      AND DCP.EZCANCELFLAG        = '0'
                      AND DCP.CTAC_PSN_PK         = CTP.CTAC_PSN_PK
                      AND DCP.GLBL_CMPY_CD        = CTP.GLBL_CMPY_CD
                      AND CTP.EZCANCELFLAG        = '0'
                      AND DCP.DS_CTAC_PNT_TP_CD   = CTT.DS_CTAC_PNT_TP_CD
                      AND DCP.GLBL_CMPY_CD        = CTT.GLBL_CMPY_CD
<!-- START 2018/09/25 [QC#28443, ADD] -->
                      AND CTT.EML_FLG             = 'N'
<!-- END   2018/09/25 [QC#28443, ADD] -->
                      AND CTT.EZCANCELFLAG        = '0'
                  ORDER BY
                  <!-- START 2018/09/27 [QC#27788, ADD] -->
                       CP1.DS_PRIM_LOC_FLG DESC
                  <!-- END  2018/09/27 [QC#27788, ADD] -->
                      ,DCP.DS_CTAC_PNT_ACTV_FLG DESC
                      ,CTP.CTAC_PSN_PK
                  )
              WHERE
                      ROWNUM                  = 1
             )                    CPP
            ,(
              SELECT
                  SVC_MACH_MSTR_PK
                 ,CTAC_NM
<!-- START 2018/09/25 [QC#28443, ADD] -->
                 ,EML_FLG
                 ,DS_CTAC_PNT_VAL_TXT
                 ,DS_CTAC_PSN_EXTN_NUM
              FROM
                  (
                  SELECT
                       CP1.SVC_MACH_MSTR_PK         AS    SVC_MACH_MSTR_PK
                      ,TRIM(CTP.CTAC_PSN_FIRST_NM
                          || ' ' || CTP.CTAC_PSN_LAST_NM)
                                                    AS    CTAC_NM
                      ,CTT.EML_FLG                  AS    EML_FLG
                      ,DCP.DS_CTAC_PNT_VAL_TXT      AS    DS_CTAC_PNT_VAL_TXT
                      ,DCP.DS_CTAC_PSN_EXTN_NUM     AS    DS_CTAC_PSN_EXTN_NUM
                  FROM
                       SVC_MACH_CTAC_PSN    CP1
                      ,DS_CTAC_PNT          DCP
                      ,CTAC_PSN             CTP
                      ,DS_CTAC_PNT_TP       CTT
                  WHERE
                          CP1.SVC_MACH_MSTR_PK    = #svcMachMstrPk#
                      AND CP1.GLBL_CMPY_CD        = #glblCmpyCd#
                      AND CP1.SVC_CTAC_TP_CD      = #svcCtacTp1#
                      AND CP1.EZCANCELFLAG        = '0'
                      AND CP1.DS_CTAC_PNT_PK      = DCP.DS_CTAC_PNT_PK
                      AND CP1.GLBL_CMPY_CD        = DCP.GLBL_CMPY_CD
                      AND DCP.EZCANCELFLAG        = '0'
                      AND DCP.CTAC_PSN_PK         = CTP.CTAC_PSN_PK
                      AND DCP.GLBL_CMPY_CD        = CTP.GLBL_CMPY_CD
                      AND CTP.EZCANCELFLAG        = '0'
                      AND DCP.DS_CTAC_PNT_TP_CD   = CTT.DS_CTAC_PNT_TP_CD
                      AND DCP.GLBL_CMPY_CD        = CTT.GLBL_CMPY_CD
                      AND CTT.EML_FLG             = 'Y'
                      AND CTT.EZCANCELFLAG        = '0'
                  ORDER BY
                  <!-- START 2018/09/27 [QC#27788, ADD] -->
                       CP1.DS_PRIM_LOC_FLG DESC
                  <!-- END  2018/09/27 [QC#27788, ADD] -->
                      ,DCP.DS_CTAC_PNT_ACTV_FLG DESC
                      ,CTP.CTAC_PSN_PK
                  )
              WHERE
                      ROWNUM                  = 1
             )                    CPE
            ,(
              SELECT
                  SVC_MACH_MSTR_PK
                 ,CTAC_NM
<!-- END   2018/09/25 [QC#28443, ADD] -->
                 ,FAX_NUM
              FROM
                  (
                  SELECT
                       CP1.SVC_MACH_MSTR_PK         AS    SVC_MACH_MSTR_PK
                      ,TRIM(CTP.CTAC_PSN_FIRST_NM
                          || ' ' || CTP.CTAC_PSN_LAST_NM)
                                                    AS    CTAC_NM
                      ,TRIM(DCP.DS_CTAC_PNT_VAL_TXT
                          || ' ' || DCP.DS_CTAC_PSN_EXTN_NUM)
                                                    AS    FAX_NUM
                  FROM
                       SVC_MACH_CTAC_PSN    CP1
                      ,DS_CTAC_PNT          DCP
                      ,CTAC_PSN             CTP
                      ,DS_CTAC_PNT_TP       CTT
                  WHERE
                          CP1.SVC_MACH_MSTR_PK    = #svcMachMstrPk#
                      AND CP1.GLBL_CMPY_CD        = #glblCmpyCd#
                      AND CP1.SVC_CTAC_TP_CD      = #svcCtacTp2#
                      AND CP1.EZCANCELFLAG        = '0'
                      AND CP1.DS_CTAC_PNT_PK      = DCP.DS_CTAC_PNT_PK
                      AND CP1.GLBL_CMPY_CD        = DCP.GLBL_CMPY_CD
                      AND DCP.EZCANCELFLAG        = '0'
                      AND DCP.CTAC_PSN_PK         = CTP.CTAC_PSN_PK
                      AND DCP.GLBL_CMPY_CD        = CTP.GLBL_CMPY_CD
                      AND CTP.EZCANCELFLAG        = '0'
                      AND DCP.DS_CTAC_PNT_TP_CD   = CTT.DS_CTAC_PNT_TP_CD
                      AND DCP.GLBL_CMPY_CD        = CTT.GLBL_CMPY_CD
                      AND CTT.EZCANCELFLAG        = '0'
                  ORDER BY
                  <!-- START 2018/09/27 [QC#27788, ADD] -->
                       CP1.DS_PRIM_LOC_FLG DESC
                  <!-- END  2018/09/27 [QC#27788, ADD] -->
                      ,DCP.DS_CTAC_PNT_ACTV_FLG DESC
                      ,CTP.CTAC_PSN_PK
                  )
              WHERE
                      ROWNUM                  = 1
             )                    CPF
<!-- START 2016/11/24 [QC#14992, MOD] -->
            ,(
              SELECT
                   SVC_MACH_MSTR_PK                 AS    SVC_MACH_MSTR_PK
                  ,SVC_CUST_ATTN_TXT                AS    SVC_CUST_ATTN_TXT
                  ,CUST_TEL_NUM                     AS    CUST_TEL_NUM
                  ,CUST_TEL_EXTN_NUM                AS    CUST_TEL_EXTN_NUM
              FROM
                   SVC_TASK             STK
              WHERE
                      STK.SVC_MACH_MSTR_PK    = #svcMachMstrPk#
                  AND STK.GLBL_CMPY_CD        = #glblCmpyCd#
                  AND STK.EZCANCELFLAG        = '0'
                  AND STK.SVC_TASK_RCV_DT     = (SELECT MAX(STK.SVC_TASK_RCV_DT) 
                                                  FROM    SVC_TASK STK1 
                                                  WHERE   STK1.SVC_MACH_MSTR_PK    = #svcMachMstrPk#
                                                  AND     STK1.GLBL_CMPY_CD        = #glblCmpyCd#
                                                  AND     STK1.EZCANCELFLAG        = '0')
                  AND ROWNUM                  = 1
             )                    STK
<!-- END   2016/11/24 [QC#14992, MOD] -->
<!-- START 2019/04/09 K.Kitachi [QC#31089, ADD] -->
            ,(
                SELECT
                     A.SVC_MACH_MSTR_PK
                    ,A.SVC_MEMO_PK
                    ,A.SVC_CMNT_TXT
                    ,A.EZUPTIME
                    ,A.EZUPTIMEZONE
                FROM
                    SVC_MEMO A
                WHERE
                        A.GLBL_CMPY_CD     = #glblCmpyCd#
                    AND A.SVC_MACH_MSTR_PK = #svcMachMstrPk#
                    AND A.SVC_MEMO_CATG_CD = #svcMemoCatgCd#
                    AND A.EZCANCELFLAG     = '0'
                    AND ROWNUM             = 1
             )                    SM
<!-- END 2019/04/09 K.Kitachi [QC#31089, ADD] -->
        WHERE
                SMM.SVC_MACH_MSTR_PK    = #svcMachMstrPk#
            AND SMM.GLBL_CMPY_CD        = #glblCmpyCd#
            AND SMM.EZCANCELFLAG        = '0'
<!-- START 2016/11/24 [QC#14992, MOD] -->
            AND SMM.BILL_TO_LOC_NUM     = BTC.BILL_TO_CUST_CD(+)
<!-- END   2016/11/24 [QC#14992, MOD] -->
            AND SMM.GLBL_CMPY_CD        = BTC.GLBL_CMPY_CD(+)
            AND BTC.EZCANCELFLAG(+)     = '0'
            AND SMM.CUR_LOC_NUM         = STC.SHIP_TO_CUST_CD(+)
            AND SMM.GLBL_CMPY_CD        = STC.GLBL_CMPY_CD(+)
            AND STC.EZCANCELFLAG(+)     = '0'
            AND SMM.SVC_CONFIG_MSTR_PK  = SCM.SVC_CONFIG_MSTR_PK(+)
            AND SMM.GLBL_CMPY_CD        = SCM.GLBL_CMPY_CD(+)
            AND SCM.EZCANCELFLAG(+)     = '0'
            AND SCM.MDL_ID              = MDN.T_MDL_ID(+)
            AND SCM.GLBL_CMPY_CD        = MDN.T_GLBL_CMPY_CD(+)
            AND MDN.EZCANCELFLAG(+)     = '0'
            AND SMM.SVC_MACH_MSTR_PK    = CPP.SVC_MACH_MSTR_PK(+)
<!-- START 2018/09/25 [QC#28443, ADD] -->
            AND SMM.SVC_MACH_MSTR_PK    = CPE.SVC_MACH_MSTR_PK(+)
<!-- END   2018/09/25 [QC#28443, ADD] -->
            AND SMM.SVC_MACH_MSTR_PK    = CPF.SVC_MACH_MSTR_PK(+)
            AND SMM.SVC_MACH_MSTR_PK    = STK.SVC_MACH_MSTR_PK(+)
            AND SMM.IWR_COND_CD         = ICD.IWR_COND_CD(+)
            AND SMM.GLBL_CMPY_CD        = ICD.GLBL_CMPY_CD(+)
            AND ICD.EZCANCELFLAG(+)     = '0'
            AND SMM.GLBL_CMPY_CD        = MDS.GLBL_CMPY_CD(+)
            AND SMM.MDSE_CD             = MDS.MDSE_CD(+)
            AND MDS.EZCANCELFLAG(+)     = '0'
<!-- START 2016/11/24 [QC#14992, MOD] -->
            AND SMM.GLBL_CMPY_CD        = SA.GLBL_CMPY_CD(+)
            AND SA.EZCANCELFLAG(+)      = '0'
            AND SMM.SVC_CONFIG_MSTR_PK  = SA.SVC_CONFIG_MSTR_PK(+)
            AND SMM.SER_NUM             = SA.SER_NUM(+)
<!-- END   2016/11/24 [QC#14992, MOD] -->
<!-- START 2019/04/09 K.Kitachi [QC#31089, ADD] -->
            AND SMM.SVC_MACH_MSTR_PK    = SM.SVC_MACH_MSTR_PK(+)
<!-- END 2019/04/09 K.Kitachi [QC#31089, ADD] -->
<!-- START 2023/11/24 R.Jin [QC#62422, ADD] -->
        ORDER BY
            CASE WHEN SA.SCHD_AGMT_STS_CD = #schdAgmtStsActive# THEN 0 WHEN SA.SCHD_AGMT_STS_CD = #schdAgmtStsCancel# THEN (SELECT max(SCHD_AGMT_STS_SORT_NUM)+1 FROM SCHD_AGMT_STS C) ELSE (SELECT SCHD_AGMT_STS_SORT_NUM FROM SCHD_AGMT_STS C WHERE SA.SCHD_AGMT_STS_CD = C.SCHD_AGMT_STS_CD AND SA.GLBL_CMPY_CD = C.GLBL_CMPY_CD) END
            ,SA.SCHD_AGMT_VLD_THRU_DT DESC
            ,SA.SCHD_AGMT_NUM DESC
<!-- END 2023/11/24 R.Jin [QC#62422, ADD] -->
</statement>
<statement id="getIwrRgtnCond" parameterClass="Map" resultClass="Map">
        SELECT
             SUBSTR(IRC.IWR_LAST_COMM_TS, 1, 8)          IWR_LAST_COMM_DT
            ,IRC.IWR_RGTN_DT
            ,IRC.IWR_DEINS_DT
        FROM
             IWR_RGTN_COND         IRC
      WHERE
              IRC.SVC_MACH_MSTR_PK    = #svcMachMstrPk#
          AND IRC.GLBL_CMPY_CD        = #glblCmpyCd#
          AND IRC.EZCANCELFLAG        = '0'
      ORDER BY 
              IRC.IWR_RGTN_DT DESC NULLS LAST
</statement>
<statement id="getReadMtrCnt" parameterClass="Map" resultClass="Map">
        SELECT
            MLB.MTR_LB_DESC_TXT
           ,IMRDW.READ_MTR_CNT
           ,IMRDW.MTR_CNTR_ID
        FROM
            SVC_MACH_MSTR                SMM
           ,SVC_PHYS_MTR                 PHS
           ,MTR_LB                       MLB
           ,IWR_MTR_READ_DTL_WRK         IMRDW
        WHERE
            SMM.GLBL_CMPY_CD           = #glblCmpyCd#
            AND SMM.SVC_MACH_MSTR_PK   = #svcMachMstrPk#
            AND SMM.EZCANCELFLAG       = '0'
            AND PHS.GLBL_CMPY_CD       = #glblCmpyCd#
            AND SMM.SVC_MACH_MSTR_PK   = PHS.SVC_MACH_MSTR_PK
            AND PHS.EZCANCELFLAG       = '0'
            AND MLB.GLBL_CMPY_CD       = #glblCmpyCd#
            AND MLB.MTR_LB_CD          = PHS.MDL_MTR_LB_CD
            AND MLB.EZCANCELFLAG       = '0'
            AND IMRDW.GLBL_CMPY_CD     = #glblCmpyCd#
            AND SMM.SER_NUM            = IMRDW.SER_NUM
            AND MLB.MTR_CNTR_ID        = IMRDW.MTR_CNTR_ID
            AND IMRDW.MTR_RCV_DT_TM_TS = (SELECT
                                              MAX(IWR.MTR_RCV_DT_TM_TS)
                                          FROM
                                              IWR_MTR_READ_DTL_WRK IWR
                                          WHERE
                                              IWR.GLBL_CMPY_CD     = #glblCmpyCd#
                                              AND MLB.MTR_CNTR_ID  = IWR.MTR_CNTR_ID 
                                              AND SMM.SER_NUM      = IWR.SER_NUM
                                              AND IWR.EZCANCELFLAG = '0')
            AND IMRDW.EZCANCELFLAG    = '0'
</statement>
<statement id="getSubContr" parameterClass="Map" resultClass="Map">
        SELECT
             DSC.DS_SUB_CONTR_PK
            ,PVD.PRNT_VND_NM
<!-- START 2018/06/11 U.Kim [QC#22480, ADD] -->
            ,DSC.SPLY_INCL_FLG
            ,VND.LOC_NUM
<!-- END 2018/06/11 U.Kim [QC#22480, ADD] -->
        FROM
             DS_SUB_CONTR         DSC
            ,VND                  VND
            ,VND_TP_RELN          VTR
            ,PRNT_VND             PVD
      WHERE
              DSC.DS_CONTR_DTL_PK     = #dsContrDtlPk#
          AND DSC.GLBL_CMPY_CD        = #glblCmpyCd#
          AND DSC.CONTR_TRMN_FLG      = 'N'
          AND DSC.EFF_FROM_DT     &lt;= #slsDt#
          AND DSC.EFF_THRU_DT     &gt;= #slsDt#
          AND DSC.EZCANCELFLAG        = '0'
          AND DSC.VND_CD              = VND.VND_CD
          AND DSC.GLBL_CMPY_CD        = VND.GLBL_CMPY_CD
          AND VND.EZCANCELFLAG        = '0'
          AND VND.VND_CD              = VTR.VND_CD
          AND VND.GLBL_CMPY_CD        = VTR.GLBL_CMPY_CD
          AND VTR.EZCANCELFLAG        = '0'
          AND VND.PRNT_VND_PK         = PVD.PRNT_VND_PK
          AND VND.GLBL_CMPY_CD        = PVD.GLBL_CMPY_CD
          AND PVD.EZCANCELFLAG        = '0'
</statement>
<statement id="getDsContrBllgSchdInv" parameterClass="Map" resultClass="Map">
        SELECT
             MIN(CBS.BLLG_SCHD_THRU_DT)  MIN_BLLG_SCHD_THRU_DT
        FROM
             DS_CONTR_BLLG_SCHD   CBS
      WHERE
              CBS.DS_CONTR_DTL_PK     = #dsContrDtlPk#
          AND CBS.GLBL_CMPY_CD        = #glblCmpyCd#
          AND CBS.USG_CHRG_FLG        = 'Y'
          AND CBS.MTR_ENTRY_CPLT_FLG  = 'N'
          AND CBS.INV_TP_CD           = #invTpCd#
          AND CBS.EZCANCELFLAG        = '0'
</statement>
<statement id="getBllgCycle" parameterClass="Map" resultClass="Map">
        SELECT
             CBM.BLLG_MTR_BLLG_CYCLE_CD
            ,BCU.BLLG_CYCLE_UOM_NM
        FROM
             DS_CONTR_BLLG_MTR    CBM
            ,BLLG_CYCLE_UOM       BCU
      WHERE
              CBM.DS_CONTR_DTL_PK            = #dsContrDtlPk#
          AND CBM.GLBL_CMPY_CD               = #glblCmpyCd#
          AND CBM.EZCANCELFLAG               = '0'
          AND CBM.BLLG_MTR_BLLG_CYCLE_CD     = BCU.BLLG_CYCLE_UOM_CD
          AND CBM.GLBL_CMPY_CD               = BCU.GLBL_CMPY_CD
          AND BCU.EZCANCELFLAG               = '0'
      ORDER BY
             BCU.BLLG_CYCLE_UOM_SORT_NUM
</statement>
<!-- START 2018/03/08 K.Kojima [QC#24507,DEL] -->
<!-- <statement id="existStaplesIncl" parameterClass="Map" resultClass="BigDecimal"> -->
<!--         SELECT -->
<!--              COUNT(*)          AS CNT -->
<!--         FROM -->
<!--              SVC_TERM_COND        STC -->
<!--             ,SVC_TERM_COND_ATTRB  STA -->
<!--       WHERE -->
<!--               STC.DS_CONTR_DTL_PK            = #dsContrDtlPk# -->
<!--           AND STC.GLBL_CMPY_CD               = #glblCmpyCd# -->
<!--           AND STC.EZCANCELFLAG               = '0' -->
<!--           AND STC.SVC_TERM_COND_ATTRB_PK     = STA.SVC_TERM_COND_ATTRB_PK -->
<!--           AND STC.GLBL_CMPY_CD               = STA.GLBL_CMPY_CD -->
<!--           AND STA.SVC_TERM_COND_ATTRB_NM     = #svcTermCondAttrbNm# -->
<!--           AND STA.EZCANCELFLAG               = '0' -->
<!-- </statement> -->
<!-- END 2018/03/08 K.Kojima [QC#24507,DEL] -->
<statement id="getSvcMachMstrBySerNum" parameterClass="Map" resultClass="BigDecimal">
SELECT
	SMM.SVC_MACH_MSTR_PK
FROM
	SVC_MACH_MSTR SMM
WHERE
	SMM.SER_NUM			=	#serNum#
AND	SMM.MDSE_CD			=	#mdseCd#
AND	SMM.GLBL_CMPY_CD	=	#glblCmpyCd#
AND	SMM.EZCANCELFLAG	=	'0'
</statement>

<statement id="getLastUgwSvcPhysMtrRead" parameterClass="Map" resultClass="Map">
<!-- TODO: UGW -->
WITH
	A	AS (
	SELECT
		PMR.*
	,	ROW_NUMBER() OVER (
			PARTITION BY
				PMR.SVC_PHYS_MTR_PK
			ORDER BY
				PMR.MTR_READ_DT					DESC
			,	PMR.SVC_PHYS_MTR_READ_GRP_SQ	DESC
		)	AS	ROW_NUM
	FROM
		SVC_PHYS_MTR_READ	PMR
	WHERE
		PMR.SVC_MACH_MSTR_PK	=	#svcMachMstrPk#
	AND	PMR.DS_MTR_READ_TP_CD	=	#dsMtrReadTpCd#
	AND	PMR.VLD_MTR_FLG			=	'Y'
	AND	PMR.GLBL_CMPY_CD		=	#glblCmpyCd#
	AND	PMR.EZCANCELFLAG		=	'0'
)
,	B	AS (
	SELECT
		A.*
	FROM
		A
	WHERE
		A.ROW_NUM				=	1
)
SELECT
	MLB.MTR_LB_DESC_TXT
,   PMR.READ_MTR_CNT
,	MLB.MTR_LB_SORT_NUM
,	MLB.MTR_CNTR_ID
FROM
	SVC_PHYS_MTR			SPM
,	MTR_LB					MLB
,	B						PMR
WHERE
	SPM.SVC_MACH_MSTR_PK	=	#svcMachMstrPk#
AND	SPM.GLBL_CMPY_CD		=	#glblCmpyCd#
AND	SPM.EZCANCELFLAG		=	'0'
AND	SPM.SVC_MACH_MSTR_PK	=	PMR.SVC_MACH_MSTR_PK(+)
AND	SPM.SVC_PHYS_MTR_PK		=	PMR.SVC_PHYS_MTR_PK(+)
AND	SPM.GLBL_CMPY_CD		=	PMR.GLBL_CMPY_CD(+)
AND	SPM.EZCANCELFLAG		=	PMR.EZCANCELFLAG(+)
AND	MLB.MTR_LB_CD			=	SPM.MDL_MTR_LB_CD
AND	MLB.GLBL_CMPY_CD		=	SPM.GLBL_CMPY_CD
AND	MLB.EZCANCELFLAG		=	SPM.EZCANCELFLAG
ORDER BY
	MTR_LB_SORT_NUM ASC
</statement>

<statement id="getSvcPhysMtrReadTmpl" parameterClass="Map" resultClass="Map">
WITH
	A	AS (
	SELECT
		PMR.*
	,	ROW_NUMBER() OVER (
			PARTITION BY
				PMR.SVC_PHYS_MTR_PK
			ORDER BY
				PMR.MTR_READ_DT					DESC
			,	PMR.SVC_PHYS_MTR_READ_GRP_SQ	DESC
		)	AS	ROW_NUM
	FROM
		SVC_PHYS_MTR_READ		PMR
	WHERE
		PMR.SVC_MACH_MSTR_PK	=	#svcMachMstrPk#
<!-- mod start 2017/03/21 CSA QC#17929 -->
<!--	AND	PMR.DS_MTR_READ_TP_CD	=	#dsMtrReadTpCd# -->
<!-- mod end 2017/03/21 CSA QC#17929 -->
	AND	PMR.VLD_MTR_FLG			=	'Y'
	AND	PMR.GLBL_CMPY_CD		=	#glblCmpyCd#
	AND	PMR.EZCANCELFLAG		=	'0'
)
,	B	AS (
	SELECT
		A.*
	FROM
		A
	WHERE
		A.ROW_NUM				=	1
)
<!-- START 2018/05/11 K.Kojima [QC#24817,ADD] -->
,MTR_FMLA_DATA AS (
    SELECT
        *
    FROM
        MTR_FMLA MF
    WHERE
            MF.GLBL_CMPY_CD = #glblCmpyCd#
        AND MF.EZCANCELFLAG = '0'
)
,MTR_FMLA_INFO AS (
    SELECT A.MTR_GRP_PK,A.FMLA_MTR_LB_CD_01 AS FMLA_MTR_LB_CD FROM MTR_FMLA_DATA A WHERE A.FMLA_MTR_LB_CD_01 IS NOT NULL UNION
    SELECT A.MTR_GRP_PK,A.FMLA_MTR_LB_CD_02 AS FMLA_MTR_LB_CD FROM MTR_FMLA_DATA A WHERE A.FMLA_MTR_LB_CD_02 IS NOT NULL UNION
    SELECT A.MTR_GRP_PK,A.FMLA_MTR_LB_CD_03 AS FMLA_MTR_LB_CD FROM MTR_FMLA_DATA A WHERE A.FMLA_MTR_LB_CD_03 IS NOT NULL UNION
    SELECT A.MTR_GRP_PK,A.FMLA_MTR_LB_CD_04 AS FMLA_MTR_LB_CD FROM MTR_FMLA_DATA A WHERE A.FMLA_MTR_LB_CD_04 IS NOT NULL UNION
    SELECT A.MTR_GRP_PK,A.FMLA_MTR_LB_CD_05 AS FMLA_MTR_LB_CD FROM MTR_FMLA_DATA A WHERE A.FMLA_MTR_LB_CD_05 IS NOT NULL UNION
    SELECT A.MTR_GRP_PK,A.FMLA_MTR_LB_CD_06 AS FMLA_MTR_LB_CD FROM MTR_FMLA_DATA A WHERE A.FMLA_MTR_LB_CD_06 IS NOT NULL UNION
    SELECT A.MTR_GRP_PK,A.FMLA_MTR_LB_CD_07 AS FMLA_MTR_LB_CD FROM MTR_FMLA_DATA A WHERE A.FMLA_MTR_LB_CD_07 IS NOT NULL UNION
    SELECT A.MTR_GRP_PK,A.FMLA_MTR_LB_CD_08 AS FMLA_MTR_LB_CD FROM MTR_FMLA_DATA A WHERE A.FMLA_MTR_LB_CD_08 IS NOT NULL UNION
    SELECT A.MTR_GRP_PK,A.FMLA_MTR_LB_CD_09 AS FMLA_MTR_LB_CD FROM MTR_FMLA_DATA A WHERE A.FMLA_MTR_LB_CD_09 IS NOT NULL UNION
    SELECT A.MTR_GRP_PK,A.FMLA_MTR_LB_CD_10 AS FMLA_MTR_LB_CD FROM MTR_FMLA_DATA A WHERE A.FMLA_MTR_LB_CD_10 IS NOT NULL
)
<!-- END 2018/05/11 K.Kojima [QC#24817,ADD] -->
SELECT
	SPM.SVC_PHYS_MTR_PK			AS	SVC_PHYS_MTR_PK
,	SPM.MDL_MTR_ID				AS	MDL_MTR_ID
,	MLB.MTR_LB_CD				AS	MTR_LB_CD
,	MLB.MTR_LB_DESC_TXT			AS	MTR_LB_DESC_TXT
,	#dsMtrReadTpCd#				AS	DS_MTR_READ_TP_CD
,   PMR.READ_MTR_CNT			AS	PREV_MTR_CNT
,	PMR.MTR_ENTRY_CMNT_TXT		AS	MTR_ENTRY_CMNT_TXT
,	MLB.MTR_LB_SORT_NUM			AS	MTR_LB_SORT_NUM
FROM
	SVC_PHYS_MTR				SPM
,	MTR_LB						MLB
,	B							PMR
,	DS_MTR_READ_TP				MRT
WHERE
	SPM.SVC_MACH_MSTR_PK		=	#svcMachMstrPk#
AND	SPM.GLBL_CMPY_CD			=	#glblCmpyCd#
AND	SPM.EZCANCELFLAG			=	'0'
AND	SPM.SVC_MACH_MSTR_PK		=	PMR.SVC_MACH_MSTR_PK(+)
AND	SPM.SVC_PHYS_MTR_PK			=	PMR.SVC_PHYS_MTR_PK(+)
AND	SPM.GLBL_CMPY_CD			=	PMR.GLBL_CMPY_CD(+)
AND	SPM.EZCANCELFLAG			=	PMR.EZCANCELFLAG(+)
AND	MLB.MTR_LB_CD				=	SPM.MDL_MTR_LB_CD
AND	MLB.GLBL_CMPY_CD			=	SPM.GLBL_CMPY_CD
AND	MLB.EZCANCELFLAG			=	SPM.EZCANCELFLAG
AND	PMR.DS_MTR_READ_TP_CD		=	MRT.DS_MTR_READ_TP_CD(+)
AND	PMR.GLBL_CMPY_CD			=	MRT.GLBL_CMPY_CD(+)
AND	PMR.EZCANCELFLAG			=	MRT.EZCANCELFLAG(+)
<!-- START 2017/07/13 K.Kim [QC#17276, ADD] -->
<!-- START 2018/05/10 K.Kojima [QC#24817,DEL] -->
<!-- AND SPM.SVC_PHYS_MTR_PK NOT IN ( -->
<!--     SELECT -->
<!--         SPM2.SVC_PHYS_MTR_PK -->
<!--     FROM -->
<!--         SVC_PHYS_MTR  SPM2 -->
<!--        ,MTR_GRP       MGP2 -->
<!--        ,MTR_LB        MLB2 -->
<!--     WHERE -->
<!--         SPM2.SVC_MACH_MSTR_PK        = #svcMachMstrPk# -->
<!--     AND SPM2.GLBL_CMPY_CD            = #glblCmpyCd# -->
<!--     AND SPM2.EZCANCELFLAG            = '0' -->
<!--     AND SPM2.MTR_GRP_PK              = MGP2.MTR_GRP_PK -->
<!--     AND SPM2.GLBL_CMPY_CD            = MGP2.GLBL_CMPY_CD -->
<!--     AND SPM2.EZCANCELFLAG            = MGP2.EZCANCELFLAG -->
<!--     AND MGP2.COLOR_MTR_AUTO_DRV_FLG  = 'Y' -->
<!--     AND SPM2.MDL_MTR_LB_CD           = MLB2.MTR_LB_CD -->
<!--     AND SPM2.GLBL_CMPY_CD            = MLB2.GLBL_CMPY_CD -->
<!--     AND SPM2.EZCANCELFLAG            = MLB2.EZCANCELFLAG -->
<!--     AND MLB2.COLOR_MTR_FLG           = 'Y' -->
<!-- ) -->
<!-- END 2018/05/10 K.Kojima [QC#24817,DEL] -->
<!-- END 2017/07/13 K.Kim [QC#17276, ADD] -->
<!-- START 2018/05/10 K.Kojima [QC#24817,ADD] -->
AND NOT EXISTS(
    SELECT
        1
    FROM
        MTR_FMLA_DATA MFD
    WHERE
            MFD.MTR_GRP_PK   = SPM.MTR_GRP_PK
        AND MFD.MTR_LB_CD    = SPM.MDL_MTR_LB_CD
)
    <isEqual property="billableReadsFlg" compareValue="Y">
    AND (
        <isNotNull property="targetMtrLbCdList">
        <iterate property="targetMtrLbCdList" var="targetMtrLbCdList[]" open="SPM.MDL_MTR_LB_CD IN (" close=")" conjunction=",">
        #targetMtrLbCdList[]#
        </iterate>
        OR
        </isNotNull>
        EXISTS(
            SELECT
                1
            FROM
                MTR_FMLA_INFO MFI
            WHERE
                    MFI.MTR_GRP_PK     = SPM.MTR_GRP_PK
                AND MFI.FMLA_MTR_LB_CD = SPM.MDL_MTR_LB_CD
        )
    )
    </isEqual>
<!-- END 2018/05/10 K.Kojima [QC#24817,ADD] -->
ORDER BY
	MTR_LB_SORT_NUM ASC
</statement>

<statement id="getSvcPhysMtr" parameterClass="Map" resultClass="Map">
SELECT
	MLB.MTR_LB_CD
,	MLB.MTR_LB_DESC_TXT
FROM
	SVC_PHYS_MTR	SPM
,	MTR_LB			MLB
WHERE
	SPM.SVC_MACH_MSTR_PK	=	#svcMachMstrPk#
AND	SPM.GLBL_CMPY_CD		=	#glblCmpyCd#
AND	SPM.EZCANCELFLAG		=	'0'
AND	MLB.MTR_LB_CD			=	SPM.MDL_MTR_LB_CD
AND	MLB.GLBL_CMPY_CD		=	SPM.GLBL_CMPY_CD
AND	MLB.EZCANCELFLAG		=	SPM.EZCANCELFLAG
ORDER BY
	MLB.MTR_LB_SORT_NUM ASC
</statement>

<statement id="getSvcPhysMtrRead" parameterClass="Map" resultClass="Map">
<!-- START 2018/09/26 [QC#28388,ADD] -->
WITH TARGET_SVC_PHYS_MTR_READ AS (
    SELECT
        *
    FROM
        SVC_PHYS_MTR_READ SPMR
    WHERE
            SPMR.GLBL_CMPY_CD     = #glblCmpyCd#
        AND SPMR.SVC_MACH_MSTR_PK = #svcMachMstrPk#
        AND SPMR.EZCANCELFLAG     = '0'
)
<!-- END 2018/09/26 [QC#28388,ADD] -->
<!-- START 2020/02/07 K.Kitachi [QC#55812, DEL] -->
<!-- START 2018/09/26 [QC#28388,MOD] -->
<!-- WITH -->
<!-- 	A	AS ( -->
<!-- ,A AS ( -->
<!-- END 2018/09/26 [QC#28388,MOD] -->
<!-- 	SELECT -->
<!-- 		PMR.* -->
<!-- 	,	ROW_NUMBER() OVER ( -->
<!-- 			PARTITION BY -->
<!-- 				PMR.SVC_PHYS_MTR_PK -->
<!-- 			ORDER BY -->
<!-- 				PMR.MTR_READ_DT					DESC -->
<!-- 			,	PMR.SVC_PHYS_MTR_READ_GRP_SQ	DESC -->
<!-- 		)	AS	ROW_NUM -->
<!-- 	FROM -->
<!-- START 2018/09/26 [QC#28388,MOD] -->
<!--	SVC_PHYS_MTR_READ		PMR -->
<!--         TARGET_SVC_PHYS_MTR_READ PMR -->
<!-- END 2018/09/26 [QC#28388,MOD] -->
<!-- 	WHERE -->
<!-- 		PMR.SVC_MACH_MSTR_PK	=	#svcMachMstrPk# -->
<!-- 	AND	PMR.GLBL_CMPY_CD		=	#glblCmpyCd# -->
<!-- 	AND	PMR.EZCANCELFLAG		=	'0' -->
<!-- ) -->
<!-- END 2020/02/07 K.Kitachi [QC#55812, DEL] -->
<!-- START 2022/09/20 [QC#60045,ADD] -->
<!-- START 2023/05/09 K.Kitachi [QC#61469, DEL] -->
<!-- ,DEF_WIN_DAYS AS ( -->
<!--     SELECT -->
<!--          A.MTR_READ_WIN_MLY_DAYS_AOT -->
<!--         ,A.MTR_READ_WIN_OTH_DAYS_AOT -->
<!--     FROM -->
<!--         DS_WIN_DAYS A -->
<!--     WHERE -->
<!--             A.GLBL_CMPY_CD             = #glblCmpyCd# -->
<!--         AND A.EZCANCELFLAG             = '0' -->
<!--         AND A.DS_WIN_DAYS_TRGT_PER_TXT = '*' -->
<!--         AND A.SVC_LINE_BIZ_CD          = '*' -->
<!-- ) -->
<!-- END 2023/05/09 K.Kitachi [QC#61469, DEL] -->
<!-- END   2022/09/20 [QC#60045,ADD] -->
SELECT
<!-- START 2016/11/24 [QC#14992, MOD] -->
	 X.*
<!-- START 2018/10/16 [QC#28392-1, DEL] -->
<!-- END 2018/10/16 [QC#28392-1, DEL] -->
FROM
(
	SELECT
		PMR.*
	,	MRT.DS_MTR_READ_TP_DESC_TXT
	,	MLB.MTR_LB_DESC_TXT
	,	CASE
		WHEN PMR.DS_MTR_READ_TP_GRP_CD			=	#dsMtrReadTpGrpCd#
		THEN 'N'
		WHEN EXISTS (
			SELECT
				*
			FROM
<!-- START 2015/12/16 K.Kasai [QC2070, ADD] -->
				SVC_PHYS_MTR					PM1
			,	SVC_PHYS_MTR					PM2
<!-- END 2015/12/16 K.Kasai [QC2070, ADD] -->
			,	CONTR_PHYS_BLLG_MTR_RELN		PBR
			,	DS_CONTR_BLLG_MTR				DBM
			,	DS_CONTR_BLLG_SCHD_SMRY			BSS
			,	DS_CONTR_BLLG_SCHD				CBS
            <!-- START 2018/07/17 K.Kitachi [QC#26764, ADD] -->
            ,   BLLG_CYCLE                      CYC
            ,   DS_CONTR_DTL                    DCD
            ,   DS_CONTR                        DCH
            <!-- START 2022/09/20 [QC#60045,DEL] -->
            <!-- ,   DS_CONTR_INTFC_DEF_RULE         DEF -->
            <!-- END   2022/09/20 [QC#60045,DEL] -->
            <!-- END 2018/07/17 K.Kitachi [QC#26764, ADD] -->
            <!-- START 2022/09/20 [QC#60045,ADD] -->
            ,   DS_WIN_DAYS                     DWD
            <!-- END   2022/09/20 [QC#60045,ADD] -->
            <!-- START 2023/02/09 S.Naya [QC#60045, ADD] -->
            ,   DS_WIN_DAYS                     DWD2
            <!-- END   2023/02/09 S.Naya [QC#60045, ADD] -->
			WHERE
<!-- START 2015/12/16 K.Kasai [QC2070, DEL] -->
<!--			PBR.SVC_PHYS_MTR_PK				=	PMR.SVC_PHYS_MTR_PK -->
<!--		AND	PBR.GLBL_CMPY_CD				=	PMR.GLBL_CMPY_CD -->
<!--		AND	PBR.EZCANCELFLAG				=	PMR.EZCANCELFLAG -->
<!-- END 2015/12/16 K.Kasai [QC2070, DEL] -->
<!-- START 2015/12/16 K.Kasai [QC2070, ADD] -->
				PM1.SVC_PHYS_MTR_PK				=	PMR.SVC_PHYS_MTR_PK
			AND	PM1.GLBL_CMPY_CD				=	PMR.GLBL_CMPY_CD
			AND	PM1.EZCANCELFLAG				=	PMR.EZCANCELFLAG
			AND PM1.SVC_MACH_MSTR_PK			=	PM2.SVC_MACH_MSTR_PK
			AND	PM1.GLBL_CMPY_CD				=	PM2.GLBL_CMPY_CD
			AND	PM1.EZCANCELFLAG				=	PM2.EZCANCELFLAG
			AND PM2.SVC_PHYS_MTR_PK				=	PBR.SVC_PHYS_MTR_PK
			AND	PM2.GLBL_CMPY_CD				=	PBR.GLBL_CMPY_CD
			AND	PM2.EZCANCELFLAG				=	PBR.EZCANCELFLAG
<!-- END 2015/12/16 K.Kasai [QC2070, ADD] -->
			AND	DBM.DS_CONTR_BLLG_MTR_PK		=	PBR.DS_CONTR_BLLG_MTR_PK
			AND	DBM.GLBL_CMPY_CD				=	PBR.GLBL_CMPY_CD
			AND	DBM.EZCANCELFLAG				=	PBR.EZCANCELFLAG
			AND	BSS.DS_CONTR_BLLG_MTR_PK		=	DBM.DS_CONTR_BLLG_MTR_PK
			AND	BSS.GLBL_CMPY_CD				=	DBM.GLBL_CMPY_CD
			AND	BSS.EZCANCELFLAG				=	DBM.EZCANCELFLAG
			AND	CBS.DS_CONTR_BLLG_SCHD_SMRY_PK	=	BSS.DS_CONTR_BLLG_SCHD_SMRY_PK
			AND	CBS.USG_CHRG_FLG				=	'Y'
			AND	CBS.MTR_ENTRY_CPLT_FLG			=	'N'
			AND	CBS.GLBL_CMPY_CD				=	BSS.GLBL_CMPY_CD
			AND	CBS.EZCANCELFLAG				=	BSS.EZCANCELFLAG
            <!-- START 2018/07/17 K.Kitachi [QC#26764, MOD] -->
            AND DBM.GLBL_CMPY_CD                =   CYC.GLBL_CMPY_CD
            AND DBM.BLLG_MTR_BLLG_CYCLE_CD      =   CYC.BLLG_CYCLE_CD
            AND CYC.EZCANCELFLAG                =   '0'
            AND DBM.GLBL_CMPY_CD                =   DCD.GLBL_CMPY_CD
            AND DBM.DS_CONTR_DTL_PK             =   DCD.DS_CONTR_DTL_PK
            AND DCD.EZCANCELFLAG                =   '0'
            AND DCD.GLBL_CMPY_CD                =   DCH.GLBL_CMPY_CD
            AND DCD.DS_CONTR_PK                 =   DCH.DS_CONTR_PK
            <!-- START 2024/04/01 T.Fukuta [QC#63548,ADD] -->
            AND (DCD.MAN_TRMN_TP_CD IS NULL OR DCD.MAN_TRMN_TP_CD &lt;&gt; #manTrmnTpCd#)
            <!-- END 2024/04/01 T.Fukuta [QC#63548,ADD] -->
            AND DCH.EZCANCELFLAG                =   '0'
            <!-- START 2022/09/20 [QC#60045,DEL] -->
            <!-- AND DCH.GLBL_CMPY_CD                =   DEF.GLBL_CMPY_CD          (+) -->
            <!-- AND DCH.DS_CONTR_SRC_TP_CD          =   DEF.CONTR_INTFC_SRC_TP_CD (+) -->
            <!-- AND DCH.DS_CONTR_CLS_CD             =   DEF.DS_CONTR_CLS_CD       (+) -->
            <!-- AND DCH.SVC_LINE_BIZ_CD             =   DEF.SVC_LINE_BIZ_CD       (+) -->
            <!-- AND DEF.EZCANCELFLAG        (+)     =   '0' -->
            <!-- AND DEF.EFF_FROM_DT         (+) &lt;=   #slsDt# -->
            <!-- AND DEF.ENBL_FLG            (+)     =   'Y' -->
            <!-- END   2022/09/20 [QC#60045,DEL] -->
			<!-- AND PMR.MTR_READ_DT 				BETWEEN CBS.BLLG_SCHD_FROM_DT AND CBS.BLLG_SCHD_THRU_DT -->
            <!-- START 2022/09/20 [QC#60045,MOD] -->
            <!-- AND PMR.MTR_READ_DT                 BETWEEN TO_CHAR(TO_DATE(CBS.BLLG_SCHD_THRU_DT, #dateFormat#) - NVL(DECODE(CYC.BLLG_CYCLE_UOM_CD, #months#, DEF.MTR_READ_WIN_MLY_DAYS_AOT, DEF.MTR_READ_WIN_OTH_DAYS_AOT) - 1, #defBefDays#), #dateFormat#) AND CBS.BLLG_SCHD_THRU_DT -->
            AND DCH.GLBL_CMPY_CD                    = DWD.GLBL_CMPY_CD(+)
            AND DWD.EZCANCELFLAG(+)                 = '0'
            AND SUBSTR(CBS.BLLG_SCHD_THRU_DT, 0, 6) = DWD.DS_WIN_DAYS_TRGT_PER_TXT(+)
            AND DCH.SVC_LINE_BIZ_CD                 = DWD.SVC_LINE_BIZ_CD(+)
            <!-- START 2023/02/09 S.Naya [QC#60045, ADD] -->
            AND DCH.GLBL_CMPY_CD                    = DWD2.GLBL_CMPY_CD(+)
            AND DWD2.EZCANCELFLAG(+)                = '0'
            AND SUBSTR(CBS.BLLG_SCHD_THRU_DT, 0, 6) = DWD2.DS_WIN_DAYS_TRGT_PER_TXT(+)
            AND DWD.SVC_LINE_BIZ_CD(+)              = '*'
            <!-- END   2023/02/09 S.Naya [QC#60045, ADD] -->
            <!-- START 2023/02/09 S.Naya [QC#60045, MOD] -->
            <!-- AND PMR.MTR_READ_DT                     BETWEEN TO_CHAR(TO_DATE(CBS.BLLG_SCHD_THRU_DT, #dateFormat#) - (DECODE(CYC.BLLG_CYCLE_UOM_CD, #months#, COALESCE(DWD.MTR_READ_WIN_MLY_DAYS_AOT, (SELECT MTR_READ_WIN_MLY_DAYS_AOT FROM DEF_WIN_DAYS), #defBefDays#), COALESCE(DWD.MTR_READ_WIN_OTH_DAYS_AOT, (SELECT MTR_READ_WIN_OTH_DAYS_AOT FROM DEF_WIN_DAYS), #defBefDays#)) - 1), #dateFormat#) AND CBS.BLLG_SCHD_THRU_DT -->
            <!-- START 2023/05/09 K.Kitachi [QC#61469, MOD] -->
            <!-- AND PMR.MTR_READ_DT                     BETWEEN TO_CHAR(TO_DATE(CBS.BLLG_SCHD_THRU_DT, #dateFormat#) - (DECODE(CYC.BLLG_CYCLE_UOM_CD, #months#, COALESCE(DWD.MTR_READ_WIN_MLY_DAYS_AOT, DWD2.MTR_READ_WIN_MLY_DAYS_AOT, (SELECT MTR_READ_WIN_MLY_DAYS_AOT FROM DEF_WIN_DAYS), #defBefDays#), COALESCE(DWD.MTR_READ_WIN_OTH_DAYS_AOT, DWD2.MTR_READ_WIN_OTH_DAYS_AOT, (SELECT MTR_READ_WIN_OTH_DAYS_AOT FROM DEF_WIN_DAYS), #defBefDays#)) - 1), #dateFormat#) AND CBS.BLLG_SCHD_THRU_DT -->
            AND PMR.MTR_READ_DT                     BETWEEN TO_CHAR(TO_DATE(CBS.BLLG_SCHD_THRU_DT, #dateFormat#) - (DECODE(CYC.BLLG_CYCLE_UOM_CD, #months#, COALESCE(DWD.MTR_READ_WIN_MLY_DAYS_AOT, DWD2.MTR_READ_WIN_MLY_DAYS_AOT, #mtrReadWinMlyDaysAot#, #defBefDays#), COALESCE(DWD.MTR_READ_WIN_OTH_DAYS_AOT, DWD2.MTR_READ_WIN_OTH_DAYS_AOT, #mtrReadWinOthDaysAot#, #defBefDays#)) - 1), #dateFormat#) AND CBS.BLLG_SCHD_THRU_DT
            <!-- END 2023/05/09 K.Kitachi [QC#61469, MOD] -->
            <!-- END   2023/02/09 S.Naya [QC#60045, MOD] -->
            <!-- END   2022/09/20 [QC#60045,MOD] -->
            <!-- END 2018/07/17 K.Kitachi [QC#26764, MOD] -->
			AND NOT EXISTS (
				SELECT
					*
				FROM
<!-- START 2018/09/26 [QC#28388,MOD] -->
<!--				SVC_PHYS_MTR_READ			MR2 -->
                    TARGET_SVC_PHYS_MTR_READ    MR2
<!-- END 2018/09/26 [QC#28388,MOD] -->
				,	DS_MTR_READ_TP				RT2
				WHERE
					MR2.SVC_PHYS_MTR_PK			=	PMR.SVC_PHYS_MTR_PK
				AND MR2.GLBL_CMPY_CD			=	PMR.GLBL_CMPY_CD
				AND	MR2.EZCANCELFLAG			=	PMR.EZCANCELFLAG
				AND	RT2.DS_MTR_READ_TP_CD		=	MR2.DS_MTR_READ_TP_CD
				AND	MR2.DS_MTR_READ_TP_GRP_CD	=	#dsMtrReadTpGrpCd#
<!-- add start 2017/09/07 QC#15134 -->
				AND	MR2.VLD_MTR_FLG             =   'Y'
<!-- add end 2017/09/07 QC#15134 -->
				AND	RT2.GLBL_CMPY_CD			=	MR2.GLBL_CMPY_CD
				AND	RT2.EZCANCELFLAG			=	MR2.EZCANCELFLAG
                <!-- START 2018/07/17 K.Kitachi [QC#26764, MOD] -->
				<!-- AND	MR2.MTR_READ_DT 			BETWEEN CBS.BLLG_SCHD_FROM_DT AND CBS.BLLG_SCHD_THRU_DT -->
                <!-- START 2022/09/20 [QC#60045,MOD] -->
                <!-- AND MR2.MTR_READ_DT             BETWEEN TO_CHAR(TO_DATE(CBS.BLLG_SCHD_THRU_DT, #dateFormat#) - NVL(DECODE(CYC.BLLG_CYCLE_UOM_CD, #months#, DEF.MTR_READ_WIN_MLY_DAYS_AOT, DEF.MTR_READ_WIN_OTH_DAYS_AOT) - 1, #defBefDays#), #dateFormat#) AND CBS.BLLG_SCHD_THRU_DT -->
                <!-- START 2023/02/09 S.Naya [QC#60045, MOD] -->
                <!-- AND MR2.MTR_READ_DT             BETWEEN TO_CHAR(TO_DATE(CBS.BLLG_SCHD_THRU_DT, #dateFormat#) - (DECODE(CYC.BLLG_CYCLE_UOM_CD, #months#, COALESCE(DWD.MTR_READ_WIN_MLY_DAYS_AOT, (SELECT MTR_READ_WIN_MLY_DAYS_AOT FROM DEF_WIN_DAYS), #defBefDays#), COALESCE(DWD.MTR_READ_WIN_OTH_DAYS_AOT, (SELECT MTR_READ_WIN_OTH_DAYS_AOT FROM DEF_WIN_DAYS), #defBefDays#)) - 1), #dateFormat#) AND CBS.BLLG_SCHD_THRU_DT -->
                <!-- START 2023/05/09 K.Kitachi [QC#61469, MOD] -->
                <!-- AND MR2.MTR_READ_DT             BETWEEN TO_CHAR(TO_DATE(CBS.BLLG_SCHD_THRU_DT, #dateFormat#) - (DECODE(CYC.BLLG_CYCLE_UOM_CD, #months#, COALESCE(DWD.MTR_READ_WIN_MLY_DAYS_AOT, DWD2.MTR_READ_WIN_MLY_DAYS_AOT, (SELECT MTR_READ_WIN_MLY_DAYS_AOT FROM DEF_WIN_DAYS), #defBefDays#), COALESCE(DWD.MTR_READ_WIN_OTH_DAYS_AOT, DWD2.MTR_READ_WIN_OTH_DAYS_AOT, (SELECT MTR_READ_WIN_OTH_DAYS_AOT FROM DEF_WIN_DAYS), #defBefDays#)) - 1), #dateFormat#) AND CBS.BLLG_SCHD_THRU_DT -->
                AND MR2.MTR_READ_DT             BETWEEN TO_CHAR(TO_DATE(CBS.BLLG_SCHD_THRU_DT, #dateFormat#) - (DECODE(CYC.BLLG_CYCLE_UOM_CD, #months#, COALESCE(DWD.MTR_READ_WIN_MLY_DAYS_AOT, DWD2.MTR_READ_WIN_MLY_DAYS_AOT, #mtrReadWinMlyDaysAot#, #defBefDays#), COALESCE(DWD.MTR_READ_WIN_OTH_DAYS_AOT, DWD2.MTR_READ_WIN_OTH_DAYS_AOT, #mtrReadWinOthDaysAot#, #defBefDays#)) - 1), #dateFormat#) AND CBS.BLLG_SCHD_THRU_DT
                <!-- END 2023/05/09 K.Kitachi [QC#61469, MOD] -->
                <!-- END   2023/02/09 S.Naya [QC#60045, MOD] -->
                <!-- END   2022/09/20 [QC#60045,MOD] -->
                <!-- END 2018/07/17 K.Kitachi [QC#26764, MOD] -->
<!-- add start 2018/06/27 QC#26764 -->
                AND MR2.DS_CONTR_DTL_PK         IS NULL
<!-- add end 2018/06/27 QC#26764 -->
			)
		)
		THEN 'Y'
		ELSE 'N'
		END AS XX_BTN_FLG
	,	ROW_NUMBER() OVER (
			PARTITION BY
				PMR.SVC_MACH_MSTR_PK
			ORDER BY
				PMR.MTR_READ_DT				DESC
<!-- START 2020/02/07 K.Kitachi [QC#55812, MOD] -->
<!-- 			,	A.ROW_NUM					ASC -->
			,	PMR.SVC_PHYS_MTR_READ_GRP_SQ	DESC
<!-- END 2020/02/07 K.Kitachi [QC#55812, MOD] -->
<!-- mod start 2017/09/07 QC#15134 -->
			,	MLB.MTR_LB_SORT_NUM			ASC
			,	MRT.DS_MTR_READ_TP_SORT_NUM	ASC
<!-- mod end 2017/09/07 QC#15134 -->
		) AS ROW_NUM
    ,   TCS.DS_TEST_COPY_CLS_DESC_TXT
<!-- START 2018/10/16 [QC#28392-1, DEL] -->
<!-- END 2018/10/16 [QC#28392-1, DEL] -->
<!-- START 2018/04/12 K.Kojima [QC#23602, ADD] -->
        ,PMR.EZINTIME                   AS  XX_REC_HIST_CRAT_TS
<!--  START 2019/01/10 [QC#29791, MOD] -->
        ,PMR.RGTN_USR_ID                AS  XX_REC_HIST_CRAT_BY_NM
<!--  END   2019/01/10 [QC#29791, MOD] -->
        ,PMR.EZUPTIME                   AS  XX_REC_HIST_UPD_TS
        ,PMR.EZUPUSERID                 AS  XX_REC_HIST_UPD_BY_NM
        ,PMR.EZTABLEID                  AS  XX_REC_HIST_TBL_NM
<!-- END 2018/04/12 K.Kojima [QC#23602, ADD] -->
	FROM
<!-- START 2018/09/26 [QC#28388,MOD] -->
<!--	SVC_PHYS_MTR_READ	PMR -->
        TARGET_SVC_PHYS_MTR_READ PMR
<!-- END 2018/09/26 [QC#28388,MOD] -->
	,	DS_MTR_READ_TP		MRT
	,	MTR_LB				MLB
<!-- START 2020/02/07 K.Kitachi [QC#55812, DEL] -->
<!-- 	,	A -->
<!-- END 2020/02/07 K.Kitachi [QC#55812, DEL] -->
    ,   DS_TEST_COPY_CLS    TCS
	WHERE
		PMR.SVC_MACH_MSTR_PK		=	#svcMachMstrPk#
	AND	PMR.GLBL_CMPY_CD			=	#glblCmpyCd#
	AND	PMR.EZCANCELFLAG			=	'0'
	AND	MRT.DS_MTR_READ_TP_CD		=	PMR.DS_MTR_READ_TP_CD
	AND	MRT.GLBL_CMPY_CD			=	PMR.GLBL_CMPY_CD
	AND	MRT.EZCANCELFLAG			=	PMR.EZCANCELFLAG
	AND	MLB.MTR_LB_CD				=	PMR.MTR_LB_CD
	AND	MLB.GLBL_CMPY_CD			=	PMR.GLBL_CMPY_CD
	AND	MLB.EZCANCELFLAG			=	PMR.EZCANCELFLAG
<!-- START 2020/02/07 K.Kitachi [QC#55812, DEL] -->
<!-- 	AND	A.SVC_PHYS_MTR_READ_PK		=	PMR.SVC_PHYS_MTR_READ_PK -->
<!-- END 2020/02/07 K.Kitachi [QC#55812, DEL] -->
    AND PMR.GLBL_CMPY_CD            =   TCS.GLBL_CMPY_CD(+)
    AND PMR.DS_TEST_COPY_CLS_CD     =   TCS.DS_TEST_COPY_CLS_CD(+)
    AND PMR.EZCANCELFLAG            =   TCS.EZCANCELFLAG(+)
    <!-- START 2020/01/24 K.Kitachi [QC#55495, ADD] -->
    AND PMR.CARRY_OVER_TP_CD        = '0'
    <!-- END 2020/01/24 K.Kitachi [QC#55495, ADD] -->
<!-- START 2016/11/24 [QC#14992, MOD] -->
) X
<!-- START 2018/10/16 [QC#28392-1, DEL] -->
<!-- END 2018/10/16 [QC#28392-1, DEL] -->
ORDER BY
	X.ROW_NUM
<!-- END 2016/11/24 [QC#14992, MOD] -->
</statement>
<statement id="getAllMtrLb" parameterClass="Map" resultClass="Map">
SELECT
	MLB.*
FROM
	MTR_LB	MLB
WHERE
	MLB.GLBL_CMPY_CD	=	#glblCmpyCd#
AND	MLB.EZCANCELFLAG	=	'0'
</statement>
<statement id="getDsContrBllgSchd" parameterClass="Map" resultClass="Map">
SELECT
	CBS.*
FROM
	CONTR_PHYS_BLLG_MTR_RELN		PBR
,	DS_CONTR_BLLG_SCHD_SMRY			BSS
,	DS_CONTR_BLLG_SCHD				CBS
WHERE
	PBR.SVC_PHYS_MTR_PK				=	#svcPhysMtrPk#
AND	PBR.GLBL_CMPY_CD				=	#glblCmpyCd#
AND	PBR.EZCANCELFLAG				=	'0'
AND	BSS.DS_CONTR_BLLG_MTR_PK		=	PBR.DS_CONTR_BLLG_MTR_PK
AND	BSS.GLBL_CMPY_CD				=	PBR.GLBL_CMPY_CD
AND	BSS.EZCANCELFLAG				=	PBR.EZCANCELFLAG
AND	CBS.DS_CONTR_BLLG_SCHD_SMRY_PK	=	BSS.DS_CONTR_BLLG_SCHD_SMRY_PK
AND	CBS.USG_CHRG_FLG				=	'Y'
AND	CBS.MTR_ENTRY_CPLT_FLG			=	'N'
<isNotNull property="fromDt">
AND	CBS.BLLG_SCHD_FROM_DT			&gt;	#fromDt#
</isNotNull>
<isNotNull property="thruDt">
AND	CBS.BLLG_SCHD_THRU_DT			&lt;	#thruDt#
</isNotNull>
AND	CBS.GLBL_CMPY_CD				=	BSS.GLBL_CMPY_CD
AND	CBS.EZCANCELFLAG				=	BSS.EZCANCELFLAG
AND	NOT EXISTS (
	SELECT
		*
	FROM
		SVC_PHYS_MTR_READ			MR2
	,	DS_MTR_READ_TP				RT2
	WHERE
		MR2.SVC_PHYS_MTR_PK			=	PBR.SVC_PHYS_MTR_PK
	AND	MR2.GLBL_CMPY_CD			=	PBR.GLBL_CMPY_CD
	AND	MR2.EZCANCELFLAG			=	PBR.EZCANCELFLAG
	AND	RT2.DS_MTR_READ_TP_CD		=	MR2.DS_MTR_READ_TP_CD
	AND	RT2.DS_MTR_READ_TP_GRP_CD	=	#dsMtrReadTpGrpCd#
	AND	RT2.GLBL_CMPY_CD			=	MR2.GLBL_CMPY_CD
	AND	RT2.EZCANCELFLAG			=	MR2.EZCANCELFLAG
	AND	MR2.MTR_READ_DT 			BETWEEN CBS.BLLG_SCHD_FROM_DT AND CBS.BLLG_SCHD_THRU_DT
)
ORDER BY
	CBS.BLLG_SCHD_FROM_DT
</statement>
<statement id="getLtstMtrRead" parameterClass="Map" resultClass="Map">
SELECT
	*
FROM
(
	SELECT
		PMR.*
	,	ROW_NUMBER() OVER (
			PARTITION BY
				PMR.SVC_PHYS_MTR_PK
			ORDER BY
				PMR.MTR_READ_DT					DESC
			,	PMR.SVC_PHYS_MTR_READ_GRP_SQ	DESC
		)	AS	ROW_NUM
	FROM
		SVC_PHYS_MTR_READ			PMR
	WHERE
		PMR.SVC_PHYS_MTR_PK			=	#svcPhysMtrPk#
	AND	PMR.GLBL_CMPY_CD			=	#glblCmpyCd#
	AND	PMR.EZCANCELFLAG			=	'0'
)
WHERE
	ROW_NUM	=	1
</statement>
<!-- START 2016/03/31 T.Tomita [QC#4394, ADD] -->
    <statement id="getDefaultMeterReadDate" parameterClass="Map" resultClass="String">
        SELECT
            NVL(MAX(Z.BLLG_SCHD_THRU_DT), #slsDt#)
        FROM
            DS_CONTR_BLLG_SCHD Z
        WHERE
            Z.GLBL_CMPY_CD          =     #glblCmpyCd#
        <!-- START 2018/05/28 [QC#15410, MOD] -->
        <!--AND Z.DS_CONTR_DTL_PK       =     #dsContrDtlPk# -->
        <iterate property="dsContrDtlPkList" var="dsContrDtlPkList[]" open="AND Z.DS_CONTR_DTL_PK IN (" close=")" conjunction=",">
        #dsContrDtlPkList[]#
        </iterate>
        <!-- END 2018/05/28 [QC#15410, MOD] -->
        AND Z.EZCANCELFLAG          =     '0'
        AND Z.USG_CHRG_FLG          =     'Y'
        AND Z.DS_BLLG_SCHD_STS_CD   =     #dsBllgSchdStsCd#
        AND Z.NEXT_BLLG_DT          &lt;  #slsDt#
        AND Z.BLLG_SCHD_THRU_DT     &lt;= #slsDt#
        AND TO_CHAR(TO_DATE(Z.BLLG_SCHD_THRU_DT, #dateFormat#) + #windowDays#, #dateFormat#) &gt;= #slsDt#
    </statement>
<!-- END 2016/03/31 T.Tomita [QC#4394, ADD] -->
    <statement id="getFsrVisitInfo" parameterClass="Map" resultClass="Map">
        SELECT
             A.SVC_TASK_NUM
            ,B.FSR_NUM
            ,B.FSR_VISIT_NUM
        FROM
             SVC_TASK           A
            ,FSR_VISIT          B
        WHERE
                A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.SVC_TASK_NUM          = #svcTaskNum#
            AND A.SVC_MACH_MSTR_PK      = #svcMachMstrPk#
            AND A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = B.GLBL_CMPY_CD
            AND A.SVC_TASK_NUM          = B.SVC_TASK_NUM
            AND B.EZCANCELFLAG          = '0'
        ORDER BY
             A.SVC_TASK_NUM
            ,B.FSR_NUM
            ,B.FSR_VISIT_NUM
    </statement>
<!-- START 2016/12/06 [QC#15200, ADD] -->
    <statement id="getContrDtlKeysByMachMstrPk" parameterClass="Map" resultClass="Map">
        SELECT
             X.GLBL_CMPY_CD
            ,X.DS_CONTR_DTL_PK                  AS DS_CONTR_DTL_PK
            ,X.DS_CONTR_PK                      AS DS_CONTR_PK
            <!-- START 2019/02/18 S.Kitamura [QC#30339,ADD] -->
            ,X.DS_CONTR_CATG_CD                 AS DS_CONTR_CATG_CD
            <!-- END 2019/02/18 S.Kitamura [QC#30339,ADD] -->
            <!-- START 2019/02/20 S.Kitamura [QC#30431,ADD] -->
            ,X.ETTL_AVAL_FLG                    AS ETTL_AVAL_FLG
            <!-- END 2019/02/20 S.Kitamura [QC#30431,ADD] -->
        FROM (
            SELECT
                 DCD.GLBL_CMPY_CD                   AS GLBL_CMPY_CD
                ,DCD.DS_CONTR_DTL_PK                AS DS_CONTR_DTL_PK
                ,CNT.DS_CONTR_PK                    AS DS_CONTR_PK
                <!-- START 2019/02/18 S.Kitamura [QC#30339,ADD] -->
                ,CNT.DS_CONTR_CATG_CD               AS DS_CONTR_CATG_CD
                <!-- END 2019/02/18 S.Kitamura [QC#30339,ADD] -->
                <!-- START 2019/02/20 S.Kitamura [QC#30431,ADD] -->
                ,DCDV.ETTL_AVAL_FLG                 AS ETTL_AVAL_FLG
                <!-- END 2019/02/20 S.Kitamura [QC#30431,ADD] -->
                ,RANK() OVER(
                    PARTITION BY DCD.SVC_MACH_MSTR_PK
                        ORDER BY 
                                  <!-- START 2022/06/13 RIZHU.JIN [QC#60122,MOD] -->
                                 <iterate property="dsContrCtrlStsCdList" var="dsContrCtrlStsCdList[]" open="CASE WHEN DCDV.DS_CONTR_CTRL_STS_CD IN (" close=") THEN 1 ELSE 2 END ASC  " conjunction=",">
                                     #dsContrCtrlStsCdList[]#
                                 </iterate>
                                 ,CASE WHEN DCD.DS_CONTR_DTL_STS_CD = #dsContrDtlStsActv# THEN 1 ELSE 2 END ASC
                                  <!-- END 2022/06/13 RIZHU.JIN [QC#60122,MOD] -->
                                <!-- START 2018/12/13 S.Kitamura [QC#28860,ADD] -->
                                 ,CASE WHEN DCDT.USG_CHRG_FLG = 'Y' THEN 1 ELSE 2 END ASC
                                <!-- END 2018/12/13 S.Kitamura [QC#28860,ADD] -->
                                <!-- START 2022/05/31 RIZHU.JIN [QC#60122,MOD] -->
                                <!-- ,CASE WHEN DCD.BASE_PRC_DEAL_AMT &gt; 0 THEN 1 ELSE 2 END ASC -->
                                <!-- START 2019/03/25 T.Tomita [QC#30791,ADD] -->
                                ,CASE WHEN     DCD.CONTR_EFF_FROM_DT &lt;= #slsDt#
                                           AND NVL(DCD.CONTR_CLO_DT, DCD.CONTR_EFF_THRU_DT) &gt;= #slsDt#
                                           THEN 1
                                           ELSE 2
                                      END ASC
                                <!-- END 2019/03/25 T.Tomita [QC#30791,ADD] -->
                                ,NVL(DCD.CONTR_CLO_DT, DCD.CONTR_EFF_THRU_DT) DESC
                                ,CASE WHEN DCD.BASE_PRC_DEAL_AMT &gt; 0 THEN 1 ELSE 2 END ASC
                                <!-- END 2022/05/31 RIZHU.JIN [QC#60122,MOD] -->
                                ,DECODE(CNT.DS_CONTR_CATG_CD, #warranty#, 2, 1) ASC
                                <!-- START 2018/05/28 [QC#15410, ADD] -->
                                ,CNT.DS_CONTR_CRAT_DT
                                ,CNT.DS_CONTR_PK
                                <!-- END 2018/05/28 [QC#15410, ADD] -->
                 ) AS RANK
            FROM
                 DS_CONTR_DTL    DCD
                ,DS_CONTR        CNT
                <!-- START 2018/12/13 S.Kitamura [QC#28860,ADD] -->
                ,DS_CONTR_DTL_TP DCDT
                <!-- END 2018/12/13 S.Kitamura [QC#28860,ADD] -->
                <!-- START 2019/02/20 S.Kitamura [QC#30431,ADD] -->
                ,DS_CONTR_DTL_STS_V DCDV
                <!-- END 2019/02/20 S.Kitamura [QC#30431,ADD] -->
            WHERE
                    DCD.GLBL_CMPY_CD        = #glblCmpyCd#
                AND DCD.SVC_MACH_MSTR_PK    = #svcMachMstrPk#
        <!-- START 2018/07/24 [QC#21718, DEL] -->
        <!--
        <isNotNull property="isEffective">
                AND DCD.CONTR_EFF_FROM_DT   &lt;= #contrEffFromDt#
                AND DCD.CONTR_EFF_THRU_DT   &gt;= #contrEffThruDt#
                AND (DCD.CONTR_CLO_DT       &gt;= #contrCloDt#
                        OR DCD.CONTR_CLO_DT IS NULL)
        </isNotNull>
        -->
        <!-- END 2018/07/24 [QC#21718, DEL] -->
                AND DCD.DS_CONTR_DTL_STS_CD NOT IN (#dsContrDtlStsCanc#)
                <!-- START 2024/04/01 T.Fukuta [QC#63548,ADD] -->
                AND (DCD.MAN_TRMN_TP_CD IS NULL OR DCD.MAN_TRMN_TP_CD &lt;&gt; #manTrmnTpCd#)
                <!-- END 2024/04/01 T.Fukuta [QC#63548,ADD] -->
                AND DCD.EZCANCELFLAG        = '0'
                AND DCD.GLBL_CMPY_CD        = CNT.GLBL_CMPY_CD
                AND DCD.DS_CONTR_PK         = CNT.DS_CONTR_PK
                AND CNT.EZCANCELFLAG       = '0'
                <!-- START 2018/12/13 S.Kitamura [QC#28860,ADD] -->
                AND DCD.DS_CONTR_DTL_TP_CD  = DCDT.DS_CONTR_DTL_TP_CD
                AND DCD.GLBL_CMPY_CD        = DCDT.GLBL_CMPY_CD
                AND DCDT.EZCANCELFLAG       = '0'
                <!-- END 2018/12/13 S.Kitamura [QC#28860,ADD] -->
                <!-- START 2019/02/20 S.Kitamura [QC#30431,ADD] -->
                AND CNT.DS_CONTR_PK         = DCDV.DS_CONTR_PK
                AND DCD.DS_CONTR_DTL_PK     = DCDV.DS_CONTR_DTL_PK
                AND DCD.GLBL_CMPY_CD        = DCDV.GLBL_CMPY_CD
                AND DCDV.EZCANCELFLAG       = '0'
                <!-- END 2019/02/20 S.Kitamura [QC#30431,ADD] -->
            ORDER BY
                RANK ASC
            ) X
        <!-- START 2018/05/28 [QC#15410, MOD] -->
        <!-- WHERE -->
        <!--     ROWNUM                 = 1 -->
        <!-- END 2018/05/28 [QC#15410, MOD] -->
    </statement>
<!-- END 2016/12/06 [QC#15200, ADD] -->
    <!-- START 2017/09/15 K.Kojima [QC#21125,ADD] -->
    <statement id="countInvalidCheckTarget" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*) AS COUNT
        FROM
             SVC_PHYS_MTR_READ  SPMR
            ,DS_CONTR_BLLG_SCHD DCBS_CURR
            ,DS_CONTR_BLLG_SCHD DCBS_FUTURE
        WHERE
                SPMR.GLBL_CMPY_CD                       = #glblCmpyCd#
            AND SPMR.SVC_PHYS_MTR_READ_PK               = #svcPhysMtrReadPk#
            AND SPMR.EZCANCELFLAG                       = '0'
            AND SPMR.GLBL_CMPY_CD                       = DCBS_CURR.GLBL_CMPY_CD
            AND SPMR.SVC_PHYS_MTR_READ_GRP_SQ           = DCBS_CURR.SVC_PHYS_MTR_READ_GRP_SQ
            AND DCBS_CURR.EZCANCELFLAG                  = '0'
            AND DCBS_CURR.GLBL_CMPY_CD                  = DCBS_FUTURE.GLBL_CMPY_CD
            AND DCBS_CURR.DS_CONTR_DTL_PK               = DCBS_FUTURE.DS_CONTR_DTL_PK
            AND DCBS_CURR.NEXT_BLLG_DT               &lt; DCBS_FUTURE.NEXT_BLLG_DT
            AND DCBS_FUTURE.SVC_PHYS_MTR_READ_GRP_SQ IS NOT NULL
            AND DCBS_FUTURE.USG_CHRG_FLG                = 'Y'
            AND DCBS_FUTURE.EZCANCELFLAG                = '0'
    </statement>
    <statement id="countDsContrBllgShedForInvalidCheck" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*) AS COUNT
        FROM
             SVC_PHYS_MTR_READ  SPMR
            ,DS_CONTR_BLLG_SCHD DCBS
        WHERE
            SPMR.GLBL_CMPY_CD             = #glblCmpyCd#
            AND SPMR.SVC_PHYS_MTR_READ_PK     = #svcPhysMtrReadPk#
            AND SPMR.EZCANCELFLAG             = '0'
            AND SPMR.GLBL_CMPY_CD             = DCBS.GLBL_CMPY_CD
            AND SPMR.SVC_PHYS_MTR_READ_GRP_SQ = DCBS.SVC_PHYS_MTR_READ_GRP_SQ
            AND DCBS.EZCANCELFLAG             = '0'
    </statement>
    <!-- END 2017/09/15 K.Kojima [QC#21125,ADD] -->
    <!-- START 2017/09/26 K.Kim [QC#18744, ADD] -->
    <statement id="getSplyInclFlg" parameterClass="Map" resultMap="String">
          SELECT
                 DSC.SPLY_INCL_FLG
          FROM
                 DS_SUB_CONTR    DSC
          WHERE
                 DSC.GLBL_CMPY_CD     = #glblCmpyCd#
             AND DSC.DS_CONTR_DTL_PK  = #dsContrDtlPk#
             AND DSC.EZCANCELFLAG     = '0'
             AND ROWNUM               = 1
    </statement>
    <!-- END 2017/09/26 K.Kim [QC#18744, ADD] -->
<!-- START 2017/12/13 M.Kidokoro [QC#21681, ADD] -->
    <statement id="getInvalidMtrFlg" parameterClass="Map" resultMap="String">
        <!-- START 2022/09/30 R.jin []QC#60648, DEL] -->
        <!-- START 2018/04/06 K.Kojima [QC#25172, ADD] -->
        <!-- WITH TARGET_SVC_PHYS_MTR_READ AS (  -->
        <!-- SELECT  -->
        <!--     *  -->
        <!--     FROM  -->
        <!--         SVC_PHYS_MTR_READ SPMR  -->
        <!--     WHERE -->
        <!--            SPMR.GLBL_CMPY_CD     = #glblCmpyCd# -->
        <!--         AND SPMR.SVC_MACH_MSTR_PK = #svcMachMstrPk# -->
        <!--         AND SPMR.EZCANCELFLAG     = '0' -->
        <!-- ) -->
        <!-- END 2018/04/06 K.Kojima [QC#25172, ADD] -->
        <!-- SELECT -->
        <!--     CASE WHEN EXISTS( -->
        <!--         SELECT -->
        <!--             1 -->
        <!--         FROM -->
        <!--         ( -->
        <!--             SELECT -->
        <!--                 PMR2.MTR_READ_DT -->
        <!--                ,MAX(CBS2.BLLG_SCHD_THRU_DT) AS BLLG_SCHD_THRU_DT -->
        <!--             FROM -->
                        <!-- START 2018/04/06 K.Kojima [QC#25172, MOD] -->
                       <!--  SVC_PHYS_MTR_READ  PMR2 -->
        <!--                 TARGET_SVC_PHYS_MTR_READ  PMR2 -->
                       <!-- END 2018/04/06 K.Kojima [QC#25172, MOD] -->
        <!--                ,DS_CONTR_BLLG_SCHD CBS2 -->
        <!--             WHERE -->
        <!--                 PMR2.GLBL_CMPY_CD     = PMR1.GLBL_CMPY_CD -->
        <!--             AND PMR2.SVC_MACH_MSTR_PK = PMR1.SVC_MACH_MSTR_PK -->
        <!--             AND PMR2.MTR_LB_CD        = PMR1.MTR_LB_CD -->
        <!--             AND PMR2.DS_CONTR_DTL_PK IS NOT NULL -->
        <!--             AND PMR2.VLD_MTR_FLG      = 'Y' -->
        <!--             AND PMR2.EZCANCELFLAG     = '0' -->
        <!--             AND PMR2.GLBL_CMPY_CD     = CBS2.GLBL_CMPY_CD -->
        <!--             AND PMR2.DS_CONTR_DTL_PK  = CBS2.DS_CONTR_DTL_PK -->
        <!--             AND CBS2.INV_FLG          = 'Y' -->
        <!--             AND CBS2.USG_CHRG_FLG     = 'Y' -->
        <!--             AND CBS2.EZCANCELFLAG     = '0' -->
        <!--             GROUP BY -->
        <!--                 PMR2.MTR_READ_DT -->
        <!--         ) -->
        <!--         WHERE -->
        <!--             MTR_READ_DT       &lt;= #mtrReadDt# -->
        <!--         AND BLLG_SCHD_THRU_DT &gt;= #mtrReadDt# -->
        <!--     )  THEN 'Y' ELSE 'N' END AS INVLD_MTR_FLG -->
        <!-- FROM -->
            <!-- START 2018/04/06 K.Kojima [QC#25172, MOD] -->
            <!-- SVC_PHYS_MTR_READ PMR1 -->
        <!--     TARGET_SVC_PHYS_MTR_READ PMR1 -->
            <!-- END 2018/04/06 K.Kojima [QC#25172, MOD] -->
        <!-- WHERE -->
        <!--     PMR1.GLBL_CMPY_CD     = #glblCmpyCd# -->
        <!-- AND PMR1.SVC_MACH_MSTR_PK = #svcMachMstrPk# -->
        <!-- AND PMR1.EZCANCELFLAG     = '0' -->
        <!-- END 2022/09/30 R.jin []QC#60648, DEL] -->
        <!-- START 2022/09/30 R.jin []QC#60648, ADD] -->
        WITH BILLED_PERIOD_LIST AS (
            SELECT 
                PMR.MTR_READ_DT
                ,MAX(BS.BLLG_SCHD_THRU_DT) AS MAX_BLLG_SCHD_THRU_DT
            FROM 
                SVC_MACH_MSTR                 SMM
                ,DS_CONTR_DTL                 DCD
                ,SVC_PHYS_MTR_READ            PMR
                ,CONTR_PHYS_BLLG_MTR_RELN     R
                ,DS_CONTR_BLLG_SCHD           BS
            WHERE 
                SMM.GLBL_CMPY_CD            = DCD.GLBL_CMPY_CD
                AND SMM.SVC_MACH_MSTR_PK    = DCD.SVC_MACH_MSTR_PK
                AND DCD.GLBL_CMPY_CD        = PMR.GLBL_CMPY_CD
                AND DCD.DS_CONTR_DTL_PK     = PMR.DS_CONTR_DTL_PK
                AND PMR.GLBL_CMPY_CD        = R.GLBL_CMPY_CD
                AND PMR.SVC_PHYS_MTR_PK     = R.SVC_PHYS_MTR_PK
                AND PMR.DS_CONTR_DTL_PK     = R.DS_CONTR_DTL_PK
                AND R.GLBL_CMPY_CD          = BS.GLBL_CMPY_CD
                AND R.DS_CONTR_BLLG_MTR_PK  = BS.DS_CONTR_BLLG_MTR_PK
                AND PMR.VLD_MTR_FLG         = 'Y'
                AND R.BLLBL_FLG             = 'Y'
                AND BS.INV_FLG              = 'Y'
                AND BS.USG_CHRG_FLG         = 'Y'
                AND SMM.EZCANCELFLAG        = '0'
                AND DCD.EZCANCELFLAG        = '0'
                AND PMR.EZCANCELFLAG        = '0'
                AND R.EZCANCELFLAG          = '0'
                AND BS.EZCANCELFLAG         = '0'
                AND SMM.SVC_MACH_MSTR_PK    = #svcMachMstrPk#
                AND SMM.GLBL_CMPY_CD        = #glblCmpyCd#
            GROUP BY 
                PMR.MTR_READ_DT
        )
        SELECT 
            CASE WHEN COUNT(*) > 0 
                THEN 'Y' 
                ELSE 'N' 
            END AS INVLD_MTR_FLG
        FROM 
            BILLED_PERIOD_LIST BPL
        WHERE 
            #mtrReadDt# BETWEEN BPL.MTR_READ_DT AND BPL.MAX_BLLG_SCHD_THRU_DT
        <!-- END 2022/09/30 R.jin []QC#60648, ADD] -->
    </statement>
<!-- END 2017/12/13 M.Kidokoro [QC#21681, ADD] -->
<!-- START 2018/03/08 K.Kojima [QC#24507,ADD] -->
    <statement id="getSvcTermCondDataDispTxt" parameterClass="Map" resultClass="String">
        SELECT
            <isEqual property="fltFlg" compareValue="N">
            NVL(DTL_COND.SVC_TERM_COND_DATA_DISP_TXT, CONTR_COND.SVC_TERM_COND_DATA_DISP_TXT)
            </isEqual>
            <isEqual property="fltFlg" compareValue="Y">
            CONTR_COND.SVC_TERM_COND_DATA_DISP_TXT
            </isEqual>
                                                AS  SVC_TERM_COND_DATA_DISP_TXT
        FROM
             SVC_TERM_COND_ATTRB    TCA
            ,(SELECT
                   TCN.SVC_TERM_COND_ATTRB_PK
                  ,TCD.SVC_TERM_COND_DATA_SRC_CD
                  ,TCD.SVC_TERM_COND_DATA_DISP_TXT  
              FROM
                   SVC_TERM_COND          TCN
                  ,SVC_TERM_COND_DATA_SRC TCD
              WHERE
                      TCN.GLBL_CMPY_CD                = #glblCmpyCd#
                  AND TCN.DS_CONTR_DTL_PK             = #dsContrDtlPk#
                  AND TCN.EZCANCELFLAG                = '0'
                  AND TCN.GLBL_CMPY_CD                = TCD.GLBL_CMPY_CD
                  AND TCN.SVC_TERM_ATTRB_MAP_VAL_CD   = TCD.SVC_TERM_COND_DATA_VAL_CD
                  AND TCD.EZCANCELFLAG                = '0'
             ) DTL_COND
            ,(SELECT
                   TCN.SVC_TERM_COND_ATTRB_PK
                  ,TCD.SVC_TERM_COND_DATA_SRC_CD
                  ,TCD.SVC_TERM_COND_DATA_DISP_TXT  
              FROM
                   SVC_TERM_COND          TCN
                  ,SVC_TERM_COND_DATA_SRC TCD
              WHERE
                      TCN.GLBL_CMPY_CD                = #glblCmpyCd#
                  AND TCN.DS_CONTR_PK                 = #dsContrPk#
                  AND TCN.DS_CONTR_DTL_PK             IS NULL
                  AND TCN.EZCANCELFLAG                = '0'
                  AND TCN.GLBL_CMPY_CD                = TCD.GLBL_CMPY_CD
                  AND TCN.SVC_TERM_ATTRB_MAP_VAL_CD   = TCD.SVC_TERM_COND_DATA_VAL_CD
                  AND TCD.EZCANCELFLAG                = '0'
             ) CONTR_COND
        WHERE
                TCA.GLBL_CMPY_CD                = #glblCmpyCd#
            <isNotNull property="svcTermCondAttrbNm">
            AND TCA.SVC_TERM_COND_ATTRB_NM      = #svcTermCondAttrbNm#
            </isNotNull>
            AND TCA.EFF_FROM_DT             &lt;= #slsDt#
            AND (TCA.EFF_THRU_DT            &gt;= #slsDt#
            OR   TCA.EFF_THRU_DT               IS NULL)
            AND TCA.EZCANCELFLAG                = '0'
            AND TCA.SVC_TERM_COND_ATTRB_PK      = DTL_COND.SVC_TERM_COND_ATTRB_PK(+)
            AND TCA.SVC_TERM_COND_DATA_SRC_CD   = DTL_COND.SVC_TERM_COND_DATA_SRC_CD(+)
            AND TCA.SVC_TERM_COND_ATTRB_PK      = CONTR_COND.SVC_TERM_COND_ATTRB_PK(+)
            AND TCA.SVC_TERM_COND_DATA_SRC_CD   = CONTR_COND.SVC_TERM_COND_DATA_SRC_CD(+)
    </statement>
<!-- END 2018/03/08 K.Kojima [QC#24507,ADD] -->
<!-- START 2018/05/10 K.Kojima [QC#24817,ADD] -->
    <statement id="getMeterEntryContrDtlPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            DCD.DS_CONTR_DTL_PK
        FROM
             DS_CONTR_DTL       DCD
            ,DS_CONTR_DTL_STS_V DCDSV
            <!-- START 2018/11/01 K.Kitachi [QC#28985, ADD] -->
            ,DS_CONTR_DTL_TP    DCDT
            <!-- END 2018/11/01 K.Kitachi [QC#28985, ADD] -->
        WHERE
                DCD.GLBL_CMPY_CD       = #glblCmpyCd#
            AND DCD.SVC_MACH_MSTR_PK   = #svcMachMstrPk#
            <!-- START 2024/04/01 T.Fukuta [QC#63548,ADD] -->
            AND (DCD.MAN_TRMN_TP_CD IS NULL OR DCD.MAN_TRMN_TP_CD &lt;&gt; #manTrmnTpCd#)
            <!-- END 2024/04/01 T.Fukuta [QC#63548,ADD] -->
            AND DCD.EZCANCELFLAG       = '0'
            AND DCD.GLBL_CMPY_CD       = DCDSV.GLBL_CMPY_CD
            AND DCD.DS_CONTR_DTL_PK    = DCDSV.DS_CONTR_DTL_PK
            <iterate property="dsContrCtrlStsCdList" var="dsContrCtrlStsCdList[]" open="AND DCDSV.DS_CONTR_CTRL_STS_CD NOT IN (" close=")" conjunction=",">
            #dsContrCtrlStsCdList[]#
            </iterate>
            AND DCDSV.EZCANCELFLAG     = '0'
            <!-- START 2018/11/01 K.Kitachi [QC#28985, ADD] -->
            AND DCD.GLBL_CMPY_CD       = DCDT.GLBL_CMPY_CD
            AND DCD.DS_CONTR_DTL_TP_CD = DCDT.DS_CONTR_DTL_TP_CD
            AND DCDT.USG_CHRG_FLG      = 'Y'
            AND DCDT.EZCANCELFLAG      = '0'
            <!-- END 2018/11/01 K.Kitachi [QC#28985, ADD] -->
    </statement>
    <statement id="getBilliableMeterNonMtrFmla" parameterClass="Map" resultClass="String">
        SELECT
            SPM.MDL_MTR_LB_CD
        FROM
             CONTR_PHYS_BLLG_MTR_RELN CPBMR
            ,SVC_PHYS_MTR             SPM
        WHERE
                CPBMR.GLBL_CMPY_CD    = #glblCmpyCd#
            <iterate property="dsContrDtlPkList" var="dsContrDtlPkList[]" open="AND CPBMR.DS_CONTR_DTL_PK IN (" close=")" conjunction=",">
            #dsContrDtlPkList[]#
            </iterate>
            AND CPBMR.BLLG_MTR_LB_CD  IS NOT NULL
            AND CPBMR.EZCANCELFLAG    = '0'
            AND CPBMR.GLBL_CMPY_CD    = SPM.GLBL_CMPY_CD
            AND CPBMR.SVC_PHYS_MTR_PK = SPM.SVC_PHYS_MTR_PK
<!-- START 2019/11/18 [QC#54356, ADD] -->
            <isNotNull property="svcMachMstrPk">
            AND SPM.SVC_MACH_MSTR_PK  = #svcMachMstrPk#
            </isNotNull>
<!-- END   2019/11/18 [QC#54356, ADD] -->
            AND SPM.EZCANCELFLAG      = '0'
            AND NOT EXISTS(
                SELECT
                    1
                FROM
                    MTR_FMLA MF
                WHERE
                        MF.GLBL_CMPY_CD = SPM.GLBL_CMPY_CD
                    AND MF.MTR_GRP_PK   = SPM.MTR_GRP_PK
                    AND MF.MTR_LB_CD    = SPM.MDL_MTR_LB_CD
                    AND MF.EZCANCELFLAG = '0'
            )
    </statement>
<!-- END 2018/05/10 K.Kojima [QC#24817,ADD] -->
<!-- START 2018/06/11 U.Kim [QC#22480, ADD] -->
    <statement id="getTelNum" parameterClass="Map" resultClass="String">
        SELECT
            DS_CTAC_PNT_VAL_TXT
        FROM
            (
                SELECT
                     DCP.DS_CTAC_PNT_VAL_TXT
                FROM
                     DS_CTAC_PSN_RELN DCPR
                    ,CTAC_PSN         CP
                    ,DS_CTAC_PNT      DCP
                WHERE
                        DCPR.GLBL_CMPY_CD        = #glblCmpyCd#
                    AND DCPR.CTAC_TP_CD          = #ctacTpCd#
                    AND DCPR.LOC_NUM             = #locNum#
                    AND DCPR.EZCANCELFLAG        = '0'
                    AND DCPR.GLBL_CMPY_CD        = CP.GLBL_CMPY_CD
                    AND DCPR.CTAC_PSN_PK         = CP.CTAC_PSN_PK
                    AND CP.CTAC_PSN_ACTV_FLG     = #ctacPsnActvFlg#
                    AND CP.EZCANCELFLAG          = '0'
                    AND CP.GLBL_CMPY_CD          = DCP.GLBL_CMPY_CD
                    AND CP.CTAC_PSN_PK           = DCP.CTAC_PSN_PK
                    AND DCP.DS_CTAC_PNT_TP_CD    = #dsCtacPntTp#
                    AND DCP.EZCANCELFLAG         = '0'
                ORDER BY DCP.EZUPTIME DESC
            )
        WHERE
            ROWNUM = 1
    </statement>
<!-- END 2018/06/11 U.Kim [QC#22480, ADD] -->

<!-- START 2018/06/25 T.Ogura [QC#26336,ADD] -->
    <statement id="getDownloadList" parameterClass="Map" resultMap="result.getDownloadList">
        SELECT
            *
        FROM (
                SELECT 
                    SMM.SER_NUM
                    ,SMM.MDSE_CD
                    ,MN.T_MDL_NM
                    ,ML.MTR_LB_DESC_TXT
                    ,MTG.DS_MTR_READ_TP_GRP_CD || '-' || MTG.DS_MTR_READ_TP_GRP_DESC_TXT XX_MTR_READ_TP_GRP_DESC_TXT
                    ,MRT.DS_MTR_READ_TP_DESC_TXT
                    ,DECODE(SMR.VLD_MTR_FLG, 'Y', 'X', NULL) VLD_MTR_FLG
                    ,DENSE_RANK() OVER(PARTITION BY SMM.SER_NUM, SMR.MTR_READ_DT ORDER BY SMR.SVC_PHYS_MTR_READ_GRP_SQ DESC) GRP_NUM
                    ,TO_CHAR(TO_DATE(SMR.MTR_READ_DT, 'YYYYMMDD'),'MM/DD/YYYY') XX_READ_DT
                    ,SMR.READ_MTR_CNT
                    ,SMR.TEST_MTR_CNT
                    ,SMR.MTR_ENTRY_CMNT_TXT
                    ,CASE
                        WHEN AP.FIRST_NM IS NOT NULL THEN
                            SMR.RGTN_USR_ID || ':'
                                || DECODE(AP.LAST_NM,  null, '', AP.LAST_NM)
                                || DECODE(AP.FIRST_NM,    null, '', ' ' || AP.FIRST_NM)
                                || DECODE(AP.MID_NM,    null, '', ' ' || AP.MID_NM)
                        WHEN INSTRB(SMR.EZINUSERID, 'CONV') &gt; 0 THEN 'CONVERSION'
                        ELSE 'SYSTEM'
                    END XX_CRAT_PSN_NM
                    ,TO_CHAR(TO_TIMESTAMP(SMR.EZINTIME, 'YYYYMMDDHH24MISSFF3'), 'MM/DD/YYYY HH24:MI:SS') XX_CRT_DT
                    ,MRS.MTR_READ_SRC_TP_DESC_TXT 
                    <!-- START 2023/05/16 t.aizawa [QC#58675, DEL] -->
<!--                    ,SMR.SVC_INV_NUM -->
                    <!-- END 2023/05/16 t.aizawa [QC#58675, DEL] -->
                    <!-- START 2023/05/16 t.aizawa [QC#58675, ADD] -->
                    ,SIN.SVC_INV_NUM
                    <!-- END 2023/05/16 t.aizawa [QC#58675, ADD] -->
                    <!-- START 2023/05/23 t.kimura [QC#58675, DEL] -->
<!--                    ,TO_CHAR(TO_DATE(SMR.INV_DT, 'YYYYMMDD'),'MM/DD/YYYY') XX_INV_DT -->
                    <!-- END 2023/05/23 t.kimura [QC#58675, DEL] -->
                    <!-- START 2023/05/23 t.kimura [QC#58675, ADD] -->
                    ,TO_CHAR(TO_DATE(SIN.INV_DT, 'YYYYMMDD'),'MM/DD/YYYY') XX_INV_DT
                    <!-- END 2023/05/23 t.kimura [QC#58675, ADD] -->
                    ,SMR.SVC_TASK_NUM
                    ,TCC.DS_TEST_COPY_CLS_DESC_TXT
                    ,BSC.LOC_NM BILL_TO_CUST_NM
                    ,DECODE(BCC.FIRST_LINE_ADDR,  null, '', BCC.FIRST_LINE_ADDR)
                            || DECODE(BCC.SCD_LINE_ADDR,    null, '', ' ' || BCC.SCD_LINE_ADDR)
                            || DECODE(BCC.THIRD_LINE_ADDR,  null, '', ' ' || BCC.THIRD_LINE_ADDR)
                            || DECODE(BCC.FRTH_LINE_ADDR,   null, '', ' ' || BCC.FRTH_LINE_ADDR)
                            || DECODE(BCC.CTY_ADDR,         null, '', ',' || BCC.CTY_ADDR)
                            || DECODE(BCC.ST_CD,            null, '', ' ' || BCC.ST_CD)
                            || DECODE(BCC.POST_CD,          null, '', ' ' || BCC.POST_CD) BILL_TO_LOC_ADDR
                    ,CSC.LOC_NM CUR_LOC_ACCT_NM
                    ,DECODE(SCC.FIRST_LINE_ADDR,  null, '', SCC.FIRST_LINE_ADDR)
                            || DECODE(SCC.SCD_LINE_ADDR,    null, '', ' ' || SCC.SCD_LINE_ADDR)
                            || DECODE(SCC.THIRD_LINE_ADDR,  null, '', ' ' || SCC.THIRD_LINE_ADDR)
                            || DECODE(SCC.FRTH_LINE_ADDR,   null, '', ' ' || SCC.FRTH_LINE_ADDR)
                            || DECODE(SCC.CTY_ADDR,         null, '', ',' || SCC.CTY_ADDR)
                            || DECODE(SCC.ST_CD,            null, '', ' ' || SCC.ST_CD)
                            || DECODE(SCC.POST_CD,          null, '', ' ' || SCC.POST_CD) CUR_LOC_ADDR
                FROM 
                    SVC_MACH_MSTR SMM
                    ,SELL_TO_CUST BSC
                    ,SELL_TO_CUST CSC
                    ,BILL_TO_CUST BCC
                    ,SHIP_TO_CUST SCC
                    ,SVC_CONFIG_MSTR SCM
                    ,MDL_NM MN
                    ,SVC_PHYS_MTR_READ SMR
                    ,MTR_LB ML
                    ,DS_MTR_READ_TP_GRP MTG
                    ,DS_TEST_COPY_CLS TCC
                    ,AUTH_PSN AP
                    ,MTR_READ_SRC_TP MRS
                    ,DS_MTR_READ_TP MRT
                    <!-- START 2023/05/16 t.aizawa [QC#58675, ADD] -->
                    ,(
                        SELECT
                             CPBMR.SVC_PHYS_MTR_PK
                            ,DCBS.SVC_PHYS_MTR_READ_GRP_SQ
                            ,DCBS.SVC_INV_NUM
                            <!-- START 2023/05/23 t.kimura [QC#58675, ADD] -->
                            ,DCBS.INV_DT
                            <!-- END 2023/05/23 t.kimura [QC#58675, ADD] -->
                        FROM
                             CONTR_PHYS_BLLG_MTR_RELN CPBMR
                            ,DS_CONTR_BLLG_SCHD DCBS
                        WHERE
                                CPBMR.GLBL_CMPY_CD = #glblCmpyCd#
                            AND CPBMR.EZCANCELFLAG= '0'
                            AND CPBMR.GLBL_CMPY_CD = DCBS.GLBL_CMPY_CD(+)
                            AND DCBS.EZCANCELFLAG(+) = '0'
                            AND DCBS.INV_TP_CD(+) &lt;&gt; #invTpCd#
                            AND CPBMR.DS_CONTR_BLLG_MTR_PK = DCBS.DS_CONTR_BLLG_MTR_PK(+)
                     ) SIN
                    <!-- END 2023/05/16 t.aizawa [QC#58675, ADD] -->
                WHERE
                        SMM.GLBL_CMPY_CD        = #glblCmpyCd#
                    AND SMM.SVC_MACH_MSTR_PK    = #svcMachMstrPk#
                    AND SMM.EZCANCELFLAG        = '0'
                    AND SMM.GLBL_CMPY_CD        = BSC.GLBL_CMPY_CD(+)
                    AND SMM.BILL_TO_ACCT_NUM    = BSC.SELL_TO_CUST_CD(+)
                    AND BSC.EZCANCELFLAG(+)     = '0'
                    AND SMM.GLBL_CMPY_CD        = CSC.GLBL_CMPY_CD(+)
                    AND SMM.CUR_LOC_ACCT_NUM    = CSC.SELL_TO_CUST_CD(+)
                    AND CSC.EZCANCELFLAG(+)     = '0'
                    AND SMM.GLBL_CMPY_CD        = BCC.GLBL_CMPY_CD(+)
                    AND SMM.BILL_TO_LOC_NUM     = BCC.BILL_TO_CUST_CD(+)
                    AND BCC.EZCANCELFLAG(+)     = '0'
                    AND SMM.GLBL_CMPY_CD        = SCC.GLBL_CMPY_CD(+)
                    AND SMM.CUR_LOC_NUM         = SCC.SHIP_TO_CUST_CD(+)
                    AND SCC.EZCANCELFLAG(+)     = '0'
                    AND SMM.GLBL_CMPY_CD        = SCM.GLBL_CMPY_CD(+)
                    AND SMM.SVC_CONFIG_MSTR_PK  = SCM.SVC_CONFIG_MSTR_PK(+)
                    AND SCM.EZCANCELFLAG(+)     = '0'
                    AND SCM.GLBL_CMPY_CD        = MN.T_GLBL_CMPY_CD(+)
                    AND SCM.MDL_ID              = MN.T_MDL_ID(+)
                    AND MN.EZCANCELFLAG(+)      = '0'
                    AND SMM.GLBL_CMPY_CD        = SMR.GLBL_CMPY_CD
                    AND SMM.SVC_MACH_MSTR_PK    = SMR.SVC_MACH_MSTR_PK
                    <!-- START 2020/01/24 K.Kitachi [QC#55495, ADD] -->
                    AND SMR.CARRY_OVER_TP_CD    = '0'
                    <!-- END 2020/01/24 K.Kitachi [QC#55495, ADD] -->
                    AND SMR.EZCANCELFLAG        = '0'
                    AND SMR.GLBL_CMPY_CD        = ML.GLBL_CMPY_CD(+)
                    AND SMR.MTR_LB_CD           = ML.MTR_LB_CD(+)
                    AND ML.EZCANCELFLAG(+)      = '0'        
                    AND SMR.GLBL_CMPY_CD        = MTG.GLBL_CMPY_CD(+)
                    AND SMR.DS_MTR_READ_TP_GRP_CD = MTG.DS_MTR_READ_TP_GRP_CD(+)
                    AND MTG.EZCANCELFLAG(+)     = '0'
                    AND SMR.GLBL_CMPY_CD        = TCC.GLBL_CMPY_CD(+)
                    AND SMR.DS_TEST_COPY_CLS_CD = TCC.DS_TEST_COPY_CLS_CD(+)
                    AND TCC.EZCANCELFLAG(+)     = '0'
                    AND SMR.GLBL_CMPY_CD        = AP.GLBL_CMPY_CD(+)
                    AND SMR.RGTN_USR_ID         = AP.USR_NM(+)
                    AND AP.EZCANCELFLAG(+)      = '0'
                    AND SMR.GLBL_CMPY_CD        = MRS.GLBL_CMPY_CD(+)
                    AND SMR.MTR_READ_SRC_TP_CD  = MRS.MTR_READ_SRC_TP_CD(+)
                    AND MRS.EZCANCELFLAG(+)     = '0'
                    AND SMR.GLBL_CMPY_CD        = MRT.GLBL_CMPY_CD(+)
                    AND SMR.DS_MTR_READ_TP_CD   = MRT.DS_MTR_READ_TP_CD(+)
                    AND MRT.EZCANCELFLAG(+)     = '0'
                    <!-- START 2023/05/16 t.aizawa [QC#58675, ADD] -->
                    AND SMR.SVC_PHYS_MTR_PK = SIN.SVC_PHYS_MTR_PK(+)
                    AND SMR.SVC_PHYS_MTR_READ_GRP_SQ = SIN.SVC_PHYS_MTR_READ_GRP_SQ(+)
                    <!-- END 2023/05/16 t.aizawa [QC#58675, ADD] -->
                    <!-- START 2024/04/08 [QC#63540, ADD] -->
                    <isNotNull property="effFromDt">
                    AND SMR.MTR_READ_DT &gt;= #effFromDt#
                    </isNotNull>
                    <isNotNull property ="effThruDt">
                    AND SMR.MTR_READ_DT &lt;= #effThruDt#
                    </isNotNull>
                    <!-- END 2024/04/08 [QC#63540, ADD] -->
                ORDER BY
                    SMM.SER_NUM
                    ,SMR.MTR_READ_DT DESC
                    ,SMR.SVC_PHYS_MTR_READ_GRP_SQ DESC
                    ,ML.MTR_LB_SORT_NUM
        ) X
        WHERE
            ROWNUM &lt;= #rowNum#
    </statement>

    <resultMap id="result.getDownloadList"  class="NSAL0150_FSMsg">
        <result property="serNum_F"                column="SER_NUM"                      javaType="EZDSStringItem"/>
        <result property="mdseCd_F"                column="MDSE_CD"                      javaType="EZDSStringItem"/>
        <result property="t_MdlNm_F"               column="T_MDL_NM"                     javaType="EZDSStringItem"/>
        <result property="mtrLbDescTxt_F"          column="MTR_LB_DESC_TXT"              javaType="EZDSStringItem"/>
        <result property="fill65Txt_F"             column="XX_MTR_READ_TP_GRP_DESC_TXT"  javaType="EZDSStringItem"/>
        <result property="dsMtrReadTpDescTxt_F"    column="DS_MTR_READ_TP_DESC_TXT"      javaType="EZDSStringItem"/>
        <result property="vldMtrFlg_F"             column="VLD_MTR_FLG"                  javaType="EZDSStringItem"/>
        <result property="fill5Txt_F"              column="GRP_NUM"                      javaType="EZDSStringItem"/>
        <result property="xxDtTxt_RE"              column="XX_READ_DT"                   javaType="EZDSStringItem"/>
        <result property="readMtrCnt_F"            column="READ_MTR_CNT"                 javaType="EZDSBigDecimalItem"/>
        <result property="testMtrCnt_F"            column="TEST_MTR_CNT"                 javaType="EZDSBigDecimalItem"/>
        <result property="mtrEntryCmntTxt_F"       column="MTR_ENTRY_CMNT_TXT"           javaType="EZDSStringItem"/>
        <result property="xxEmpNmTxt_F"            column="XX_CRAT_PSN_NM"               javaType="EZDSStringItem"/>
        <result property="xxDtTm_F"                column="XX_CRT_DT"                    javaType="EZDSStringItem"/>
        <result property="mtrReadSrcTpDescTxt_F"   column="MTR_READ_SRC_TP_DESC_TXT"     javaType="EZDSStringItem"/>
        <result property="svcInvNum_F"             column="SVC_INV_NUM"                  javaType="EZDSStringItem"/>
        <result property="xxDtTxt_IN"              column="XX_INV_DT"                    javaType="EZDSStringItem"/>
        <result property="svcTaskNum_F"            column="SVC_TASK_NUM"                 javaType="EZDSStringItem"/>
        <result property="dsTestCopyClsDescTxt_F"  column="DS_TEST_COPY_CLS_DESC_TXT"    javaType="EZDSStringItem"/>
        <result property="billToCustNm_F"          column="BILL_TO_CUST_NM"              javaType="EZDSStringItem"/>
        <result property="xxAllLineAddr_BI"        column="BILL_TO_LOC_ADDR"             javaType="EZDSStringItem"/>
        <result property="curLocAcctNm_F"          column="CUR_LOC_ACCT_NM"              javaType="EZDSStringItem"/>
        <result property="xxAllLineAddr_IN"        column="CUR_LOC_ADDR"                 javaType="EZDSStringItem"/>
    </resultMap>
<!-- END   2018/06/25 T.Ogura [QC#26336,ADD] -->
<!-- START 2018/07/06 T.Tomita [QC#26972,ADD] -->
    <statement id="getTermCondForMach" parameterClass="Map" resultClass="Map">
        SELECT
             A.SVC_TERM_COND_ATTRB_PK    AS SVC_TERM_COND_ATTRB_PK
            ,B.SVC_TERM_ATTRB_DESC_TXT   AS SVC_TERM_ATTRB_DESC_TXT
            ,A.SVC_TERM_ATTRB_MAP_VAL_CD AS SVC_TERM_ATTRB_MAP_VAL_CD
        FROM
             SVC_TERM_COND        A
            ,SVC_TERM_COND_ATTRB  B
        WHERE
            A.GLBL_CMPY_CD           = #glblCmpyCd#
        AND A.EZCANCELFLAG           = '0'
        AND A.DS_CONTR_DTL_PK        = #dsContrDtlPk#
        AND A.GLBL_CMPY_CD           = B.GLBL_CMPY_CD
        AND A.SVC_TERM_COND_ATTRB_PK = B.SVC_TERM_COND_ATTRB_PK
        AND B.EZCANCELFLAG           = '0'
        <iterate property="svcTermCondAttrbList" var="svcTermCondAttrb[]" open="AND B.SVC_TERM_COND_ATTRB_PK IN (" close=")" conjunction=",">
            #svcTermCondAttrb[]#
        </iterate>
        ORDER BY
            B.SVC_TERM_ATTRB_SORT_NUM
    </statement>
    <statement id="getTermCondForContr" parameterClass="Map" resultClass="Map">
        SELECT
             A.SVC_TERM_COND_ATTRB_PK    AS SVC_TERM_COND_ATTRB_PK
            ,B.SVC_TERM_ATTRB_DESC_TXT   AS SVC_TERM_ATTRB_DESC_TXT
            ,A.SVC_TERM_ATTRB_MAP_VAL_CD AS SVC_TERM_ATTRB_MAP_VAL_CD
        FROM
             SVC_TERM_COND        A
            ,SVC_TERM_COND_ATTRB  B
        WHERE
            A.GLBL_CMPY_CD           =  #glblCmpyCd#
        AND A.EZCANCELFLAG           =  '0'
        AND A.DS_CONTR_PK            =  #dsContrPk#
        AND A.DS_CONTR_DTL_PK        IS NULL
        AND A.GLBL_CMPY_CD           =  B.GLBL_CMPY_CD
        AND A.SVC_TERM_COND_ATTRB_PK =  B.SVC_TERM_COND_ATTRB_PK
        AND B.EZCANCELFLAG           =  '0'
        <iterate property="svcTermCondAttrbList" var="svcTermCondAttrb[]" open="AND B.SVC_TERM_COND_ATTRB_PK IN (" close=")" conjunction=",">
            #svcTermCondAttrb[]#
        </iterate>
        ORDER BY
            B.SVC_TERM_ATTRB_SORT_NUM
    </statement>
    <statement id="getMachineSupplyOrderCnt" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            count(*) AS CNT
        FROM
            CPO C
        WHERE
            C.GLBL_CMPY_CD                    = #glblCmpyCd#
        AND C.ORD_HDR_STS_CD                  = #cpoHdrStsCd#
        AND C.EZCANCELFLAG                    = '0'
        AND EXISTS (
            SELECT
                *
            FROM
                CPO_DTL CD
            WHERE
                CD.GLBL_CMPY_CD               = C.GLBL_CMPY_CD
            AND CD.CPO_ORD_NUM                = C.CPO_ORD_NUM
            AND CD.SVC_MACH_MSTR_PK           = #svcMachMstrPk#
            AND CD.EZCANCELFLAG               = '0'
            )
        AND EXISTS (
            SELECT
                *
            FROM
                SVC_SPLY_ORD_TP_RELN SSOTR
            WHERE
                SSOTR.GLBL_CMPY_CD            = C.GLBL_CMPY_CD
            AND SSOTR.DS_ORD_TP_CD            = C.DS_ORD_TP_CD
            AND SSOTR.EZCANCELFLAG            = '0'
            )
    </statement>
    <statement id="getFleetSupplyOrderCnt" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            count(*) AS CNT
        FROM
            CPO C
        WHERE
            C.GLBL_CMPY_CD                    = #glblCmpyCd#
        AND C.ORD_HDR_STS_CD                  = #cpoHdrStsCd#
        AND C.EZCANCELFLAG                    = '0'
        AND EXISTS (
            SELECT
                *
            FROM
                CPO_DTL CD
            WHERE
                CD.GLBL_CMPY_CD               = C.GLBL_CMPY_CD
            AND CD.CPO_ORD_NUM                = C.CPO_ORD_NUM
            AND CD.DS_CONTR_NUM               = #dsContrNum#
            AND CD.EZCANCELFLAG               = '0'
            )
        AND EXISTS (
            SELECT
                *
            FROM
                SVC_SPLY_ORD_TP_RELN SSOTR
            WHERE
                SSOTR.GLBL_CMPY_CD            = C.GLBL_CMPY_CD
            AND SSOTR.DS_ORD_TP_CD            = C.DS_ORD_TP_CD
            AND SSOTR.EZCANCELFLAG            = '0'
            )
    </statement>
<!-- END 2018/07/06 T.Tomita [QC#26972,ADD] -->
<!-- add start 2018/07/09 QC#26923 -->
    <statement id="getSplyReadExclCustCnt" parameterClass="Map" resultMap="BigDecimal">
          SELECT
              COUNT(*)
          FROM
               SVC_MACH_MSTR       A
              ,SPLY_READ_EXCL_CUST B
          WHERE
                  A.GLBL_CMPY_CD                 = #glblCmpyCd#
              AND A.SVC_MACH_MSTR_PK             = #svcMachMstrPk#
              AND A.EZCANCELFLAG                 = '0'
              AND A.GLBL_CMPY_CD                 = B.GLBL_CMPY_CD
              AND (   A.CUR_LOC_ACCT_NUM         = B.DS_ACCT_NUM
                  OR  A.BILL_TO_ACCT_NUM         = B.DS_ACCT_NUM
                  OR  A.OWNR_ACCT_NUM            = B.DS_ACCT_NUM)
              AND B.ACTV_FLG                     = 'Y'
              AND B.EFF_FROM_DT                  &lt;= #slsDt#
              AND NVL(B.EFF_THRU_DT, #slsDt#)    &gt;= #slsDt#
              AND B.EZCANCELFLAG                 = '0'
    </statement>
<!-- add end 2018/07/09 QC#26923 -->
<!-- START 2018/09/26 K.Kojima [QC#28388,ADD] -->
    <statement id="getRollOverExchReadCnt" parameterClass="Map" resultMap="BigDecimal">
        SELECT
            COUNT(*)
        FROM
            SVC_PHYS_MTR_READ A
        WHERE
                A.GLBL_CMPY_CD     = #glblCmpyCd#
            AND A.SVC_MACH_MSTR_PK = #svcMachMstrPk#
            AND A.CNTR_RESET_TP_CD IS NOT NULL
            <!-- add start 2020/04/24 QC#56678 -->
            AND A.CARRY_OVER_TP_CD = '0'
            <!-- add end 2020/04/24 QC#56678 -->
            AND A.EZCANCELFLAG     = '0'
    </statement>
<!-- END 2018/09/26 K.Kojima [QC#28388,ADD] -->
<!-- START 2018/10/15 K.Kitachi [QC#28652, ADD] -->
    <statement id="convLineBizTpToSvcLineBiz" parameterClass="Map" resultClass="String">
        SELECT
            RELN.SVC_LINE_BIZ_CD
        FROM
            SVC_LINE_BIZ_RELN RELN
        WHERE
                RELN.GLBL_CMPY_CD   = #glblCmpyCd#
            AND RELN.LINE_BIZ_TP_CD = #lineBizTpCd#
            AND RELN.EZCANCELFLAG   = '0'
    </statement>
<!-- END 2018/10/15 K.Kitachi [QC#28652, ADD] -->
<!-- START 2018/10/16 K.Kojima [QC#28392-1, ADD] -->
    <statement id="getStartReadInvoiceThruDt" parameterClass="Map" resultClass="Map">
        SELECT
             SPMR.SVC_PHYS_MTR_READ_PK
            ,MAX(DCBS.BLLG_SCHD_THRU_DT) AS BLLG_SCHD_THRU_DT
        FROM
             SVC_PHYS_MTR_READ  SPMR
            ,DS_CONTR_BLLG_SCHD DCBS
        WHERE
                SPMR.GLBL_CMPY_CD     = #glblCmpyCd#
            AND SPMR.SVC_MACH_MSTR_PK = #svcMachMstrPk#
            AND SPMR.VLD_MTR_FLG      = 'Y'
            AND SPMR.DS_CONTR_DTL_PK IS NOT NULL
            AND SPMR.EZCANCELFLAG     = '0'
            AND SPMR.GLBL_CMPY_CD     = DCBS.GLBL_CMPY_CD
            AND SPMR.DS_CONTR_DTL_PK  = DCBS.DS_CONTR_DTL_PK
            AND DCBS.INV_FLG          = 'Y'
            AND DCBS.USG_CHRG_FLG     = 'Y'
            AND DCBS.EZCANCELFLAG     = '0'
        GROUP BY
             SPMR.SVC_PHYS_MTR_READ_PK
    </statement>
<!-- END 2018/10/16 K.Kojima [QC#28392-1, ADD] -->
<!-- START 2018/12/13 S.Kitamura [QC#28860,ADD] -->
    <statement id="getPrimaryMeterEntryContr" parameterClass="Map" resultClass="Map">
        SELECT 
            DTL.DS_CONTR_PK
           ,DTL.DS_CONTR_DTL_PK
           ,DTL.MTR_READ_METH_CD
        FROM
            DS_CONTR_BLLG_SCHD Z
           ,DS_CONTR CONTR
           ,DS_CONTR_DTL DTL
        WHERE
            Z.GLBL_CMPY_CD          =     #glblCmpyCd#
        <iterate property="dsContrDtlPkList" var="dsContrDtlPkList[]" open="AND Z.DS_CONTR_DTL_PK IN (" close=")" conjunction=",">
            #dsContrDtlPkList[]#
        </iterate>
        AND Z.EZCANCELFLAG          =     '0'
        AND Z.USG_CHRG_FLG          =     'Y'
        AND Z.DS_BLLG_SCHD_STS_CD   =     #dsBllgSchdStsCd#
        AND Z.NEXT_BLLG_DT          &lt;  #slsDt#
        AND Z.BLLG_SCHD_THRU_DT     &lt;= #slsDt#
        AND TO_CHAR(TO_DATE(Z.BLLG_SCHD_THRU_DT, #dateFormat#) + #windowDays#, #dateFormat#) &gt;= #slsDt#
        AND Z.DS_CONTR_DTL_PK       = DTL.DS_CONTR_DTL_PK
        AND DTL.DS_CONTR_PK         = CONTR.DS_CONTR_PK
        ORDER BY 
            Z.BLLG_SCHD_THRU_DT           DESC
           ,TO_NUMBER(CONTR.DS_CONTR_NUM) ASC
    </statement>
    <statement id="getMinDsContrNumContr" parameterClass="Map" resultClass="Map">
        SELECT
            C.DS_CONTR_PK
           ,C.DS_CONTR_DTL_PK
           ,C.MTR_READ_METH_CD
        FROM 
            DS_CONTR_DTL C
           ,DS_CONTR D
        WHERE 
        <iterate property="dsContrDtlPkList" var="dsContrDtlPkList[]" open="C.DS_CONTR_DTL_PK IN (" close=")" conjunction=",">
            #dsContrDtlPkList[]#
        </iterate>
        AND C.DS_CONTR_PK       = D.DS_CONTR_PK
        AND D.DS_CONTR_NUM      = 
        (
        SELECT MIN(TO_NUMBER(B.DS_CONTR_NUM))
        FROM 
            DS_CONTR_DTL A
           ,DS_CONTR B 
        WHERE
        <iterate property="dsContrDtlPkList" var="dsContrDtlPkList[]" open="A.DS_CONTR_DTL_PK IN (" close=")" conjunction=",">
            #dsContrDtlPkList[]#
        </iterate>
        AND A.GLBL_CMPY_CD      = #glblCmpyCd#
        AND A.EZCANCELFLAG      = '0'
        AND A.DS_CONTR_PK       = B.DS_CONTR_PK
        ) 
    </statement>
<!-- END 2018/12/13 S.Kitamura [QC#28860,ADD] -->
<!-- START 2019/04/09 K.Kitachi [QC#31089, ADD] -->
    <statement id="getSvcMemoCnt" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
            SVC_MEMO A
        WHERE
                A.GLBL_CMPY_CD     = #glblCmpyCd#
            AND A.SVC_MACH_MSTR_PK = #svcMachMstrPk#
            AND A.SVC_MEMO_CATG_CD = #svcMemoCatgCd#
            AND A.EZCANCELFLAG     = '0'
    </statement>
<!-- END 2019/04/09 K.Kitachi [QC#31089, ADD] -->
<!-- START 2020/03/03 [QC#56123, ADD] -->
    <statement id="getMaxUpTm" parameterClass="Map" resultClass="Map">
        SELECT
            *
        FROM
            (
<!-- START 2023/09/11 R.Jin [QC#61851, MOD] -->
<!--                SELECT-->
                SELECT /*+ INDEX(A SVC_PHYS_MTR_READ_I1) */
<!-- END 2023/09/11 R.Jin [QC#61851, MOD] -->
                    A.EZUPTIME
                   ,A.EZUPTIMEZONE
                FROM
                    SVC_PHYS_MTR_READ      A
                WHERE
                        A.GLBL_CMPY_CD      = #glblCmpyCd#
                    AND A.EZCANCELFLAG      = '0'
                    AND A.SVC_MACH_MSTR_PK  = #svcMachMstrPk#
                ORDER BY
                     A.EZUPTIME  DESC
            ) XX
        WHERE
            ROWNUM = 1
    </statement>
    <statement id="getMaxInvThruDt" parameterClass="Map" resultClass="Map">
        SELECT
             MAX(B.BLLG_SCHD_THRU_DT) MAX_INV_THRU_DT
        FROM
            DS_CONTR_DTL       A
           ,DS_CONTR_BLLG_SCHD B
        WHERE
                A.GLBL_CMPY_CD      = #glblCmpyCd#
            AND A.EZCANCELFLAG      = '0'
            AND A.GLBL_CMPY_CD      = B.GLBL_CMPY_CD
            AND B.EZCANCELFLAG      = '0'
            AND A.SVC_MACH_MSTR_PK  = #svcMachMstrPk#
            AND A.DS_CONTR_DTL_PK   = B.DS_CONTR_DTL_PK
            AND B.USG_CHRG_FLG      = 'Y'
            AND B.INV_FLG           = 'Y'
    </statement>
<!-- END 2019/20/03/03 [QC#56123, ADD] -->

<!-- START 2024/01/25 T.Kawasue [QC#63467, ADD] -->
    <statement id="getDsContrCtrlStsNm" parameterClass="Map" resultMap="String">
        SELECT
            CASE
                WHEN     DCDV.DS_CONTR_CTRL_STS_CD = #entered#
                    AND  SMM.SVC_MACH_MSTR_STS_CD  = #w4i#
                THEN 'Pending Installation'
                WHEN     DCDV.DS_CONTR_CTRL_STS_CD = #dsContrCtrlStsCdActive#
                    AND (
                        SELECT
                            COUNT(*)
                        FROM
                            DS_CONTR_PRC_EFF       DCPE
                           ,DS_CONTR_PRC_EFF_STS_V DCPESV
                        WHERE
                                DCPE.GLBL_CMPY_CD           = DCD.GLBL_CMPY_CD
                            AND DCPE.DS_CONTR_DTL_PK        = DCD.DS_CONTR_DTL_PK
                            AND DCPE.EZCANCELFLAG           = '0'
                            AND DCPE.GLBL_CMPY_CD           = DCPESV.GLBL_CMPY_CD
                            AND DCPE.DS_CONTR_PRC_EFF_PK    = DCPESV.DS_CONTR_PRC_EFF_PK
                            AND DCPESV.DS_CONTR_CTRL_STS_CD = #dsContrCtrlStsCdRenewalHoldForPO#
                            AND DCPESV.EZCANCELFLAG         = '0'
                        ) &gt; 0
                 THEN #activePendingPO#
                 WHEN     DCDV.DS_CONTR_CTRL_STS_CD = #dsContrCtrlStsCdActive#
                    AND (
                        SELECT
                            COUNT(*)
                        FROM
                            DS_CONTR_PRC_EFF       DCPE
                           ,DS_CONTR_PRC_EFF_STS_V DCPESV
                        WHERE
                                DCPE.GLBL_CMPY_CD           = DCD.GLBL_CMPY_CD
                            AND DCPE.DS_CONTR_DTL_PK        = DCD.DS_CONTR_DTL_PK
                            AND DCPE.EZCANCELFLAG           = '0'
                            AND DCPE.GLBL_CMPY_CD           = DCPESV.GLBL_CMPY_CD
                            AND DCPE.DS_CONTR_PRC_EFF_PK    = DCPESV.DS_CONTR_PRC_EFF_PK
                            AND DCPESV.DS_CONTR_CTRL_STS_CD = #dsContrCtrlStsCdRenewalHold#
                            AND DCPESV.EZCANCELFLAG         = '0'
                        ) &gt; 0
                 THEN #activeRenewalHoldContrStsNm#
                 WHEN     DCDV.QLTY_ASRN_HLD_FLG    = 'N'
                    AND  DCD.MAN_TRMN_TP_CD         = #manTrmnTpCd#
                 THEN #allPeriodTermination#
                 ELSE DCDV.DS_CONTR_CTRL_STS_NM
                 END AS DS_CONTR_CTRL_STS_NM
        FROM
            DS_CONTR_DTL        DCD
           ,SVC_MACH_MSTR       SMM
           ,DS_CONTR_DTL_STS_V  DCDV
        WHERE
                DCD.DS_CONTR_DTL_PK     =    #dsContrDtlPk#
            AND DCD.GLBL_CMPY_CD        =    #glblCmpyCd#
            AND DCD.EZCANCELFLAG        =    '0'
            AND SMM.SVC_MACH_MSTR_PK    =    #svcMachMstrPk#
            AND DCD.SVC_MACH_MSTR_PK    =    SMM.SVC_MACH_MSTR_PK(+)
            AND DCD.GLBL_CMPY_CD        =    SMM.GLBL_CMPY_CD(+)
            AND DCD.EZCANCELFLAG        =    SMM.EZCANCELFLAG(+)
            AND DCD.GLBL_CMPY_CD        =    DCDV.GLBL_CMPY_CD
            AND DCD.DS_CONTR_DTL_PK     =    DCDV.DS_CONTR_DTL_PK
            AND DCD.EZCANCELFLAG        =    DCDV.EZCANCELFLAG
    </statement>
<!-- END 2024/01/25 T.Kawasue [QC#63467, ADD] -->
<!-- START 2024/03/26 K.Watanabe [QC#63549, ADD -->
    <statement id="getFinalReadPeriod" parameterClass="Map" resultClass="Integer">
        WITH MAX_DT AS(
            SELECT
                B.DS_CONTR_PK                      AS DS_CONTR_PK
               ,A.DS_CONTR_BLLG_MTR_PK             AS DS_CONTR_BLLG_MTR_PK
               ,MAX(A.BLLG_SCHD_THRU_DT)           AS MAX_DT
            FROM
                DS_CONTR_BLLG_SCHD A
               ,DS_CONTR_DTL B
            WHERE
                    A.EZCANCELFLAG                 = '0'
                AND A.GLBL_CMPY_CD                 = #glblCmpyCd#
                AND A.USG_CHRG_FLG                 = #usgChrgFlg#
                AND A.SKIP_RECOV_TP_CD      &lt;&gt; #skipRecovTp#
                AND A.DS_BLLG_SCHD_STS_CD   &lt;&gt; #dsBllgSchdStsCd#
                AND A.GLBL_CMPY_CD                 = B.GLBL_CMPY_CD
                AND A.DS_CONTR_DTL_PK              = B.DS_CONTR_DTL_PK
                AND B.EZCANCELFLAG                 = '0'
                AND B.SVC_MACH_MSTR_PK             = #svcMachMstrPk#
            GROUP BY
                B.DS_CONTR_PK
               ,A.DS_CONTR_BLLG_MTR_PK
        ), CHECK_DT AS(
            SELECT
                DISTINCT
                DC.DS_CONTR_PK                     AS DS_CONTR_PK
               ,DCBL.DS_CONTR_BLLG_MTR_PK          AS DS_CONTR_BLLG_MTR_PK
               ,DCB.DS_CONTR_BLLG_SCHD_PK          AS DS_CONTR_BLLG_SCHD_PK
               ,TO_CHAR(TO_DATE(MD.MAX_DT, #dateFormat#) - (DECODE(DCBL.BLLG_MTR_BLLG_CYCLE_CD, #months#, COALESCE(DWD.MTR_READ_WIN_MLY_DAYS_AOT, DWD2.MTR_READ_WIN_MLY_DAYS_AOT, #mtrReadWinMlyDaysAot#, #defBefDays#), COALESCE(DWD.MTR_READ_WIN_OTH_DAYS_AOT, DWD2.MTR_READ_WIN_OTH_DAYS_AOT, #mtrReadWinOthDaysAot#, #defBefDays#))), #dateFormat#) AS INTAVAL_DT
            FROM
                DS_CONTR_BLLG_SCHD                 DCB
               ,DS_CONTR_BLLG_MTR                  DCBL
               ,DS_CONTR_DTL                       DCD
               ,DS_CONTR                           DC
               ,DS_WIN_DAYS                        DWD
               ,DS_WIN_DAYS                        DWD2
               ,MAX_DT                             MD
            WHERE
                    DCB.GLBL_CMPY_CD                        =   #glblCmpyCd#
                AND DCB.DS_CONTR_BLLG_MTR_PK                =   MD.DS_CONTR_BLLG_MTR_PK
                AND DCB.BLLG_SCHD_THRU_DT                   =   MD.MAX_DT
                AND DCB.GLBL_CMPY_CD                        =   DCBL.GLBL_CMPY_CD
                AND DCB.DS_CONTR_BLLG_MTR_PK                =   DCBL.DS_CONTR_BLLG_MTR_PK
                AND DCBL.GLBL_CMPY_CD                       =   DCD.GLBL_CMPY_CD
                AND DCBL.DS_CONTR_DTL_PK                    =   DCD.DS_CONTR_DTL_PK
                AND DCD.GLBL_CMPY_CD                        =   DC.GLBL_CMPY_CD
                AND DCD.DS_CONTR_PK                         =   DC.DS_CONTR_PK
                AND DCB.GLBL_CMPY_CD                        =   DWD.GLBL_CMPY_CD(+)
                AND SUBSTR(DCB.BLLG_SCHD_THRU_DT, 0, 6)     =   DWD.DS_WIN_DAYS_TRGT_PER_TXT(+)
                AND DC.SVC_LINE_BIZ_CD                      =   DWD.SVC_LINE_BIZ_CD(+)
                AND DCB.GLBL_CMPY_CD                        =   DWD2.GLBL_CMPY_CD(+)
                AND SUBSTR(DCB.BLLG_SCHD_THRU_DT, 0, 6)     =   DWD2.DS_WIN_DAYS_TRGT_PER_TXT(+)
                AND DWD2.SVC_LINE_BIZ_CD(+)                 =   #svcLineBizCd#
                AND DCB.EZCANCELFLAG                        =   '0'
                AND DCD.EZCANCELFLAG                        =   '0'
                AND DC.EZCANCELFLAG                         =   '0'
                AND DCBL.EZCANCELFLAG                       =   '0'
                AND DWD.EZCANCELFLAG(+)                     =   '0'
                AND DWD2.EZCANCELFLAG(+)                    =   '0'
        )
        SELECT
            COUNT(MD.MAX_DT)
        FROM
            CHECK_DT CD
           ,MAX_DT MD
        WHERE
                CD.INTAVAL_DT                  &lt;= #mtrReadDt#
            AND MD.MAX_DT                      &gt;= #mtrReadDt#
            AND CD.DS_CONTR_PK                     = MD.DS_CONTR_PK
            AND CD.DS_CONTR_BLLG_MTR_PK            = MD.DS_CONTR_BLLG_MTR_PK
    </statement>
<!-- END 2024/03/26 K.Watanabe [QC#63549, ADD] -->
</sqlMap>
