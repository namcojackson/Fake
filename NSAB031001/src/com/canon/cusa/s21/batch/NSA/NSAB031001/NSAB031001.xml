<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<sqlMap namespace="NSAB031001">
<!-- 2018/07/17 Start Mod QC#25959 -->
    <statement id="getBaseChrg" parameterClass="Map" resultClass="Map">
        <!-- START 2022/09/20 [QC#60070,ADD] -->
        <!-- START 2023/05/09 K.Kitachi [QC#61469, DEL] -->
<!--        WITH DEF_WIN_DAYS AS ( -->
<!--                SELECT -->
<!--                      A.SVC_BLLG_CALC_WIN_DAYS_AOT -->
<!--                FROM -->
<!--                     DS_WIN_DAYS A -->
<!--                WHERE -->
<!--                        A.GLBL_CMPY_CD             = #glblCmpyCd# -->
<!--                    AND A.EZCANCELFLAG             = '0' -->
<!--                    AND A.DS_WIN_DAYS_TRGT_PER_TXT = '*' -->
<!--                    AND A.SVC_LINE_BIZ_CD          = '*' -->
<!--            ) -->
        <!-- END 2023/05/09 K.Kitachi [QC#61469, DEL] -->
        <!-- END   2022/09/20 [QC#60070,ADD] -->
        SELECT
            *
        FROM
        (
            SELECT
                 ''                            AS SVC_CONTR_BLLG_PK
                ,C.DS_CONTR_PK                 AS DS_CONTR_PK
                ,C.DS_CONTR_DTL_PK             AS DS_CONTR_DTL_PK
                ,#bllgCpltStsCdCR#             AS BLLG_CPLT_STS_CD
                ,'N'                           AS BLLG_APVL_REQ_FLG
                ,'Y'                           AS BLLG_APVL_CPLT_FLG
                ,''                            AS BLLG_APVL_PSN_CD
                ,CASE
                    WHEN C.CONTR_CLO_DAY = #day0# OR C.CONTR_CLO_DAY = #day99# THEN 'Y'
                    ELSE 'N'
                 END                           AS MTH_END_CLO_FLG
                ,C.CONTR_CLO_DAY               AS CONTR_CLO_DAY
                ,A.BLLG_SCHD_FROM_DT           AS SVC_CONTR_BLLG_FROM_DT
                ,A.BLLG_SCHD_THRU_DT           AS SVC_CONTR_BLLG_THRU_DT
                ,C.BASE_BLLG_TMG_CD            AS BASE_BLLG_TMG_CD
                ,E.BLLG_CYCLE_MTH_AOT          AS BASE_BLLG_CYCLE_MTH_AOT
                ,NVL(A.RVS_SCHD_DT, A.NEXT_BLLG_DT)
                                               AS BASE_BLLG_NEXT_BLLG_DT
                ,C.BASE_BLLG_LAST_BLLG_DT      AS BASE_BLLG_LAST_BLLG_DT
                ,C.BASE_INV_UP_TO_DT           AS BASE_BLLG_INV_UP_TO_DT
                ,''                            AS MTR_BLLG_TMG_CD
                ,''                            AS MTR_BLLG_CYCLE_MTH_AOT
                ,''                            AS MTR_BLLG_NEXT_BLLG_DT
                ,''                            AS MTR_BLLG_LAST_BLLG_DT
                ,''                            AS MTR_BLLG_INV_UP_TO_DT
                ,D.CCY_CD                      AS CCY_CD
                ,C.SVC_MACH_MSTR_PK            AS SVC_MACH_MSTR_PK
                ,C.CONTR_CLO_DT                AS CONTR_CLO_DT
                ,'Y'                           AS BASE_CHRG_FLG
                ,'N'                           AS USG_CHRG_FLG
                ,''                            AS SELL_TO_CUST_CD
                ,CASE
                    WHEN A.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCdFLEET# THEN 'Y'
                    ELSE 'N'
                 END                           AS FLEET_CALC_FLG
                ,''                            AS PRNT_SVC_CONTR_BLLG_PK
                ,D.DS_CONTR_CATG_CD            AS DS_CONTR_CATG_CD
                ,A.RVS_SCHD_DT                 AS OVRD_NEXT_BLLG_DT
                ,'N'                           AS BLLG_RE_PROC_FLG
                ,''                            AS BLLG_RE_PROC_PSN_CD
                ,''                            AS PREV_SVC_CONTR_BLLG_PK
                ,''                            AS LAST_MTR_READ_TS
                ,A.DS_CONTR_BLLG_SCHD_PK       AS DS_CONTR_BLLG_SCHD_PK
                ,D.DS_ACCT_NUM                 AS DS_ACCT_NUM
                ,CASE
                    WHEN A.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCdAGG# THEN 'Y'
                    ELSE 'N'
                 END                           AS AGGR_CALC_FLG
                ,''                            AS ORIG_SVC_INV_NUM
                ,''                            AS SVC_CR_REBIL_PK
                ,''                            AS SVC_CR_REBIL_DTL_PK
                ,A.INV_TP_CD                   AS INV_TP_CD
                ,''                            AS DS_CONTR_BLLG_MTR_PK
                ,''                            AS SVC_CONTR_BLLG_GRP_SQ
                ,'N'                           AS BLLG_CALC_EST_FLG
                ,'N'                           AS ADDL_CHRG_FLG
                ,''                            AS ADDL_CHRG_BLLG_NEXT_BLLG_DT
                ,''                            AS ADDL_CHRG_INV_UP_TO_DT
                ,C.BASE_BILL_TO_CUST_CD        AS BILL_TO_CUST_CD
                ,D.PRC_ALLOC_BY_MACH_QTY_FLG   AS PRC_ALLOC_BY_MACH_QTY_FLG
                ,A.DS_CONTR_BLLG_SCHD_SMRY_PK  AS DS_CONTR_BLLG_SCHD_SMRY_PK
                ,A.NEXT_BLLG_DT                AS NEXT_BLLG_DT
                ,C.DS_CONTR_DTL_STS_CD         AS DS_CONTR_DTL_STS_CD
                ,D.DS_CONTR_NUM                AS DS_CONTR_NUM
                ,A.PRNT_DS_CONTR_BLLG_SCHD_PK  AS PRNT_DS_CONTR_BLLG_SCHD_PK
                ,CASE
                    WHEN I.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCdAGG# THEN 1
                    ELSE I.DS_CONTR_DTL_TP_SORT_NUM
                 END SORT_NUM
                <!-- START 2017/12/01 K.Kojima [QC#17495,ADD] -->
                ,NULL                          AS MTR_ENTRY_CPLT_FLG
                ,NULL                          AS SVC_PHYS_MTR_READ_GRP_SQ
                <!-- END 2017/12/01 K.Kojima [QC#17495,ADD] -->
                <!-- START 2018/08/29 K.Kojima [QC#28012,MOD] -->
                ,NULL                          AS CALC_BLLG_SCHD_FROM_DT
                <!-- END 2018/08/29 K.Kojima [QC#28012,MOD] -->
            FROM
                 DS_CONTR_BLLG_SCHD    A
                ,DS_BLLG_SCHD_TP       B
                ,DS_CONTR_DTL          C
                ,DS_CONTR              D
                ,BLLG_CYCLE            E
                ,DS_CONTR_DTL_TP       I
                <!-- START 2022/09/20 [QC#60070,ADD] -->
                ,DS_WIN_DAYS           J
                <!-- END   2022/09/20 [QC#60070,ADD] -->
                <!-- START 2023/02/09 S.Naya [QC#60045, ADD] -->
                ,DS_WIN_DAYS           K
                <!-- END   2023/02/09 S.Naya [QC#60045, ADD] -->
            WHERE
                    A.EZCANCELFLAG               = '0'
                AND A.GLBL_CMPY_CD               = #glblCmpyCd#
            <isNull property="bllgStageFlg">
                AND A.BLLG_STAGE_FLG             = 'N'
            </isNull>
            <isNotNull property="bllgStageFlg">
                AND A.BLLG_STAGE_FLG             = 'Y'
            </isNotNull>
                AND A.BLLBL_FLG                  = 'Y'
                AND A.BASE_CHRG_FLG              = 'Y'
                AND A.DS_BLLG_SCHD_STS_CD        = #dsBllgSchdStsCdOpen#
                <!-- START 2022/09/20 [QC#60070,ADD] -->
                AND D.GLBL_CMPY_CD               = J.GLBL_CMPY_CD(+)
                AND J.EZCANCELFLAG(+)            = '0'
                AND J.DS_WIN_DAYS_TRGT_PER_TXT(+)= SUBSTR(#salesDate#, 0, 6)
                AND D.SVC_LINE_BIZ_CD            = J.SVC_LINE_BIZ_CD(+)
                <!-- END   2022/09/20 [QC#60070,ADD] -->
                <!-- START 2023/02/09 S.Naya [QC#60045, ADD] -->
                AND D.GLBL_CMPY_CD               = K.GLBL_CMPY_CD(+)
                AND K.EZCANCELFLAG(+)            = '0'
                AND K.DS_WIN_DAYS_TRGT_PER_TXT(+)= SUBSTR(#salesDate#, 0, 6)
                AND K.SVC_LINE_BIZ_CD(+)         = '*'
                <!-- END   2023/02/09 S.Naya [QC#60045, ADD] -->
                AND (
                            (
                                    C.BASE_BLLG_TMG_CD                  =     #advance#
                                AND
                                    <!-- START 2022/09/20 [QC#60070,MOD] -->
                                    <!-- NVL(A.RVS_SCHD_DT, A.NEXT_BLLG_DT)  &lt;= #nextBllgDt# -->
                                    <!-- START 2023/02/09 S.Naya [QC#60045, MOD] -->
                                    <!-- NVL(A.RVS_SCHD_DT, A.NEXT_BLLG_DT)  &lt;= TO_CHAR(TO_DATE(#salesDate#, #formatYMD#) + COALESCE(J.SVC_BLLG_CALC_WIN_DAYS_AOT, (SELECT SVC_BLLG_CALC_WIN_DAYS_AOT FROM DEF_WIN_DAYS), #defWinDays#), #formatYMD#) -->
                                    <!-- START 2023/05/09 K.Kitachi [QC#61469, MOD] -->
                                    <!-- NVL(A.RVS_SCHD_DT, A.NEXT_BLLG_DT)  &lt;= TO_CHAR(TO_DATE(#salesDate#, #formatYMD#) + COALESCE(J.SVC_BLLG_CALC_WIN_DAYS_AOT, K.SVC_BLLG_CALC_WIN_DAYS_AOT, (SELECT SVC_BLLG_CALC_WIN_DAYS_AOT FROM DEF_WIN_DAYS), #defWinDays#), #formatYMD#) -->
                                    NVL(A.RVS_SCHD_DT, A.NEXT_BLLG_DT)  &lt;= TO_CHAR(TO_DATE(#salesDate#, #formatYMD#) + COALESCE(J.SVC_BLLG_CALC_WIN_DAYS_AOT, K.SVC_BLLG_CALC_WIN_DAYS_AOT, #svcBllgCalcWinDaysAot#, #defWinDays#), #formatYMD#)
                                    <!-- END 2023/05/09 K.Kitachi [QC#61469, MOD] -->
                                    <!-- END   2023/02/09 S.Naya [QC#60045, MOD] -->
                                    <!-- END   2022/09/20 [QC#60070,MOD] -->
                            )
                        OR  (
                                    C.BASE_BLLG_TMG_CD                  =     #arrears#
                                AND
                                    <!-- START 2022/09/20 [QC#60070,MOD] -->
                                    <!-- A.BLLG_SCHD_THRU_DT                 &lt;= #nextBllgDt# -->
                                    <!-- START 2023/02/09 S.Naya [QC#60045, MOD] -->
                                    <!-- A.BLLG_SCHD_THRU_DT                 &lt;= TO_CHAR(TO_DATE(#salesDate#, #formatYMD#) + COALESCE(J.SVC_BLLG_CALC_WIN_DAYS_AOT, (SELECT SVC_BLLG_CALC_WIN_DAYS_AOT FROM DEF_WIN_DAYS), #defWinDays#), #formatYMD#) -->
                                    <!-- START 2023/05/09 K.Kitachi [QC#61469, MOD] -->
                                    <!-- A.BLLG_SCHD_THRU_DT                 &lt;= TO_CHAR(TO_DATE(#salesDate#, #formatYMD#) + COALESCE(J.SVC_BLLG_CALC_WIN_DAYS_AOT, K.SVC_BLLG_CALC_WIN_DAYS_AOT, (SELECT SVC_BLLG_CALC_WIN_DAYS_AOT FROM DEF_WIN_DAYS), #defWinDays#), #formatYMD#) -->
                                    A.BLLG_SCHD_THRU_DT                 &lt;= TO_CHAR(TO_DATE(#salesDate#, #formatYMD#) + COALESCE(J.SVC_BLLG_CALC_WIN_DAYS_AOT, K.SVC_BLLG_CALC_WIN_DAYS_AOT, #svcBllgCalcWinDaysAot#, #defWinDays#), #formatYMD#)
                                    <!-- END 2023/05/09 K.Kitachi [QC#61469, MOD] -->
                                    <!-- END   2023/02/09 S.Naya [QC#60045, MOD] -->
                                    <!-- END   2022/09/20 [QC#60070,MOD] -->
                            )
                    )
    <!--         <isNull property="prntDsContrBllgSchdPk">         -->
    <!--             AND A.PRNT_DS_CONTR_BLLG_SCHD_PK IS NULL      -->
    <!--         </isNull>                                         -->
    <!-- START 2018/05/13 U.Kim [QC#25639, ADD] -->
            <isNull property="prntDsContrBllgSchdPk">
                AND (
                            A.PRNT_DS_CONTR_BLLG_SCHD_PK IS NULL
                        OR  (
                                    A.PRNT_DS_CONTR_BLLG_SCHD_PK IS NOT NULL 
                                AND 
                                    EXISTS
                                        (
                                        SELECT
                                            1
                                        FROM
                                            DS_CONTR_BLLG_SCHD DCBS
                                        WHERE
                                            A.GLBL_CMPY_CD               = DCBS.GLBL_CMPY_CD
                                        AND A.PRNT_DS_CONTR_BLLG_SCHD_PK = DCBS.DS_CONTR_BLLG_SCHD_PK
                                        AND DCBS.BLLG_STAGE_FLG          = 'Y'
                                        AND DCBS.BASE_CHRG_FLG           = 'Y'
                                        AND DCBS.EZCANCELFLAG            = '0'
                                        )
                            )
                    )
            </isNull>
    <!-- END 2018/05/13 U.Kim [QC#25639, ADD] -->
            <isNotNull property="prntDsContrBllgSchdPk">
                AND A.PRNT_DS_CONTR_BLLG_SCHD_PK = #prntDsContrBllgSchdPk#
            </isNotNull>
                AND B.EZCANCELFLAG               = '0'
                AND A.GLBL_CMPY_CD               = B.GLBL_CMPY_CD
                AND A.DS_BLLG_SCHD_TP_CD         = B.DS_BLLG_SCHD_TP_CD
                AND C.EZCANCELFLAG               = '0'
                AND A.GLBL_CMPY_CD               = C.GLBL_CMPY_CD
                AND A.DS_CONTR_DTL_PK            = C.DS_CONTR_DTL_PK
                AND D.EZCANCELFLAG               = '0'
                AND C.GLBL_CMPY_CD               = D.GLBL_CMPY_CD
                AND C.DS_CONTR_PK                = D.DS_CONTR_PK
            <iterate property="dsContrDtlStsCdList" var="dsContrDtlStsCd[]" open="AND C.DS_CONTR_DTL_STS_CD NOT IN (" conjunction= "," close=")">
                #dsContrDtlStsCd[]#
            </iterate>
    <!-- START 2017/09/19 K.Kim [QC#21066, ADD] -->
                AND C.QLTY_ASRN_HLD_FLG          = 'N'
    <!-- END 2017/09/19 K.Kim [QC#21066, ADD] -->
                <!-- START 2022/02/04 K.Kitachi [QC#59684, ADD] -->
                AND (
                        C.MAN_TRMN_TP_CD         IS NULL
                    OR
                        C.MAN_TRMN_TP_CD         &lt;&gt; #manTrmnTpCd#
                    )
                <!-- END 2022/02/04 K.Kitachi [QC#59684, ADD] -->
                AND E.EZCANCELFLAG               = '0'
                AND A.GLBL_CMPY_CD               = E.GLBL_CMPY_CD
                AND A.BLLG_CYCLE_CD              = E.BLLG_CYCLE_CD
            <isNull property="prntDsContrBllgSchdPk">
                AND EXISTS(
                <!-- START 2018/07/24 T.Wada [QC#27263, MOD] -->
                <!--
                        SELECT
                            *
                        FROM
                            DUAL
                        WHERE
                            MOD(
                                NVL(
                                    (SELECT
                                         F.SELL_TO_CUST_PK
                                     FROM
                                         SELL_TO_CUST F
                                     WHERE
                                         F.EZCANCELFLAG    = '0'
                                     AND F.GLBL_CMPY_CD    = D.GLBL_CMPY_CD
                                     AND F.SELL_TO_CUST_CD = D.DS_ACCT_NUM)
                                ,0)
                            ,#multiCnt#) = #usrVar1#
                 -->
                        SELECT
                             1
                         FROM
                             SELL_TO_CUST A
                         WHERE
                             A.EZCANCELFLAG    = '0'
                         AND A.GLBL_CMPY_CD    = D.GLBL_CMPY_CD
                         AND A.SELL_TO_CUST_CD = D.DS_ACCT_NUM
                         AND MOD(NVL(A.SELL_TO_CUST_PK,0),#multiCnt#) = #usrVar1#
                <!-- END 2018/07/24 T.Wada [QC#27263, MOD] -->
                )
                AND (CASE WHEN D.DS_CONTR_CATG_CD = #dsContrCatgCdAGG# THEN
                             CASE WHEN
                                  EXISTS(
                                      SELECT
                                          *
                                      FROM
                                          DS_CONTR_DTL    G
                                         ,DS_CONTR_DTL_TP H
                                      WHERE
                                              G.GLBL_CMPY_CD         = C.GLBL_CMPY_CD
                                          AND G.PRNT_DS_CONTR_DTL_PK = C.DS_CONTR_DTL_PK
                                          AND G.EZCANCELFLAG         = '0'
                                          <iterate property="dsContrDtlStsCdList" var="dsContrDtlStsCd[]" open="AND G.DS_CONTR_DTL_STS_CD NOT IN (" conjunction= "," close=")">
                                              #dsContrDtlStsCd[]#
                                          </iterate>
                                          AND H.GLBL_CMPY_CD         = G.GLBL_CMPY_CD
                                          AND H.DS_CONTR_DTL_TP_CD   = G.DS_CONTR_DTL_TP_CD
                                          AND H.BASE_CHRG_FLG        = 'Y'
                                          AND H.MAIN_UNIT_LINE_FLG   = 'Y'
                                          AND H.EZCANCELFLAG         = '0'
                                  )
                                  THEN 1
                                  ELSE 0
                             END
                          ELSE 1
                     END) = 1
            </isNull>
                AND C.GLBL_CMPY_CD       = I.GLBL_CMPY_CD
                AND C.DS_CONTR_DTL_TP_CD = I.DS_CONTR_DTL_TP_CD
                AND I.EZCANCELFLAG       = '0'
            <isNull property="prntDsContrBllgSchdPk">
            UNION
            SELECT
                ''                            AS SVC_CONTR_BLLG_PK
                ,C.DS_CONTR_PK                 AS DS_CONTR_PK
                ,C.DS_CONTR_DTL_PK             AS DS_CONTR_DTL_PK
                ,#bllgCpltStsCdCR#             AS BLLG_CPLT_STS_CD
                ,'N'                           AS BLLG_APVL_REQ_FLG
                ,'Y'                           AS BLLG_APVL_CPLT_FLG
                ,''                            AS BLLG_APVL_PSN_CD
                ,CASE
                    WHEN C.CONTR_CLO_DAY = #day0# OR C.CONTR_CLO_DAY = #day99# THEN 'Y'
                    ELSE 'N'
                 END                           AS MTH_END_CLO_FLG
                ,C.CONTR_CLO_DAY               AS CONTR_CLO_DAY
                ,A.BLLG_SCHD_FROM_DT           AS SVC_CONTR_BLLG_FROM_DT
                ,A.BLLG_SCHD_THRU_DT           AS SVC_CONTR_BLLG_THRU_DT
                ,C.BASE_BLLG_TMG_CD            AS BASE_BLLG_TMG_CD
                ,E.BLLG_CYCLE_MTH_AOT          AS BASE_BLLG_CYCLE_MTH_AOT
                ,NVL(A.RVS_SCHD_DT, A.NEXT_BLLG_DT)
                                               AS BASE_BLLG_NEXT_BLLG_DT
                ,C.BASE_BLLG_LAST_BLLG_DT      AS BASE_BLLG_LAST_BLLG_DT
                ,C.BASE_INV_UP_TO_DT           AS BASE_BLLG_INV_UP_TO_DT
                ,''                            AS MTR_BLLG_TMG_CD
                ,''                            AS MTR_BLLG_CYCLE_MTH_AOT
                ,''                            AS MTR_BLLG_NEXT_BLLG_DT
                ,''                            AS MTR_BLLG_LAST_BLLG_DT
                ,''                            AS MTR_BLLG_INV_UP_TO_DT
                ,D.CCY_CD                      AS CCY_CD
                ,C.SVC_MACH_MSTR_PK            AS SVC_MACH_MSTR_PK
                ,C.CONTR_CLO_DT                AS CONTR_CLO_DT
                ,'Y'                           AS BASE_CHRG_FLG
                ,'N'                           AS USG_CHRG_FLG
                ,''                            AS SELL_TO_CUST_CD
                ,CASE
                    WHEN A.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCdFLEET# THEN 'Y'
                    ELSE 'N'
                 END                           AS FLEET_CALC_FLG
                ,''                            AS PRNT_SVC_CONTR_BLLG_PK
                ,D.DS_CONTR_CATG_CD            AS DS_CONTR_CATG_CD
                ,A.RVS_SCHD_DT                 AS OVRD_NEXT_BLLG_DT
                ,'N'                           AS BLLG_RE_PROC_FLG
                ,''                            AS BLLG_RE_PROC_PSN_CD
                ,''                            AS PREV_SVC_CONTR_BLLG_PK
                ,''                            AS LAST_MTR_READ_TS
                ,A.DS_CONTR_BLLG_SCHD_PK       AS DS_CONTR_BLLG_SCHD_PK
                ,D.DS_ACCT_NUM                 AS DS_ACCT_NUM
                ,CASE
                    WHEN A.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCdAGG# THEN 'Y'
                    ELSE 'N'
                 END                           AS AGGR_CALC_FLG
                ,''                            AS ORIG_SVC_INV_NUM
                ,''                            AS SVC_CR_REBIL_PK
                ,''                            AS SVC_CR_REBIL_DTL_PK
                ,A.INV_TP_CD                   AS INV_TP_CD
                ,''                            AS DS_CONTR_BLLG_MTR_PK
                ,''                            AS SVC_CONTR_BLLG_GRP_SQ
                ,'N'                           AS BLLG_CALC_EST_FLG
                ,'N'                           AS ADDL_CHRG_FLG
                ,''                            AS ADDL_CHRG_BLLG_NEXT_BLLG_DT
                ,''                            AS ADDL_CHRG_INV_UP_TO_DT
                ,C.BASE_BILL_TO_CUST_CD        AS BILL_TO_CUST_CD
                ,D.PRC_ALLOC_BY_MACH_QTY_FLG   AS PRC_ALLOC_BY_MACH_QTY_FLG
                ,A.DS_CONTR_BLLG_SCHD_SMRY_PK  AS DS_CONTR_BLLG_SCHD_SMRY_PK
                ,A.NEXT_BLLG_DT                AS NEXT_BLLG_DT
                ,C.DS_CONTR_DTL_STS_CD         AS DS_CONTR_DTL_STS_CD
                ,D.DS_CONTR_NUM                AS DS_CONTR_NUM
                ,A.PRNT_DS_CONTR_BLLG_SCHD_PK  AS PRNT_DS_CONTR_BLLG_SCHD_PK
                ,CASE
                    WHEN I.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCdAGG# THEN 1
                    ELSE I.DS_CONTR_DTL_TP_SORT_NUM
                 END SORT_NUM
                ,NULL                          AS MTR_ENTRY_CPLT_FLG
                ,NULL                          AS SVC_PHYS_MTR_READ_GRP_SQ
                <!-- START 2018/08/29 K.Kojima [QC#28012,MOD] -->
                ,CASE
                    WHEN A.SVC_CR_REBIL_PK IS NOT NULL
                    THEN A.BLLG_SCHD_FROM_DT
                    ELSE NULL
                 END                           AS CALC_BLLG_SCHD_FROM_DT
                <!-- END 2018/08/29 K.Kojima [QC#28012,MOD] -->
            FROM
                 DS_CONTR_BLLG_SCHD    A
                ,DS_BLLG_SCHD_TP       B
                ,DS_CONTR_DTL          C
                ,DS_CONTR              D
                ,BLLG_CYCLE            E
                ,DS_CONTR_DTL_TP       I
                <!-- START 2022/09/20 [QC#60070,ADD] -->
                ,DS_WIN_DAYS           J
                <!-- END   2022/09/20 [QC#60070,ADD] -->
                <!-- START 2023/02/09 S.Naya [QC#60045, ADD] -->
                ,DS_WIN_DAYS           K
                <!-- END   2023/02/09 S.Naya [QC#60045, ADD] -->
            WHERE
                    A.EZCANCELFLAG               = '0'
                AND A.GLBL_CMPY_CD               = #glblCmpyCd#
                <!-- START 2018/08/29 K.Kojima [QC#28012,MOD] -->
                <!-- AND A.BLLG_STAGE_FLG             = 'Y' -->
                AND (
                       A.BLLG_STAGE_FLG          = 'Y'
                    OR A.INV_FLG                 = 'Y'
                    )
                <!-- END 2018/08/29 K.Kojima [QC#28012,MOD] -->
                AND A.BLLBL_FLG                  = 'Y'
                AND A.BASE_CHRG_FLG              = 'Y'
                AND A.DS_BLLG_SCHD_STS_CD        = #dsBllgSchdStsCdClose#
                <!-- START 2022/09/20 [QC#60070,ADD] -->
                AND D.GLBL_CMPY_CD               = J.GLBL_CMPY_CD(+)
                AND J.EZCANCELFLAG(+)            = '0'
                AND J.DS_WIN_DAYS_TRGT_PER_TXT(+)= SUBSTR(#salesDate#, 0, 6)
                AND D.SVC_LINE_BIZ_CD            = J.SVC_LINE_BIZ_CD(+)
                <!-- END   2022/09/20 [QC#60070,ADD] -->
                <!-- START 2023/02/09 S.Naya [QC#60045, ADD] -->
                AND D.GLBL_CMPY_CD               = K.GLBL_CMPY_CD(+)
                AND K.EZCANCELFLAG(+)            = '0'
                AND K.DS_WIN_DAYS_TRGT_PER_TXT(+)= SUBSTR(#salesDate#, 0, 6)
                AND K.SVC_LINE_BIZ_CD(+)         = '*'
                <!-- END   2023/02/09 S.Naya [QC#60045, ADD] -->
                AND (
                            (
                                    C.BASE_BLLG_TMG_CD                  =     #advance#
                                AND
                                    <!-- START 2022/09/20 [QC#60070,MOD] -->
                                    <!-- NVL(A.RVS_SCHD_DT, A.NEXT_BLLG_DT)  &lt;= #nextBllgDt# -->
                                    <!-- START 2023/02/09 S.Naya [QC#60045, MOD] -->
                                    <!-- NVL(A.RVS_SCHD_DT, A.NEXT_BLLG_DT)  &lt;= TO_CHAR(TO_DATE(#salesDate#, #formatYMD#) + COALESCE(J.SVC_BLLG_CALC_WIN_DAYS_AOT, (SELECT SVC_BLLG_CALC_WIN_DAYS_AOT FROM DEF_WIN_DAYS), #defWinDays#), #formatYMD#) -->
                                    <!-- START 2023/05/09 K.Kitachi [QC#61469, MOD] -->
                                    <!-- NVL(A.RVS_SCHD_DT, A.NEXT_BLLG_DT)  &lt;= TO_CHAR(TO_DATE(#salesDate#, #formatYMD#) + COALESCE(J.SVC_BLLG_CALC_WIN_DAYS_AOT, K.SVC_BLLG_CALC_WIN_DAYS_AOT, (SELECT SVC_BLLG_CALC_WIN_DAYS_AOT FROM DEF_WIN_DAYS), #defWinDays#), #formatYMD#) -->
                                    NVL(A.RVS_SCHD_DT, A.NEXT_BLLG_DT)  &lt;= TO_CHAR(TO_DATE(#salesDate#, #formatYMD#) + COALESCE(J.SVC_BLLG_CALC_WIN_DAYS_AOT, K.SVC_BLLG_CALC_WIN_DAYS_AOT, #svcBllgCalcWinDaysAot#, #defWinDays#), #formatYMD#)
                                    <!-- END 2023/05/09 K.Kitachi [QC#61469, MOD] -->
                                    <!-- END   2023/02/09 S.Naya [QC#60045, MOD] -->
                                    <!-- END   2022/09/20 [QC#60070,MOD] -->
                            )
                        OR  (
                                    C.BASE_BLLG_TMG_CD                  =     #arrears#
                                AND
                                    <!-- START 2022/09/20 [QC#60070,MOD] -->
                                    <!-- A.BLLG_SCHD_THRU_DT                 &lt;= #nextBllgDt# -->
                                    <!-- START 2023/02/09 S.Naya [QC#60045, MOD] -->
                                    <!-- A.BLLG_SCHD_THRU_DT                 &lt;= TO_CHAR(TO_DATE(#salesDate#, #formatYMD#) + COALESCE(J.SVC_BLLG_CALC_WIN_DAYS_AOT, (SELECT SVC_BLLG_CALC_WIN_DAYS_AOT FROM DEF_WIN_DAYS), #defWinDays#), #formatYMD#) -->
                                    <!-- START 2023/05/09 K.Kitachi [QC#61469, MOD] -->
                                    <!-- A.BLLG_SCHD_THRU_DT                 &lt;= TO_CHAR(TO_DATE(#salesDate#, #formatYMD#) + COALESCE(J.SVC_BLLG_CALC_WIN_DAYS_AOT, K.SVC_BLLG_CALC_WIN_DAYS_AOT, (SELECT SVC_BLLG_CALC_WIN_DAYS_AOT FROM DEF_WIN_DAYS), #defWinDays#), #formatYMD#) -->
                                    A.BLLG_SCHD_THRU_DT                 &lt;= TO_CHAR(TO_DATE(#salesDate#, #formatYMD#) + COALESCE(J.SVC_BLLG_CALC_WIN_DAYS_AOT, K.SVC_BLLG_CALC_WIN_DAYS_AOT, #svcBllgCalcWinDaysAot#, #defWinDays#), #formatYMD#)
                                    <!-- END 2023/05/09 K.Kitachi [QC#61469, MOD] -->
                                    <!-- END   2023/02/09 S.Naya [QC#60045, MOD] -->
                                    <!-- END   2022/09/20 [QC#60070,MOD] -->
                            )
                    )
                AND EXISTS (
                             SELECT
                                 *
                             FROM
                                 DS_CONTR_BLLG_SCHD    X
                             WHERE
                                      X.GLBL_CMPY_CD               = A.GLBL_CMPY_CD
                                  AND X.PRNT_DS_CONTR_BLLG_SCHD_PK = A.DS_CONTR_BLLG_SCHD_PK
                                  AND X.BLLG_STAGE_FLG             = 'N'
                                  <!-- START 2018/08/29 K.Kojima [QC#28012,ADD] -->
                                  AND X.INV_FLG                    = 'N'
                                  <!-- END 2018/08/29 K.Kojima [QC#28012,ADD] -->
                                  AND X.EZCANCELFLAG               = '0'
                              )
                <!-- START 2018/08/29 K.Kojima [QC#28012,ADD] -->
                AND EXISTS(
                        SELECT
                             1
                         FROM
                             SELL_TO_CUST STC
                         WHERE
                             STC.EZCANCELFLAG                           = '0'
                         AND STC.GLBL_CMPY_CD                           = D.GLBL_CMPY_CD
                         AND STC.SELL_TO_CUST_CD                        = D.DS_ACCT_NUM
                         AND MOD(NVL(STC.SELL_TO_CUST_PK,0),#multiCnt#) = #usrVar1#
                )
                <!-- END 2018/08/29 K.Kojima [QC#28012,ADD] -->
                AND B.EZCANCELFLAG               = '0'
                AND A.GLBL_CMPY_CD               = B.GLBL_CMPY_CD
                AND A.DS_BLLG_SCHD_TP_CD         = B.DS_BLLG_SCHD_TP_CD
                AND C.EZCANCELFLAG               = '0'
                AND A.GLBL_CMPY_CD               = C.GLBL_CMPY_CD
                AND A.DS_CONTR_DTL_PK            = C.DS_CONTR_DTL_PK
                AND D.EZCANCELFLAG               = '0'
                AND D.DS_CONTR_CATG_CD              = #dsContrCatgCdAGG#
                AND C.GLBL_CMPY_CD               = D.GLBL_CMPY_CD
                AND C.DS_CONTR_PK                = D.DS_CONTR_PK
            <iterate property="dsContrDtlStsCdList" var="dsContrDtlStsCd[]" open="AND C.DS_CONTR_DTL_STS_CD NOT IN (" conjunction= "," close=")">
                #dsContrDtlStsCd[]#
            </iterate>
                AND C.QLTY_ASRN_HLD_FLG          = 'N'
                <!-- START 2022/02/04 K.Kitachi [QC#59684, ADD] -->
                AND (
                        C.MAN_TRMN_TP_CD         IS NULL
                    OR
                        C.MAN_TRMN_TP_CD         &lt;&gt; #manTrmnTpCd#
                    )
                <!-- END 2022/02/04 K.Kitachi [QC#59684, ADD] -->
                AND E.EZCANCELFLAG               = '0'
                AND A.GLBL_CMPY_CD               = E.GLBL_CMPY_CD
                AND A.BLLG_CYCLE_CD              = E.BLLG_CYCLE_CD
                AND C.GLBL_CMPY_CD       = I.GLBL_CMPY_CD
                AND C.DS_CONTR_DTL_TP_CD = I.DS_CONTR_DTL_TP_CD
                AND I.EZCANCELFLAG       = '0'
            </isNull>
            )
        ORDER BY
             DS_CONTR_NUM
            ,SORT_NUM
            ,DS_CONTR_DTL_PK
            ,NEXT_BLLG_DT
<!-- 2018/07/17 End  Mod QC#25959 -->
    </statement>

    <statement id="getUsgChrg" parameterClass="Map" resultClass="Map">
        <!-- START 2022/09/20 [QC#60070,ADD] -->
        <!-- START 2023/05/09 K.Kitachi [QC#61469, DEL] -->
<!--        WITH DEF_WIN_DAYS AS ( -->
<!--                SELECT -->
<!--                      A.SVC_BLLG_CALC_WIN_DAYS_AOT -->
<!--                FROM -->
<!--                     DS_WIN_DAYS A -->
<!--                WHERE -->
<!--                        A.GLBL_CMPY_CD             = #glblCmpyCd# -->
<!--                    AND A.EZCANCELFLAG             = '0' -->
<!--                    AND A.DS_WIN_DAYS_TRGT_PER_TXT = '*' -->
<!--                    AND A.SVC_LINE_BIZ_CD          = '*' -->
<!--            ) -->
        <!-- END 2023/05/09 K.Kitachi [QC#61469, DEL] -->
        <!-- END   2022/09/20 [QC#60070,ADD] -->
        SELECT
             ''                            AS SVC_CONTR_BLLG_PK
            ,C.DS_CONTR_PK                 AS DS_CONTR_PK
            ,C.DS_CONTR_DTL_PK             AS DS_CONTR_DTL_PK
            ,#bllgCpltStsCdCR#             AS BLLG_CPLT_STS_CD
            ,'N'                           AS BLLG_APVL_REQ_FLG
            ,'Y'                           AS BLLG_APVL_CPLT_FLG
            ,''                            AS BLLG_APVL_PSN_CD
            ,CASE
                WHEN C.CONTR_CLO_DAY = #day0# OR C.CONTR_CLO_DAY = #day99# THEN 'Y'
                ELSE 'N'
             END                           AS MTH_END_CLO_FLG
            ,C.MTR_CLO_DAY                 AS CONTR_CLO_DAY
            ,A.BLLG_SCHD_FROM_DT           AS SVC_CONTR_BLLG_FROM_DT
            ,A.BLLG_SCHD_THRU_DT           AS SVC_CONTR_BLLG_THRU_DT
            ,''                            AS BASE_BLLG_TMG_CD
            ,''                            AS BASE_BLLG_CYCLE_MTH_AOT
            ,''                            AS BASE_BLLG_NEXT_BLLG_DT
            ,''                            AS BASE_BLLG_LAST_BLLG_DT
            ,''                            AS BASE_BLLG_INV_UP_TO_DT
            ,C.MTR_BLLG_TMG_CD             AS MTR_BLLG_TMG_CD
            ,F.BLLG_CYCLE_MTH_AOT          AS MTR_BLLG_CYCLE_MTH_AOT
            ,NVL(A.RVS_SCHD_DT, A.NEXT_BLLG_DT)
                                           AS MTR_BLLG_NEXT_BLLG_DT
            ,E.MTR_BLLG_LAST_BLLG_DT       AS MTR_BLLG_LAST_BLLG_DT
            ,E.MTR_INV_UP_TO_DT            AS MTR_BLLG_INV_UP_TO_DT
            ,D.CCY_CD                      AS CCY_CD
            ,C.SVC_MACH_MSTR_PK            AS SVC_MACH_MSTR_PK
            ,C.CONTR_CLO_DT                AS CONTR_CLO_DT
            ,'N'                           AS BASE_CHRG_FLG
            ,'Y'                           AS USG_CHRG_FLG
            ,''                            AS SELL_TO_CUST_CD
            ,CASE
                WHEN A.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCdFLEET# THEN 'Y'
                ELSE 'N'
             END                           AS FLEET_CALC_FLG
            ,''                            AS PRNT_SVC_CONTR_BLLG_PK
            ,D.DS_CONTR_CATG_CD            AS DS_CONTR_CATG_CD
            ,A.RVS_SCHD_DT                 AS OVRD_NEXT_BLLG_DT
            ,'N'                           AS BLLG_RE_PROC_FLG
            ,''                            AS BLLG_RE_PROC_PSN_CD
            ,''                            AS PREV_SVC_CONTR_BLLG_PK
            ,''                            AS LAST_MTR_READ_TS
            ,A.DS_CONTR_BLLG_SCHD_PK       AS DS_CONTR_BLLG_SCHD_PK
            ,D.DS_ACCT_NUM                 AS DS_ACCT_NUM
            ,CASE
                WHEN A.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCdAGG# THEN 'Y'
                ELSE 'N'
             END                           AS AGGR_CALC_FLG
            ,''                            AS ORIG_SVC_INV_NUM
            ,''                            AS SVC_CR_REBIL_PK
            ,''                            AS SVC_CR_REBIL_DTL_PK
            ,A.INV_TP_CD                   AS INV_TP_CD
            ,E.DS_CONTR_BLLG_MTR_PK        AS DS_CONTR_BLLG_MTR_PK
            ,''                            AS SVC_CONTR_BLLG_GRP_SQ
            ,'N'                           AS BLLG_CALC_EST_FLG
            ,'N'                           AS ADDL_CHRG_FLG
            ,''                            AS ADDL_CHRG_BLLG_NEXT_BLLG_DT
            ,''                            AS ADDL_CHRG_INV_UP_TO_DT
            ,E.BLLG_MTR_BILL_TO_CUST_CD    AS BILL_TO_CUST_CD
            ,D.PRC_ALLOC_BY_MACH_QTY_FLG   AS PRC_ALLOC_BY_MACH_QTY_FLG
            ,A.DS_CONTR_BLLG_SCHD_SMRY_PK  AS DS_CONTR_BLLG_SCHD_SMRY_PK
            ,A.NEXT_BLLG_DT                AS NEXT_BLLG_DT
            ,D.DS_CONTR_NUM                AS DS_CONTR_NUM
            ,C.DS_CONTR_DTL_STS_CD         AS DS_CONTR_DTL_STS_CD
            ,A.PRNT_DS_CONTR_BLLG_SCHD_PK  AS PRNT_DS_CONTR_BLLG_SCHD_PK
            ,CASE
                WHEN K.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCdAGG# THEN 1
                ELSE K.DS_CONTR_DTL_TP_SORT_NUM
             END SORT_NUM
            <!-- START 2017/12/01 K.Kojima [QC#17495,ADD] -->
            ,A.MTR_ENTRY_CPLT_FLG          AS MTR_ENTRY_CPLT_FLG
            ,A.SVC_PHYS_MTR_READ_GRP_SQ    AS SVC_PHYS_MTR_READ_GRP_SQ
            <!-- END 2017/12/01 K.Kojima [QC#17495,ADD] -->
            <!-- START 2018/08/29 K.Kojima [QC#28012,MOD] -->
            ,NULL                          AS CALC_BLLG_SCHD_FROM_DT
            <!-- END 2018/08/29 K.Kojima [QC#28012,MOD] -->
        FROM
             DS_CONTR_BLLG_SCHD    A
            ,DS_BLLG_SCHD_TP       B
            ,DS_CONTR_DTL          C
            ,DS_CONTR              D
            ,DS_CONTR_BLLG_MTR     E
            ,BLLG_CYCLE            F
            ,DS_CONTR_DTL_TP       K
            <!-- START 2022/09/20 [QC#60070,ADD] -->
            ,DS_WIN_DAYS           L
            <!-- END   2022/09/20 [QC#60070,ADD] -->
            <!-- START 2023/02/09 S.Naya [QC#60045, ADD] -->
            ,DS_WIN_DAYS           M
            <!-- END   2023/02/09 S.Naya [QC#60045, ADD] -->
        WHERE
                A.EZCANCELFLAG               = '0'
            AND A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.BLLG_STAGE_FLG             = 'N'
            AND A.BLLBL_FLG                  = 'Y'
            AND A.USG_CHRG_FLG               = 'Y'
            AND A.DS_BLLG_SCHD_STS_CD        = #dsBllgSchdStsCdOpen#
            <!-- START 2022/09/20 [QC#60070,ADD] -->
            AND D.GLBL_CMPY_CD               = L.GLBL_CMPY_CD(+)
            AND L.EZCANCELFLAG(+)            = '0'
            AND L.DS_WIN_DAYS_TRGT_PER_TXT(+)= SUBSTR(#salesDate#, 0, 6)
            AND D.SVC_LINE_BIZ_CD            = L.SVC_LINE_BIZ_CD(+)
            <!-- END   2022/09/20 [QC#60070,ADD] -->
            <!-- START 2023/02/09 S.Naya [QC#60045, ADD] -->
            AND D.GLBL_CMPY_CD               = M.GLBL_CMPY_CD(+)
            AND M.EZCANCELFLAG(+)            = '0'
            AND M.DS_WIN_DAYS_TRGT_PER_TXT(+)= SUBSTR(#salesDate#, 0, 6)
            AND M.SVC_LINE_BIZ_CD(+)         = '*'
            <!-- END   2023/02/09 S.Naya [QC#60045, ADD] -->
            <!-- START 2022/09/20 [QC#60070,MOD] -->
            <!-- AND A.BLLG_SCHD_THRU_DT          &lt;= #nextBllgDt# -->
            <!-- START 2023/02/09 S.Naya [QC#60045, MOD] -->
            <!-- AND A.BLLG_SCHD_THRU_DT          &lt;= TO_CHAR(TO_DATE(#salesDate#, #formatYMD#) + COALESCE(L.SVC_BLLG_CALC_WIN_DAYS_AOT, (SELECT SVC_BLLG_CALC_WIN_DAYS_AOT FROM DEF_WIN_DAYS), #defWinDays#), #formatYMD#) -->
            <!-- START 2023/05/09 K.Kitachi [QC#61469, MOD] -->
            <!-- AND A.BLLG_SCHD_THRU_DT          &lt;= TO_CHAR(TO_DATE(#salesDate#, #formatYMD#) + COALESCE(L.SVC_BLLG_CALC_WIN_DAYS_AOT, M.SVC_BLLG_CALC_WIN_DAYS_AOT, (SELECT SVC_BLLG_CALC_WIN_DAYS_AOT FROM DEF_WIN_DAYS), #defWinDays#), #formatYMD#) -->
            AND A.BLLG_SCHD_THRU_DT          &lt;= TO_CHAR(TO_DATE(#salesDate#, #formatYMD#) + COALESCE(L.SVC_BLLG_CALC_WIN_DAYS_AOT, M.SVC_BLLG_CALC_WIN_DAYS_AOT, #svcBllgCalcWinDaysAot#, #defWinDays#), #formatYMD#)
            <!-- END 2023/05/09 K.Kitachi [QC#61469, MOD] -->
            <!-- END   2023/02/09 S.Naya [QC#60045, MOD] -->
            <!-- END   2022/09/20 [QC#60070,MOD] -->
        <isNull property="prntDsContrBllgSchdPk">
            AND A.PRNT_DS_CONTR_BLLG_SCHD_PK IS NULL
        </isNull>
        <isNotNull property="prntDsContrBllgSchdPk">
            AND A.PRNT_DS_CONTR_BLLG_SCHD_PK = #prntDsContrBllgSchdPk#
        </isNotNull>
            AND B.EZCANCELFLAG               = '0'
            AND A.GLBL_CMPY_CD               = B.GLBL_CMPY_CD
            AND A.DS_BLLG_SCHD_TP_CD         = B.DS_BLLG_SCHD_TP_CD
            AND C.EZCANCELFLAG               = '0'
            AND A.GLBL_CMPY_CD               = C.GLBL_CMPY_CD
            AND A.DS_CONTR_DTL_PK            = C.DS_CONTR_DTL_PK
            AND D.EZCANCELFLAG               = '0'
            AND C.GLBL_CMPY_CD               = D.GLBL_CMPY_CD
            AND C.DS_CONTR_PK                = D.DS_CONTR_PK
        <iterate property="dsContrDtlStsCdList" var="dsContrDtlStsCd[]" open="AND C.DS_CONTR_DTL_STS_CD NOT IN (" conjunction= "," close=")">
            #dsContrDtlStsCd[]#
        </iterate>
<!-- START 2017/09/19 K.Kim [QC#21066, ADD] -->
            AND C.QLTY_ASRN_HLD_FLG          = 'N'
<!-- END 2017/09/19 K.Kim [QC#21066, ADD] -->
            AND E.EZCANCELFLAG               = '0'
            AND A.GLBL_CMPY_CD               = E.GLBL_CMPY_CD
            AND A.DS_CONTR_BLLG_MTR_PK       = E.DS_CONTR_BLLG_MTR_PK
        <iterate property="dsContrBllgMtrStsCdList" var="dsContrBllgMtrStsCd[]" open="AND E.DS_CONTR_BLLG_MTR_STS_CD NOT IN (" conjunction= "," close=")">
            #dsContrBllgMtrStsCd[]#
        </iterate>
<!-- START 2017/09/19 K.Kim [QC#21066, ADD] -->
            AND E.QLTY_ASRN_HLD_FLG          = 'N'
<!-- END 2017/09/19 K.Kim [QC#21066, ADD] -->
            <!-- START 2022/02/04 K.Kitachi [QC#59684, ADD] -->
            AND (
                    C.MAN_TRMN_TP_CD         IS NULL
                OR
                    C.MAN_TRMN_TP_CD         &lt;&gt; #manTrmnTpCd#
                )
            <!-- END 2022/02/04 K.Kitachi [QC#59684, ADD] -->
            AND F.EZCANCELFLAG               = '0'
            AND A.GLBL_CMPY_CD               = F.GLBL_CMPY_CD
            AND A.BLLG_CYCLE_CD              = F.BLLG_CYCLE_CD
        <isNull property="prntDsContrBllgSchdPk">
            AND EXISTS(
                <!-- START 2018/07/24 T.Wada [QC#27263, MOD] -->
                <!--
                    SELECT
                        *
                    FROM
                        DUAL
                    WHERE
                        MOD(
                            NVL(
                                (SELECT
                                     G.SELL_TO_CUST_PK
                                 FROM
                                     SELL_TO_CUST G
                                 WHERE
                                     G.EZCANCELFLAG    = '0'
                                 AND G.GLBL_CMPY_CD    = D.GLBL_CMPY_CD
                                 AND G.SELL_TO_CUST_CD = D.DS_ACCT_NUM)
                            ,0)
                        ,#multiCnt#) = #usrVar1#
                 -->
                    SELECT
                         1
                    FROM
                        SELL_TO_CUST A
                    WHERE
                        A.EZCANCELFLAG    = '0'
                    AND A.GLBL_CMPY_CD    = D.GLBL_CMPY_CD
                    AND A.SELL_TO_CUST_CD = D.DS_ACCT_NUM
                    AND MOD(NVL(A.SELL_TO_CUST_PK,0),#multiCnt#) = #usrVar1#
            )
            AND (CASE WHEN D.DS_CONTR_CATG_CD = #dsContrCatgCdAGG# OR D.DS_CONTR_CATG_CD = #dsContrCatgCdFLEET# THEN
                         CASE WHEN
                              EXISTS(
                                  SELECT
                                      *
                                  FROM
                                      DS_CONTR_DTL      H
                                     ,DS_CONTR_DTL_TP   I
                                     ,DS_CONTR_BLLG_MTR J
                                  WHERE
                                          H.GLBL_CMPY_CD         = C.GLBL_CMPY_CD
                                      AND H.PRNT_DS_CONTR_DTL_PK = C.DS_CONTR_DTL_PK
                                      AND H.EZCANCELFLAG         = '0'
                                      <iterate property="dsContrDtlStsCdList" var="dsContrDtlStsCd[]" open="AND H.DS_CONTR_DTL_STS_CD NOT IN (" conjunction= "," close=")">
                                          #dsContrDtlStsCd[]#
                                      </iterate>
                                      AND I.GLBL_CMPY_CD         = H.GLBL_CMPY_CD
                                      AND I.DS_CONTR_DTL_TP_CD   = H.DS_CONTR_DTL_TP_CD
                                      AND I.USG_CHRG_FLG         = 'Y'
                                      AND I.EZCANCELFLAG         = '0'
                                      AND J.GLBL_CMPY_CD         = H.GLBL_CMPY_CD
                                      AND J.DS_CONTR_DTL_PK      = H.DS_CONTR_DTL_PK
                                      <iterate property="dsContrBllgMtrStsCdList" var="dsContrBllgMtrStsCd[]" open="AND J.DS_CONTR_BLLG_MTR_STS_CD NOT IN (" conjunction= "," close=")">
                                        #dsContrBllgMtrStsCd[]#
                                      </iterate>
                                      AND J.EZCANCELFLAG         = '0'
                              )
                              THEN 1
                              ELSE 0
                         END
                      ELSE 1
                 END) = 1
        </isNull>
            AND C.GLBL_CMPY_CD       = K.GLBL_CMPY_CD
            AND C.DS_CONTR_DTL_TP_CD = K.DS_CONTR_DTL_TP_CD
            AND K.EZCANCELFLAG       = '0'
        ORDER BY
             D.DS_CONTR_NUM
            ,SORT_NUM
            ,A.DS_CONTR_DTL_PK
            ,E.BLLG_MTR_LB_CD
            ,A.NEXT_BLLG_DT
    </statement>
    <statement id="getInconsistencyRelation" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            DS_CONTR_BLLG_SCHD_PK
        FROM
             DS_CONTR_BLLG_SCHD    A
            ,DS_CONTR_DTL          C
            ,DS_CONTR              D
        WHERE
                A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.EZCANCELFLAG               = '0'
            AND A.BASE_CHRG_FLG              = 'Y'
            AND A.BLLG_STAGE_FLG             = 'Y'
            AND A.INV_FLG                    = 'N'
            AND A.BLLBL_FLG                  = 'Y'
            <!-- START 2019/03/08 K.Kitachi [QC#30619, MOD] -->
            <!-- AND A.PRNT_DS_CONTR_BLLG_SCHD_PK IS NULL -->
            AND (
                    A.PRNT_DS_CONTR_BLLG_SCHD_PK IS NULL
                OR
                    D.DS_CONTR_CATG_CD           = #dsContrCatgCd#
                )
            <!-- END 2019/03/08 K.Kitachi [QC#30619, MOD] -->
            <!-- START 2022/02/04 K.Kitachi [QC#59684, ADD] -->
            AND (
                    C.MAN_TRMN_TP_CD         IS NULL
                OR
                    C.MAN_TRMN_TP_CD         &lt;&gt; #manTrmnTpCd#
                )
            <!-- END 2022/02/04 K.Kitachi [QC#59684, ADD] -->
            AND C.EZCANCELFLAG               = '0'
            AND A.GLBL_CMPY_CD               = C.GLBL_CMPY_CD
            AND A.DS_CONTR_DTL_PK            = C.DS_CONTR_DTL_PK
            AND D.EZCANCELFLAG               = '0'
            AND C.GLBL_CMPY_CD               = D.GLBL_CMPY_CD
            AND C.DS_CONTR_PK                = D.DS_CONTR_PK
            AND EXISTS(
                <!-- START 2018/07/24 T.Wada [QC#27263, MOD] -->
                <!--
                    SELECT
                        *
                    FROM
                        DUAL
                    WHERE
                        MOD(
                            NVL(
                                (SELECT
                                     G.SELL_TO_CUST_PK
                                 FROM
                                     SELL_TO_CUST G
                                 WHERE
                                     G.EZCANCELFLAG    = '0'
                                 AND G.GLBL_CMPY_CD    = D.GLBL_CMPY_CD
                                 AND G.SELL_TO_CUST_CD = D.DS_ACCT_NUM)
                            ,0)
                        ,#multiCnt#) = #usrVar1#
                 -->
                        SELECT
                             1
                         FROM
                             SELL_TO_CUST A
                         WHERE
                             A.EZCANCELFLAG    = '0'
                         AND A.GLBL_CMPY_CD    = D.GLBL_CMPY_CD
                         AND A.SELL_TO_CUST_CD = D.DS_ACCT_NUM
                         AND MOD(NVL(A.SELL_TO_CUST_PK,0),#multiCnt#) = #usrVar1#
                <!-- END 2018/07/24 T.Wada [QC#27263, MOD] -->
            )
            AND (
                    EXISTS (
                        SELECT
                            1
                        FROM
                            DS_CONTR_BLLG_SCHD B
                        WHERE
                                B.GLBL_CMPY_CD                  = A.GLBL_CMPY_CD
                            AND B.EZCANCELFLAG                  = '0'
                            AND B.BASE_CHRG_FLG                 = 'Y'
                            AND B.BLLG_STAGE_FLG                = 'N'
                            AND B.PRNT_DS_CONTR_BLLG_SCHD_PK    = A.DS_CONTR_BLLG_SCHD_PK
                    )
                OR
                    EXISTS (
                        SELECT
                            1
                        FROM
                             DS_CONTR_BLLG_SCHD     C
                            ,DS_CONTR_BLLG_SCHD     D
                        WHERE
                                C.GLBL_CMPY_CD                  = A.GLBL_CMPY_CD
                            AND C.EZCANCELFLAG                  = '0'
                            AND C.PRNT_DS_CONTR_BLLG_SCHD_PK    = A.DS_CONTR_BLLG_SCHD_PK
                            AND D.GLBL_CMPY_CD                  = C.GLBL_CMPY_CD
                            AND D.EZCANCELFLAG                  = '0'
                            AND D.PRNT_DS_CONTR_BLLG_SCHD_PK    = C.DS_CONTR_BLLG_SCHD_PK
                            AND D.BASE_CHRG_FLG                 = 'Y'
                            AND D.BLLG_STAGE_FLG                = 'N'
                    )
                )
    </statement>
    <statement id="getSvcContrBllgPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.SVC_CONTR_BLLG_PK
        FROM
            SVC_CONTR_BLLG A
        WHERE
                A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.DS_CONTR_BLLG_SCHD_PK = #dsContrBllgSchdPk#
    </statement>

    <statement id="getSvcContrBllgGrpSq" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.SVC_CONTR_BLLG_GRP_SQ
        FROM
            SVC_CONTR_BLLG A
        WHERE
                A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.DS_CONTR_BLLG_SCHD_PK = #dsContrBllgSchdPk#
    </statement>

    <statement id="getSvcContrBllgAllocPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.SVC_CONTR_BLLG_ALLOC_PK
        FROM
            SVC_CONTR_BLLG_ALLOC A
        WHERE
                A.EZCANCELFLAG        = '0'
            AND A.GLBL_CMPY_CD        = #glblCmpyCd#
            AND A.SVC_CONTR_BLLG_PK   = #svcContrBllgPk#
    </statement>

    <statement id="getSvcContrBaseBllgPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.SVC_CONTR_BASE_BLLG_PK
        FROM
            SVC_CONTR_BASE_BLLG A
        WHERE
                A.EZCANCELFLAG        = '0'
            AND A.GLBL_CMPY_CD        = #glblCmpyCd#
            AND A.SVC_CONTR_BLLG_PK   = #svcContrBllgPk#
    </statement>

    <statement id="getSvcContrMtrBllgPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.SVC_CONTR_MTR_BLLG_PK
        FROM
            SVC_CONTR_MTR_BLLG A
        WHERE
                A.EZCANCELFLAG        = '0'
            AND A.GLBL_CMPY_CD        = #glblCmpyCd#
            AND A.SVC_CONTR_BLLG_PK   = #svcContrBllgPk#
    </statement>

    <statement id="getSvcContrBllgPkForAddl" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.SVC_CONTR_BLLG_PK
        FROM
            SVC_CONTR_BLLG A
        WHERE
                A.EZCANCELFLAG           = '0'
            AND A.GLBL_CMPY_CD           = #glblCmpyCd#
            AND A.PRNT_SVC_CONTR_BLLG_PK = #prntSvcContrBllgPk#
            AND A.ADDL_CHRG_FLG          = 'Y'
    </statement>

    <statement id="getSvcContrAddlChrgBllgPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.SVC_CONTR_ADDL_CHRG_BLLG_PK
        FROM
            SVC_CONTR_ADDL_CHRG_BLLG A
        WHERE
                A.EZCANCELFLAG       = '0'
            AND A.GLBL_CMPY_CD       = #glblCmpyCd#
            AND A.SVC_CONTR_BLLG_PK  = #svcContrBllgPk#
    </statement>

    <statement id="getFleetReadRollUpPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.FLEET_READ_ROLL_UP_PK
        FROM
            FLEET_READ_ROLL_UP A
        WHERE
                A.EZCANCELFLAG      = '0'
            AND A.GLBL_CMPY_CD      = #glblCmpyCd#
            AND A.PRNT_DS_CONTR_BLLG_SCHD_PK = #prntDsContrBllgSchdPk#
    </statement>

    <statement id="getFleetReadRollUpDtlPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.FLEET_READ_ROLL_UP_DTL_PK
        FROM
            FLEET_READ_ROLL_UP_DTL A
        WHERE
                A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = #glblCmpyCd#
            <iterate property="fleetReadRollUpPkList" var="fleetReadRollUpPk[]" open="AND A.FLEET_READ_ROLL_UP_PK IN (" close=")" conjunction=",">
                #fleetReadRollUpPk[]#
            </iterate>
    </statement>
    <statement id="getAggrUsgRecalPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.AGGR_USG_RECAL_PK
        FROM
            AGGR_USG_RECAL A
        WHERE
                A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.SVC_CONTR_BLLG_GRP_SQ = #svcContrBllgGrpSq#
    </statement>

    <statement id="getAggrUsgRecalDtlPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.AGGR_USG_RECAL_DTL_PK
        FROM
            AGGR_USG_RECAL_DTL A
        WHERE
                A.EZCANCELFLAG      = '0'
            AND A.GLBL_CMPY_CD      = #glblCmpyCd#
            AND A.AGGR_USG_RECAL_PK = #aggrUsgRecalPk#
    </statement>

    <statement id="getAggrUsgRecalXsMtrPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.AGGR_USG_RECAL_XS_MTR_PK
        FROM
            AGGR_USG_RECAL_XS_MTR A
        WHERE
                A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.AGGR_USG_RECAL_DTL_PK = #aggrUsgRecalDtlPk#
    </statement>

    <!-- START 2017/12/01 K.Kojima [QC#17495,ADD] -->
    <statement id="countFutureMeterEntrySchedule" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
             DS_CONTR_BLLG_SCHD DCBS1
            ,DS_CONTR_BLLG_SCHD DCBS2
        WHERE
                DCBS1.GLBL_CMPY_CD              = #glblCmpyCd#
            AND DCBS1.DS_CONTR_BLLG_SCHD_PK     = #dsContrBllgSchdPk#
            AND DCBS1.EZCANCELFLAG              = '0'
            AND DCBS1.GLBL_CMPY_CD              = DCBS2.GLBL_CMPY_CD
            AND DCBS1.DS_CONTR_DTL_PK           = DCBS2.DS_CONTR_DTL_PK
            AND DCBS1.NEXT_BLLG_DT          &lt; DCBS2.NEXT_BLLG_DT
            AND DCBS2.INV_TP_CD                 = '1'
            AND DCBS2.DS_CONTR_PRC_EFF_PK IS NOT NULL
            AND DCBS2.USG_CHRG_FLG              = 'Y'
            AND DCBS2.MTR_ENTRY_CPLT_FLG        = 'Y'
            AND DCBS2.EZCANCELFLAG              = '0'
    </statement>

    <statement id="getPreNoMeterEntrySchedule" parameterClass="Map" resultClass="Map">
        SELECT
             DCBS_PRE.DS_CONTR_BLLG_SCHD_PK
            ,DCBS_PRE.BLLG_SCHD_THRU_DT
        FROM
             DS_CONTR_BLLG_SCHD DCBS_CUR
            ,DS_CONTR_BLLG_SCHD DCBS_PRE
        WHERE
                DCBS_CUR.GLBL_CMPY_CD              = #glblCmpyCd#
            AND DCBS_CUR.DS_CONTR_BLLG_SCHD_PK     = #dsContrBllgSchdPk#
            AND DCBS_CUR.EZCANCELFLAG              = '0'
            AND DCBS_CUR.GLBL_CMPY_CD              = DCBS_PRE.GLBL_CMPY_CD
            AND DCBS_CUR.DS_CONTR_DTL_PK           = DCBS_PRE.DS_CONTR_DTL_PK
            AND DCBS_CUR.DS_CONTR_BLLG_MTR_PK      = DCBS_PRE.DS_CONTR_BLLG_MTR_PK
            AND DCBS_CUR.NEXT_BLLG_DT           &gt; DCBS_PRE.NEXT_BLLG_DT
            AND DCBS_PRE.INV_TP_CD                 = '1'
            AND DCBS_PRE.DS_CONTR_PRC_EFF_PK IS NOT NULL
            AND DCBS_PRE.USG_CHRG_FLG              = 'Y'
            <!-- START 2017/12/01 K.Kojima [QC#17495-1,ADD] -->
            AND DCBS_PRE.INV_FLG                    = 'N'
            AND DCBS_PRE.DS_BLLG_SCHD_STS_CD &lt;&gt; #dsBllgSchdStsClose#
            <!-- END 2017/12/01 K.Kojima [QC#17495-1,ADD] -->
            AND DCBS_PRE.MTR_ENTRY_CPLT_FLG        = 'N'
            AND DCBS_PRE.EZCANCELFLAG              = '0'
        ORDER BY
            DCBS_PRE.NEXT_BLLG_DT DESC
    </statement>

    <statement id="getPreNoMeterEntryScheduleForFleet" parameterClass="Map" resultClass="Map">
        SELECT
             DCBS_PRE.DS_CONTR_BLLG_SCHD_PK
            ,DCBS_PRE.BLLG_SCHD_THRU_DT
        FROM
             DS_CONTR_BLLG_SCHD DCBS_CUR
            ,DS_CONTR_BLLG_SCHD DCBS_PRE
            ,DS_CONTR_BLLG_SCHD DCBS_PRNT
        WHERE
                DCBS_CUR.GLBL_CMPY_CD               = #glblCmpyCd#
            AND DCBS_CUR.DS_CONTR_BLLG_SCHD_PK      = #dsContrBllgSchdPk#
            AND DCBS_CUR.EZCANCELFLAG               = '0'
            AND DCBS_CUR.GLBL_CMPY_CD               = DCBS_PRE.GLBL_CMPY_CD
            AND DCBS_CUR.DS_CONTR_DTL_PK            = DCBS_PRE.DS_CONTR_DTL_PK
            AND DCBS_CUR.DS_CONTR_BLLG_MTR_PK       = DCBS_PRE.DS_CONTR_BLLG_MTR_PK
            AND DCBS_CUR.NEXT_BLLG_DT            &gt; DCBS_PRE.NEXT_BLLG_DT
            AND DCBS_PRE.INV_TP_CD                  = '1'
            AND DCBS_PRE.USG_CHRG_FLG               = 'Y'
            <!-- START 2017/12/01 K.Kojima [QC#17495-1,ADD] -->
            AND DCBS_PRE.INV_FLG                    = 'N'
            AND DCBS_PRE.DS_BLLG_SCHD_STS_CD &lt;&gt; #dsBllgSchdStsClose#
            <!-- END 2017/12/01 K.Kojima [QC#17495-1,ADD] -->
            AND DCBS_PRE.MTR_ENTRY_CPLT_FLG         = 'N'
            AND DCBS_PRE.EZCANCELFLAG               = '0'
            AND DCBS_PRE.GLBL_CMPY_CD               = DCBS_PRNT.GLBL_CMPY_CD
            AND DCBS_PRE.PRNT_DS_CONTR_BLLG_SCHD_PK = DCBS_PRNT.DS_CONTR_BLLG_SCHD_PK
            AND DCBS_PRNT.DS_CONTR_PRC_EFF_PK IS NOT NULL
            AND DCBS_PRNT.EZCANCELFLAG              = '0'
        ORDER BY
            DCBS_PRE.NEXT_BLLG_DT DESC
    </statement>

    <statement id="getPreMtrRead" parameterClass="Map" resultClass="Map">
    SELECT
         SPMR2.SVC_PHYS_MTR_READ_PK
        ,SPMR2.SVC_PHYS_MTR_PK
        ,SPMR2.MTR_READ_DT
        ,SPMR2.READ_MTR_CNT
    FROM
         SVC_PHYS_MTR_READ SPMR1
        ,SVC_PHYS_MTR_READ SPMR2
    WHERE
            SPMR1.GLBL_CMPY_CD            = #glblCmpyCd#
        AND SPMR1.SVC_PHYS_MTR_READ_PK    = #svcPhysMtrReadPk#
        AND SPMR1.EZCANCELFLAG            = '0'
        AND SPMR1.GLBL_CMPY_CD            = SPMR2.GLBL_CMPY_CD
        AND SPMR1.SVC_PHYS_MTR_PK         = SPMR2.SVC_PHYS_MTR_PK
        AND SPMR1.MTR_READ_DT          &gt; SPMR2.MTR_READ_DT
        <!-- START 2018/10/18 K.Kojima [QC#28848,ADD] -->
        AND SPMR2.MTR_READ_DT          &lt;= #mtrReadDt#
        <!-- END 2018/10/18 K.Kojima [QC#28848,ADD] -->
        AND SPMR2.VLD_MTR_FLG             = 'Y'
        AND SPMR2.EZCANCELFLAG            = '0'
        <!-- START 2018/10/18 K.Kojima [QC#28848,ADD] -->
        AND (
            SPMR2.DS_CONTR_DTL_PK IS NOT NULL
            OR
            EXISTS(
                SELECT
                    1
                FROM
                    DS_CONTR_BLLG_SCHD DCBS
                WHERE
                        DCBS.GLBL_CMPY_CD             = SPMR2.GLBL_CMPY_CD
                    AND DCBS.SVC_PHYS_MTR_READ_GRP_SQ = SPMR2.SVC_PHYS_MTR_READ_GRP_SQ
                    AND DCBS.EZCANCELFLAG             = '0'
            )
        )
        <!-- END 2018/10/18 K.Kojima [QC#28848,ADD] -->
    ORDER BY
        SPMR2.MTR_READ_DT DESC
    </statement>
    <!-- END 2017/12/01 K.Kojima [QC#17495,ADD] -->
</sqlMap>
