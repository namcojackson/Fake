//This file was automatically generated by Text File Layout Definition Document and XLA200710010.
// Generated on    :20160712181352000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :TextFileLayoutDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NMAL7160F00FMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.file;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NMAL7160F00 File Layout Message class.
 * @author
 * @version XLA200710010
 */
public class NMAL7160F00FMsg extends EZDFMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** CPO_ORD_NUM*/
	public final EZDFStringItem              cpoOrdNum;

    /** DPLY_LINE_NUM*/
	public final EZDFStringItem              dplyLineNum;

    /** INV_NUM*/
	public final EZDFStringItem              invNum;

    /** MDSE_CD*/
	public final EZDFStringItem              mdseCd;

    /** MDSE_DESC_SHORT_TXT*/
	public final EZDFStringItem              mdseDescShortTxt;

    /** CSMP_CONTR_NUM*/
	public final EZDFStringItem              csmpContrNum;

    /** DLR_REF_NUM*/
	public final EZDFStringItem              dlrRefNum;

    /** INV_DT_TXT*/
	public final EZDFStringItem              invDtTxt;


	/**
	 * NMAL7160F00FMsg is constructor.
	 * The initialization when the instance of NMAL7160F00FMsg is generated.
	 */
	public NMAL7160F00FMsg() {
		this(false, -1);
	}

	/**
	 * NMAL7160F00FMsg is constructor.
	 * The initialization when the instance of NMAL7160F00FMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NMAL7160F00FMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		cpoOrdNum = (EZDFStringItem)newItem("cpoOrdNum");
		dplyLineNum = (EZDFStringItem)newItem("dplyLineNum");
		invNum = (EZDFStringItem)newItem("invNum");
		mdseCd = (EZDFStringItem)newItem("mdseCd");
		mdseDescShortTxt = (EZDFStringItem)newItem("mdseDescShortTxt");
		csmpContrNum = (EZDFStringItem)newItem("csmpContrNum");
		dlrRefNum = (EZDFStringItem)newItem("dlrRefNum");
		invDtTxt = (EZDFStringItem)newItem("invDtTxt");
	}

	/**
	 * get the type of array which is stored
	 * @return NMAL7160F00FMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NMAL7160F00FMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"cpoOrdNum", "cpoOrdNum", null, null, TYPE_HANKAKUEISU, "8", null},
	{"dplyLineNum", "dplyLineNum", null, null, TYPE_HANKAKUEISU, "20", null},
	{"invNum", "invNum", null, null, TYPE_HANKAKUEISU, "13", null},
	{"mdseCd", "mdseCd", null, null, TYPE_HANKAKUEISU, "16", null},
	{"mdseDescShortTxt", "mdseDescShortTxt", null, null, TYPE_HANKAKUEISU, "250", null},
	{"csmpContrNum", "csmpContrNum", null, null, TYPE_HANKAKUEISU, "15", null},
	{"dlrRefNum", "dlrRefNum", null, null, TYPE_HANKAKUEISU, "20", null},
	{"invDtTxt", "invDtTxt", null, null, TYPE_HANKAKUEISU, "10", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"CPO_ORD_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cpoOrdNum
        {"DPLY_LINE_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dplyLineNum
        {"INV_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invNum
        {"MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd
        {"MDSE_DESC_SHORT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseDescShortTxt
        {"CSMP_CONTR_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//csmpContrNum
        {"DLR_REF_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dlrRefNum
        {"INV_DT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invDtTxt
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

