//This file was automatically generated by Text File Layout Definition Document and XLA200710010.
// Generated on    :20170530140122000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :TextFileLayoutDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL1050F00FMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.file;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL1050F00 File Layout Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL1050F00FMsg extends EZDFMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** SVC_TERM_ATTRB_DESC_TXT_A*/
	public final EZDFStringItem              svcTermAttrbDescTxt_A;

    /** SVC_TERM_COND_ATTRB_NM_A*/
	public final EZDFStringItem              svcTermCondAttrbNm_A;

    /** SVC_TERM_COND_SRC_DESC_TXT_A*/
	public final EZDFStringItem              svcTermCondSrcDescTxt_A;

    /** SVC_TERM_DATA_TP_DESC_TXT_A*/
	public final EZDFStringItem              svcTermDataTpDescTxt_A;

    /** SVC_TERM_ATTRB_SORT_NUM_A*/
	public final EZDFBigDecimalItem              svcTermAttrbSortNum_A;

    /** SVC_TERM_COND_CATG_DESC_TXT_A*/
	public final EZDFStringItem              svcTermCondCatgDescTxt_A;

    /** XX_CHK_BOX_AC*/
	public final EZDFStringItem              xxChkBox_AC;

    /** XX_CHK_BOX_AM*/
	public final EZDFStringItem              xxChkBox_AM;

    /** XX_CHK_BOX_AA*/
	public final EZDFStringItem              xxChkBox_AA;

    /** CONTR_EFF_FROM_DT_TXT_A*/
	public final EZDFStringItem              contrEffFromDtTxt_A;

    /** CONTR_EFF_THRU_DT_TXT_A*/
	public final EZDFStringItem              contrEffThruDtTxt_A;


	/**
	 * NSAL1050F00FMsg is constructor.
	 * The initialization when the instance of NSAL1050F00FMsg is generated.
	 */
	public NSAL1050F00FMsg() {
		this(false, -1);
	}

	/**
	 * NSAL1050F00FMsg is constructor.
	 * The initialization when the instance of NSAL1050F00FMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL1050F00FMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		svcTermAttrbDescTxt_A = (EZDFStringItem)newItem("svcTermAttrbDescTxt_A");
		svcTermCondAttrbNm_A = (EZDFStringItem)newItem("svcTermCondAttrbNm_A");
		svcTermCondSrcDescTxt_A = (EZDFStringItem)newItem("svcTermCondSrcDescTxt_A");
		svcTermDataTpDescTxt_A = (EZDFStringItem)newItem("svcTermDataTpDescTxt_A");
		svcTermAttrbSortNum_A = (EZDFBigDecimalItem)newItem("svcTermAttrbSortNum_A");
		svcTermCondCatgDescTxt_A = (EZDFStringItem)newItem("svcTermCondCatgDescTxt_A");
		xxChkBox_AC = (EZDFStringItem)newItem("xxChkBox_AC");
		xxChkBox_AM = (EZDFStringItem)newItem("xxChkBox_AM");
		xxChkBox_AA = (EZDFStringItem)newItem("xxChkBox_AA");
		contrEffFromDtTxt_A = (EZDFStringItem)newItem("contrEffFromDtTxt_A");
		contrEffThruDtTxt_A = (EZDFStringItem)newItem("contrEffThruDtTxt_A");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL1050F00FMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL1050F00FMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"svcTermAttrbDescTxt_A", "svcTermAttrbDescTxt_A", "A", null, TYPE_HANKAKUEISU, "50", null},
	{"svcTermCondAttrbNm_A", "svcTermCondAttrbNm_A", "A", null, TYPE_HANKAKUEISU, "30", null},
	{"svcTermCondSrcDescTxt_A", "svcTermCondSrcDescTxt_A", "A", null, TYPE_HANKAKUEISU, "50", null},
	{"svcTermDataTpDescTxt_A", "svcTermDataTpDescTxt_A", "A", null, TYPE_HANKAKUEISU, "50", null},
	{"svcTermAttrbSortNum_A", "svcTermAttrbSortNum_A", "A", null, TYPE_SEISU_SYOSU, "3", "0"},
	{"svcTermCondCatgDescTxt_A", "svcTermCondCatgDescTxt_A", "A", null, TYPE_HANKAKUEISU, "50", null},
	{"xxChkBox_AC", "xxChkBox_AC", "AC", null, TYPE_HANKAKUEIJI, "1", null},
	{"xxChkBox_AM", "xxChkBox_AM", "AM", null, TYPE_HANKAKUEIJI, "1", null},
	{"xxChkBox_AA", "xxChkBox_AA", "AA", null, TYPE_HANKAKUEIJI, "1", null},
	{"contrEffFromDtTxt_A", "contrEffFromDtTxt_A", "A", null, TYPE_HANKAKUEISU, "10", null},
	{"contrEffThruDtTxt_A", "contrEffThruDtTxt_A", "A", null, TYPE_HANKAKUEISU, "10", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"SVC_TERM_ATTRB_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTermAttrbDescTxt_A
        {"SVC_TERM_COND_ATTRB_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTermCondAttrbNm_A
        {"SVC_TERM_COND_SRC_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTermCondSrcDescTxt_A
        {"SVC_TERM_DATA_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTermDataTpDescTxt_A
        {"SVC_TERM_ATTRB_SORT_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTermAttrbSortNum_A
        {"SVC_TERM_COND_CATG_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTermCondCatgDescTxt_A
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_AC
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_AM
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_AA
        {"CONTR_EFF_FROM_DT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrEffFromDtTxt_A
        {"CONTR_EFF_THRU_DT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrEffThruDtTxt_A
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

