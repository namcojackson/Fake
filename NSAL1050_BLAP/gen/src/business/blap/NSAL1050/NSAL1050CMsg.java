//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20170120105443000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSAL1050CMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NSAL1050;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL1050 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL1050CMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** GLBL_CMPY_CD*/
	public final EZDCStringItem              glblCmpyCd;

    /** SLS_DT*/
	public final EZDCDateItem              slsDt;

    /** SVC_TERM_ATTRB_DESC_TXT*/
	public final EZDCStringItem              svcTermAttrbDescTxt;

    /** XX_CHK_BOX_H*/
	public final EZDCStringItem              xxChkBox_H;

    /** SVC_TERM_DATA_TP_CD_1C*/
	public final EZDCStringItemArray              svcTermDataTpCd_1C;

    /** SVC_TERM_DATA_TP_DESC_TXT_1D*/
	public final EZDCStringItemArray              svcTermDataTpDescTxt_1D;

    /** SVC_TERM_COND_CATG_PK_1C*/
	public final EZDCBigDecimalItemArray              svcTermCondCatgPk_1C;

    /** SVC_TERM_COND_CATG_DESC_TXT_1D*/
	public final EZDCStringItemArray              svcTermCondCatgDescTxt_1D;

    /** XX_COMN_COL_ORD_TXT*/
	public final EZDCStringItem              xxComnColOrdTxt;

    /** XX_FILE_DATA*/
	public final EZDCMimeSourceItem              xxFileData;

    /** A*/
	public final business.blap.NSAL1050.NSAL1050_ACMsgArray              A;


	/**
	 * NSAL1050CMsg is constructor.
	 * The initialization when the instance of NSAL1050CMsg is generated.
	 */
	public NSAL1050CMsg() {
		this(false, -1);
	}

	/**
	 * NSAL1050CMsg is constructor.
	 * The initialization when the instance of NSAL1050CMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL1050CMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		glblCmpyCd = (EZDCStringItem)newItem("glblCmpyCd");
		slsDt = (EZDCDateItem)newItem("slsDt");
		svcTermAttrbDescTxt = (EZDCStringItem)newItem("svcTermAttrbDescTxt");
		xxChkBox_H = (EZDCStringItem)newItem("xxChkBox_H");
		svcTermDataTpCd_1C = (EZDCStringItemArray)newItemArray("svcTermDataTpCd_1C");
		svcTermDataTpDescTxt_1D = (EZDCStringItemArray)newItemArray("svcTermDataTpDescTxt_1D");
		svcTermCondCatgPk_1C = (EZDCBigDecimalItemArray)newItemArray("svcTermCondCatgPk_1C");
		svcTermCondCatgDescTxt_1D = (EZDCStringItemArray)newItemArray("svcTermCondCatgDescTxt_1D");
		xxComnColOrdTxt = (EZDCStringItem)newItem("xxComnColOrdTxt");
		xxFileData = (EZDCMimeSourceItem)newItem("xxFileData");
		A = (business.blap.NSAL1050.NSAL1050_ACMsgArray)newMsgArray("A");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL1050CMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL1050CMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"glblCmpyCd", "glblCmpyCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"slsDt", "slsDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"svcTermAttrbDescTxt", "svcTermAttrbDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"xxChkBox_H", "xxChkBox_H", "H", null, TYPE_HANKAKUEIJI, "1", null},
	{"svcTermDataTpCd_1C", "svcTermDataTpCd_1C", "1C", "99", TYPE_HANKAKUEISU, "2", null},
	{"svcTermDataTpDescTxt_1D", "svcTermDataTpDescTxt_1D", "1D", "99", TYPE_HANKAKUEISU, "50", null},
	{"svcTermCondCatgPk_1C", "svcTermCondCatgPk_1C", "1C", "99", TYPE_SEISU_SYOSU, "28", "0"},
	{"svcTermCondCatgDescTxt_1D", "svcTermCondCatgDescTxt_1D", "1D", "99", TYPE_HANKAKUEISU, "50", null},
	{"xxComnColOrdTxt", "xxComnColOrdTxt", null, null, TYPE_HANKAKUEISU, "2000", null},
	{"xxFileData", "xxFileData", null, null, TYPE_UPLOAD, null, null},
	{"A", "A", null, "200", "business.blap.NSAL1050.NSAL1050_ACMsgArray", null, null},
	
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"GLBL_CMPY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//glblCmpyCd
        {"SLS_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//slsDt
        {"SVC_TERM_ATTRB_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTermAttrbDescTxt
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_H
        {"SVC_TERM_DATA_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTermDataTpCd_1C
        {"SVC_TERM_DATA_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTermDataTpDescTxt_1D
        {"SVC_TERM_COND_CATG_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTermCondCatgPk_1C
        {"SVC_TERM_COND_CATG_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTermCondCatgDescTxt_1D
        {"XX_COMN_COL_ORD_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxComnColOrdTxt
        {"XX_FILE_DATA",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxFileData
		null,	//A
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

