//This file was automatically generated by Common Business Component Interface Definition Document and XLA200710010.
// Generated on    :20220328112903000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :CommonBusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSZC046001_xxDsContrPrcEffListPMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.parts;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSZC046001 Common Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSZC046001_xxDsContrPrcEffListPMsg extends EZDPMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_MODE_CD*/
	public final EZDPStringItem              xxModeCd;

    /** DS_CONTR_PRC_EFF_PK*/
	public final EZDPBigDecimalItem              dsContrPrcEffPk;

    /** DS_CONTR_PRC_EFF_SQ_NUM*/
	public final EZDPBigDecimalItem              dsContrPrcEffSqNum;

    /** DS_CONTR_DTL_PK*/
	public final EZDPBigDecimalItem              dsContrDtlPk;

    /** DS_CONTR_BLLG_MTR_PK*/
	public final EZDPBigDecimalItem              dsContrBllgMtrPk;

    /** DS_CONTR_PRC_EFF_STS_CD*/
	public final EZDPStringItem              dsContrPrcEffStsCd;

    /** CONTR_PRC_EFF_FROM_DT*/
	public final EZDPDateItem              contrPrcEffFromDt;

    /** CONTR_PRC_EFF_THRU_DT*/
	public final EZDPDateItem              contrPrcEffThruDt;

    /** BLLG_CYCLE_CD*/
	public final EZDPStringItem              bllgCycleCd;

    /** BASE_PRC_DEAL_AMT*/
	public final EZDPBigDecimalItem              basePrcDealAmt;

    /** BASE_PRC_FUNC_AMT*/
	public final EZDPBigDecimalItem              basePrcFuncAmt;

    /** BASE_PRC_TERM_DEAL_AMT_RATE*/
	public final EZDPBigDecimalItem              basePrcTermDealAmtRate;

    /** BASE_PRC_TERM_FUNC_AMT_RATE*/
	public final EZDPBigDecimalItem              basePrcTermFuncAmtRate;

    /** QLTY_ASRN_HLD_FLG*/
	public final EZDPStringItem              qltyAsrnHldFlg;

    /** MTR_HLD_FLG*/
	public final EZDPStringItem              mtrHldFlg;

    /** CONTR_HLD_FLG*/
	public final EZDPStringItem              contrHldFlg;

    /** BLLG_HLD_FLG*/
	public final EZDPStringItem              bllgHldFlg;

    /** CCY_CD*/
	public final EZDPStringItem              ccyCd;

    /** BASE_CHRG_FLG*/
	public final EZDPStringItem              baseChrgFlg;

    /** USG_CHRG_FLG*/
	public final EZDPStringItem              usgChrgFlg;

    /** CONTR_RNW_ERR_RSN_CD*/
	public final EZDPStringItem              contrRnwErrRsnCd;

    /** RNW_ADV_NTC_DT*/
	public final EZDPDateItem              rnwAdvNtcDt;

    /** QLTY_ASRN_HLD_PEND_APVL_FLG*/
	public final EZDPStringItem              qltyAsrnHldPendApvlFlg;


	/**
	 * NSZC046001_xxDsContrPrcEffListPMsg is constructor.
	 * The initialization when the instance of NSZC046001_xxDsContrPrcEffListPMsg is generated.
	 */
	public NSZC046001_xxDsContrPrcEffListPMsg() {
		this(false, -1);
	}

	/**
	 * NSZC046001_xxDsContrPrcEffListPMsg is constructor.
	 * The initialization when the instance of NSZC046001_xxDsContrPrcEffListPMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSZC046001_xxDsContrPrcEffListPMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxModeCd = (EZDPStringItem)newItem("xxModeCd");
		dsContrPrcEffPk = (EZDPBigDecimalItem)newItem("dsContrPrcEffPk");
		dsContrPrcEffSqNum = (EZDPBigDecimalItem)newItem("dsContrPrcEffSqNum");
		dsContrDtlPk = (EZDPBigDecimalItem)newItem("dsContrDtlPk");
		dsContrBllgMtrPk = (EZDPBigDecimalItem)newItem("dsContrBllgMtrPk");
		dsContrPrcEffStsCd = (EZDPStringItem)newItem("dsContrPrcEffStsCd");
		contrPrcEffFromDt = (EZDPDateItem)newItem("contrPrcEffFromDt");
		contrPrcEffThruDt = (EZDPDateItem)newItem("contrPrcEffThruDt");
		bllgCycleCd = (EZDPStringItem)newItem("bllgCycleCd");
		basePrcDealAmt = (EZDPBigDecimalItem)newItem("basePrcDealAmt");
		basePrcFuncAmt = (EZDPBigDecimalItem)newItem("basePrcFuncAmt");
		basePrcTermDealAmtRate = (EZDPBigDecimalItem)newItem("basePrcTermDealAmtRate");
		basePrcTermFuncAmtRate = (EZDPBigDecimalItem)newItem("basePrcTermFuncAmtRate");
		qltyAsrnHldFlg = (EZDPStringItem)newItem("qltyAsrnHldFlg");
		mtrHldFlg = (EZDPStringItem)newItem("mtrHldFlg");
		contrHldFlg = (EZDPStringItem)newItem("contrHldFlg");
		bllgHldFlg = (EZDPStringItem)newItem("bllgHldFlg");
		ccyCd = (EZDPStringItem)newItem("ccyCd");
		baseChrgFlg = (EZDPStringItem)newItem("baseChrgFlg");
		usgChrgFlg = (EZDPStringItem)newItem("usgChrgFlg");
		contrRnwErrRsnCd = (EZDPStringItem)newItem("contrRnwErrRsnCd");
		rnwAdvNtcDt = (EZDPDateItem)newItem("rnwAdvNtcDt");
		qltyAsrnHldPendApvlFlg = (EZDPStringItem)newItem("qltyAsrnHldPendApvlFlg");
	}

	/**
	 * get the type of array which is stored
	 * @return NSZC046001_xxDsContrPrcEffListPMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSZC046001_xxDsContrPrcEffListPMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxModeCd", "xxModeCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"dsContrPrcEffPk", "dsContrPrcEffPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrPrcEffSqNum", "dsContrPrcEffSqNum", null, null, TYPE_SEISU_SYOSU, "4", "0"},
	{"dsContrDtlPk", "dsContrDtlPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrBllgMtrPk", "dsContrBllgMtrPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrPrcEffStsCd", "dsContrPrcEffStsCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"contrPrcEffFromDt", "contrPrcEffFromDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"contrPrcEffThruDt", "contrPrcEffThruDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"bllgCycleCd", "bllgCycleCd", null, null, TYPE_HANKAKUEISU, "1", null},
	{"basePrcDealAmt", "basePrcDealAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"basePrcFuncAmt", "basePrcFuncAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"basePrcTermDealAmtRate", "basePrcTermDealAmtRate", null, null, TYPE_SEISU_SYOSU, "19", "6"},
	{"basePrcTermFuncAmtRate", "basePrcTermFuncAmtRate", null, null, TYPE_SEISU_SYOSU, "19", "6"},
	{"qltyAsrnHldFlg", "qltyAsrnHldFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"mtrHldFlg", "mtrHldFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"contrHldFlg", "contrHldFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"bllgHldFlg", "bllgHldFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"ccyCd", "ccyCd", null, null, TYPE_HANKAKUEISU, "3", null},
	{"baseChrgFlg", "baseChrgFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"usgChrgFlg", "usgChrgFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"contrRnwErrRsnCd", "contrRnwErrRsnCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"rnwAdvNtcDt", "rnwAdvNtcDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"qltyAsrnHldPendApvlFlg", "qltyAsrnHldPendApvlFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_MODE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxModeCd
        {"DS_CONTR_PRC_EFF_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrPrcEffPk
        {"DS_CONTR_PRC_EFF_SQ_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrPrcEffSqNum
        {"DS_CONTR_DTL_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrDtlPk
        {"DS_CONTR_BLLG_MTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgMtrPk
        {"DS_CONTR_PRC_EFF_STS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrPrcEffStsCd
        {"CONTR_PRC_EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrPrcEffFromDt
        {"CONTR_PRC_EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrPrcEffThruDt
        {"BLLG_CYCLE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgCycleCd
        {"BASE_PRC_DEAL_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//basePrcDealAmt
        {"BASE_PRC_FUNC_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//basePrcFuncAmt
        {"BASE_PRC_TERM_DEAL_AMT_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//basePrcTermDealAmtRate
        {"BASE_PRC_TERM_FUNC_AMT_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//basePrcTermFuncAmtRate
        {"QLTY_ASRN_HLD_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//qltyAsrnHldFlg
        {"MTR_HLD_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrHldFlg
        {"CONTR_HLD_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrHldFlg
        {"BLLG_HLD_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgHldFlg
        {"CCY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ccyCd
        {"BASE_CHRG_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//baseChrgFlg
        {"USG_CHRG_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//usgChrgFlg
        {"CONTR_RNW_ERR_RSN_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrRnwErrRsnCd
        {"RNW_ADV_NTC_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rnwAdvNtcDt
        {"QLTY_ASRN_HLD_PEND_APVL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//qltyAsrnHldPendApvlFlg
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

