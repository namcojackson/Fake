//This file was automatically generated by Common Business Component Interface Definition Document and XLA200710010.
// Generated on    :20220328112903000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :CommonBusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSZC046001_xxSvcMemoListPMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.parts;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSZC046001 Common Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSZC046001_xxSvcMemoListPMsg extends EZDPMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_MODE_CD*/
	public final EZDPStringItem              xxModeCd;

    /** SVC_MEMO_PK*/
	public final EZDPBigDecimalItem              svcMemoPk;

    /** SVC_MEMO_CATG_CD*/
	public final EZDPStringItem              svcMemoCatgCd;

    /** SVC_MEMO_TP_CD*/
	public final EZDPStringItem              svcMemoTpCd;

    /** SVC_CMNT_TXT*/
	public final EZDPStringItem              svcCmntTxt;

    /** SVC_TASK_NUM*/
	public final EZDPStringItem              svcTaskNum;

    /** FSR_NUM*/
	public final EZDPStringItem              fsrNum;

    /** SVC_MACH_MSTR_PK*/
	public final EZDPBigDecimalItem              svcMachMstrPk;

    /** DS_CONTR_PK*/
	public final EZDPBigDecimalItem              dsContrPk;

    /** DS_CONTR_DTL_PK*/
	public final EZDPBigDecimalItem              dsContrDtlPk;

    /** DS_SUB_CONTR_PK*/
	public final EZDPBigDecimalItem              dsSubContrPk;

    /** LAST_UPD_USR_ID*/
	public final EZDPStringItem              lastUpdUsrId;

    /** LAST_UPD_TS*/
	public final EZDPStringItem              lastUpdTs;

    /** SVC_INV_PK*/
	public final EZDPBigDecimalItem              svcInvPk;

    /** SVC_CONTR_BLLG_PK*/
	public final EZDPBigDecimalItem              svcContrBllgPk;

    /** SVC_MEMO_RSN_CD*/
	public final EZDPStringItem              svcMemoRsnCd;

    /** SVC_MEMO_TRX_NUM*/
	public final EZDPStringItem              svcMemoTrxNum;

    /** SVC_MEMO_TRX_NM*/
	public final EZDPStringItem              svcMemoTrxNm;

    /** XX_MSG_ID*/
	public final EZDPStringItem              xxMsgId;

    /** XX_DS_MULT_MSG_DPLY_TXT*/
	public final EZDPStringItem              xxDsMultMsgDplyTxt;


	/**
	 * NSZC046001_xxSvcMemoListPMsg is constructor.
	 * The initialization when the instance of NSZC046001_xxSvcMemoListPMsg is generated.
	 */
	public NSZC046001_xxSvcMemoListPMsg() {
		this(false, -1);
	}

	/**
	 * NSZC046001_xxSvcMemoListPMsg is constructor.
	 * The initialization when the instance of NSZC046001_xxSvcMemoListPMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSZC046001_xxSvcMemoListPMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxModeCd = (EZDPStringItem)newItem("xxModeCd");
		svcMemoPk = (EZDPBigDecimalItem)newItem("svcMemoPk");
		svcMemoCatgCd = (EZDPStringItem)newItem("svcMemoCatgCd");
		svcMemoTpCd = (EZDPStringItem)newItem("svcMemoTpCd");
		svcCmntTxt = (EZDPStringItem)newItem("svcCmntTxt");
		svcTaskNum = (EZDPStringItem)newItem("svcTaskNum");
		fsrNum = (EZDPStringItem)newItem("fsrNum");
		svcMachMstrPk = (EZDPBigDecimalItem)newItem("svcMachMstrPk");
		dsContrPk = (EZDPBigDecimalItem)newItem("dsContrPk");
		dsContrDtlPk = (EZDPBigDecimalItem)newItem("dsContrDtlPk");
		dsSubContrPk = (EZDPBigDecimalItem)newItem("dsSubContrPk");
		lastUpdUsrId = (EZDPStringItem)newItem("lastUpdUsrId");
		lastUpdTs = (EZDPStringItem)newItem("lastUpdTs");
		svcInvPk = (EZDPBigDecimalItem)newItem("svcInvPk");
		svcContrBllgPk = (EZDPBigDecimalItem)newItem("svcContrBllgPk");
		svcMemoRsnCd = (EZDPStringItem)newItem("svcMemoRsnCd");
		svcMemoTrxNum = (EZDPStringItem)newItem("svcMemoTrxNum");
		svcMemoTrxNm = (EZDPStringItem)newItem("svcMemoTrxNm");
		xxMsgId = (EZDPStringItem)newItem("xxMsgId");
		xxDsMultMsgDplyTxt = (EZDPStringItem)newItem("xxDsMultMsgDplyTxt");
	}

	/**
	 * get the type of array which is stored
	 * @return NSZC046001_xxSvcMemoListPMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSZC046001_xxSvcMemoListPMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxModeCd", "xxModeCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"svcMemoPk", "svcMemoPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"svcMemoCatgCd", "svcMemoCatgCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"svcMemoTpCd", "svcMemoTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"svcCmntTxt", "svcCmntTxt", null, null, TYPE_HANKAKUEISU, "4000", null},
	{"svcTaskNum", "svcTaskNum", null, null, TYPE_HANKAKUEISU, "10", null},
	{"fsrNum", "fsrNum", null, null, TYPE_HANKAKUEISU, "10", null},
	{"svcMachMstrPk", "svcMachMstrPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrPk", "dsContrPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrDtlPk", "dsContrDtlPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsSubContrPk", "dsSubContrPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"lastUpdUsrId", "lastUpdUsrId", null, null, TYPE_HANKAKUEISU, "16", null},
	{"lastUpdTs", "lastUpdTs", null, null, TYPE_HANKAKUSUJI, "17", null},
	{"svcInvPk", "svcInvPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"svcContrBllgPk", "svcContrBllgPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"svcMemoRsnCd", "svcMemoRsnCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"svcMemoTrxNum", "svcMemoTrxNum", null, null, TYPE_HANKAKUEISU, "28", null},
	{"svcMemoTrxNm", "svcMemoTrxNm", null, null, TYPE_HANKAKUEISU, "30", null},
	{"xxMsgId", "xxMsgId", null, null, TYPE_HANKAKUEISU, "9", null},
	{"xxDsMultMsgDplyTxt", "xxDsMultMsgDplyTxt", null, null, TYPE_HANKAKUEISU, "4000", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_MODE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxModeCd
        {"SVC_MEMO_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMemoPk
        {"SVC_MEMO_CATG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMemoCatgCd
        {"SVC_MEMO_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMemoTpCd
        {"SVC_CMNT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcCmntTxt
        {"SVC_TASK_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTaskNum
        {"FSR_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//fsrNum
        {"SVC_MACH_MSTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachMstrPk
        {"DS_CONTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrPk
        {"DS_CONTR_DTL_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrDtlPk
        {"DS_SUB_CONTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsSubContrPk
        {"LAST_UPD_USR_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//lastUpdUsrId
        {"LAST_UPD_TS",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//lastUpdTs
        {"SVC_INV_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcInvPk
        {"SVC_CONTR_BLLG_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcContrBllgPk
        {"SVC_MEMO_RSN_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMemoRsnCd
        {"SVC_MEMO_TRX_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMemoTrxNum
        {"SVC_MEMO_TRX_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMemoTrxNm
        {"XX_MSG_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxMsgId
        {"XX_DS_MULT_MSG_DPLY_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDsMultMsgDplyTxt
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

