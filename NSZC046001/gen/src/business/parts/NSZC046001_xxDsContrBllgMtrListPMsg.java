//This file was automatically generated by Common Business Component Interface Definition Document and XLA200710010.
// Generated on    :20220328112903000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :CommonBusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSZC046001_xxDsContrBllgMtrListPMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.parts;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSZC046001 Common Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSZC046001_xxDsContrBllgMtrListPMsg extends EZDPMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_MODE_CD*/
	public final EZDPStringItem              xxModeCd;

    /** DS_CONTR_BLLG_MTR_PK*/
	public final EZDPBigDecimalItem              dsContrBllgMtrPk;

    /** DS_CONTR_DTL_PK*/
	public final EZDPBigDecimalItem              dsContrDtlPk;

    /** DS_CONTR_BLLG_MTR_ID*/
	public final EZDPStringItem              dsContrBllgMtrId;

    /** MLY_COPY_INCL_PRC_QTY*/
	public final EZDPBigDecimalItem              mlyCopyInclPrcQty;

    /** BLLG_MTR_LB_CD*/
	public final EZDPStringItem              bllgMtrLbCd;

    /** BLLG_MTR_BILL_TO_CUST_CD*/
	public final EZDPStringItem              bllgMtrBillToCustCd;

    /** BLLG_MTR_BLLG_CYCLE_CD*/
	public final EZDPStringItem              bllgMtrBllgCycleCd;

    /** XS_CHRG_TP_CD*/
	public final EZDPStringItem              xsChrgTpCd;

    /** DS_CONTR_BLLG_MTR_STS_CD*/
	public final EZDPStringItem              dsContrBllgMtrStsCd;

    /** BLLG_MIN_CNT*/
	public final EZDPBigDecimalItem              bllgMinCnt;

    /** BLLG_MIN_AMT_RATE*/
	public final EZDPBigDecimalItem              bllgMinAmtRate;

    /** BLLG_ROLL_OVER_RATIO*/
	public final EZDPBigDecimalItem              bllgRollOverRatio;

    /** BLLG_FREE_COPY_CNT*/
	public final EZDPBigDecimalItem              bllgFreeCopyCnt;

    /** CTAC_PSN_PK*/
	public final EZDPBigDecimalItem              ctacPsnPk;

    /** ROLL_OVER_CNT*/
	public final EZDPBigDecimalItem              rollOverCnt;

    /** INTG_MDSE_CD*/
	public final EZDPStringItem              intgMdseCd;

    /** QLTY_ASRN_HLD_FLG*/
	public final EZDPStringItem              qltyAsrnHldFlg;

    /** MTR_HLD_FLG*/
	public final EZDPStringItem              mtrHldFlg;

    /** CONTR_HLD_FLG*/
	public final EZDPStringItem              contrHldFlg;

    /** BLLG_HLD_FLG*/
	public final EZDPStringItem              bllgHldFlg;

    /** SVC_MACH_MSTR_PK*/
	public final EZDPBigDecimalItem              svcMachMstrPk;

    /** XX_MSG_ID*/
	public final EZDPStringItem              xxMsgId;

    /** XX_DS_MULT_MSG_DPLY_TXT*/
	public final EZDPStringItem              xxDsMultMsgDplyTxt;


	/**
	 * NSZC046001_xxDsContrBllgMtrListPMsg is constructor.
	 * The initialization when the instance of NSZC046001_xxDsContrBllgMtrListPMsg is generated.
	 */
	public NSZC046001_xxDsContrBllgMtrListPMsg() {
		this(false, -1);
	}

	/**
	 * NSZC046001_xxDsContrBllgMtrListPMsg is constructor.
	 * The initialization when the instance of NSZC046001_xxDsContrBllgMtrListPMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSZC046001_xxDsContrBllgMtrListPMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxModeCd = (EZDPStringItem)newItem("xxModeCd");
		dsContrBllgMtrPk = (EZDPBigDecimalItem)newItem("dsContrBllgMtrPk");
		dsContrDtlPk = (EZDPBigDecimalItem)newItem("dsContrDtlPk");
		dsContrBllgMtrId = (EZDPStringItem)newItem("dsContrBllgMtrId");
		mlyCopyInclPrcQty = (EZDPBigDecimalItem)newItem("mlyCopyInclPrcQty");
		bllgMtrLbCd = (EZDPStringItem)newItem("bllgMtrLbCd");
		bllgMtrBillToCustCd = (EZDPStringItem)newItem("bllgMtrBillToCustCd");
		bllgMtrBllgCycleCd = (EZDPStringItem)newItem("bllgMtrBllgCycleCd");
		xsChrgTpCd = (EZDPStringItem)newItem("xsChrgTpCd");
		dsContrBllgMtrStsCd = (EZDPStringItem)newItem("dsContrBllgMtrStsCd");
		bllgMinCnt = (EZDPBigDecimalItem)newItem("bllgMinCnt");
		bllgMinAmtRate = (EZDPBigDecimalItem)newItem("bllgMinAmtRate");
		bllgRollOverRatio = (EZDPBigDecimalItem)newItem("bllgRollOverRatio");
		bllgFreeCopyCnt = (EZDPBigDecimalItem)newItem("bllgFreeCopyCnt");
		ctacPsnPk = (EZDPBigDecimalItem)newItem("ctacPsnPk");
		rollOverCnt = (EZDPBigDecimalItem)newItem("rollOverCnt");
		intgMdseCd = (EZDPStringItem)newItem("intgMdseCd");
		qltyAsrnHldFlg = (EZDPStringItem)newItem("qltyAsrnHldFlg");
		mtrHldFlg = (EZDPStringItem)newItem("mtrHldFlg");
		contrHldFlg = (EZDPStringItem)newItem("contrHldFlg");
		bllgHldFlg = (EZDPStringItem)newItem("bllgHldFlg");
		svcMachMstrPk = (EZDPBigDecimalItem)newItem("svcMachMstrPk");
		xxMsgId = (EZDPStringItem)newItem("xxMsgId");
		xxDsMultMsgDplyTxt = (EZDPStringItem)newItem("xxDsMultMsgDplyTxt");
	}

	/**
	 * get the type of array which is stored
	 * @return NSZC046001_xxDsContrBllgMtrListPMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSZC046001_xxDsContrBllgMtrListPMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxModeCd", "xxModeCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"dsContrBllgMtrPk", "dsContrBllgMtrPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrDtlPk", "dsContrDtlPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrBllgMtrId", "dsContrBllgMtrId", null, null, TYPE_HANKAKUEISU, "2", null},
	{"mlyCopyInclPrcQty", "mlyCopyInclPrcQty", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"bllgMtrLbCd", "bllgMtrLbCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"bllgMtrBillToCustCd", "bllgMtrBillToCustCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"bllgMtrBllgCycleCd", "bllgMtrBllgCycleCd", null, null, TYPE_HANKAKUEISU, "1", null},
	{"xsChrgTpCd", "xsChrgTpCd", null, null, TYPE_HANKAKUEISU, "1", null},
	{"dsContrBllgMtrStsCd", "dsContrBllgMtrStsCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"bllgMinCnt", "bllgMinCnt", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"bllgMinAmtRate", "bllgMinAmtRate", null, null, TYPE_SEISU_SYOSU, "19", "6"},
	{"bllgRollOverRatio", "bllgRollOverRatio", null, null, TYPE_SEISU_SYOSU, "9", "5"},
	{"bllgFreeCopyCnt", "bllgFreeCopyCnt", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"ctacPsnPk", "ctacPsnPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"rollOverCnt", "rollOverCnt", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"intgMdseCd", "intgMdseCd", null, null, TYPE_HANKAKUEISU, "16", null},
	{"qltyAsrnHldFlg", "qltyAsrnHldFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"mtrHldFlg", "mtrHldFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"contrHldFlg", "contrHldFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"bllgHldFlg", "bllgHldFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"svcMachMstrPk", "svcMachMstrPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"xxMsgId", "xxMsgId", null, null, TYPE_HANKAKUEISU, "9", null},
	{"xxDsMultMsgDplyTxt", "xxDsMultMsgDplyTxt", null, null, TYPE_HANKAKUEISU, "4000", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_MODE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxModeCd
        {"DS_CONTR_BLLG_MTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgMtrPk
        {"DS_CONTR_DTL_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrDtlPk
        {"DS_CONTR_BLLG_MTR_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgMtrId
        {"MLY_COPY_INCL_PRC_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mlyCopyInclPrcQty
        {"BLLG_MTR_LB_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgMtrLbCd
        {"BLLG_MTR_BILL_TO_CUST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgMtrBillToCustCd
        {"BLLG_MTR_BLLG_CYCLE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgMtrBllgCycleCd
        {"XS_CHRG_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xsChrgTpCd
        {"DS_CONTR_BLLG_MTR_STS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgMtrStsCd
        {"BLLG_MIN_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgMinCnt
        {"BLLG_MIN_AMT_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgMinAmtRate
        {"BLLG_ROLL_OVER_RATIO",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgRollOverRatio
        {"BLLG_FREE_COPY_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgFreeCopyCnt
        {"CTAC_PSN_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ctacPsnPk
        {"ROLL_OVER_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rollOverCnt
        {"INTG_MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//intgMdseCd
        {"QLTY_ASRN_HLD_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//qltyAsrnHldFlg
        {"MTR_HLD_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrHldFlg
        {"CONTR_HLD_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrHldFlg
        {"BLLG_HLD_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgHldFlg
        {"SVC_MACH_MSTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachMstrPk
        {"XX_MSG_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxMsgId
        {"XX_DS_MULT_MSG_DPLY_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDsMultMsgDplyTxt
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

