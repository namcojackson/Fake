//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20240410173850000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0150BMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NSAL0150;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL0150 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL0150BMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** SVC_MACH_MSTR_PK*/
	public final EZDBBigDecimalItem              svcMachMstrPk;

    /** MDSE_CD*/
	public final EZDBStringItem              mdseCd;

    /** SVC_BY_LINE_BIZ_TP_CD*/
	public final EZDBStringItem              svcByLineBizTpCd;

    /** SLD_BY_LINE_BIZ_TP_CD*/
	public final EZDBStringItem              sldByLineBizTpCd;

    /** CPO_ORD_NUM*/
	public final EZDBStringItem              cpoOrdNum;

    /** SCHD_AGMT_NUM*/
	public final EZDBStringItem              schdAgmtNum;

    /** BILL_TO_LOC_NM*/
	public final EZDBStringItem              billToLocNm;

    /** SHIP_TO_LOC_NM*/
	public final EZDBStringItem              shipToLocNm;

    /** XX_GENL_FLD_AREA_TXT_CT*/
	public final EZDBStringItem              xxGenlFldAreaTxt_CT;

    /** XX_GENL_FLD_AREA_TXT_FC*/
	public final EZDBStringItem              xxGenlFldAreaTxt_FC;

    /** XX_GENL_FLD_AREA_TXT_LS*/
	public final EZDBStringItem              xxGenlFldAreaTxt_LS;

    /** XX_GENL_FLD_AREA_TXT_TL*/
	public final EZDBStringItem              xxGenlFldAreaTxt_TL;

    /** XX_GENL_FLD_AREA_TXT_FX*/
	public final EZDBStringItem              xxGenlFldAreaTxt_FX;

    /** DS_CTAC_PNT_VAL_TXT_EM*/
	public final EZDBStringItem              dsCtacPntValTxt_EM;

    /** ADDRLINE1_L3000_IF*/
	public final EZDBStringItem              addrline1L3000If;

    /** XX_YES_NO_NM_MC*/
	public final EZDBStringItem              xxYesNoNm_MC;

    /** BLLG_SCHD_THRU_DT*/
	public final EZDBDateItem              bllgSchdThruDt;

    /** MTR_READ_METH_DESC_TXT*/
	public final EZDBStringItem              mtrReadMethDescTxt;

    /** SVC_MEMO_PK*/
	public final EZDBBigDecimalItem              svcMemoPk;

    /** SVC_CMNT_TXT*/
	public final EZDBStringItem              svcCmntTxt;

    /** SVC_CMNT_TXT_HD*/
	public final EZDBStringItem              svcCmntTxt_HD;

    /** _EZUpdateDateTime_SM*/
	public final EZDBStringItem              ezUpTime_SM;

    /** _EZUpTimeZone_SM*/
	public final EZDBStringItem              ezUpTimeZone_SM;

    /** DS_CONTR_PK*/
	public final EZDBBigDecimalItem              dsContrPk;

    /** DS_CONTR_NUM*/
	public final EZDBStringItem              dsContrNum;

    /** DS_CONTR_CTRL_STS_NM*/
	public final EZDBStringItem              dsContrCtrlStsNm;

    /** DS_SUB_CONTR_PK*/
	public final EZDBBigDecimalItem              dsSubContrPk;

    /** XX_COA_BR_SRCH_TXT*/
	public final EZDBStringItem              xxCoaBrSrchTxt;

    /** PRNT_VND_NM*/
	public final EZDBStringItem              prntVndNm;

    /** SPLY_INCL_FLG*/
	public final EZDBStringItem              splyInclFlg;

    /** SPLY_CONTR_CHK_FLG*/
	public final EZDBStringItem              splyContrChkFlg;

    /** MDL_NM*/
	public final EZDBStringItem              mdlNm;

    /** SER_NUM*/
	public final EZDBStringItem              serNum;

    /** ISTL_DT*/
	public final EZDBDateItem              istlDt;

    /** CONTR_VRSN_EFF_FROM_DT*/
	public final EZDBDateItem              contrVrsnEffFromDt;

    /** CONTR_VRSN_EFF_THRU_DT*/
	public final EZDBDateItem              contrVrsnEffThruDt;

    /** BLLG_CYCLE_DESC_TXT*/
	public final EZDBStringItem              bllgCycleDescTxt;

    /** DS_CONTR_CATG_DESC_TXT*/
	public final EZDBStringItem              dsContrCatgDescTxt;

    /** DS_INV_TGTR_TP_DESC_TXT*/
	public final EZDBStringItem              dsInvTgtrTpDescTxt;

    /** SVC_TERM_COND_DATA_DISP_TXT*/
	public final EZDBStringItem              svcTermCondDataDispTxt;

    /** XX_WRN_SKIP_FLG*/
	public final EZDBStringItem              xxWrnSkipFlg;

    /** XX_WRN_SKIP_FLG_MR*/
	public final EZDBStringItem              xxWrnSkipFlg_MR;

    /** XX_SET_FLG*/
	public final EZDBStringItem              xxSetFlg;

    /** DS_CONTR_CATG_CD_OH*/
	public final EZDBStringItem              dsContrCatgCd_OH;

    /** DS_ORD_CATG_DESC_TXT_OH*/
	public final EZDBStringItem              dsOrdCatgDescTxt_OH;

    /** DS_CONTR_NUM_OH*/
	public final EZDBStringItem              dsContrNum_OH;

    /** CONTR_MSG_TXT*/
	public final EZDBStringItem              contrMsgTxt;

    /** DS_CONTR_PK_SP*/
	public final EZDBBigDecimalItem              dsContrPk_SP;

    /** DS_CONTR_DTL_PK_SP*/
	public final EZDBBigDecimalItem              dsContrDtlPk_SP;

    /** XX_OPS_DT_CM*/
	public final EZDBDateItem              xxOpsDt_CM;

    /** SHR_DLR_FLG*/
	public final EZDBStringItem              shrDlrFlg;

    /** IWR_COND_NM*/
	public final EZDBStringItem              iwrCondNm;

    /** IWR_RGTN_STS_CD*/
	public final EZDBStringItem              iwrRgtnStsCd;

    /** IWR_COND_DESC_TXT*/
	public final EZDBStringItem              iwrCondDescTxt;

    /** IWR_RGTN_DT*/
	public final EZDBDateItem              iwrRgtnDt;

    /** IWR_DEINS_DT*/
	public final EZDBDateItem              iwrDeinsDt;

    /** READ_MTR_CNT_CM*/
	public final EZDBBigDecimalItem              readMtrCnt_CM;

    /** IWR_ENBL_FLG*/
	public final EZDBStringItem              iwrEnblFlg;

    /** DS_CONTR_DTL_PK*/
	public final EZDBBigDecimalItem              dsContrDtlPk;

    /** A*/
	public final business.servlet.NSAL0150.NSAL0150_ABMsgArray              A;

    /** XX_DPLY_CTRL_FLG*/
	public final EZDBStringItem              xxDplyCtrlFlg;

    /** XX_DPLY_CTRL_FLG_BT*/
	public final EZDBStringItem              xxDplyCtrlFlg_BT;

    /** B*/
	public final business.servlet.NSAL0150.NSAL0150_BBMsgArray              B;

    /** DS_MTR_READ_TP_GRP_CD_BS*/
	public final EZDBStringItem              dsMtrReadTpGrpCd_BS;

    /** XX_GENL_FLD_AREA_TXT_BC*/
	public final EZDBStringItemArray              xxGenlFldAreaTxt_BC;

    /** DS_MTR_READ_TP_GRP_CD_BD*/
	public final EZDBStringItemArray              dsMtrReadTpGrpCd_BD;

    /** SVC_TASK_NUM_B*/
	public final EZDBStringItem              svcTaskNum_B;

    /** DS_TEST_COPY_CLS_CD_BS*/
	public final EZDBStringItem              dsTestCopyClsCd_BS;

    /** DS_TEST_COPY_CLS_CD_BC*/
	public final EZDBStringItemArray              dsTestCopyClsCd_BC;

    /** DS_TEST_COPY_CLS_DESC_TXT_BD*/
	public final EZDBStringItemArray              dsTestCopyClsDescTxt_BD;

    /** C*/
	public final business.servlet.NSAL0150.NSAL0150_CBMsgArray              C;

    /** D*/
	public final business.servlet.NSAL0150.NSAL0150_DBMsgArray              D;

    /** XX_ROW_NUM*/
	public final EZDBBigDecimalItem              xxRowNum;

    /** XX_PAGE_SHOW_FROM_NUM*/
	public final EZDBBigDecimalItem              xxPageShowFromNum;

    /** XX_PAGE_SHOW_TO_NUM*/
	public final EZDBBigDecimalItem              xxPageShowToNum;

    /** XX_PAGE_SHOW_OF_NUM*/
	public final EZDBBigDecimalItem              xxPageShowOfNum;

    /** EFF_FROM_DT*/
	public final EZDBDateItem              effFromDt;

    /** EFF_THRU_DT*/
	public final EZDBDateItem              effThruDt;

    /** E*/
	public final business.servlet.NSAL0150.NSAL0150_EBMsgArray              E;

    /** P*/
	public final business.servlet.NSAL0150.NSAL0150_PBMsgArray              P;

    /** DS_CONTR_PK_P*/
	public final EZDBBigDecimalItem              dsContrPk_P;

    /** SVC_MACH_MSTR_PK_P*/
	public final EZDBBigDecimalItem              svcMachMstrPk_P;

    /** SCHD_AGMT_NUM_P*/
	public final EZDBStringItem              schdAgmtNum_P;

    /** XX_FILE_DATA*/
	public final EZDBMimeSourceItem              xxFileData;

    /** SVC_CMNT_TXT_PP*/
	public final EZDBStringItem              svcCmntTxt_PP;


	/**
	 * NSAL0150BMsg is constructor.
	 * The initialization when the instance of NSAL0150BMsg is generated.
	 */
	public NSAL0150BMsg() {
		this(false, -1);
	}

	/**
	 * NSAL0150BMsg is constructor.
	 * The initialization when the instance of NSAL0150BMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL0150BMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		svcMachMstrPk = (EZDBBigDecimalItem)newItem("svcMachMstrPk");
		mdseCd = (EZDBStringItem)newItem("mdseCd");
		svcByLineBizTpCd = (EZDBStringItem)newItem("svcByLineBizTpCd");
		sldByLineBizTpCd = (EZDBStringItem)newItem("sldByLineBizTpCd");
		cpoOrdNum = (EZDBStringItem)newItem("cpoOrdNum");
		schdAgmtNum = (EZDBStringItem)newItem("schdAgmtNum");
		billToLocNm = (EZDBStringItem)newItem("billToLocNm");
		shipToLocNm = (EZDBStringItem)newItem("shipToLocNm");
		xxGenlFldAreaTxt_CT = (EZDBStringItem)newItem("xxGenlFldAreaTxt_CT");
		xxGenlFldAreaTxt_FC = (EZDBStringItem)newItem("xxGenlFldAreaTxt_FC");
		xxGenlFldAreaTxt_LS = (EZDBStringItem)newItem("xxGenlFldAreaTxt_LS");
		xxGenlFldAreaTxt_TL = (EZDBStringItem)newItem("xxGenlFldAreaTxt_TL");
		xxGenlFldAreaTxt_FX = (EZDBStringItem)newItem("xxGenlFldAreaTxt_FX");
		dsCtacPntValTxt_EM = (EZDBStringItem)newItem("dsCtacPntValTxt_EM");
		addrline1L3000If = (EZDBStringItem)newItem("addrline1L3000If");
		xxYesNoNm_MC = (EZDBStringItem)newItem("xxYesNoNm_MC");
		bllgSchdThruDt = (EZDBDateItem)newItem("bllgSchdThruDt");
		mtrReadMethDescTxt = (EZDBStringItem)newItem("mtrReadMethDescTxt");
		svcMemoPk = (EZDBBigDecimalItem)newItem("svcMemoPk");
		svcCmntTxt = (EZDBStringItem)newItem("svcCmntTxt");
		svcCmntTxt_HD = (EZDBStringItem)newItem("svcCmntTxt_HD");
		ezUpTime_SM = (EZDBStringItem)newItem("ezUpTime_SM");
		ezUpTimeZone_SM = (EZDBStringItem)newItem("ezUpTimeZone_SM");
		dsContrPk = (EZDBBigDecimalItem)newItem("dsContrPk");
		dsContrNum = (EZDBStringItem)newItem("dsContrNum");
		dsContrCtrlStsNm = (EZDBStringItem)newItem("dsContrCtrlStsNm");
		dsSubContrPk = (EZDBBigDecimalItem)newItem("dsSubContrPk");
		xxCoaBrSrchTxt = (EZDBStringItem)newItem("xxCoaBrSrchTxt");
		prntVndNm = (EZDBStringItem)newItem("prntVndNm");
		splyInclFlg = (EZDBStringItem)newItem("splyInclFlg");
		splyContrChkFlg = (EZDBStringItem)newItem("splyContrChkFlg");
		mdlNm = (EZDBStringItem)newItem("mdlNm");
		serNum = (EZDBStringItem)newItem("serNum");
		istlDt = (EZDBDateItem)newItem("istlDt");
		contrVrsnEffFromDt = (EZDBDateItem)newItem("contrVrsnEffFromDt");
		contrVrsnEffThruDt = (EZDBDateItem)newItem("contrVrsnEffThruDt");
		bllgCycleDescTxt = (EZDBStringItem)newItem("bllgCycleDescTxt");
		dsContrCatgDescTxt = (EZDBStringItem)newItem("dsContrCatgDescTxt");
		dsInvTgtrTpDescTxt = (EZDBStringItem)newItem("dsInvTgtrTpDescTxt");
		svcTermCondDataDispTxt = (EZDBStringItem)newItem("svcTermCondDataDispTxt");
		xxWrnSkipFlg = (EZDBStringItem)newItem("xxWrnSkipFlg");
		xxWrnSkipFlg_MR = (EZDBStringItem)newItem("xxWrnSkipFlg_MR");
		xxSetFlg = (EZDBStringItem)newItem("xxSetFlg");
		dsContrCatgCd_OH = (EZDBStringItem)newItem("dsContrCatgCd_OH");
		dsOrdCatgDescTxt_OH = (EZDBStringItem)newItem("dsOrdCatgDescTxt_OH");
		dsContrNum_OH = (EZDBStringItem)newItem("dsContrNum_OH");
		contrMsgTxt = (EZDBStringItem)newItem("contrMsgTxt");
		dsContrPk_SP = (EZDBBigDecimalItem)newItem("dsContrPk_SP");
		dsContrDtlPk_SP = (EZDBBigDecimalItem)newItem("dsContrDtlPk_SP");
		xxOpsDt_CM = (EZDBDateItem)newItem("xxOpsDt_CM");
		shrDlrFlg = (EZDBStringItem)newItem("shrDlrFlg");
		iwrCondNm = (EZDBStringItem)newItem("iwrCondNm");
		iwrRgtnStsCd = (EZDBStringItem)newItem("iwrRgtnStsCd");
		iwrCondDescTxt = (EZDBStringItem)newItem("iwrCondDescTxt");
		iwrRgtnDt = (EZDBDateItem)newItem("iwrRgtnDt");
		iwrDeinsDt = (EZDBDateItem)newItem("iwrDeinsDt");
		readMtrCnt_CM = (EZDBBigDecimalItem)newItem("readMtrCnt_CM");
		iwrEnblFlg = (EZDBStringItem)newItem("iwrEnblFlg");
		dsContrDtlPk = (EZDBBigDecimalItem)newItem("dsContrDtlPk");
		A = (business.servlet.NSAL0150.NSAL0150_ABMsgArray)newMsgArray("A");
		xxDplyCtrlFlg = (EZDBStringItem)newItem("xxDplyCtrlFlg");
		xxDplyCtrlFlg_BT = (EZDBStringItem)newItem("xxDplyCtrlFlg_BT");
		B = (business.servlet.NSAL0150.NSAL0150_BBMsgArray)newMsgArray("B");
		dsMtrReadTpGrpCd_BS = (EZDBStringItem)newItem("dsMtrReadTpGrpCd_BS");
		xxGenlFldAreaTxt_BC = (EZDBStringItemArray)newItemArray("xxGenlFldAreaTxt_BC");
		dsMtrReadTpGrpCd_BD = (EZDBStringItemArray)newItemArray("dsMtrReadTpGrpCd_BD");
		svcTaskNum_B = (EZDBStringItem)newItem("svcTaskNum_B");
		dsTestCopyClsCd_BS = (EZDBStringItem)newItem("dsTestCopyClsCd_BS");
		dsTestCopyClsCd_BC = (EZDBStringItemArray)newItemArray("dsTestCopyClsCd_BC");
		dsTestCopyClsDescTxt_BD = (EZDBStringItemArray)newItemArray("dsTestCopyClsDescTxt_BD");
		C = (business.servlet.NSAL0150.NSAL0150_CBMsgArray)newMsgArray("C");
		D = (business.servlet.NSAL0150.NSAL0150_DBMsgArray)newMsgArray("D");
		xxRowNum = (EZDBBigDecimalItem)newItem("xxRowNum");
		xxPageShowFromNum = (EZDBBigDecimalItem)newItem("xxPageShowFromNum");
		xxPageShowToNum = (EZDBBigDecimalItem)newItem("xxPageShowToNum");
		xxPageShowOfNum = (EZDBBigDecimalItem)newItem("xxPageShowOfNum");
		effFromDt = (EZDBDateItem)newItem("effFromDt");
		effThruDt = (EZDBDateItem)newItem("effThruDt");
		E = (business.servlet.NSAL0150.NSAL0150_EBMsgArray)newMsgArray("E");
		P = (business.servlet.NSAL0150.NSAL0150_PBMsgArray)newMsgArray("P");
		dsContrPk_P = (EZDBBigDecimalItem)newItem("dsContrPk_P");
		svcMachMstrPk_P = (EZDBBigDecimalItem)newItem("svcMachMstrPk_P");
		schdAgmtNum_P = (EZDBStringItem)newItem("schdAgmtNum_P");
		xxFileData = (EZDBMimeSourceItem)newItem("xxFileData");
		svcCmntTxt_PP = (EZDBStringItem)newItem("svcCmntTxt_PP");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL0150BMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL0150BMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"svcMachMstrPk", "svcMachMstrPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"mdseCd", "mdseCd", null, null, TYPE_HANKAKUEISU, "16", null},
	{"svcByLineBizTpCd", "svcByLineBizTpCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"sldByLineBizTpCd", "sldByLineBizTpCd", null, null, TYPE_HANKAKUEISU, "8", null},
	{"cpoOrdNum", "cpoOrdNum", null, null, TYPE_HANKAKUEISU, "8", null},
	{"schdAgmtNum", "schdAgmtNum", null, null, TYPE_HANKAKUEISU, "20", null},
	{"billToLocNm", "billToLocNm", null, null, TYPE_HANKAKUEISU, "60", null},
	{"shipToLocNm", "shipToLocNm", null, null, TYPE_HANKAKUEISU, "60", null},
	{"xxGenlFldAreaTxt_CT", "xxGenlFldAreaTxt_CT", "CT", null, TYPE_HANKAKUEISU, "1000", null},
	{"xxGenlFldAreaTxt_FC", "xxGenlFldAreaTxt_FC", "FC", null, TYPE_HANKAKUEISU, "1000", null},
	{"xxGenlFldAreaTxt_LS", "xxGenlFldAreaTxt_LS", "LS", null, TYPE_HANKAKUEISU, "1000", null},
	{"xxGenlFldAreaTxt_TL", "xxGenlFldAreaTxt_TL", "TL", null, TYPE_HANKAKUEISU, "1000", null},
	{"xxGenlFldAreaTxt_FX", "xxGenlFldAreaTxt_FX", "FX", null, TYPE_HANKAKUEISU, "1000", null},
	{"dsCtacPntValTxt_EM", "dsCtacPntValTxt_EM", "EM", null, TYPE_HANKAKUEISU, "320", null},
	{"addrline1L3000If", "addrline1L3000If", null, null, TYPE_HANKAKUEISU, "3000", null},
	{"xxYesNoNm_MC", "xxYesNoNm_MC", "MC", null, TYPE_HANKAKUEISU, "3", null},
	{"bllgSchdThruDt", "bllgSchdThruDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"mtrReadMethDescTxt", "mtrReadMethDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"svcMemoPk", "svcMemoPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"svcCmntTxt", "svcCmntTxt", null, null, TYPE_HANKAKUEISU, "4000", null},
	{"svcCmntTxt_HD", "svcCmntTxt_HD", "HD", null, TYPE_HANKAKUEISU, "4000", null},
	{"ezUpTime_SM", "ezUpTime_SM", "SM", null, TYPE_HANKAKUEISU, "17", null},
	{"ezUpTimeZone_SM", "ezUpTimeZone_SM", "SM", null, TYPE_HANKAKUEISU, "5", null},
	{"dsContrPk", "dsContrPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrNum", "dsContrNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"dsContrCtrlStsNm", "dsContrCtrlStsNm", null, null, TYPE_HANKAKUEISU, "50", null},
	{"dsSubContrPk", "dsSubContrPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"xxCoaBrSrchTxt", "xxCoaBrSrchTxt", null, null, TYPE_HANKAKUEISU, "1000", null},
	{"prntVndNm", "prntVndNm", null, null, TYPE_HANKAKUEISU, "240", null},
	{"splyInclFlg", "splyInclFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"splyContrChkFlg", "splyContrChkFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"mdlNm", "mdlNm", null, null, TYPE_HANKAKUEISU, "50", null},
	{"serNum", "serNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"istlDt", "istlDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"contrVrsnEffFromDt", "contrVrsnEffFromDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"contrVrsnEffThruDt", "contrVrsnEffThruDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"bllgCycleDescTxt", "bllgCycleDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"dsContrCatgDescTxt", "dsContrCatgDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"dsInvTgtrTpDescTxt", "dsInvTgtrTpDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"svcTermCondDataDispTxt", "svcTermCondDataDispTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"xxWrnSkipFlg", "xxWrnSkipFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"xxWrnSkipFlg_MR", "xxWrnSkipFlg_MR", "MR", null, TYPE_HANKAKUEISU, "1", null},
	{"xxSetFlg", "xxSetFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"dsContrCatgCd_OH", "dsContrCatgCd_OH", "OH", null, TYPE_HANKAKUEISU, "3", null},
	{"dsOrdCatgDescTxt_OH", "dsOrdCatgDescTxt_OH", "OH", null, TYPE_HANKAKUEISU, "50", null},
	{"dsContrNum_OH", "dsContrNum_OH", "OH", null, TYPE_HANKAKUEISU, "30", null},
	{"contrMsgTxt", "contrMsgTxt", null, null, TYPE_HANKAKUEISU, "1000", null},
	{"dsContrPk_SP", "dsContrPk_SP", "SP", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrDtlPk_SP", "dsContrDtlPk_SP", "SP", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"xxOpsDt_CM", "xxOpsDt_CM", "CM", null, TYPE_NENTSUKIHI, "8", null},
	{"shrDlrFlg", "shrDlrFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"iwrCondNm", "iwrCondNm", null, null, TYPE_HANKAKUEISU, "70", null},
	{"iwrRgtnStsCd", "iwrRgtnStsCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"iwrCondDescTxt", "iwrCondDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"iwrRgtnDt", "iwrRgtnDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"iwrDeinsDt", "iwrDeinsDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"readMtrCnt_CM", "readMtrCnt_CM", "CM", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"iwrEnblFlg", "iwrEnblFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"dsContrDtlPk", "dsContrDtlPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"A", "A", null, "200", "business.servlet.NSAL0150.NSAL0150_ABMsgArray", null, null},
	
	{"xxDplyCtrlFlg", "xxDplyCtrlFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"xxDplyCtrlFlg_BT", "xxDplyCtrlFlg_BT", "BT", null, TYPE_HANKAKUEISU, "1", null},
	{"B", "B", null, "200", "business.servlet.NSAL0150.NSAL0150_BBMsgArray", null, null},
	
	{"dsMtrReadTpGrpCd_BS", "dsMtrReadTpGrpCd_BS", "BS", null, TYPE_HANKAKUEISU, "10", null},
	{"xxGenlFldAreaTxt_BC", "xxGenlFldAreaTxt_BC", "BC", "99", TYPE_HANKAKUEISU, "1000", null},
	{"dsMtrReadTpGrpCd_BD", "dsMtrReadTpGrpCd_BD", "BD", "99", TYPE_HANKAKUEISU, "10", null},
	{"svcTaskNum_B", "svcTaskNum_B", "B", null, TYPE_HANKAKUEISU, "10", null},
	{"dsTestCopyClsCd_BS", "dsTestCopyClsCd_BS", "BS", null, TYPE_HANKAKUEISU, "1", null},
	{"dsTestCopyClsCd_BC", "dsTestCopyClsCd_BC", "BC", "99", TYPE_HANKAKUEISU, "1", null},
	{"dsTestCopyClsDescTxt_BD", "dsTestCopyClsDescTxt_BD", "BD", "99", TYPE_HANKAKUEISU, "50", null},
	{"C", "C", null, "200", "business.servlet.NSAL0150.NSAL0150_CBMsgArray", null, null},
	
	{"D", "D", null, "200", "business.servlet.NSAL0150.NSAL0150_DBMsgArray", null, null},
	
	{"xxRowNum", "xxRowNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowFromNum", "xxPageShowFromNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowToNum", "xxPageShowToNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowOfNum", "xxPageShowOfNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"effFromDt", "effFromDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt", "effThruDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"E", "E", null, "200", "business.servlet.NSAL0150.NSAL0150_EBMsgArray", null, null},
	
	{"P", "P", null, "200", "business.servlet.NSAL0150.NSAL0150_PBMsgArray", null, null},
	
	{"dsContrPk_P", "dsContrPk_P", "P", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"svcMachMstrPk_P", "svcMachMstrPk_P", "P", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"schdAgmtNum_P", "schdAgmtNum_P", "P", null, TYPE_HANKAKUEISU, "20", null},
	{"xxFileData", "xxFileData", null, null, TYPE_UPLOAD, null, null},
	{"svcCmntTxt_PP", "svcCmntTxt_PP", "PP", null, TYPE_HANKAKUEISU, "4000", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"SVC_MACH_MSTR_PK",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachMstrPk
        {"MDSE_CD",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd
        {"SVC_BY_LINE_BIZ_TP_CD",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcByLineBizTpCd
        {"SLD_BY_LINE_BIZ_TP_CD",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//sldByLineBizTpCd
        {"CPO_ORD_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cpoOrdNum
        {"SCHD_AGMT_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//schdAgmtNum
        {"BILL_TO_LOC_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//billToLocNm
        {"SHIP_TO_LOC_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToLocNm
        {"XX_GENL_FLD_AREA_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxGenlFldAreaTxt_CT
        {"XX_GENL_FLD_AREA_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxGenlFldAreaTxt_FC
        {"XX_GENL_FLD_AREA_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxGenlFldAreaTxt_LS
        {"XX_GENL_FLD_AREA_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxGenlFldAreaTxt_TL
        {"XX_GENL_FLD_AREA_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxGenlFldAreaTxt_FX
        {"DS_CTAC_PNT_VAL_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsCtacPntValTxt_EM
        {"ADDRLINE1_L3000_IF",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//addrline1L3000If
        {"XX_YES_NO_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxYesNoNm_MC
        {"BLLG_SCHD_THRU_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//bllgSchdThruDt
        {"MTR_READ_METH_DESC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrReadMethDescTxt
        {"SVC_MEMO_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMemoPk
        {"SVC_CMNT_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcCmntTxt
        {"SVC_CMNT_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcCmntTxt_HD
        {"_EZUpdateDateTime",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTime_SM
        {"_EZUpTimeZone",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTimeZone_SM
        {"DS_CONTR_PK",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrPk
        {"DS_CONTR_NUM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrNum
        {"DS_CONTR_CTRL_STS_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrCtrlStsNm
        {"DS_SUB_CONTR_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsSubContrPk
        {"XX_COA_BR_SRCH_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxCoaBrSrchTxt
        {"PRNT_VND_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prntVndNm
        {"SPLY_INCL_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//splyInclFlg
        {"SPLY_CONTR_CHK_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//splyContrChkFlg
        {"MDL_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdlNm
        {"SER_NUM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNum
        {"ISTL_DT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//istlDt
        {"CONTR_VRSN_EFF_FROM_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//contrVrsnEffFromDt
        {"CONTR_VRSN_EFF_THRU_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//contrVrsnEffThruDt
        {"BLLG_CYCLE_DESC_TXT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgCycleDescTxt
        {"DS_CONTR_CATG_DESC_TXT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrCatgDescTxt
        {"DS_INV_TGTR_TP_DESC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsInvTgtrTpDescTxt
        {"SVC_TERM_COND_DATA_DISP_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTermCondDataDispTxt
        {"XX_WRN_SKIP_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxWrnSkipFlg
        {"XX_WRN_SKIP_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxWrnSkipFlg_MR
        {"XX_SET_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxSetFlg
        {"DS_CONTR_CATG_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrCatgCd_OH
        {"DS_ORD_CATG_DESC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdCatgDescTxt_OH
        {"DS_CONTR_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrNum_OH
        {"CONTR_MSG_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrMsgTxt
        {"DS_CONTR_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrPk_SP
        {"DS_CONTR_DTL_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrDtlPk_SP
        {"XX_OPS_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//xxOpsDt_CM
        {"SHR_DLR_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shrDlrFlg
        {"IWR_COND_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//iwrCondNm
        {"IWR_RGTN_STS_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//iwrRgtnStsCd
        {"IWR_COND_DESC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//iwrCondDescTxt
        {"IWR_RGTN_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//iwrRgtnDt
        {"IWR_DEINS_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//iwrDeinsDt
        {"READ_MTR_CNT",  NO,  null,null,"1", NO,YES, NO, NO,null,null,null, null,  NO,  NO},	//readMtrCnt_CM
        {"IWR_ENBL_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//iwrEnblFlg
        {"DS_CONTR_DTL_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrDtlPk
		null,	//A
        {"XX_DPLY_CTRL_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDplyCtrlFlg
        {"XX_DPLY_CTRL_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDplyCtrlFlg_BT
		null,	//B
        {"DS_MTR_READ_TP_GRP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsMtrReadTpGrpCd_BS
        {"XX_GENL_FLD_AREA_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxGenlFldAreaTxt_BC
        {"DS_MTR_READ_TP_GRP_CD",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsMtrReadTpGrpCd_BD
        {"SVC_TASK_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTaskNum_B
        {"DS_TEST_COPY_CLS_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsTestCopyClsCd_BS
        {"DS_TEST_COPY_CLS_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsTestCopyClsCd_BC
        {"DS_TEST_COPY_CLS_DESC_TXT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsTestCopyClsDescTxt_BD
		null,	//C
		null,	//D
        {"XX_ROW_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRowNum
        {"XX_PAGE_SHOW_FROM_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowFromNum
        {"XX_PAGE_SHOW_TO_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowToNum
        {"XX_PAGE_SHOW_OF_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowOfNum
        {"EFF_FROM_DT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//effFromDt
        {"EFF_THRU_DT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//effThruDt
		null,	//E
		null,	//P
        {"DS_CONTR_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrPk_P
        {"SVC_MACH_MSTR_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachMstrPk_P
        {"SCHD_AGMT_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//schdAgmtNum_P
        {"XX_FILE_DATA",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxFileData
        {"SVC_CMNT_TXT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcCmntTxt_PP
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

