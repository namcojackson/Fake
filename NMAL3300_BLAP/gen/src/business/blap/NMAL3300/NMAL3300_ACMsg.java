//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20180727133625000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NMAL3300_ACMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NMAL3300;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NMAL3300 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NMAL3300_ACMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** HRCH_EFF_LVL_TP_CD_A1*/
	public final EZDCStringItem              hrchEffLvlTpCd_A1;

    /** HRCH_EFF_LVL_TP_NM_A1*/
	public final EZDCStringItem              hrchEffLvlTpNm_A1;

    /** DS_TRX_RULE_TP_CD_A1*/
	public final EZDCStringItem              dsTrxRuleTpCd_A1;

    /** DS_TRX_RULE_TP_NM_A1*/
	public final EZDCStringItem              dsTrxRuleTpNm_A1;

    /** DS_CUST_TRX_RULE_PK_A1*/
	public final EZDCBigDecimalItem              dsCustTrxRulePk_A1;

    /** LOC_NUM_A1*/
	public final EZDCStringItem              locNum_A1;

    /** XX_CHK_BOX_A1*/
	public final EZDCStringItem              xxChkBox_A1;

    /** DS_BLKT_PO_NUM_A1*/
	public final EZDCStringItem              dsBlktPoNum_A1;

    /** DS_PO_EXPR_DT_A1*/
	public final EZDCDateItem              dsPoExprDt_A1;

    /** DS_DEF_BILL_TO_CD_A1*/
	public final EZDCStringItem              dsDefBillToCd_A1;

    /** XX_ALL_LINE_ADDR_A1*/
	public final EZDCStringItem              xxAllLineAddr_A1;

    /** DS_DEF_SHIP_TO_CD_A1*/
	public final EZDCStringItem              dsDefShipToCd_A1;

    /** XX_ALL_LINE_ADDR_A2*/
	public final EZDCStringItem              xxAllLineAddr_A2;

    /** XX_CHK_BOX_A2*/
	public final EZDCStringItem              xxChkBox_A2;

    /** XX_CHK_BOX_A3*/
	public final EZDCStringItem              xxChkBox_A3;

    /** CUST_EFF_LVL_NM_A1*/
	public final EZDCStringItem              custEffLvlNm_A1;

    /** XX_YES_NO_CD_A1*/
	public final EZDCStringItem              xxYesNoCd_A1;


	/**
	 * NMAL3300_ACMsg is constructor.
	 * The initialization when the instance of NMAL3300_ACMsg is generated.
	 */
	public NMAL3300_ACMsg() {
		this(false, -1);
	}

	/**
	 * NMAL3300_ACMsg is constructor.
	 * The initialization when the instance of NMAL3300_ACMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NMAL3300_ACMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		hrchEffLvlTpCd_A1 = (EZDCStringItem)newItem("hrchEffLvlTpCd_A1");
		hrchEffLvlTpNm_A1 = (EZDCStringItem)newItem("hrchEffLvlTpNm_A1");
		dsTrxRuleTpCd_A1 = (EZDCStringItem)newItem("dsTrxRuleTpCd_A1");
		dsTrxRuleTpNm_A1 = (EZDCStringItem)newItem("dsTrxRuleTpNm_A1");
		dsCustTrxRulePk_A1 = (EZDCBigDecimalItem)newItem("dsCustTrxRulePk_A1");
		locNum_A1 = (EZDCStringItem)newItem("locNum_A1");
		xxChkBox_A1 = (EZDCStringItem)newItem("xxChkBox_A1");
		dsBlktPoNum_A1 = (EZDCStringItem)newItem("dsBlktPoNum_A1");
		dsPoExprDt_A1 = (EZDCDateItem)newItem("dsPoExprDt_A1");
		dsDefBillToCd_A1 = (EZDCStringItem)newItem("dsDefBillToCd_A1");
		xxAllLineAddr_A1 = (EZDCStringItem)newItem("xxAllLineAddr_A1");
		dsDefShipToCd_A1 = (EZDCStringItem)newItem("dsDefShipToCd_A1");
		xxAllLineAddr_A2 = (EZDCStringItem)newItem("xxAllLineAddr_A2");
		xxChkBox_A2 = (EZDCStringItem)newItem("xxChkBox_A2");
		xxChkBox_A3 = (EZDCStringItem)newItem("xxChkBox_A3");
		custEffLvlNm_A1 = (EZDCStringItem)newItem("custEffLvlNm_A1");
		xxYesNoCd_A1 = (EZDCStringItem)newItem("xxYesNoCd_A1");
	}

	/**
	 * get the type of array which is stored
	 * @return NMAL3300_ACMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NMAL3300_ACMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"hrchEffLvlTpCd_A1", "hrchEffLvlTpCd_A1", "A1", null, TYPE_HANKAKUEISU, "2", null},
	{"hrchEffLvlTpNm_A1", "hrchEffLvlTpNm_A1", "A1", null, TYPE_HANKAKUEISU, "40", null},
	{"dsTrxRuleTpCd_A1", "dsTrxRuleTpCd_A1", "A1", null, TYPE_HANKAKUEISU, "2", null},
	{"dsTrxRuleTpNm_A1", "dsTrxRuleTpNm_A1", "A1", null, TYPE_HANKAKUEISU, "60", null},
	{"dsCustTrxRulePk_A1", "dsCustTrxRulePk_A1", "A1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"locNum_A1", "locNum_A1", "A1", null, TYPE_HANKAKUEISU, "30", null},
	{"xxChkBox_A1", "xxChkBox_A1", "A1", null, TYPE_HANKAKUEIJI, "1", null},
	{"dsBlktPoNum_A1", "dsBlktPoNum_A1", "A1", null, TYPE_HANKAKUEISU, "30", null},
	{"dsPoExprDt_A1", "dsPoExprDt_A1", "A1", null, TYPE_NENTSUKIHI, "8", null},
	{"dsDefBillToCd_A1", "dsDefBillToCd_A1", "A1", null, TYPE_HANKAKUEISU, "20", null},
	{"xxAllLineAddr_A1", "xxAllLineAddr_A1", "A1", null, TYPE_HANKAKUEISU, "400", null},
	{"dsDefShipToCd_A1", "dsDefShipToCd_A1", "A1", null, TYPE_HANKAKUEISU, "20", null},
	{"xxAllLineAddr_A2", "xxAllLineAddr_A2", "A2", null, TYPE_HANKAKUEISU, "400", null},
	{"xxChkBox_A2", "xxChkBox_A2", "A2", null, TYPE_HANKAKUEIJI, "1", null},
	{"xxChkBox_A3", "xxChkBox_A3", "A3", null, TYPE_HANKAKUEIJI, "1", null},
	{"custEffLvlNm_A1", "custEffLvlNm_A1", "A1", null, TYPE_HANKAKUEISU, "60", null},
	{"xxYesNoCd_A1", "xxYesNoCd_A1", "A1", null, TYPE_HANKAKUEISU, "1", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"HRCH_EFF_LVL_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//hrchEffLvlTpCd_A1
        {"HRCH_EFF_LVL_TP_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//hrchEffLvlTpNm_A1
        {"DS_TRX_RULE_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsTrxRuleTpCd_A1
        {"DS_TRX_RULE_TP_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsTrxRuleTpNm_A1
        {"DS_CUST_TRX_RULE_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsCustTrxRulePk_A1
        {"LOC_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//locNum_A1
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_A1
        {"DS_BLKT_PO_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsBlktPoNum_A1
        {"DS_PO_EXPR_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsPoExprDt_A1
        {"DS_DEF_BILL_TO_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsDefBillToCd_A1
        {"XX_ALL_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxAllLineAddr_A1
        {"DS_DEF_SHIP_TO_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsDefShipToCd_A1
        {"XX_ALL_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxAllLineAddr_A2
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_A2
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_A3
        {"CUST_EFF_LVL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//custEffLvlNm_A1
        {"XX_YES_NO_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxYesNoCd_A1
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

