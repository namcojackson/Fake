// This file was automatically generated by Business Component
// Interface Definition Document (Business Component Interface Message
// Data Definition) and XLA200710010.
// Generated on :20230417152518000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in
// :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla
// XLA200710010
/*
 * NSAL0310CMsg.java Copyright FUJITSU LIMITED 2007Outline : 1.
 * Release: No. Date Ver Updater Content 1
 */
package business.blap.NSAL0310;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL0310 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL0310CMsg extends EZDCMsg implements EZDSchemaItemDefines {

    // Serial Version UID
    private static final long serialVersionUID = 1L;

    // Data Definition
    /** DS_CONTR_PK */
    public final EZDCBigDecimalItem dsContrPk;

    /** P */
    public final business.blap.NSAL0310.NSAL0310_PCMsgArray P;

    /** DS_ACCT_NUM_H */
    public final EZDCStringItem dsAcctNum_H;

    /** CONTR_VRSN_EFF_FROM_DT_H */
    public final EZDCDateItem contrVrsnEffFromDt_H;

    /** CONTR_VRSN_EFF_THRU_DT_H */
    public final EZDCDateItem contrVrsnEffThruDt_H;

    /** DS_ACCT_NM */
    public final EZDCStringItem dsAcctNm;

    /** XX_LINK_PROT_R */
    public final EZDCStringItem xxLinkProt_R;

    /** SER_NUM */
    public final EZDCStringItem serNum;

    /** XX_LINK_PROT_M */
    public final EZDCStringItem xxLinkProt_M;

    /** MDL_NM */
    public final EZDCStringItem mdlNm;

    /** XX_COMN_SCR_COL_VAL_TXT_H */
    public final EZDCStringItem xxComnScrColValTxt_H;

    /** XX_SCR_ITEM_29_TXT */
    public final EZDCStringItem xxScrItem29Txt;

    /** MDSE_DESC_SHORT_TXT */
    public final EZDCStringItem mdseDescShortTxt;

    /** XX_CONFIG_FLG */
    public final EZDCStringItem xxConfigFlg;

    /** CONTR_INAC_FLG */
    public final EZDCStringItem contrInacFlg;

    /** XX_PAGE_SHOW_FROM_NUM */
    public final EZDCBigDecimalItem xxPageShowFromNum;

    /** XX_PAGE_SHOW_TO_NUM */
    public final EZDCBigDecimalItem xxPageShowToNum;

    /** XX_PAGE_SHOW_OF_NUM */
    public final EZDCBigDecimalItem xxPageShowOfNum;

    /** XX_ROW_NUM */
    public final EZDCBigDecimalItem xxRowNum;

    /** A */
    public final business.blap.NSAL0310.NSAL0310_ACMsgArray A;

    /** XX_SORT_TBL_NM */
    public final EZDCStringItem xxSortTblNm;

    /** XX_SORT_ITEM_NM */
    public final EZDCStringItem xxSortItemNm;

    /** XX_SORT_ORD_BY_TXT */
    public final EZDCStringItem xxSortOrdByTxt;

    /** XX_FILE_DATA */
    public final EZDCMimeSourceItem xxFileData;

    /**
     * NSAL0310CMsg is constructor. The initialization when the
     * instance of NSAL0310CMsg is generated.
     */
    public NSAL0310CMsg() {
        this(false, -1);
    }

    /**
     * NSAL0310CMsg is constructor. The initialization when the
     * instance of NSAL0310CMsg is generated.
     * @param child Flag whether it is child message
     * @param eleNo Index Number of array
     */
    public NSAL0310CMsg(boolean child, int eleNo) {
        super(child, eleNo);

        // Initialization of item

        dsContrPk = (EZDCBigDecimalItem) newItem("dsContrPk");
        P = (business.blap.NSAL0310.NSAL0310_PCMsgArray) newMsgArray("P");
        dsAcctNum_H = (EZDCStringItem) newItem("dsAcctNum_H");
        contrVrsnEffFromDt_H = (EZDCDateItem) newItem("contrVrsnEffFromDt_H");
        contrVrsnEffThruDt_H = (EZDCDateItem) newItem("contrVrsnEffThruDt_H");
        dsAcctNm = (EZDCStringItem) newItem("dsAcctNm");
        xxLinkProt_R = (EZDCStringItem) newItem("xxLinkProt_R");
        serNum = (EZDCStringItem) newItem("serNum");
        xxLinkProt_M = (EZDCStringItem) newItem("xxLinkProt_M");
        mdlNm = (EZDCStringItem) newItem("mdlNm");
        xxComnScrColValTxt_H = (EZDCStringItem) newItem("xxComnScrColValTxt_H");
        xxScrItem29Txt = (EZDCStringItem) newItem("xxScrItem29Txt");
        mdseDescShortTxt = (EZDCStringItem) newItem("mdseDescShortTxt");
        xxConfigFlg = (EZDCStringItem) newItem("xxConfigFlg");
        contrInacFlg = (EZDCStringItem) newItem("contrInacFlg");
        xxPageShowFromNum = (EZDCBigDecimalItem) newItem("xxPageShowFromNum");
        xxPageShowToNum = (EZDCBigDecimalItem) newItem("xxPageShowToNum");
        xxPageShowOfNum = (EZDCBigDecimalItem) newItem("xxPageShowOfNum");
        xxRowNum = (EZDCBigDecimalItem) newItem("xxRowNum");
        A = (business.blap.NSAL0310.NSAL0310_ACMsgArray) newMsgArray("A");
        xxSortTblNm = (EZDCStringItem) newItem("xxSortTblNm");
        xxSortItemNm = (EZDCStringItem) newItem("xxSortItemNm");
        xxSortOrdByTxt = (EZDCStringItem) newItem("xxSortOrdByTxt");
        xxFileData = (EZDCMimeSourceItem) newItem("xxFileData");
    }

    /**
     * get the type of array which is stored
     * @return NSAL0310CMsgArray
     */
    public EZDMsgArray getMyArray() {
        return new NSAL0310CMsgArray();
    }

    /**
     * Array of schema data(Basic data)
     */
    private static final String[][] BASE_CONTENTS = {

    {"dsContrPk", "dsContrPk", null, null, TYPE_SEISU_SYOSU, "28", "0" }, {"P", "P", null, "1000", "business.blap.NSAL0310.NSAL0310_PCMsgArray", null, null },

    {"dsAcctNum_H", "dsAcctNum_H", "H", null, TYPE_HANKAKUEISU, "20", null }, {"contrVrsnEffFromDt_H", "contrVrsnEffFromDt_H", "H", null, TYPE_NENTSUKIHI, "8", null },
            {"contrVrsnEffThruDt_H", "contrVrsnEffThruDt_H", "H", null, TYPE_NENTSUKIHI, "8", null }, {"dsAcctNm", "dsAcctNm", null, null, TYPE_HANKAKUEISU, "360", null },
            {"xxLinkProt_R", "xxLinkProt_R", "R", null, TYPE_HANKAKUEISU, "1", null }, {"serNum", "serNum", null, null, TYPE_HANKAKUEISU, "30", null }, {"xxLinkProt_M", "xxLinkProt_M", "M", null, TYPE_HANKAKUEISU, "1", null },
            {"mdlNm", "mdlNm", null, null, TYPE_HANKAKUEISU, "50", null }, {"xxComnScrColValTxt_H", "xxComnScrColValTxt_H", "H", null, TYPE_HANKAKUEISU, "4000", null },
            {"xxScrItem29Txt", "xxScrItem29Txt", null, null, TYPE_HANKAKUEISU, "29", null }, {"mdseDescShortTxt", "mdseDescShortTxt", null, null, TYPE_HANKAKUEISU, "250", null },
            {"xxConfigFlg", "xxConfigFlg", null, null, TYPE_HANKAKUEISU, "1", null }, {"contrInacFlg", "contrInacFlg", null, null, TYPE_HANKAKUEISU, "1", null },
            {"xxPageShowFromNum", "xxPageShowFromNum", null, null, TYPE_SEISU_SYOSU, "5", "0" }, {"xxPageShowToNum", "xxPageShowToNum", null, null, TYPE_SEISU_SYOSU, "5", "0" },
            {"xxPageShowOfNum", "xxPageShowOfNum", null, null, TYPE_SEISU_SYOSU, "5", "0" }, {"xxRowNum", "xxRowNum", null, null, TYPE_SEISU_SYOSU, "5", "0" },
            {"A", "A", null, "100", "business.blap.NSAL0310.NSAL0310_ACMsgArray", null, null },

            {"xxSortTblNm", "xxSortTblNm", null, null, TYPE_HANKAKUEISU, "1", null }, {"xxSortItemNm", "xxSortItemNm", null, null, TYPE_HANKAKUEISU, "50", null },
            {"xxSortOrdByTxt", "xxSortOrdByTxt", null, null, TYPE_HANKAKUEISU, "4", null }, {"xxFileData", "xxFileData", null, null, TYPE_UPLOAD, null, null }, };

    /**
     * Array of schema data(Visible Field)
     */
    private static final String[][] DISP_CONTENTS = {

    {"DS_CONTR_PK", NO, null, null, null, NO, NO, NO, NO, null, null, null, null, NO, NO }, // dsContrPk
            null, // P
            {"DS_ACCT_NUM", NO, null, null, null, NO, NO, NO, NO, null, null, null, null, NO, NO }, // dsAcctNum_H
            {"CONTR_VRSN_EFF_FROM_DT", NO, null, null, null, NO, NO, NO, NO, null, null, null, null, NO, NO }, // contrVrsnEffFromDt_H
            {"CONTR_VRSN_EFF_THRU_DT", NO, null, null, null, NO, NO, NO, NO, null, null, null, null, NO, NO }, // contrVrsnEffThruDt_H
            {"DS_ACCT_NM", NO, null, null, null, NO, NO, NO, NO, null, null, null, null, NO, NO }, // dsAcctNm
            {"XX_LINK_PROT", NO, null, null, null, NO, NO, NO, NO, null, null, null, null, NO, NO }, // xxLinkProt_R
            {"SER_NUM", NO, null, null, null, NO, NO, NO, NO, null, null, null, null, NO, NO }, // serNum
            {"XX_LINK_PROT", NO, null, null, null, NO, NO, NO, NO, null, null, null, null, NO, NO }, // xxLinkProt_M
            {"MDL_NM", NO, null, null, null, NO, NO, NO, NO, null, null, null, null, NO, NO }, // mdlNm
            {"XX_COMN_SCR_COL_VAL_TXT", NO, null, null, null, NO, NO, NO, NO, null, null, null, null, NO, NO }, // xxComnScrColValTxt_H
            {"XX_SCR_ITEM_29_TXT", NO, null, null, null, NO, NO, NO, NO, null, null, null, null, NO, NO }, // xxScrItem29Txt
            {"MDSE_DESC_SHORT_TXT", NO, null, null, null, NO, NO, NO, NO, null, null, null, null, NO, NO }, // mdseDescShortTxt
            {"XX_CONFIG_FLG", NO, null, null, null, NO, NO, NO, NO, null, null, null, null, NO, NO }, // xxConfigFlg
            {"CONTR_INAC_FLG", NO, null, null, null, NO, NO, NO, NO, null, null, null, null, NO, NO }, // contrInacFlg
            {"XX_PAGE_SHOW_FROM_NUM", NO, null, null, null, NO, NO, NO, NO, null, null, null, null, NO, NO }, // xxPageShowFromNum
            {"XX_PAGE_SHOW_TO_NUM", NO, null, null, null, NO, NO, NO, NO, null, null, null, null, NO, NO }, // xxPageShowToNum
            {"XX_PAGE_SHOW_OF_NUM", NO, null, null, null, NO, NO, NO, NO, null, null, null, null, NO, NO }, // xxPageShowOfNum
            {"XX_ROW_NUM", NO, null, null, null, NO, NO, NO, NO, null, null, null, null, NO, NO }, // xxRowNum
            null, // A
            {"XX_SORT_TBL_NM", NO, null, null, null, NO, NO, NO, NO, null, null, null, null, NO, NO }, // xxSortTblNm
            {"XX_SORT_ITEM_NM", NO, null, null, null, NO, NO, NO, NO, null, null, null, null, NO, NO }, // xxSortItemNm
            {"XX_SORT_ORD_BY_TXT", NO, null, null, null, NO, NO, NO, NO, null, null, null, null, NO, NO }, // xxSortOrdByTxt
            {"XX_FILE_DATA", NO, null, null, null, NO, NO, NO, NO, null, null, null, null, NO, NO }, // xxFileData
    };

    /**
     * get Array of common (basic) data.
     * @return Array of common (basis) data
     */
    protected String[][] getBaseContents() {
        return BASE_CONTENTS;
    }

    /**
     * get Array of Display Field.
     * @return Array of Display Fields
     */
    protected String[][] getDispContents() {
        return DISP_CONTENTS;
    }

}
