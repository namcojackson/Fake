//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20160706111638000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NMAL2720BMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NMAL2720;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NMAL2720 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NMAL2720BMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** BIZ_AREA_ORG_CD_H*/
	public final EZDBStringItem              bizAreaOrgCd_H;

    /** BIZ_AREA_ORG_CD_P*/
	public final EZDBStringItemArray              bizAreaOrgCd_P;

    /** BIZ_AREA_ORG_DESC_TXT_P*/
	public final EZDBStringItemArray              bizAreaOrgDescTxt_P;

    /** XX_PSN_NM_H*/
	public final EZDBStringItem              xxPsnNm_H;

    /** PSN_NUM_H*/
	public final EZDBStringItem              psnNum_H;

    /** ORG_NM_H*/
	public final EZDBStringItem              orgNm_H;

    /** PSN_CD_H*/
	public final EZDBStringItem              psnCd_H;

    /** XX_CHK_BOX_AH*/
	public final EZDBStringItem              xxChkBox_AH;

    /** A*/
	public final business.servlet.NMAL2720.NMAL2720_ABMsgArray              A;

    /** XX_PSN_NM_D1*/
	public final EZDBStringItem              xxPsnNm_D1;

    /** PSN_NUM_D1*/
	public final EZDBStringItem              psnNum_D1;

    /** EFF_FROM_DT_D1*/
	public final EZDBDateItem              effFromDt_D1;

    /** EFF_THRU_DT_D1*/
	public final EZDBDateItem              effThruDt_D1;

    /** MASS_UPD_RSN_CMNT_TXT_D1*/
	public final EZDBStringItem              massUpdRsnCmntTxt_D1;

    /** XX_FILE_DATA*/
	public final EZDBMimeSourceItem              xxFileData;

    /** XX_SORT_TBL_NM*/
	public final EZDBStringItem              xxSortTblNm;

    /** XX_SORT_ITEM_NM*/
	public final EZDBStringItem              xxSortItemNm;

    /** XX_SORT_ORD_BY_TXT*/
	public final EZDBStringItem              xxSortOrdByTxt;

    /** XX_SCR_EVENT_NM*/
	public final EZDBStringItem              xxScrEventNm;

    /** P*/
	public final business.servlet.NMAL2720.NMAL2720_PBMsgArray              P;


	/**
	 * NMAL2720BMsg is constructor.
	 * The initialization when the instance of NMAL2720BMsg is generated.
	 */
	public NMAL2720BMsg() {
		this(false, -1);
	}

	/**
	 * NMAL2720BMsg is constructor.
	 * The initialization when the instance of NMAL2720BMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NMAL2720BMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		bizAreaOrgCd_H = (EZDBStringItem)newItem("bizAreaOrgCd_H");
		bizAreaOrgCd_P = (EZDBStringItemArray)newItemArray("bizAreaOrgCd_P");
		bizAreaOrgDescTxt_P = (EZDBStringItemArray)newItemArray("bizAreaOrgDescTxt_P");
		xxPsnNm_H = (EZDBStringItem)newItem("xxPsnNm_H");
		psnNum_H = (EZDBStringItem)newItem("psnNum_H");
		orgNm_H = (EZDBStringItem)newItem("orgNm_H");
		psnCd_H = (EZDBStringItem)newItem("psnCd_H");
		xxChkBox_AH = (EZDBStringItem)newItem("xxChkBox_AH");
		A = (business.servlet.NMAL2720.NMAL2720_ABMsgArray)newMsgArray("A");
		xxPsnNm_D1 = (EZDBStringItem)newItem("xxPsnNm_D1");
		psnNum_D1 = (EZDBStringItem)newItem("psnNum_D1");
		effFromDt_D1 = (EZDBDateItem)newItem("effFromDt_D1");
		effThruDt_D1 = (EZDBDateItem)newItem("effThruDt_D1");
		massUpdRsnCmntTxt_D1 = (EZDBStringItem)newItem("massUpdRsnCmntTxt_D1");
		xxFileData = (EZDBMimeSourceItem)newItem("xxFileData");
		xxSortTblNm = (EZDBStringItem)newItem("xxSortTblNm");
		xxSortItemNm = (EZDBStringItem)newItem("xxSortItemNm");
		xxSortOrdByTxt = (EZDBStringItem)newItem("xxSortOrdByTxt");
		xxScrEventNm = (EZDBStringItem)newItem("xxScrEventNm");
		P = (business.servlet.NMAL2720.NMAL2720_PBMsgArray)newMsgArray("P");
	}

	/**
	 * get the type of array which is stored
	 * @return NMAL2720BMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NMAL2720BMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"bizAreaOrgCd_H", "bizAreaOrgCd_H", "H", null, TYPE_HANKAKUEISU, "8", null},
	{"bizAreaOrgCd_P", "bizAreaOrgCd_P", "P", "99", TYPE_HANKAKUEISU, "8", null},
	{"bizAreaOrgDescTxt_P", "bizAreaOrgDescTxt_P", "P", "99", TYPE_HANKAKUEISU, "50", null},
	{"xxPsnNm_H", "xxPsnNm_H", "H", null, TYPE_HANKAKUEISU, "62", null},
	{"psnNum_H", "psnNum_H", "H", null, TYPE_HANKAKUEISU, "50", null},
	{"orgNm_H", "orgNm_H", "H", null, TYPE_HANKAKUEISU, "50", null},
	{"psnCd_H", "psnCd_H", "H", null, TYPE_HANKAKUEISU, "8", null},
	{"xxChkBox_AH", "xxChkBox_AH", "AH", null, TYPE_HANKAKUEIJI, "1", null},
	{"A", "A", null, "1000", "business.servlet.NMAL2720.NMAL2720_ABMsgArray", null, null},
	
	{"xxPsnNm_D1", "xxPsnNm_D1", "D1", null, TYPE_HANKAKUEISU, "62", null},
	{"psnNum_D1", "psnNum_D1", "D1", null, TYPE_HANKAKUEISU, "50", null},
	{"effFromDt_D1", "effFromDt_D1", "D1", null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt_D1", "effThruDt_D1", "D1", null, TYPE_NENTSUKIHI, "8", null},
	{"massUpdRsnCmntTxt_D1", "massUpdRsnCmntTxt_D1", "D1", null, TYPE_HANKAKUEISU, "4000", null},
	{"xxFileData", "xxFileData", null, null, TYPE_UPLOAD, null, null},
	{"xxSortTblNm", "xxSortTblNm", null, null, TYPE_HANKAKUEISU, "1", null},
	{"xxSortItemNm", "xxSortItemNm", null, null, TYPE_HANKAKUEISU, "50", null},
	{"xxSortOrdByTxt", "xxSortOrdByTxt", null, null, TYPE_HANKAKUEISU, "4", null},
	{"xxScrEventNm", "xxScrEventNm", null, null, TYPE_HANKAKUEISU, "50", null},
	{"P", "P", null, "10", "business.servlet.NMAL2720.NMAL2720_PBMsgArray", null, null},
	
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"BIZ_AREA_ORG_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bizAreaOrgCd_H
        {"BIZ_AREA_ORG_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bizAreaOrgCd_P
        {"BIZ_AREA_ORG_DESC_TXT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bizAreaOrgDescTxt_P
        {"XX_PSN_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPsnNm_H
        {"PSN_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//psnNum_H
        {"ORG_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//orgNm_H
        {"PSN_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//psnCd_H
        {"XX_CHK_BOX",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_AH
		null,	//A
        {"XX_PSN_NM", YES,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPsnNm_D1
        {"PSN_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//psnNum_D1
        {"EFF_FROM_DT", YES,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//effFromDt_D1
        {"EFF_THRU_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//effThruDt_D1
        {"MASS_UPD_RSN_CMNT_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//massUpdRsnCmntTxt_D1
        {"XX_FILE_DATA",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxFileData
        {"XX_SORT_TBL_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxSortTblNm
        {"XX_SORT_ITEM_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxSortItemNm
        {"XX_SORT_ORD_BY_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxSortOrdByTxt
        {"XX_SCR_EVENT_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxScrEventNm
		null,	//P
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

