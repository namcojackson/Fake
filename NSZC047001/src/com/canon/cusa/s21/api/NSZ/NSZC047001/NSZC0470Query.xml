<?xml version="1.0" encoding="UTF-8"?>

<sqlMap namespace="NSZC0470Query">
    <statement id="getContrInfo" parameterClass="Map" resultClass="Map">
        SELECT
             A.DS_CONTR_DTL_TP_CD
            ,A.DS_CONTR_DTL_STS_CD
            ,A.QLTY_ASRN_HLD_FLG
            ,A.MTR_HLD_FLG
            ,A.CONTR_HLD_FLG
            ,A.BLLG_HLD_FLG
            ,A.QLTY_ASRN_HLD_PEND_APVL_FLG
            ,A.BASE_INV_UP_TO_DT
            ,A.BASE_BLLG_CYCLE_CD
            ,A.BASE_BLLG_TMG_CD
            ,A.MTR_BLLG_TMG_CD
            ,A.MTR_CLO_DAY
            ,A.CONTR_CLO_DAY
            ,A.CONTR_BLLG_DAY
            ,A.MTR_BLLG_DAY
            ,A.DS_CONTR_DTL_PK
            ,A.PRNT_DS_CONTR_DTL_PK
            ,A.CONTR_EFF_FROM_DT
            ,A.CONTR_EFF_THRU_DT
            ,A.DS_CONTR_DTL_TP_CD
            ,A.BASE_BILL_TO_CUST_CD
            ,A.SVC_PGM_MDSE_CD
            ,B.DS_ACCT_NUM
            ,B.DS_CONTR_CATG_CD
            ,B.CCY_CD
            ,C.BASE_CHRG_FLG
            ,C.USG_CHRG_FLG
            ,D.BLLG_MTR_BLLG_CYCLE_CD
            ,D.MTR_INV_UP_TO_DT
            ,A.BASE_BLLG_LAST_BLLG_DT
            ,A.MTR_BLLG_LAST_BLLG_DT
            ,A.SVC_MACH_MSTR_PK
            ,A.DS_CONTR_PK
        FROM
             DS_CONTR_DTL      A
            ,DS_CONTR          B
            ,DS_CONTR_DTL_TP   C
            ,DS_CONTR_BLLG_MTR D
        WHERE
                A.EZCANCELFLAG       = '0'
            AND A.GLBL_CMPY_CD       = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK    = #dsContrDtlPk#
            AND B.EZCANCELFLAG       = '0'
            AND A.GLBL_CMPY_CD       = B.GLBL_CMPY_CD
            AND A.DS_CONTR_PK        = B.DS_CONTR_PK
            AND C.EZCANCELFLAG       = '0'
            AND A.GLBL_CMPY_CD       = C.GLBL_CMPY_CD
            AND A.DS_CONTR_DTL_TP_CD = C.DS_CONTR_DTL_TP_CD
            AND D.EZCANCELFLAG(+)    = '0'
            AND A.GLBL_CMPY_CD       = D.GLBL_CMPY_CD(+)
            AND A.DS_CONTR_DTL_PK    = D.DS_CONTR_DTL_PK(+)
    </statement>

    <statement id="getPrntContrDtlInfo" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             PRNT.DS_CONTR_DTL_PK
        FROM
             DS_CONTR_DTL A
            ,DS_CONTR_DTL PRNT
        WHERE
                A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK       = #dsContrDtlPk#
            AND PRNT.EZCANCELFLAG       = '0'
            AND A.GLBL_CMPY_CD          = PRNT.GLBL_CMPY_CD
            AND A.PRNT_DS_CONTR_DTL_PK  = PRNT.DS_CONTR_DTL_PK
            AND PRNT.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCd#
    </statement>

    <statement id="getSkipRecovInfo" parameterClass="Map" resultClass="Map">
        SELECT
             A.SKIP_RECOV_TP_CD
            ,A.SKIP_RECOV_MTH
            ,B.BLLG_SKIP_FLG
            ,B.BLLG_RECOV_FLG
        FROM
             DS_CONTR_SKIP_RECOV A
            ,SKIP_RECOV_TP       B
        WHERE
                A.EZCANCELFLAG       = '0'
            AND A.GLBL_CMPY_CD       = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK    = #dsContrDtlPk#
            AND A.SVC_INV_CHRG_TP_CD = #svcInvChrgTpCd#
            AND B.EZCANCELFLAG       = '0'
            AND A.GLBL_CMPY_CD       = B.GLBL_CMPY_CD
            AND A.SKIP_RECOV_TP_CD   = B.SKIP_RECOV_TP_CD
        ORDER BY
            A.SKIP_RECOV_MTH
    </statement>

    <statement id="getOtherPrcEff" parameterClass="Map" resultClass="Map">
        SELECT
            *
        FROM
            DS_CONTR_PRC_EFF A
        WHERE
                A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK       = #dsContrDtlPk#
        <isNotNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK  = #dsContrBllgMtrPk#
        </isNotNull>
            AND A.DS_CONTR_PRC_EFF_PK   &lt;&gt; #dsContrPrcEffPk#
            AND A.CONTR_PRC_EFF_FROM_DT &gt; #contrPrcEffFromDt#
            AND A.BASE_CHRG_FLG         = #baseChrgFlg#
            AND A.USG_CHRG_FLG          = #usgChrgFlg#
        <iterate property="dsContrDtlStsCdList" var="dsContrDtlStsCd[]" open="AND A.DS_CONTR_PRC_EFF_STS_CD NOT IN (" conjunction= "," close=")">
            #dsContrDtlStsCd[]#
        </iterate>
        ORDER BY
            A.CONTR_PRC_EFF_FROM_DT
    </statement>

    <statement id="getPrcEff" parameterClass="Map" resultClass="Map">
        SELECT
            *
        FROM
            DS_CONTR_PRC_EFF A
        WHERE
                A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK       = #dsContrDtlPk#
        <isNotNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK  = #dsContrBllgMtrPk#
        </isNotNull>
            AND A.BASE_CHRG_FLG         = #baseChrgFlg#
            AND A.USG_CHRG_FLG          = #usgChrgFlg#
        <iterate property="dsContrDtlStsCdList" var="dsContrDtlStsCd[]" open="AND A.DS_CONTR_PRC_EFF_STS_CD NOT IN (" conjunction= "," close=")">
            #dsContrDtlStsCd[]#
        </iterate>
        ORDER BY
            A.CONTR_PRC_EFF_FROM_DT
    </statement>

    <statement id="getLastBilledDt" parameterClass="Map" resultClass="String">
        SELECT
            MAX(A.BLLG_SCHD_FROM_DT) AS BLLG_SCHD_FROM_DT
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.EZCANCELFLAG       = '0'
            AND A.GLBL_CMPY_CD       = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK    = #dsContrDtlPk#
        <isNotNull property="dsContrPrcEffPk">
            AND A.DS_CONTR_PRC_EFF_PK = #dsContrPrcEffPk#
        </isNotNull>
            AND A.INV_FLG            = 'Y'
            AND A.BASE_CHRG_FLG      = #baseChrgFlg#
            AND A.USG_CHRG_FLG       = #usgChrgFlg#
            AND A.DS_BLLG_SCHD_TP_CD = #dsBllgSchdTpCd#
            AND A.BLLG_SCHD_FROM_DT  &gt;= #contrPrcEffFromDt#
    </statement>

    <statement id="getInvSchdMaxThruDt" parameterClass="Map" resultClass="String">
        SELECT
            MAX(A.BLLG_SCHD_THRU_DT) AS BLLG_SCHD_THRU_DT
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.EZCANCELFLAG       = '0'
            AND A.GLBL_CMPY_CD       = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK    = #dsContrDtlPk#
        <isNotNull property="dsContrPrcEffPk">
            AND A.DS_CONTR_PRC_EFF_PK = #dsContrPrcEffPk#
        </isNotNull>
        <isNotNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
        </isNotNull>
            AND A.DS_BLLG_SCHD_STS_CD = #stsClose#
            AND A.BASE_CHRG_FLG       = #baseChrgFlg#
            AND A.USG_CHRG_FLG        = #usgChrgFlg#
            AND A.DS_BLLG_SCHD_TP_CD  = #dsBllgSchdTpCd#
    </statement>

    <statement id="getDsContrPrcEffMtr" parameterClass="Map" resultClass="Map">
        SELECT
             A.CONTR_XS_COPY_PK
            ,A.XS_MTR_COPY_QTY
            ,A.XS_MTR_AMT_RATE
            ,A.DS_CONTR_BLLG_MTR_PK
            ,A.XS_MTR_FIRST_FLG
        FROM
            DS_CONTR_PRC_EFF_MTR A
        WHERE
                A.EZCANCELFLAG        = '0'
            AND A.GLBL_CMPY_CD        = #glblCmpyCd#
            AND A.DS_CONTR_PRC_EFF_PK = #dsContrPrcEffPk#
        ORDER BY
            A.XS_MTR_COPY_QTY
    </statement>

    <statement id="getDeleteSchdList" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.DS_CONTR_BLLG_SCHD_PK
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.EZCANCELFLAG                   = '0'
            AND A.GLBL_CMPY_CD                   = #glblCmpyCd#
            AND A.DS_CONTR_PRC_EFF_PK            = #dsContrPrcEffPk#
 <!--             AND A.DS_CONTR_PRC_EFF_SQ_NUM        = #dsContrPrcEffSqPk# -->
            AND A.INV_FLG                        = #invFlg#
    </statement>

    <statement id="getDeleteSchdSmryList" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.DS_CONTR_BLLG_SCHD_SMRY_PK
        FROM
            DS_CONTR_BLLG_SCHD_SMRY A
        WHERE
                A.EZCANCELFLAG            = '0'
            AND A.GLBL_CMPY_CD            = #glblCmpyCd#
            AND A.DS_CONTR_PRC_EFF_PK     = #dsContrPrcEffPk#
            AND NOT EXISTS (
                    SELECT
                        *
                    FROM
                        DS_CONTR_BLLG_SCHD B
                    WHERE
                            B.EZCANCELFLAG                   = '0'
                        AND B.GLBL_CMPY_CD                   = A.GLBL_CMPY_CD
                        AND B.DS_CONTR_BLLG_SCHD_SMRY_PK     = A.DS_CONTR_BLLG_SCHD_SMRY_PK
                        AND B.INV_FLG                        = #invFlg#)
    </statement>

    <statement id="getDeletePrcEffList" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.DS_CONTR_PRC_EFF_PK
        FROM
            DS_CONTR_PRC_EFF A
        WHERE
                A.EZCANCELFLAG            = '0'
            AND A.GLBL_CMPY_CD            = #glblCmpyCd#
            AND A.DS_CONTR_PRC_EFF_PK     = #dsContrPrcEffPk#
            AND NOT EXISTS (
                    SELECT
                        *
                    FROM
                        DS_CONTR_BLLG_SCHD B
                    WHERE
                            B.EZCANCELFLAG                   = '0'
                        AND B.GLBL_CMPY_CD                   = A.GLBL_CMPY_CD
                        AND B.DS_CONTR_PRC_EFF_PK            = A.DS_CONTR_PRC_EFF_PK
                        AND B.INV_FLG                        = #invFlg#)
    </statement>

    <statement id="getDeletePrcEffMtrList" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.DS_CONTR_PRC_EFF_MTR_PK
        FROM
            DS_CONTR_PRC_EFF_MTR A
        WHERE
                A.EZCANCELFLAG            = '0'
            AND A.GLBL_CMPY_CD            = #glblCmpyCd#
            AND A.DS_CONTR_PRC_EFF_PK     = #dsContrPrcEffPk#
    </statement>

    <statement id="getDeleteSchdMtrList" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.DS_CONTR_BLLG_SCHD_MTR_PK
        FROM
            DS_CONTR_BLLG_SCHD_MTR A
        WHERE
                A.EZCANCELFLAG              = '0'
            AND A.GLBL_CMPY_CD              = #glblCmpyCd#
        <iterate property="dsContrBllgSchdSmryPkList" var="dsContrBllgSchdSmryPk[]" open="AND A.DS_CONTR_BLLG_SCHD_SMRY_PK IN (" conjunction= "," close=")">
            #dsContrBllgSchdSmryPk[]#
        </iterate>
    </statement>

    <statement id="getSchdSmryWithBilled" parameterClass="Map" resultClass="Map">
        SELECT
             A.DS_CONTR_BLLG_SCHD_SMRY_PK
            ,COUNT(*)                     AS PER_SCHD_NUM
            ,SUM(B.BASE_PRC_DEAL_AMT)     AS BASE_SUB_TOT_PRC_DEAL_AMT
            ,SUM(B.BASE_PRC_ADJ_DEAL_AMT) AS BASE_PRC_DEAL_ADJ_AMT
        FROM
             DS_CONTR_BLLG_SCHD_SMRY A
            ,DS_CONTR_BLLG_SCHD      B
        WHERE
                A.EZCANCELFLAG               =  '0'
            AND A.GLBL_CMPY_CD               =  #glblCmpyCd#
            AND A.DS_CONTR_PRC_EFF_PK        =  #dsContrPrcEffPk#
            AND A.BLLG_SCHD_FROM_DT          &lt; #lastBilledDt#
            AND A.BLLG_SCHD_THRU_DT          &gt; #lastBilledDt#
            AND B.EZCANCELFLAG               =  '0'
            AND A.GLBL_CMPY_CD               =  B.GLBL_CMPY_CD
            AND A.DS_CONTR_BLLG_SCHD_SMRY_PK =  B.DS_CONTR_BLLG_SCHD_SMRY_PK
            AND B.INV_TP_CD                  = 'Y'
        GROUP BY
            A.DS_CONTR_BLLG_SCHD_SMRY_PK
    </statement>

    <statement id="getFleetMachContrInfo" parameterClass="Map" resultClass="Map">
        SELECT
             A.DS_CONTR_DTL_PK
            ,A.DS_CONTR_DTL_TP_CD
            ,C.DS_CONTR_BLLG_MTR_PK
        FROM
             DS_CONTR_DTL      A
            ,DS_CONTR_DTL_TP   B
            ,DS_CONTR_BLLG_MTR C
            ,DS_CONTR_BLLG_MTR P
        WHERE
                A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.PRNT_DS_CONTR_DTL_PK = #dsContrDtlPk#
            AND A.CONTR_EFF_FROM_DT    &lt;= #contrEffFromDt#
            AND A.CONTR_EFF_THRU_DT    &gt;= #contrEffTruuDt#
            AND (
                 A.CONTR_CLO_DT         IS NULL
                 OR
                 A.CONTR_CLO_DT         &gt;= #contrCloDt#
            )
        <iterate property="dsContrDtlStsCdList" var="dsContrDtlStsCd[]" open="AND A.DS_CONTR_DTL_STS_CD NOT IN (" conjunction= "," close=")">
            #dsContrDtlStsCd[]#
        </iterate>
            AND B.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = B.GLBL_CMPY_CD
            AND A.DS_CONTR_DTL_TP_CD   = B.DS_CONTR_DTL_TP_CD
            AND B.MAIN_UNIT_LINE_FLG   = 'Y'
            AND B.USG_CHRG_FLG         = 'Y'
            AND C.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = C.GLBL_CMPY_CD
            AND A.DS_CONTR_DTL_PK      = C.DS_CONTR_DTL_PK
            AND P.EZCANCELFLAG         = '0'
            AND P.GLBL_CMPY_CD         = #glblCmpyCd#
            AND P.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
            AND C.BLLG_MTR_LB_CD       = P.BLLG_MTR_LB_CD
    </statement>

    <statement id="getFleetMachContrInfoRebil" parameterClass="Map" resultClass="Map">
        SELECT
             A.DS_CONTR_BLLG_SCHD_PK
            ,A.DS_CONTR_DTL_PK
            ,A.DS_CONTR_DTL_TP_CD
            ,A.DS_CONTR_BLLG_MTR_PK
            ,A.SVC_PHYS_MTR_READ_GRP_SQ
            ,B.SVC_MACH_MSTR_PK
        FROM
             DS_CONTR_BLLG_SCHD      A
            ,DS_CONTR_DTL            B
        WHERE
                A.EZCANCELFLAG               = '0'
            AND A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.PRNT_DS_CONTR_BLLG_SCHD_PK = #prntDsContrBllgSchdPk#
            AND B.EZCANCELFLAG               = '0'
            AND A.GLBL_CMPY_CD               = B.GLBL_CMPY_CD
            AND A.DS_CONTR_DTL_PK            = B.DS_CONTR_DTL_PK
    </statement>

    <statement id="getSumBaseDealAmt" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            SUM(B.BASE_ACTL_PRC_DEAL_AMT)     AS BASE_PRC_DEAL_AMT
        FROM
             DS_CONTR_PRC_EFF   A
            ,DS_CONTR_BLLG_SCHD B
        WHERE
                A.EZCANCELFLAG               =  '0'
            AND A.GLBL_CMPY_CD               =  #glblCmpyCd#
            AND A.DS_CONTR_PRC_EFF_PK        =  #dsContrPrcEffPk#
            AND B.EZCANCELFLAG               =  '0'
            AND A.GLBL_CMPY_CD               =  B.GLBL_CMPY_CD
            AND A.DS_CONTR_PRC_EFF_PK        =  B.DS_CONTR_PRC_EFF_PK
    </statement>

    <statement id="getDeletePrcEffListByDsContrDtlPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.DS_CONTR_PRC_EFF_PK
        FROM
            DS_CONTR_PRC_EFF A
        WHERE
                A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK       = #dsContrDtlPk#
        <isNotNull property="contrPrcEffFromDt">
            AND A.CONTR_PRC_EFF_FROM_DT &gt; #contrPrcEffFromDt#
        </isNotNull>
        <isNotNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK  = #dsContrBllgMtrPk#
        </isNotNull>
            AND A.BASE_CHRG_FLG         = #baseChrgFlg#
            AND A.USG_CHRG_FLG          = #usgChrgFlg#
        <iterate property="dsContrPrcEffStsCdList" var="dsContrPrcEffStsCd[]" open="AND DS_CONTR_PRC_EFF_STS_CD NOT IN (" conjunction= "," close=")">
            #dsContrDtlStsCd[]#
        </iterate>
    </statement>

    <statement id="getDeleteSchdSmryListByPrcEffPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.DS_CONTR_BLLG_SCHD_SMRY_PK
        FROM
            DS_CONTR_BLLG_SCHD_SMRY A
        WHERE
                A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.DS_CONTR_PRC_EFF_PK   = #dsContrPrcEffPk#
    </statement>

    <statement id="getDeleteSchdListByPrcEffPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.DS_CONTR_BLLG_SCHD_PK
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.DS_CONTR_PRC_EFF_PK   = #dsContrPrcEffPk#
    </statement>

    <statement id="getBllgSchdForSkipMonthBase" parameterClass="Map" resultClass="Map">
        SELECT
             A.DS_CONTR_BLLG_SCHD_PK
            ,A.BLLG_SCHD_FROM_DT
            ,A.BLLG_SCHD_THRU_DT
            ,A.DS_CONTR_DTL_TP_CD
            ,A.NEXT_BLLG_DT
            ,C.BASE_BLLG_TMG_CD
            ,C.MTR_BLLG_TMG_CD
            ,C.CONTR_BLLG_DAY
            ,C.MTR_BLLG_DAY
            ,C.BASE_INV_UP_TO_DT
            ,C.CONTR_CLO_DAY
            ,C.MTR_CLO_DAY
        FROM
             DS_CONTR_BLLG_SCHD A
            ,DS_BLLG_SCHD_TP    B
            ,DS_CONTR_DTL       C
        WHERE
                A.EZCANCELFLAG           = '0'
            AND A.GLBL_CMPY_CD           = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK        = #dsContrDtlPk#
            AND A.BASE_CHRG_FLG          = 'Y'
            AND A.INV_FLG                = 'N'
            <!-- START 2018/03/09 K.Kojima [QC#23600,DEL] -->
            <!-- AND A.NEXT_BLLG_DT           &gt;= #slsDt# -->
            <!-- END 2018/03/09 K.Kojima [QC#23600,DEL] -->
            AND B.EZCANCELFLAG           = '0'
            AND A.GLBL_CMPY_CD           = B.GLBL_CMPY_CD
            AND A.DS_BLLG_SCHD_TP_CD     = B.DS_BLLG_SCHD_TP_CD
            AND B.DS_CONTR_SCHD_DISP_FLG = 'Y'
            AND C.EZCANCELFLAG           = '0'
            AND A.GLBL_CMPY_CD           = C.GLBL_CMPY_CD
            AND A.DS_CONTR_DTL_PK        = C.DS_CONTR_DTL_PK
        ORDER BY
            A.BLLG_SCHD_FROM_DT DESC
    </statement>

    <statement id="getBllgSchdForSkipMonthUsg" parameterClass="Map" resultClass="Map">
        SELECT
             A.DS_CONTR_BLLG_SCHD_PK
            ,A.BLLG_SCHD_FROM_DT
            ,A.BLLG_SCHD_THRU_DT
            ,A.DS_CONTR_DTL_TP_CD
            ,A.NEXT_BLLG_DT
            ,C.BASE_BLLG_TMG_CD
            ,C.MTR_BLLG_TMG_CD
            ,C.CONTR_BLLG_DAY
            ,C.MTR_BLLG_DAY
            ,C.BASE_INV_UP_TO_DT
            ,C.CONTR_CLO_DAY
            ,C.MTR_CLO_DAY
        FROM
             DS_CONTR_BLLG_SCHD A
            ,DS_BLLG_SCHD_TP    B
            ,DS_CONTR_DTL       C
            ,DS_CONTR_BLLG_MTR  D
        WHERE
                A.EZCANCELFLAG           = '0'
            AND A.GLBL_CMPY_CD           = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK        = #dsContrDtlPk#
            AND A.USG_CHRG_FLG           = 'Y'
            AND A.INV_FLG                = 'N'
            <!-- START 2018/03/09 K.Kojima [QC#23600,DEL] -->
            <!-- AND A.NEXT_BLLG_DT           &gt;= #slsDt# -->
            <!-- END 2018/03/09 K.Kojima [QC#23600,DEL] -->
            AND B.EZCANCELFLAG           = '0'
            AND A.GLBL_CMPY_CD           = B.GLBL_CMPY_CD
            AND A.DS_BLLG_SCHD_TP_CD     = B.DS_BLLG_SCHD_TP_CD
            AND B.DS_CONTR_SCHD_DISP_FLG = 'Y'
            AND C.EZCANCELFLAG           = '0'
            AND A.GLBL_CMPY_CD           = C.GLBL_CMPY_CD
            AND A.DS_CONTR_DTL_PK        = C.DS_CONTR_DTL_PK
            AND D.EZCANCELFLAG           = '0'
            AND A.GLBL_CMPY_CD           = D.GLBL_CMPY_CD
            AND A.DS_CONTR_BLLG_MTR_PK   = D.DS_CONTR_BLLG_MTR_PK
            AND A.DS_CONTR_BLLG_MTR_PK   = #dsContrBllgMtrPk#
        ORDER BY
            A.BLLG_SCHD_FROM_DT DESC
    </statement>

    <statement id="getBllgMtrForSkipMonth" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            DISTINCT
            A.DS_CONTR_BLLG_MTR_PK
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.EZCANCELFLAG           = '0'
            AND A.GLBL_CMPY_CD           = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK        = #dsContrDtlPk#
            AND A.USG_CHRG_FLG           = 'Y'
            AND A.INV_FLG                = 'N'
            <!-- START 2018/03/09 K.Kojima [QC#23600,DEL] -->
            <!-- AND A.NEXT_BLLG_DT           &gt;= #slsDt# -->
            <!-- END 2018/03/09 K.Kojima [QC#23600,DEL] -->
            AND A.DS_CONTR_BLLG_MTR_PK   IS NOT NULL
        ORDER BY
            A.DS_CONTR_BLLG_MTR_PK
    </statement>

    <statement id="getRvcSchdDt" parameterClass="Map" resultClass="String">
        SELECT
            MIN(A.NEXT_BLLG_DT) NEXT_BLLG_DT
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK      = #dsContrDtlPk#
        <isNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK IS NULL
        </isNull>
        <isNotNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
        </isNotNull>
            AND A.BASE_CHRG_FLG        = #baseChrgFlg#
            AND A.USG_CHRG_FLG         = #usgChrgFlg#
            AND A.BLLG_SCHD_FROM_DT    &gt; #bllgSchdThruDt#
    </statement>

    <statement id="getBllgSchdForFleetMach" parameterClass="Map" resultClass="Map">
        SELECT
            A.DS_CONTR_BLLG_SCHD_PK
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.EZCANCELFLAG               = '0'
            AND A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.PRNT_DS_CONTR_BLLG_SCHD_PK = #prntDsContrBllgSchdPk#
    </statement>

    <statement id="getSvcContrBllgByGrpSq" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.SVC_CONTR_BLLG_PK
        FROM
            SVC_CONTR_BLLG A
        WHERE
                A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.SVC_CONTR_BLLG_GRP_SQ = #svcContrBllgGrpSq#
    </statement>

    <statement id="getSvcContrBllgGrpSq" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            <!-- START 2020/09/30 QC#57781,ADD -->
            /*+ INDEX(A SVC_CONTR_BLLG_I9) */
            <!-- END 2020/09/30 QC#57781,ADD -->
            A.SVC_CONTR_BLLG_GRP_SQ
        FROM
            SVC_CONTR_BLLG A
        WHERE
                A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.DS_CONTR_BLLG_SCHD_PK = #dsContrBllgSchdPk#
    </statement>

    <statement id="getSvcContrBllgPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            <!-- START 2020/09/30 QC#57781,ADD -->
            /*+ INDEX(A SVC_CONTR_BLLG_I9) */
            <!-- END 2020/09/30 QC#57781,ADD -->
            A.SVC_CONTR_BLLG_PK
        FROM
            SVC_CONTR_BLLG A
        WHERE
                A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.DS_CONTR_BLLG_SCHD_PK = #dsContrBllgSchdPk#
    </statement>

    <statement id="getSvcContrBllgPkForAddl" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.SVC_CONTR_BLLG_PK
        FROM
            SVC_CONTR_BLLG A
        WHERE
                A.EZCANCELFLAG           = '0'
            AND A.GLBL_CMPY_CD           = #glblCmpyCd#
            AND A.PRNT_SVC_CONTR_BLLG_PK = #prntSvcContrBllgPk#
            AND A.ADDL_CHRG_FLG          = 'Y'
    </statement>

    <statement id="getSvcContrBllgAllocPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.SVC_CONTR_BLLG_ALLOC_PK
        FROM
            SVC_CONTR_BLLG_ALLOC A
        WHERE
                A.EZCANCELFLAG        = '0'
            AND A.GLBL_CMPY_CD        = #glblCmpyCd#
            AND A.SVC_CONTR_BLLG_PK   = #svcContrBllgPk#
    </statement>

    <statement id="getSvcContrBaseBllgPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.SVC_CONTR_BASE_BLLG_PK
        FROM
            SVC_CONTR_BASE_BLLG A
        WHERE
                A.EZCANCELFLAG        = '0'
            AND A.GLBL_CMPY_CD        = #glblCmpyCd#
            AND A.SVC_CONTR_BLLG_PK   = #svcContrBllgPk#
    </statement>

    <statement id="getSvcContrMtrBllgPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.SVC_CONTR_MTR_BLLG_PK
        FROM
            SVC_CONTR_MTR_BLLG A
        WHERE
                A.EZCANCELFLAG        = '0'
            AND A.GLBL_CMPY_CD        = #glblCmpyCd#
            AND A.SVC_CONTR_BLLG_PK   = #svcContrBllgPk#
    </statement>

    <statement id="getSvcContrXsMtrBllgPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.SVC_CONTR_XS_MTR_BLLG_PK
        FROM 
            SVC_CONTR_XS_MTR_BLLG A
        WHERE
                A.EZCANCELFLAG        = '0'
            AND A.GLBL_CMPY_CD        = #glblCmpyCd#
            AND A.SVC_CONTR_BLLG_PK   = #svcContrBllgPk#
    </statement>

    <statement id="getSvcContrAddlChrgBllgPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.SVC_CONTR_ADDL_CHRG_BLLG_PK
        FROM
            SVC_CONTR_ADDL_CHRG_BLLG A
        WHERE
                A.EZCANCELFLAG       = '0'
            AND A.GLBL_CMPY_CD       = #glblCmpyCd#
            AND A.SVC_CONTR_BLLG_PK  = #svcContrBllgPk#
    </statement>

    <statement id="getFleetReadRollUpPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.FLEET_READ_ROLL_UP_PK
        FROM
            FLEET_READ_ROLL_UP A
        WHERE
                A.EZCANCELFLAG      = '0'
            AND A.GLBL_CMPY_CD      = #glblCmpyCd#
            AND A.PRNT_DS_CONTR_BLLG_SCHD_PK = #prntDsContrBllgSchdPk#
    </statement>

    <statement id="getFleetReadRollUpDtlPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.FLEET_READ_ROLL_UP_DTL_PK
        FROM
            FLEET_READ_ROLL_UP_DTL A
        WHERE
                A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = #glblCmpyCd#
            <iterate property="fleetReadRollUpPkList" var="fleetReadRollUpPk[]" open="AND A.FLEET_READ_ROLL_UP_PK IN (" close=")" conjunction=",">
                #fleetReadRollUpPk[]#
            </iterate>
    </statement>

    <statement id="getAggrUsgRecalPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.AGGR_USG_RECAL_PK
        FROM
            AGGR_USG_RECAL A
        WHERE
                A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.SVC_CONTR_BLLG_GRP_SQ = #svcContrBllgGrpSq#
    </statement>

    <statement id="getAggrUsgRecalDtlPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.AGGR_USG_RECAL_DTL_PK
        FROM
            AGGR_USG_RECAL_DTL A
        WHERE
                A.EZCANCELFLAG      = '0'
            AND A.GLBL_CMPY_CD      = #glblCmpyCd#
            AND A.AGGR_USG_RECAL_PK = #aggrUsgRecalPk#
    </statement>

    <statement id="getAggrUsgRecalXsMtrPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.AGGR_USG_RECAL_XS_MTR_PK
        FROM
            AGGR_USG_RECAL_XS_MTR A
        WHERE
                A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.AGGR_USG_RECAL_DTL_PK = #aggrUsgRecalDtlPk#
    </statement>
    
    <!-- START 2020/07/03 T.Sakurai [QC#57297,ADD] -->
    <statement id="getPrcEffMtrForCancel" parameterClass="Map" resultClass="BigDecimal">
        SELECT 
            B.DS_CONTR_PRC_EFF_MTR_PK
        FROM
            DS_CONTR_PRC_EFF_MTR B
        WHERE
                B.EZCANCELFLAG          = '0'
            AND B.GLBL_CMPY_CD          = #glblCmpyCd#
            AND B.DS_CONTR_BLLG_MTR_PK  IN (    
                 SELECT
                     A.DS_CONTR_BLLG_MTR_PK
                 FROM
                     DS_CONTR_PRC_EFF A
                 WHERE
                         A.EZCANCELFLAG          = '0'
                     AND A.GLBL_CMPY_CD          = #glblCmpyCd#
                     AND A.DS_CONTR_DTL_PK       = #dsContrDtlPk#
                     <!-- START 2022/10/25 E.Sanchez [QC#60661,DEL] -->
                     <!-- AND A.CONTR_PRC_EFF_THRU_DT &gt;= #slsDt# -->
                     <!-- END 2022/10/25 E.Sanchez [QC#60661,DEL] -->
                     AND A.BASE_CHRG_FLG         = #baseChrgFlg#
                     AND A.USG_CHRG_FLG          = #usgChrgFlg#
                )
        <!-- START 2020/09/24 K.Kitachi [QC#57667, ADD] -->
        <isNotNull property="dsContrBllgMtrPk">
            AND B.DS_CONTR_BLLG_MTR_PK  = #dsContrBllgMtrPk#
        </isNotNull>
        <!-- END 2020/09/24 K.Kitachi [QC#57667, ADD] -->
    </statement>
    <!-- END 2020/07/03 T.Sakurai [QC#57297,ADD] -->
    
    <statement id="getPrcEffForCancel" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.DS_CONTR_PRC_EFF_PK
        FROM
            DS_CONTR_PRC_EFF A
        WHERE
                A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK       = #dsContrDtlPk#
            <!-- START 2022/10/21 E.Sanchez [QC#60661,DEL] -->
            <!-- AND A.CONTR_PRC_EFF_THRU_DT &gt;= #slsDt# -->
            <!-- END 2022/10/21 E.Sanchez [QC#60661,DEL] -->
            AND A.BASE_CHRG_FLG         = #baseChrgFlg#
            AND A.USG_CHRG_FLG          = #usgChrgFlg#
        <!-- START 2020/09/24 K.Kitachi [QC#57667, ADD] -->
        <isNotNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK  = #dsContrBllgMtrPk#
        </isNotNull>
        <!-- END 2020/09/24 K.Kitachi [QC#57667, ADD] -->
    </statement>

    <statement id="getDsContrBllgSchdSmryForCancel" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.DS_CONTR_BLLG_SCHD_SMRY_PK
        FROM
            DS_CONTR_BLLG_SCHD_SMRY A
        WHERE
                A.EZCANCELFLAG                   = '0'
            AND A.GLBL_CMPY_CD                   = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK                = #dsContrDtlPk#
            AND A.BASE_CHRG_FLG                  = #baseChrgFlg#
            AND A.USG_CHRG_FLG                   = #usgChrgFlg#
<!--             AND NOT EXISTS (
                SELECT
                    B.DS_CONTR_BLLG_SCHD_PK
                FROM
                    DS_CONTR_BLLG_SCHD B
                WHERE
                        B.EZCANCELFLAG                      = '0'
                    AND B.GLBL_CMPY_CD                      = A.GLBL_CMPY_CD
                    AND B.DS_CONTR_BLLG_SCHD_SMRY_PK        = A.DS_CONTR_BLLG_SCHD_SMRY_PK
                    AND NVL(B.RVS_SCHD_DT, B.NEXT_BLLG_DT)  &lt; #slsDt#
           ) -->
        <!-- START 2020/09/24 K.Kitachi [QC#57667, ADD] -->
        <isNotNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK           = #dsContrBllgMtrPk#
        </isNotNull>
        <!-- END 2020/09/24 K.Kitachi [QC#57667, ADD] -->
    </statement>

    <statement id="getDsContrBllgSchdMtrForCancel" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.DS_CONTR_BLLG_SCHD_MTR_PK
        FROM
            DS_CONTR_BLLG_SCHD_MTR A
        WHERE
                A.EZCANCELFLAG                   = '0'
            AND A.GLBL_CMPY_CD                   = #glblCmpyCd#
            AND A.DS_CONTR_BLLG_SCHD_SMRY_PK     = #dsContrBllgSmryPk#
        ORDER BY
            A.XS_MTR_COPY_QTY
    </statement>

    <statement id="getDsContrBllgSchdForCancel" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.DS_CONTR_BLLG_SCHD_PK
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.EZCANCELFLAG                   = '0'
            AND A.GLBL_CMPY_CD                   = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK                = #dsContrDtlPk#
            AND A.INV_FLG                        = 'N'
<!--           AND NVL(A.RVS_SCHD_DT, NEXT_BLLG_DT) &gt;= #slsDt# -->
        <isEqual property="baseChrgFlg" compareValue="Y">
            AND A.BASE_CHRG_FLG = 'Y'
        </isEqual>
        <isEqual property="usgChrgFlg" compareValue="Y">
            AND A.USG_CHRG_FLG = 'Y'
        </isEqual>
        <!-- START 2020/09/24 K.Kitachi [QC#57667, ADD] -->
        <isNotNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK           = #dsContrBllgMtrPk#
        </isNotNull>
        <!-- END 2020/09/24 K.Kitachi [QC#57667, ADD] -->
    </statement>

    <statement id="getChildDsContrBllgSchdForCancel" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.DS_CONTR_BLLG_SCHD_PK
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.EZCANCELFLAG                   = '0'
            AND A.GLBL_CMPY_CD                   = #glblCmpyCd#
            AND A.PRNT_DS_CONTR_BLLG_SCHD_PK     = #prntDsContrBllgSchdPk#
    </statement>

    <statement id="getPrcEffBasePrcAmt" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             A.BASE_PRC_DEAL_AMT
        FROM
            DS_CONTR_PRC_EFF A
        WHERE
                A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.DS_CONTR_PRC_EFF_PK  = #dsContrPrcEffPk#
    </statement>

    <statement id="getPrcEffMtrInfo" parameterClass="Map" resultClass="Map">
        SELECT
             A.XS_MTR_COPY_QTY
            ,A.XS_MTR_AMT_RATE
        FROM
            DS_CONTR_PRC_EFF_MTR A
        WHERE
                A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.DS_CONTR_PRC_EFF_PK  = #dsContrPrcEffPk#
            AND A.CONTR_XS_COPY_PK     = #contrXsCopyPk#
    </statement>

    <statement id="getLtstPrcEffSqNum" parameterClass="Map" resultClass="Map">
        SELECT
             A.DS_CONTR_PRC_EFF_PK
            ,A.DS_CONTR_PRC_EFF_SQ_NUM
            <!-- START 2017/11/01 K.Kojima [QC#21859,ADD] -->
            ,A.CONTR_PRC_EFF_FROM_DT
            <!-- END 2017/11/01 K.Kojima [QC#21859,ADD] -->
        FROM
            DS_CONTR_PRC_EFF A
        WHERE
                A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK      = #dsContrDtlPk#
            AND A.BASE_CHRG_FLG        = #baseChrgFlg#
            AND A.USG_CHRG_FLG         = #usgChrgFlg#
        <isNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK IS NULL
        </isNull>
        <isNotNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
        </isNotNull>
        ORDER BY
            A.DS_CONTR_PRC_EFF_SQ_NUM DESC
    </statement>

    <statement id="getMaxPrcEffSqNum" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            MAX(A.DS_CONTR_PRC_EFF_SQ_NUM) AS DS_CONTR_PRC_EFF_SQ_NUM
        FROM
            DS_CONTR_PRC_EFF A
        WHERE
                A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK      = #dsContrDtlPk#
            AND A.BASE_CHRG_FLG        = #baseChrgFlg#
            AND A.USG_CHRG_FLG         = #usgChrgFlg#
        <isNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK IS NULL
        </isNull>
        <isNotNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
        </isNotNull>
    </statement>

    <statement id="getDeleteChildSchdList" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.DS_CONTR_BLLG_SCHD_PK
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.EZCANCELFLAG                   = '0'
            AND A.GLBL_CMPY_CD                   = #glblCmpyCd#
            AND A.PRNT_DS_CONTR_BLLG_SCHD_PK     = #prntDsContrBllgSchdPk#
    </statement>

    <statement id="getPrcEffPkByEffFromDt" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.DS_CONTR_PRC_EFF_PK
        FROM
            DS_CONTR_PRC_EFF A
        WHERE
                A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK       = #dsContrDtlPk#
        <isNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK  IS NULL
        </isNull>
        <isNotNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK  = #dsContrBllgMtrPk#
        </isNotNull>
            AND A.CONTR_PRC_EFF_FROM_DT &gt;= #contrPrcEffFromDt#
            AND A.BASE_CHRG_FLG         = #baseChrgFlg#
            AND A.USG_CHRG_FLG          = #usgChrgFlg#
    </statement>

    <statement id="getBllgSchdForUpdate" parameterClass="Map" resultClass="Map">
        SELECT
            DISTINCT
            A.DS_CONTR_PRC_EFF_PK
            ,A.DS_CONTR_BLLG_SCHD_SMRY_PK
            ,A.DS_CONTR_BLLG_SCHD_PK
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK      = #dsContrDtlPk#
            AND A.BLLG_SCHD_THRU_DT    &lt; #effFromDt#
            AND A.BASE_CHRG_FLG        = #baseChrgFlg#
            AND A.USG_CHRG_FLG         = #usgChrgFlg#
        <isNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK IS NULL
        </isNull>
        <isNotNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
        </isNotNull>
            AND A.DS_CONTR_PRC_EFF_PK   IS NOT NULL
    </statement>

    <statement id="getBllgSchdForUpdateByFromDt" parameterClass="Map" resultClass="Map">
        SELECT
            DISTINCT
            A.DS_CONTR_PRC_EFF_PK
            ,A.DS_CONTR_BLLG_SCHD_SMRY_PK
            ,A.DS_CONTR_BLLG_SCHD_PK
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK      = #dsContrDtlPk#
            AND A.BLLG_SCHD_FROM_DT    &lt; #effFromDt#
            AND A.BASE_CHRG_FLG        = #baseChrgFlg#
            AND A.USG_CHRG_FLG         = #usgChrgFlg#
        <isNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK IS NULL
        </isNull>
        <isNotNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
        </isNotNull>
            AND A.DS_CONTR_PRC_EFF_PK   IS NOT NULL
    </statement>

    <statement id="getBllgSchdForDelete" parameterClass="Map" resultClass="Map">
        SELECT
            DISTINCT
            A.DS_CONTR_PRC_EFF_PK
            ,A.DS_CONTR_BLLG_SCHD_SMRY_PK
            ,A.DS_CONTR_BLLG_SCHD_PK
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK      = #dsContrDtlPk#
            AND A.BLLG_SCHD_THRU_DT    &gt;= #effFromDt#
            AND A.BASE_CHRG_FLG        = #baseChrgFlg#
            AND A.USG_CHRG_FLG         = #usgChrgFlg#
        <isNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK IS NULL
        </isNull>
        <isNotNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
        </isNotNull>
    </statement>
<!-- START 2023/08/18 T.Kojima [QC#60846, ADD] -->
    <statement id="getPastBllgSchdForDelete" parameterClass="Map" resultClass="Map">
        SELECT
            DISTINCT
            A.DS_CONTR_PRC_EFF_PK
            ,A.DS_CONTR_BLLG_SCHD_SMRY_PK
            ,A.DS_CONTR_BLLG_SCHD_PK
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK      = #dsContrDtlPk#
            AND A.BLLG_SCHD_THRU_DT    &lt; #effFromDt#
            AND A.BASE_CHRG_FLG        = #baseChrgFlg#
            AND A.USG_CHRG_FLG         = #usgChrgFlg#
        <isNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK IS NULL
        </isNull>
        <isNotNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
        </isNotNull>
    </statement>
<!-- END 2023/08/18 T.Kojima [QC#60846, ADD] -->

    <statement id="getBllgSchdForDeleteByFromDt" parameterClass="Map" resultClass="Map">
        SELECT
            DISTINCT
            A.DS_CONTR_PRC_EFF_PK
            ,A.DS_CONTR_BLLG_SCHD_SMRY_PK
            ,A.DS_CONTR_BLLG_SCHD_PK
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK      = #dsContrDtlPk#
            AND A.BLLG_SCHD_FROM_DT    &gt;= #effFromDt#
            AND A.BASE_CHRG_FLG        = #baseChrgFlg#
            AND A.USG_CHRG_FLG         = #usgChrgFlg#
        <isNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK IS NULL
        </isNull>
        <isNotNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
        </isNotNull>
    </statement>

    <statement id="getSummaryBasePrcAmt" parameterClass="Map" resultClass="Map">
        SELECT
             SUM(A.BASE_ACTL_PRC_DEAL_AMT) AS BASE_ACTL_PRC_DEAL_AMT
            ,SUM(A.BASE_PRC_ADJ_DEAL_AMT)  AS BASE_PRC_ADJ_DEAL_AMT
            ,COUNT(DS_CONTR_BLLG_SCHD_PK)  AS PER_SCHD_NUM
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK      = #dsContrDtlPk#
            AND A.BASE_CHRG_FLG        = #baseChrgFlg#
            AND A.USG_CHRG_FLG         = #usgChrgFlg#
            AND A.BLLG_SCHD_FROM_DT    &gt;= #bllgSchdFromDt#
            AND A.BLLG_SCHD_THRU_DT    &lt;= #bllgSchdThruDt#
        <isNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK IS NULL
        </isNull>
        <isNotNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
        </isNotNull>
            AND A.DS_CONTR_PRC_EFF_PK   IS NOT NULL
    </statement>

    <statement id="getMaxBllgSchdThruDt" parameterClass="Map" resultClass="String">
        SELECT
            MAX(A.BLLG_SCHD_THRU_DT) AS BLLG_SCHD_THRU_DT
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK      = #dsContrDtlPk#
            AND A.BASE_CHRG_FLG        = #baseChrgFlg#
            AND A.USG_CHRG_FLG         = #usgChrgFlg#
        <isNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK IS NULL
        </isNull>
        <isNotNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
        </isNotNull>
    </statement>

    <statement id="getInvedMaxBllgSchdThruDt" parameterClass="Map" resultClass="String">
        SELECT
            MAX(A.BLLG_SCHD_THRU_DT) AS BLLG_SCHD_THRU_DT
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK      = #dsContrDtlPk#
            AND A.BASE_CHRG_FLG        = #baseChrgFlg#
            AND A.USG_CHRG_FLG         = #usgChrgFlg#
            AND A.INV_FLG              = #invFlg#
        <isNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK IS NULL
        </isNull>
        <isNotNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
        </isNotNull>
    </statement>

    <!-- Start 2018/07/12 Mod QC#25959 -->
    <statement id="getPrntBllgSchdPk" parameterClass="Map" resultClass="Map">
        <!-- START 2018/08/29 [QC#28012,ADD] -->
        WITH TARGET_SCHD AS (
        <!-- END 2018/08/29 [QC#28012,ADD] -->
        SELECT
             A.DS_CONTR_BLLG_SCHD_PK
            ,A.NEXT_BLLG_DT
            <!-- START 2018/08/29 [QC#28012,ADD] -->
            ,A.EZINTIME
            <!-- END 2018/08/29 [QC#28012,ADD] -->
            <!-- START 2018/12/10 K.Kitachi [QC#29387, ADD] -->
            ,CASE
                WHEN A.BASE_CHRG_FLG = 'Y' AND B.BASE_BLLG_TMG_CD = #bllgTmgTpAdvance#
                    THEN ROW_NUMBER() OVER(PARTITION BY A.DS_CONTR_DTL_PK ORDER BY A.NEXT_BLLG_DT, A.EZINTIME DESC)
                ELSE ROW_NUMBER() OVER(PARTITION BY A.DS_CONTR_DTL_PK ORDER BY A.NEXT_BLLG_DT DESC, A.EZINTIME DESC)
             END RNUM
            <!-- END 2018/12/10 K.Kitachi [QC#29387, ADD] -->
        FROM
            DS_CONTR_BLLG_SCHD A
            <!-- START 2018/12/10 K.Kitachi [QC#29387, ADD] -->
            ,DS_CONTR_DTL      B
            <!-- END 2018/12/10 K.Kitachi [QC#29387, ADD] -->
            <!-- START 2019/02/14 K.Kitachi [QC#30066, ADD] -->
            ,DS_CONTR_DTL      C
            <!-- END 2019/02/14 K.Kitachi [QC#30066, ADD] -->
        WHERE
                A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK      = #dsContrDtlPk#
            AND A.BASE_CHRG_FLG        = #baseChrgFlg#
            AND A.USG_CHRG_FLG         = #usgChrgFlg#
        <isNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK IS NULL
        </isNull>
        <isNotNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
        </isNotNull>
            AND (
                <!-- START 2018/12/10 K.Kitachi [QC#29387, MOD] -->
                <!--     A.BLLG_SCHD_FROM_DT    = #bllgSchdFromDt# -->
                <!--  OR A.BLLG_SCHD_THRU_DT    = #bllgSchdThruDt# -->
                <!-- START 2019/02/14 K.Kitachi [QC#30066, MOD] -->
                <!--     (A.BLLG_SCHD_FROM_DT = #bllgSchdFromDt# AND A.BASE_CHRG_FLG = 'Y' AND B.BASE_BLLG_TMG_CD = #bllgTmgTpAdvance#) -->
                <!--  OR (A.BLLG_SCHD_THRU_DT = #bllgSchdThruDt# AND A.BASE_CHRG_FLG = 'Y' AND B.BASE_BLLG_TMG_CD = #bllgTmgTpArrears#) -->
                    (A.BLLG_SCHD_FROM_DT = #bllgSchdFromDt#     AND A.BASE_CHRG_FLG = 'Y' AND B.BASE_BLLG_TMG_CD = #bllgTmgTpAdvance# AND C.BASE_BLLG_TMG_CD = #bllgTmgTpAdvance#)
                 OR (A.BLLG_SCHD_THRU_DT = #bllgSchdThruDt#     AND A.BASE_CHRG_FLG = 'Y' AND B.BASE_BLLG_TMG_CD = #bllgTmgTpArrears# AND C.BASE_BLLG_TMG_CD = #bllgTmgTpArrears#)
                 OR (A.BLLG_SCHD_FROM_DT = #nextBllgSchdFromDt# AND A.BASE_CHRG_FLG = 'Y' AND B.BASE_BLLG_TMG_CD = #bllgTmgTpAdvance# AND C.BASE_BLLG_TMG_CD = #bllgTmgTpArrears#)
                 OR (A.BLLG_SCHD_THRU_DT = #prevBllgSchdThruDt# AND A.BASE_CHRG_FLG = 'Y' AND B.BASE_BLLG_TMG_CD = #bllgTmgTpArrears# AND C.BASE_BLLG_TMG_CD = #bllgTmgTpAdvance#)
                <!-- END 2019/02/14 K.Kitachi [QC#30066, MOD] -->
                 OR (A.BLLG_SCHD_THRU_DT = #bllgSchdThruDt# AND A.USG_CHRG_FLG  = 'Y')
                <!-- END 2018/12/10 K.Kitachi [QC#29387, MOD] -->
                )
            AND A.INV_TP_CD            = #invTpCd#
            <!-- START 2018/12/10 K.Kitachi [QC#29387, ADD] -->
            AND A.GLBL_CMPY_CD         = B.GLBL_CMPY_CD
            AND A.DS_CONTR_DTL_PK      = B.DS_CONTR_DTL_PK
            AND B.EZCANCELFLAG         = '0'
            <!-- END 2018/12/10 K.Kitachi [QC#29387, ADD] -->
            <!-- START 2019/02/14 K.Kitachi [QC#30066, ADD] -->
            AND B.GLBL_CMPY_CD         = C.GLBL_CMPY_CD
            AND B.DS_CONTR_DTL_PK      = C.PRNT_DS_CONTR_DTL_PK
            AND C.DS_CONTR_DTL_PK      = #childDsContrDtlPk#
            AND C.EZCANCELFLAG         = '0'
            <!-- END 2019/02/14 K.Kitachi [QC#30066, ADD] -->
        <!-- START 2018/08/29 [QC#28012,ADD] -->
        )
        <!-- START 2018/12/10 K.Kitachi [QC#29387, MOD] -->
        <!-- SELECT -->
        <!--      A.DS_CONTR_BLLG_SCHD_PK -->
        <!--     ,B.NEXT_BLLG_DT -->
        <!-- FROM -->
        <!--      ( -->
        <!--         SELECT -->
        <!--             DS_CONTR_BLLG_SCHD_PK -->
        <!--         FROM -->
        <!--             ( -->
        <!--                 SELECT -->
        <!--                     TS.DS_CONTR_BLLG_SCHD_PK -->
        <!--                 FROM -->
        <!--                     TARGET_SCHD TS -->
        <!--                 ORDER BY -->
        <!--                      TS.NEXT_BLLG_DT DESC -->
        <!--                     ,TS.EZINTIME     DESC -->
        <!--             ) -->
        <!--         WHERE -->
        <!--             ROWNUM = 1 -->
        <!--      ) A -->
        <!--     ,( -->
        <!--         SELECT -->
        <!--             MIN(TS.NEXT_BLLG_DT) AS NEXT_BLLG_DT -->
        <!--         FROM -->
        <!--             TARGET_SCHD TS -->
        <!--      ) B -->
        SELECT
             A.DS_CONTR_BLLG_SCHD_PK
            ,A.NEXT_BLLG_DT
        FROM
            TARGET_SCHD A
        WHERE
            A.RNUM = 1
        <!-- END 2018/12/10 K.Kitachi [QC#29387, MOD] -->
        <!-- END 2018/08/29 [QC#28012,ADD] -->
    </statement>

    <statement id="getPrntBllgSchdPkForUsg" parameterClass="Map" resultClass="Map">
        <!-- START 2018/08/29 [QC#28012,ADD] -->
        WITH TARGET_SCHD AS (
        <!-- END 2018/08/29 [QC#28012,ADD] -->
        SELECT
             A.DS_CONTR_BLLG_SCHD_PK
            ,A.NEXT_BLLG_DT
            <!-- START 2018/08/29 [QC#28012,ADD] -->
            ,A.EZINTIME
            <!-- END 2018/08/29 [QC#28012,ADD] -->
        FROM
             DS_CONTR_BLLG_SCHD A
            ,DS_CONTR_BLLG_MTR  B
        WHERE
                A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK      = #dsContrDtlPk#
            AND A.BASE_CHRG_FLG        = 'N'
            AND A.USG_CHRG_FLG         = 'Y'
            AND (
                    A.BLLG_SCHD_FROM_DT    = #bllgSchdFromDt#
                 OR A.BLLG_SCHD_THRU_DT    = #bllgSchdThruDt#
                )
            AND A.INV_TP_CD            = #invTpCd#
            AND B.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = B.GLBL_CMPY_CD
            AND A.DS_CONTR_BLLG_MTR_PK = B.DS_CONTR_BLLG_MTR_PK
            AND B.BLLG_MTR_LB_CD       = 
                (
                    SELECT
                        CHILD_DCBM.BLLG_MTR_LB_CD
                    FROM
                        DS_CONTR_BLLG_MTR CHILD_DCBM
                    WHERE
                            CHILD_DCBM.EZCANCELFLAG         = '0'
                        AND CHILD_DCBM.GLBL_CMPY_CD         = #glblCmpyCd#
                        AND CHILD_DCBM.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
                )
        <!-- START 2018/08/29 [QC#28012,ADD] -->
        )
        SELECT
             A.DS_CONTR_BLLG_SCHD_PK
            ,B.NEXT_BLLG_DT
        FROM
             (
                SELECT
                    DS_CONTR_BLLG_SCHD_PK
                FROM
                    (
                        SELECT
                            TS.DS_CONTR_BLLG_SCHD_PK
                        FROM
                            TARGET_SCHD TS
                        ORDER BY
                             TS.NEXT_BLLG_DT DESC
                            ,TS.EZINTIME     DESC
                    )
                WHERE
                    ROWNUM = 1
             ) A
            ,(
                SELECT
                    MIN(TS.NEXT_BLLG_DT) AS NEXT_BLLG_DT
                FROM
                    TARGET_SCHD TS
             ) B
        <!-- END 2018/08/29 [QC#28012,ADD] -->
    </statement>
    <!-- End   2018/07/12 Mod QC#25959 -->

    <statement id="getPrntBllgSchdPkForRebil" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.DS_CONTR_BLLG_SCHD_PK
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK      = #dsContrDtlPk#
            AND A.BASE_CHRG_FLG        = #baseChrgFlg#
            AND A.USG_CHRG_FLG         = #usgChrgFlg#
        <isNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK IS NULL
        </isNull>
        <isNotNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
        </isNotNull>
            AND A.INV_TP_CD            = #invTpCd#
            AND A.SVC_CR_REBIL_DTL_PK  = #svcCrRebilDtlPk#
    </statement>

    <statement id="getPrntBllgSchdPkForUsgRebil" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.DS_CONTR_BLLG_SCHD_PK
        FROM
             DS_CONTR_BLLG_SCHD A
            ,DS_CONTR_BLLG_MTR  B
        WHERE
                A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK      = #dsContrDtlPk#
            AND A.BASE_CHRG_FLG        = 'N'
            AND A.USG_CHRG_FLG         = 'Y'
            AND A.INV_TP_CD            = #invTpCd#
            AND A.SVC_CR_REBIL_DTL_PK  = #svcCrRebilDtlPk#
            AND B.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = B.GLBL_CMPY_CD
            AND A.DS_CONTR_BLLG_MTR_PK = B.DS_CONTR_BLLG_MTR_PK
            AND B.BLLG_MTR_LB_CD       = 
                (
                    SELECT
                        CHILD_DCBM.BLLG_MTR_LB_CD
                    FROM
                        DS_CONTR_BLLG_MTR CHILD_DCBM
                    WHERE
                            CHILD_DCBM.EZCANCELFLAG         = '0'
                        AND CHILD_DCBM.GLBL_CMPY_CD         = #glblCmpyCd#
                        AND CHILD_DCBM.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
                )
    </statement>

    <statement id="getMaxBllgSchdThruDtByPrcEffPk" parameterClass="Map" resultClass="String">
        SELECT
            MAX(A.BLLG_SCHD_THRU_DT) BLLG_SCHD_THRU_DT
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK      = #dsContrDtlPk#
            AND A.DS_CONTR_PRC_EFF_PK  = #dsContrPrcEffPk#
            AND A.BASE_CHRG_FLG        = #baseChrgFlg#
            AND A.USG_CHRG_FLG         = #usgChrgFlg#
        <isNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK IS NULL
        </isNull>
        <isNotNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
        </isNotNull>
            AND A.INV_FLG              = 'Y'
    </statement>

    <statement id="getBllgSchdByPrcEffPk" parameterClass="Map" resultClass="Map">
        SELECT
            DISTINCT
            A.DS_CONTR_BLLG_SCHD_PK
            ,A.DS_CONTR_BLLG_SCHD_SMRY_PK
            ,A.DS_CONTR_PRC_EFF_PK
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK      = #dsContrDtlPk#
            AND A.DS_CONTR_PRC_EFF_PK  = #dsContrPrcEffPk#
            AND A.BASE_CHRG_FLG        = #baseChrgFlg#
            AND A.USG_CHRG_FLG         = #usgChrgFlg#
        <isNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK IS NULL
        </isNull>
        <isNotNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
        </isNotNull>
            AND A.BLLG_SCHD_FROM_DT    &gt;= #lastBilledDt#
    </statement>

    <statement id="getSchdSmryByPrcEffPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.DS_CONTR_BLLG_SCHD_SMRY_PK
        FROM
            DS_CONTR_BLLG_SCHD_SMRY A
        WHERE
                A.EZCANCELFLAG        = '0'
            AND A.GLBL_CMPY_CD        = #glblCmpyCd#
            AND A.DS_CONTR_PRC_EFF_PK = #dsContrPrcEffPk#
        ORDER BY
            A.BLLG_SCHD_FROM_DT
    </statement>

    <statement id="getTermAmtRate" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            SUM(NVL(A.BASE_ACTL_PRC_DEAL_AMT, 0))    AS TERM_AMT_RATE
        FROM
            DS_CONTR_BLLG_SCHD      A
        WHERE
                A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.EZCANCELFLAG          = '0'
            AND A.DS_CONTR_DTL_PK       = #dsContrDtlPk#
            AND A.BASE_CHRG_FLG         = 'Y'
            AND EXISTS (
                    SELECT
                         *
                     FROM
                         DS_CONTR_PRC_EFF X
                     WHERE
                             X.EZCANCELFLAG              = '0'
                         AND X.GLBL_CMPY_CD              = A.GLBL_CMPY_CD
                         AND X.DS_CONTR_PRC_EFF_PK       = A.DS_CONTR_PRC_EFF_PK
                         AND X.BASE_CHRG_FLG             = 'Y'
                         <iterate property="dsContrPrcEffStsCdList" var="dsContrPrcEffStsCd[]" open="AND DS_CONTR_PRC_EFF_STS_CD NOT IN (" conjunction= "," close=")">
                              #dsContrDtlStsCd[]#
                         </iterate>
            )
    </statement>

    <statement id="getPrcEffPeriod" parameterClass="Map" resultClass="Map">
        SELECT
              MIN(X.CONTR_PRC_EFF_FROM_DT) CONTR_PRC_EFF_FROM_DT
             ,MAX(X.CONTR_PRC_EFF_THRU_DT) CONTR_PRC_EFF_THRU_DT
         FROM
             DS_CONTR_PRC_EFF X
         WHERE
                 X.EZCANCELFLAG              = '0'
             AND X.GLBL_CMPY_CD              = #glblCmpyCd#
             AND X.DS_CONTR_DTL_PK           = #dsContrDtlPk#
             AND X.BASE_CHRG_FLG             = #baseChrgFlg#
             AND X.USG_CHRG_FLG              = #usgChrgFlg#
         <isNull property="dsContrBllgMtrPk">
             AND X.DS_CONTR_BLLG_MTR_PK      IS NULL
         </isNull>
         <isNotNull property="dsContrBllgMtrPk">
             AND X.DS_CONTR_BLLG_MTR_PK      = #dsContrBllgMtrPk#
         </isNotNull>
             <iterate property="dsContrPrcEffStsCdList" var="dsContrPrcEffStsCd[]" open="AND DS_CONTR_PRC_EFF_STS_CD NOT IN (" conjunction= "," close=")">
                  #dsContrDtlStsCd[]#
             </iterate>
    </statement>

    <statement id="getSchdSmrySqNum" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            MAX(A.DS_CONTR_BLLG_SCHD_SQ_NUM) DS_CONTR_BLLG_SCHD_SQ_NUM
        FROM
            DS_CONTR_BLLG_SCHD_SMRY A
        WHERE
                A.EZCANCELFLAG        = '0'
            AND A.GLBL_CMPY_CD        = #glblCmpyCd#
            AND A.DS_CONTR_PRC_EFF_PK = #dsContrPrcEffPk#
    </statement>

    <statement id="getBllgSchdForTrmn" parameterClass="Map" resultClass="Map">
        SELECT
             A.DS_CONTR_BLLG_SCHD_PK
            ,A.DS_CONTR_BLLG_SCHD_SMRY_PK
            ,A.DS_CONTR_PRC_EFF_PK
            ,A.DS_CONTR_PRC_EFF_SQ_NUM
            ,A.DS_CONTR_BLLG_SCHD_SQ_NUM
            ,A.DS_CONTR_BLLG_SCHD_LVL_NUM
            ,A.BLLG_SCHD_FROM_DT
            ,A.BLLG_SCHD_THRU_DT
            ,A.BLLG_CYCLE_CD
            ,A.BASE_PRC_DEAL_AMT
            ,A.INV_FLG
            ,A.SVC_INV_NUM
            ,A.SLS_TAX_RATE
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK      = #dsContrDtlPk#
            AND A.BASE_CHRG_FLG        = #baseChrgFlg#
            AND A.USG_CHRG_FLG         = #usgChrgFlg#
        <isNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK IS NULL
        </isNull>
        <isNotNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
        </isNotNull>
            AND A.BLLG_SCHD_FROM_DT    &lt;= #trmnDt#
            AND A.BLLG_SCHD_THRU_DT    &gt;= #trmnDt#
            AND A.DS_CONTR_PRC_EFF_PK  IS NOT NULL
    </statement>

    <statement id="getBllgMtrPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.DS_CONTR_BLLG_MTR_PK
        FROM
            DS_CONTR_BLLG_MTR A
        WHERE
                A.EZCANCELFLAG    = '0'
            AND A.GLBL_CMPY_CD    = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK = #dsContrDtlPk#
        ORDER BY
            A.DS_CONTR_BLLG_MTR_PK
    </statement>

    <statement id="getBilledAmtAfterTrmnDt" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.BASE_ACTL_PRC_DEAL_AMT
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK      = #dsContrDtlPk#
            AND A.BASE_CHRG_FLG        = #baseChrgFlg#
            AND A.USG_CHRG_FLG         = #usgChrgFlg#
        <isNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK IS NULL
        </isNull>
        <isNotNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
        </isNotNull>
            AND A.INV_FLG              = 'Y'
            AND A.BLLG_SCHD_FROM_DT    &gt; #trmnDt#
        ORDER BY
            A.BLLG_SCHD_THRU_DT DESC
    </statement>

    <!-- START 2019/05/17 K.Fujimoto [QC#50388,MOD] -->
    <statement id="getLastSvcInvNum" parameterClass="Map" resultClass="Map">
        SELECT
            A.SVC_INV_NUM
           ,B.SVC_INV_LINE_NUM
        FROM
            DS_CONTR_BLLG_SCHD A
           ,SVC_INV_LINE B
        WHERE
                A.EZCANCELFLAG          = '0'
            AND B.EZCANCELFLAG(+)       = '0'
            AND A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK       = #dsContrDtlPk#
            AND A.BASE_CHRG_FLG         = #baseChrgFlg#
            AND A.USG_CHRG_FLG          = #usgChrgFlg#
            AND A.GLBL_CMPY_CD          = B.GLBL_CMPY_CD(+)
            AND A.DS_CONTR_BLLG_SCHD_PK = B.DS_CONTR_BLLG_SCHD_PK(+)
        <isNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK IS NULL
        </isNull>
        <isNotNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
        </isNotNull>
            AND A.INV_FLG              = 'Y'
            <!-- START 2024/02/21 [QC#61468, ADD] -->
            AND B.SVC_INV_CHRG_TP_CD(+) &lt;&gt; #invTpFc#
            <!-- END   2024/02/21 [QC#61468, ADD] -->
        ORDER BY
            A.BLLG_SCHD_THRU_DT DESC
    </statement>
    <!-- END 2019/05/17 K.Fujimoto [QC#50388,MOD] -->

    <statement id="getBllgSchdBySvcCrRebilPk" parameterClass="Map" resultClass="Map">
        SELECT
            DISTINCT
            A.DS_CONTR_BLLG_SCHD_PK
            ,A.DS_CONTR_BLLG_SCHD_SMRY_PK
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.EZCANCELFLAG        = '0'
            AND A.GLBL_CMPY_CD        = #glblCmpyCd#
        <isNotNull property="svcCrRebilPk">
            AND A.SVC_CR_REBIL_PK     = #svcCrRebilPk#
        </isNotNull>
        <isNotNull property="svcCrRebilDtlPk">
            AND A.SVC_CR_REBIL_DTL_PK = #svcCrRebilDtlPk#
        </isNotNull>
    </statement>

    <statement id="getSvcInvLineAddlChrg" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.SVC_INV_LINE_ADDL_CHRG_PK
        FROM
            SVC_INV_LINE_ADDL_CHRG A
        WHERE
                A.EZCANCELFLAG    = '0'
            AND A.GLBL_CMPY_CD    = #glblCmpyCd#
            AND A.SVC_INV_LINE_PK = #svcInvLinePk#
    </statement>

    <statement id="getSvcInvLinePk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.SVC_INV_LINE_PK
        FROM
            SVC_INV_LINE A
        WHERE
                A.EZCANCELFLAG       = '0'
            AND A.GLBL_CMPY_CD       = #glblCmpyCd#
            AND A.SVC_INV_NUM        = #svcInvNum#
            AND A.SVC_INV_CHRG_TP_CD = #svcInvChrgTpCd#
        ORDER BY
            A.SVC_INV_LINE_NUM
    </statement>

    <statement id="getSvcInvLinePkForAddl" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.SVC_INV_LINE_PK
        FROM
            SVC_INV_LINE A
        WHERE
                A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.PRNT_SVC_INV_LINE_PK = #prntSvcInvLinePk#
            AND A.SVC_INV_CHRG_TP_CD   = #svcInvChrgTpCd#
        ORDER BY
            A.SVC_INV_LINE_NUM
    </statement>

    <statement id="getBllgSchdBySvcInvNum" parameterClass="Map" resultClass="Map">
        SELECT
             A.DS_CONTR_BLLG_SCHD_PK
            ,A.DS_CONTR_BLLG_SCHD_SMRY_PK
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.EZCANCELFLAG  = '0'
            AND A.GLBL_CMPY_CD  = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK = #dsContrDtlPk#
            AND A.SVC_INV_NUM   = #svcInvNum#
            AND A.BASE_CHRG_FLG = #baseChrgFlg#
            AND A.USG_CHRG_FLG  = #usgChrgFlg#
        <isNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK IS NULL
        </isNull>
        <isNotNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
        </isNotNull>
    </statement>

    <statement id="getSchdMtrInfo" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             A.DS_CONTR_BLLG_SCHD_MTR_PK
        FROM
            DS_CONTR_BLLG_SCHD_MTR A
        WHERE
                A.EZCANCELFLAG               = '0'
            AND A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.DS_CONTR_BLLG_SCHD_SMRY_PK = #dsContrBllgSchdSmryPk#
            AND A.DS_CONTR_BLLG_MTR_PK       = #dsContrBllgMtrPk#
        ORDER BY
            A.XS_MTR_COPY_QTY
    </statement>

<!-- mod start 2017/08/15 QC#18799 -->
    <statement id="getMtrEntryStsUpd" parameterClass="Map" resultClass="Map">
        <!-- START 2022/09/20 [QC#60045,ADD] -->
        <!-- START 2023/05/09 K.Kitachi [QC#61469, DEL] -->
<!--        WITH DEF_WIN_DAYS AS ( -->
<!--            SELECT -->
<!--                 A.MTR_READ_WIN_MLY_DAYS_AOT -->
<!--                ,A.MTR_READ_WIN_OTH_DAYS_AOT -->
<!--            FROM -->
<!--                DS_WIN_DAYS A -->
<!--            WHERE -->
<!--                    A.GLBL_CMPY_CD             = #glblCmpyCd# -->
<!--                AND A.EZCANCELFLAG             = '0' -->
<!--                AND A.DS_WIN_DAYS_TRGT_PER_TXT = '*' -->
<!--                AND A.SVC_LINE_BIZ_CD          = '*' -->
<!--            ) -->
        <!-- END 2023/05/09 K.Kitachi [QC#61469, DEL] -->
        <!-- END   2022/09/20 [QC#60045,ADD] -->
        SELECT
             X.DS_CONTR_BLLG_SCHD_PK
            <!-- START 2023/06/01 t.aizawa [QC#60752,ADD] -->
            ,X.BLLG_SCHD_FROM_DT
            <!-- END   2023/06/01 t.aizawa [QC#60752,ADD] -->
            ,X.BLLG_SCHD_THRU_DT
            ,X.DS_CONTR_BLLG_MTR_PK
            ,X.SVC_MACH_MSTR_PK
            ,X.BEF_DAYS
        FROM
            (
             SELECT
                  C.DS_CONTR_DTL_PK
                 ,C.DS_CONTR_BLLG_SCHD_PK
                 <!-- START 2023/06/01 t.aizawa [QC#60752,ADD] -->
                 ,C.BLLG_SCHD_FROM_DT
                 <!-- END   2023/06/01 t.aizawa [QC#60752,ADD] -->
                 ,C.BLLG_SCHD_THRU_DT
                 ,C.DS_CONTR_BLLG_MTR_PK
                 ,B.SVC_MACH_MSTR_PK
                 <!-- START 2022/09/20 [QC#60045,MOD] -->
                 <!-- ,NVL(DECODE(NVL(F.BLLG_CYCLE_UOM_CD, PF.BLLG_CYCLE_UOM_CD), #months#, D.MTR_READ_WIN_MLY_DAYS_AOT, D.MTR_READ_WIN_OTH_DAYS_AOT), #defBefDays#) AS BEF_DAYS -->
                 <!-- START 2023/02/09 S.Naya [QC#60045, MOD] -->
                 <!-- ,DECODE(NVL(F.BLLG_CYCLE_UOM_CD, PF.BLLG_CYCLE_UOM_CD), #months#, COALESCE(D.MTR_READ_WIN_MLY_DAYS_AOT, (SELECT MTR_READ_WIN_MLY_DAYS_AOT FROM DEF_WIN_DAYS), #defBefDays#), COALESCE(D.MTR_READ_WIN_OTH_DAYS_AOT, (SELECT MTR_READ_WIN_OTH_DAYS_AOT FROM DEF_WIN_DAYS), #defBefDays#)) AS BEF_DAYS -->
                 <!-- START 2023/05/09 K.Kitachi [QC#61469, MOD] -->
                 <!-- ,DECODE(NVL(F.BLLG_CYCLE_UOM_CD, PF.BLLG_CYCLE_UOM_CD), #months#, COALESCE(D.MTR_READ_WIN_MLY_DAYS_AOT, D2.MTR_READ_WIN_MLY_DAYS_AOT, (SELECT MTR_READ_WIN_MLY_DAYS_AOT FROM DEF_WIN_DAYS), #defBefDays#), COALESCE(D.MTR_READ_WIN_OTH_DAYS_AOT, D2.MTR_READ_WIN_OTH_DAYS_AOT, (SELECT MTR_READ_WIN_OTH_DAYS_AOT FROM DEF_WIN_DAYS), #defBefDays#)) AS BEF_DAYS -->
                 ,DECODE(NVL(F.BLLG_CYCLE_UOM_CD, PF.BLLG_CYCLE_UOM_CD), #months#, COALESCE(D.MTR_READ_WIN_MLY_DAYS_AOT, D2.MTR_READ_WIN_MLY_DAYS_AOT, #mtrReadWinMlyDaysAot#, #defBefDays#), COALESCE(D.MTR_READ_WIN_OTH_DAYS_AOT, D2.MTR_READ_WIN_OTH_DAYS_AOT, #mtrReadWinOthDaysAot#, #defBefDays#)) AS BEF_DAYS
                 <!-- END 2023/05/09 K.Kitachi [QC#61469, MOD] -->
                 <!-- END   2023/02/09 S.Naya [QC#60045, MOD] -->
                 <!-- END   2022/09/20 [QC#60045,MOD] -->
             FROM
                  DS_CONTR                 A
                 ,DS_CONTR_DTL             B
                 ,DS_CONTR_BLLG_SCHD       C
                 <!-- START 2022/09/20 [QC#60045,MOD] -->
                 <!-- ,DS_CONTR_INTFC_DEF_RULE  D -->
                 ,DS_WIN_DAYS              D
                 <!-- END   2022/09/20 [QC#60045,MOD] -->
                 <!-- START 2023/02/09 S.Naya [QC#60045, ADD] -->
                 ,DS_WIN_DAYS              D2
                 <!-- END   2023/02/09 S.Naya [QC#60045, ADD] -->
                 ,DS_CONTR_BLLG_MTR        E
                 ,BLLG_CYCLE               F
                 ,DS_CONTR_BLLG_SCHD       PC
                 ,DS_CONTR_BLLG_MTR        PE
                 ,BLLG_CYCLE               PF
             WHERE
                     A.GLBL_CMPY_CD             = #glblCmpyCd#
                 AND A.EZCANCELFLAG             = '0'
                 AND A.DS_CONTR_PK              = #dsContrPk#
                 AND A.GLBL_CMPY_CD             = B.GLBL_CMPY_CD
                 AND A.DS_CONTR_PK              = B.DS_CONTR_PK
                 AND B.DS_CONTR_DTL_TP_CD       NOT IN (#agg#, #flt#)
                 AND B.EZCANCELFLAG             = '0'
                 AND B.GLBL_CMPY_CD             = C.GLBL_CMPY_CD
                 AND B.DS_CONTR_DTL_PK          = C.DS_CONTR_DTL_PK
                 AND C.EZCANCELFLAG             = '0'
                 AND C.USG_CHRG_FLG             = 'Y'
                 AND C.MTR_ENTRY_CPLT_FLG       = 'N'
                 <!-- START 2022/09/20 [QC#60045,MOD] -->
                 <!-- AND A.GLBL_CMPY_CD             = D.GLBL_CMPY_CD          (+) -->
                 <!-- AND A.DS_CONTR_SRC_TP_CD       = D.CONTR_INTFC_SRC_TP_CD (+) -->
                 <!-- AND A.DS_CONTR_CLS_CD          = D.DS_CONTR_CLS_CD       (+) -->
                 <!-- AND A.SVC_LINE_BIZ_CD          = D.SVC_LINE_BIZ_CD       (+) -->
                 <!-- AND D.EFF_FROM_DT  (+)         &lt;= #slsDt# -->
                 <!-- AND D.ENBL_FLG     (+)         = 'Y' -->
                 AND C.GLBL_CMPY_CD             = D.GLBL_CMPY_CD(+)
                 AND SUBSTR(C.BLLG_SCHD_THRU_DT, 0, 6)  = D.DS_WIN_DAYS_TRGT_PER_TXT(+)
                 AND A.SVC_LINE_BIZ_CD          = D.SVC_LINE_BIZ_CD(+)
                 <!-- END   2022/09/20 [QC#60045,MOD] -->
                 AND D.EZCANCELFLAG (+)         = '0'
                 <!-- START 2023/02/09 S.Naya [QC#60045, ADD] -->
                 AND C.GLBL_CMPY_CD                     = D2.GLBL_CMPY_CD(+)
                 AND D2.EZCANCELFLAG (+)                = '0'
                 AND SUBSTR(C.BLLG_SCHD_THRU_DT, 0, 6)  = D2.DS_WIN_DAYS_TRGT_PER_TXT(+)
                 AND D2.SVC_LINE_BIZ_CD(+)              = '*'
                 <!-- END   2023/02/09 S.Naya [QC#60045, ADD] -->
                 AND C.GLBL_CMPY_CD             = E.GLBL_CMPY_CD
                 AND C.DS_CONTR_BLLG_MTR_PK     = E.DS_CONTR_BLLG_MTR_PK
                 AND E.EZCANCELFLAG             = '0'
                 AND E.GLBL_CMPY_CD             = F.GLBL_CMPY_CD          (+)
                 AND E.BLLG_MTR_BLLG_CYCLE_CD   = F.BLLG_CYCLE_CD         (+)
                 AND F.EZCANCELFLAG (+)         = '0'
                 AND C.GLBL_CMPY_CD             = PC.GLBL_CMPY_CD         (+)
                 AND C.PRNT_DS_CONTR_BLLG_SCHD_PK
                                                = PC.DS_CONTR_BLLG_SCHD_PK(+)
                 AND PC.EZCANCELFLAG (+)        = '0'
                 AND PC.GLBL_CMPY_CD            = PE.GLBL_CMPY_CD         (+)
                 AND PC.DS_CONTR_BLLG_MTR_PK    = PE.DS_CONTR_BLLG_MTR_PK (+)
                 AND PE.EZCANCELFLAG (+)        = '0'
                 AND PE.GLBL_CMPY_CD            = PF.GLBL_CMPY_CD         (+)
                 AND PE.BLLG_MTR_BLLG_CYCLE_CD  = PF.BLLG_CYCLE_CD        (+)
                 AND PF.EZCANCELFLAG (+)        = '0'
            ) X
        WHERE
            X.BLLG_SCHD_THRU_DT   &lt;= TO_CHAR((TO_DATE(#slsDt#, #dateFormat#) + TO_NUMBER(X.BEF_DAYS)), #dateFormat#) 
        ORDER BY
             X.DS_CONTR_DTL_PK
            ,X.BLLG_SCHD_THRU_DT
    </statement>
<!-- mod end 2017/08/15 QC#18799 -->

    <statement id="getSchdPkForAggLine" parameterClass="Map" resultClass="Map">
        SELECT
             C.DS_CONTR_BLLG_SCHD_PK
            ,C.DS_CONTR_BLLG_SCHD_SMRY_PK 
            ,C.DS_CONTR_BLLG_MTR_PK
            ,C.BLLG_SCHD_FROM_DT
            ,C.BLLG_SCHD_THRU_DT
            ,C.SVC_PHYS_MTR_READ_GRP_SQ
            <!-- START 2017/09/12 K.Kojima [QC#20835,ADD] -->
            ,C.DS_CONTR_PRC_EFF_SQ_NUM
            ,C.DS_CONTR_BLLG_SCHD_SQ_NUM
            ,C.DS_CONTR_BLLG_SCHD_LVL_NUM
            <!-- END 2017/09/12 K.Kojima [QC#20835,ADD] -->
        FROM
             SVC_INV_LINE       A
            ,DS_CONTR_BLLG_SCHD B
            ,DS_CONTR_BLLG_SCHD C
        WHERE
                A.EZCANCELFLAG               = '0'
            AND A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.SVC_INV_LINE_PK            = #svcInvLinePk#
            AND B.EZCANCELFLAG               = '0'
            AND A.GLBL_CMPY_CD               = B.GLBL_CMPY_CD
            AND A.DS_CONTR_BLLG_SCHD_PK      = B.DS_CONTR_BLLG_SCHD_PK
            AND C.EZCANCELFLAG               = '0'
            AND B.GLBL_CMPY_CD               = C.GLBL_CMPY_CD
            AND B.PRNT_DS_CONTR_BLLG_SCHD_PK = C.DS_CONTR_BLLG_SCHD_PK
    </statement>

    <statement id="getAsisPeKeyList" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             A.DS_CONTR_PRC_EFF_PK
        FROM
             DS_CONTR_PRC_EFF       A
        WHERE
                A.EZCANCELFLAG               = '0'
            AND A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK            = #dsContrDtlPk#
        <isNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK  IS NULL
        </isNull>
        <isNotNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
        </isNotNull>
            AND A.DS_CONTR_PRC_EFF_STS_CD &lt;&gt; #stsCancel#
        ORDER BY
            A.CONTR_PRC_EFF_FROM_DT
    </statement>

    <statement id="getAsisSchdByPePkDt" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             A.DS_CONTR_BLLG_SCHD_PK
        FROM
             DS_CONTR_BLLG_SCHD            A
        WHERE
                A.EZCANCELFLAG                   = '0'
            AND A.GLBL_CMPY_CD                   = #glblCmpyCd#
            AND A.DS_CONTR_PRC_EFF_PK            = #dsContrPrcEffPk#
            AND A.BLLG_SCHD_FROM_DT          &lt;= #fromDt#
            AND A.BLLG_SCHD_THRU_DT          &gt;= #fromDt#
            AND A.DS_CONTR_PRC_EFF_PK        IS NOT NULL
            <!-- START 2017/03/30 U.Kim [QC#24924, ADD] -->
            AND A.INV_TP_CD               &lt;&gt; #invTpCd#
            <!-- END 2017/03/30 U.Kim [QC#24924, ADD] -->
    </statement>

    <statement id="getAsisTopSchdKeyList" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             A.DS_CONTR_BLLG_SCHD_SMRY_PK
        FROM
             DS_CONTR_BLLG_SCHD_SMRY       A
        WHERE
                A.EZCANCELFLAG               = '0'
            AND A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.DS_CONTR_PRC_EFF_PK        = #dsContrPrcEffPk#
        ORDER BY
            A.BLLG_SCHD_FROM_DT
    </statement>

    <statement id="getDelSchdPkListByTopSchdPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             A.DS_CONTR_BLLG_SCHD_PK
        FROM
             DS_CONTR_BLLG_SCHD       A
        WHERE
                A.EZCANCELFLAG               = '0'
            AND A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.DS_CONTR_BLLG_SCHD_SMRY_PK = #dsContrBllgSchdSmryPk#
        ORDER BY
            A.BLLG_SCHD_FROM_DT
    </statement>

    <statement id="getFixDtFromSchd" parameterClass="Map" resultClass="String">
        SELECT
             MAX(A.BLLG_SCHD_THRU_DT)   FIX_DT
        FROM
             DS_CONTR_BLLG_SCHD         A
            ,DS_BLLG_SCHD_TP            B
        WHERE
                A.GLBL_CMPY_CD              = #glblCmpyCd#
            AND A.EZCANCELFLAG              = '0'
            AND A.DS_CONTR_DTL_PK           = #dsContrDtlPk#
        <isNotNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK      = #dsContrBllgMtrPk#
        </isNotNull>
        <isNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK      IS NULL
        </isNull>
            AND A.DS_BLLG_SCHD_STS_CD       = #stsClose#
            AND A.GLBL_CMPY_CD              = B.GLBL_CMPY_CD
            AND A.DS_BLLG_SCHD_TP_CD        = B.DS_BLLG_SCHD_TP_CD
            AND B.EZCANCELFLAG              = '0'
            AND B.DS_CONTR_SCHD_DISP_FLG    = 'Y'
    </statement>

    <statement id="getFixDtFromPe" parameterClass="Map" resultClass="String">
        SELECT
             MAX(A.CONTR_PRC_EFF_THRU_DT)   FIX_DT
        FROM
             DS_CONTR_PRC_EFF         A
        WHERE
                A.GLBL_CMPY_CD              = #glblCmpyCd#
            AND A.EZCANCELFLAG              = '0'
            AND A.DS_CONTR_DTL_PK           = #dsContrDtlPk#
        <isNotNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK      = #dsContrBllgMtrPk#
        </isNotNull>
        <isNull property="dsContrBllgMtrPk">
            AND A.DS_CONTR_BLLG_MTR_PK      IS NULL
        </isNull>
            AND A.DS_CONTR_PRC_EFF_STS_CD   = #stsExpr#
            AND EXISTS
                (
                    SELECT
                        1
                    FROM
                        DS_CONTR_PRC_EFF            B
                    WHERE
                            B.GLBL_CMPY_CD              = A.GLBL_CMPY_CD
                        AND B.EZCANCELFLAG              = '0'
                        AND B.DS_CONTR_DTL_PK           = A.DS_CONTR_DTL_PK
                        <isNotNull property="dsContrBllgMtrPk">
                            AND B.DS_CONTR_BLLG_MTR_PK  = A.DS_CONTR_BLLG_MTR_PK
                        </isNotNull>
                        <isNull property="dsContrBllgMtrPk">
                            AND B.DS_CONTR_BLLG_MTR_PK  IS NULL
                        </isNull>
                        AND B.DS_CONTR_BLLG_MTR_PK  = A.DS_CONTR_BLLG_MTR_PK
                        AND B.CONTR_PRC_EFF_FROM_DT &gt; A.CONTR_PRC_EFF_THRU_DT
                )
    </statement>

    <statement id="getBllgSchdForDeleteByPePk" parameterClass="Map" resultClass="Map">
        SELECT
            DISTINCT
            A.DS_CONTR_PRC_EFF_PK
            ,A.DS_CONTR_BLLG_SCHD_SMRY_PK
            ,A.DS_CONTR_BLLG_SCHD_PK
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.DS_CONTR_PRC_EFF_PK  = #dsContrPrcEffPk#
    </statement>

    <statement id="getBllgSchdForDeleteByPePkAndDt" parameterClass="Map" resultClass="Map">
        SELECT
            DISTINCT
            A.DS_CONTR_PRC_EFF_PK
            ,A.DS_CONTR_BLLG_SCHD_SMRY_PK
            ,A.DS_CONTR_BLLG_SCHD_PK
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.DS_CONTR_PRC_EFF_PK  = #dsContrPrcEffPk#
            <isNotNull  property="fixDt">
            AND A.BLLG_SCHD_FROM_DT    &gt; #fixDt#
            </isNotNull>
    </statement>

    <statement id="getFixBaseTermAmtRate" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            SUM(A.BASE_ACTL_PRC_DEAL_AMT)   AS FIX_BASE_TERM_AMT_RATE
        FROM
             DS_CONTR_BLLG_SCHD      A
        WHERE
                A.GLBL_CMPY_CD                 = #glblCmpyCd#
            AND A.EZCANCELFLAG                 = '0'
            <isNotNull  property="dsContrPrcEffPk">
            AND A.DS_CONTR_PRC_EFF_PK   = #dsContrPrcEffPk#
            </isNotNull>
            <isNotNull  property="dsContrBllgSchdSmryPk">
            AND A.DS_CONTR_BLLG_SCHD_SMRY_PK   = #dsContrBllgSchdSmryPk#
            </isNotNull>
            AND A.BASE_CHRG_FLG                = 'Y'
            AND A.DS_BLLG_SCHD_STS_CD          = #stsClose#
     </statement>

    <statement id="getFixBaseAdjAmt" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            SUM(A.BASE_PRC_ADJ_DEAL_AMT)   AS FIX_BASE_PRC_ADJ_DEAL_AMT
        FROM
             DS_CONTR_BLLG_SCHD      A
        WHERE
                A.GLBL_CMPY_CD                 = #glblCmpyCd#
            AND A.EZCANCELFLAG                 = '0'
            <isNotNull  property="dsContrPrcEffPk">
            AND A.DS_CONTR_PRC_EFF_PK   = #dsContrPrcEffPk#
            </isNotNull>
            <isNotNull  property="dsContrBllgSchdSmryPk">
            AND A.DS_CONTR_BLLG_SCHD_SMRY_PK   = #dsContrBllgSchdSmryPk#
            </isNotNull>
            AND A.BASE_CHRG_FLG                = 'Y'
            AND A.DS_BLLG_SCHD_STS_CD          = #stsClose#
     </statement>

    <statement id="getBaseTermAmtAndAdjAmt" parameterClass="Map" resultClass="Map">
        SELECT
             SUM(A.BASE_ACTL_PRC_DEAL_AMT)   AS BASE_ACTL_PRC_DEAL_AMT
            ,SUM(A.BASE_PRC_ADJ_DEAL_AMT)    AS BASE_PRC_ADJ_DEAL_AMT
        FROM
             DS_CONTR_BLLG_SCHD      A
        WHERE
                A.GLBL_CMPY_CD                 = #glblCmpyCd#
            AND A.EZCANCELFLAG                 = '0'
            AND A.DS_CONTR_BLLG_SCHD_SMRY_PK   = #dsContrBllgSchdSmryPk#
            AND A.BASE_CHRG_FLG                = 'Y'
     </statement>

    <statement id="getFleetChildSchdPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            DS_CONTR_BLLG_SCHD_PK
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.EZCANCELFLAG                  = '0'
            AND A.GLBL_CMPY_CD                  = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK               = #dsContrDtlPk#
            AND A.PRNT_DS_CONTR_BLLG_SCHD_PK    = #prntDsContrBllgSchdPk#
    </statement>

    <statement id="getFixedTermAmtRate" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            SUM(NVL(A.BASE_PRC_DEAL_AMT, 0)) AS FIXEDTERMAMTRATE
        FROM
            DS_CONTR_BLLG_SCHD      A
        WHERE
                A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.EZCANCELFLAG          = '0'
            AND A.DS_CONTR_DTL_PK       = #dsContrDtlPk#
            AND A.BASE_CHRG_FLG         = 'Y'
            AND A.DS_BLLG_SCHD_STS_CD   = #closeSts#
            AND A.SVC_CR_REBIL_PK       IS NULL
        GROUP BY
            A.DS_CONTR_DTL_PK
    </statement>

    <statement id="getCurPeBasePrcDealAmt" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            BASE_PRC_DEAL_AMT
        FROM
            (
                SELECT
                     DPE.BASE_PRC_DEAL_AMT
                    ,3                            AS SORT_KEY1
                    ,(TO_DATE(#slsDt#, 'YYYYMMDD') - TO_DATE(DPE.CONTR_PRC_EFF_THRU_DT, 'YYYYMMDD'))  AS SORT_KEY2
                FROM
                    DS_CONTR_PRC_EFF DPE
                WHERE
                        DPE.DS_CONTR_DTL_PK             =        #dsContrDtlPk#
                    AND DPE.GLBL_CMPY_CD                =        #glblCmpyCd#
                    AND DPE.EZCANCELFLAG                =        '0'
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD     &lt;&gt; #cancelSts#
                    AND DPE.BASE_CHRG_FLG               =        'Y'
                    AND DPE.CONTR_PRC_EFF_THRU_DT       &lt;     #slsDt#
                UNION
                SELECT
                     DPE.BASE_PRC_DEAL_AMT
                    ,1                            AS SORT_KEY1
                    ,0                            AS SORT_KEY2
                FROM
                    DS_CONTR_PRC_EFF DPE
                WHERE
                        DPE.DS_CONTR_DTL_PK             =        #dsContrDtlPk#
                    AND DPE.GLBL_CMPY_CD                =        #glblCmpyCd#
                    AND DPE.EZCANCELFLAG                =        '0'
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD     &lt;&gt; #cancelSts#
                    AND DPE.BASE_CHRG_FLG               =        'Y'
                    AND DPE.CONTR_PRC_EFF_FROM_DT       &lt;=    #slsDt#
                    AND DPE.CONTR_PRC_EFF_THRU_DT       &gt;=    #slsDt#
                UNION
                SELECT
                     DPE.BASE_PRC_DEAL_AMT
                    ,2                            AS SORT_KEY1
                    ,(TO_DATE(DPE.CONTR_PRC_EFF_FROM_DT, 'YYYYMMDD') - TO_DATE(#slsDt#, 'YYYYMMDD'))  AS SORT_KEY2
                FROM
                    DS_CONTR_PRC_EFF DPE
                WHERE
                        DPE.DS_CONTR_DTL_PK             =        #dsContrDtlPk#
                    AND DPE.GLBL_CMPY_CD                =        #glblCmpyCd#
                    AND DPE.EZCANCELFLAG                =        '0'
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD     &lt;&gt; #cancelSts#
                    AND DPE.BASE_CHRG_FLG               =        'Y'
                    AND DPE.CONTR_PRC_EFF_FROM_DT       &gt;=    #slsDt#
                ORDER BY
                     SORT_KEY1                    ASC
                    ,SORT_KEY2                    ASC
        )
        WHERE
            ROWNUM = 1
    </statement>

    <!-- START 2017/08/29 K.Kojima [QC#20057,ADD] -->
    <statement id="getCurPeBllgCycleCdForBase" parameterClass="Map" resultClass="String">
        SELECT
            BLLG_CYCLE_CD
        FROM
            (
                SELECT
                     DPE.BLLG_CYCLE_CD
                    ,3                            AS SORT_KEY1
                    ,(TO_DATE(#slsDt#, 'YYYYMMDD') - TO_DATE(DPE.CONTR_PRC_EFF_THRU_DT, 'YYYYMMDD'))  AS SORT_KEY2
                FROM
                    DS_CONTR_PRC_EFF DPE
                WHERE
                        DPE.DS_CONTR_DTL_PK             =        #dsContrDtlPk#
                    AND DPE.GLBL_CMPY_CD                =        #glblCmpyCd#
                    AND DPE.EZCANCELFLAG                =        '0'
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD     &lt;&gt; #cancelSts#
                    AND DPE.BASE_CHRG_FLG               =        'Y'
                    AND DPE.CONTR_PRC_EFF_THRU_DT       &lt;     #slsDt#
                UNION
                SELECT
                     DPE.BLLG_CYCLE_CD
                    ,1                            AS SORT_KEY1
                    ,0                            AS SORT_KEY2
                FROM
                    DS_CONTR_PRC_EFF DPE
                WHERE
                        DPE.DS_CONTR_DTL_PK             =        #dsContrDtlPk#
                    AND DPE.GLBL_CMPY_CD                =        #glblCmpyCd#
                    AND DPE.EZCANCELFLAG                =        '0'
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD     &lt;&gt; #cancelSts#
                    AND DPE.BASE_CHRG_FLG               =        'Y'
                    AND DPE.CONTR_PRC_EFF_FROM_DT       &lt;=    #slsDt#
                    AND DPE.CONTR_PRC_EFF_THRU_DT       &gt;=    #slsDt#
                UNION
                SELECT
                     DPE.BLLG_CYCLE_CD
                    ,2                            AS SORT_KEY1
                    ,(TO_DATE(DPE.CONTR_PRC_EFF_FROM_DT, 'YYYYMMDD') - TO_DATE(#slsDt#, 'YYYYMMDD'))  AS SORT_KEY2
                FROM
                    DS_CONTR_PRC_EFF DPE
                WHERE
                        DPE.DS_CONTR_DTL_PK             =        #dsContrDtlPk#
                    AND DPE.GLBL_CMPY_CD                =        #glblCmpyCd#
                    AND DPE.EZCANCELFLAG                =        '0'
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD     &lt;&gt; #cancelSts#
                    AND DPE.BASE_CHRG_FLG               =        'Y'
                    AND DPE.CONTR_PRC_EFF_FROM_DT       &gt;=    #slsDt#
                ORDER BY
                     SORT_KEY1                    ASC
                    ,SORT_KEY2                    ASC
        )
        WHERE
            ROWNUM = 1
    </statement>

    <statement id="getCurPeBllgCycleCdForUsage" parameterClass="Map" resultClass="String">
        SELECT
            BLLG_CYCLE_CD
        FROM
            (
                SELECT
                     DPE.BLLG_CYCLE_CD
                    ,3                            AS SORT_KEY1
                    ,(TO_DATE(#slsDt#, 'YYYYMMDD') - TO_DATE(DPE.CONTR_PRC_EFF_THRU_DT, 'YYYYMMDD'))  AS SORT_KEY2
                FROM
                    DS_CONTR_PRC_EFF DPE
                WHERE
                        DPE.DS_CONTR_BLLG_MTR_PK        =        #dsContrBllgMtrPk#
                    AND DPE.GLBL_CMPY_CD                =        #glblCmpyCd#
                    AND DPE.EZCANCELFLAG                =        '0'
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD     &lt;&gt; #cancelSts#
                    AND DPE.USG_CHRG_FLG                =        'Y'
                    AND DPE.CONTR_PRC_EFF_THRU_DT       &lt;     #slsDt#
                UNION
                SELECT
                     DPE.BLLG_CYCLE_CD
                    ,1                            AS SORT_KEY1
                    ,0                            AS SORT_KEY2
                FROM
                    DS_CONTR_PRC_EFF DPE
                WHERE
                        DPE.DS_CONTR_BLLG_MTR_PK        =        #dsContrBllgMtrPk#
                    AND DPE.GLBL_CMPY_CD                =        #glblCmpyCd#
                    AND DPE.EZCANCELFLAG                =        '0'
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD     &lt;&gt; #cancelSts#
                    AND DPE.USG_CHRG_FLG                =        'Y'
                    AND DPE.CONTR_PRC_EFF_FROM_DT       &lt;=    #slsDt#
                    AND DPE.CONTR_PRC_EFF_THRU_DT       &gt;=    #slsDt#
                UNION
                SELECT
                     DPE.BLLG_CYCLE_CD
                    ,2                            AS SORT_KEY1
                    ,(TO_DATE(DPE.CONTR_PRC_EFF_FROM_DT, 'YYYYMMDD') - TO_DATE(#slsDt#, 'YYYYMMDD'))  AS SORT_KEY2
                FROM
                    DS_CONTR_PRC_EFF DPE
                WHERE
                        DPE.DS_CONTR_BLLG_MTR_PK        =        #dsContrBllgMtrPk#
                    AND DPE.GLBL_CMPY_CD                =        #glblCmpyCd#
                    AND DPE.EZCANCELFLAG                =        '0'
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD     &lt;&gt; #cancelSts#
                    AND DPE.USG_CHRG_FLG                =        'Y'
                    AND DPE.CONTR_PRC_EFF_FROM_DT       &gt;=    #slsDt#
                ORDER BY
                     SORT_KEY1                    ASC
                    ,SORT_KEY2                    ASC
        )
        WHERE
            ROWNUM = 1
    </statement>
    <!-- END 2017/08/29 K.Kojima [QC#20057,ADD] -->

    <!-- START 2021/04/06 S.Go [QC#58642,ADD] -->
    <statement id="getCurPeCumCopyEndDtForUsage" parameterClass="Map" resultClass="String">
        SELECT  
            A.CUM_COPY_END_DT
        FROM
            DS_CONTR_BLLG_MTR A
        WHERE
                A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
            AND A.EZCANCELFLAG         = '0'
    </statement>
    <!-- END 2021/04/06 S.Go [QC#58642,ADD] -->

    <statement id="getSumAggBllgSchd" parameterClass="Map" resultClass="Map">
        <!-- START 2018/04/09 K.Kojima [QC#24802,ADD] -->
         WITH TARGET_DS_CONTR_BLLG_SCHD AS (
             SELECT
                  DCBS.DS_CONTR_BLLG_SCHD_PK
                 ,DCBS.DS_CONTR_DTL_PK
                 ,DCBS.PRNT_DS_CONTR_BLLG_SCHD_PK
                 ,DCBS.BASE_PRC_DEAL_AMT
                 ,DCBS.BASE_ACTL_PRC_DEAL_AMT
                 ,DCBS.BASE_PRC_ADJ_DEAL_AMT
             FROM
                 DS_CONTR_BLLG_SCHD DCBS
             WHERE
                     DCBS.GLBL_CMPY_CD  = #glblCmpyCd#
                 AND DCBS.BASE_CHRG_FLG = 'Y'
                 AND DCBS.EZCANCELFLAG  = '0'
                 AND EXISTS(
                     SELECT
                         1
                     FROM
                         DS_CONTR_DTL DCD
                     WHERE
                             DCD.GLBL_CMPY_CD    = DCBS.GLBL_CMPY_CD
                         AND DCD.DS_CONTR_DTL_PK = DCBS.DS_CONTR_DTL_PK
                         AND DCD.DS_CONTR_PK     = #dsContrPk#
                         AND DCD.EZCANCELFLAG    = '0'
                     )
         )
        <!-- END 2018/04/09 K.Kojima [QC#24802,ADD] -->
        SELECT
             T.DS_CONTR_BLLG_SCHD_PK
            ,SUM(NVL(T.BASE_PRC_DEAL_AMT, 0))  AS BASE_PRC_DEAL_AMT
            ,SUM(NVL(T.TERM_AMT_RATE, 0))      AS TERM_AMT_RATE
            ,SUM(NVL(T.ADJ_AMT_RATE, 0))       AS ADJ_AMT_RATE
        FROM (
            SELECT
                 A.DS_CONTR_BLLG_SCHD_PK
                ,SUM(NVL(B.BASE_PRC_DEAL_AMT, 0))           AS BASE_PRC_DEAL_AMT
                ,SUM(NVL(B.BASE_ACTL_PRC_DEAL_AMT, 0))      AS TERM_AMT_RATE
                ,SUM(NVL(B.BASE_PRC_ADJ_DEAL_AMT, 0))       AS ADJ_AMT_RATE
            FROM
                <!-- START 2018/04/09 K.Kojima [QC#24802,MOD] -->
                <!--  DS_CONTR_BLLG_SCHD      A -->
                <!-- ,DS_CONTR_BLLG_SCHD      B -->
                 TARGET_DS_CONTR_BLLG_SCHD      A
                ,TARGET_DS_CONTR_BLLG_SCHD      B
                <!-- END 2018/04/09 K.Kojima [QC#24802,MOD] -->
            WHERE
                <!-- START 2018/04/09 K.Kojima [QC#24802,MOD] -->
                <!--     A.GLBL_CMPY_CD              = #glblCmpyCd# -->
                <!-- AND A.EZCANCELFLAG              = '0' -->
                <!-- AND A.DS_CONTR_DTL_PK           = #dsContrDtlPk# -->
                <!-- AND A.BASE_CHRG_FLG             = 'Y' -->
                <!-- AND A.GLBL_CMPY_CD              = B.GLBL_CMPY_CD -->
                <!-- AND A.DS_CONTR_BLLG_SCHD_PK     = B.PRNT_DS_CONTR_BLLG_SCHD_PK -->
                <!-- AND B.EZCANCELFLAG              = '0' -->
                    A.DS_CONTR_DTL_PK           = #dsContrDtlPk#
                AND A.DS_CONTR_BLLG_SCHD_PK     = B.PRNT_DS_CONTR_BLLG_SCHD_PK
                <!-- END 2018/04/09 K.Kojima [QC#24802,MOD] -->
            GROUP BY
                 A.DS_CONTR_BLLG_SCHD_PK
            UNION ALL
            SELECT
                 X.DS_CONTR_BLLG_SCHD_PK
                ,SUM(NVL(Z.BASE_PRC_DEAL_AMT, 0))           AS BASE_PRC_DEAL_AMT
                ,SUM(NVL(Z.BASE_ACTL_PRC_DEAL_AMT, 0))      AS TERM_AMT_RATE
                ,SUM(NVL(Z.BASE_PRC_ADJ_DEAL_AMT, 0))       AS ADJ_AMT_RATE
            FROM
                <!-- START 2018/04/09 K.Kojima [QC#24802,MOD] -->
                <!--  DS_CONTR_BLLG_SCHD      X -->
                <!-- ,DS_CONTR_BLLG_SCHD      Y -->
                <!-- ,DS_CONTR_BLLG_SCHD      Z -->
                 TARGET_DS_CONTR_BLLG_SCHD      X
                ,TARGET_DS_CONTR_BLLG_SCHD      Y
                ,TARGET_DS_CONTR_BLLG_SCHD      Z
                <!-- END 2018/04/09 K.Kojima [QC#24802,MOD] -->
            WHERE
                <!-- START 2018/04/09 K.Kojima [QC#24802,MOD] -->
                <!--     X.GLBL_CMPY_CD              = #glblCmpyCd# -->
                <!-- AND X.EZCANCELFLAG              = '0' -->
                <!-- AND X.DS_CONTR_DTL_PK           = #dsContrDtlPk# -->
                <!-- AND X.BASE_CHRG_FLG             = 'Y' -->
                <!-- AND X.GLBL_CMPY_CD              = Y.GLBL_CMPY_CD -->
                <!-- AND X.DS_CONTR_BLLG_SCHD_PK     = Y.PRNT_DS_CONTR_BLLG_SCHD_PK -->
                <!-- AND Y.EZCANCELFLAG              = '0' -->
                <!-- AND Y.GLBL_CMPY_CD              = Z.GLBL_CMPY_CD -->
                <!-- AND Y.DS_CONTR_BLLG_SCHD_PK     = Z.PRNT_DS_CONTR_BLLG_SCHD_PK -->
                <!-- AND Z.EZCANCELFLAG              = '0' -->
                    X.DS_CONTR_DTL_PK           = #dsContrDtlPk#
                AND X.DS_CONTR_BLLG_SCHD_PK     = Y.PRNT_DS_CONTR_BLLG_SCHD_PK
                AND Y.DS_CONTR_BLLG_SCHD_PK     = Z.PRNT_DS_CONTR_BLLG_SCHD_PK
                <!-- END 2018/04/09 K.Kojima [QC#24802,MOD] -->
            GROUP BY
                 X.DS_CONTR_BLLG_SCHD_PK
        ) T
        GROUP BY
            T.DS_CONTR_BLLG_SCHD_PK
    </statement>

    <statement id="getSumAggBllgSchdSmry" parameterClass="Map" resultClass="Map">
    <!-- START 2018/05/21 U.Kim [QC#24854, MOD] -->
    <!--         SELECT -->
                <!-- START 2018/04/09 K.Kojima [QC#24802,MOD] -->
                <!--  A.DS_CONTR_BLLG_SCHD_SMRY_PK -->
    <!--              B.DS_CONTR_BLLG_SCHD_SMRY_PK -->
                <!-- END 2018/04/09 K.Kojima [QC#24802,MOD] -->
    <!--             ,B.BASE_PRC_DEAL_AMT                        AS BASE_PRC_DEAL_AMT -->
                <!-- START 2017/11/20 K.Kojima [QC#22683,MOD] -->
                <!-- ,SUM(NVL(B.BASE_ACTL_PRC_DEAL_AMT, 0))      AS TERM_AMT_RATE -->
                <!-- ,SUM(NVL(B.BASE_PRC_ADJ_DEAL_AMT, 0))       AS ADJ_AMT_RATE -->
    <!--             ,SUM( -->
    <!--                 CASE WHEN B.INV_TP_CD = #credit# -->
    <!--                 THEN NVL(B.BASE_ACTL_PRC_DEAL_AMT * -1, 0) -->
    <!--                 ELSE NVL(B.BASE_ACTL_PRC_DEAL_AMT, 0) -->
    <!--                 END -->
    <!--             ) AS TERM_AMT_RATE -->
    <!--             ,SUM( -->
    <!--                 CASE WHEN B.INV_TP_CD = #credit# -->
    <!--                 THEN NVL(B.BASE_PRC_ADJ_DEAL_AMT * -1, 0) -->
    <!--                 ELSE NVL(B.BASE_PRC_ADJ_DEAL_AMT, 0) -->
    <!--                 END -->
    <!--             ) AS ADJ_AMT_RATE -->
                <!-- END 2017/11/20 K.Kojima [QC#22683,MOD] -->
    <!--         FROM -->
                <!-- START 2018/04/09 K.Kojima [QC#24802,MOD] -->
                <!--  DS_CONTR_BLLG_SCHD_SMRY    A -->
                <!-- ,DS_CONTR_BLLG_SCHD         B -->
    <!--              DS_CONTR_BLLG_SCHD         B -->
                <!-- END 2018/04/09 K.Kojima [QC#24802,MOD] -->
    <!--         WHERE -->
                <!-- START 2018/04/09 K.Kojima [QC#24802,MOD] -->
                <!--     A.GLBL_CMPY_CD                  = #glblCmpyCd# -->
                <!-- AND A.EZCANCELFLAG                  = '0' -->
                <!-- AND A.DS_CONTR_DTL_PK               = #dsContrDtlPk# -->
                <!-- AND A.BASE_CHRG_FLG                 = 'Y' -->
                <!-- AND A.GLBL_CMPY_CD                  = B.GLBL_CMPY_CD -->
                <!-- AND A.DS_CONTR_BLLG_SCHD_SMRY_PK    = B.DS_CONTR_BLLG_SCHD_SMRY_PK -->
                <!-- AND B.EZCANCELFLAG                  = '0' -->
    <!--                 B.GLBL_CMPY_CD                  = #glblCmpyCd# -->
    <!--             AND B.EZCANCELFLAG                  = '0' -->
    <!--             AND B.DS_CONTR_DTL_PK               = #dsContrDtlPk# -->
    <!--             AND B.BASE_CHRG_FLG                 = 'Y' -->
                <!-- END 2018/04/09 K.Kojima [QC#24802,MOD] -->
    <!--         GROUP BY -->
                <!-- START 2018/04/09 K.Kojima [QC#24802,MOD] -->
                <!--  A.DS_CONTR_BLLG_SCHD_SMRY_PK -->
    <!--              B.DS_CONTR_BLLG_SCHD_SMRY_PK -->
                <!-- END 2018/04/09 K.Kojima [QC#24802,MOD] -->
    <!--             ,B.BASE_PRC_DEAL_AMT -->
        SELECT
             DS_CONTR_BLLG_SCHD_SMRY_PK
            ,MAX(CASE WHEN ROW_NUMBER = 1 THEN BASE_PRC_DEAL_AMT ELSE 0 END) AS BASE_PRC_DEAL_AMT
            ,MIN(BLLG_SCHD_FROM_DT) AS BLLG_SCHD_FROM_DT
            ,MAX(BLLG_SCHD_THRU_DT) AS BLLG_SCHD_THRU_DT
            ,SUM(
                CASE WHEN INV_TP_CD = #credit#
                THEN NVL(BASE_ACTL_PRC_DEAL_AMT * -1, 0)
                ELSE NVL(BASE_ACTL_PRC_DEAL_AMT, 0)
                END
             ) AS TERM_AMT_RATE
            ,SUM(
                CASE WHEN INV_TP_CD = #credit#
                THEN NVL(BASE_PRC_ADJ_DEAL_AMT * -1, 0)
                ELSE NVL(BASE_PRC_ADJ_DEAL_AMT, 0)
                END
             ) AS ADJ_AMT_RATE
        FROM
            (
                SELECT
                     DS_CONTR_BLLG_SCHD_PK
                    ,DS_CONTR_BLLG_SCHD_SMRY_PK
                    ,BASE_PRC_DEAL_AMT
                    ,BLLG_SCHD_FROM_DT
                    ,BLLG_SCHD_THRU_DT
                    ,INV_TP_CD
                    ,BASE_ACTL_PRC_DEAL_AMT
                    ,BASE_PRC_ADJ_DEAL_AMT
                    ,ROW_NUMBER() OVER(PARTITION BY DS_CONTR_BLLG_SCHD_SMRY_PK ORDER BY SORT_KEY1, SORT_KEY2) AS ROW_NUMBER
                FROM
                    (
                        SELECT
                             DCS.DS_CONTR_BLLG_SCHD_PK
                            ,DCS.DS_CONTR_BLLG_SCHD_SMRY_PK
                            ,DCS.BASE_PRC_DEAL_AMT
                            ,DCS.BLLG_SCHD_FROM_DT
                            ,DCS.BLLG_SCHD_THRU_DT
                            ,DCS.INV_TP_CD
                            ,DCS.BASE_ACTL_PRC_DEAL_AMT
                            ,DCS.BASE_PRC_ADJ_DEAL_AMT
                            ,CASE WHEN DCS.BLLG_SCHD_FROM_DT &lt;= #slsDt# AND DCS.BLLG_SCHD_THRU_DT &gt;= #slsDt# THEN 1
                                  WHEN DCS.BLLG_SCHD_FROM_DT &gt;= #slsDt#                                         THEN 2
                                  WHEN DCS.BLLG_SCHD_THRU_DT &lt;  #slsDt#                                         THEN 3 END AS SORT_KEY1
                            ,CASE WHEN DCS.BLLG_SCHD_FROM_DT &lt;= #slsDt# AND DCS.BLLG_SCHD_THRU_DT &gt;= #slsDt# THEN 0
                                  WHEN DCS.BLLG_SCHD_FROM_DT &gt;= #slsDt#                                         THEN (TO_DATE(DCS.BLLG_SCHD_FROM_DT, 'YYYYMMDD') - TO_DATE(#slsDt#, 'YYYYMMDD'))
                                  WHEN DCS.BLLG_SCHD_THRU_DT &lt;  #slsDt#                                         THEN (TO_DATE(#slsDt#, 'YYYYMMDD') - TO_DATE(DCS.BLLG_SCHD_THRU_DT, 'YYYYMMDD')) END AS SORT_KEY2
                        FROM
                            DS_CONTR_BLLG_SCHD DCS
                        WHERE
                                DCS.GLBL_CMPY_CD    = #glblCmpyCd#
                            AND DCS.DS_CONTR_DTL_PK = #dsContrDtlPk#
                            AND DCS.BASE_CHRG_FLG   = 'Y'
                            AND DCS.EZCANCELFLAG    = '0'
                    )
            )
        GROUP BY
             DS_CONTR_BLLG_SCHD_SMRY_PK
    <!-- END 2018/05/21 U.Kim [QC#24854, MOD] -->
    </statement>

    <statement id="getSumAggPrcEff" parameterClass="Map" resultClass="Map">
    <!-- START 2018/05/21 U.Kim [QC#24854, MOD] -->
    <!--        SELECT -->
                <!-- START 2018/04/09 K.Kojima [QC#24802,MOD] -->
                <!--  A.DS_CONTR_PRC_EFF_PK -->
    <!--             B.DS_CONTR_PRC_EFF_PK -->
                <!-- END 2018/04/09 K.Kojima [QC#24802,MOD] -->
    <!--            ,B.BASE_PRC_DEAL_AMT                        AS BASE_PRC_DEAL_AMT -->
                <!-- START 2017/11/20 K.Kojima [QC#22683,MOD] -->
                <!-- ,SUM(NVL(B.BASE_ACTL_PRC_DEAL_AMT, 0))      AS TERM_AMT_RATE -->
                <!-- ,SUM(NVL(B.BASE_PRC_ADJ_DEAL_AMT, 0))       AS ADJ_AMT_RATE -->
    <!--            ,SUM( -->
    <!--                CASE WHEN B.INV_TP_CD = #credit# -->
    <!--                THEN NVL(B.BASE_ACTL_PRC_DEAL_AMT * -1, 0) -->
    <!--                ELSE NVL(B.BASE_ACTL_PRC_DEAL_AMT, 0) -->
    <!--                END -->
    <!--            ) AS TERM_AMT_RATE -->
    <!--            ,SUM( -->
    <!--                CASE WHEN B.INV_TP_CD = #credit# -->
    <!--                THEN NVL(B.BASE_PRC_ADJ_DEAL_AMT * -1, 0) -->
    <!--                ELSE NVL(B.BASE_PRC_ADJ_DEAL_AMT, 0) -->
    <!--                END -->
    <!--            ) AS ADJ_AMT_RATE -->
                <!-- END 2017/11/20 K.Kojima [QC#22683,MOD] -->
    <!--        FROM -->
                <!-- START 2018/04/09 K.Kojima [QC#24802,MOD] -->
                <!--  DS_CONTR_PRC_EFF           A -->
                <!-- ,DS_CONTR_BLLG_SCHD         B -->
    <!--             DS_CONTR_BLLG_SCHD         B -->
                <!-- END 2018/04/09 K.Kojima [QC#24802,MOD] -->
    <!--        WHERE -->
                <!-- START 2018/04/09 K.Kojima [QC#24802,MOD] -->
                <!--     A.GLBL_CMPY_CD                  = #glblCmpyCd# -->
                <!-- AND A.EZCANCELFLAG                  = '0' -->
                <!-- AND A.DS_CONTR_DTL_PK               = #dsContrDtlPk# -->
                <!-- AND A.BASE_CHRG_FLG                 = 'Y' -->
                <!-- AND A.GLBL_CMPY_CD                  = B.GLBL_CMPY_CD -->
                <!-- AND A.DS_CONTR_PRC_EFF_PK           = B.DS_CONTR_PRC_EFF_PK -->
                <!-- AND B.EZCANCELFLAG                  = '0' -->
    <!--                B.GLBL_CMPY_CD                  = #glblCmpyCd# -->
    <!--            AND B.EZCANCELFLAG                  = '0' -->
    <!--            AND B.DS_CONTR_DTL_PK               = #dsContrDtlPk# -->
    <!--            AND B.BASE_CHRG_FLG                 = 'Y' -->
                <!-- END 2018/04/09 K.Kojima [QC#24802,MOD] -->
    <!--        GROUP BY -->
                <!-- START 2018/04/09 K.Kojima [QC#24802,MOD] -->
                <!--  A.DS_CONTR_PRC_EFF_PK -->
    <!--             B.DS_CONTR_PRC_EFF_PK -->
                <!-- END 2018/04/09 K.Kojima [QC#24802,MOD] -->
    <!--            ,B.BASE_PRC_DEAL_AMT -->
        SELECT
             DS_CONTR_PRC_EFF_PK
            ,MAX(CASE WHEN ROW_NUMBER = 1 THEN BASE_PRC_DEAL_AMT ELSE 0 END) AS BASE_PRC_DEAL_AMT
            ,MIN(BLLG_SCHD_FROM_DT) AS BLLG_SCHD_FROM_DT
            ,MAX(BLLG_SCHD_THRU_DT) AS BLLG_SCHD_THRU_DT
            ,SUM(
                CASE WHEN INV_TP_CD = #credit#
                THEN NVL(BASE_ACTL_PRC_DEAL_AMT * -1, 0)
                ELSE NVL(BASE_ACTL_PRC_DEAL_AMT, 0)
                END
             ) AS TERM_AMT_RATE
            ,SUM(
                CASE WHEN INV_TP_CD = #credit#
                THEN NVL(BASE_PRC_ADJ_DEAL_AMT * -1, 0)
                ELSE NVL(BASE_PRC_ADJ_DEAL_AMT, 0)
                END
             ) AS ADJ_AMT_RATE
        FROM
            (
                SELECT
                     DS_CONTR_BLLG_SCHD_PK
                    ,DS_CONTR_PRC_EFF_PK
                    ,BASE_PRC_DEAL_AMT
                    ,BLLG_SCHD_FROM_DT
                    ,BLLG_SCHD_THRU_DT
                    ,INV_TP_CD
                    ,BASE_ACTL_PRC_DEAL_AMT
                    ,BASE_PRC_ADJ_DEAL_AMT
                    ,ROW_NUMBER() OVER(PARTITION BY DS_CONTR_PRC_EFF_PK ORDER BY SORT_KEY1, SORT_KEY2) AS ROW_NUMBER
                FROM
                    (
                        SELECT
                             DCS.DS_CONTR_BLLG_SCHD_PK
                            ,DCS.DS_CONTR_PRC_EFF_PK
                            ,DCS.BASE_PRC_DEAL_AMT
                            ,DCS.BLLG_SCHD_FROM_DT
                            ,DCS.BLLG_SCHD_THRU_DT
                            ,DCS.INV_TP_CD
                            ,DCS.BASE_ACTL_PRC_DEAL_AMT
                            ,DCS.BASE_PRC_ADJ_DEAL_AMT
                            ,CASE WHEN DCS.BLLG_SCHD_FROM_DT &lt;= #slsDt# AND DCS.BLLG_SCHD_THRU_DT &gt;= #slsDt# THEN 1
                                  WHEN DCS.BLLG_SCHD_FROM_DT &gt;= #slsDt#                                         THEN 2
                                  WHEN DCS.BLLG_SCHD_THRU_DT &lt;  #slsDt#                                         THEN 3 END AS SORT_KEY1
                            ,CASE WHEN DCS.BLLG_SCHD_FROM_DT &lt;= #slsDt# AND DCS.BLLG_SCHD_THRU_DT &gt;= #slsDt# THEN 0
                                  WHEN DCS.BLLG_SCHD_FROM_DT &gt;= #slsDt#                                         THEN (TO_DATE(DCS.BLLG_SCHD_FROM_DT, 'YYYYMMDD') - TO_DATE(#slsDt#, 'YYYYMMDD'))
                                  WHEN DCS.BLLG_SCHD_THRU_DT &lt;  #slsDt#                                         THEN (TO_DATE(#slsDt#, 'YYYYMMDD') - TO_DATE(DCS.BLLG_SCHD_THRU_DT, 'YYYYMMDD')) END AS SORT_KEY2
                        FROM
                            DS_CONTR_BLLG_SCHD DCS
                        WHERE
                                DCS.GLBL_CMPY_CD    = #glblCmpyCd#
                            AND DCS.DS_CONTR_DTL_PK = #dsContrDtlPk#
                            AND DCS.BASE_CHRG_FLG   = 'Y'
                            AND DCS.EZCANCELFLAG    = '0'
                    )
            )
        GROUP BY
             DS_CONTR_PRC_EFF_PK
    <!-- END 2018/05/21 U.Kim [QC#24854, MOD] -->
    </statement>

    <statement id="getSumAggContrDtl" parameterClass="Map" resultClass="Map">
            SELECT
                 A.DS_CONTR_DTL_PK
                <!-- START 2017/11/20 K.Kojima [QC#22683,MOD] -->
                <!-- ,SUM(NVL(B.BASE_ACTL_PRC_DEAL_AMT, 0))      AS TERM_AMT_RATE -->
                <!-- ,SUM(NVL(B.BASE_PRC_ADJ_DEAL_AMT, 0))       AS ADJ_AMT_RATE -->
                ,SUM(
                    CASE WHEN B.INV_TP_CD = #credit#
                    THEN NVL(B.BASE_ACTL_PRC_DEAL_AMT * -1, 0)
                    ELSE NVL(B.BASE_ACTL_PRC_DEAL_AMT, 0)
                    END
                ) AS TERM_AMT_RATE
                ,SUM(
                    CASE WHEN B.INV_TP_CD = #credit#
                    THEN NVL(B.BASE_PRC_ADJ_DEAL_AMT * -1, 0)
                    ELSE NVL(B.BASE_PRC_ADJ_DEAL_AMT, 0)
                    END
                ) AS ADJ_AMT_RATE
                <!-- END 2017/11/20 K.Kojima [QC#22683,MOD] -->
            FROM
                 DS_CONTR_DTL               A
                ,DS_CONTR_BLLG_SCHD         B
            WHERE
                    A.GLBL_CMPY_CD                  = #glblCmpyCd#
                AND A.EZCANCELFLAG                  = '0'
                AND A.DS_CONTR_DTL_PK               = #dsContrDtlPk#
                AND A.GLBL_CMPY_CD                  = B.GLBL_CMPY_CD
                AND A.DS_CONTR_DTL_PK               = B.DS_CONTR_DTL_PK
                AND B.BASE_CHRG_FLG                 = 'Y'
                AND B.EZCANCELFLAG                  = '0'
                AND B.DS_CONTR_PRC_EFF_PK           IS NOT NULL
            GROUP BY
                 A.DS_CONTR_DTL_PK
    </statement>

    <statement id="getInvedMaxBllgSchdThruDtForBase" parameterClass="Map" resultClass="String">
        SELECT
            MAX(A.BLLG_SCHD_THRU_DT) AS BLLG_SCHD_THRU_DT
        FROM
            DS_CONTR_BLLG_SCHD  A
        WHERE
                A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK      = #dsContrDtlPk#
            AND A.BASE_CHRG_FLG        = 'Y'
            AND A.BLLG_SCHD_FROM_DT    &gt;= #bllgSchdThruDt#
            AND A.INV_FLG              = 'Y'
            <!-- START 2022/05/18 QC#60038 [CCI-QC#3578, DEL] -->
            <!-- AND A.SVC_INV_NUM          IS NOT NULL -->
            <!-- START 2022/05/18 QC#60038 [CCI-QC#3578, DEL] -->
    </statement>

    <statement id="getBllgSchdSmryForUpdateBase" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.DS_CONTR_BLLG_SCHD_SMRY_PK
        FROM
            DS_CONTR_BLLG_SCHD_SMRY A
        WHERE
                A.EZCANCELFLAG             = '0'
            AND A.GLBL_CMPY_CD             = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK          = #dsContrDtlPk#
            AND A.BASE_CHRG_FLG            = 'Y'
            AND A.BLLG_SCHD_FROM_DT        &lt;= #lastBilledDt#
            AND A.BLLG_SCHD_THRU_DT        &gt;= #lastBilledDt#
            AND A.DS_CONTR_PRC_EFF_PK      IS NOT NULL
    </statement>

    <statement id="getPcrEffForUpdateBase" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.DS_CONTR_PRC_EFF_PK
        FROM
            DS_CONTR_PRC_EFF A
        WHERE
                A.EZCANCELFLAG             = '0'
            AND A.GLBL_CMPY_CD             = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK          = #dsContrDtlPk#
            AND A.BASE_CHRG_FLG            = 'Y'
            AND A.CONTR_PRC_EFF_FROM_DT    &lt;= #lastBilledDt#
            AND A.CONTR_PRC_EFF_THRU_DT    &gt;= #lastBilledDt#
    </statement>

    <statement id="getPrcEffForCur" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.DS_CONTR_PRC_EFF_PK
        FROM
            DS_CONTR_PRC_EFF A
        WHERE
                A.GLBL_CMPY_CD              = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK           = #dsContrDtlPk#
            AND A.CONTR_PRC_EFF_FROM_DT &lt;= #slsDt#
            AND A.CONTR_PRC_EFF_THRU_DT &gt;= #slsDt#
            AND A.BASE_CHRG_FLG             = #baseChrgFlg#
            AND A.USG_CHRG_FLG              = #usgChrgFlg#
            AND A.EZCANCELFLAG              = '0'
    </statement>

    <statement id="getPrcEffPkListForAllowAdj" parameterClass="Map" resultClass="Map">
        SELECT
             DISTINCT(B.DS_CONTR_PRC_EFF_PK)  AS DS_CONTR_PRC_EFF_PK
        FROM
             DS_CONTR_BLLG_SCHD_MTR      A
            ,DS_CONTR_BLLG_SCHD_SMRY     B
        WHERE
                A.EZCANCELFLAG                 = '0'
            AND A.GLBL_CMPY_CD                 = #glblCmpyCd#
            AND A.DS_CONTR_BLLG_MTR_PK         = #dsContrBllgMtrPk#
            AND A.XS_MTR_ADJ_COPY_QTY          IS NULL
            AND B.EZCANCELFLAG                 = '0'
            AND A.GLBL_CMPY_CD                 = B.GLBL_CMPY_CD
            AND A.DS_CONTR_BLLG_SCHD_SMRY_PK   = B.DS_CONTR_BLLG_SCHD_SMRY_PK
<!-- START 2017/10/06 K.Kim [QC#21212,ADD] -->
            AND B.DS_CONTR_PRC_EFF_PK          IS NOT NULL
<!-- END 2017/10/06 K.Kim [QC#21212,ADD] -->
        ORDER BY
            B.DS_CONTR_PRC_EFF_PK
    </statement>

    <statement id="getTierCnt" parameterClass="Map" resultClass="Map">
        SELECT
            DISTINCT(C.ROW_NUM) TIER_NUM
        FROM
            (
            SELECT
                 ROW_NUMBER() OVER(PARTITION BY A.DS_CONTR_BLLG_SCHD_SMRY_PK ORDER BY A.XS_MTR_COPY_QTY)
                                                AS ROW_NUM
            FROM
                 DS_CONTR_BLLG_SCHD_MTR      A
                ,DS_CONTR_BLLG_SCHD_SMRY     B
            WHERE
                    A.EZCANCELFLAG                 = '0'
                AND A.GLBL_CMPY_CD                 = #glblCmpyCd#
                AND A.GLBL_CMPY_CD                 = B.GLBL_CMPY_CD
                AND A.DS_CONTR_BLLG_SCHD_SMRY_PK   = B.DS_CONTR_BLLG_SCHD_SMRY_PK
                AND B.DS_CONTR_PRC_EFF_PK          = #dsContrPrcEffPk#
            ORDER BY
                ROW_NUM
               ,B.BLLG_SCHD_FROM_DT
            ) C
        ORDER BY
            C.ROW_NUM
    </statement>

    <statement id="getDsContrBllgSchdMtrForAllowAdj" parameterClass="Map" resultClass="Map">
        SELECT
             C.DS_CONTR_BLLG_SCHD_MTR_PK
        FROM
             (
                SELECT
                     A.DS_CONTR_BLLG_SCHD_MTR_PK
                    ,B.BLLG_SCHD_FROM_DT 
                    ,ROW_NUMBER() OVER(PARTITION BY A.DS_CONTR_BLLG_SCHD_SMRY_PK ORDER BY A.XS_MTR_COPY_QTY)
                                                    AS ROW_NUM
                FROM
                     DS_CONTR_BLLG_SCHD_MTR      A
                    ,DS_CONTR_BLLG_SCHD_SMRY     B
                WHERE
                        A.EZCANCELFLAG                 = '0'
                    AND A.GLBL_CMPY_CD                 = #glblCmpyCd#
                    AND A.XS_MTR_ADJ_COPY_QTY          IS NULL
                    AND A.GLBL_CMPY_CD                 = B.GLBL_CMPY_CD
                    AND A.DS_CONTR_BLLG_SCHD_SMRY_PK   = B.DS_CONTR_BLLG_SCHD_SMRY_PK
                    AND B.DS_CONTR_PRC_EFF_PK          = #dsContrPrcEffPk#
                ORDER BY
                    ROW_NUM
                   ,B.BLLG_SCHD_FROM_DT
            ) C
        WHERE
            C.ROW_NUM       = #tierNum#
        ORDER BY
            C.BLLG_SCHD_FROM_DT
    </statement>

    <statement id="getSumAllowAdjInfo" parameterClass="Map" resultClass="Map">
        SELECT
             F.ROW_NUM                   AS ROW_NUM
            ,H.XS_MTR_COPY_QTY           AS XS_MTR_COPY_QTY
            ,F.SUM_XS_MTR_COPY_QTY       AS SUM_XS_MTR_COPY_QTY
            ,F.SUM_PER_SCHD_NUM          AS SUM_PER_SCHD_NUM
        FROM
        (
        SELECT
             C.ROW_NUM                   AS ROW_NUM
            ,SUM(C.XS_MTR_COPY_QTY)      AS SUM_XS_MTR_COPY_QTY
            ,SUM(C.PER_SCHD_NUM)         AS SUM_PER_SCHD_NUM
        FROM
            (
                SELECT
                     A.XS_MTR_COPY_QTY      AS XS_MTR_COPY_QTY
                    ,B.PER_SCHD_NUM         AS PER_SCHD_NUM
                    ,ROW_NUMBER() OVER(PARTITION BY A.DS_CONTR_BLLG_SCHD_SMRY_PK ORDER BY A.XS_MTR_COPY_QTY)
                                            AS ROW_NUM
                FROM
                     DS_CONTR_BLLG_SCHD_MTR      A
                    ,DS_CONTR_BLLG_SCHD_SMRY     B
                WHERE
                        A.EZCANCELFLAG                 = '0'
                    AND A.GLBL_CMPY_CD                 = #glblCmpyCd#
                    AND B.EZCANCELFLAG                 = '0'
                    AND A.GLBL_CMPY_CD                 = B.GLBL_CMPY_CD
                    AND A.DS_CONTR_BLLG_SCHD_SMRY_PK   = B.DS_CONTR_BLLG_SCHD_SMRY_PK
                    AND B.DS_CONTR_PRC_EFF_PK          = #dsContrPrcEffPk#
            ) C
        WHERE
            NOT EXISTS (
                SELECT
                    1
                FROM
                      (
                        SELECT
                             D.XS_MTR_COPY_QTY
                            ,ROW_NUMBER() OVER(ORDER BY D.XS_MTR_COPY_QTY)
                                                    AS ROW_NUM
                        FROM
                             DS_CONTR_PRC_EFF_MTR      D
                        WHERE
                                D.EZCANCELFLAG                 = '0'
                            AND D.GLBL_CMPY_CD                 = #glblCmpyCd#
                            AND D.DS_CONTR_PRC_EFF_PK          = #dsContrPrcEffPk#
                    ) E
                WHERE
                        C.ROW_NUM           = E.ROW_NUM
                    AND C.XS_MTR_COPY_QTY   = E.XS_MTR_COPY_QTY
            )
        GROUP BY
            C.ROW_NUM
        )   F
       ,(
            SELECT
                 G.XS_MTR_COPY_QTY
                ,ROW_NUMBER() OVER(ORDER BY G.XS_MTR_COPY_QTY)
                                        AS ROW_NUM
            FROM
                 DS_CONTR_PRC_EFF_MTR      G
            WHERE
                    G.EZCANCELFLAG                 = '0'
                AND G.GLBL_CMPY_CD                 = #glblCmpyCd#
                AND G.DS_CONTR_PRC_EFF_PK          = #dsContrPrcEffPk#
        )   H
        WHERE
            F.ROW_NUM       = H.ROW_NUM
        AND F.ROW_NUM       = #tierNum#
        ORDER BY
            F.ROW_NUM
    </statement>

    <statement id="getCalcMtrSchdRelnPk" parameterClass="Map" resultClass="Map">
        SELECT
             A.DS_CONTR_BLLG_SCHD_PK
            ,A.SVC_PHYS_MTR_READ_PK
        FROM
            CALC_MTR_SCHD_RELN A
        WHERE
                A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.DS_CONTR_BLLG_SCHD_PK = #dsContrBllgSchdPk#
            AND A.EZCANCELFLAG          = '0'
        UNION
        SELECT
             C.DS_CONTR_BLLG_SCHD_PK
            ,C.SVC_PHYS_MTR_READ_PK
        FROM
             DS_CONTR_BLLG_SCHD B
            ,CALC_MTR_SCHD_RELN C
        WHERE
                B.GLBL_CMPY_CD               = #glblCmpyCd#
            AND B.PRNT_DS_CONTR_BLLG_SCHD_PK = #dsContrBllgSchdPk#
            AND B.EZCANCELFLAG               = '0'
            AND B.GLBL_CMPY_CD               = C.GLBL_CMPY_CD
            AND B.DS_CONTR_BLLG_SCHD_PK      = C.DS_CONTR_BLLG_SCHD_PK
            AND C.EZCANCELFLAG               = '0'
    </statement>

<!-- add start 2017/10/02 QC#21567 -->
    <statement id="getBllgSchdForNextBllgDtUpd" parameterClass="Map" resultClass="Map">
        SELECT
             A.DS_CONTR_BLLG_SCHD_PK    DS_CONTR_BLLG_SCHD_PK
            ,A.NEXT_BLLG_DT             NEXT_BLLG_DT
            ,B.NEXT_BLLG_DT             PRNT_NEXT_BLLG_DT
        FROM
             DS_CONTR_BLLG_SCHD         A
            ,DS_CONTR_BLLG_SCHD         B
        WHERE
                A.GLBL_CMPY_CD          = #glblCmpyCd#
        <isNotNull property="baseChrgFlg">
            AND A.BASE_CHRG_FLG         = #baseChrgFlg#
        </isNotNull>
        <isNotNull property="usgChrgFlg">
            AND A.USG_CHRG_FLG          = #usgChrgFlg#
        </isNotNull>
            AND A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = B.GLBL_CMPY_CD
            AND A.PRNT_DS_CONTR_BLLG_SCHD_PK
                                        = B.DS_CONTR_BLLG_SCHD_PK
            AND B.DS_CONTR_DTL_PK       = #dsContrDtlPk#
            AND A.NEXT_BLLG_DT          &lt;&gt; B.NEXT_BLLG_DT
            AND B.EZCANCELFLAG          = '0'
    </statement>
<!-- add end 2017/10/02 QC#21567 -->
<!-- Add Start 2017/10/24 QC#22008 -->
    <statement id="getOrgSvcINvLinePkFleetMachine" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             B.SVC_INV_LINE_PK
        FROM
             SVC_INV_LINE         X
            ,DS_CONTR_BLLG_SCHD   A
            ,SVC_INV_LINE         B
        WHERE
                X.GLBL_CMPY_CD               = #glblCmpyCd#
            AND X.SVC_INV_LINE_PK            = #prntSvcInvLinePk#
            AND X.EZCANCELFLAG               = '0'
            AND X.GLBL_CMPY_CD               = A.GLBL_CMPY_CD
            AND X.DS_CONTR_BLLG_SCHD_PK      = A.PRNT_DS_CONTR_BLLG_SCHD_PK
            AND A.EZCANCELFLAG               = '0'
            AND A.GLBL_CMPY_CD               = B.GLBL_CMPY_CD
            AND A.DS_CONTR_BLLG_SCHD_PK      = B.DS_CONTR_BLLG_SCHD_PK
            AND B.EZCANCELFLAG               = '0'
    </statement>
<!-- Add End   2017/10/24 QC#22008 -->
    <statement id="getNewXsCopyQtyForAggLine" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            SUM(T.NEW_XS_COPY_QTY) AS NEW_XS_COPY_QTY
        FROM
            (
                SELECT
                     BLLG_MTR_LB_CD
                    ,NEW_XS_COPY_QTY
                    ,ROW_NUMBER() OVER (PARTITION BY DS_CONTR_DTL_PK, BLLG_MTR_LB_CD ORDER BY NEW_XS_COPY_QTY) AS TIER
                FROM
                    (
                        SELECT
                             A.DS_CONTR_DTL_PK
                            ,A.BLLG_MTR_LB_CD
                            ,CASE 
                                WHEN NVL(B.NEW_XS_COPY_QTY, 0) = 0 THEN B.OLD_XS_COPY_QTY
                                ELSE B.NEW_XS_COPY_QTY
                            END NEW_XS_COPY_QTY
                        FROM
                             SVC_CR_REBIL_MTR_BLLG    A
                            ,SVC_CR_REBIL_XS_MTR_BLLG B
                        WHERE
                            A.GLBL_CMPY_CD             = #glblCmpyCd#
                        AND A.EZCANCELFLAG = '0'
                        AND A.SVC_CR_REBIL_DTL_PK      = #svcCrRebilDtlPk#
                        AND EXISTS (
                            SELECT
                                *
                            FROM
                                 SVC_CR_REBIL_MTR_BLLG Z
                            WHERE
                                Z.GLBL_CMPY_CD         = #glblCmpyCd#
                            AND Z.EZCANCELFLAG         = '0'
                            AND Z.SVC_CR_REBIL_DTL_PK  = #svcCrRebilDtlPk#
                            AND Z.DS_CONTR_DTL_PK      = #dsContrDtlPk#
                            AND Z.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
                            AND Z.BLLG_MTR_LB_CD       = A.BLLG_MTR_LB_CD
                        )
                        AND A.GLBL_CMPY_CD = B.GLBL_CMPY_CD
                        AND A.SVC_CR_REBIL_MTR_BLLG_PK = B.SVC_CR_REBIL_MTR_BLLG_PK
                        AND B.EZCANCELFLAG             = '0'
                        AND B.DS_CONTR_DTL_PK          &lt;&gt; #dsContrDtlPk#
                    )
            ) T
        WHERE
            T.TIER = #tierCnt#
    </statement>
    <!-- START 2017/11/01 K.Kojima [QC#21859,ADD] -->
    <statement id="getUnScheduleBasePrice" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            SUM(DCBSS.BASE_SUB_TOT_PRC_DEAL_AMT) AS BASE_SUB_TOT_PRC_DEAL_AMT
        FROM
        	DS_CONTR_BLLG_SCHD_SMRY DCBSS
        WHERE
                DCBSS.GLBL_CMPY_CD           = #glblCmpyCd#
            AND DCBSS.DS_CONTR_PRC_EFF_PK    = #dsContrPrcEffPk#
            AND DCBSS.BLLG_SCHD_THRU_DT   &lt; #bllgSchdThruDt#
            AND DCBSS.EZCANCELFLAG           = '0'
    </statement>
    <!-- END 2017/11/01 K.Kojima [QC#21859,ADD] -->
    <!-- START 2017/11/24 T.Tomita [QC#22683,ADD] -->
    <statement id="getSumPrcEff" parameterClass="Map" resultClass="Map">
        SELECT
             B.BASE_PRC_DEAL_AMT
            ,SUM(
                CASE WHEN B.INV_TP_CD = #credit#
                THEN NVL(B.BASE_ACTL_PRC_DEAL_AMT * -1, 0)
                ELSE NVL(B.BASE_ACTL_PRC_DEAL_AMT, 0)
                END
             ) AS TERM_AMT_RATE
        FROM
             DS_CONTR_PRC_EFF           A
            ,DS_CONTR_BLLG_SCHD         B
        WHERE
                A.GLBL_CMPY_CD                  = #glblCmpyCd#
            AND A.DS_CONTR_PRC_EFF_PK           = #dsContrPrcEffPk#
            AND A.EZCANCELFLAG                  = '0'
            AND A.GLBL_CMPY_CD                  = B.GLBL_CMPY_CD
            AND A.DS_CONTR_DTL_PK               = B.DS_CONTR_DTL_PK
            AND A.DS_CONTR_PRC_EFF_PK           = B.DS_CONTR_PRC_EFF_PK
            AND B.BASE_CHRG_FLG                 = 'Y'
            AND B.EZCANCELFLAG                  = '0'
        GROUP BY
             A.DS_CONTR_PRC_EFF_PK
            ,B.BASE_PRC_DEAL_AMT
    </statement>
    <statement id="getSumBllgSchdSmry" parameterClass="Map" resultClass="Map">
        SELECT
             B.BASE_PRC_DEAL_AMT
            ,SUM(
                CASE WHEN B.INV_TP_CD = #credit#
                THEN NVL(B.BASE_ACTL_PRC_DEAL_AMT * -1, 0)
                ELSE NVL(B.BASE_ACTL_PRC_DEAL_AMT, 0)
                END
             ) AS TERM_AMT_RATE
            ,SUM(
                CASE WHEN B.INV_TP_CD = #credit#
                THEN NVL(B.BASE_PRC_ADJ_DEAL_AMT * -1, 0)
                ELSE NVL(B.BASE_PRC_ADJ_DEAL_AMT, 0)
                END
             ) AS ADJ_AMT_RATE
        FROM
             DS_CONTR_BLLG_SCHD_SMRY    A
            ,DS_CONTR_BLLG_SCHD         B
        WHERE
                A.GLBL_CMPY_CD                  = #glblCmpyCd#
            AND A.DS_CONTR_BLLG_SCHD_SMRY_PK    = #dsContrBllgSchdSmryPk#
            AND A.EZCANCELFLAG                  = '0'
            AND A.GLBL_CMPY_CD                  = B.GLBL_CMPY_CD
            AND A.DS_CONTR_DTL_PK               = B.DS_CONTR_DTL_PK
            AND A.DS_CONTR_PRC_EFF_PK           = B.DS_CONTR_PRC_EFF_PK
            AND A.DS_CONTR_BLLG_SCHD_SMRY_PK    = B.DS_CONTR_BLLG_SCHD_SMRY_PK
            AND B.BASE_CHRG_FLG                 = 'Y'
            AND B.EZCANCELFLAG                  = '0'
        GROUP BY
             A.DS_CONTR_BLLG_SCHD_SMRY_PK
            ,B.BASE_PRC_DEAL_AMT
    </statement>
    <!-- END   2017/11/24 T.Tomita [QC#22683,ADD] -->
    <!-- START 2018/04/20 K.Kojima [QC#25595,ADD] -->
    <statement id="getSumBllgSchdMtr" parameterClass="Map" resultClass="Map">
        WITH AGG_SCHD_MTR_INFO AS (
            SELECT
                 DCBSM.DS_CONTR_BLLG_SCHD_MTR_PK
                ,DCBSS.BLLG_SCHD_FROM_DT
                ,DCBSS.BLLG_SCHD_THRU_DT
                ,DCBM.BLLG_MTR_LB_CD
                ,DCBSM.XS_MTR_COPY_QTY
                ,ROW_NUMBER() OVER(PARTITION BY DCBSS.BLLG_SCHD_FROM_DT,DCBM.BLLG_MTR_LB_CD ORDER BY DCBSM.XS_MTR_COPY_QTY) AS ROW_NUMBER
            FROM
                 DS_CONTR_BLLG_SCHD_SMRY DCBSS
                ,DS_CONTR_BLLG_SCHD_MTR  DCBSM
                ,DS_CONTR_PRC_EFF        DCPE
                ,DS_CONTR_BLLG_MTR       DCBM
            WHERE
                    DCBSS.GLBL_CMPY_CD               = #glblCmpyCd#
                AND DCBSS.DS_CONTR_DTL_PK            = #dsContrDtlPk#
                AND DCBSS.PER_BLLG_CYCLE_CD          = #perBllgCycleDaily#
                AND DCBSS.USG_CHRG_FLG               = 'Y'
                AND DCBSS.EZCANCELFLAG               = '0'
                AND DCBSS.GLBL_CMPY_CD               = DCBSM.GLBL_CMPY_CD
                AND DCBSS.DS_CONTR_BLLG_SCHD_SMRY_PK = DCBSM.DS_CONTR_BLLG_SCHD_SMRY_PK
                AND DCBSM.EZCANCELFLAG               = '0'
                AND DCBSS.GLBL_CMPY_CD               = DCPE.GLBL_CMPY_CD
                AND DCBSS.DS_CONTR_PRC_EFF_PK        = DCPE.DS_CONTR_PRC_EFF_PK
                AND DCPE.EZCANCELFLAG                = '0'
                AND DCBSS.GLBL_CMPY_CD               = DCBM.GLBL_CMPY_CD
                AND DCBSS.DS_CONTR_BLLG_MTR_PK       = DCBM.DS_CONTR_BLLG_MTR_PK
                AND DCBM.EZCANCELFLAG                = '0'
        )
        ,MACH_SCHD_MTR_INFO AS (
            SELECT
                 DCBSM.DS_CONTR_BLLG_SCHD_MTR_PK
                ,DCBSS.BLLG_SCHD_FROM_DT
                ,DCBSS.BLLG_SCHD_THRU_DT
                ,DCBM.BLLG_MTR_LB_CD
                ,DCBSM.XS_MTR_COPY_QTY
                ,ROW_NUMBER() OVER(PARTITION BY DCBSS.DS_CONTR_DTL_PK,DCBSS.BLLG_SCHD_FROM_DT,DCBM.BLLG_MTR_LB_CD ORDER BY DCBSM.XS_MTR_COPY_QTY) AS ROW_NUMBER
            FROM
                 DS_CONTR_DTL            DCD
                ,DS_CONTR_BLLG_SCHD_SMRY DCBSS
                ,DS_CONTR_BLLG_SCHD_MTR  DCBSM
                ,DS_CONTR_PRC_EFF        DCPE
                ,DS_CONTR_BLLG_MTR       DCBM
            WHERE
                    DCD.GLBL_CMPY_CD                 = #glblCmpyCd#
                AND DCD.DS_CONTR_PK                  = #dsContrPk#
                AND DCD.EZCANCELFLAG                 = '0'
                AND DCD.GLBL_CMPY_CD                 = DCBSS.GLBL_CMPY_CD
                AND DCD.DS_CONTR_DTL_PK              = DCBSS.DS_CONTR_DTL_PK
                AND DCBSS.DS_CONTR_DTL_PK     &lt;&gt; #dsContrDtlPk#
                AND DCBSS.PER_BLLG_CYCLE_CD          = #perBllgCycleDaily#
                AND DCBSS.USG_CHRG_FLG               = 'Y'
                AND DCBSS.EZCANCELFLAG               = '0'
                AND DCBSS.GLBL_CMPY_CD               = DCBSM.GLBL_CMPY_CD
                AND DCBSS.DS_CONTR_BLLG_SCHD_SMRY_PK = DCBSM.DS_CONTR_BLLG_SCHD_SMRY_PK
                AND DCBSM.EZCANCELFLAG               = '0'
                AND DCBSS.GLBL_CMPY_CD               = DCPE.GLBL_CMPY_CD
                AND DCBSS.DS_CONTR_PRC_EFF_PK        = DCPE.DS_CONTR_PRC_EFF_PK
                AND DCPE.EZCANCELFLAG                = '0'
                AND DCBSS.GLBL_CMPY_CD               = DCBM.GLBL_CMPY_CD
                AND DCBSS.DS_CONTR_BLLG_MTR_PK       = DCBM.DS_CONTR_BLLG_MTR_PK
                AND DCBM.EZCANCELFLAG                = '0'
        )
        SELECT
             DS_CONTR_BLLG_SCHD_MTR_PK
            ,XS_MTR_COPY_QTY
            ,NEW_XS_MTR_COPY_QTY
        FROM
            (
                SELECT
                     ASMI.DS_CONTR_BLLG_SCHD_MTR_PK
                    ,ASMI.XS_MTR_COPY_QTY
                    ,SUM(MSMI.XS_MTR_COPY_QTY) AS NEW_XS_MTR_COPY_QTY
                FROM
                     AGG_SCHD_MTR_INFO  ASMI
                    ,MACH_SCHD_MTR_INFO MSMI
                WHERE
                        ASMI.BLLG_SCHD_FROM_DT &lt;= MSMI.BLLG_SCHD_FROM_DT
                    AND ASMI.BLLG_SCHD_THRU_DT &gt;= MSMI.BLLG_SCHD_THRU_DT
                    AND ASMI.BLLG_MTR_LB_CD        = MSMI.BLLG_MTR_LB_CD
                    AND ASMI.ROW_NUMBER            = MSMI.ROW_NUMBER
                GROUP BY
                     ASMI.DS_CONTR_BLLG_SCHD_MTR_PK
                    ,ASMI.BLLG_SCHD_FROM_DT
                    ,ASMI.BLLG_SCHD_THRU_DT
                    ,ASMI.XS_MTR_COPY_QTY
            )
        WHERE
            XS_MTR_COPY_QTY &lt;&gt; NEW_XS_MTR_COPY_QTY
    </statement>
    <!-- END 2018/04/20 K.Kojima [QC#25595,ADD] -->
    <!-- START 2018/05/07 T.Tomita [QC#25409,ADD] -->
    <statement id="getUnapprovedUsgChrg" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.SVC_CONTR_BLLG_PK
        FROM
            SVC_CONTR_BLLG A
        WHERE
                A.EZCANCELFLAG       = '0'
            AND A.GLBL_CMPY_CD       = #glblCmpyCd#
            AND A.DS_CONTR_PK        = #dsContrPk#
            AND A.BLLG_CPLT_STS_CD   = #bllgCpltStsCd#
            AND A.BLLG_APVL_REQ_FLG  = 'Y'
            AND A.BLLG_APVL_CPLT_FLG = 'N'
            AND A.USG_CHRG_FLG       = 'Y'
            <!-- START 2018/12/20 K.Kitachi [QC#29647, ADD] -->
            AND NOT EXISTS (
                SELECT
                    1
                FROM
                    DS_CONTR_DTL X
                WHERE
                        A.GLBL_CMPY_CD       = X.GLBL_CMPY_CD
                    AND A.DS_CONTR_DTL_PK    = X.DS_CONTR_DTL_PK
                    AND X.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCd#
                    AND X.EZCANCELFLAG       = '0'
            )
            <!-- END 2018/12/20 K.Kitachi [QC#29647, ADD] -->
    </statement>

    <statement id="getUnapprovedUsgChrgForDtl" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.SVC_CONTR_BLLG_PK
        FROM
            SVC_CONTR_BLLG A
        WHERE
                A.EZCANCELFLAG       = '0'
            AND A.GLBL_CMPY_CD       = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK    = #dsContrDtlPk#
            AND A.BLLG_CPLT_STS_CD   = #bllgCpltStsCd#
            AND A.BLLG_APVL_REQ_FLG  = 'Y'
            AND A.BLLG_APVL_CPLT_FLG = 'N'
            AND A.USG_CHRG_FLG       = 'Y'
            <!-- START 2018/12/20 K.Kitachi [QC#29647, ADD] -->
            AND NOT EXISTS (
                SELECT
                    1
                FROM
                    DS_CONTR_DTL X
                WHERE
                        A.GLBL_CMPY_CD       = X.GLBL_CMPY_CD
                    AND A.DS_CONTR_DTL_PK    = X.DS_CONTR_DTL_PK
                    AND X.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCd#
                    AND X.EZCANCELFLAG       = '0'
            )
            <!-- END 2018/12/20 K.Kitachi [QC#29647, ADD] -->
    </statement>
    <!-- END 2018/05/07 T.Tomita [QC#25409,ADD] -->
    <!-- START 2018/05/23 K.Kojima [QC#23302,ADD] -->
    <statement id="getDsContrAddlChrgPkForTerminate" parameterClass="Map" resultClass="Map">
        SELECT
            DS_CONTR_ADDL_CHRG_PK
            ,MAX(CASE WHEN ROW_NUMBER = 1 THEN SVC_INV_LINE_PK ELSE NULL END) AS SVC_INV_LINE_PK
        FROM
            (
                SELECT
                      SIL.SVC_INV_LINE_PK
                     ,SIL.DS_CONTR_ADDL_CHRG_PK
                     ,ROW_NUMBER() OVER(PARTITION BY SIL.DS_CONTR_ADDL_CHRG_PK ORDER BY SIL.BLLG_PER_THRU_DT DESC, SIL.SVC_INV_LINE_PK ASC) AS ROW_NUMBER
                FROM
                     SVC_INV_LINE       SIL
                    ,DS_CONTR_ADDL_CHRG DCAC
                WHERE
                        SIL.GLBL_CMPY_CD                 = #glblCmpyCd#
                    AND SIL.DS_CONTR_DTL_PK              = #dsContrDtlPk#
                    AND SIL.SVC_INV_CHRG_TP_CD           = #svcInvChrgTpAddlChrg#
                    AND SIL.BLLG_PER_THRU_DT          &gt; #trmnDt#
                    AND SIL.EZCANCELFLAG                 = '0'
                    AND SIL.GLBL_CMPY_CD                 = DCAC.GLBL_CMPY_CD
                    AND SIL.DS_CONTR_ADDL_CHRG_PK        = DCAC.DS_CONTR_ADDL_CHRG_PK
                    AND SIL.DS_CONTR_DTL_PK              = DCAC.DS_CONTR_DTL_PK
                    AND DCAC.ADDL_CHRG_INV_TP_CD         = #addlChrgInvTpBase#
                    AND DCAC.EZCANCELFLAG                = '0'
            )
        GROUP BY
              DS_CONTR_ADDL_CHRG_PK
        ORDER BY
              DS_CONTR_ADDL_CHRG_PK
    </statement>
    <statement id="getSvcInvLineInfoForAdditionalChargeTerminate" parameterClass="Map" resultClass="Map">
        SELECT
             SI.DS_CONTR_PK
            ,SI.DS_CONTR_CATG_CD
            ,SI.DS_ACCT_NUM
            ,SI.BILL_TO_CUST_CD
            ,SI.ORIG_SVC_INV_NUM
            ,SIL.BLLG_PER_FROM_DT
            ,SIL.BLLG_PER_THRU_DT
            ,SILAC.ADDL_CHRG_TP_CD
            ,SILAC.SVC_BILL_BY_TP_CD
            ,SILAC.ADDL_CHRG_FLAT_DEAL_PRC_AMT
            ,SILAC.ADDL_CHRG_FLAT_FUNC_PRC_AMT
            ,SILAC.ADDL_CHRG_APLC_PCT
            ,SILAC.ADDL_CHRG_INV_TP_CD
            ,SILAC.CHRG_MACH_CNT
            ,SILAC.PRINT_DTL_FLG
        FROM
             SVC_INV_LINE           SIL
            ,SVC_INV_LINE_ADDL_CHRG SILAC
            ,SVC_INV                SI
        WHERE
                SIL.GLBL_CMPY_CD    = #glblCmpyCd#
            AND SIL.SVC_INV_LINE_PK = #svcInvLinePk#
            AND SIL.EZCANCELFLAG    = '0'
            AND SIL.GLBL_CMPY_CD    = SILAC.GLBL_CMPY_CD
            AND SIL.SVC_INV_LINE_PK = SILAC.SVC_INV_LINE_PK
            AND SILAC.EZCANCELFLAG  = '0'
            AND SIL.GLBL_CMPY_CD    = SI.GLBL_CMPY_CD
            AND SIL.SVC_INV_NUM     = SI.SVC_INV_NUM
            AND SI.EZCANCELFLAG     = '0'
    </statement>
    <statement id="getIntgMdseCdForAddlChrgTpV" parameterClass="Map" resultClass="String">
        SELECT
            A.INTG_MDSE_CD
        FROM
             ADDL_CHRG_TP_V A
        WHERE
                A.GLBL_CMPY_CD            = #glblCmpyCd#
            AND A.ADDL_CHRG_TP_CD         = #addlChrgTpCd#
            AND A.EZCANCELFLAG            = '0'
    </statement>
    <!-- END 2018/05/23 K.Kojima [QC#23302,ADD] -->
    <!-- START 2018/06/20 T.Tomita [QC#26766,ADD] -->
    <statement id="getContrCatgByDtlPk" parameterClass="Map" resultClass="String">
        SELECT
             B.DS_CONTR_CATG_CD AS DS_CONTR_CATG_CD
        FROM
             DS_CONTR_DTL A
            ,DS_CONTR     B
        WHERE
            A.GLBL_CMPY_CD    = #glblCmpyCd#
        AND A.EZCANCELFLAG    = '0'
        AND A.DS_CONTR_DTL_PK = #dsContrDtlPk#
        AND A.GLBL_CMPY_CD    = B.GLBL_CMPY_CD
        AND A.DS_CONTR_PK     = B.DS_CONTR_PK
        AND B.EZCANCELFLAG    = '0'
    </statement>
    <!-- END 2018/06/20 T.Tomita [QC#26766,ADD] -->
    <!-- START 2018/07/03 K.Kim [QC#26726,ADD] -->
    <statement id="getCreditAndRebillCnt" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
            SVC_CR_REBIL     A
           ,SVC_CR_REBIL_DTL B
        WHERE
            A.GLBL_CMPY_CD        = #glblCmpyCd#
        AND A.EZCANCELFLAG        = '0'
        <iterate property="svcCrRebilStsCdList" var="svcCrRebilStsCd[]" open="AND A.SVC_CR_REBIL_STS_CD NOT IN (" conjunction= ", " close=")">
        #svcCrRebilStsCd[]#
        </iterate>
        AND A.GLBL_CMPY_CD        = B.GLBL_CMPY_CD
        AND A.SVC_CR_REBIL_PK     = B.SVC_CR_REBIL_PK
        AND B.DS_CONTR_PK         = #dsContrPk#
        AND B.EZCANCELFLAG        = '0'
    </statement>
    <!-- END 2018/07/03 K.Kim [QC#26726,ADD] -->
    <!-- START 2018/07/17 [QC#25959,ADD] -->
    <statement id="getRecovPrntPkForAggBase" parameterClass="Map" resultClass="Map">
        SELECT
             ASCH.DS_CONTR_BLLG_SCHD_PK     PRNT_SCHD_PK
            ,MSCH.DS_CONTR_BLLG_SCHD_PK
        FROM
            DS_CONTR_BLLG_SCHD      ASCH
           ,DS_CONTR_DTL            MDTL
           ,DS_CONTR_BLLG_SCHD      MSCH
           
        WHERE
                ASCH.GLBL_CMPY_CD          =        #glblCmpyCd#
            AND ASCH.EZCANCELFLAG          =        '0'
            AND ASCH.DS_CONTR_DTL_PK       =        #aggDtlPk#
            AND ASCH.BASE_CHRG_FLG         =        'Y'
            <!-- START 2018/08/29 [QC#28012,ADD] -->
            AND ASCH.DS_CONTR_PRC_EFF_PK   IS NOT NULL
            AND ASCH.INV_TP_CD             =        #invTpCd#
            <!-- END 2018/08/29 [QC#28012,ADD] -->
            AND ASCH.GLBL_CMPY_CD          =        MDTL.GLBL_CMPY_CD
            AND MDTL.EZCANCELFLAG          =        '0'
            AND MDTL.GLBL_CMPY_CD          =        MSCH.GLBL_CMPY_CD
            AND MSCH.EZCANCELFLAG          =        '0'
            AND ASCH.DS_CONTR_DTL_PK       =        MDTL.PRNT_DS_CONTR_DTL_PK
            AND MDTL.DS_CONTR_DTL_PK       =        MSCH.DS_CONTR_DTL_PK
            AND MSCH.BASE_CHRG_FLG         =        'Y'
            AND MSCH.DS_CONTR_PRC_EFF_PK   IS NOT NULL
            AND MSCH.INV_TP_CD             =        #invTpCd#
            AND MSCH.SVC_CR_REBIL_PK       IS NULL
            AND ASCH.BLLG_SCHD_FROM_DT     &lt;=    MSCH.BLLG_SCHD_FROM_DT
            AND ASCH.BLLG_SCHD_THRU_DT     &gt;=    MSCH.BLLG_SCHD_THRU_DT
            AND ASCH.DS_CONTR_BLLG_SCHD_PK &lt;&gt; MSCH.PRNT_DS_CONTR_BLLG_SCHD_PK
    </statement>
    <statement id="getRecovPrntPkForAggUsg" parameterClass="Map" resultClass="Map">
        SELECT
             ASCH.DS_CONTR_BLLG_SCHD_PK     PRNT_SCHD_PK
            ,MSCH.DS_CONTR_BLLG_SCHD_PK
        FROM
            DS_CONTR_BLLG_SCHD      ASCH
           ,DS_CONTR_BLLG_MTR       AMTR
           ,DS_CONTR_DTL            MDTL
           ,DS_CONTR_BLLG_SCHD      MSCH
           ,DS_CONTR_BLLG_MTR       MMTR
           
        WHERE
                ASCH.GLBL_CMPY_CD          =        #glblCmpyCd#
            AND ASCH.EZCANCELFLAG          =        '0'
            AND ASCH.DS_CONTR_DTL_PK       =        #aggDtlPk#
            <!-- START 2018/08/29 [QC#28012,ADD] -->
            AND ASCH.DS_CONTR_PRC_EFF_PK   IS NOT NULL
            AND ASCH.INV_TP_CD             =        #invTpCd#
            <!-- END 2018/08/29 [QC#28012,ADD] -->
            AND ASCH.GLBL_CMPY_CD          =        AMTR.GLBL_CMPY_CD
            AND AMTR.EZCANCELFLAG          =        '0'
            AND ASCH.GLBL_CMPY_CD          =        MDTL.GLBL_CMPY_CD
            AND MDTL.EZCANCELFLAG          =        '0'
            AND MDTL.GLBL_CMPY_CD          =        MSCH.GLBL_CMPY_CD
            AND MSCH.EZCANCELFLAG          =        '0'
            AND ASCH.GLBL_CMPY_CD          =        MMTR.GLBL_CMPY_CD
            AND MMTR.EZCANCELFLAG          =        '0'
            AND ASCH.DS_CONTR_DTL_PK       =        MDTL.PRNT_DS_CONTR_DTL_PK
            AND ASCH.DS_CONTR_BLLG_MTR_PK  =        AMTR.DS_CONTR_BLLG_MTR_PK
            AND MDTL.DS_CONTR_DTL_PK       =        MSCH.DS_CONTR_DTL_PK
            AND MSCH.DS_CONTR_BLLG_MTR_PK  =        MMTR.DS_CONTR_BLLG_MTR_PK
            AND MSCH.USG_CHRG_FLG          =        'Y'
            AND MSCH.DS_CONTR_PRC_EFF_PK   IS NOT NULL
            AND MSCH.INV_TP_CD             =        '1'
            AND MSCH.SVC_CR_REBIL_PK       IS NULL
            AND AMTR.BLLG_MTR_LB_CD        =        MMTR.BLLG_MTR_LB_CD
            AND ASCH.BLLG_SCHD_FROM_DT     &lt;=    MSCH.BLLG_SCHD_FROM_DT
            AND ASCH.BLLG_SCHD_THRU_DT     &gt;=    MSCH.BLLG_SCHD_THRU_DT
            AND ASCH.DS_CONTR_BLLG_SCHD_PK &lt;&gt; MSCH.PRNT_DS_CONTR_BLLG_SCHD_PK
    </statement>
    <!-- END   2018/07/17 [QC#25959,ADD] -->
    <!-- START 2018/12/20 K.Kitachi [QC#29647, ADD] -->
    <statement id="getBillingHoldBllgMtr" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.DS_CONTR_BLLG_MTR_PK
        FROM
            DS_CONTR_BLLG_MTR A
        WHERE
                A.GLBL_CMPY_CD    = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK = #dsContrDtlPk#
            AND A.BLLG_HLD_FLG    = 'Y'
            AND A.EZCANCELFLAG    = '0'
    </statement>
    <statement id="getBillingHoldPrcEff" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.DS_CONTR_PRC_EFF_PK
        FROM
            DS_CONTR_PRC_EFF A
        WHERE
                A.GLBL_CMPY_CD    = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK = #dsContrDtlPk#
            AND A.BLLG_HLD_FLG    = 'Y'
            AND A.EZCANCELFLAG    = '0'
    </statement>
    <statement id="getBillingHoldAggLine" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.DS_CONTR_DTL_PK
        FROM
            DS_CONTR_DTL A
        WHERE
                A.GLBL_CMPY_CD       = #glblCmpyCd#
            AND A.DS_CONTR_PK        = #dsContrPk#
            AND A.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCd#
            AND A.BLLG_HLD_FLG       = 'Y'
            AND A.EZCANCELFLAG       = '0'
    </statement>
    <!-- END 2018/12/20 K.Kitachi [QC#29647, ADD] -->
    <!-- START 2019/03/05 K.Kitachi [QC#30619, ADD] -->
    <statement id="getResetAccSchdList" parameterClass="Map" resultClass="Map">
        SELECT
             A.DS_CONTR_BLLG_SCHD_PK
            ,A.DS_CONTR_DTL_PK
            ,A.BLLG_SCHD_FROM_DT
            ,A.BLLG_SCHD_THRU_DT
            ,B.BASE_BLLG_TMG_CD
            ,B.CONTR_BLLG_DAY
            ,B.BASE_INV_UP_TO_DT
            ,B.CONTR_EFF_FROM_DT
        FROM
             DS_CONTR_BLLG_SCHD A
            ,DS_CONTR_DTL       B
        WHERE
                A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.PRNT_DS_CONTR_DTL_PK       = #dsContrDtlPk#
            AND A.DS_CONTR_DTL_TP_CD         = #dsContrDtlTpCd#
            AND A.INV_FLG                    = 'N'
            AND A.INV_TP_CD                  = #invTpCd#
            AND A.SVC_CR_REBIL_PK            IS NULL
            AND A.PRNT_DS_CONTR_BLLG_SCHD_PK IS NOT NULL
            AND A.EZCANCELFLAG               = '0'
            AND A.GLBL_CMPY_CD               = B.GLBL_CMPY_CD
            AND A.DS_CONTR_DTL_PK            = B.DS_CONTR_DTL_PK
            AND B.EZCANCELFLAG               = '0'
            AND NOT EXISTS (
                SELECT
                    1
                FROM
                    DS_CONTR_BLLG_SCHD X
                WHERE
                        A.GLBL_CMPY_CD               = X.GLBL_CMPY_CD
                    AND A.PRNT_DS_CONTR_BLLG_SCHD_PK = X.DS_CONTR_BLLG_SCHD_PK
                    AND X.EZCANCELFLAG               = '0'
            )
    </statement>
    <!-- END 2019/03/05 K.Kitachi [QC#30619, ADD] -->
    <!-- START 2019/12/25 [QC#55170, MOD] -->
    <!-- START 2019/06/13 K.Kitachi [QC#50811, ADD] -->
    <statement id="getRecovAccSchdReln" parameterClass="Map" resultClass="Map">
        WITH TARGET_SCHEDULE AS (
            SELECT
                 B.DS_CONTR_DTL_TP_CD
                ,B.DS_CONTR_DTL_PK
                ,B.PRNT_DS_CONTR_DTL_PK
                ,C.DS_CONTR_BLLG_SCHD_PK
                ,C.PRNT_DS_CONTR_BLLG_SCHD_PK
                ,C.NEXT_BLLG_DT
                ,C.BLLG_SCHD_FROM_DT
                ,C.BLLG_SCHD_THRU_DT
                ,C.DS_BLLG_SCHD_TP_CD
            FROM
                 DS_CONTR           A
                ,DS_CONTR_DTL       B
                ,DS_CONTR_BLLG_SCHD C
            WHERE
                    A.GLBL_CMPY_CD    = #glblCmpyCd#
                AND A.DS_CONTR_PK     = #dsContrPk#
                AND A.EZCANCELFLAG    = '0'
                AND A.GLBL_CMPY_CD    = B.GLBL_CMPY_CD
                AND A.DS_CONTR_PK     = B.DS_CONTR_PK
                AND B.EZCANCELFLAG    = '0'
                AND B.GLBL_CMPY_CD    = C.GLBL_CMPY_CD
                AND B.DS_CONTR_DTL_PK = C.DS_CONTR_DTL_PK
                AND C.BASE_CHRG_FLG   = 'Y'
                AND C.INV_FLG         = 'N'
                <!-- AND C.INV_TP_CD       = #invTpCd# -->
                <!-- AND C.SVC_CR_REBIL_PK IS NULL -->
                AND C.EZCANCELFLAG    = '0'
        )
        ,ACCESSORY_SCHEDULE AS (
            SELECT
                 A.DS_CONTR_DTL_TP_CD
                ,A.DS_CONTR_DTL_PK
                ,A.PRNT_DS_CONTR_DTL_PK
                ,A.DS_CONTR_BLLG_SCHD_PK
                ,A.PRNT_DS_CONTR_BLLG_SCHD_PK
                ,A.NEXT_BLLG_DT
                ,A.BLLG_SCHD_FROM_DT
                ,A.BLLG_SCHD_THRU_DT
                ,A.DS_BLLG_SCHD_TP_CD
            FROM
                TARGET_SCHEDULE A
            WHERE
                A.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCd#
        )
        ,PARENT_SCHEDULE_CURR AS (
            SELECT
                 ACC_SCHD.DS_CONTR_BLLG_SCHD_PK  ACC_BLLG_SCHD_PK
                ,PRNT_SCHD.DS_CONTR_BLLG_SCHD_PK NEW_PRNT_BLLG_SCHD_PK
            FROM
                 ACCESSORY_SCHEDULE ACC_SCHD
                ,TARGET_SCHEDULE    PRNT_SCHD
            WHERE
                    ACC_SCHD.PRNT_DS_CONTR_DTL_PK = PRNT_SCHD.DS_CONTR_DTL_PK
                AND ACC_SCHD.NEXT_BLLG_DT         = PRNT_SCHD.NEXT_BLLG_DT
                AND ACC_SCHD.DS_BLLG_SCHD_TP_CD   = PRNT_SCHD.DS_BLLG_SCHD_TP_CD
                AND ACC_SCHD.BLLG_SCHD_FROM_DT    = PRNT_SCHD.BLLG_SCHD_FROM_DT
        )
        ,PARENT_SCHEDULE_PREV AS (
            SELECT
                 ACC_SCHD.DS_CONTR_BLLG_SCHD_PK  ACC_BLLG_SCHD_PK
                ,PRNT_SCHD.DS_CONTR_BLLG_SCHD_PK NEW_PRNT_BLLG_SCHD_PK
                <!-- START 2019/10/23 K.Kitachi [QC#54253, MOD] -->
                <!-- ,ROW_NUMBER() OVER(PARTITION BY PRNT_SCHD.DS_CONTR_DTL_PK, PRNT_SCHD.NEXT_BLLG_DT ORDER BY PRNT_SCHD.BLLG_SCHD_FROM_DT DESC) ROW_NUM -->
                ,ROW_NUMBER() OVER(PARTITION BY ACC_SCHD.DS_CONTR_DTL_PK, PRNT_SCHD.DS_CONTR_DTL_PK, PRNT_SCHD.NEXT_BLLG_DT ORDER BY PRNT_SCHD.BLLG_SCHD_FROM_DT DESC) ROW_NUM
                <!-- END 2019/10/23 K.Kitachi [QC#54253, MOD] -->
            FROM
                 ACCESSORY_SCHEDULE ACC_SCHD
                ,TARGET_SCHEDULE    PRNT_SCHD
            WHERE
                    ACC_SCHD.PRNT_DS_CONTR_DTL_PK = PRNT_SCHD.DS_CONTR_DTL_PK
                AND ACC_SCHD.NEXT_BLLG_DT         = PRNT_SCHD.NEXT_BLLG_DT
                AND ACC_SCHD.DS_BLLG_SCHD_TP_CD   = PRNT_SCHD.DS_BLLG_SCHD_TP_CD
                AND ACC_SCHD.BLLG_SCHD_FROM_DT &gt; PRNT_SCHD.BLLG_SCHD_FROM_DT
        )
        ,PARENT_SCHEDULE_NEXT AS (
            SELECT
                 ACC_SCHD.DS_CONTR_BLLG_SCHD_PK  ACC_BLLG_SCHD_PK
                ,PRNT_SCHD.DS_CONTR_BLLG_SCHD_PK NEW_PRNT_BLLG_SCHD_PK
                <!-- START 2019/10/23 K.Kitachi [QC#54253, MOD] -->
                <!-- ,ROW_NUMBER() OVER(PARTITION BY PRNT_SCHD.DS_CONTR_DTL_PK, PRNT_SCHD.NEXT_BLLG_DT ORDER BY PRNT_SCHD.BLLG_SCHD_FROM_DT) ROW_NUM -->
                ,ROW_NUMBER() OVER(PARTITION BY ACC_SCHD.DS_CONTR_DTL_PK, PRNT_SCHD.DS_CONTR_DTL_PK, PRNT_SCHD.NEXT_BLLG_DT ORDER BY PRNT_SCHD.BLLG_SCHD_FROM_DT) ROW_NUM
                <!-- END 2019/10/23 K.Kitachi [QC#54253, MOD] -->
            FROM
                 ACCESSORY_SCHEDULE ACC_SCHD
                ,TARGET_SCHEDULE    PRNT_SCHD
            WHERE
                    ACC_SCHD.PRNT_DS_CONTR_DTL_PK = PRNT_SCHD.DS_CONTR_DTL_PK
                AND ACC_SCHD.NEXT_BLLG_DT         = PRNT_SCHD.NEXT_BLLG_DT
                AND ACC_SCHD.DS_BLLG_SCHD_TP_CD   = PRNT_SCHD.DS_BLLG_SCHD_TP_CD
                AND ACC_SCHD.BLLG_SCHD_FROM_DT &lt; PRNT_SCHD.BLLG_SCHD_FROM_DT
        )
        SELECT
             ACC_SCHD.DS_CONTR_BLLG_SCHD_PK      ACC_BLLG_SCHD_PK
            ,ACC_SCHD.PRNT_DS_CONTR_BLLG_SCHD_PK OLD_PRNT_BLLG_SCHD_PK
            ,NVL(PRNT_SCHD_CURR.NEW_PRNT_BLLG_SCHD_PK, NVL(PRNT_SCHD_PREV.NEW_PRNT_BLLG_SCHD_PK, PRNT_SCHD_NEXT.NEW_PRNT_BLLG_SCHD_PK)) NEW_PRNT_BLLG_SCHD_PK
        FROM
             ACCESSORY_SCHEDULE   ACC_SCHD
            ,PARENT_SCHEDULE_CURR PRNT_SCHD_CURR
            ,PARENT_SCHEDULE_PREV PRNT_SCHD_PREV
            ,PARENT_SCHEDULE_NEXT PRNT_SCHD_NEXT
        WHERE
                ACC_SCHD.DS_CONTR_BLLG_SCHD_PK     = PRNT_SCHD_CURR.ACC_BLLG_SCHD_PK (+)
            AND ACC_SCHD.DS_CONTR_BLLG_SCHD_PK     = PRNT_SCHD_PREV.ACC_BLLG_SCHD_PK (+)
            AND PRNT_SCHD_PREV.ROW_NUM         (+) = 1
            AND ACC_SCHD.DS_CONTR_BLLG_SCHD_PK     = PRNT_SCHD_NEXT.ACC_BLLG_SCHD_PK (+)
            AND PRNT_SCHD_NEXT.ROW_NUM         (+) = 1
    </statement>
    <!-- END 2019/06/13 K.Kitachi [QC#50811, ADD] -->
    <!-- END 2019/12/25 [QC#55170, MOD] -->
    <!-- START 2019/07/18  [QC#51706, ADD] -->
    <statement id="getManualHldCnt" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
            SVC_MEMO    A
        WHERE
                A.GLBL_CMPY_CD      = #glblCmpyCd#
            AND A.EZCANCELFLAG      = '0'
            AND A.DS_CONTR_PK       =  #dsContrPk#
        <isNotNull property="dsContrDtlPk">
            AND A.DS_CONTR_DTL_PK   = #dsContrDtlPk#
        </isNotNull>
        <isNull property="dsContrDtlPk">
            AND A.DS_CONTR_DTL_PK   IS NULL
        </isNull>
        <isNotNull property="dsContrBllgMtrPk">
            AND A.SVC_MEMO_TRX_NUM   = #dsContrBllgMtrPk#
        </isNotNull>
        <isNull property="dsContrBllgMtrPk">
            AND A.SVC_MEMO_TRX_NUM   IS NULL
        </isNull>
            AND A.SVC_MEMO_CATG_CD   = '__'
            AND A.SVC_MEMO_TP_CD     = '__'
            AND A.SVC_MEMO_RSN_CD    = '__'
    </statement>
    <!-- END 2019/07/18  [QC#51706, ADD] -->
    <!-- START 2020/03/18 K.Kitachi [QC#55693, ADD] -->
    <statement id="getResetXsCopyPkOfBllgSchdMtrList" parameterClass="Map" resultClass="Map">
        WITH PRC_EFF_MTR AS (
            SELECT
                 D.DS_CONTR_PRC_EFF_MTR_PK
                ,C.DS_CONTR_BLLG_MTR_PK
                ,D.DS_CONTR_PRC_EFF_PK
                ,RANK() OVER(
                    PARTITION BY
                         D.DS_CONTR_PRC_EFF_PK
                        ,C.DS_CONTR_BLLG_MTR_PK
                    ORDER BY
                        D.XS_MTR_COPY_QTY
                ) TIER
            FROM
                 DS_CONTR             A
                ,DS_CONTR_DTL         B
                ,DS_CONTR_BLLG_MTR    C
                ,DS_CONTR_PRC_EFF_MTR D
            WHERE
                    A.GLBL_CMPY_CD         = #glblCmpyCd#
                AND A.DS_CONTR_PK          = #dsContrPk#
                AND A.EZCANCELFLAG         = '0'
                AND A.GLBL_CMPY_CD         = B.GLBL_CMPY_CD
                AND A.DS_CONTR_PK          = B.DS_CONTR_PK
                AND B.EZCANCELFLAG         = '0'
                AND B.GLBL_CMPY_CD         = C.GLBL_CMPY_CD
                AND B.DS_CONTR_DTL_PK      = C.DS_CONTR_DTL_PK
                AND C.EZCANCELFLAG         = '0'
                AND C.GLBL_CMPY_CD         = D.GLBL_CMPY_CD
                AND C.DS_CONTR_BLLG_MTR_PK = D.DS_CONTR_BLLG_MTR_PK
                AND D.EZCANCELFLAG         = '0'
        )
        ,BLLG_SCHD_MTR AS (
            SELECT
                 D.GLBL_CMPY_CD
                ,D.DS_CONTR_BLLG_SCHD_SMRY_PK
                ,D.DS_CONTR_BLLG_SCHD_MTR_PK
                ,C.DS_CONTR_BLLG_MTR_PK
                ,E.DS_CONTR_PRC_EFF_PK
                ,RANK() OVER(
                    PARTITION BY
                         E.DS_CONTR_PRC_EFF_PK
                        ,C.DS_CONTR_BLLG_MTR_PK
                        ,E.BLLG_SCHD_FROM_DT
                        ,E.BLLG_SCHD_THRU_DT
                    ORDER BY
                        D.XS_MTR_COPY_QTY
                ) TIER
                ,D.CONTR_XS_COPY_PK
            FROM
                 DS_CONTR                A
                ,DS_CONTR_DTL            B
                ,DS_CONTR_BLLG_MTR       C
                ,DS_CONTR_BLLG_SCHD_MTR  D
                ,DS_CONTR_BLLG_SCHD_SMRY E
            WHERE
                    A.GLBL_CMPY_CD               = #glblCmpyCd#
                AND A.DS_CONTR_PK                = #dsContrPk#
                AND A.EZCANCELFLAG               = '0'
                AND A.GLBL_CMPY_CD               = B.GLBL_CMPY_CD
                AND A.DS_CONTR_PK                = B.DS_CONTR_PK
                AND B.EZCANCELFLAG               = '0'
                AND B.GLBL_CMPY_CD               = C.GLBL_CMPY_CD
                AND B.DS_CONTR_DTL_PK            = C.DS_CONTR_DTL_PK
                AND C.EZCANCELFLAG               = '0'
                AND C.GLBL_CMPY_CD               = D.GLBL_CMPY_CD
                AND C.DS_CONTR_BLLG_MTR_PK       = D.DS_CONTR_BLLG_MTR_PK
                AND D.EZCANCELFLAG               = '0'
                AND D.GLBL_CMPY_CD               = E.GLBL_CMPY_CD
                AND D.DS_CONTR_BLLG_SCHD_SMRY_PK = E.DS_CONTR_BLLG_SCHD_SMRY_PK
                AND E.DS_CONTR_PRC_EFF_PK        IS NOT NULL
                AND E.EZCANCELFLAG               = '0'
        )
        SELECT
             A.DS_CONTR_BLLG_SCHD_MTR_PK
            ,B.DS_CONTR_PRC_EFF_MTR_PK
        FROM
             BLLG_SCHD_MTR A
            ,PRC_EFF_MTR   B
        WHERE
                A.DS_CONTR_BLLG_MTR_PK      = B.DS_CONTR_BLLG_MTR_PK
            AND A.DS_CONTR_PRC_EFF_PK       = B.DS_CONTR_PRC_EFF_PK
            AND A.TIER                      = B.TIER
            AND NVL(A.CONTR_XS_COPY_PK, -1) &lt;&gt; B.DS_CONTR_PRC_EFF_MTR_PK
            AND EXISTS (
                SELECT
                    1
                FROM
                    DS_CONTR_BLLG_SCHD X
                WHERE
                        A.GLBL_CMPY_CD               = X.GLBL_CMPY_CD
                    AND A.DS_CONTR_BLLG_SCHD_SMRY_PK = X.DS_CONTR_BLLG_SCHD_SMRY_PK
                    AND X.INV_FLG                    = 'N'
                    AND X.EZCANCELFLAG               = '0'
            )
    </statement>
    <!-- END 2020/03/18 K.Kitachi [QC#55693, ADD] -->
    <!-- START 2022/03/14 K.Kitachi [QC#59684, ADD] -->
    <statement id="getInvoicedSchdPkByBllgMtrPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.DS_CONTR_BLLG_SCHD_PK
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK      = #dsContrDtlPk#
            AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
            AND A.USG_CHRG_FLG         = 'Y'
            AND A.INV_FLG              = 'Y'
            <!-- START 2023/10/05 H.Iinuma [QC#61675, ADD] -->
            AND A.BLLG_SCHD_THRU_DT    &gt; #trmnDt#
            <!-- END 2023/10/05 H.Iinuma [QC#61675, ADD] -->
    </statement>
    <!-- END 2022/03/14 K.Kitachi [QC#59684, ADD] -->
    <!-- ADD START 2022/05/09 T.Suzuki QC#59979 [CCI-QC#3578, ADD] -->
    <statement id="countRefundBllgSchd" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK      = #dsContrDtlPk#
            AND A.BASE_CHRG_FLG        = 'Y'
            AND A.USG_CHRG_FLG         = 'N'
            AND A.DS_CONTR_BLLG_MTR_PK IS NULL
            AND A.BLLG_SCHD_THRU_DT    &gt; #trmnDt#
            AND A.DS_CONTR_PRC_EFF_PK  IS NOT NULL
            AND A.INV_FLG              = 'Y'
            AND A.SVC_INV_NUM          IS NOT NULL
    </statement>
    <statement id="countUnbilledBllgSchd" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK      = #dsContrDtlPk#
            AND A.BASE_CHRG_FLG        = 'Y'
            AND A.USG_CHRG_FLG         = 'N'
            AND A.DS_CONTR_BLLG_MTR_PK IS NULL
            AND A.BLLG_SCHD_THRU_DT    &gt; #trmnDt#
            AND A.DS_CONTR_PRC_EFF_PK  IS NOT NULL
            AND A.INV_FLG              = 'N'
    </statement>
    <!-- ADD END 2022/05/09 T.Suzuki QC#59979 [CCI-QC#3578, ADD] -->

    <!-- add start 2022/07/07 QC#60167 -->
    <statement id="getSvcInvForAddlChrgTerminate" parameterClass="Map" resultClass="Map">
        WITH INV_IFNO AS (
            SELECT
                 B.DS_CONTR_DTL_PK 
                ,B.SVC_INV_LINE_PK
                ,B.SVC_INV_NUM
                ,B.DS_CONTR_ADDL_CHRG_PK
                ,B.BLLG_PER_FROM_DT
                ,B.BLLG_PER_THRU_DT
                ,ROW_NUMBER() OVER(PARTITION BY B.DS_CONTR_DTL_PK ORDER BY B.BLLG_PER_FROM_DT ASC,  B.SVC_INV_LINE_PK ASC) AS FROM_RANK
                ,ROW_NUMBER() OVER(PARTITION BY B.DS_CONTR_DTL_PK ORDER BY B.BLLG_PER_THRU_DT DESC, B.SVC_INV_LINE_PK ASC) AS THRU_RANK
            FROM
                 SVC_INV            A
                ,SVC_INV_LINE       B
                ,SVC_INV_LINE       C
                ,DS_CONTR_BLLG_SCHD D
            WHERE
                    A.GLBL_CMPY_CD               = #glblCmpyCd#
                AND A.INV_TP_CD                  = #invTpInvoice#
                AND A.EZCANCELFLAG               = '0'
                AND A.GLBL_CMPY_CD               = B.GLBL_CMPY_CD
                AND A.SVC_INV_NUM                = B.SVC_INV_NUM
                AND B.DS_CONTR_DTL_PK            = #dsContrDtlPk#
                AND B.SVC_INV_CHRG_TP_CD         = #svcInvChrgTpAddlChrg#
                AND B.BLLG_PER_THRU_DT       &gt;= #trmnDt#
                AND B.EZCANCELFLAG               = '0'
                AND B.GLBL_CMPY_CD               = C.GLBL_CMPY_CD
                AND B.PRNT_SVC_INV_LINE_PK       = C.SVC_INV_LINE_PK
                AND C.SVC_INV_CHRG_TP_CD         = #svcInvChrgTpBaseChrg#
                AND C.EZCANCELFLAG               = '0'
                AND C.GLBL_CMPY_CD               = D.GLBL_CMPY_CD
                AND C.DS_CONTR_BLLG_SCHD_PK      = D.DS_CONTR_BLLG_SCHD_PK
                AND D.DS_CONTR_PRC_EFF_PK        IS NOT NULL
                AND D.BASE_CHRG_FLG              = 'Y'
                AND D.EZCANCELFLAG               = '0'
        )
        SELECT
             A.DS_CONTR_DTL_PK
            ,A.BLLG_PER_FROM_DT
            ,B.BLLG_PER_THRU_DT
            ,B.SVC_INV_LINE_PK
            ,B.DS_CONTR_ADDL_CHRG_PK
        FROM
             (SELECT * FROM INV_IFNO A WHERE A.FROM_RANK = 1) A
            ,(SELECT * FROM INV_IFNO A WHERE A.THRU_RANK = 1) B
        WHERE
            A.DS_CONTR_DTL_PK = B.DS_CONTR_DTL_PK
    </statement>
    <!-- add end 2022/07/07 QC#60167 -->
</sqlMap>
