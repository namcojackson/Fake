//This file was automatically generated by Text File Layout Definition Document and XLA200710010.
// Generated on    :20160707130655000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :TextFileLayoutDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0480F00FMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.file;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL0480F00 File Layout Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL0480F00FMsg extends EZDFMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** T_MDL_NM*/
	public final EZDFStringItem              t_MdlNm;

    /** MDL_DESC_TXT*/
	public final EZDFStringItem              mdlDescTxt;

    /** MDL_GRP_NM*/
	public final EZDFStringItem              mdlGrpNm;

    /** SVC_SEG_CD*/
	public final EZDFStringItem              svcSegCd;

    /** XX_SCR_ITEM_10_TXT*/
	public final EZDFStringItem              xxScrItem10Txt;

    /** XX_SR_DT_TXT*/
	public final EZDFStringItem              xxSrDtTxt;

    /** MTR_GRP_NM*/
	public final EZDFStringItem              mtrGrpNm;

    /** SVC_SKILL_NM*/
	public final EZDFStringItem              svcSkillNm;

    /** SVC_ISTL_RULE_NM_IN*/
	public final EZDFStringItem              svcIstlRuleNm_IN;

    /** SVC_ISTL_RULE_NM_DE*/
	public final EZDFStringItem              svcIstlRuleNm_DE;

    /** CUST_ISTL_FLG*/
	public final EZDFStringItem              custIstlFlg;

    /** SVC_ISTL_REQ_FLG*/
	public final EZDFStringItem              svcIstlReqFlg;

    /** SITE_SRVY_REQ_FLG*/
	public final EZDFStringItem              siteSrvyReqFlg;

    /** RCLL_INTVL_DAYS_AOT*/
	public final EZDFBigDecimalItem              rcllIntvlDaysAot;

    /** RCLL_COPY_VOL_CNT*/
	public final EZDFBigDecimalItem              rcllCopyVolCnt;

    /** RCLL_GLBL_INTVL_DAYS_AOT*/
	public final EZDFBigDecimalItem              rcllGlblIntvlDaysAot;

    /** RCLL_GLBL_COPY_VOL_CNT*/
	public final EZDFBigDecimalItem              rcllGlblCopyVolCnt;

    /** RSP_TM_UP_MN_AOT*/
	public final EZDFBigDecimalItem              rspTmUpMnAot;

    /** XS_VISIT_CNT*/
	public final EZDFBigDecimalItem              xsVisitCnt;

    /** PHONE_FIX_FLG*/
	public final EZDFStringItem              phoneFixFlg;

    /** PHONE_FIX_INTVL_DAYS_AOT*/
	public final EZDFBigDecimalItem              phoneFixIntvlDaysAot;

    /** AFTER_HOUR_ALLW_FLG*/
	public final EZDFStringItem              afterHourAllwFlg;

    /** MACH_IN_FLD_INAC_MTH_AOT*/
	public final EZDFBigDecimalItem              machInFldInacMthAot;

    /** COPY_VOL_DAYS_AOT*/
	public final EZDFBigDecimalItem              copyVolDaysAot;

    /** MAX_COPY_PER_DAY_TOT_CNT*/
	public final EZDFBigDecimalItem              maxCopyPerDayTotCnt;

    /** MAX_COPY_PER_DAY_BLACK_CNT*/
	public final EZDFBigDecimalItem              maxCopyPerDayBlackCnt;

    /** MAX_COPY_TEST_CNT*/
	public final EZDFBigDecimalItem              maxCopyTestCnt;

    /** MDL_SPEED_BLACK_RATE*/
	public final EZDFBigDecimalItem              mdlSpeedBlackRate;

    /** MDL_SPEED_COLOR_RATE*/
	public final EZDFBigDecimalItem              mdlSpeedColorRate;

    /** DS_MDL_PAPER_SIZE_NM*/
	public final EZDFStringItem              dsMdlPaperSizeNm;


	/**
	 * NSAL0480F00FMsg is constructor.
	 * The initialization when the instance of NSAL0480F00FMsg is generated.
	 */
	public NSAL0480F00FMsg() {
		this(false, -1);
	}

	/**
	 * NSAL0480F00FMsg is constructor.
	 * The initialization when the instance of NSAL0480F00FMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL0480F00FMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		t_MdlNm = (EZDFStringItem)newItem("t_MdlNm");
		mdlDescTxt = (EZDFStringItem)newItem("mdlDescTxt");
		mdlGrpNm = (EZDFStringItem)newItem("mdlGrpNm");
		svcSegCd = (EZDFStringItem)newItem("svcSegCd");
		xxScrItem10Txt = (EZDFStringItem)newItem("xxScrItem10Txt");
		xxSrDtTxt = (EZDFStringItem)newItem("xxSrDtTxt");
		mtrGrpNm = (EZDFStringItem)newItem("mtrGrpNm");
		svcSkillNm = (EZDFStringItem)newItem("svcSkillNm");
		svcIstlRuleNm_IN = (EZDFStringItem)newItem("svcIstlRuleNm_IN");
		svcIstlRuleNm_DE = (EZDFStringItem)newItem("svcIstlRuleNm_DE");
		custIstlFlg = (EZDFStringItem)newItem("custIstlFlg");
		svcIstlReqFlg = (EZDFStringItem)newItem("svcIstlReqFlg");
		siteSrvyReqFlg = (EZDFStringItem)newItem("siteSrvyReqFlg");
		rcllIntvlDaysAot = (EZDFBigDecimalItem)newItem("rcllIntvlDaysAot");
		rcllCopyVolCnt = (EZDFBigDecimalItem)newItem("rcllCopyVolCnt");
		rcllGlblIntvlDaysAot = (EZDFBigDecimalItem)newItem("rcllGlblIntvlDaysAot");
		rcllGlblCopyVolCnt = (EZDFBigDecimalItem)newItem("rcllGlblCopyVolCnt");
		rspTmUpMnAot = (EZDFBigDecimalItem)newItem("rspTmUpMnAot");
		xsVisitCnt = (EZDFBigDecimalItem)newItem("xsVisitCnt");
		phoneFixFlg = (EZDFStringItem)newItem("phoneFixFlg");
		phoneFixIntvlDaysAot = (EZDFBigDecimalItem)newItem("phoneFixIntvlDaysAot");
		afterHourAllwFlg = (EZDFStringItem)newItem("afterHourAllwFlg");
		machInFldInacMthAot = (EZDFBigDecimalItem)newItem("machInFldInacMthAot");
		copyVolDaysAot = (EZDFBigDecimalItem)newItem("copyVolDaysAot");
		maxCopyPerDayTotCnt = (EZDFBigDecimalItem)newItem("maxCopyPerDayTotCnt");
		maxCopyPerDayBlackCnt = (EZDFBigDecimalItem)newItem("maxCopyPerDayBlackCnt");
		maxCopyTestCnt = (EZDFBigDecimalItem)newItem("maxCopyTestCnt");
		mdlSpeedBlackRate = (EZDFBigDecimalItem)newItem("mdlSpeedBlackRate");
		mdlSpeedColorRate = (EZDFBigDecimalItem)newItem("mdlSpeedColorRate");
		dsMdlPaperSizeNm = (EZDFStringItem)newItem("dsMdlPaperSizeNm");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL0480F00FMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL0480F00FMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"t_MdlNm", "t_MdlNm", null, null, TYPE_HANKAKUEISU, "50", null},
	{"mdlDescTxt", "mdlDescTxt", null, null, TYPE_HANKAKUEISU, "90", null},
	{"mdlGrpNm", "mdlGrpNm", null, null, TYPE_HANKAKUEISU, "20", null},
	{"svcSegCd", "svcSegCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"xxScrItem10Txt", "xxScrItem10Txt", null, null, TYPE_HANKAKUEISU, "10", null},
	{"xxSrDtTxt", "xxSrDtTxt", null, null, TYPE_HANKAKUEISU, "10", null},
	{"mtrGrpNm", "mtrGrpNm", null, null, TYPE_HANKAKUEISU, "30", null},
	{"svcSkillNm", "svcSkillNm", null, null, TYPE_HANKAKUEISU, "30", null},
	{"svcIstlRuleNm_IN", "svcIstlRuleNm_IN", "IN", null, TYPE_HANKAKUEISU, "30", null},
	{"svcIstlRuleNm_DE", "svcIstlRuleNm_DE", "DE", null, TYPE_HANKAKUEISU, "30", null},
	{"custIstlFlg", "custIstlFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"svcIstlReqFlg", "svcIstlReqFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"siteSrvyReqFlg", "siteSrvyReqFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"rcllIntvlDaysAot", "rcllIntvlDaysAot", null, null, TYPE_SEISU_SYOSU, "3", "1"},
	{"rcllCopyVolCnt", "rcllCopyVolCnt", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"rcllGlblIntvlDaysAot", "rcllGlblIntvlDaysAot", null, null, TYPE_SEISU_SYOSU, "3", "1"},
	{"rcllGlblCopyVolCnt", "rcllGlblCopyVolCnt", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"rspTmUpMnAot", "rspTmUpMnAot", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xsVisitCnt", "xsVisitCnt", null, null, TYPE_SEISU_SYOSU, "2", "0"},
	{"phoneFixFlg", "phoneFixFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"phoneFixIntvlDaysAot", "phoneFixIntvlDaysAot", null, null, TYPE_SEISU_SYOSU, "3", "0"},
	{"afterHourAllwFlg", "afterHourAllwFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"machInFldInacMthAot", "machInFldInacMthAot", null, null, TYPE_SEISU_SYOSU, "3", "1"},
	{"copyVolDaysAot", "copyVolDaysAot", null, null, TYPE_SEISU_SYOSU, "9", "0"},
	{"maxCopyPerDayTotCnt", "maxCopyPerDayTotCnt", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"maxCopyPerDayBlackCnt", "maxCopyPerDayBlackCnt", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"maxCopyTestCnt", "maxCopyTestCnt", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"mdlSpeedBlackRate", "mdlSpeedBlackRate", null, null, TYPE_SEISU_SYOSU, "10", "2"},
	{"mdlSpeedColorRate", "mdlSpeedColorRate", null, null, TYPE_SEISU_SYOSU, "10", "2"},
	{"dsMdlPaperSizeNm", "dsMdlPaperSizeNm", null, null, TYPE_HANKAKUEISU, "30", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"T_MDL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//t_MdlNm
        {"MDL_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdlDescTxt
        {"MDL_GRP_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdlGrpNm
        {"SVC_SEG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcSegCd
        {"XX_SCR_ITEM_10_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxScrItem10Txt
        {"XX_SR_DT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxSrDtTxt
        {"MTR_GRP_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrGrpNm
        {"SVC_SKILL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcSkillNm
        {"SVC_ISTL_RULE_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcIstlRuleNm_IN
        {"SVC_ISTL_RULE_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcIstlRuleNm_DE
        {"CUST_ISTL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//custIstlFlg
        {"SVC_ISTL_REQ_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcIstlReqFlg
        {"SITE_SRVY_REQ_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//siteSrvyReqFlg
        {"RCLL_INTVL_DAYS_AOT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rcllIntvlDaysAot
        {"RCLL_COPY_VOL_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rcllCopyVolCnt
        {"RCLL_GLBL_INTVL_DAYS_AOT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rcllGlblIntvlDaysAot
        {"RCLL_GLBL_COPY_VOL_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rcllGlblCopyVolCnt
        {"RSP_TM_UP_MN_AOT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rspTmUpMnAot
        {"XS_VISIT_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xsVisitCnt
        {"PHONE_FIX_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//phoneFixFlg
        {"PHONE_FIX_INTVL_DAYS_AOT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//phoneFixIntvlDaysAot
        {"AFTER_HOUR_ALLW_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//afterHourAllwFlg
        {"MACH_IN_FLD_INAC_MTH_AOT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//machInFldInacMthAot
        {"COPY_VOL_DAYS_AOT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//copyVolDaysAot
        {"MAX_COPY_PER_DAY_TOT_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//maxCopyPerDayTotCnt
        {"MAX_COPY_PER_DAY_BLACK_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//maxCopyPerDayBlackCnt
        {"MAX_COPY_TEST_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//maxCopyTestCnt
        {"MDL_SPEED_BLACK_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdlSpeedBlackRate
        {"MDL_SPEED_COLOR_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdlSpeedColorRate
        {"DS_MDL_PAPER_SIZE_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsMdlPaperSizeNm
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

