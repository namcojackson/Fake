// This file was automatically generated by Screen Field Definition Document and XLA200710010
// Generated on    :20230515102457000
// Velocity Macro:svltdatabean.vm V200604010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0760Bean.java Copyright FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */

package  business.servlet.NSAL0760;

import parts.servletcommon.EZDCommonDataBean;

/*
 * NSAL0760 is data bean class.
 */
public class NSAL0760Bean extends EZDCommonDataBean {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	//Constant Definition Area
	/** DS_CONTR_PK*/
	public static final String dsContrPk = "dsContrPk";

	/** XX_CHK_BOX_H1*/
	public static final String xxChkBox_H1 = "xxChkBox_H1";

	/** XX_CHK_BOX_H2*/
	public static final String xxChkBox_H2 = "xxChkBox_H2";

	/** XX_PAGE_SHOW_FROM_NUM*/
	public static final String xxPageShowFromNum = "xxPageShowFromNum";

	/** XX_PAGE_SHOW_TO_NUM*/
	public static final String xxPageShowToNum = "xxPageShowToNum";

	/** XX_PAGE_SHOW_OF_NUM*/
	public static final String xxPageShowOfNum = "xxPageShowOfNum";

	/** XX_ROW_NUM*/
	public static final String xxRowNum = "xxRowNum";

	/** A*/
	public static final String A = "A";

	/** XX_ROW_NUM_A1*/
	public static final String xxRowNum_A1 = "xxRowNum_A1";

	/** XX_REF_CSE_NUM*/
	public static final String xxRefCseNum = "xxRefCseNum";

	/** DS_CONTR_TRK_TP_CD*/
	public static final String dsContrTrkTpCd = "dsContrTrkTpCd";

	/** DS_CONTR_NUM*/
	public static final String dsContrNum = "dsContrNum";

	/** DS_CONTR_DTL_PK*/
	public static final String dsContrDtlPk = "dsContrDtlPk";

	/** DS_CONTR_BLLG_MTR_PK*/
	public static final String dsContrBllgMtrPk = "dsContrBllgMtrPk";

	/** SER_NUM*/
	public static final String serNum = "serNum";

	/** MDSE_DESC_SHORT_TXT_AS*/
	public static final String mdseDescShortTxt_AS = "mdseDescShortTxt_AS";

	/** XX_BTN_FLG_A1*/
	public static final String xxBtnFlg_A1 = "xxBtnFlg_A1";

	/** XX_DPLY_BY_CD_NM_CNCT_TXT*/
	public static final String xxDplyByCdNmCnctTxt = "xxDplyByCdNmCnctTxt";

	/** XX_BTN_FLG_A2*/
	public static final String xxBtnFlg_A2 = "xxBtnFlg_A2";

	/** DS_CONTR_PRC_EFF_SQ_NUM*/
	public static final String dsContrPrcEffSqNum = "dsContrPrcEffSqNum";

	/** XX_BTN_FLG_A3*/
	public static final String xxBtnFlg_A3 = "xxBtnFlg_A3";

	/** XX_FROM_DT*/
	public static final String xxFromDt = "xxFromDt";

	/** XX_THRU_DT*/
	public static final String xxThruDt = "xxThruDt";

	/** CONTR_CLO_DT*/
	public static final String contrCloDt = "contrCloDt";

	/** DS_CONTR_STS_DESC_TXT*/
	public static final String dsContrStsDescTxt = "dsContrStsDescTxt";

	/**
	 * Method name:NSAL0760 is Bean's Constructor.
	 * <dd>method explanation:Initialization when instance of NSAL0760Bean is generated
	 * <dd>Remarks:
	 */
	public NSAL0760Bean() {
		super("business.servlet.NSAL0760.NSAL0760BMsg");
	}

	/**
	 * get  DS_CONTR_PK.
	 * @return DS_CONTR_PK
	 */
	public String getDsContrPk() {
		return outputValue(dsContrPk);
	}

	/**
	 * set  DS_CONTR_PK.
	 * @param data DS_CONTR_PK
	 */
	public void setDsContrPk(String data) {
		inputValue(dsContrPk,data);
	}

	/**
	 * get  XX_CHK_BOX_H1.
	 * @return XX_CHK_BOX_H1
	 */
	public String getXxChkBox_H1() {
		return outputValue(xxChkBox_H1);
	}

	/**
	 * set  XX_CHK_BOX_H1.
	 * @param data XX_CHK_BOX_H1
	 */
	public void setXxChkBox_H1(String data) {
		inputValue(xxChkBox_H1,data);
	}

	/**
	 * get  XX_CHK_BOX_H2.
	 * @return XX_CHK_BOX_H2
	 */
	public String getXxChkBox_H2() {
		return outputValue(xxChkBox_H2);
	}

	/**
	 * set  XX_CHK_BOX_H2.
	 * @param data XX_CHK_BOX_H2
	 */
	public void setXxChkBox_H2(String data) {
		inputValue(xxChkBox_H2,data);
	}

	/**
	 * get  XX_PAGE_SHOW_FROM_NUM.
	 * @return XX_PAGE_SHOW_FROM_NUM
	 */
	public String getXxPageShowFromNum() {
		return outputValue(xxPageShowFromNum);
	}

	/**
	 * set  XX_PAGE_SHOW_FROM_NUM.
	 * @param data XX_PAGE_SHOW_FROM_NUM
	 */
	public void setXxPageShowFromNum(String data) {
		inputValue(xxPageShowFromNum,data);
	}

	/**
	 * get  XX_PAGE_SHOW_TO_NUM.
	 * @return XX_PAGE_SHOW_TO_NUM
	 */
	public String getXxPageShowToNum() {
		return outputValue(xxPageShowToNum);
	}

	/**
	 * set  XX_PAGE_SHOW_TO_NUM.
	 * @param data XX_PAGE_SHOW_TO_NUM
	 */
	public void setXxPageShowToNum(String data) {
		inputValue(xxPageShowToNum,data);
	}

	/**
	 * get  XX_PAGE_SHOW_OF_NUM.
	 * @return XX_PAGE_SHOW_OF_NUM
	 */
	public String getXxPageShowOfNum() {
		return outputValue(xxPageShowOfNum);
	}

	/**
	 * set  XX_PAGE_SHOW_OF_NUM.
	 * @param data XX_PAGE_SHOW_OF_NUM
	 */
	public void setXxPageShowOfNum(String data) {
		inputValue(xxPageShowOfNum,data);
	}

	/**
	 * get  XX_ROW_NUM.
	 * @return XX_ROW_NUM
	 */
	public String getXxRowNum() {
		return outputValue(xxRowNum);
	}

	/**
	 * set  XX_ROW_NUM.
	 * @param data XX_ROW_NUM
	 */
	public void setXxRowNum(String data) {
		inputValue(xxRowNum,data);
	}

	/**
	 * get  XX_ROW_NUM_A1.
	 * @param idx1 List Number
	 * @return XX_ROW_NUM_A1
	 */
	public String getXxRowNum_A1(int idx1) {
		return outputValue(A, idx1, xxRowNum_A1);
	}

	/**
	 * set  XX_ROW_NUM_A1.
	 * @param data XX_ROW_NUM_A1Array
	 */
	public void setXxRowNum_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRowNum_A1, data[j]);
		}
	}

	/**
	 * get  XX_REF_CSE_NUM.
	 * @param idx1 List Number
	 * @return XX_REF_CSE_NUM
	 */
	public String getXxRefCseNum(int idx1) {
		return outputValue(A, idx1, xxRefCseNum);
	}

	/**
	 * set  XX_REF_CSE_NUM.
	 * @param data XX_REF_CSE_NUMArray
	 */
	public void setXxRefCseNum(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRefCseNum, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_TRK_TP_CD.
	 * @param idx1 List Number
	 * @return DS_CONTR_TRK_TP_CD
	 */
	public String getDsContrTrkTpCd(int idx1) {
		return outputValue(A, idx1, dsContrTrkTpCd);
	}

	/**
	 * set  DS_CONTR_TRK_TP_CD.
	 * @param data DS_CONTR_TRK_TP_CDArray
	 */
	public void setDsContrTrkTpCd(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsContrTrkTpCd, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_NUM.
	 * @param idx1 List Number
	 * @return DS_CONTR_NUM
	 */
	public String getDsContrNum(int idx1) {
		return outputValue(A, idx1, dsContrNum);
	}

	/**
	 * set  DS_CONTR_NUM.
	 * @param data DS_CONTR_NUMArray
	 */
	public void setDsContrNum(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsContrNum, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_DTL_PK.
	 * @param idx1 List Number
	 * @return DS_CONTR_DTL_PK
	 */
	public String getDsContrDtlPk(int idx1) {
		return outputValue(A, idx1, dsContrDtlPk);
	}

	/**
	 * set  DS_CONTR_DTL_PK.
	 * @param data DS_CONTR_DTL_PKArray
	 */
	public void setDsContrDtlPk(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsContrDtlPk, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_BLLG_MTR_PK.
	 * @param idx1 List Number
	 * @return DS_CONTR_BLLG_MTR_PK
	 */
	public String getDsContrBllgMtrPk(int idx1) {
		return outputValue(A, idx1, dsContrBllgMtrPk);
	}

	/**
	 * set  DS_CONTR_BLLG_MTR_PK.
	 * @param data DS_CONTR_BLLG_MTR_PKArray
	 */
	public void setDsContrBllgMtrPk(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsContrBllgMtrPk, data[j]);
		}
	}

	/**
	 * get  SER_NUM.
	 * @param idx1 List Number
	 * @return SER_NUM
	 */
	public String getSerNum(int idx1) {
		return outputValue(A, idx1, serNum);
	}

	/**
	 * set  SER_NUM.
	 * @param data SER_NUMArray
	 */
	public void setSerNum(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, serNum, data[j]);
		}
	}

	/**
	 * get  MDSE_DESC_SHORT_TXT_AS.
	 * @param idx1 List Number
	 * @return MDSE_DESC_SHORT_TXT_AS
	 */
	public String getMdseDescShortTxt_AS(int idx1) {
		return outputValue(A, idx1, mdseDescShortTxt_AS);
	}

	/**
	 * set  MDSE_DESC_SHORT_TXT_AS.
	 * @param data MDSE_DESC_SHORT_TXT_ASArray
	 */
	public void setMdseDescShortTxt_AS(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, mdseDescShortTxt_AS, data[j]);
		}
	}

	/**
	 * get  XX_BTN_FLG_A1.
	 * @param idx1 List Number
	 * @return XX_BTN_FLG_A1
	 */
	public String getXxBtnFlg_A1(int idx1) {
		return outputValue(A, idx1, xxBtnFlg_A1);
	}

	/**
	 * set  XX_BTN_FLG_A1.
	 * @param data XX_BTN_FLG_A1Array
	 */
	public void setXxBtnFlg_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxBtnFlg_A1, data[j]);
		}
	}

	/**
	 * get  XX_DPLY_BY_CD_NM_CNCT_TXT.
	 * @param idx1 List Number
	 * @return XX_DPLY_BY_CD_NM_CNCT_TXT
	 */
	public String getXxDplyByCdNmCnctTxt(int idx1) {
		return outputValue(A, idx1, xxDplyByCdNmCnctTxt);
	}

	/**
	 * set  XX_DPLY_BY_CD_NM_CNCT_TXT.
	 * @param data XX_DPLY_BY_CD_NM_CNCT_TXTArray
	 */
	public void setXxDplyByCdNmCnctTxt(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxDplyByCdNmCnctTxt, data[j]);
		}
	}

	/**
	 * get  XX_BTN_FLG_A2.
	 * @param idx1 List Number
	 * @return XX_BTN_FLG_A2
	 */
	public String getXxBtnFlg_A2(int idx1) {
		return outputValue(A, idx1, xxBtnFlg_A2);
	}

	/**
	 * set  XX_BTN_FLG_A2.
	 * @param data XX_BTN_FLG_A2Array
	 */
	public void setXxBtnFlg_A2(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxBtnFlg_A2, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_PRC_EFF_SQ_NUM.
	 * @param idx1 List Number
	 * @return DS_CONTR_PRC_EFF_SQ_NUM
	 */
	public String getDsContrPrcEffSqNum(int idx1) {
		return outputValue(A, idx1, dsContrPrcEffSqNum);
	}

	/**
	 * set  DS_CONTR_PRC_EFF_SQ_NUM.
	 * @param data DS_CONTR_PRC_EFF_SQ_NUMArray
	 */
	public void setDsContrPrcEffSqNum(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsContrPrcEffSqNum, data[j]);
		}
	}

	/**
	 * get  XX_BTN_FLG_A3.
	 * @param idx1 List Number
	 * @return XX_BTN_FLG_A3
	 */
	public String getXxBtnFlg_A3(int idx1) {
		return outputValue(A, idx1, xxBtnFlg_A3);
	}

	/**
	 * set  XX_BTN_FLG_A3.
	 * @param data XX_BTN_FLG_A3Array
	 */
	public void setXxBtnFlg_A3(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxBtnFlg_A3, data[j]);
		}
	}

	/**
	 * get  XX_FROM_DT.
	 * @param idx1 List Number
	 * @return XX_FROM_DT
	 */
	public String getXxFromDt(int idx1) {
		return outputValue(A, idx1, xxFromDt, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  XX_FROM_DT.
	 * @param data XX_FROM_DTArray
	 */
	public void setXxFromDt(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i,  xxFromDt, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  XX_THRU_DT.
	 * @param idx1 List Number
	 * @return XX_THRU_DT
	 */
	public String getXxThruDt(int idx1) {
		return outputValue(A, idx1, xxThruDt, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  XX_THRU_DT.
	 * @param data XX_THRU_DTArray
	 */
	public void setXxThruDt(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i,  xxThruDt, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  CONTR_CLO_DT.
	 * @param idx1 List Number
	 * @return CONTR_CLO_DT
	 */
	public String getContrCloDt(int idx1) {
		return outputValue(A, idx1, contrCloDt, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  CONTR_CLO_DT.
	 * @param data CONTR_CLO_DTArray
	 */
	public void setContrCloDt(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i,  contrCloDt, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  DS_CONTR_STS_DESC_TXT.
	 * @param idx1 List Number
	 * @return DS_CONTR_STS_DESC_TXT
	 */
	public String getDsContrStsDescTxt(int idx1) {
		return outputValue(A, idx1, dsContrStsDescTxt);
	}

	/**
	 * set  DS_CONTR_STS_DESC_TXT.
	 * @param data DS_CONTR_STS_DESC_TXTArray
	 */
	public void setDsContrStsDescTxt(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsContrStsDescTxt, data[j]);
		}
	}

}

