//This file was automatically generated by Business Component Interface Definition Document (Define Business Application Global Area) and XLA200710010.
// Generated on    :20190118110523000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSAL1330_RSMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NSAL1330;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL1330 Business Application Global Area Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL1330_RSMsg extends EZDSMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** DS_CONTR_DTL_PK_R*/
	public final EZDSBigDecimalItem              dsContrDtlPk_R;

    /** T_MDL_NM_R*/
	public final EZDSStringItem              t_MdlNm_R;

    /** MDL_ID_R*/
	public final EZDSBigDecimalItem              mdlId_R;

    /** DS_ORD_POSN_NUM_R*/
	public final EZDSStringItem              dsOrdPosnNum_R;

    /** XX_TOT_QTY_CNT_R*/
	public final EZDSBigDecimalItem              xxTotQtyCnt_R;

    /** PRC_CATG_NM_R*/
	public final EZDSStringItem              prcCatgNm_R;

    /** PRC_CATG_CD_R*/
	public final EZDSStringItem              prcCatgCd_R;

    /** PRC_LIST_TP_CD_R*/
	public final EZDSStringItem              prcListTpCd_R;

    /** MAINT_FL_PRC_CATG_CD_R*/
	public final EZDSStringItem              maintFlPrcCatgCd_R;

    /** PRC_MTR_PKG_PK_RL*/
	public final EZDSBigDecimalItemArray              prcMtrPkgPk_RL;

    /** PRC_MTR_PKG_NM_RL*/
	public final EZDSStringItemArray              prcMtrPkgNm_RL;

    /** PRC_MTR_PKG_PK_R*/
	public final EZDSBigDecimalItem              prcMtrPkgPk_R;

    /** PRC_TIER_SVC_OFFER_CD_R*/
	public final EZDSStringItem              prcTierSvcOfferCd_R;

    /** XX_TOT_PRC_AMT_PR*/
	public final EZDSBigDecimalItem              xxTotPrcAmt_PR;

    /** XX_TOT_PRC_AMT_ER*/
	public final EZDSBigDecimalItem              xxTotPrcAmt_ER;

    /** XX_TOT_PRC_AMT_TR*/
	public final EZDSBigDecimalItem              xxTotPrcAmt_TR;

    /** TERM_MTH_AOT_R*/
	public final EZDSBigDecimalItem              termMthAot_R;

    /** BASE_PRC_DEAL_AMT_R*/
	public final EZDSBigDecimalItem              basePrcDealAmt_R;

    /** DEAL_PRC_LIST_PRC_AMT_R*/
	public final EZDSBigDecimalItem              dealPrcListPrcAmt_R;

    /** PRC_RATE_TP_CD_R*/
	public final EZDSStringItem              prcRateTpCd_R;

    /** SCR_ENT_AVAL_FLG_R*/
	public final EZDSStringItem              scrEntAvalFlg_R;

    /** BILL_TO_LOC_NUM_R*/
	public final EZDSStringItem              billToLocNum_R;

    /** BILL_TO_CUST_CD_R*/
	public final EZDSStringItem              billToCustCd_R;

    /** DS_ACCT_NM_R*/
	public final EZDSStringItem              dsAcctNm_R;


	/**
	 * NSAL1330_RSMsg is constructor.
	 * The initialization when the instance of NSAL1330_RSMsg is generated.
	 */
	public NSAL1330_RSMsg() {
		this(false, -1);
	}

	/**
	 * NSAL1330_RSMsg is constructor.
	 * The initialization when the instance of NSAL1330_RSMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL1330_RSMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		dsContrDtlPk_R = (EZDSBigDecimalItem)newItem("dsContrDtlPk_R");
		t_MdlNm_R = (EZDSStringItem)newItem("t_MdlNm_R");
		mdlId_R = (EZDSBigDecimalItem)newItem("mdlId_R");
		dsOrdPosnNum_R = (EZDSStringItem)newItem("dsOrdPosnNum_R");
		xxTotQtyCnt_R = (EZDSBigDecimalItem)newItem("xxTotQtyCnt_R");
		prcCatgNm_R = (EZDSStringItem)newItem("prcCatgNm_R");
		prcCatgCd_R = (EZDSStringItem)newItem("prcCatgCd_R");
		prcListTpCd_R = (EZDSStringItem)newItem("prcListTpCd_R");
		maintFlPrcCatgCd_R = (EZDSStringItem)newItem("maintFlPrcCatgCd_R");
		prcMtrPkgPk_RL = (EZDSBigDecimalItemArray)newItemArray("prcMtrPkgPk_RL");
		prcMtrPkgNm_RL = (EZDSStringItemArray)newItemArray("prcMtrPkgNm_RL");
		prcMtrPkgPk_R = (EZDSBigDecimalItem)newItem("prcMtrPkgPk_R");
		prcTierSvcOfferCd_R = (EZDSStringItem)newItem("prcTierSvcOfferCd_R");
		xxTotPrcAmt_PR = (EZDSBigDecimalItem)newItem("xxTotPrcAmt_PR");
		xxTotPrcAmt_ER = (EZDSBigDecimalItem)newItem("xxTotPrcAmt_ER");
		xxTotPrcAmt_TR = (EZDSBigDecimalItem)newItem("xxTotPrcAmt_TR");
		termMthAot_R = (EZDSBigDecimalItem)newItem("termMthAot_R");
		basePrcDealAmt_R = (EZDSBigDecimalItem)newItem("basePrcDealAmt_R");
		dealPrcListPrcAmt_R = (EZDSBigDecimalItem)newItem("dealPrcListPrcAmt_R");
		prcRateTpCd_R = (EZDSStringItem)newItem("prcRateTpCd_R");
		scrEntAvalFlg_R = (EZDSStringItem)newItem("scrEntAvalFlg_R");
		billToLocNum_R = (EZDSStringItem)newItem("billToLocNum_R");
		billToCustCd_R = (EZDSStringItem)newItem("billToCustCd_R");
		dsAcctNm_R = (EZDSStringItem)newItem("dsAcctNm_R");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL1330_RSMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL1330_RSMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"dsContrDtlPk_R", "dsContrDtlPk_R", "R", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"t_MdlNm_R", "t_MdlNm_R", "R", null, TYPE_HANKAKUEISU, "50", null},
	{"mdlId_R", "mdlId_R", "R", null, TYPE_SEISU_SYOSU, "22", "0"},
	{"dsOrdPosnNum_R", "dsOrdPosnNum_R", "R", null, TYPE_HANKAKUEISU, "6", null},
	{"xxTotQtyCnt_R", "xxTotQtyCnt_R", "R", null, TYPE_SEISU_SYOSU, "11", "0"},
	{"prcCatgNm_R", "prcCatgNm_R", "R", null, TYPE_HANKAKUEISU, "75", null},
	{"prcCatgCd_R", "prcCatgCd_R", "R", null, TYPE_HANKAKUEISU, "10", null},
	{"prcListTpCd_R", "prcListTpCd_R", "R", null, TYPE_HANKAKUEISU, "2", null},
	{"maintFlPrcCatgCd_R", "maintFlPrcCatgCd_R", "R", null, TYPE_HANKAKUEISU, "10", null},
	{"prcMtrPkgPk_RL", "prcMtrPkgPk_RL", "RL", "99", TYPE_SEISU_SYOSU, "28", "0"},
	{"prcMtrPkgNm_RL", "prcMtrPkgNm_RL", "RL", "99", TYPE_HANKAKUEISU, "50", null},
	{"prcMtrPkgPk_R", "prcMtrPkgPk_R", "R", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"prcTierSvcOfferCd_R", "prcTierSvcOfferCd_R", "R", null, TYPE_HANKAKUEISU, "2", null},
	{"xxTotPrcAmt_PR", "xxTotPrcAmt_PR", "PR", null, TYPE_SEISU_SYOSU, "29", "4"},
	{"xxTotPrcAmt_ER", "xxTotPrcAmt_ER", "ER", null, TYPE_SEISU_SYOSU, "29", "4"},
	{"xxTotPrcAmt_TR", "xxTotPrcAmt_TR", "TR", null, TYPE_SEISU_SYOSU, "29", "4"},
	{"termMthAot_R", "termMthAot_R", "R", null, TYPE_SEISU_SYOSU, "3", "0"},
	{"basePrcDealAmt_R", "basePrcDealAmt_R", "R", null, TYPE_SEISU_SYOSU, "19", "4"},
	{"dealPrcListPrcAmt_R", "dealPrcListPrcAmt_R", "R", null, TYPE_SEISU_SYOSU, "19", "4"},
	{"prcRateTpCd_R", "prcRateTpCd_R", "R", null, TYPE_HANKAKUEISU, "2", null},
	{"scrEntAvalFlg_R", "scrEntAvalFlg_R", "R", null, TYPE_HANKAKUEISU, "1", null},
	{"billToLocNum_R", "billToLocNum_R", "R", null, TYPE_HANKAKUEISU, "30", null},
	{"billToCustCd_R", "billToCustCd_R", "R", null, TYPE_HANKAKUEISU, "20", null},
	{"dsAcctNm_R", "dsAcctNm_R", "R", null, TYPE_HANKAKUEISU, "360", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"DS_CONTR_DTL_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrDtlPk_R
        {"T_MDL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//t_MdlNm_R
        {"MDL_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdlId_R
        {"DS_ORD_POSN_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdPosnNum_R
        {"XX_TOT_QTY_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxTotQtyCnt_R
        {"PRC_CATG_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCatgNm_R
        {"PRC_CATG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCatgCd_R
        {"PRC_LIST_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcListTpCd_R
        {"MAINT_FL_PRC_CATG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//maintFlPrcCatgCd_R
        {"PRC_MTR_PKG_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcMtrPkgPk_RL
        {"PRC_MTR_PKG_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcMtrPkgNm_RL
        {"PRC_MTR_PKG_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcMtrPkgPk_R
        {"PRC_TIER_SVC_OFFER_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcTierSvcOfferCd_R
        {"XX_TOT_PRC_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxTotPrcAmt_PR
        {"XX_TOT_PRC_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxTotPrcAmt_ER
        {"XX_TOT_PRC_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxTotPrcAmt_TR
        {"TERM_MTH_AOT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//termMthAot_R
        {"BASE_PRC_DEAL_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//basePrcDealAmt_R
        {"DEAL_PRC_LIST_PRC_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dealPrcListPrcAmt_R
        {"PRC_RATE_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRateTpCd_R
        {"SCR_ENT_AVAL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//scrEntAvalFlg_R
        {"BILL_TO_LOC_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//billToLocNum_R
        {"BILL_TO_CUST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//billToCustCd_R
        {"DS_ACCT_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctNm_R
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

