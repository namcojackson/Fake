//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20190118110520000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSAL1330_ICMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NSAL1330;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL1330 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL1330_ICMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** DS_ORD_POSN_NUM_I*/
	public final EZDCStringItem              dsOrdPosnNum_I;

    /** MDL_ID_I*/
	public final EZDCBigDecimalItem              mdlId_I;

    /** T_MDL_NM_I*/
	public final EZDCStringItem              t_MdlNm_I;

    /** CPO_DTL_LINE_NUM_I*/
	public final EZDCStringItem              cpoDtlLineNum_I;

    /** CPO_DTL_LINE_SUB_NUM_I*/
	public final EZDCStringItem              cpoDtlLineSubNum_I;

    /** MTR_READ_METH_CD_I*/
	public final EZDCStringItem              mtrReadMethCd_I;

    /** DS_CONTR_DTL_PK_I*/
	public final EZDCBigDecimalItem              dsContrDtlPk_I;

    /** CR_REBIL_CD_I*/
	public final EZDCStringItem              crRebilCd_I;

    /** SVC_CONFIG_MSTR_PK_I*/
	public final EZDCBigDecimalItem              svcConfigMstrPk_I;

    /** CUST_PO_NUM_I*/
	public final EZDCStringItem              custPoNum_I;

    /** PO_DT_I*/
	public final EZDCDateItem              poDt_I;

    /** DS_PO_EXPR_DT_I*/
	public final EZDCDateItem              dsPoExprDt_I;


	/**
	 * NSAL1330_ICMsg is constructor.
	 * The initialization when the instance of NSAL1330_ICMsg is generated.
	 */
	public NSAL1330_ICMsg() {
		this(false, -1);
	}

	/**
	 * NSAL1330_ICMsg is constructor.
	 * The initialization when the instance of NSAL1330_ICMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL1330_ICMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		dsOrdPosnNum_I = (EZDCStringItem)newItem("dsOrdPosnNum_I");
		mdlId_I = (EZDCBigDecimalItem)newItem("mdlId_I");
		t_MdlNm_I = (EZDCStringItem)newItem("t_MdlNm_I");
		cpoDtlLineNum_I = (EZDCStringItem)newItem("cpoDtlLineNum_I");
		cpoDtlLineSubNum_I = (EZDCStringItem)newItem("cpoDtlLineSubNum_I");
		mtrReadMethCd_I = (EZDCStringItem)newItem("mtrReadMethCd_I");
		dsContrDtlPk_I = (EZDCBigDecimalItem)newItem("dsContrDtlPk_I");
		crRebilCd_I = (EZDCStringItem)newItem("crRebilCd_I");
		svcConfigMstrPk_I = (EZDCBigDecimalItem)newItem("svcConfigMstrPk_I");
		custPoNum_I = (EZDCStringItem)newItem("custPoNum_I");
		poDt_I = (EZDCDateItem)newItem("poDt_I");
		dsPoExprDt_I = (EZDCDateItem)newItem("dsPoExprDt_I");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL1330_ICMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL1330_ICMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"dsOrdPosnNum_I", "dsOrdPosnNum_I", "I", null, TYPE_HANKAKUEISU, "6", null},
	{"mdlId_I", "mdlId_I", "I", null, TYPE_SEISU_SYOSU, "22", "0"},
	{"t_MdlNm_I", "t_MdlNm_I", "I", null, TYPE_HANKAKUEISU, "50", null},
	{"cpoDtlLineNum_I", "cpoDtlLineNum_I", "I", null, TYPE_HANKAKUEISU, "3", null},
	{"cpoDtlLineSubNum_I", "cpoDtlLineSubNum_I", "I", null, TYPE_HANKAKUEISU, "3", null},
	{"mtrReadMethCd_I", "mtrReadMethCd_I", "I", null, TYPE_HANKAKUEISU, "2", null},
	{"dsContrDtlPk_I", "dsContrDtlPk_I", "I", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"crRebilCd_I", "crRebilCd_I", "I", null, TYPE_HANKAKUEISU, "20", null},
	{"svcConfigMstrPk_I", "svcConfigMstrPk_I", "I", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"custPoNum_I", "custPoNum_I", "I", null, TYPE_HANKAKUEISU, "35", null},
	{"poDt_I", "poDt_I", "I", null, TYPE_NENTSUKIHI, "8", null},
	{"dsPoExprDt_I", "dsPoExprDt_I", "I", null, TYPE_NENTSUKIHI, "8", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"DS_ORD_POSN_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdPosnNum_I
        {"MDL_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdlId_I
        {"T_MDL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//t_MdlNm_I
        {"CPO_DTL_LINE_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cpoDtlLineNum_I
        {"CPO_DTL_LINE_SUB_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cpoDtlLineSubNum_I
        {"MTR_READ_METH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrReadMethCd_I
        {"DS_CONTR_DTL_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrDtlPk_I
        {"CR_REBIL_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//crRebilCd_I
        {"SVC_CONFIG_MSTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcConfigMstrPk_I
        {"CUST_PO_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//custPoNum_I
        {"PO_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//poDt_I
        {"DS_PO_EXPR_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsPoExprDt_I
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

