//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20090814083400000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *ZZIL0010_ABMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.ZZIL0010;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is ZZIL0010 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class ZZIL0010_ABMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** TRANSACTION_ID_A*/
	public final EZDBBigDecimalItem              transactionId_A;

    /** XX_DT_TM_AR*/
	public final EZDBStringItem              xxDtTm_AR;

    /** XX_DT_TM_AU*/
	public final EZDBStringItem              xxDtTm_AU;

    /** PROCESSED_REC_CNT_A*/
	public final EZDBBigDecimalItem              processedRecCnt_A;

    /** FAILED_REC_CNT_A*/
	public final EZDBBigDecimalItem              failedRecCnt_A;

    /** XX_PROC_FLG_NM_A*/
	public final EZDBStringItem              xxProcFlgNm_A;

    /** PROCESSED_FLAG_AU*/
	public final EZDBStringItemArray              processedFlag_AU;

    /** XX_PROC_FLG_NM_AU*/
	public final EZDBStringItemArray              xxProcFlgNm_AU;

    /** PROCESSED_FLAG_AS*/
	public final EZDBStringItem              processedFlag_AS;


	/**
	 * ZZIL0010_ABMsg is constructor.
	 * The initialization when the instance of ZZIL0010_ABMsg is generated.
	 */
	public ZZIL0010_ABMsg() {
		this(false, -1);
	}

	/**
	 * ZZIL0010_ABMsg is constructor.
	 * The initialization when the instance of ZZIL0010_ABMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public ZZIL0010_ABMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		transactionId_A = (EZDBBigDecimalItem)newItem("transactionId_A");
		xxDtTm_AR = (EZDBStringItem)newItem("xxDtTm_AR");
		xxDtTm_AU = (EZDBStringItem)newItem("xxDtTm_AU");
		processedRecCnt_A = (EZDBBigDecimalItem)newItem("processedRecCnt_A");
		failedRecCnt_A = (EZDBBigDecimalItem)newItem("failedRecCnt_A");
		xxProcFlgNm_A = (EZDBStringItem)newItem("xxProcFlgNm_A");
		processedFlag_AU = (EZDBStringItemArray)newItemArray("processedFlag_AU");
		xxProcFlgNm_AU = (EZDBStringItemArray)newItemArray("xxProcFlgNm_AU");
		processedFlag_AS = (EZDBStringItem)newItem("processedFlag_AS");
	}

	/**
	 * get the type of array which is stored
	 * @return ZZIL0010_ABMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new ZZIL0010_ABMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"transactionId_A", "transactionId_A", "A", null, TYPE_SEISU_SYOSU, "30", "0"},
	{"xxDtTm_AR", "xxDtTm_AR", "AR", null, TYPE_HANKAKUEISU, "19", null},
	{"xxDtTm_AU", "xxDtTm_AU", "AU", null, TYPE_HANKAKUEISU, "19", null},
	{"processedRecCnt_A", "processedRecCnt_A", "A", null, TYPE_SEISU_SYOSU, "30", "0"},
	{"failedRecCnt_A", "failedRecCnt_A", "A", null, TYPE_SEISU_SYOSU, "30", "0"},
	{"xxProcFlgNm_A", "xxProcFlgNm_A", "A", null, TYPE_HANKAKUEISU, "11", null},
	{"processedFlag_AU", "processedFlag_AU", "AU", "3", TYPE_HANKAKUEISU, "1", null},
	{"xxProcFlgNm_AU", "xxProcFlgNm_AU", "AU", "3", TYPE_HANKAKUEISU, "11", null},
	{"processedFlag_AS", "processedFlag_AS", "AS", null, TYPE_HANKAKUEISU, "1", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"TRANSACTION_ID",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//transactionId_A
        {"XX_DT_TM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDtTm_AR
        {"XX_DT_TM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDtTm_AU
        {"PROCESSED_REC_CNT",  NO,  null,null,"0", NO,YES, NO, NO,null,null,null, null,  NO,  NO},	//processedRecCnt_A
        {"FAILED_REC_CNT",  NO,  null,null,"0", NO,YES, NO, NO,null,null,null, null,  NO,  NO},	//failedRecCnt_A
        {"XX_PROC_FLG_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxProcFlgNm_A
        {"PROCESSED_FLAG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//processedFlag_AU
        {"XX_PROC_FLG_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxProcFlgNm_AU
        {"PROCESSED_FLAG",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//processedFlag_AS
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

