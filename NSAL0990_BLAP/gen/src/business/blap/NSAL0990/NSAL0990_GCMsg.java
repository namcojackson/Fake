//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20190702083035000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0990_GCMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NSAL0990;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL0990 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL0990_GCMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** TRX_LINE_NUM_G*/
	public final EZDCStringItem              trxLineNum_G;

    /** TRX_LINE_SUB_NUM_G*/
	public final EZDCStringItem              trxLineSubNum_G;

    /** CONFIG_CATG_CD_G*/
	public final EZDCStringItem              configCatgCd_G;

    /** PRC_COND_TP_CD_G*/
	public final EZDCStringItem              prcCondTpCd_G;

    /** PRC_COND_TP_DESC_TXT_G*/
	public final EZDCStringItem              prcCondTpDescTxt_G;

    /** PRC_DTL_GRP_CD_G*/
	public final EZDCStringItem              prcDtlGrpCd_G;

    /** PRC_JRNL_GRP_CD_G*/
	public final EZDCStringItem              prcJrnlGrpCd_G;

    /** PRC_CATG_CD_G*/
	public final EZDCStringItem              prcCatgCd_G;

    /** PRC_COND_MAN_ENTRY_FLG_G*/
	public final EZDCStringItem              prcCondManEntryFlg_G;

    /** PRC_COND_MAN_ADD_FLG_G*/
	public final EZDCStringItem              prcCondManAddFlg_G;

    /** PRC_COND_MAN_DEL_FLG_G*/
	public final EZDCStringItem              prcCondManDelFlg_G;

    /** PKG_UOM_CD_G*/
	public final EZDCStringItem              pkgUomCd_G;

    /** PRC_COND_UNIT_CD_G*/
	public final EZDCStringItem              prcCondUnitCd_G;

    /** PRC_CALC_METH_CD_G*/
	public final EZDCStringItem              prcCalcMethCd_G;

    /** AUTO_PRC_CCY_CD_G*/
	public final EZDCStringItem              autoPrcCcyCd_G;

    /** AUTO_PRC_AMT_RATE_G*/
	public final EZDCBigDecimalItem              autoPrcAmtRate_G;

    /** MAX_PRC_AMT_RATE_G*/
	public final EZDCBigDecimalItem              maxPrcAmtRate_G;

    /** MIN_PRC_AMT_RATE_G*/
	public final EZDCBigDecimalItem              minPrcAmtRate_G;

    /** MAN_PRC_AMT_RATE_G*/
	public final EZDCBigDecimalItem              manPrcAmtRate_G;

    /** CALC_PRC_AMT_RATE_G*/
	public final EZDCBigDecimalItem              calcPrcAmtRate_G;

    /** UNIT_PRC_AMT_G*/
	public final EZDCBigDecimalItem              unitPrcAmt_G;

    /** DS_MDSE_PRC_PK_G*/
	public final EZDCBigDecimalItem              dsMdsePrcPk_G;

    /** SPEC_COND_PRC_PK_G*/
	public final EZDCBigDecimalItem              specCondPrcPk_G;

    /** FRT_PER_WT_PK_G*/
	public final EZDCBigDecimalItem              frtPerWtPk_G;

    /** ORD_PRC_CALC_BASE_PK_G*/
	public final EZDCBigDecimalItem              ordPrcCalcBasePk_G;


	/**
	 * NSAL0990_GCMsg is constructor.
	 * The initialization when the instance of NSAL0990_GCMsg is generated.
	 */
	public NSAL0990_GCMsg() {
		this(false, -1);
	}

	/**
	 * NSAL0990_GCMsg is constructor.
	 * The initialization when the instance of NSAL0990_GCMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL0990_GCMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		trxLineNum_G = (EZDCStringItem)newItem("trxLineNum_G");
		trxLineSubNum_G = (EZDCStringItem)newItem("trxLineSubNum_G");
		configCatgCd_G = (EZDCStringItem)newItem("configCatgCd_G");
		prcCondTpCd_G = (EZDCStringItem)newItem("prcCondTpCd_G");
		prcCondTpDescTxt_G = (EZDCStringItem)newItem("prcCondTpDescTxt_G");
		prcDtlGrpCd_G = (EZDCStringItem)newItem("prcDtlGrpCd_G");
		prcJrnlGrpCd_G = (EZDCStringItem)newItem("prcJrnlGrpCd_G");
		prcCatgCd_G = (EZDCStringItem)newItem("prcCatgCd_G");
		prcCondManEntryFlg_G = (EZDCStringItem)newItem("prcCondManEntryFlg_G");
		prcCondManAddFlg_G = (EZDCStringItem)newItem("prcCondManAddFlg_G");
		prcCondManDelFlg_G = (EZDCStringItem)newItem("prcCondManDelFlg_G");
		pkgUomCd_G = (EZDCStringItem)newItem("pkgUomCd_G");
		prcCondUnitCd_G = (EZDCStringItem)newItem("prcCondUnitCd_G");
		prcCalcMethCd_G = (EZDCStringItem)newItem("prcCalcMethCd_G");
		autoPrcCcyCd_G = (EZDCStringItem)newItem("autoPrcCcyCd_G");
		autoPrcAmtRate_G = (EZDCBigDecimalItem)newItem("autoPrcAmtRate_G");
		maxPrcAmtRate_G = (EZDCBigDecimalItem)newItem("maxPrcAmtRate_G");
		minPrcAmtRate_G = (EZDCBigDecimalItem)newItem("minPrcAmtRate_G");
		manPrcAmtRate_G = (EZDCBigDecimalItem)newItem("manPrcAmtRate_G");
		calcPrcAmtRate_G = (EZDCBigDecimalItem)newItem("calcPrcAmtRate_G");
		unitPrcAmt_G = (EZDCBigDecimalItem)newItem("unitPrcAmt_G");
		dsMdsePrcPk_G = (EZDCBigDecimalItem)newItem("dsMdsePrcPk_G");
		specCondPrcPk_G = (EZDCBigDecimalItem)newItem("specCondPrcPk_G");
		frtPerWtPk_G = (EZDCBigDecimalItem)newItem("frtPerWtPk_G");
		ordPrcCalcBasePk_G = (EZDCBigDecimalItem)newItem("ordPrcCalcBasePk_G");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL0990_GCMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL0990_GCMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"trxLineNum_G", "trxLineNum_G", "G", null, TYPE_HANKAKUEISU, "3", null},
	{"trxLineSubNum_G", "trxLineSubNum_G", "G", null, TYPE_HANKAKUEISU, "3", null},
	{"configCatgCd_G", "configCatgCd_G", "G", null, TYPE_HANKAKUEISU, "2", null},
	{"prcCondTpCd_G", "prcCondTpCd_G", "G", null, TYPE_HANKAKUEISU, "4", null},
	{"prcCondTpDescTxt_G", "prcCondTpDescTxt_G", "G", null, TYPE_HANKAKUEISU, "50", null},
	{"prcDtlGrpCd_G", "prcDtlGrpCd_G", "G", null, TYPE_HANKAKUEISU, "4", null},
	{"prcJrnlGrpCd_G", "prcJrnlGrpCd_G", "G", null, TYPE_HANKAKUEISU, "4", null},
	{"prcCatgCd_G", "prcCatgCd_G", "G", null, TYPE_HANKAKUEISU, "10", null},
	{"prcCondManEntryFlg_G", "prcCondManEntryFlg_G", "G", null, TYPE_HANKAKUEISU, "1", null},
	{"prcCondManAddFlg_G", "prcCondManAddFlg_G", "G", null, TYPE_HANKAKUEISU, "1", null},
	{"prcCondManDelFlg_G", "prcCondManDelFlg_G", "G", null, TYPE_HANKAKUEISU, "1", null},
	{"pkgUomCd_G", "pkgUomCd_G", "G", null, TYPE_HANKAKUEISU, "4", null},
	{"prcCondUnitCd_G", "prcCondUnitCd_G", "G", null, TYPE_HANKAKUEISU, "1", null},
	{"prcCalcMethCd_G", "prcCalcMethCd_G", "G", null, TYPE_HANKAKUEISU, "2", null},
	{"autoPrcCcyCd_G", "autoPrcCcyCd_G", "G", null, TYPE_HANKAKUEISU, "3", null},
	{"autoPrcAmtRate_G", "autoPrcAmtRate_G", "G", null, TYPE_SEISU_SYOSU, "19", "6"},
	{"maxPrcAmtRate_G", "maxPrcAmtRate_G", "G", null, TYPE_SEISU_SYOSU, "19", "6"},
	{"minPrcAmtRate_G", "minPrcAmtRate_G", "G", null, TYPE_SEISU_SYOSU, "19", "6"},
	{"manPrcAmtRate_G", "manPrcAmtRate_G", "G", null, TYPE_SEISU_SYOSU, "19", "6"},
	{"calcPrcAmtRate_G", "calcPrcAmtRate_G", "G", null, TYPE_SEISU_SYOSU, "19", "6"},
	{"unitPrcAmt_G", "unitPrcAmt_G", "G", null, TYPE_SEISU_SYOSU, "19", "4"},
	{"dsMdsePrcPk_G", "dsMdsePrcPk_G", "G", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"specCondPrcPk_G", "specCondPrcPk_G", "G", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"frtPerWtPk_G", "frtPerWtPk_G", "G", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"ordPrcCalcBasePk_G", "ordPrcCalcBasePk_G", "G", null, TYPE_SEISU_SYOSU, "28", "0"},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"TRX_LINE_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trxLineNum_G
        {"TRX_LINE_SUB_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trxLineSubNum_G
        {"CONFIG_CATG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//configCatgCd_G
        {"PRC_COND_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCondTpCd_G
        {"PRC_COND_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCondTpDescTxt_G
        {"PRC_DTL_GRP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcDtlGrpCd_G
        {"PRC_JRNL_GRP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcJrnlGrpCd_G
        {"PRC_CATG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCatgCd_G
        {"PRC_COND_MAN_ENTRY_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCondManEntryFlg_G
        {"PRC_COND_MAN_ADD_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCondManAddFlg_G
        {"PRC_COND_MAN_DEL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCondManDelFlg_G
        {"PKG_UOM_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//pkgUomCd_G
        {"PRC_COND_UNIT_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCondUnitCd_G
        {"PRC_CALC_METH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCalcMethCd_G
        {"AUTO_PRC_CCY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//autoPrcCcyCd_G
        {"AUTO_PRC_AMT_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//autoPrcAmtRate_G
        {"MAX_PRC_AMT_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//maxPrcAmtRate_G
        {"MIN_PRC_AMT_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//minPrcAmtRate_G
        {"MAN_PRC_AMT_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//manPrcAmtRate_G
        {"CALC_PRC_AMT_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//calcPrcAmtRate_G
        {"UNIT_PRC_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//unitPrcAmt_G
        {"DS_MDSE_PRC_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsMdsePrcPk_G
        {"SPEC_COND_PRC_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//specCondPrcPk_G
        {"FRT_PER_WT_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//frtPerWtPk_G
        {"ORD_PRC_CALC_BASE_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordPrcCalcBasePk_G
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

