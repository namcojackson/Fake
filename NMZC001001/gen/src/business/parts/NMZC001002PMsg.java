//This file was automatically generated by Common Business Component Interface Definition Document and XLA200710010.
// Generated on    :20160829093343000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :CommonBusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NMZC001002PMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.parts;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NMZC001002 Common Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NMZC001002PMsg extends EZDPMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_PRIN_FLG*/
	public final EZDPStringItem              xxPrinFlg;

    /** XX_PRIN_FLG_NW*/
	public final EZDPStringItem              xxPrinFlg_NW;

    /** XX_PRIN_FLG_OD*/
	public final EZDPStringItem              xxPrinFlg_OD;

    /** BILL_TO_CUST_FLG*/
	public final EZDPStringItem              billToCustFlg;

    /** SHIP_TO_CUST_FLG*/
	public final EZDPStringItem              shipToCustFlg;

    /** LOC_NUM*/
	public final EZDPStringItem              locNum;

    /** EFF_FROM_DT*/
	public final EZDPDateItem              effFromDt;

    /** EFF_THRU_DT*/
	public final EZDPDateItem              effThruDt;

    /** ACTV_FLG*/
	public final EZDPStringItem              actvFlg;

    /** FIRST_LINE_ADDR*/
	public final EZDPStringItem              firstLineAddr;

    /** SCD_LINE_ADDR*/
	public final EZDPStringItem              scdLineAddr;

    /** THIRD_LINE_ADDR*/
	public final EZDPStringItem              thirdLineAddr;

    /** FRTH_LINE_ADDR*/
	public final EZDPStringItem              frthLineAddr;

    /** CTY_ADDR*/
	public final EZDPStringItem              ctyAddr;

    /** CNTY_NM*/
	public final EZDPStringItem              cntyNm;

    /** CNTY_PK*/
	public final EZDPBigDecimalItem              cntyPk;

    /** PROV_NM*/
	public final EZDPStringItem              provNm;

    /** ST_CD*/
	public final EZDPStringItem              stCd;

    /** POST_CD*/
	public final EZDPStringItem              postCd;

    /** CTRY_CD*/
	public final EZDPStringItem              ctryCd;

    /** LOC_NM*/
	public final EZDPStringItem              locNm;

    /** ADDL_LOC_NM*/
	public final EZDPStringItem              addlLocNm;

    /** GLN_NUM*/
	public final EZDPBigDecimalItem              glnNum;

    /** TEL_NUM*/
	public final EZDPStringItem              telNum;

    /** FAX_NUM*/
	public final EZDPStringItem              faxNum;

    /** LINE_BIZ_TP_CD*/
	public final EZDPStringItem              lineBizTpCd;

    /** XX_CNTY_VLD_ERR_EXCL_FLG*/
	public final EZDPStringItem              xxCntyVldErrExclFlg;

    /** GEO_CD*/
	public final EZDPStringItem              geoCd;

    /** DS_INSD_CTY_LIMIT_FLG*/
	public final EZDPStringItem              dsInsdCtyLimitFlg;

    /** XX_LOC_XREF_INFO_FLG*/
	public final EZDPStringItem              xxLocXrefInfoFlg;

    /** DS_XREF_ACCT_TP_CD*/
	public final EZDPStringItem              dsXrefAcctTpCd;

    /** DS_XREF_ACCT_CD*/
	public final EZDPStringItem              dsXrefAcctCd;

    /** DS_XREF_ACCT_NM*/
	public final EZDPStringItem              dsXrefAcctNm;

    /** XX_LOC_DUNS_FLG*/
	public final EZDPStringItem              xxLocDunsFlg;

    /** DUNS_NUM*/
	public final EZDPStringItem              dunsNum;

    /** HQ_DUNS_NUM*/
	public final EZDPStringItem              hqDunsNum;

    /** DS_ULT_DUNS_NUM*/
	public final EZDPStringItem              dsUltDunsNum;

    /** DS_PRNT_DUNS_NUM*/
	public final EZDPStringItem              dsPrntDunsNum;

    /** DS_LOC_EMP_NUM*/
	public final EZDPBigDecimalItem              dsLocEmpNum;

    /** DS_LOC_REV_AMT*/
	public final EZDPBigDecimalItem              dsLocRevAmt;

    /** DS_LAST_UPD_DUNS_DT*/
	public final EZDPDateItem              dsLastUpdDunsDt;

    /** DS_CUST_SIC_CD*/
	public final EZDPStringItem              dsCustSicCd;

    /** DS_CUST_SIC_DESC_TXT*/
	public final EZDPStringItem              dsCustSicDescTxt;

    /** DUNS_TRADE_STYLE_NM*/
	public final EZDPStringItem              dunsTradeStyleNm;

    /** DUNS_ACTV_CD*/
	public final EZDPStringItem              dunsActvCd;

    /** DUNS_LINE_ADDR*/
	public final EZDPStringItem              dunsLineAddr;

    /** DUNS_BIZ_NM*/
	public final EZDPStringItem              dunsBizNm;

    /** DS_LAST_RCV_DUNS_TXT*/
	public final EZDPStringItem              dsLastRcvDunsTxt;

    /** DS_LAST_RCV_DUNS_DT*/
	public final EZDPDateItem              dsLastRcvDunsDt;

    /** DUNS_SEND_CNT*/
	public final EZDPBigDecimalItem              dunsSendCnt;

    /** INDY_TP_CD*/
	public final EZDPStringItem              indyTpCd;

    /** EFF_FROM_DT_B*/
	public final EZDPDateItem              effFromDt_B;

    /** EFF_THRU_DT_B*/
	public final EZDPDateItem              effThruDt_B;

    /** PRIM_USG_FLG_B*/
	public final EZDPStringItem              primUsgFlg_B;

    /** COA_CH_CD_B*/
	public final EZDPStringItem              coaChCd_B;

    /** COA_AFFL_CD_B*/
	public final EZDPStringItem              coaAfflCd_B;

    /** LINE_BIZ_TP_CD_B*/
	public final EZDPStringItem              lineBizTpCd_B;

    /** REM_ID_B*/
	public final EZDPStringItem              remId_B;

    /** XX_LOC_BILL_TO_CR_INFO_FLG*/
	public final EZDPStringItem              xxLocBillToCrInfoFlg;

    /** CUST_CR_RTG_CD*/
	public final EZDPStringItem              custCrRtgCd;

    /** CR_LIMIT_AMT*/
	public final EZDPBigDecimalItem              crLimitAmt;

    /** CR_CHK_REQ_TP_CD*/
	public final EZDPStringItem              crChkReqTpCd;

    /** CR_RISK_CLS_CD*/
	public final EZDPStringItem              crRiskClsCd;

    /** PMT_TERM_CASH_DISC_CD*/
	public final EZDPStringItem              pmtTermCashDiscCd;

    /** OVRD_PMT_TERM_FLG*/
	public final EZDPStringItem              ovrdPmtTermFlg;

    /** CASH_OR_CC_REQ_FLG*/
	public final EZDPStringItem              cashOrCcReqFlg;

    /** CUST_HARD_HLD_FLG*/
	public final EZDPStringItem              custHardHldFlg;

    /** XX_LOC_BILL_TO_CLT_INFO_FLG*/
	public final EZDPStringItem              xxLocBillToCltInfoFlg;

    /** AR_STMT_FLG*/
	public final EZDPStringItem              arStmtFlg;

    /** AR_STMT_ISS_DAY*/
	public final EZDPStringItem              arStmtIssDay;

    /** DUN_FLG*/
	public final EZDPStringItem              dunFlg;

    /** CLT_CUST_TP_CD*/
	public final EZDPStringItem              cltCustTpCd;

    /** CLT_PTFO_PK*/
	public final EZDPBigDecimalItem              cltPtfoPk;

    /** DS_CLT_ACCT_STS_CD*/
	public final EZDPStringItem              dsCltAcctStsCd;

    /** LATE_FEE_FLG*/
	public final EZDPStringItem              lateFeeFlg;

    /** LATE_FEE_AMT*/
	public final EZDPBigDecimalItem              lateFeeAmt;

    /** XX_LOC_BILL_TO_TAX_FLG_B*/
	public final EZDPStringItem              xxLocBillToTaxFlg_B;

    /** DS_CUST_TAX_CD_B*/
	public final EZDPStringItem              dsCustTaxCd_B;

    /** DS_CUST_TAX_CALC_CD_B*/
	public final EZDPStringItem              dsCustTaxCalcCd_B;

    /** DS_TAX_EXEM_FLG_B*/
	public final EZDPStringItem              dsTaxExemFlg_B;

    /** DS_EXEM_EXPR_DT_B*/
	public final EZDPDateItem              dsExemExprDt_B;

    /** DS_TAX_GRP_EXEM_CD_B*/
	public final EZDPStringItem              dsTaxGrpExemCd_B;

    /** DS_TAX_PRNT_TP_CD_B*/
	public final EZDPStringItem              dsTaxPrntTpCd_B;

    /** EFF_FROM_DT_S*/
	public final EZDPDateItem              effFromDt_S;

    /** EFF_THRU_DT_S*/
	public final EZDPDateItem              effThruDt_S;

    /** RELN_BILL_TO_CUST_CD_S*/
	public final EZDPStringItem              relnBillToCustCd_S;

    /** PRIM_USG_FLG_S*/
	public final EZDPStringItem              primUsgFlg_S;

    /** BIG_DEAL_NUM_S*/
	public final EZDPStringItem              bigDealNum_S;

    /** DPL_STS_CD_S*/
	public final EZDPStringItem              dplStsCd_S;

    /** COA_CH_CD_S*/
	public final EZDPStringItem              coaChCd_S;

    /** COA_AFFL_CD_S*/
	public final EZDPStringItem              coaAfflCd_S;

    /** LINE_BIZ_TP_CD_S*/
	public final EZDPStringItem              lineBizTpCd_S;

    /** XX_LOC_SHIP_TO_TAX_FLG_S*/
	public final EZDPStringItem              xxLocShipToTaxFlg_S;

    /** DS_CUST_TAX_CD_S*/
	public final EZDPStringItem              dsCustTaxCd_S;

    /** DS_CUST_TAX_CALC_CD_S*/
	public final EZDPStringItem              dsCustTaxCalcCd_S;

    /** DS_TAX_EXEM_FLG_S*/
	public final EZDPStringItem              dsTaxExemFlg_S;

    /** DS_EXEM_EXPR_DT_S*/
	public final EZDPDateItem              dsExemExprDt_S;

    /** DS_TAX_GRP_EXEM_CD_S*/
	public final EZDPStringItem              dsTaxGrpExemCd_S;

    /** DS_TAX_PRNT_TP_CD_S*/
	public final EZDPStringItem              dsTaxPrntTpCd_S;

    /** FIRST_REF_CMNT_TXT_B*/
	public final EZDPStringItem              firstRefCmntTxt_B;

    /** SCD_REF_CMNT_TXT_B*/
	public final EZDPStringItem              scdRefCmntTxt_B;

    /** FIRST_REF_CMNT_TXT_S*/
	public final EZDPStringItem              firstRefCmntTxt_S;

    /** SCD_REF_CMNT_TXT_S*/
	public final EZDPStringItem              scdRefCmntTxt_S;

    /** xxMsgIdList*/
	public final business.parts.NMZC001002_xxMsgIdListPMsgArray              xxMsgIdList;


	/**
	 * NMZC001002PMsg is constructor.
	 * The initialization when the instance of NMZC001002PMsg is generated.
	 */
	public NMZC001002PMsg() {
		this(false, -1);
	}

	/**
	 * NMZC001002PMsg is constructor.
	 * The initialization when the instance of NMZC001002PMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NMZC001002PMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxPrinFlg = (EZDPStringItem)newItem("xxPrinFlg");
		xxPrinFlg_NW = (EZDPStringItem)newItem("xxPrinFlg_NW");
		xxPrinFlg_OD = (EZDPStringItem)newItem("xxPrinFlg_OD");
		billToCustFlg = (EZDPStringItem)newItem("billToCustFlg");
		shipToCustFlg = (EZDPStringItem)newItem("shipToCustFlg");
		locNum = (EZDPStringItem)newItem("locNum");
		effFromDt = (EZDPDateItem)newItem("effFromDt");
		effThruDt = (EZDPDateItem)newItem("effThruDt");
		actvFlg = (EZDPStringItem)newItem("actvFlg");
		firstLineAddr = (EZDPStringItem)newItem("firstLineAddr");
		scdLineAddr = (EZDPStringItem)newItem("scdLineAddr");
		thirdLineAddr = (EZDPStringItem)newItem("thirdLineAddr");
		frthLineAddr = (EZDPStringItem)newItem("frthLineAddr");
		ctyAddr = (EZDPStringItem)newItem("ctyAddr");
		cntyNm = (EZDPStringItem)newItem("cntyNm");
		cntyPk = (EZDPBigDecimalItem)newItem("cntyPk");
		provNm = (EZDPStringItem)newItem("provNm");
		stCd = (EZDPStringItem)newItem("stCd");
		postCd = (EZDPStringItem)newItem("postCd");
		ctryCd = (EZDPStringItem)newItem("ctryCd");
		locNm = (EZDPStringItem)newItem("locNm");
		addlLocNm = (EZDPStringItem)newItem("addlLocNm");
		glnNum = (EZDPBigDecimalItem)newItem("glnNum");
		telNum = (EZDPStringItem)newItem("telNum");
		faxNum = (EZDPStringItem)newItem("faxNum");
		lineBizTpCd = (EZDPStringItem)newItem("lineBizTpCd");
		xxCntyVldErrExclFlg = (EZDPStringItem)newItem("xxCntyVldErrExclFlg");
		geoCd = (EZDPStringItem)newItem("geoCd");
		dsInsdCtyLimitFlg = (EZDPStringItem)newItem("dsInsdCtyLimitFlg");
		xxLocXrefInfoFlg = (EZDPStringItem)newItem("xxLocXrefInfoFlg");
		dsXrefAcctTpCd = (EZDPStringItem)newItem("dsXrefAcctTpCd");
		dsXrefAcctCd = (EZDPStringItem)newItem("dsXrefAcctCd");
		dsXrefAcctNm = (EZDPStringItem)newItem("dsXrefAcctNm");
		xxLocDunsFlg = (EZDPStringItem)newItem("xxLocDunsFlg");
		dunsNum = (EZDPStringItem)newItem("dunsNum");
		hqDunsNum = (EZDPStringItem)newItem("hqDunsNum");
		dsUltDunsNum = (EZDPStringItem)newItem("dsUltDunsNum");
		dsPrntDunsNum = (EZDPStringItem)newItem("dsPrntDunsNum");
		dsLocEmpNum = (EZDPBigDecimalItem)newItem("dsLocEmpNum");
		dsLocRevAmt = (EZDPBigDecimalItem)newItem("dsLocRevAmt");
		dsLastUpdDunsDt = (EZDPDateItem)newItem("dsLastUpdDunsDt");
		dsCustSicCd = (EZDPStringItem)newItem("dsCustSicCd");
		dsCustSicDescTxt = (EZDPStringItem)newItem("dsCustSicDescTxt");
		dunsTradeStyleNm = (EZDPStringItem)newItem("dunsTradeStyleNm");
		dunsActvCd = (EZDPStringItem)newItem("dunsActvCd");
		dunsLineAddr = (EZDPStringItem)newItem("dunsLineAddr");
		dunsBizNm = (EZDPStringItem)newItem("dunsBizNm");
		dsLastRcvDunsTxt = (EZDPStringItem)newItem("dsLastRcvDunsTxt");
		dsLastRcvDunsDt = (EZDPDateItem)newItem("dsLastRcvDunsDt");
		dunsSendCnt = (EZDPBigDecimalItem)newItem("dunsSendCnt");
		indyTpCd = (EZDPStringItem)newItem("indyTpCd");
		effFromDt_B = (EZDPDateItem)newItem("effFromDt_B");
		effThruDt_B = (EZDPDateItem)newItem("effThruDt_B");
		primUsgFlg_B = (EZDPStringItem)newItem("primUsgFlg_B");
		coaChCd_B = (EZDPStringItem)newItem("coaChCd_B");
		coaAfflCd_B = (EZDPStringItem)newItem("coaAfflCd_B");
		lineBizTpCd_B = (EZDPStringItem)newItem("lineBizTpCd_B");
		remId_B = (EZDPStringItem)newItem("remId_B");
		xxLocBillToCrInfoFlg = (EZDPStringItem)newItem("xxLocBillToCrInfoFlg");
		custCrRtgCd = (EZDPStringItem)newItem("custCrRtgCd");
		crLimitAmt = (EZDPBigDecimalItem)newItem("crLimitAmt");
		crChkReqTpCd = (EZDPStringItem)newItem("crChkReqTpCd");
		crRiskClsCd = (EZDPStringItem)newItem("crRiskClsCd");
		pmtTermCashDiscCd = (EZDPStringItem)newItem("pmtTermCashDiscCd");
		ovrdPmtTermFlg = (EZDPStringItem)newItem("ovrdPmtTermFlg");
		cashOrCcReqFlg = (EZDPStringItem)newItem("cashOrCcReqFlg");
		custHardHldFlg = (EZDPStringItem)newItem("custHardHldFlg");
		xxLocBillToCltInfoFlg = (EZDPStringItem)newItem("xxLocBillToCltInfoFlg");
		arStmtFlg = (EZDPStringItem)newItem("arStmtFlg");
		arStmtIssDay = (EZDPStringItem)newItem("arStmtIssDay");
		dunFlg = (EZDPStringItem)newItem("dunFlg");
		cltCustTpCd = (EZDPStringItem)newItem("cltCustTpCd");
		cltPtfoPk = (EZDPBigDecimalItem)newItem("cltPtfoPk");
		dsCltAcctStsCd = (EZDPStringItem)newItem("dsCltAcctStsCd");
		lateFeeFlg = (EZDPStringItem)newItem("lateFeeFlg");
		lateFeeAmt = (EZDPBigDecimalItem)newItem("lateFeeAmt");
		xxLocBillToTaxFlg_B = (EZDPStringItem)newItem("xxLocBillToTaxFlg_B");
		dsCustTaxCd_B = (EZDPStringItem)newItem("dsCustTaxCd_B");
		dsCustTaxCalcCd_B = (EZDPStringItem)newItem("dsCustTaxCalcCd_B");
		dsTaxExemFlg_B = (EZDPStringItem)newItem("dsTaxExemFlg_B");
		dsExemExprDt_B = (EZDPDateItem)newItem("dsExemExprDt_B");
		dsTaxGrpExemCd_B = (EZDPStringItem)newItem("dsTaxGrpExemCd_B");
		dsTaxPrntTpCd_B = (EZDPStringItem)newItem("dsTaxPrntTpCd_B");
		effFromDt_S = (EZDPDateItem)newItem("effFromDt_S");
		effThruDt_S = (EZDPDateItem)newItem("effThruDt_S");
		relnBillToCustCd_S = (EZDPStringItem)newItem("relnBillToCustCd_S");
		primUsgFlg_S = (EZDPStringItem)newItem("primUsgFlg_S");
		bigDealNum_S = (EZDPStringItem)newItem("bigDealNum_S");
		dplStsCd_S = (EZDPStringItem)newItem("dplStsCd_S");
		coaChCd_S = (EZDPStringItem)newItem("coaChCd_S");
		coaAfflCd_S = (EZDPStringItem)newItem("coaAfflCd_S");
		lineBizTpCd_S = (EZDPStringItem)newItem("lineBizTpCd_S");
		xxLocShipToTaxFlg_S = (EZDPStringItem)newItem("xxLocShipToTaxFlg_S");
		dsCustTaxCd_S = (EZDPStringItem)newItem("dsCustTaxCd_S");
		dsCustTaxCalcCd_S = (EZDPStringItem)newItem("dsCustTaxCalcCd_S");
		dsTaxExemFlg_S = (EZDPStringItem)newItem("dsTaxExemFlg_S");
		dsExemExprDt_S = (EZDPDateItem)newItem("dsExemExprDt_S");
		dsTaxGrpExemCd_S = (EZDPStringItem)newItem("dsTaxGrpExemCd_S");
		dsTaxPrntTpCd_S = (EZDPStringItem)newItem("dsTaxPrntTpCd_S");
		firstRefCmntTxt_B = (EZDPStringItem)newItem("firstRefCmntTxt_B");

		scdRefCmntTxt_B = (EZDPStringItem)newItem("scdRefCmntTxt_B");
		firstRefCmntTxt_S = (EZDPStringItem)newItem("firstRefCmntTxt_S");
		scdRefCmntTxt_S = (EZDPStringItem)newItem("scdRefCmntTxt_S");
		xxMsgIdList = (business.parts.NMZC001002_xxMsgIdListPMsgArray)newMsgArray("xxMsgIdList");
	}

	/**
	 * get the type of array which is stored
	 * @return NMZC001002PMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NMZC001002PMsgArray();
	}

	/**
	 * Definition of Sub class for Schema Item Array(Basic data,Visible Field)
	 */
	private static class NMZC001002PMsgSchemaContents1 {

		/**
		 * Array of Schema Items in Sub class(Basic data)
		 */
		private static final String[][] BASE_CONTENTS = {
		//["key name", "variable", "suffix", "array length", "item type", "digits", "after decimal point degits"] <- This is how to define.
			{"xxPrinFlg", "xxPrinFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"xxPrinFlg_NW", "xxPrinFlg_NW", "NW", null, TYPE_HANKAKUEISU, "1", null},
			{"xxPrinFlg_OD", "xxPrinFlg_OD", "OD", null, TYPE_HANKAKUEISU, "1", null},
			{"billToCustFlg", "billToCustFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"shipToCustFlg", "shipToCustFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"locNum", "locNum", null, null, TYPE_HANKAKUEISU, "30", null},
			{"effFromDt", "effFromDt", null, null, TYPE_NENTSUKIHI, "8", null},
			{"effThruDt", "effThruDt", null, null, TYPE_NENTSUKIHI, "8", null},
			{"actvFlg", "actvFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"firstLineAddr", "firstLineAddr", null, null, TYPE_HANKAKUEISU, "60", null},
			{"scdLineAddr", "scdLineAddr", null, null, TYPE_HANKAKUEISU, "60", null},
			{"thirdLineAddr", "thirdLineAddr", null, null, TYPE_HANKAKUEISU, "60", null},
			{"frthLineAddr", "frthLineAddr", null, null, TYPE_HANKAKUEISU, "60", null},
			{"ctyAddr", "ctyAddr", null, null, TYPE_HANKAKUEISU, "25", null},
			{"cntyNm", "cntyNm", null, null, TYPE_HANKAKUEISU, "30", null},
			{"cntyPk", "cntyPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
			{"provNm", "provNm", null, null, TYPE_HANKAKUEISU, "25", null},
			{"stCd", "stCd", null, null, TYPE_HANKAKUEISU, "2", null},
			{"postCd", "postCd", null, null, TYPE_HANKAKUEISU, "15", null},
			{"ctryCd", "ctryCd", null, null, TYPE_HANKAKUEISU, "3", null},
			{"locNm", "locNm", null, null, TYPE_HANKAKUEISU, "60", null},
			{"addlLocNm", "addlLocNm", null, null, TYPE_HANKAKUEISU, "60", null},
			{"glnNum", "glnNum", null, null, TYPE_SEISU_SYOSU, "13", "0"},
			{"telNum", "telNum", null, null, TYPE_HANKAKUEISU, "20", null},
			{"faxNum", "faxNum", null, null, TYPE_HANKAKUEISU, "20", null},
			{"lineBizTpCd", "lineBizTpCd", null, null, TYPE_HANKAKUEISU, "8", null},
			{"xxCntyVldErrExclFlg", "xxCntyVldErrExclFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"geoCd", "geoCd", null, null, TYPE_HANKAKUEISU, "9", null},
			{"dsInsdCtyLimitFlg", "dsInsdCtyLimitFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"xxLocXrefInfoFlg", "xxLocXrefInfoFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"dsXrefAcctTpCd", "dsXrefAcctTpCd", null, null, TYPE_HANKAKUEISU, "3", null},
			{"dsXrefAcctCd", "dsXrefAcctCd", null, null, TYPE_HANKAKUEISU, "60", null},
			{"dsXrefAcctNm", "dsXrefAcctNm", null, null, TYPE_HANKAKUEISU, "360", null},
			{"xxLocDunsFlg", "xxLocDunsFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"dunsNum", "dunsNum", null, null, TYPE_HANKAKUEISU, "20", null},
			{"hqDunsNum", "hqDunsNum", null, null, TYPE_HANKAKUEISU, "20", null},
			{"dsUltDunsNum", "dsUltDunsNum", null, null, TYPE_HANKAKUEISU, "20", null},
			{"dsPrntDunsNum", "dsPrntDunsNum", null, null, TYPE_HANKAKUEISU, "20", null},
			{"dsLocEmpNum", "dsLocEmpNum", null, null, TYPE_SEISU_SYOSU, "8", "0"},
			{"dsLocRevAmt", "dsLocRevAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
			{"dsLastUpdDunsDt", "dsLastUpdDunsDt", null, null, TYPE_NENTSUKIHI, "8", null},
			{"dsCustSicCd", "dsCustSicCd", null, null, TYPE_HANKAKUEISU, "30", null},
			{"dsCustSicDescTxt", "dsCustSicDescTxt", null, null, TYPE_HANKAKUEISU, "100", null},
			{"dunsTradeStyleNm", "dunsTradeStyleNm", null, null, TYPE_HANKAKUEISU, "100", null},
			{"dunsActvCd", "dunsActvCd", null, null, TYPE_HANKAKUEISU, "50", null},
			{"dunsLineAddr", "dunsLineAddr", null, null, TYPE_HANKAKUEISU, "240", null},
			{"dunsBizNm", "dunsBizNm", null, null, TYPE_HANKAKUEISU, "150", null},
			{"dsLastRcvDunsTxt", "dsLastRcvDunsTxt", null, null, TYPE_HANKAKUEISU, "120", null},
			{"dsLastRcvDunsDt", "dsLastRcvDunsDt", null, null, TYPE_NENTSUKIHI, "8", null},
			{"dunsSendCnt", "dunsSendCnt", null, null, TYPE_SEISU_SYOSU, "5", "0"},
			{"indyTpCd", "indyTpCd", null, null, TYPE_HANKAKUEISU, "4", null},
			{"effFromDt_B", "effFromDt_B", "B", null, TYPE_NENTSUKIHI, "8", null},
			{"effThruDt_B", "effThruDt_B", "B", null, TYPE_NENTSUKIHI, "8", null},
			{"primUsgFlg_B", "primUsgFlg_B", "B", null, TYPE_HANKAKUEISU, "1", null},
			{"coaChCd_B", "coaChCd_B", "B", null, TYPE_HANKAKUEISU, "3", null},
			{"coaAfflCd_B", "coaAfflCd_B", "B", null, TYPE_HANKAKUEISU, "3", null},
			{"lineBizTpCd_B", "lineBizTpCd_B", "B", null, TYPE_HANKAKUEISU, "8", null},
			{"remId_B", "remId_B", "B", null, TYPE_HANKAKUEISU, "20", null},
			{"xxLocBillToCrInfoFlg", "xxLocBillToCrInfoFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"custCrRtgCd", "custCrRtgCd", null, null, TYPE_HANKAKUEISU, "3", null},
			{"crLimitAmt", "crLimitAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
			{"crChkReqTpCd", "crChkReqTpCd", null, null, TYPE_HANKAKUEISU, "1", null},
			{"crRiskClsCd", "crRiskClsCd", null, null, TYPE_HANKAKUEISU, "2", null},
			{"pmtTermCashDiscCd", "pmtTermCashDiscCd", null, null, TYPE_HANKAKUEISU, "2", null},
			{"ovrdPmtTermFlg", "ovrdPmtTermFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"cashOrCcReqFlg", "cashOrCcReqFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"custHardHldFlg", "custHardHldFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"xxLocBillToCltInfoFlg", "xxLocBillToCltInfoFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"arStmtFlg", "arStmtFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"arStmtIssDay", "arStmtIssDay", null, null, TYPE_HANKAKUSUJI, "2", null},
			{"dunFlg", "dunFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"cltCustTpCd", "cltCustTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
			{"cltPtfoPk", "cltPtfoPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
			{"dsCltAcctStsCd", "dsCltAcctStsCd", null, null, TYPE_HANKAKUEISU, "2", null},
			{"lateFeeFlg", "lateFeeFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"lateFeeAmt", "lateFeeAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
			{"xxLocBillToTaxFlg_B", "xxLocBillToTaxFlg_B", "B", null, TYPE_HANKAKUEISU, "1", null},
			{"dsCustTaxCd_B", "dsCustTaxCd_B", "B", null, TYPE_HANKAKUEISU, "50", null},
			{"dsCustTaxCalcCd_B", "dsCustTaxCalcCd_B", "B", null, TYPE_HANKAKUEISU, "2", null},
			{"dsTaxExemFlg_B", "dsTaxExemFlg_B", "B", null, TYPE_HANKAKUEISU, "1", null},
			{"dsExemExprDt_B", "dsExemExprDt_B", "B", null, TYPE_NENTSUKIHI, "8", null},
			{"dsTaxGrpExemCd_B", "dsTaxGrpExemCd_B", "B", null, TYPE_HANKAKUEISU, "60", null},
			{"dsTaxPrntTpCd_B", "dsTaxPrntTpCd_B", "B", null, TYPE_HANKAKUEISU, "2", null},
			{"effFromDt_S", "effFromDt_S", "S", null, TYPE_NENTSUKIHI, "8", null},
			{"effThruDt_S", "effThruDt_S", "S", null, TYPE_NENTSUKIHI, "8", null},
			{"relnBillToCustCd_S", "relnBillToCustCd_S", "S", null, TYPE_HANKAKUEISU, "20", null},
			{"primUsgFlg_S", "primUsgFlg_S", "S", null, TYPE_HANKAKUEISU, "1", null},
			{"bigDealNum_S", "bigDealNum_S", "S", null, TYPE_HANKAKUEISU, "30", null},
			{"dplStsCd_S", "dplStsCd_S", "S", null, TYPE_HANKAKUEISU, "1", null},
			{"coaChCd_S", "coaChCd_S", "S", null, TYPE_HANKAKUEISU, "3", null},
			{"coaAfflCd_S", "coaAfflCd_S", "S", null, TYPE_HANKAKUEISU, "3", null},
			{"lineBizTpCd_S", "lineBizTpCd_S", "S", null, TYPE_HANKAKUEISU, "8", null},
			{"xxLocShipToTaxFlg_S", "xxLocShipToTaxFlg_S", "S", null, TYPE_HANKAKUEISU, "1", null},
			{"dsCustTaxCd_S", "dsCustTaxCd_S", "S", null, TYPE_HANKAKUEISU, "50", null},
			{"dsCustTaxCalcCd_S", "dsCustTaxCalcCd_S", "S", null, TYPE_HANKAKUEISU, "2", null},
			{"dsTaxExemFlg_S", "dsTaxExemFlg_S", "S", null, TYPE_HANKAKUEISU, "1", null},
			{"dsExemExprDt_S", "dsExemExprDt_S", "S", null, TYPE_NENTSUKIHI, "8", null},
			{"dsTaxGrpExemCd_S", "dsTaxGrpExemCd_S", "S", null, TYPE_HANKAKUEISU, "60", null},
			{"dsTaxPrntTpCd_S", "dsTaxPrntTpCd_S", "S", null, TYPE_HANKAKUEISU, "2", null},
			{"firstRefCmntTxt_B", "firstRefCmntTxt_B", "B", null, TYPE_HANKAKUEISU, "90", null},
		};

		/**
		 * Array of Schema Items in Sub class(Visible Field)
		 */
		private static final String[][] DISP_CONTENTS = {
		// ["message display string","mandotry item", "minimum", "maximum", "I/O type", "yen", "comma", "zero suppress", "plus display flag", "display length", "display length after decimal point digit", "Dividing date", "Year display pattern", "zero pudding for date", "separator for date"] <- This is how to define
	        {"XX_PRIN_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPrinFlg
	        {"XX_PRIN_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPrinFlg_NW
	        {"XX_PRIN_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPrinFlg_OD
	        {"BILL_TO_CUST_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//billToCustFlg
	        {"SHIP_TO_CUST_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToCustFlg
	        {"LOC_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//locNum
	        {"EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effFromDt
	        {"EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effThruDt
	        {"ACTV_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//actvFlg
	        {"FIRST_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//firstLineAddr
	        {"SCD_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//scdLineAddr
	        {"THIRD_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//thirdLineAddr
	        {"FRTH_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//frthLineAddr
	        {"CTY_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ctyAddr
	        {"CNTY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cntyNm
	        {"CNTY_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cntyPk
	        {"PROV_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//provNm
	        {"ST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//stCd
	        {"POST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//postCd
	        {"CTRY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ctryCd
	        {"LOC_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//locNm
	        {"ADDL_LOC_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//addlLocNm
	        {"GLN_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//glnNum
	        {"TEL_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//telNum
	        {"FAX_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//faxNum
	        {"LINE_BIZ_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//lineBizTpCd
	        {"XX_CNTY_VLD_ERR_EXCL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxCntyVldErrExclFlg
	        {"GEO_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//geoCd
	        {"DS_INSD_CTY_LIMIT_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsInsdCtyLimitFlg
	        {"XX_LOC_XREF_INFO_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxLocXrefInfoFlg
	        {"DS_XREF_ACCT_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsXrefAcctTpCd
	        {"DS_XREF_ACCT_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsXrefAcctCd
	        {"DS_XREF_ACCT_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsXrefAcctNm
	        {"XX_LOC_DUNS_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxLocDunsFlg
	        {"DUNS_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dunsNum
	        {"HQ_DUNS_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//hqDunsNum
	        {"DS_ULT_DUNS_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsUltDunsNum
	        {"DS_PRNT_DUNS_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsPrntDunsNum
	        {"DS_LOC_EMP_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsLocEmpNum
	        {"DS_LOC_REV_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsLocRevAmt
	        {"DS_LAST_UPD_DUNS_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsLastUpdDunsDt
	        {"DS_CUST_SIC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsCustSicCd
	        {"DS_CUST_SIC_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsCustSicDescTxt
	        {"DUNS_TRADE_STYLE_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dunsTradeStyleNm
	        {"DUNS_ACTV_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dunsActvCd
	        {"DUNS_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dunsLineAddr
	        {"DUNS_BIZ_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dunsBizNm
	        {"DS_LAST_RCV_DUNS_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsLastRcvDunsTxt
	        {"DS_LAST_RCV_DUNS_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsLastRcvDunsDt
	        {"DUNS_SEND_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dunsSendCnt
	        {"INDY_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//indyTpCd
	        {"EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effFromDt_B
	        {"EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effThruDt_B
	        {"PRIM_USG_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//primUsgFlg_B
	        {"COA_CH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaChCd_B
	        {"COA_AFFL_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaAfflCd_B
	        {"LINE_BIZ_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//lineBizTpCd_B
	        {"REM_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//remId_B
	        {"XX_LOC_BILL_TO_CR_INFO_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxLocBillToCrInfoFlg
	        {"CUST_CR_RTG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//custCrRtgCd
	        {"CR_LIMIT_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//crLimitAmt
	        {"CR_CHK_REQ_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//crChkReqTpCd
	        {"CR_RISK_CLS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//crRiskClsCd
	        {"PMT_TERM_CASH_DISC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//pmtTermCashDiscCd
	        {"OVRD_PMT_TERM_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ovrdPmtTermFlg
	        {"CASH_OR_CC_REQ_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cashOrCcReqFlg
	        {"CUST_HARD_HLD_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//custHardHldFlg
	        {"XX_LOC_BILL_TO_CLT_INFO_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxLocBillToCltInfoFlg
	        {"AR_STMT_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//arStmtFlg
	        {"AR_STMT_ISS_DAY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//arStmtIssDay
	        {"DUN_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dunFlg
	        {"CLT_CUST_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cltCustTpCd
	        {"CLT_PTFO_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cltPtfoPk
	        {"DS_CLT_ACCT_STS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsCltAcctStsCd
	        {"LATE_FEE_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//lateFeeFlg
	        {"LATE_FEE_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//lateFeeAmt
	        {"XX_LOC_BILL_TO_TAX_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxLocBillToTaxFlg_B
	        {"DS_CUST_TAX_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsCustTaxCd_B
	        {"DS_CUST_TAX_CALC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsCustTaxCalcCd_B
	        {"DS_TAX_EXEM_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsTaxExemFlg_B
	        {"DS_EXEM_EXPR_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsExemExprDt_B
	        {"DS_TAX_GRP_EXEM_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsTaxGrpExemCd_B
	        {"DS_TAX_PRNT_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsTaxPrntTpCd_B
	        {"EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effFromDt_S
	        {"EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effThruDt_S
	        {"RELN_BILL_TO_CUST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//relnBillToCustCd_S
	        {"PRIM_USG_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//primUsgFlg_S
	        {"BIG_DEAL_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bigDealNum_S
	        {"DPL_STS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dplStsCd_S
	        {"COA_CH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaChCd_S
	        {"COA_AFFL_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaAfflCd_S
	        {"LINE_BIZ_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//lineBizTpCd_S
	        {"XX_LOC_SHIP_TO_TAX_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxLocShipToTaxFlg_S
	        {"DS_CUST_TAX_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsCustTaxCd_S
	        {"DS_CUST_TAX_CALC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsCustTaxCalcCd_S
	        {"DS_TAX_EXEM_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsTaxExemFlg_S
	        {"DS_EXEM_EXPR_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsExemExprDt_S
	        {"DS_TAX_GRP_EXEM_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsTaxGrpExemCd_S
	        {"DS_TAX_PRNT_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsTaxPrntTpCd_S
	        {"FIRST_REF_CMNT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//firstRefCmntTxt_B
		};

	}

	private static class NMZC001002PMsgSchemaContents2 {

		/**
		 * Array of Schema Items in Sub class(Basic data)
		 */
		private static final String[][] BASE_CONTENTS = {
		//["key name", "variable", "suffix", "array length", "item type", "digits", "after decimal point degits"] <- This is how to define.
			{"scdRefCmntTxt_B", "scdRefCmntTxt_B", "B", null, TYPE_HANKAKUEISU, "90", null},
			{"firstRefCmntTxt_S", "firstRefCmntTxt_S", "S", null, TYPE_HANKAKUEISU, "90", null},
			{"scdRefCmntTxt_S", "scdRefCmntTxt_S", "S", null, TYPE_HANKAKUEISU, "90", null},
			{"xxMsgIdList", "xxMsgIdList", null, "100", "business.parts.NMZC001002_xxMsgIdListPMsgArray", null, null},
		};

		/**
		 * Array of Schema Items in Sub class(Visible Field)
		 */
		private static final String[][] DISP_CONTENTS = {
		// ["message display string","mandotry item", "minimum", "maximum", "I/O type", "yen", "comma", "zero suppress", "plus display flag", "display length", "display length after decimal point digit", "Dividing date", "Year display pattern", "zero pudding for date", "separator for date"] <- This is how to define
	        {"SCD_REF_CMNT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//scdRefCmntTxt_B
	        {"FIRST_REF_CMNT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//firstRefCmntTxt_S
	        {"SCD_REF_CMNT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//scdRefCmntTxt_S
			null,	//xxMsgIdList
		};

	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = new String[104][NMZC001002PMsgSchemaContents1.BASE_CONTENTS[0].length];
	static {
		int arcpStartPoint=0;
	System.arraycopy(NMZC001002PMsgSchemaContents1.BASE_CONTENTS, 0, BASE_CONTENTS, arcpStartPoint, NMZC001002PMsgSchemaContents1.BASE_CONTENTS.length);
	arcpStartPoint = arcpStartPoint + NMZC001002PMsgSchemaContents1.BASE_CONTENTS.length;
	System.arraycopy(NMZC001002PMsgSchemaContents2.BASE_CONTENTS, 0, BASE_CONTENTS, arcpStartPoint, NMZC001002PMsgSchemaContents2.BASE_CONTENTS.length);
	arcpStartPoint = arcpStartPoint + NMZC001002PMsgSchemaContents2.BASE_CONTENTS.length;
	}

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = new String[104][15];
	static {
		int arcpStartPoint=0;
		System.arraycopy(NMZC001002PMsgSchemaContents1.DISP_CONTENTS, 0, DISP_CONTENTS, arcpStartPoint, NMZC001002PMsgSchemaContents1.DISP_CONTENTS.length);
		arcpStartPoint = arcpStartPoint + NMZC001002PMsgSchemaContents1.DISP_CONTENTS.length;
		System.arraycopy(NMZC001002PMsgSchemaContents2.DISP_CONTENTS, 0, DISP_CONTENTS, arcpStartPoint, NMZC001002PMsgSchemaContents2.DISP_CONTENTS.length);
		arcpStartPoint = arcpStartPoint + NMZC001002PMsgSchemaContents2.DISP_CONTENTS.length;
	}

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

