//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20170531110854000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NPAL1010_ABMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NPAL1010;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NPAL1010 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NPAL1010_ABMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_CHK_BOX_A*/
	public final EZDBStringItem              xxChkBox_A;

    /** INVTY_LOC_CD_A*/
	public final EZDBStringItem              invtyLocCd_A;

    /** INVTY_LOC_NM_A*/
	public final EZDBStringItem              invtyLocNm_A;

    /** LOC_NUM_A*/
	public final EZDBStringItem              locNum_A;

    /** LOC_NM_A*/
	public final EZDBStringItem              locNm_A;

    /** LOC_ROLE_TP_CD_A*/
	public final EZDBStringItem              locRoleTpCd_A;

    /** RTL_WH_CD_A*/
	public final EZDBStringItem              rtlWhCd_A;

    /** RTL_WH_NM_A*/
	public final EZDBStringItem              rtlWhNm_A;

    /** RTL_SWH_CD_A*/
	public final EZDBStringItem              rtlSwhCd_A;

    /** RTL_SWH_NM_A*/
	public final EZDBStringItem              rtlSwhNm_A;

    /** RTL_WH_CATG_NM_A*/
	public final EZDBStringItem              rtlWhCatgNm_A;

    /** INVTY_OWNR_NM_A*/
	public final EZDBStringItem              invtyOwnrNm_A;

    /** WH_OWNR_NM_A*/
	public final EZDBStringItem              whOwnrNm_A;

    /** INVTY_ACCT_NM_A*/
	public final EZDBStringItem              invtyAcctNm_A;

    /** WH_MGR_PSN_CD_A*/
	public final EZDBStringItem              whMgrPsnCd_A;

    /** FULL_PSN_NM_A*/
	public final EZDBStringItem              fullPsnNm_A;

    /** POST_CD_A*/
	public final EZDBStringItem              postCd_A;

    /** XX_EDT_ADDR_A*/
	public final EZDBStringItem              xxEdtAddr_A;

    /** ADDL_LOC_NM_A*/
	public final EZDBStringItem              addlLocNm_A;

    /** INVTY_ACCT_CD_A*/
	public final EZDBStringItem              invtyAcctCd_A;


	/**
	 * NPAL1010_ABMsg is constructor.
	 * The initialization when the instance of NPAL1010_ABMsg is generated.
	 */
	public NPAL1010_ABMsg() {
		this(false, -1);
	}

	/**
	 * NPAL1010_ABMsg is constructor.
	 * The initialization when the instance of NPAL1010_ABMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NPAL1010_ABMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxChkBox_A = (EZDBStringItem)newItem("xxChkBox_A");
		invtyLocCd_A = (EZDBStringItem)newItem("invtyLocCd_A");
		invtyLocNm_A = (EZDBStringItem)newItem("invtyLocNm_A");
		locNum_A = (EZDBStringItem)newItem("locNum_A");
		locNm_A = (EZDBStringItem)newItem("locNm_A");
		locRoleTpCd_A = (EZDBStringItem)newItem("locRoleTpCd_A");
		rtlWhCd_A = (EZDBStringItem)newItem("rtlWhCd_A");
		rtlWhNm_A = (EZDBStringItem)newItem("rtlWhNm_A");
		rtlSwhCd_A = (EZDBStringItem)newItem("rtlSwhCd_A");
		rtlSwhNm_A = (EZDBStringItem)newItem("rtlSwhNm_A");
		rtlWhCatgNm_A = (EZDBStringItem)newItem("rtlWhCatgNm_A");
		invtyOwnrNm_A = (EZDBStringItem)newItem("invtyOwnrNm_A");
		whOwnrNm_A = (EZDBStringItem)newItem("whOwnrNm_A");
		invtyAcctNm_A = (EZDBStringItem)newItem("invtyAcctNm_A");
		whMgrPsnCd_A = (EZDBStringItem)newItem("whMgrPsnCd_A");
		fullPsnNm_A = (EZDBStringItem)newItem("fullPsnNm_A");
		postCd_A = (EZDBStringItem)newItem("postCd_A");
		xxEdtAddr_A = (EZDBStringItem)newItem("xxEdtAddr_A");
		addlLocNm_A = (EZDBStringItem)newItem("addlLocNm_A");
		invtyAcctCd_A = (EZDBStringItem)newItem("invtyAcctCd_A");
	}

	/**
	 * get the type of array which is stored
	 * @return NPAL1010_ABMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NPAL1010_ABMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxChkBox_A", "xxChkBox_A", "A", null, TYPE_HANKAKUEIJI, "1", null},
	{"invtyLocCd_A", "invtyLocCd_A", "A", null, TYPE_HANKAKUEISU, "20", null},
	{"invtyLocNm_A", "invtyLocNm_A", "A", null, TYPE_HANKAKUEISU, "60", null},
	{"locNum_A", "locNum_A", "A", null, TYPE_HANKAKUEISU, "30", null},
	{"locNm_A", "locNm_A", "A", null, TYPE_HANKAKUEISU, "60", null},
	{"locRoleTpCd_A", "locRoleTpCd_A", "A", null, TYPE_HANKAKUEISU, "20", null},
	{"rtlWhCd_A", "rtlWhCd_A", "A", null, TYPE_HANKAKUEISU, "20", null},
	{"rtlWhNm_A", "rtlWhNm_A", "A", null, TYPE_HANKAKUEISU, "30", null},
	{"rtlSwhCd_A", "rtlSwhCd_A", "A", null, TYPE_HANKAKUEISU, "20", null},
	{"rtlSwhNm_A", "rtlSwhNm_A", "A", null, TYPE_HANKAKUEISU, "30", null},
	{"rtlWhCatgNm_A", "rtlWhCatgNm_A", "A", null, TYPE_HANKAKUEISU, "20", null},
	{"invtyOwnrNm_A", "invtyOwnrNm_A", "A", null, TYPE_HANKAKUEISU, "30", null},
	{"whOwnrNm_A", "whOwnrNm_A", "A", null, TYPE_HANKAKUEISU, "20", null},
	{"invtyAcctNm_A", "invtyAcctNm_A", "A", null, TYPE_HANKAKUEISU, "20", null},
	{"whMgrPsnCd_A", "whMgrPsnCd_A", "A", null, TYPE_HANKAKUEISU, "8", null},
	{"fullPsnNm_A", "fullPsnNm_A", "A", null, TYPE_HANKAKUEISU, "62", null},
	{"postCd_A", "postCd_A", "A", null, TYPE_HANKAKUEISU, "15", null},
	{"xxEdtAddr_A", "xxEdtAddr_A", "A", null, TYPE_HANKAKUEISU, "100", null},
	{"addlLocNm_A", "addlLocNm_A", "A", null, TYPE_HANKAKUEISU, "60", null},
	{"invtyAcctCd_A", "invtyAcctCd_A", "A", null, TYPE_HANKAKUEISU, "2", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_CHK_BOX",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_A
        {"INVTY_LOC_CD",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invtyLocCd_A
        {"INVTY_LOC_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invtyLocNm_A
        {"LOC_NUM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//locNum_A
        {"LOC_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//locNm_A
        {"LOC_ROLE_TP_CD",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//locRoleTpCd_A
        {"RTL_WH_CD",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlWhCd_A
        {"RTL_WH_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlWhNm_A
        {"RTL_SWH_CD",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlSwhCd_A
        {"RTL_SWH_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlSwhNm_A
        {"RTL_WH_CATG_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlWhCatgNm_A
        {"INVTY_OWNR_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invtyOwnrNm_A
        {"WH_OWNR_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//whOwnrNm_A
        {"INVTY_ACCT_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invtyAcctNm_A
        {"WH_MGR_PSN_CD",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//whMgrPsnCd_A
        {"FULL_PSN_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//fullPsnNm_A
        {"POST_CD",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//postCd_A
        {"XX_EDT_ADDR",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxEdtAddr_A
        {"ADDL_LOC_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//addlLocNm_A
        {"INVTY_ACCT_CD",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invtyAcctCd_A
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

