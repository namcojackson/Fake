//This file was automatically generated by Text File Layout Definition Document and XLA200710010.
// Generated on    :20160329155520000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :TextFileLayoutDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL1140F00FMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.file;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL1140F00 File Layout Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL1140F00FMsg extends EZDFMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** ABUSE_FLG*/
	public final EZDFStringItem              abuseFlg;

    /** OVWRT_ABUSE_FLG*/
	public final EZDFStringItem              ovwrtAbuseFlg;

    /** ABUSE_OVWRT_RSN_DESC_TXT*/
	public final EZDFStringItem              abuseOvwrtRsnDescTxt;

    /** OTH_CONTR_ABUSE_FLG*/
	public final EZDFStringItem              othContrAbuseFlg;

    /** XX_DT_TM_PD*/
	public final EZDFStringItem              xxDtTm_PD;

    /** TERM_COND_CHK_FLG*/
	public final EZDFStringItem              termCondChkFlg;

    /** XX_DT_TM_TC*/
	public final EZDFStringItem              xxDtTm_TC;

    /** SHIP_TO_CUST_ACCT_CD*/
	public final EZDFStringItem              shipToCustAcctCd;

    /** DS_ACCT_NM*/
	public final EZDFStringItem              dsAcctNm;

    /** DS_ACCT_GRP_DESC_TXT*/
	public final EZDFStringItem              dsAcctGrpDescTxt;

    /** DS_CONTR_NUM*/
	public final EZDFStringItem              dsContrNum;

    /** SVC_CONTR_BR_DESC_TXT*/
	public final EZDFStringItem              svcContrBrDescTxt;

    /** SVC_RG_DESC_TXT*/
	public final EZDFStringItem              svcRgDescTxt;

    /** DS_CONTR_EDI_DESC_TXT*/
	public final EZDFStringItem              dsContrEdiDescTxt;

    /** SVC_COV_TMPL_TP_DESC_TXT*/
	public final EZDFStringItem              svcCovTmplTpDescTxt;

    /** NO_MAIN_UNIT_CNT*/
	public final EZDFBigDecimalItem              noMainUnitCnt;

    /** BLLG_CYCLE_DESC_TXT*/
	public final EZDFStringItem              bllgCycleDescTxt;

    /** XX_DT_TM_CS*/
	public final EZDFStringItem              xxDtTm_CS;

    /** BW_PRRT_QTY*/
	public final EZDFBigDecimalItem              bwPrrtQty;

    /** COLOR_PRRT_QTY*/
	public final EZDFBigDecimalItem              colorPrrtQty;

    /** BW_USED_QTY*/
	public final EZDFBigDecimalItem              bwUsedQty;

    /** COLOR_USED_QTY*/
	public final EZDFBigDecimalItem              colorUsedQty;

    /** ABUSE_VAR_PCT*/
	public final EZDFBigDecimalItem              abuseVarPct;

    /** TOT_REV_AMT*/
	public final EZDFBigDecimalItem              totRevAmt;

    /** TOT_COST_AMT*/
	public final EZDFBigDecimalItem              totCostAmt;

    /** PRFT_AMT*/
	public final EZDFBigDecimalItem              prftAmt;

    /** ABUSE_BCKT_CD*/
	public final EZDFStringItem              abuseBcktCd;


	/**
	 * NSAL1140F00FMsg is constructor.
	 * The initialization when the instance of NSAL1140F00FMsg is generated.
	 */
	public NSAL1140F00FMsg() {
		this(false, -1);
	}

	/**
	 * NSAL1140F00FMsg is constructor.
	 * The initialization when the instance of NSAL1140F00FMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL1140F00FMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		abuseFlg = (EZDFStringItem)newItem("abuseFlg");
		ovwrtAbuseFlg = (EZDFStringItem)newItem("ovwrtAbuseFlg");
		abuseOvwrtRsnDescTxt = (EZDFStringItem)newItem("abuseOvwrtRsnDescTxt");
		othContrAbuseFlg = (EZDFStringItem)newItem("othContrAbuseFlg");
		xxDtTm_PD = (EZDFStringItem)newItem("xxDtTm_PD");
		termCondChkFlg = (EZDFStringItem)newItem("termCondChkFlg");
		xxDtTm_TC = (EZDFStringItem)newItem("xxDtTm_TC");
		shipToCustAcctCd = (EZDFStringItem)newItem("shipToCustAcctCd");
		dsAcctNm = (EZDFStringItem)newItem("dsAcctNm");
		dsAcctGrpDescTxt = (EZDFStringItem)newItem("dsAcctGrpDescTxt");
		dsContrNum = (EZDFStringItem)newItem("dsContrNum");
		svcContrBrDescTxt = (EZDFStringItem)newItem("svcContrBrDescTxt");
		svcRgDescTxt = (EZDFStringItem)newItem("svcRgDescTxt");
		dsContrEdiDescTxt = (EZDFStringItem)newItem("dsContrEdiDescTxt");
		svcCovTmplTpDescTxt = (EZDFStringItem)newItem("svcCovTmplTpDescTxt");
		noMainUnitCnt = (EZDFBigDecimalItem)newItem("noMainUnitCnt");
		bllgCycleDescTxt = (EZDFStringItem)newItem("bllgCycleDescTxt");
		xxDtTm_CS = (EZDFStringItem)newItem("xxDtTm_CS");
		bwPrrtQty = (EZDFBigDecimalItem)newItem("bwPrrtQty");
		colorPrrtQty = (EZDFBigDecimalItem)newItem("colorPrrtQty");
		bwUsedQty = (EZDFBigDecimalItem)newItem("bwUsedQty");
		colorUsedQty = (EZDFBigDecimalItem)newItem("colorUsedQty");
		abuseVarPct = (EZDFBigDecimalItem)newItem("abuseVarPct");
		totRevAmt = (EZDFBigDecimalItem)newItem("totRevAmt");
		totCostAmt = (EZDFBigDecimalItem)newItem("totCostAmt");
		prftAmt = (EZDFBigDecimalItem)newItem("prftAmt");
		abuseBcktCd = (EZDFStringItem)newItem("abuseBcktCd");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL1140F00FMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL1140F00FMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"abuseFlg", "abuseFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"ovwrtAbuseFlg", "ovwrtAbuseFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"abuseOvwrtRsnDescTxt", "abuseOvwrtRsnDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"othContrAbuseFlg", "othContrAbuseFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"xxDtTm_PD", "xxDtTm_PD", "PD", null, TYPE_HANKAKUEISU, "23", null},
	{"termCondChkFlg", "termCondChkFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"xxDtTm_TC", "xxDtTm_TC", "TC", null, TYPE_HANKAKUEISU, "23", null},
	{"shipToCustAcctCd", "shipToCustAcctCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"dsAcctNm", "dsAcctNm", null, null, TYPE_HANKAKUEISU, "360", null},
	{"dsAcctGrpDescTxt", "dsAcctGrpDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"dsContrNum", "dsContrNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"svcContrBrDescTxt", "svcContrBrDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"svcRgDescTxt", "svcRgDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"dsContrEdiDescTxt", "dsContrEdiDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"svcCovTmplTpDescTxt", "svcCovTmplTpDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"noMainUnitCnt", "noMainUnitCnt", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"bllgCycleDescTxt", "bllgCycleDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"xxDtTm_CS", "xxDtTm_CS", "CS", null, TYPE_HANKAKUEISU, "23", null},
	{"bwPrrtQty", "bwPrrtQty", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"colorPrrtQty", "colorPrrtQty", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"bwUsedQty", "bwUsedQty", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"colorUsedQty", "colorUsedQty", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"abuseVarPct", "abuseVarPct", null, null, TYPE_SEISU_SYOSU, "9", "5"},
	{"totRevAmt", "totRevAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"totCostAmt", "totCostAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"prftAmt", "prftAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"abuseBcktCd", "abuseBcktCd", null, null, TYPE_HANKAKUEISU, "3", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"ABUSE_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//abuseFlg
        {"OVWRT_ABUSE_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ovwrtAbuseFlg
        {"ABUSE_OVWRT_RSN_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//abuseOvwrtRsnDescTxt
        {"OTH_CONTR_ABUSE_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//othContrAbuseFlg
        {"XX_DT_TM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDtTm_PD
        {"TERM_COND_CHK_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//termCondChkFlg
        {"XX_DT_TM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDtTm_TC
        {"SHIP_TO_CUST_ACCT_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToCustAcctCd
        {"DS_ACCT_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctNm
        {"DS_ACCT_GRP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctGrpDescTxt
        {"DS_CONTR_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrNum
        {"SVC_CONTR_BR_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcContrBrDescTxt
        {"SVC_RG_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcRgDescTxt
        {"DS_CONTR_EDI_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrEdiDescTxt
        {"SVC_COV_TMPL_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcCovTmplTpDescTxt
        {"NO_MAIN_UNIT_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//noMainUnitCnt
        {"BLLG_CYCLE_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgCycleDescTxt
        {"XX_DT_TM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDtTm_CS
        {"BW_PRRT_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bwPrrtQty
        {"COLOR_PRRT_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//colorPrrtQty
        {"BW_USED_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bwUsedQty
        {"COLOR_USED_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//colorUsedQty
        {"ABUSE_VAR_PCT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//abuseVarPct
        {"TOT_REV_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//totRevAmt
        {"TOT_COST_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//totCostAmt
        {"PRFT_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prftAmt
        {"ABUSE_BCKT_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//abuseBcktCd
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

