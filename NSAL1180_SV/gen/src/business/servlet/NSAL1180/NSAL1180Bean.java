// This file was automatically generated by Screen Field Definition Document and XLA200710010
// Generated on    :20170419112307000
// Velocity Macro:svltdatabean.vm V200604010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL1180Bean.java Copyright FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */

package  business.servlet.NSAL1180;

import parts.servletcommon.EZDCommonDataBean;

/*
 * NSAL1180 is data bean class.
 */
public class NSAL1180Bean extends EZDCommonDataBean {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	//Constant Definition Area
	/** SVC_RG_PK*/
	public static final String svcRgPk = "svcRgPk";

	/** SVC_CONTR_BR_CD*/
	public static final String svcContrBrCd = "svcContrBrCd";

	/** PSN_CD*/
	public static final String psnCd = "psnCd";

	/** A*/
	public static final String A = "A";

	/** SVC_RG_PK_A*/
	public static final String svcRgPk_A = "svcRgPk_A";

	/** SVC_RG_NM_A*/
	public static final String svcRgNm_A = "svcRgNm_A";

	/** LINE_BIZ_TP_CD_A*/
	public static final String lineBizTpCd_A = "lineBizTpCd_A";

	/** LINE_BIZ_TP_DESC_TXT_A*/
	public static final String lineBizTpDescTxt_A = "lineBizTpDescTxt_A";

	/** SVC_CONTR_BR_CD_A*/
	public static final String svcContrBrCd_A = "svcContrBrCd_A";

	/** SVC_CONTR_BR_DESC_TXT_A*/
	public static final String svcContrBrDescTxt_A = "svcContrBrDescTxt_A";

	/** XX_REC_NM_TXT_HI*/
	public static final String xxRecNmTxt_HI = "xxRecNmTxt_HI";

	/** ORG_FUNC_ROLE_TP_CD_A*/
	public static final String orgFuncRoleTpCd_A = "orgFuncRoleTpCd_A";

	/** ORG_FUNC_ROLE_TP_NM_A*/
	public static final String orgFuncRoleTpNm_A = "orgFuncRoleTpNm_A";

	/** APVL_LIMIT_AMT_A*/
	public static final String apvlLimitAmt_A = "apvlLimitAmt_A";

	/** PSN_CD_A*/
	public static final String psnCd_A = "psnCd_A";

	/** PSN_FIRST_NM_A*/
	public static final String psnFirstNm_A = "psnFirstNm_A";

	/** PSN_MID_NM_A*/
	public static final String psnMidNm_A = "psnMidNm_A";

	/** PSN_LAST_NM_A*/
	public static final String psnLastNm_A = "psnLastNm_A";

	/** XX_REC_NM_TXT_PS*/
	public static final String xxRecNmTxt_PS = "xxRecNmTxt_PS";

	/**
	 * Method name:NSAL1180 is Bean's Constructor.
	 * <dd>method explanation:Initialization when instance of NSAL1180Bean is generated
	 * <dd>Remarks:
	 */
	public NSAL1180Bean() {
		super("business.servlet.NSAL1180.NSAL1180BMsg");
	}

	/**
	 * get  SVC_RG_PK.
	 * @return SVC_RG_PK
	 */
	public String getSvcRgPk() {
		return outputValue(svcRgPk);
	}

	/**
	 * set  SVC_RG_PK.
	 * @param data SVC_RG_PK
	 */
	public void setSvcRgPk(String data) {
		inputValue(svcRgPk,data);
	}

	/**
	 * get  SVC_CONTR_BR_CD.
	 * @return SVC_CONTR_BR_CD
	 */
	public String getSvcContrBrCd() {
		return outputValue(svcContrBrCd);
	}

	/**
	 * set  SVC_CONTR_BR_CD.
	 * @param data SVC_CONTR_BR_CD
	 */
	public void setSvcContrBrCd(String data) {
		inputValue(svcContrBrCd,data);
	}

	/**
	 * get  PSN_CD.
	 * @return PSN_CD
	 */
	public String getPsnCd() {
		return outputValue(psnCd);
	}

	/**
	 * set  PSN_CD.
	 * @param data PSN_CD
	 */
	public void setPsnCd(String data) {
		inputValue(psnCd,data);
	}

	/**
	 * get  SVC_RG_PK_A.
	 * @param idx1 List Number
	 * @return SVC_RG_PK_A
	 */
	public String getSvcRgPk_A(int idx1) {
		return outputValue(A, idx1, svcRgPk_A);
	}

	/**
	 * set  SVC_RG_PK_A.
	 * @param data SVC_RG_PK_AArray
	 */
	public void setSvcRgPk_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcRgPk_A, data[j]);
		}
	}

	/**
	 * get  SVC_RG_NM_A.
	 * @param idx1 List Number
	 * @return SVC_RG_NM_A
	 */
	public String getSvcRgNm_A(int idx1) {
		return outputValue(A, idx1, svcRgNm_A);
	}

	/**
	 * set  SVC_RG_NM_A.
	 * @param data SVC_RG_NM_AArray
	 */
	public void setSvcRgNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcRgNm_A, data[j]);
		}
	}

	/**
	 * get  LINE_BIZ_TP_CD_A.
	 * @param idx1 List Number
	 * @return LINE_BIZ_TP_CD_A
	 */
	public String getLineBizTpCd_A(int idx1) {
		return outputValue(A, idx1, lineBizTpCd_A);
	}

	/**
	 * set  LINE_BIZ_TP_CD_A.
	 * @param data LINE_BIZ_TP_CD_AArray
	 */
	public void setLineBizTpCd_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, lineBizTpCd_A, data[j]);
		}
	}

	/**
	 * get  LINE_BIZ_TP_DESC_TXT_A.
	 * @param idx1 List Number
	 * @return LINE_BIZ_TP_DESC_TXT_A
	 */
	public String getLineBizTpDescTxt_A(int idx1) {
		return outputValue(A, idx1, lineBizTpDescTxt_A);
	}

	/**
	 * set  LINE_BIZ_TP_DESC_TXT_A.
	 * @param data LINE_BIZ_TP_DESC_TXT_AArray
	 */
	public void setLineBizTpDescTxt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, lineBizTpDescTxt_A, data[j]);
		}
	}

	/**
	 * get  SVC_CONTR_BR_CD_A.
	 * @param idx1 List Number
	 * @return SVC_CONTR_BR_CD_A
	 */
	public String getSvcContrBrCd_A(int idx1) {
		return outputValue(A, idx1, svcContrBrCd_A);
	}

	/**
	 * set  SVC_CONTR_BR_CD_A.
	 * @param data SVC_CONTR_BR_CD_AArray
	 */
	public void setSvcContrBrCd_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcContrBrCd_A, data[j]);
		}
	}

	/**
	 * get  SVC_CONTR_BR_DESC_TXT_A.
	 * @param idx1 List Number
	 * @return SVC_CONTR_BR_DESC_TXT_A
	 */
	public String getSvcContrBrDescTxt_A(int idx1) {
		return outputValue(A, idx1, svcContrBrDescTxt_A);
	}

	/**
	 * set  SVC_CONTR_BR_DESC_TXT_A.
	 * @param data SVC_CONTR_BR_DESC_TXT_AArray
	 */
	public void setSvcContrBrDescTxt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcContrBrDescTxt_A, data[j]);
		}
	}

	/**
	 * get  XX_REC_NM_TXT_HI.
	 * @param idx1 List Number
	 * @return XX_REC_NM_TXT_HI
	 */
	public String getXxRecNmTxt_HI(int idx1) {
		return outputValue(A, idx1, xxRecNmTxt_HI);
	}

	/**
	 * set  XX_REC_NM_TXT_HI.
	 * @param data XX_REC_NM_TXT_HIArray
	 */
	public void setXxRecNmTxt_HI(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRecNmTxt_HI, data[j]);
		}
	}

	/**
	 * get  ORG_FUNC_ROLE_TP_CD_A.
	 * @param idx1 List Number
	 * @return ORG_FUNC_ROLE_TP_CD_A
	 */
	public String getOrgFuncRoleTpCd_A(int idx1) {
		return outputValue(A, idx1, orgFuncRoleTpCd_A);
	}

	/**
	 * set  ORG_FUNC_ROLE_TP_CD_A.
	 * @param data ORG_FUNC_ROLE_TP_CD_AArray
	 */
	public void setOrgFuncRoleTpCd_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, orgFuncRoleTpCd_A, data[j]);
		}
	}

	/**
	 * get  ORG_FUNC_ROLE_TP_NM_A.
	 * @param idx1 List Number
	 * @return ORG_FUNC_ROLE_TP_NM_A
	 */
	public String getOrgFuncRoleTpNm_A(int idx1) {
		return outputValue(A, idx1, orgFuncRoleTpNm_A);
	}

	/**
	 * set  ORG_FUNC_ROLE_TP_NM_A.
	 * @param data ORG_FUNC_ROLE_TP_NM_AArray
	 */
	public void setOrgFuncRoleTpNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, orgFuncRoleTpNm_A, data[j]);
		}
	}

	/**
	 * get  APVL_LIMIT_AMT_A.
	 * @param idx1 List Number
	 * @return APVL_LIMIT_AMT_A
	 */
	public String getApvlLimitAmt_A(int idx1) {
		return outputValue(A, idx1, apvlLimitAmt_A);
	}

	/**
	 * set  APVL_LIMIT_AMT_A.
	 * @param data APVL_LIMIT_AMT_AArray
	 */
	public void setApvlLimitAmt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, apvlLimitAmt_A, data[j]);
		}
	}

	/**
	 * get  PSN_CD_A.
	 * @param idx1 List Number
	 * @return PSN_CD_A
	 */
	public String getPsnCd_A(int idx1) {
		return outputValue(A, idx1, psnCd_A);
	}

	/**
	 * set  PSN_CD_A.
	 * @param data PSN_CD_AArray
	 */
	public void setPsnCd_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, psnCd_A, data[j]);
		}
	}

	/**
	 * get  PSN_FIRST_NM_A.
	 * @param idx1 List Number
	 * @return PSN_FIRST_NM_A
	 */
	public String getPsnFirstNm_A(int idx1) {
		return outputValue(A, idx1, psnFirstNm_A);
	}

	/**
	 * set  PSN_FIRST_NM_A.
	 * @param data PSN_FIRST_NM_AArray
	 */
	public void setPsnFirstNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, psnFirstNm_A, data[j]);
		}
	}

	/**
	 * get  PSN_MID_NM_A.
	 * @param idx1 List Number
	 * @return PSN_MID_NM_A
	 */
	public String getPsnMidNm_A(int idx1) {
		return outputValue(A, idx1, psnMidNm_A);
	}

	/**
	 * set  PSN_MID_NM_A.
	 * @param data PSN_MID_NM_AArray
	 */
	public void setPsnMidNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, psnMidNm_A, data[j]);
		}
	}

	/**
	 * get  PSN_LAST_NM_A.
	 * @param idx1 List Number
	 * @return PSN_LAST_NM_A
	 */
	public String getPsnLastNm_A(int idx1) {
		return outputValue(A, idx1, psnLastNm_A);
	}

	/**
	 * set  PSN_LAST_NM_A.
	 * @param data PSN_LAST_NM_AArray
	 */
	public void setPsnLastNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, psnLastNm_A, data[j]);
		}
	}

	/**
	 * get  XX_REC_NM_TXT_PS.
	 * @param idx1 List Number
	 * @return XX_REC_NM_TXT_PS
	 */
	public String getXxRecNmTxt_PS(int idx1) {
		return outputValue(A, idx1, xxRecNmTxt_PS);
	}

	/**
	 * set  XX_REC_NM_TXT_PS.
	 * @param data XX_REC_NM_TXT_PSArray
	 */
	public void setXxRecNmTxt_PS(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRecNmTxt_PS, data[j]);
		}
	}

}

