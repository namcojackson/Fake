//This file was automatically generated by Business Component Interface Definition Document (Define Business Application Global Area) and XLA200710010.
// Generated on    :20231110100848000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NWAL1500_TSMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NWAL1500;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NWAL1500 Business Application Global Area Message class.
 * @author
 * @version XLA200710010
 */
public class NWAL1500_TSMsg extends EZDSMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** SVC_CONFIG_MSTR_PK_LC*/
	public final EZDSBigDecimalItem              svcConfigMstrPk_LC;

    /** MDL_DESC_TXT_LC*/
	public final EZDSStringItem              mdlDescTxt_LC;

    /** SHIP_TO_CUST_CD_LC*/
	public final EZDSStringItem              shipToCustCd_LC;

    /** SHIP_TO_CUST_ACCT_CD_LC*/
	public final EZDSStringItem              shipToCustAcctCd_LC;

    /** BILL_TO_CUST_CD_LC*/
	public final EZDSStringItem              billToCustCd_LC;

    /** BILL_TO_CUST_ACCT_CD_LC*/
	public final EZDSStringItem              billToCustAcctCd_LC;

    /** MDL_ID_LC*/
	public final EZDSBigDecimalItem              mdlId_LC;

    /** SHIP_TO_LOC_NM_LC*/
	public final EZDSStringItem              shipToLocNm_LC;

    /** SHIP_TO_ADDL_LOC_NM_LC*/
	public final EZDSStringItem              shipToAddlLocNm_LC;

    /** SHIP_TO_FIRST_LINE_ADDR_LC*/
	public final EZDSStringItem              shipToFirstLineAddr_LC;

    /** SHIP_TO_SCD_LINE_ADDR_LC*/
	public final EZDSStringItem              shipToScdLineAddr_LC;

    /** SHIP_TO_THIRD_LINE_ADDR_LC*/
	public final EZDSStringItem              shipToThirdLineAddr_LC;

    /** SHIP_TO_FRTH_LINE_ADDR_LC*/
	public final EZDSStringItem              shipToFrthLineAddr_LC;

    /** SHIP_TO_FIRST_REF_CMNT_TXT_LC*/
	public final EZDSStringItem              shipToFirstRefCmntTxt_LC;

    /** SHIP_TO_SCD_REF_CMNT_TXT_LC*/
	public final EZDSStringItem              shipToScdRefCmntTxt_LC;

    /** SHIP_TO_POST_CD_LC*/
	public final EZDSStringItem              shipToPostCd_LC;

    /** SHIP_TO_CTY_ADDR_LC*/
	public final EZDSStringItem              shipToCtyAddr_LC;

    /** SHIP_TO_ST_CD_LC*/
	public final EZDSStringItem              shipToStCd_LC;

    /** SHIP_TO_PROV_NM_LC*/
	public final EZDSStringItem              shipToProvNm_LC;

    /** SHIP_TO_CTRY_CD_LC*/
	public final EZDSStringItem              shipToCtryCd_LC;

    /** SHIP_TO_CNTY_NM_LC*/
	public final EZDSStringItem              shipToCntyNm_LC;

    /** CSMP_CONTR_NUM_LC*/
	public final EZDSStringItem              csmpContrNum_LC;

    /** XX_IMAGE_TXT_LN*/
	public final EZDSStringItem              xxImageTxt_LN;

    /** DLR_REF_NUM_LC*/
	public final EZDSStringItem              dlrRefNum_LC;

    /** XX_IMAGE_TXT_LD*/
	public final EZDSStringItem              xxImageTxt_LD;

    /** CSMP_PRC_LIST_CD_LC*/
	public final EZDSStringItem              csmpPrcListCd_LC;

    /** PRC_CATG_NM_LC*/
	public final EZDSStringItem              prcCatgNm_LC;


	/**
	 * NWAL1500_TSMsg is constructor.
	 * The initialization when the instance of NWAL1500_TSMsg is generated.
	 */
	public NWAL1500_TSMsg() {
		this(false, -1);
	}

	/**
	 * NWAL1500_TSMsg is constructor.
	 * The initialization when the instance of NWAL1500_TSMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NWAL1500_TSMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		svcConfigMstrPk_LC = (EZDSBigDecimalItem)newItem("svcConfigMstrPk_LC");
		mdlDescTxt_LC = (EZDSStringItem)newItem("mdlDescTxt_LC");
		shipToCustCd_LC = (EZDSStringItem)newItem("shipToCustCd_LC");
		shipToCustAcctCd_LC = (EZDSStringItem)newItem("shipToCustAcctCd_LC");
		billToCustCd_LC = (EZDSStringItem)newItem("billToCustCd_LC");
		billToCustAcctCd_LC = (EZDSStringItem)newItem("billToCustAcctCd_LC");
		mdlId_LC = (EZDSBigDecimalItem)newItem("mdlId_LC");
		shipToLocNm_LC = (EZDSStringItem)newItem("shipToLocNm_LC");
		shipToAddlLocNm_LC = (EZDSStringItem)newItem("shipToAddlLocNm_LC");
		shipToFirstLineAddr_LC = (EZDSStringItem)newItem("shipToFirstLineAddr_LC");
		shipToScdLineAddr_LC = (EZDSStringItem)newItem("shipToScdLineAddr_LC");
		shipToThirdLineAddr_LC = (EZDSStringItem)newItem("shipToThirdLineAddr_LC");
		shipToFrthLineAddr_LC = (EZDSStringItem)newItem("shipToFrthLineAddr_LC");
		shipToFirstRefCmntTxt_LC = (EZDSStringItem)newItem("shipToFirstRefCmntTxt_LC");
		shipToScdRefCmntTxt_LC = (EZDSStringItem)newItem("shipToScdRefCmntTxt_LC");
		shipToPostCd_LC = (EZDSStringItem)newItem("shipToPostCd_LC");
		shipToCtyAddr_LC = (EZDSStringItem)newItem("shipToCtyAddr_LC");
		shipToStCd_LC = (EZDSStringItem)newItem("shipToStCd_LC");
		shipToProvNm_LC = (EZDSStringItem)newItem("shipToProvNm_LC");
		shipToCtryCd_LC = (EZDSStringItem)newItem("shipToCtryCd_LC");
		shipToCntyNm_LC = (EZDSStringItem)newItem("shipToCntyNm_LC");
		csmpContrNum_LC = (EZDSStringItem)newItem("csmpContrNum_LC");
		xxImageTxt_LN = (EZDSStringItem)newItem("xxImageTxt_LN");
		dlrRefNum_LC = (EZDSStringItem)newItem("dlrRefNum_LC");
		xxImageTxt_LD = (EZDSStringItem)newItem("xxImageTxt_LD");
		csmpPrcListCd_LC = (EZDSStringItem)newItem("csmpPrcListCd_LC");
		prcCatgNm_LC = (EZDSStringItem)newItem("prcCatgNm_LC");
	}

	/**
	 * get the type of array which is stored
	 * @return NWAL1500_TSMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NWAL1500_TSMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"svcConfigMstrPk_LC", "svcConfigMstrPk_LC", "LC", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"mdlDescTxt_LC", "mdlDescTxt_LC", "LC", null, TYPE_HANKAKUEISU, "90", null},
	{"shipToCustCd_LC", "shipToCustCd_LC", "LC", null, TYPE_HANKAKUEISU, "20", null},
	{"shipToCustAcctCd_LC", "shipToCustAcctCd_LC", "LC", null, TYPE_HANKAKUEISU, "20", null},
	{"billToCustCd_LC", "billToCustCd_LC", "LC", null, TYPE_HANKAKUEISU, "20", null},
	{"billToCustAcctCd_LC", "billToCustAcctCd_LC", "LC", null, TYPE_HANKAKUEISU, "20", null},
	{"mdlId_LC", "mdlId_LC", "LC", null, TYPE_SEISU_SYOSU, "22", "0"},
	{"shipToLocNm_LC", "shipToLocNm_LC", "LC", null, TYPE_HANKAKUEISU, "60", null},
	{"shipToAddlLocNm_LC", "shipToAddlLocNm_LC", "LC", null, TYPE_HANKAKUEISU, "60", null},
	{"shipToFirstLineAddr_LC", "shipToFirstLineAddr_LC", "LC", null, TYPE_HANKAKUEISU, "60", null},
	{"shipToScdLineAddr_LC", "shipToScdLineAddr_LC", "LC", null, TYPE_HANKAKUEISU, "60", null},
	{"shipToThirdLineAddr_LC", "shipToThirdLineAddr_LC", "LC", null, TYPE_HANKAKUEISU, "60", null},
	{"shipToFrthLineAddr_LC", "shipToFrthLineAddr_LC", "LC", null, TYPE_HANKAKUEISU, "60", null},
	{"shipToFirstRefCmntTxt_LC", "shipToFirstRefCmntTxt_LC", "LC", null, TYPE_HANKAKUEISU, "90", null},
	{"shipToScdRefCmntTxt_LC", "shipToScdRefCmntTxt_LC", "LC", null, TYPE_HANKAKUEISU, "90", null},
	{"shipToPostCd_LC", "shipToPostCd_LC", "LC", null, TYPE_HANKAKUEISU, "15", null},
	{"shipToCtyAddr_LC", "shipToCtyAddr_LC", "LC", null, TYPE_HANKAKUEISU, "25", null},
	{"shipToStCd_LC", "shipToStCd_LC", "LC", null, TYPE_HANKAKUEISU, "2", null},
	{"shipToProvNm_LC", "shipToProvNm_LC", "LC", null, TYPE_HANKAKUEISU, "25", null},
	{"shipToCtryCd_LC", "shipToCtryCd_LC", "LC", null, TYPE_HANKAKUEISU, "3", null},
	{"shipToCntyNm_LC", "shipToCntyNm_LC", "LC", null, TYPE_HANKAKUEISU, "30", null},
	{"csmpContrNum_LC", "csmpContrNum_LC", "LC", null, TYPE_HANKAKUEISU, "15", null},
	{"xxImageTxt_LN", "xxImageTxt_LN", "LN", null, TYPE_HANKAKUEISU, "1", null},
	{"dlrRefNum_LC", "dlrRefNum_LC", "LC", null, TYPE_HANKAKUEISU, "20", null},
	{"xxImageTxt_LD", "xxImageTxt_LD", "LD", null, TYPE_HANKAKUEISU, "1", null},
	{"csmpPrcListCd_LC", "csmpPrcListCd_LC", "LC", null, TYPE_HANKAKUEISU, "10", null},
	{"prcCatgNm_LC", "prcCatgNm_LC", "LC", null, TYPE_HANKAKUEISU, "75", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"SVC_CONFIG_MSTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcConfigMstrPk_LC
        {"MDL_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdlDescTxt_LC
        {"SHIP_TO_CUST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToCustCd_LC
        {"SHIP_TO_CUST_ACCT_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToCustAcctCd_LC
        {"BILL_TO_CUST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//billToCustCd_LC
        {"BILL_TO_CUST_ACCT_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//billToCustAcctCd_LC
        {"MDL_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdlId_LC
        {"SHIP_TO_LOC_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToLocNm_LC
        {"SHIP_TO_ADDL_LOC_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToAddlLocNm_LC
        {"SHIP_TO_FIRST_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToFirstLineAddr_LC
        {"SHIP_TO_SCD_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToScdLineAddr_LC
        {"SHIP_TO_THIRD_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToThirdLineAddr_LC
        {"SHIP_TO_FRTH_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToFrthLineAddr_LC
        {"SHIP_TO_FIRST_REF_CMNT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToFirstRefCmntTxt_LC
        {"SHIP_TO_SCD_REF_CMNT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToScdRefCmntTxt_LC
        {"SHIP_TO_POST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToPostCd_LC
        {"SHIP_TO_CTY_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToCtyAddr_LC
        {"SHIP_TO_ST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToStCd_LC
        {"SHIP_TO_PROV_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToProvNm_LC
        {"SHIP_TO_CTRY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToCtryCd_LC
        {"SHIP_TO_CNTY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToCntyNm_LC
        {"CSMP_CONTR_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//csmpContrNum_LC
        {"XX_IMAGE_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxImageTxt_LN
        {"DLR_REF_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dlrRefNum_LC
        {"XX_IMAGE_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxImageTxt_LD
        {"CSMP_PRC_LIST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//csmpPrcListCd_LC
        {"PRC_CATG_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCatgNm_LC
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

    // Fast Save
    private static String[] EXT_DETAILS = new String[0];
    private static String[] EXT_ARRAYS = new String[0];

    private static String[] SER_KEY = new String[0];
    private static Integer[] SER_TYPE = new Integer[0];

    static protected HashMap<String, Integer> convAttrType = new HashMap<String, Integer>();

    static {
        for (int[] mapTable :EZDItemAttrDefines.TYPE_MAP_TABLE) {
            convAttrType.put(String.valueOf(mapTable[0]), mapTable[1]);
        }
    }

    static {
        List<String> listDetail = new ArrayList<String>();
        List<String> listArrays = new ArrayList<String>();

        List<String> listSerKey = new ArrayList<String>();
        List<Integer> listSerType = new ArrayList<Integer>();

        for (String[] contents : BASE_CONTENTS) {
            if (contents[3] != null) {
                try {
                    Integer.parseInt(contents[4]);
                    listArrays.add(contents[0]);
                } catch (NumberFormatException e) {
                    listDetail.add(contents[0]);
                }
            } else {
                String ezdType = contents[4];
                Integer javaTYype = ezdType2JavaType(ezdType);
                listSerKey.add(contents[0]);
                listSerType.add(javaTYype);
            }
        }
        if (!listArrays.isEmpty()) {
            EXT_ARRAYS = (String[]) listArrays.toArray(new String[listArrays.size()]);
        }
        if (!listDetail.isEmpty()) {
            EXT_DETAILS = (String[]) listDetail.toArray(new String[listDetail.size()]);
        }

        if (!listSerKey.isEmpty()) {
            SER_KEY = (String[]) listSerKey.toArray(new String[listSerKey.size()]);
        }
        if (!listSerType.isEmpty()) {
            SER_TYPE = (Integer[]) listSerType.toArray(new Integer[listSerType.size()]);
        }
    }

    protected boolean isFastWriteObject() {
        return true;
    }

    protected String[] getDetails() {
        return EXT_DETAILS;
    }

    protected String[] getArrays() {
        return EXT_ARRAYS;
    }

    protected String[] getSerKey() {
        return SER_KEY;
    }

    protected Integer[] getSerType() {
        return SER_TYPE;
    }

    static protected int ezdType2JavaType(String val) {
    	return convAttrType.get(val);
    }
    // Fast Save
}

