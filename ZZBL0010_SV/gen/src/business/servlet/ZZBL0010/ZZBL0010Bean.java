// This file was automatically generated by Screen Field Definition Document and XLA200710010
// Generated on    :20140618165257000
// Velocity Macro:svltdatabean.vm V200604010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *ZZBL0010Bean.java Copyright FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */

package  business.servlet.ZZBL0010;

import parts.servletcommon.EZDCommonDataBean;

/*
 * ZZBL0010 is data bean class.
 */
public class ZZBL0010Bean extends EZDCommonDataBean {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	//Constant Definition Area
	/** XX_SCR_NM*/
	public static final String xxScrNm = "xxScrNm";

	/** BAT_PROC_LOG_PK*/
	public static final String batProcLogPk = "batProcLogPk";

	/** GLBL_CMPY_CD*/
	public static final String glblCmpyCd = "glblCmpyCd";

	/** BAT_PROC_SUB_SYS_CD*/
	public static final String batProcSubSysCd = "batProcSubSysCd";

	/** BAT_PROC_JBNT_ID*/
	public static final String batProcJbntId = "batProcJbntId";

	/** BAT_PROC_JOB_ID*/
	public static final String batProcJobId = "batProcJobId";

	/** BAT_PROC_PGM_ID*/
	public static final String batProcPgmId = "batProcPgmId";

	/** BAT_PROC_TRM_CD*/
	public static final String batProcTrmCd = "batProcTrmCd";

	/** BAT_PROC_TRM_CD_DP*/
	public static final String batProcTrmCd_DP = "batProcTrmCd_DP";

	/** XX_BAT_PROC_TRM_NM_DP*/
	public static final String xxBatProcTrmNm_DP = "xxBatProcTrmNm_DP";

	/** EFF_FROM_DT*/
	public static final String effFromDt = "effFromDt";

	/** EFF_TO_DT*/
	public static final String effToDt = "effToDt";

	/** XX_PAGE_SHOW_FROM_NUM*/
	public static final String xxPageShowFromNum = "xxPageShowFromNum";

	/** XX_PAGE_SHOW_TO_NUM*/
	public static final String xxPageShowToNum = "xxPageShowToNum";

	/** XX_PAGE_SHOW_OF_NUM*/
	public static final String xxPageShowOfNum = "xxPageShowOfNum";

	/** XX_SORT_TBL_NM*/
	public static final String xxSortTblNm = "xxSortTblNm";

	/** XX_SORT_ITEM_NM*/
	public static final String xxSortItemNm = "xxSortItemNm";

	/** XX_SORT_ORD_BY_TXT*/
	public static final String xxSortOrdByTxt = "xxSortOrdByTxt";

	/** A*/
	public static final String A = "A";

	/** XX_ROW_NUM_A*/
	public static final String xxRowNum_A = "xxRowNum_A";

	/** BAT_PROC_LOG_PK_A*/
	public static final String batProcLogPk_A = "batProcLogPk_A";

	/** GLBL_CMPY_CD_A*/
	public static final String glblCmpyCd_A = "glblCmpyCd_A";

	/** BAT_PROC_SUB_SYS_CD_A*/
	public static final String batProcSubSysCd_A = "batProcSubSysCd_A";

	/** BAT_PROC_JBNT_ID_A*/
	public static final String batProcJbntId_A = "batProcJbntId_A";

	/** BAT_PROC_JOB_ID_A*/
	public static final String batProcJobId_A = "batProcJobId_A";

	/** BAT_PROC_PGM_ID_A*/
	public static final String batProcPgmId_A = "batProcPgmId_A";

	/** BAT_PROC_HOST_NM_A*/
	public static final String batProcHostNm_A = "batProcHostNm_A";

	/** XX_BAT_PROC_TRM_NM_A*/
	public static final String xxBatProcTrmNm_A = "xxBatProcTrmNm_A";

	/** XX_DT_TM_ST*/
	public static final String xxDtTm_ST = "xxDtTm_ST";

	/** BAT_PROC_START_TZ_A*/
	public static final String batProcStartTz_A = "batProcStartTz_A";

	/** XX_DT_TM_EN*/
	public static final String xxDtTm_EN = "xxDtTm_EN";

	/** BAT_PROC_END_TZ_A*/
	public static final String batProcEndTz_A = "batProcEndTz_A";

	/** BAT_PROC_TM_CNT_A*/
	public static final String batProcTmCnt_A = "batProcTmCnt_A";

	/** BAT_PROC_JOB_LOG_PATH_NM_A*/
	public static final String batProcJobLogPathNm_A = "batProcJobLogPathNm_A";

	/** BAT_PROC_NORM_REC_CNT_A*/
	public static final String batProcNormRecCnt_A = "batProcNormRecCnt_A";

	/** BAT_PROC_ERR_REC_CNT_A*/
	public static final String batProcErrRecCnt_A = "batProcErrRecCnt_A";

	/** BAT_PROC_TOT_REC_CNT_A*/
	public static final String batProcTotRecCnt_A = "batProcTotRecCnt_A";

	/** BAT_PROC_DEAD_LOCK_RTRY_CNT_A*/
	public static final String batProcDeadLockRtryCnt_A = "batProcDeadLockRtryCnt_A";

	/** BAT_PROC_REC_LOCK_RTRY_CNT_A*/
	public static final String batProcRecLockRtryCnt_A = "batProcRecLockRtryCnt_A";

	/**
	 * Method name:ZZBL0010 is Bean's Constructor.
	 * <dd>method explanation:Initialization when instance of ZZBL0010Bean is generated
	 * <dd>Remarks:
	 */
	public ZZBL0010Bean() {
		super("business.servlet.ZZBL0010.ZZBL0010BMsg");
	}

	/**
	 * get  XX_SCR_NM.
	 * @return XX_SCR_NM
	 */
	public String getXxScrNm() {
		return outputValue(xxScrNm);
	}

	/**
	 * set  XX_SCR_NM.
	 * @param data XX_SCR_NM
	 */
	public void setXxScrNm(String data) {
		inputValue(xxScrNm,data);
	}

	/**
	 * get  BAT_PROC_LOG_PK.
	 * @return BAT_PROC_LOG_PK
	 */
	public String getBatProcLogPk() {
		return outputValue(batProcLogPk);
	}

	/**
	 * set  BAT_PROC_LOG_PK.
	 * @param data BAT_PROC_LOG_PK
	 */
	public void setBatProcLogPk(String data) {
		inputValue(batProcLogPk,data);
	}

	/**
	 * get  GLBL_CMPY_CD.
	 * @return GLBL_CMPY_CD
	 */
	public String getGlblCmpyCd() {
		return outputValue(glblCmpyCd);
	}

	/**
	 * set  GLBL_CMPY_CD.
	 * @param data GLBL_CMPY_CD
	 */
	public void setGlblCmpyCd(String data) {
		inputValue(glblCmpyCd,data);
	}

	/**
	 * get  BAT_PROC_SUB_SYS_CD.
	 * @return BAT_PROC_SUB_SYS_CD
	 */
	public String getBatProcSubSysCd() {
		return outputValue(batProcSubSysCd);
	}

	/**
	 * set  BAT_PROC_SUB_SYS_CD.
	 * @param data BAT_PROC_SUB_SYS_CD
	 */
	public void setBatProcSubSysCd(String data) {
		inputValue(batProcSubSysCd,data);
	}

	/**
	 * get  BAT_PROC_JBNT_ID.
	 * @return BAT_PROC_JBNT_ID
	 */
	public String getBatProcJbntId() {
		return outputValue(batProcJbntId);
	}

	/**
	 * set  BAT_PROC_JBNT_ID.
	 * @param data BAT_PROC_JBNT_ID
	 */
	public void setBatProcJbntId(String data) {
		inputValue(batProcJbntId,data);
	}

	/**
	 * get  BAT_PROC_JOB_ID.
	 * @return BAT_PROC_JOB_ID
	 */
	public String getBatProcJobId() {
		return outputValue(batProcJobId);
	}

	/**
	 * set  BAT_PROC_JOB_ID.
	 * @param data BAT_PROC_JOB_ID
	 */
	public void setBatProcJobId(String data) {
		inputValue(batProcJobId,data);
	}

	/**
	 * get  BAT_PROC_PGM_ID.
	 * @return BAT_PROC_PGM_ID
	 */
	public String getBatProcPgmId() {
		return outputValue(batProcPgmId);
	}

	/**
	 * set  BAT_PROC_PGM_ID.
	 * @param data BAT_PROC_PGM_ID
	 */
	public void setBatProcPgmId(String data) {
		inputValue(batProcPgmId,data);
	}

	/**
	 * get  BAT_PROC_TRM_CD.
	 * @return BAT_PROC_TRM_CD
	 */
	public String getBatProcTrmCd() {
		return outputValue(batProcTrmCd);
	}

	/**
	 * set  BAT_PROC_TRM_CD.
	 * @param data BAT_PROC_TRM_CD
	 */
	public void setBatProcTrmCd(String data) {
		inputValue(batProcTrmCd,data);
	}

	/**
	 * get  BAT_PROC_TRM_CD_DP.
	 * @param idx1 Index Number
	 * @return BAT_PROC_TRM_CD_DP
	 */
	public String getBatProcTrmCd_DP(int idx1) {
	 	 return outputValue(batProcTrmCd_DP, idx1);
	}

	/**
	 * get  XX_BAT_PROC_TRM_NM_DP.
	 * @param idx1 Index Number
	 * @return XX_BAT_PROC_TRM_NM_DP
	 */
	public String getXxBatProcTrmNm_DP(int idx1) {
	 	 return outputValue(xxBatProcTrmNm_DP, idx1);
	}

	/**
	 * get  EFF_FROM_DT.
	 * @return EFF_FROM_DT
	 */
	public String getEffFromDt() {
		return outputValue(effFromDt, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  EFF_FROM_DT.
	 * @param data EFF_FROM_DT
	 */
	public void setEffFromDt(String data) {
		inputValue(effFromDt, data, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * get  EFF_TO_DT.
	 * @return EFF_TO_DT
	 */
	public String getEffToDt() {
		return outputValue(effToDt, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  EFF_TO_DT.
	 * @param data EFF_TO_DT
	 */
	public void setEffToDt(String data) {
		inputValue(effToDt, data, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * get  XX_PAGE_SHOW_FROM_NUM.
	 * @return XX_PAGE_SHOW_FROM_NUM
	 */
	public String getXxPageShowFromNum() {
		return outputValue(xxPageShowFromNum);
	}

	/**
	 * set  XX_PAGE_SHOW_FROM_NUM.
	 * @param data XX_PAGE_SHOW_FROM_NUM
	 */
	public void setXxPageShowFromNum(String data) {
		inputValue(xxPageShowFromNum,data);
	}

	/**
	 * get  XX_PAGE_SHOW_TO_NUM.
	 * @return XX_PAGE_SHOW_TO_NUM
	 */
	public String getXxPageShowToNum() {
		return outputValue(xxPageShowToNum);
	}

	/**
	 * set  XX_PAGE_SHOW_TO_NUM.
	 * @param data XX_PAGE_SHOW_TO_NUM
	 */
	public void setXxPageShowToNum(String data) {
		inputValue(xxPageShowToNum,data);
	}

	/**
	 * get  XX_PAGE_SHOW_OF_NUM.
	 * @return XX_PAGE_SHOW_OF_NUM
	 */
	public String getXxPageShowOfNum() {
		return outputValue(xxPageShowOfNum);
	}

	/**
	 * set  XX_PAGE_SHOW_OF_NUM.
	 * @param data XX_PAGE_SHOW_OF_NUM
	 */
	public void setXxPageShowOfNum(String data) {
		inputValue(xxPageShowOfNum,data);
	}

	/**
	 * get  XX_SORT_TBL_NM.
	 * @return XX_SORT_TBL_NM
	 */
	public String getXxSortTblNm() {
		return outputValue(xxSortTblNm);
	}

	/**
	 * set  XX_SORT_TBL_NM.
	 * @param data XX_SORT_TBL_NM
	 */
	public void setXxSortTblNm(String data) {
		inputValue(xxSortTblNm,data);
	}

	/**
	 * get  XX_SORT_ITEM_NM.
	 * @return XX_SORT_ITEM_NM
	 */
	public String getXxSortItemNm() {
		return outputValue(xxSortItemNm);
	}

	/**
	 * set  XX_SORT_ITEM_NM.
	 * @param data XX_SORT_ITEM_NM
	 */
	public void setXxSortItemNm(String data) {
		inputValue(xxSortItemNm,data);
	}

	/**
	 * get  XX_SORT_ORD_BY_TXT.
	 * @return XX_SORT_ORD_BY_TXT
	 */
	public String getXxSortOrdByTxt() {
		return outputValue(xxSortOrdByTxt);
	}

	/**
	 * set  XX_SORT_ORD_BY_TXT.
	 * @param data XX_SORT_ORD_BY_TXT
	 */
	public void setXxSortOrdByTxt(String data) {
		inputValue(xxSortOrdByTxt,data);
	}

	/**
	 * get  XX_ROW_NUM_A.
	 * @param idx1 List Number
	 * @return XX_ROW_NUM_A
	 */
	public String getXxRowNum_A(int idx1) {
		return outputValue(A, idx1, xxRowNum_A);
	}

	/**
	 * set  XX_ROW_NUM_A.
	 * @param data XX_ROW_NUM_AArray
	 */
	public void setXxRowNum_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRowNum_A, data[j]);
		}
	}

	/**
	 * get  BAT_PROC_LOG_PK_A.
	 * @param idx1 List Number
	 * @return BAT_PROC_LOG_PK_A
	 */
	public String getBatProcLogPk_A(int idx1) {
		return outputValue(A, idx1, batProcLogPk_A);
	}

	/**
	 * set  BAT_PROC_LOG_PK_A.
	 * @param data BAT_PROC_LOG_PK_AArray
	 */
	public void setBatProcLogPk_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, batProcLogPk_A, data[j]);
		}
	}

	/**
	 * get  GLBL_CMPY_CD_A.
	 * @param idx1 List Number
	 * @return GLBL_CMPY_CD_A
	 */
	public String getGlblCmpyCd_A(int idx1) {
		return outputValue(A, idx1, glblCmpyCd_A);
	}

	/**
	 * set  GLBL_CMPY_CD_A.
	 * @param data GLBL_CMPY_CD_AArray
	 */
	public void setGlblCmpyCd_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, glblCmpyCd_A, data[j]);
		}
	}

	/**
	 * get  BAT_PROC_SUB_SYS_CD_A.
	 * @param idx1 List Number
	 * @return BAT_PROC_SUB_SYS_CD_A
	 */
	public String getBatProcSubSysCd_A(int idx1) {
		return outputValue(A, idx1, batProcSubSysCd_A);
	}

	/**
	 * set  BAT_PROC_SUB_SYS_CD_A.
	 * @param data BAT_PROC_SUB_SYS_CD_AArray
	 */
	public void setBatProcSubSysCd_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, batProcSubSysCd_A, data[j]);
		}
	}

	/**
	 * get  BAT_PROC_JBNT_ID_A.
	 * @param idx1 List Number
	 * @return BAT_PROC_JBNT_ID_A
	 */
	public String getBatProcJbntId_A(int idx1) {
		return outputValue(A, idx1, batProcJbntId_A);
	}

	/**
	 * set  BAT_PROC_JBNT_ID_A.
	 * @param data BAT_PROC_JBNT_ID_AArray
	 */
	public void setBatProcJbntId_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, batProcJbntId_A, data[j]);
		}
	}

	/**
	 * get  BAT_PROC_JOB_ID_A.
	 * @param idx1 List Number
	 * @return BAT_PROC_JOB_ID_A
	 */
	public String getBatProcJobId_A(int idx1) {
		return outputValue(A, idx1, batProcJobId_A);
	}

	/**
	 * set  BAT_PROC_JOB_ID_A.
	 * @param data BAT_PROC_JOB_ID_AArray
	 */
	public void setBatProcJobId_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, batProcJobId_A, data[j]);
		}
	}

	/**
	 * get  BAT_PROC_PGM_ID_A.
	 * @param idx1 List Number
	 * @return BAT_PROC_PGM_ID_A
	 */
	public String getBatProcPgmId_A(int idx1) {
		return outputValue(A, idx1, batProcPgmId_A);
	}

	/**
	 * set  BAT_PROC_PGM_ID_A.
	 * @param data BAT_PROC_PGM_ID_AArray
	 */
	public void setBatProcPgmId_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, batProcPgmId_A, data[j]);
		}
	}

	/**
	 * get  BAT_PROC_HOST_NM_A.
	 * @param idx1 List Number
	 * @return BAT_PROC_HOST_NM_A
	 */
	public String getBatProcHostNm_A(int idx1) {
		return outputValue(A, idx1, batProcHostNm_A);
	}

	/**
	 * set  BAT_PROC_HOST_NM_A.
	 * @param data BAT_PROC_HOST_NM_AArray
	 */
	public void setBatProcHostNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, batProcHostNm_A, data[j]);
		}
	}

	/**
	 * get  XX_BAT_PROC_TRM_NM_A.
	 * @param idx1 List Number
	 * @return XX_BAT_PROC_TRM_NM_A
	 */
	public String getXxBatProcTrmNm_A(int idx1) {
		return outputValue(A, idx1, xxBatProcTrmNm_A);
	}

	/**
	 * set  XX_BAT_PROC_TRM_NM_A.
	 * @param data XX_BAT_PROC_TRM_NM_AArray
	 */
	public void setXxBatProcTrmNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxBatProcTrmNm_A, data[j]);
		}
	}

	/**
	 * get  XX_DT_TM_ST.
	 * @param idx1 List Number
	 * @return XX_DT_TM_ST
	 */
	public String getXxDtTm_ST(int idx1) {
		return outputValue(A, idx1, xxDtTm_ST);
	}

	/**
	 * set  XX_DT_TM_ST.
	 * @param data XX_DT_TM_STArray
	 */
	public void setXxDtTm_ST(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxDtTm_ST, data[j]);
		}
	}

	/**
	 * get  BAT_PROC_START_TZ_A.
	 * @param idx1 List Number
	 * @return BAT_PROC_START_TZ_A
	 */
	public String getBatProcStartTz_A(int idx1) {
		return outputValue(A, idx1, batProcStartTz_A);
	}

	/**
	 * set  BAT_PROC_START_TZ_A.
	 * @param data BAT_PROC_START_TZ_AArray
	 */
	public void setBatProcStartTz_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, batProcStartTz_A, data[j]);
		}
	}

	/**
	 * get  XX_DT_TM_EN.
	 * @param idx1 List Number
	 * @return XX_DT_TM_EN
	 */
	public String getXxDtTm_EN(int idx1) {
		return outputValue(A, idx1, xxDtTm_EN);
	}

	/**
	 * set  XX_DT_TM_EN.
	 * @param data XX_DT_TM_ENArray
	 */
	public void setXxDtTm_EN(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxDtTm_EN, data[j]);
		}
	}

	/**
	 * get  BAT_PROC_END_TZ_A.
	 * @param idx1 List Number
	 * @return BAT_PROC_END_TZ_A
	 */
	public String getBatProcEndTz_A(int idx1) {
		return outputValue(A, idx1, batProcEndTz_A);
	}

	/**
	 * set  BAT_PROC_END_TZ_A.
	 * @param data BAT_PROC_END_TZ_AArray
	 */
	public void setBatProcEndTz_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, batProcEndTz_A, data[j]);
		}
	}

	/**
	 * get  BAT_PROC_TM_CNT_A.
	 * @param idx1 List Number
	 * @return BAT_PROC_TM_CNT_A
	 */
	public String getBatProcTmCnt_A(int idx1) {
		return outputValue(A, idx1, batProcTmCnt_A);
	}

	/**
	 * set  BAT_PROC_TM_CNT_A.
	 * @param data BAT_PROC_TM_CNT_AArray
	 */
	public void setBatProcTmCnt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, batProcTmCnt_A, data[j]);
		}
	}

	/**
	 * get  BAT_PROC_JOB_LOG_PATH_NM_A.
	 * @param idx1 List Number
	 * @return BAT_PROC_JOB_LOG_PATH_NM_A
	 */
	public String getBatProcJobLogPathNm_A(int idx1) {
		return outputValue(A, idx1, batProcJobLogPathNm_A);
	}

	/**
	 * set  BAT_PROC_JOB_LOG_PATH_NM_A.
	 * @param data BAT_PROC_JOB_LOG_PATH_NM_AArray
	 */
	public void setBatProcJobLogPathNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, batProcJobLogPathNm_A, data[j]);
		}
	}

	/**
	 * get  BAT_PROC_NORM_REC_CNT_A.
	 * @param idx1 List Number
	 * @return BAT_PROC_NORM_REC_CNT_A
	 */
	public String getBatProcNormRecCnt_A(int idx1) {
		return outputValue(A, idx1, batProcNormRecCnt_A);
	}

	/**
	 * set  BAT_PROC_NORM_REC_CNT_A.
	 * @param data BAT_PROC_NORM_REC_CNT_AArray
	 */
	public void setBatProcNormRecCnt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, batProcNormRecCnt_A, data[j]);
		}
	}

	/**
	 * get  BAT_PROC_ERR_REC_CNT_A.
	 * @param idx1 List Number
	 * @return BAT_PROC_ERR_REC_CNT_A
	 */
	public String getBatProcErrRecCnt_A(int idx1) {
		return outputValue(A, idx1, batProcErrRecCnt_A);
	}

	/**
	 * set  BAT_PROC_ERR_REC_CNT_A.
	 * @param data BAT_PROC_ERR_REC_CNT_AArray
	 */
	public void setBatProcErrRecCnt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, batProcErrRecCnt_A, data[j]);
		}
	}

	/**
	 * get  BAT_PROC_TOT_REC_CNT_A.
	 * @param idx1 List Number
	 * @return BAT_PROC_TOT_REC_CNT_A
	 */
	public String getBatProcTotRecCnt_A(int idx1) {
		return outputValue(A, idx1, batProcTotRecCnt_A);
	}

	/**
	 * set  BAT_PROC_TOT_REC_CNT_A.
	 * @param data BAT_PROC_TOT_REC_CNT_AArray
	 */
	public void setBatProcTotRecCnt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, batProcTotRecCnt_A, data[j]);
		}
	}

	/**
	 * get  BAT_PROC_DEAD_LOCK_RTRY_CNT_A.
	 * @param idx1 List Number
	 * @return BAT_PROC_DEAD_LOCK_RTRY_CNT_A
	 */
	public String getBatProcDeadLockRtryCnt_A(int idx1) {
		return outputValue(A, idx1, batProcDeadLockRtryCnt_A);
	}

	/**
	 * set  BAT_PROC_DEAD_LOCK_RTRY_CNT_A.
	 * @param data BAT_PROC_DEAD_LOCK_RTRY_CNT_AArray
	 */
	public void setBatProcDeadLockRtryCnt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, batProcDeadLockRtryCnt_A, data[j]);
		}
	}

	/**
	 * get  BAT_PROC_REC_LOCK_RTRY_CNT_A.
	 * @param idx1 List Number
	 * @return BAT_PROC_REC_LOCK_RTRY_CNT_A
	 */
	public String getBatProcRecLockRtryCnt_A(int idx1) {
		return outputValue(A, idx1, batProcRecLockRtryCnt_A);
	}

	/**
	 * set  BAT_PROC_REC_LOCK_RTRY_CNT_A.
	 * @param data BAT_PROC_REC_LOCK_RTRY_CNT_AArray
	 */
	public void setBatProcRecLockRtryCnt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, batProcRecLockRtryCnt_A, data[j]);
		}
	}

}

