//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20190124132522000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0740CMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NSAL0740;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL0740 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL0740CMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** GLBL_CMPY_CD*/
	public final EZDCStringItem              glblCmpyCd;

    /** CONTR_UPLFT_TP_CD_H1*/
	public final EZDCStringItemArray              contrUplftTpCd_H1;

    /** CONTR_UPLFT_TP_NM_H2*/
	public final EZDCStringItemArray              contrUplftTpNm_H2;

    /** CONTR_UPLFT_TP_CD_H3*/
	public final EZDCStringItem              contrUplftTpCd_H3;

    /** UPLFT_BASE_FLG_H1*/
	public final EZDCStringItem              uplftBaseFlg_H1;

    /** UPLFT_USG_FLG_H1*/
	public final EZDCStringItem              uplftUsgFlg_H1;

    /** UPLFT_PRC_METH_CD_H1*/
	public final EZDCStringItemArray              uplftPrcMethCd_H1;

    /** UPLFT_PRC_METH_NM_H2*/
	public final EZDCStringItemArray              uplftPrcMethNm_H2;

    /** UPLFT_PRC_METH_CD_H3*/
	public final EZDCStringItem              uplftPrcMethCd_H3;

    /** UPLFT_BASE_PRC_UP_RATIO_H1*/
	public final EZDCBigDecimalItem              uplftBasePrcUpRatio_H1;

    /** UPLFT_MTR_PRC_UP_RATIO_H1*/
	public final EZDCBigDecimalItem              uplftMtrPrcUpRatio_H1;

    /** BEF_END_UPLFT_DAYS_AOT_H1*/
	public final EZDCBigDecimalItem              befEndUplftDaysAot_H1;

    /** SVC_MEMO_RSN_CD_H1*/
	public final EZDCStringItemArray              svcMemoRsnCd_H1;

    /** SVC_MEMO_RSN_NM_H2*/
	public final EZDCStringItemArray              svcMemoRsnNm_H2;

    /** SVC_MEMO_RSN_CD_H3*/
	public final EZDCStringItem              svcMemoRsnCd_H3;

    /** SVC_CMNT_TXT_H1*/
	public final EZDCStringItem              svcCmntTxt_H1;

    /** XX_CHK_BOX_X1*/
	public final EZDCStringItem              xxChkBox_X1;

    /** XX_CHK_BOX_X2*/
	public final EZDCStringItem              xxChkBox_X2;

    /** XX_ROW_NUM*/
	public final EZDCBigDecimalItem              xxRowNum;

    /** XX_PAGE_SHOW_FROM_NUM*/
	public final EZDCBigDecimalItem              xxPageShowFromNum;

    /** XX_PAGE_SHOW_TO_NUM*/
	public final EZDCBigDecimalItem              xxPageShowToNum;

    /** XX_PAGE_SHOW_OF_NUM*/
	public final EZDCBigDecimalItem              xxPageShowOfNum;

    /** A*/
	public final business.blap.NSAL0740.NSAL0740_ACMsgArray              A;

    /** P*/
	public final business.blap.NSAL0740.NSAL0740_PCMsgArray              P;


	/**
	 * NSAL0740CMsg is constructor.
	 * The initialization when the instance of NSAL0740CMsg is generated.
	 */
	public NSAL0740CMsg() {
		this(false, -1);
	}

	/**
	 * NSAL0740CMsg is constructor.
	 * The initialization when the instance of NSAL0740CMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL0740CMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		glblCmpyCd = (EZDCStringItem)newItem("glblCmpyCd");
		contrUplftTpCd_H1 = (EZDCStringItemArray)newItemArray("contrUplftTpCd_H1");
		contrUplftTpNm_H2 = (EZDCStringItemArray)newItemArray("contrUplftTpNm_H2");
		contrUplftTpCd_H3 = (EZDCStringItem)newItem("contrUplftTpCd_H3");
		uplftBaseFlg_H1 = (EZDCStringItem)newItem("uplftBaseFlg_H1");
		uplftUsgFlg_H1 = (EZDCStringItem)newItem("uplftUsgFlg_H1");
		uplftPrcMethCd_H1 = (EZDCStringItemArray)newItemArray("uplftPrcMethCd_H1");
		uplftPrcMethNm_H2 = (EZDCStringItemArray)newItemArray("uplftPrcMethNm_H2");
		uplftPrcMethCd_H3 = (EZDCStringItem)newItem("uplftPrcMethCd_H3");
		uplftBasePrcUpRatio_H1 = (EZDCBigDecimalItem)newItem("uplftBasePrcUpRatio_H1");
		uplftMtrPrcUpRatio_H1 = (EZDCBigDecimalItem)newItem("uplftMtrPrcUpRatio_H1");
		befEndUplftDaysAot_H1 = (EZDCBigDecimalItem)newItem("befEndUplftDaysAot_H1");
		svcMemoRsnCd_H1 = (EZDCStringItemArray)newItemArray("svcMemoRsnCd_H1");
		svcMemoRsnNm_H2 = (EZDCStringItemArray)newItemArray("svcMemoRsnNm_H2");
		svcMemoRsnCd_H3 = (EZDCStringItem)newItem("svcMemoRsnCd_H3");
		svcCmntTxt_H1 = (EZDCStringItem)newItem("svcCmntTxt_H1");
		xxChkBox_X1 = (EZDCStringItem)newItem("xxChkBox_X1");
		xxChkBox_X2 = (EZDCStringItem)newItem("xxChkBox_X2");
		xxRowNum = (EZDCBigDecimalItem)newItem("xxRowNum");
		xxPageShowFromNum = (EZDCBigDecimalItem)newItem("xxPageShowFromNum");
		xxPageShowToNum = (EZDCBigDecimalItem)newItem("xxPageShowToNum");
		xxPageShowOfNum = (EZDCBigDecimalItem)newItem("xxPageShowOfNum");
		A = (business.blap.NSAL0740.NSAL0740_ACMsgArray)newMsgArray("A");
		P = (business.blap.NSAL0740.NSAL0740_PCMsgArray)newMsgArray("P");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL0740CMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL0740CMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"glblCmpyCd", "glblCmpyCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"contrUplftTpCd_H1", "contrUplftTpCd_H1", "H1", "99", TYPE_HANKAKUEISU, "2", null},
	{"contrUplftTpNm_H2", "contrUplftTpNm_H2", "H2", "99", TYPE_HANKAKUEISU, "30", null},
	{"contrUplftTpCd_H3", "contrUplftTpCd_H3", "H3", null, TYPE_HANKAKUEISU, "2", null},
	{"uplftBaseFlg_H1", "uplftBaseFlg_H1", "H1", null, TYPE_HANKAKUEISU, "1", null},
	{"uplftUsgFlg_H1", "uplftUsgFlg_H1", "H1", null, TYPE_HANKAKUEISU, "1", null},
	{"uplftPrcMethCd_H1", "uplftPrcMethCd_H1", "H1", "99", TYPE_HANKAKUEISU, "2", null},
	{"uplftPrcMethNm_H2", "uplftPrcMethNm_H2", "H2", "99", TYPE_HANKAKUEISU, "30", null},
	{"uplftPrcMethCd_H3", "uplftPrcMethCd_H3", "H3", null, TYPE_HANKAKUEISU, "2", null},
	{"uplftBasePrcUpRatio_H1", "uplftBasePrcUpRatio_H1", "H1", null, TYPE_SEISU_SYOSU, "9", "5"},
	{"uplftMtrPrcUpRatio_H1", "uplftMtrPrcUpRatio_H1", "H1", null, TYPE_SEISU_SYOSU, "9", "5"},
	{"befEndUplftDaysAot_H1", "befEndUplftDaysAot_H1", "H1", null, TYPE_SEISU_SYOSU, "3", "0"},
	{"svcMemoRsnCd_H1", "svcMemoRsnCd_H1", "H1", "99", TYPE_HANKAKUEISU, "4", null},
	{"svcMemoRsnNm_H2", "svcMemoRsnNm_H2", "H2", "99", TYPE_HANKAKUEISU, "30", null},
	{"svcMemoRsnCd_H3", "svcMemoRsnCd_H3", "H3", null, TYPE_HANKAKUEISU, "4", null},
	{"svcCmntTxt_H1", "svcCmntTxt_H1", "H1", null, TYPE_HANKAKUEISU, "4000", null},
	{"xxChkBox_X1", "xxChkBox_X1", "X1", null, TYPE_HANKAKUEIJI, "1", null},
	{"xxChkBox_X2", "xxChkBox_X2", "X2", null, TYPE_HANKAKUEIJI, "1", null},
	{"xxRowNum", "xxRowNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowFromNum", "xxPageShowFromNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowToNum", "xxPageShowToNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowOfNum", "xxPageShowOfNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"A", "A", null, "200", "business.blap.NSAL0740.NSAL0740_ACMsgArray", null, null},
	
	{"P", "P", null, "1000", "business.blap.NSAL0740.NSAL0740_PCMsgArray", null, null},
	
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"GLBL_CMPY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//glblCmpyCd
        {"CONTR_UPLFT_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrUplftTpCd_H1
        {"CONTR_UPLFT_TP_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrUplftTpNm_H2
        {"CONTR_UPLFT_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrUplftTpCd_H3
        {"UPLFT_BASE_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//uplftBaseFlg_H1
        {"UPLFT_USG_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//uplftUsgFlg_H1
        {"UPLFT_PRC_METH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//uplftPrcMethCd_H1
        {"UPLFT_PRC_METH_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//uplftPrcMethNm_H2
        {"UPLFT_PRC_METH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//uplftPrcMethCd_H3
        {"UPLFT_BASE_PRC_UP_RATIO",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//uplftBasePrcUpRatio_H1
        {"UPLFT_MTR_PRC_UP_RATIO",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//uplftMtrPrcUpRatio_H1
        {"BEF_END_UPLFT_DAYS_AOT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//befEndUplftDaysAot_H1
        {"SVC_MEMO_RSN_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMemoRsnCd_H1
        {"SVC_MEMO_RSN_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMemoRsnNm_H2
        {"SVC_MEMO_RSN_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMemoRsnCd_H3
        {"SVC_CMNT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcCmntTxt_H1
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_X1
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_X2
        {"XX_ROW_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRowNum
        {"XX_PAGE_SHOW_FROM_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowFromNum
        {"XX_PAGE_SHOW_TO_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowToNum
        {"XX_PAGE_SHOW_OF_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowOfNum
		null,	//A
		null,	//P
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

