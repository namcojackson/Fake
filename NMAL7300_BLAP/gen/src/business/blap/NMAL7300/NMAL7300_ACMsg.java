//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20171214183651000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NMAL7300_ACMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NMAL7300;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NMAL7300 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NMAL7300_ACMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** PRC_RULE_ATTRB_CD_A*/
	public final EZDCStringItem              prcRuleAttrbCd_A;

    /** PRC_RULE_ATTRB_DESC_TXT_A*/
	public final EZDCStringItem              prcRuleAttrbDescTxt_A;

    /** PRC_RULE_COND_FROM_TXT_A*/
	public final EZDCStringItem              prcRuleCondFromTxt_A;

    /** XX_REC_NM_TXT_A*/
	public final EZDCStringItem              xxRecNmTxt_A;


	/**
	 * NMAL7300_ACMsg is constructor.
	 * The initialization when the instance of NMAL7300_ACMsg is generated.
	 */
	public NMAL7300_ACMsg() {
		this(false, -1);
	}

	/**
	 * NMAL7300_ACMsg is constructor.
	 * The initialization when the instance of NMAL7300_ACMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NMAL7300_ACMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		prcRuleAttrbCd_A = (EZDCStringItem)newItem("prcRuleAttrbCd_A");
		prcRuleAttrbDescTxt_A = (EZDCStringItem)newItem("prcRuleAttrbDescTxt_A");
		prcRuleCondFromTxt_A = (EZDCStringItem)newItem("prcRuleCondFromTxt_A");
		xxRecNmTxt_A = (EZDCStringItem)newItem("xxRecNmTxt_A");
	}

	/**
	 * get the type of array which is stored
	 * @return NMAL7300_ACMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NMAL7300_ACMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"prcRuleAttrbCd_A", "prcRuleAttrbCd_A", "A", null, TYPE_HANKAKUEISU, "2", null},
	{"prcRuleAttrbDescTxt_A", "prcRuleAttrbDescTxt_A", "A", null, TYPE_HANKAKUEISU, "50", null},
	{"prcRuleCondFromTxt_A", "prcRuleCondFromTxt_A", "A", null, TYPE_HANKAKUEISU, "50", null},
	{"xxRecNmTxt_A", "xxRecNmTxt_A", "A", null, TYPE_HANKAKUEISU, "500", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"PRC_RULE_ATTRB_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleAttrbCd_A
        {"PRC_RULE_ATTRB_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleAttrbDescTxt_A
        {"PRC_RULE_COND_FROM_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleCondFromTxt_A
        {"XX_REC_NM_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecNmTxt_A
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

