//This file was automatically generated by Text File Layout Definition Document and XLA200710010.
// Generated on    :20170530115045000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :TextFileLayoutDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0840F00FMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.file;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL0840F00 File Layout Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL0840F00FMsg extends EZDFMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** DS_CONTR_INTFC_BAT_NUM*/
	public final EZDFStringItem              dsContrIntfcBatNum;

    /** DS_CONTR_SRC_REF_NUM*/
	public final EZDFStringItem              dsContrSrcRefNum;

    /** CONTR_INTFC_SRC_TP_CD*/
	public final EZDFStringItem              contrIntfcSrcTpCd;

    /** DS_CONTR_NUM*/
	public final EZDFStringItem              dsContrNum;

    /** DS_CONTR_INTFC_ACT_DESC_TXT*/
	public final EZDFStringItem              dsContrIntfcActDescTxt;

    /** SER_NUM*/
	public final EZDFStringItem              serNum;

    /** SVC_MACH_MSTR_PK*/
	public final EZDFBigDecimalItem              svcMachMstrPk;

    /** MDSE_CD*/
	public final EZDFStringItem              mdseCd;

    /** CHRG_LVL_TP_CD*/
	public final EZDFStringItem              chrgLvlTpCd;

    /** ADDL_CHRG_TP_CD*/
	public final EZDFStringItem              addlChrgTpCd;

    /** CONTR_EFF_FROM_DT_TXT*/
	public final EZDFStringItem              contrEffFromDtTxt;

    /** CONTR_EFF_THRU_DT_TXT*/
	public final EZDFStringItem              contrEffThruDtTxt;

    /** BLLG_CYCLE_CD*/
	public final EZDFStringItem              bllgCycleCd;

    /** ADDL_CHRG_FLAT_DEAL_PRC_AMT*/
	public final EZDFBigDecimalItem              addlChrgFlatDealPrcAmt;

    /** ADDL_CHRG_APLC_PCT*/
	public final EZDFBigDecimalItem              addlChrgAplcPct;

    /** ADDL_CHRG_INV_TP_CD*/
	public final EZDFStringItem              addlChrgInvTpCd;

    /** PRINT_DTL_FLG*/
	public final EZDFStringItem              printDtlFlg;


	/**
	 * NSAL0840F00FMsg is constructor.
	 * The initialization when the instance of NSAL0840F00FMsg is generated.
	 */
	public NSAL0840F00FMsg() {
		this(false, -1);
	}

	/**
	 * NSAL0840F00FMsg is constructor.
	 * The initialization when the instance of NSAL0840F00FMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL0840F00FMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		dsContrIntfcBatNum = (EZDFStringItem)newItem("dsContrIntfcBatNum");
		dsContrSrcRefNum = (EZDFStringItem)newItem("dsContrSrcRefNum");
		contrIntfcSrcTpCd = (EZDFStringItem)newItem("contrIntfcSrcTpCd");
		dsContrNum = (EZDFStringItem)newItem("dsContrNum");
		dsContrIntfcActDescTxt = (EZDFStringItem)newItem("dsContrIntfcActDescTxt");
		serNum = (EZDFStringItem)newItem("serNum");
		svcMachMstrPk = (EZDFBigDecimalItem)newItem("svcMachMstrPk");
		mdseCd = (EZDFStringItem)newItem("mdseCd");
		chrgLvlTpCd = (EZDFStringItem)newItem("chrgLvlTpCd");
		addlChrgTpCd = (EZDFStringItem)newItem("addlChrgTpCd");
		contrEffFromDtTxt = (EZDFStringItem)newItem("contrEffFromDtTxt");
		contrEffThruDtTxt = (EZDFStringItem)newItem("contrEffThruDtTxt");
		bllgCycleCd = (EZDFStringItem)newItem("bllgCycleCd");
		addlChrgFlatDealPrcAmt = (EZDFBigDecimalItem)newItem("addlChrgFlatDealPrcAmt");
		addlChrgAplcPct = (EZDFBigDecimalItem)newItem("addlChrgAplcPct");
		addlChrgInvTpCd = (EZDFStringItem)newItem("addlChrgInvTpCd");
		printDtlFlg = (EZDFStringItem)newItem("printDtlFlg");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL0840F00FMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL0840F00FMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"dsContrIntfcBatNum", "dsContrIntfcBatNum", null, null, TYPE_HANKAKUEISU, "14", null},
	{"dsContrSrcRefNum", "dsContrSrcRefNum", null, null, TYPE_HANKAKUEISU, "90", null},
	{"contrIntfcSrcTpCd", "contrIntfcSrcTpCd", null, null, TYPE_HANKAKUEISU, "5", null},
	{"dsContrNum", "dsContrNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"dsContrIntfcActDescTxt", "dsContrIntfcActDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"serNum", "serNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"svcMachMstrPk", "svcMachMstrPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"mdseCd", "mdseCd", null, null, TYPE_HANKAKUEISU, "16", null},
	{"chrgLvlTpCd", "chrgLvlTpCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"addlChrgTpCd", "addlChrgTpCd", null, null, TYPE_HANKAKUEISU, "16", null},
	{"contrEffFromDtTxt", "contrEffFromDtTxt", null, null, TYPE_HANKAKUEISU, "10", null},
	{"contrEffThruDtTxt", "contrEffThruDtTxt", null, null, TYPE_HANKAKUEISU, "10", null},
	{"bllgCycleCd", "bllgCycleCd", null, null, TYPE_HANKAKUEISU, "1", null},
	{"addlChrgFlatDealPrcAmt", "addlChrgFlatDealPrcAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"addlChrgAplcPct", "addlChrgAplcPct", null, null, TYPE_SEISU_SYOSU, "5", "2"},
	{"addlChrgInvTpCd", "addlChrgInvTpCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"printDtlFlg", "printDtlFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"DS_CONTR_INTFC_BAT_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrIntfcBatNum
        {"DS_CONTR_SRC_REF_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrSrcRefNum
        {"CONTR_INTFC_SRC_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrIntfcSrcTpCd
        {"DS_CONTR_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrNum
        {"DS_CONTR_INTFC_ACT_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrIntfcActDescTxt
        {"SER_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNum
        {"SVC_MACH_MSTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachMstrPk
        {"MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd
        {"CHRG_LVL_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//chrgLvlTpCd
        {"ADDL_CHRG_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//addlChrgTpCd
        {"CONTR_EFF_FROM_DT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrEffFromDtTxt
        {"CONTR_EFF_THRU_DT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrEffThruDtTxt
        {"BLLG_CYCLE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgCycleCd
        {"ADDL_CHRG_FLAT_DEAL_PRC_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//addlChrgFlatDealPrcAmt
        {"ADDL_CHRG_APLC_PCT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//addlChrgAplcPct
        {"ADDL_CHRG_INV_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//addlChrgInvTpCd
        {"PRINT_DTL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//printDtlFlg
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

