//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20161206132611000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSAL1030_ACMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NSAL1030;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL1030 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL1030_ACMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_ROW_NUM_AL*/
	public final EZDCBigDecimalItem              xxRowNum_AL;

    /** XX_ROW_NUM_A*/
	public final EZDCBigDecimalItem              xxRowNum_A;

    /** BLLG_PER_FROM_DT_A*/
	public final EZDCDateItem              bllgPerFromDt_A;

    /** BLLG_PER_THRU_DT_A*/
	public final EZDCDateItem              bllgPerThruDt_A;

    /** SVC_INV_NUM_A*/
	public final EZDCStringItem              svcInvNum_A;

    /** DS_CONTR_NUM_A*/
	public final EZDCStringItem              dsContrNum_A;

    /** CONSL_BILL_PK_A*/
	public final EZDCBigDecimalItem              conslBillPk_A;

    /** SVC_INV_CHRG_TP_DESC_TXT_A*/
	public final EZDCStringItem              svcInvChrgTpDescTxt_A;

    /** INV_LINE_DEAL_SLS_AMT_A*/
	public final EZDCBigDecimalItem              invLineDealSlsAmt_A;

    /** INV_LINE_DEAL_TAX_AMT_A*/
	public final EZDCBigDecimalItem              invLineDealTaxAmt_A;

    /** INV_LINE_DEAL_NET_AMT_A*/
	public final EZDCBigDecimalItem              invLineDealNetAmt_A;

    /** SER_NUM_A*/
	public final EZDCStringItem              serNum_A;

    /** MDSE_CD_A*/
	public final EZDCStringItem              mdseCd_A;

    /** SVC_CR_REBIL_STS_DESC_TXT_A*/
	public final EZDCStringItem              svcCrRebilStsDescTxt_A;

    /** SVC_CR_REBIL_DTL_PK_A*/
	public final EZDCBigDecimalItem              svcCrRebilDtlPk_A;

    /** SVC_INV_LINE_PK_A*/
	public final EZDCBigDecimalItem              svcInvLinePk_A;

    /** SVC_INV_CHRG_TP_CD_A*/
	public final EZDCStringItem              svcInvChrgTpCd_A;

    /** SVC_CR_REBIL_STS_CD_A*/
	public final EZDCStringItem              svcCrRebilStsCd_A;

    /** XX_REC_HIST_CRAT_TS_A*/
	public final EZDCStringItem              xxRecHistCratTs_A;

    /** XX_REC_HIST_CRAT_BY_NM_A*/
	public final EZDCStringItem              xxRecHistCratByNm_A;

    /** XX_REC_HIST_UPD_TS_A*/
	public final EZDCStringItem              xxRecHistUpdTs_A;

    /** XX_REC_HIST_UPD_BY_NM_A*/
	public final EZDCStringItem              xxRecHistUpdByNm_A;

    /** XX_REC_HIST_TBL_NM_A*/
	public final EZDCStringItem              xxRecHistTblNm_A;


	/**
	 * NSAL1030_ACMsg is constructor.
	 * The initialization when the instance of NSAL1030_ACMsg is generated.
	 */
	public NSAL1030_ACMsg() {
		this(false, -1);
	}

	/**
	 * NSAL1030_ACMsg is constructor.
	 * The initialization when the instance of NSAL1030_ACMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL1030_ACMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxRowNum_AL = (EZDCBigDecimalItem)newItem("xxRowNum_AL");
		xxRowNum_A = (EZDCBigDecimalItem)newItem("xxRowNum_A");
		bllgPerFromDt_A = (EZDCDateItem)newItem("bllgPerFromDt_A");
		bllgPerThruDt_A = (EZDCDateItem)newItem("bllgPerThruDt_A");
		svcInvNum_A = (EZDCStringItem)newItem("svcInvNum_A");
		dsContrNum_A = (EZDCStringItem)newItem("dsContrNum_A");
		conslBillPk_A = (EZDCBigDecimalItem)newItem("conslBillPk_A");
		svcInvChrgTpDescTxt_A = (EZDCStringItem)newItem("svcInvChrgTpDescTxt_A");
		invLineDealSlsAmt_A = (EZDCBigDecimalItem)newItem("invLineDealSlsAmt_A");
		invLineDealTaxAmt_A = (EZDCBigDecimalItem)newItem("invLineDealTaxAmt_A");
		invLineDealNetAmt_A = (EZDCBigDecimalItem)newItem("invLineDealNetAmt_A");
		serNum_A = (EZDCStringItem)newItem("serNum_A");
		mdseCd_A = (EZDCStringItem)newItem("mdseCd_A");
		svcCrRebilStsDescTxt_A = (EZDCStringItem)newItem("svcCrRebilStsDescTxt_A");
		svcCrRebilDtlPk_A = (EZDCBigDecimalItem)newItem("svcCrRebilDtlPk_A");
		svcInvLinePk_A = (EZDCBigDecimalItem)newItem("svcInvLinePk_A");
		svcInvChrgTpCd_A = (EZDCStringItem)newItem("svcInvChrgTpCd_A");
		svcCrRebilStsCd_A = (EZDCStringItem)newItem("svcCrRebilStsCd_A");
		xxRecHistCratTs_A = (EZDCStringItem)newItem("xxRecHistCratTs_A");
		xxRecHistCratByNm_A = (EZDCStringItem)newItem("xxRecHistCratByNm_A");
		xxRecHistUpdTs_A = (EZDCStringItem)newItem("xxRecHistUpdTs_A");
		xxRecHistUpdByNm_A = (EZDCStringItem)newItem("xxRecHistUpdByNm_A");
		xxRecHistTblNm_A = (EZDCStringItem)newItem("xxRecHistTblNm_A");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL1030_ACMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL1030_ACMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxRowNum_AL", "xxRowNum_AL", "AL", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxRowNum_A", "xxRowNum_A", "A", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"bllgPerFromDt_A", "bllgPerFromDt_A", "A", null, TYPE_NENTSUKIHI, "8", null},
	{"bllgPerThruDt_A", "bllgPerThruDt_A", "A", null, TYPE_NENTSUKIHI, "8", null},
	{"svcInvNum_A", "svcInvNum_A", "A", null, TYPE_HANKAKUEISU, "13", null},
	{"dsContrNum_A", "dsContrNum_A", "A", null, TYPE_HANKAKUEISU, "30", null},
	{"conslBillPk_A", "conslBillPk_A", "A", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"svcInvChrgTpDescTxt_A", "svcInvChrgTpDescTxt_A", "A", null, TYPE_HANKAKUEISU, "50", null},
	{"invLineDealSlsAmt_A", "invLineDealSlsAmt_A", "A", null, TYPE_SEISU_SYOSU, "19", "4"},
	{"invLineDealTaxAmt_A", "invLineDealTaxAmt_A", "A", null, TYPE_SEISU_SYOSU, "19", "4"},
	{"invLineDealNetAmt_A", "invLineDealNetAmt_A", "A", null, TYPE_SEISU_SYOSU, "19", "4"},
	{"serNum_A", "serNum_A", "A", null, TYPE_HANKAKUEISU, "30", null},
	{"mdseCd_A", "mdseCd_A", "A", null, TYPE_HANKAKUEISU, "16", null},
	{"svcCrRebilStsDescTxt_A", "svcCrRebilStsDescTxt_A", "A", null, TYPE_HANKAKUEISU, "50", null},
	{"svcCrRebilDtlPk_A", "svcCrRebilDtlPk_A", "A", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"svcInvLinePk_A", "svcInvLinePk_A", "A", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"svcInvChrgTpCd_A", "svcInvChrgTpCd_A", "A", null, TYPE_HANKAKUEISU, "6", null},
	{"svcCrRebilStsCd_A", "svcCrRebilStsCd_A", "A", null, TYPE_HANKAKUEISU, "2", null},
	{"xxRecHistCratTs_A", "xxRecHistCratTs_A", "A", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistCratByNm_A", "xxRecHistCratByNm_A", "A", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistUpdTs_A", "xxRecHistUpdTs_A", "A", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistUpdByNm_A", "xxRecHistUpdByNm_A", "A", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistTblNm_A", "xxRecHistTblNm_A", "A", null, TYPE_HANKAKUEISU, "60", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_ROW_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRowNum_AL
        {"XX_ROW_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRowNum_A
        {"BLLG_PER_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgPerFromDt_A
        {"BLLG_PER_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgPerThruDt_A
        {"SVC_INV_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcInvNum_A
        {"DS_CONTR_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrNum_A
        {"CONSL_BILL_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//conslBillPk_A
        {"SVC_INV_CHRG_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcInvChrgTpDescTxt_A
        {"INV_LINE_DEAL_SLS_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invLineDealSlsAmt_A
        {"INV_LINE_DEAL_TAX_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invLineDealTaxAmt_A
        {"INV_LINE_DEAL_NET_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invLineDealNetAmt_A
        {"SER_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNum_A
        {"MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd_A
        {"SVC_CR_REBIL_STS_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcCrRebilStsDescTxt_A
        {"SVC_CR_REBIL_DTL_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcCrRebilDtlPk_A
        {"SVC_INV_LINE_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcInvLinePk_A
        {"SVC_INV_CHRG_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcInvChrgTpCd_A
        {"SVC_CR_REBIL_STS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcCrRebilStsCd_A
        {"XX_REC_HIST_CRAT_TS",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratTs_A
        {"XX_REC_HIST_CRAT_BY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratByNm_A
        {"XX_REC_HIST_UPD_TS",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdTs_A
        {"XX_REC_HIST_UPD_BY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdByNm_A
        {"XX_REC_HIST_TBL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistTblNm_A
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

