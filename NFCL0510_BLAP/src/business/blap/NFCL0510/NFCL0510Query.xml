<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<sqlMap namespace="NFCL0510Query">

    <!-- *********************************************************** -->
    <!-- ********** Bean Definition ******************************** -->
    <!-- *********************************************************** -->
    <typeAlias alias="NFCL0510CMsg"     type="business.blap.NFCL0510.NFCL0510CMsg"/>
    <typeAlias alias="NFCL0510_ASMsg"   type="business.blap.NFCL0510.NFCL0510_ASMsg"/>
    <typeAlias alias="NFCL0510_BSMsg"   type="business.blap.NFCL0510.NFCL0510_BSMsg"/>

    <statement id="getLockboxList" parameterClass="Map" resultMap="result.getBatRcptList">
        SELECT
              COUNT(*)                                            XX_SRCH_CNT_A
            , MAX(IF.EZUPTIME)                                    EZUPTIME_A
            , MAX(IF.EZUPTIMEZONE)                                EZUPTIMEZONE_A
            , IF.AR_LOCK_BOX_FILE_NM                              AR_LOCK_BOX_FILE_NM_A
            , NVL(LB.AR_LOCK_BOX_NM, HDR_LOCK_BOX_NUM_TXT)        AR_LOCK_BOX_NM_A
            , IF.RCV_DT                                           RCV_DT_A
            , IF.AR_LOCK_BOX_STS_CD                               AR_LOCK_BOX_STS_CD_A
            , IF.AR_LOCK_BOX_STS_CD                               AR_LOCK_BOX_STS_CD_AB
            , STS.MAN_USBLE_LOCK_BOX_STS_FLG                      MAN_USBLE_LOCK_BOX_STS_FLG_A
            , IF.REM_BANK_RTE_NUM                                 REM_BANK_RTE_NUM_A
            , IF.REM_DS_BANK_ACCT_NUM                             REM_DS_BANK_ACCT_NUM_A
            , IF.LOCK_BOX_REC_CNT                                 LOCK_BOX_REC_CNT_A
            , IF.LOCK_BOX_TOT_AMT                                 LOCK_BOX_TOT_AMT_A
            , IF.AR_LOCK_BOX_BAT_NUM                              AR_LOCK_BOX_BAT_NUM_A
            , MAX(IF.AR_RCPT_RCV_ERR_FLG)                         AR_RCPT_RCV_ERR_FLG_A
            , IF.BAT_RCPT_REC_CNT                                 BAT_RCPT_REC_CNT_A
            , IF.BAT_RCPT_TOT_AMT                                 BAT_RCPT_TOT_AMT_A
        FROM  AR_RCPT_RCV_INTFC IF
            , AR_LOCK_BOX       LB
            , AR_LOCK_BOX_STS   STS
        WHERE IF.GLBL_CMPY_CD       = #glblCmpyCd#
        AND   IF.EZCANCELFLAG       = '0'
        AND   IF.GLBL_CMPY_CD       = LB.GLBL_CMPY_CD (+)
        AND   IF.AR_LOCK_BOX_CD     = LB.AR_LOCK_BOX_CD (+)
        AND   LB.EZCANCELFLAG (+)   = '0'
        AND   IF.GLBL_CMPY_CD       = STS.GLBL_CMPY_CD (+)
        AND   IF.AR_LOCK_BOX_STS_CD = STS.AR_LOCK_BOX_STS_CD (+)
        AND   STS.EZCANCELFLAG (+)  = '0'
        <isNotNull property="cMsg.arLockBoxFileNm_H">
            AND IF.AR_LOCK_BOX_FILE_NM LIKE #cMsg.arLockBoxFileNm_H#
        </isNotNull>
        <isNotNull property="cMsg.arLockBoxCd_H">
            AND IF.AR_LOCK_BOX_CD = #cMsg.arLockBoxCd_H#
        </isNotNull>
        <isNotNull property="cMsg.arLockBoxStsCd_H">
            AND IF.AR_LOCK_BOX_STS_CD = #cMsg.arLockBoxStsCd_H#
        </isNotNull>
        <isNotNull property="cMsg.arLockBoxBatNum_H">
            AND IF.AR_LOCK_BOX_BAT_NUM = #cMsg.arLockBoxBatNum_H#
        </isNotNull>
        <isNotNull property="cMsg.arBatInfoMsgTxt_H">
            AND EXISTS
               ( SELECT 1
                 FROM    AR_RCPT_RCV_INTFC I
                       , AR_RCPT_RCV_INFO_WRK   W
                 WHERE  I.GLBL_CMPY_CD        = IF.GLBL_CMPY_CD
                 AND    I.EZCANCELFLAG        = '0'
                 AND    I.AR_LOCK_BOX_FILE_NM = IF.AR_LOCK_BOX_FILE_NM
                 AND    W.AR_RCPT_RCV_INTFC_PK = I.AR_RCPT_RCV_INTFC_PK
                 AND    UPPER(W.AR_BAT_INFO_MSG_TXT) LIKE UPPER(#cMsg.arBatInfoMsgTxt_H#)
               )
        </isNotNull>
        <isNotNull property="cMsg.rcvDt_H1">
        AND IF.RCV_DT &gt;= #cMsg.rcvDt_H1#
        </isNotNull>
        <isNotNull property="cMsg.rcvDt_H2">
        AND IF.RCV_DT &lt;= #cMsg.rcvDt_H2#
        </isNotNull>
        <isNotEqual property="cMsg.xxChkBox_H" compareValue="Y">
            AND IF.AR_LOCK_BOX_STS_CD &lt;&gt; #LockboxStsGenerated#
        </isNotEqual>
        GROUP BY 
               IF.AR_LOCK_BOX_FILE_NM
             , NVL(LB.AR_LOCK_BOX_NM, HDR_LOCK_BOX_NUM_TXT)
             , IF.RCV_DT
             , IF.AR_LOCK_BOX_STS_CD
             , IF.REM_BANK_RTE_NUM
             , IF.REM_DS_BANK_ACCT_NUM
             , IF.LOCK_BOX_REC_CNT
             , IF.LOCK_BOX_TOT_AMT
             , IF.AR_LOCK_BOX_BAT_NUM
             , IF.BAT_RCPT_REC_CNT
             , IF.BAT_RCPT_TOT_AMT
             , STS.MAN_USBLE_LOCK_BOX_STS_FLG
        <!-- START 2018/06/11 [QC#19723,ADD] -->
        <isNotNull property="ArRcptErrFlgY">
        HAVING MAX(IF.AR_RCPT_RCV_ERR_FLG) = #ArRcptErrFlgY#
        </isNotNull>
        <!-- END   2018/06/11 [QC#19723,ADD] -->
        ORDER BY  AR_LOCK_BOX_FILE_NM_A
                , AR_LOCK_BOX_BAT_NUM_A
    </statement>

    <resultMap id="result.getBatRcptList" class="NFCL0510_ASMsg">
        <result property="xxSrchCnt_A"        column="XX_SRCH_CNT_A"          javaType="EZDSBigDecimalItem" />
        <result property="ezUpTimeZone_A"     column="EZUPTIMEZONE_A"         javaType="EZDSStringItem" />
        <result property="ezUpTime_A"         column="EZUPTIME_A"             javaType="EZDSStringItem" />
        <result property="arLockBoxFileNm_A"  column="AR_LOCK_BOX_FILE_NM_A"  javaType="EZDSStringItem" />
        <result property="arLockBoxNm_A"      column="AR_LOCK_BOX_NM_A"       javaType="EZDSStringItem" />
        <result property="rcvDt_A"            column="RCV_DT_A"               javaType="EZDSDateItem" />
        <result property="arLockBoxStsCd_A"   column="AR_LOCK_BOX_STS_CD_A"   javaType="EZDSStringItem" />
        <result property="arLockBoxStsCd_AB"  column="AR_LOCK_BOX_STS_CD_AB"  javaType="EZDSStringItem" />
        <result property="manUsbleLockBoxStsFlg_A"  column="MAN_USBLE_LOCK_BOX_STS_FLG_A" javaType="EZDSStringItem" />
        <result property="remBankRteNum_A"    column="REM_BANK_RTE_NUM_A"     javaType="EZDSStringItem" />
        <result property="remDsBankAcctNum_A" column="REM_DS_BANK_ACCT_NUM_A" javaType="EZDSStringItem" />
        <result property="lockBoxRecCnt_A"    column="LOCK_BOX_REC_CNT_A"     javaType="EZDSBigDecimalItem" />
        <result property="lockBoxTotAmt_A"    column="LOCK_BOX_TOT_AMT_A"     javaType="EZDSBigDecimalItem" />
        <result property="arLockBoxBatNum_A"  column="AR_LOCK_BOX_BAT_NUM_A"  javaType="EZDSStringItem" />
        <result property="arRcptRcvErrFlg_A"  column="AR_RCPT_RCV_ERR_FLG_A"  javaType="EZDSStringItem" />
        <result property="batRcptRecCnt_A"    column="BAT_RCPT_REC_CNT_A"     javaType="EZDSBigDecimalItem" />
        <result property="batRcptTotAmt_A"    column="BAT_RCPT_TOT_AMT_A"     javaType="EZDSBigDecimalItem" />
    </resultMap>

    <statement id="getReceiptInvoiceList" parameterClass="Map" resultMap="result.getReceiptInvoiceList">
        SELECT
              IF.EZUPTIME                                 EZUPTIME_B
            , IF.EZUPTIMEZONE                             EZUPTIMEZONE_B
            , IF.AR_LOCK_BOX_BAT_NUM                      AR_LOCK_BOX_BAT_NUM_B
            , IF.AR_LOCK_BOX_BAT_LINE_NUM                 AR_LOCK_BOX_BAT_LINE_NUM_B
            , IF.AR_RCPT_RCV_INTFC_PK                     AR_RCPT_RCV_INTFC_PK_B
            , IF.AR_LOCK_BOX_STS_CD                       AR_LOCK_BOX_STS_CD_B
            , IF.AR_RCPT_RCV_ERR_FLG                      AR_RCPT_RCV_ERR_FLG_B
            , IF.VLD_CUST_RCPT_NUM                        VLD_CUST_RCPT_NUM_B
            , NVL(IF.VLD_CUST_RCPT_NUM, IF.CUST_RCPT_NUM) CUST_RCPT_NUM_B
            , NVL(IF.VLD_CUST_RCPT_NUM, IF.CUST_RCPT_NUM) CUST_RCPT_NUM_BB
            , IF.CUST_RCPT_AMT                            CUST_RCPT_AMT_B
            , IF.CUST_BANK_RTE_NUM                        CUST_BANK_RTE_NUM_B
            , IF.CUST_DS_BANK_ACCT_NUM                    CUST_DS_BANK_ACCT_NUM_B
            , IF.PAYER_CUST_CD                            PAYER_CUST_CD_B
            , IF.CUST_INV_NUM                             CUST_INV_NUM_B
            , IF.CUST_INV_AMT                             CUST_INV_AMT_B
            <!-- START 2016/12/05 S.Fujita [QC#16255,ADD] -->
            , IF.AR_BAT_RCPT_NM                           AR_BAT_RCPT_NM_B
            <!-- END   2016/12/05 S.Fujita [QC#16255,ADD] -->
            <!-- START 2023/07/03 S.Nakatani [QC#55645,ADD] -->
            , CASE WHEN LENGTH(IF.CUST_DS_BANK_ACCT_NUM) = 4
                   THEN REGEXP_REPLACE(IF.CUST_DS_BANK_ACCT_NUM,'.','*')
                   ELSE REGEXP_REPLACE(SUBSTR(IF.CUST_DS_BANK_ACCT_NUM, 1, LENGTH(IF.CUST_DS_BANK_ACCT_NUM) - 4),'.','*')
                   ||   SUBSTR(IF.CUST_DS_BANK_ACCT_NUM, LENGTH(IF.CUST_DS_BANK_ACCT_NUM) - 4 + 1)
                   END AS MASK_BANK_ACCT_NUM_BM
            <!-- END 2023/07/03 S.Nakatani [QC#55645,ADD] -->
            <!-- START 2018/01/31 [QC#19728,ADD] -->
            , ( SELECT 
                    AR.RCPT_NUM
                FROM
                    AR_RCPT_RCV_INTFC      IF1
                   ,AR_RCPT_RCV_WRK        ARRW 
                   ,AR_RCPT_IN_PROC_WRK    ARIW 
                   ,AR_RCPT                AR
                WHERE
                    IF1.GLBL_CMPY_CD              = #glblCmpyCd#
                AND IF1.EZCANCELFLAG              = '0'
                AND IF1.AR_LOCK_BOX_FILE_NM       = #cMsg.arLockBoxFileNm_BH#
            <isNotNull property="cMsg.arLockBoxBatNum_BH">
                AND IF1.AR_LOCK_BOX_BAT_NUM       = #cMsg.arLockBoxBatNum_BH#
            </isNotNull>
                AND IF1.AR_RCPT_RCV_INTFC_PK      = IF.AR_RCPT_RCV_INTFC_PK
                AND ARRW.AR_RCPT_RCV_INTFC_PK (+) = IF1.AR_RCPT_RCV_INTFC_PK
                AND ARRW.EZCANCELFLAG (+)         = '0' 
                AND ARIW.GLBL_CMPY_CD (+)         = ARRW.GLBL_CMPY_CD
                AND ARIW.RCV_SQ_PK (+)            = ARRW.RCV_SQ_PK
                AND ARIW.RCV_HDR_NUM (+)          = ARRW.RCV_HDR_NUM
                AND ARIW.RCV_DTL_NUM (+)          = ARRW.RCV_DTL_NUM
                AND ARIW.EZCANCELFLAG (+)         = '0' 
                AND AR.GLBL_CMPY_CD (+)           = ARIW.GLBL_CMPY_CD
                AND AR.AR_BAT_RCPT_NM (+)         = ARIW.AR_BAT_RCPT_NM
                AND AR.PAYER_CUST_CD (+)          = ARIW.PAYER_CUST_CD
                AND AR.RCPT_CHK_NUM (+)           = ARIW.RCPT_CHK_NUM
                AND AR.EZCANCELFLAG (+)           = '0' 
                AND ROWNUM                        = 1
              )                                           RCPT_NUM_B
            <!-- END   2018/01/31 [QC#19728,ADD] -->
        FROM      AR_RCPT_RCV_INTFC IF
        WHERE     IF.GLBL_CMPY_CD = #glblCmpyCd#
        AND       IF.EZCANCELFLAG = '0'
        AND       IF.AR_LOCK_BOX_FILE_NM = #cMsg.arLockBoxFileNm_BH#
        <isNotNull property="cMsg.arLockBoxBatNum_BH">
            AND       IF.AR_LOCK_BOX_BAT_NUM  = #cMsg.arLockBoxBatNum_BH#
        </isNotNull>
        <!-- START 2018/06/11 [QC#19723,ADD] -->
        <isNotNull property="ArRcptErrFlgY">
            AND       IF.AR_RCPT_RCV_ERR_FLG = #ArRcptErrFlgY#
        </isNotNull>
        <!-- END   2018/06/11 [QC#19723,ADD] -->
        <!-- START 2016/12/05 S.Fujita [QC#16255,ADD] -->
        ORDER BY AR_LOCK_BOX_BAT_NUM_B
               , AR_LOCK_BOX_BAT_LINE_NUM_B
        <!-- END   2016/12/05 S.Fujita [QC#16255,ADD] -->
    </statement>

    <resultMap id="result.getReceiptInvoiceList" class="NFCL0510_BSMsg">
        <result property="ezUpTimeZone_B"         column="EZUPTIMEZONE_B"             javaType="EZDSStringItem" />
        <result property="ezUpTime_B"             column="EZUPTIME_B"                 javaType="EZDSStringItem" />
        <result property="arLockBoxStsCd_B"       column="AR_LOCK_BOX_STS_CD_B"       javaType="EZDSStringItem" />
        <result property="arRcptRcvErrFlg_B"      column="AR_RCPT_RCV_ERR_FLG_B"      javaType="EZDSStringItem" />
        <result property="arRcptRcvIntfcPk_B"     column="AR_RCPT_RCV_INTFC_PK_B"     javaType="EZDSBigDecimalItem" />
        <result property="arLockBoxBatNum_B"      column="AR_LOCK_BOX_BAT_NUM_B"      javaType="EZDSStringItem"/>
        <result property="arLockBoxBatLineNum_B"  column="AR_LOCK_BOX_BAT_LINE_NUM_B" javaType="EZDSStringItem"/>
        <result property="vldCustRcptNum_B"       column="VLD_CUST_RCPT_NUM_B"        javaType="EZDSStringItem"/>
        <result property="custRcptNum_B"          column="CUST_RCPT_NUM_B"            javaType="EZDSStringItem"/>
        <result property="custRcptNum_BB"         column="CUST_RCPT_NUM_BB"           javaType="EZDSStringItem"/>
        <result property="custRcptAmt_B"          column="CUST_RCPT_AMT_B"            javaType="EZDSBigDecimalItem"/>
        <result property="custBankRteNum_B"       column="CUST_BANK_RTE_NUM_B"        javaType="EZDSStringItem"/>
        <result property="custDsBankAcctNum_B"    column="CUST_DS_BANK_ACCT_NUM_B"    javaType="EZDSStringItem"/>
        <!-- START 2023/07/03 S.Nakatani [QC#55645,ADD] -->
        <result property="custDsBankAcctNum_BM"   column="MASK_BANK_ACCT_NUM_BM"      javaType="EZDSStringItem" />
        <!-- END 2023/07/03 S.Nakatani [QC#55645,ADD] -->
        <result property="payerCustCd_B"          column="PAYER_CUST_CD_B"            javaType="EZDSStringItem"/>
        <result property="custInvNum_B"           column="CUST_INV_NUM_B"             javaType="EZDSStringItem"/>
        <result property="custInvAmt_B"           column="CUST_INV_AMT_B"             javaType="EZDSBigDecimalItem"/>
        <!-- START 2016/12/05 S.Fujita [QC#16255,ADD] -->
        <result property="arBatRcptNm_B"          column="AR_BAT_RCPT_NM_B"           javaType="EZDSStringItem"/>
        <!-- END   2016/12/05 S.Fujita [QC#16255,ADD] -->
        <!-- START 2018/01/31 [QC#19728,ADD] -->
        <result property="rcptNum_B"              column="RCPT_NUM_B"                 javaType="EZDSStringItem"/>
        <!-- END   2018/01/31 [QC#19728,ADD] -->
    </resultMap>

    <statement id="getStatusMsgDetail" parameterClass="Map" resultClass="Map">
        SELECT   AR_BAT_INFO_LVL_CD 
               , AR_BAT_INFO_MSG_TXT
        FROM   AR_RCPT_RCV_INFO_WRK
        WHERE  GLBL_CMPY_CD = #glblCmpyCd#
        AND    AR_RCPT_RCV_INTFC_PK = $arRcptRcvIntfcPk$
        AND    EZCANCELFLAG = '0'
    </statement>

    <statement id="getLockBoxStatus" parameterClass="Map" resultClass="Map">
        SELECT   A.AR_LOCK_BOX_STS_CD 
               , A.AR_LOCK_BOX_STS_DESC_TXT
        FROM   AR_LOCK_BOX_STS A
        WHERE  A.GLBL_CMPY_CD  = #glblCmpyCd#
        AND    A.EZCANCELFLAG  = '0'
        AND    A.AR_LOCK_BOX_STS_CD IN
        <iterate property="arLockBoxStsCdList" var="arLockBoxStsCd[]" open="(" close=")" conjunction=",">
            #arLockBoxStsCd[]#
        </iterate>
    </statement>

    <!-- START 2018/01/30[QC#19728, ADD] -->
    <statement id="getArRcprRcvIntfc" parameterClass="Map" resultClass="Map">
        SELECT DISTINCT
              IF.AR_LOCK_BOX_FILE_NM
            , IF.AR_LOCK_BOX_BAT_NUM
        FROM  AR_RCPT_RCV_INTFC IF
        WHERE IF.GLBL_CMPY_CD       = #glblCmpyCd#
        AND   IF.EZCANCELFLAG       = '0'
        AND   IF.AR_BAT_RCPT_NM LIKE #arBatRcptNm#
        ORDER BY  AR_LOCK_BOX_FILE_NM
                , AR_LOCK_BOX_BAT_NUM
    </statement>
    <!-- END   2018/01/30[QC#19728, ADD] -->

    <!-- START 2016/12/05 S.Fujita [QC#16255,ADD] -->
    <!-- 
    <statement id="getMaxUptime" parameterClass="Map" resultClass="Map">
        SELECT
              MAX(IF.EZUPTIME)     EZUPTIME
            , MAX(IF.EZUPTIMEZONE) EZUPTIMEZONE
        FROM  AR_RCPT_RCV_INTFC IF
        WHERE IF.GLBL_CMPY_CD        = #glblCmpyCd#
        AND   IF.AR_LOCK_BOX_FILE_NM = #arLockBoxFileNm#
        AND   IF.EZCANCELFLAG        = '0'
    </statement>
     -->
    <!-- END   2016/12/05 S.Fujita [QC#16255,ADD] -->

    <!-- START 2018/06/11 [QC#19723,ADD] -->
    <statement id="getReceiptInvoiceDownloadList" parameterClass="Map" resultClass="Map">
        SELECT
              IF.EZUPTIME                                 EZUPTIME_B
            , IF.EZUPTIMEZONE                             EZUPTIMEZONE_B
            , IF.AR_LOCK_BOX_BAT_NUM                      AR_LOCK_BOX_BAT_NUM_B
            , IF.AR_LOCK_BOX_BAT_LINE_NUM                 AR_LOCK_BOX_BAT_LINE_NUM_B
            , IF.AR_RCPT_RCV_INTFC_PK                     AR_RCPT_RCV_INTFC_PK_B
            , IF.AR_LOCK_BOX_STS_CD                       AR_LOCK_BOX_STS_CD_B
            , IF.AR_RCPT_RCV_ERR_FLG                      AR_RCPT_RCV_ERR_FLG_B
            , IF.VLD_CUST_RCPT_NUM                        VLD_CUST_RCPT_NUM_B
            , NVL(IF.VLD_CUST_RCPT_NUM, IF.CUST_RCPT_NUM) CUST_RCPT_NUM_B
            , NVL(IF.VLD_CUST_RCPT_NUM, IF.CUST_RCPT_NUM) CUST_RCPT_NUM_BB
            , IF.CUST_RCPT_AMT                            CUST_RCPT_AMT_B
            , IF.CUST_BANK_RTE_NUM                        CUST_BANK_RTE_NUM_B
            <!-- START 2023/07/03 S.Nakatani [QC#55645,DEL] -->
            <!--, IF.CUST_DS_BANK_ACCT_NUM                    CUST_DS_BANK_ACCT_NUM_B -->
            <!-- END 2023/07/03 S.Nakatani [QC#55645,DEL] -->
            , IF.PAYER_CUST_CD                            PAYER_CUST_CD_B
            , IF.CUST_INV_NUM                             CUST_INV_NUM_B
            , IF.CUST_INV_AMT                             CUST_INV_AMT_B
            , IF.AR_BAT_RCPT_NM                           AR_BAT_RCPT_NM_B
            <!-- START 2023/07/03 S.Nakatani [QC#55645,ADD] -->
            , CASE WHEN LENGTH(IF.CUST_DS_BANK_ACCT_NUM) = 4
                   THEN REGEXP_REPLACE(IF.CUST_DS_BANK_ACCT_NUM,'.','*')
                   ELSE REGEXP_REPLACE(SUBSTR(IF.CUST_DS_BANK_ACCT_NUM, 1, LENGTH(IF.CUST_DS_BANK_ACCT_NUM) - 4),'.','*')
                   ||   SUBSTR(IF.CUST_DS_BANK_ACCT_NUM, LENGTH(IF.CUST_DS_BANK_ACCT_NUM) - 4 + 1)
                   END AS MASK_BANK_ACCT_NUM_BM
            <!-- END 2023/07/03 S.Nakatani [QC#55645,ADD] -->
            , ( SELECT 
                    AR.RCPT_NUM
                FROM
                    AR_RCPT_RCV_INTFC      IF1
                   ,AR_RCPT_RCV_WRK        ARRW 
                   ,AR_RCPT_IN_PROC_WRK    ARIW 
                   ,AR_RCPT                AR
                WHERE
                    IF1.GLBL_CMPY_CD              = #glblCmpyCd#
                AND IF1.EZCANCELFLAG              = '0'
                AND IF1.AR_LOCK_BOX_FILE_NM       = #cMsg.arLockBoxFileNm_BH#
            <isNotNull property="cMsg.arLockBoxBatNum_BH">
                AND IF1.AR_LOCK_BOX_BAT_NUM       = #cMsg.arLockBoxBatNum_BH#
            </isNotNull>
                AND IF1.AR_RCPT_RCV_INTFC_PK      = IF.AR_RCPT_RCV_INTFC_PK
                AND ARRW.AR_RCPT_RCV_INTFC_PK (+) = IF1.AR_RCPT_RCV_INTFC_PK
                AND ARRW.EZCANCELFLAG (+)         = '0' 
                AND ARIW.GLBL_CMPY_CD (+)         = ARRW.GLBL_CMPY_CD
                AND ARIW.RCV_SQ_PK (+)            = ARRW.RCV_SQ_PK
                AND ARIW.RCV_HDR_NUM (+)          = ARRW.RCV_HDR_NUM
                AND ARIW.RCV_DTL_NUM (+)          = ARRW.RCV_DTL_NUM
                AND ARIW.EZCANCELFLAG (+)         = '0' 
                AND AR.GLBL_CMPY_CD (+)           = ARIW.GLBL_CMPY_CD
                AND AR.AR_BAT_RCPT_NM (+)         = ARIW.AR_BAT_RCPT_NM
                AND AR.PAYER_CUST_CD (+)          = ARIW.PAYER_CUST_CD
                AND AR.RCPT_CHK_NUM (+)           = ARIW.RCPT_CHK_NUM
                AND AR.EZCANCELFLAG (+)           = '0' 
                AND ROWNUM                        = 1
              )                                           RCPT_NUM_B
            , WRK.AR_BAT_INFO_MSG_TXT
            , WRK.AR_BAT_INFO_LVL_CD
        FROM      AR_RCPT_RCV_INTFC IF
                 ,AR_RCPT_RCV_INFO_WRK WRK
        WHERE     IF.GLBL_CMPY_CD = #glblCmpyCd#
        AND       IF.EZCANCELFLAG = '0'
        AND       IF.AR_LOCK_BOX_FILE_NM = #cMsg.arLockBoxFileNm_BH#
        AND       WRK.AR_RCPT_RCV_INTFC_PK (+) = IF.AR_RCPT_RCV_INTFC_PK
        AND       WRK.EZCANCELFLAG (+) = '0'
        <isNotNull property="cMsg.arLockBoxBatNum_BH">
            AND       IF.AR_LOCK_BOX_BAT_NUM  = #cMsg.arLockBoxBatNum_BH#
        </isNotNull>
        <isNotNull property="ArRcptErrFlgY">
            AND       IF.AR_RCPT_RCV_ERR_FLG = #ArRcptErrFlgY#
        </isNotNull>
        ORDER BY AR_LOCK_BOX_BAT_NUM_B
               , AR_LOCK_BOX_BAT_LINE_NUM_B
               , AR_BAT_INFO_LVL_CD
               , AR_BAT_INFO_MSG_TXT
    </statement>
    <!-- END   2018/06/11 [QC#19723,ADD] -->
</sqlMap>
