//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20230704192423000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NFCL0510CMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NFCL0510;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NFCL0510 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NFCL0510CMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** AR_LOCK_BOX_FILE_NM_H*/
	public final EZDCStringItem              arLockBoxFileNm_H;

    /** AR_LOCK_BOX_CD_H*/
	public final EZDCStringItem              arLockBoxCd_H;

    /** AR_LOCK_BOX_CD_LC*/
	public final EZDCStringItemArray              arLockBoxCd_LC;

    /** AR_LOCK_BOX_NM_LD*/
	public final EZDCStringItemArray              arLockBoxNm_LD;

    /** AR_LOCK_BOX_STS_CD_H*/
	public final EZDCStringItem              arLockBoxStsCd_H;

    /** AR_LOCK_BOX_STS_CD_LC*/
	public final EZDCStringItemArray              arLockBoxStsCd_LC;

    /** AR_LOCK_BOX_STS_DESC_TXT_LD*/
	public final EZDCStringItemArray              arLockBoxStsDescTxt_LD;

    /** AR_LOCK_BOX_BAT_NUM_H*/
	public final EZDCStringItem              arLockBoxBatNum_H;

    /** AR_BAT_INFO_MSG_TXT_H*/
	public final EZDCStringItem              arBatInfoMsgTxt_H;

    /** RCV_DT_H1*/
	public final EZDCDateItem              rcvDt_H1;

    /** RCV_DT_H2*/
	public final EZDCDateItem              rcvDt_H2;

    /** XX_CHK_BOX_H*/
	public final EZDCStringItem              xxChkBox_H;

    /** XX_PAGE_TBL_NM*/
	public final EZDCStringItem              xxPageTblNm;

    /** XX_SCR_EVENT_NM*/
	public final EZDCStringItem              xxScrEventNm;

    /** XX_DPLY_TAB*/
	public final EZDCStringItem              xxDplyTab;

    /** XX_FILE_DATA*/
	public final EZDCMimeSourceItem              xxFileData;

    /** XX_PAGE_SHOW_FROM_NUM_A*/
	public final EZDCBigDecimalItem              xxPageShowFromNum_A;

    /** XX_PAGE_SHOW_TO_NUM_A*/
	public final EZDCBigDecimalItem              xxPageShowToNum_A;

    /** XX_PAGE_SHOW_OF_NUM_A*/
	public final EZDCBigDecimalItem              xxPageShowOfNum_A;

    /** A*/
	public final business.blap.NFCL0510.NFCL0510_ACMsgArray              A;

    /** AR_LOCK_BOX_FILE_NM_BH*/
	public final EZDCStringItem              arLockBoxFileNm_BH;

    /** AR_LOCK_BOX_BAT_NUM_BH*/
	public final EZDCStringItem              arLockBoxBatNum_BH;

    /** XX_PAGE_SHOW_FROM_NUM_B*/
	public final EZDCBigDecimalItem              xxPageShowFromNum_B;

    /** XX_PAGE_SHOW_TO_NUM_B*/
	public final EZDCBigDecimalItem              xxPageShowToNum_B;

    /** XX_PAGE_SHOW_OF_NUM_B*/
	public final EZDCBigDecimalItem              xxPageShowOfNum_B;

    /** B*/
	public final business.blap.NFCL0510.NFCL0510_BCMsgArray              B;

    /** AR_BAT_RCPT_NM_P*/
	public final EZDCStringItem              arBatRcptNm_P;


	/**
	 * NFCL0510CMsg is constructor.
	 * The initialization when the instance of NFCL0510CMsg is generated.
	 */
	public NFCL0510CMsg() {
		this(false, -1);
	}

	/**
	 * NFCL0510CMsg is constructor.
	 * The initialization when the instance of NFCL0510CMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NFCL0510CMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		arLockBoxFileNm_H = (EZDCStringItem)newItem("arLockBoxFileNm_H");
		arLockBoxCd_H = (EZDCStringItem)newItem("arLockBoxCd_H");
		arLockBoxCd_LC = (EZDCStringItemArray)newItemArray("arLockBoxCd_LC");
		arLockBoxNm_LD = (EZDCStringItemArray)newItemArray("arLockBoxNm_LD");
		arLockBoxStsCd_H = (EZDCStringItem)newItem("arLockBoxStsCd_H");
		arLockBoxStsCd_LC = (EZDCStringItemArray)newItemArray("arLockBoxStsCd_LC");
		arLockBoxStsDescTxt_LD = (EZDCStringItemArray)newItemArray("arLockBoxStsDescTxt_LD");
		arLockBoxBatNum_H = (EZDCStringItem)newItem("arLockBoxBatNum_H");
		arBatInfoMsgTxt_H = (EZDCStringItem)newItem("arBatInfoMsgTxt_H");
		rcvDt_H1 = (EZDCDateItem)newItem("rcvDt_H1");
		rcvDt_H2 = (EZDCDateItem)newItem("rcvDt_H2");
		xxChkBox_H = (EZDCStringItem)newItem("xxChkBox_H");
		xxPageTblNm = (EZDCStringItem)newItem("xxPageTblNm");
		xxScrEventNm = (EZDCStringItem)newItem("xxScrEventNm");
		xxDplyTab = (EZDCStringItem)newItem("xxDplyTab");
		xxFileData = (EZDCMimeSourceItem)newItem("xxFileData");
		xxPageShowFromNum_A = (EZDCBigDecimalItem)newItem("xxPageShowFromNum_A");
		xxPageShowToNum_A = (EZDCBigDecimalItem)newItem("xxPageShowToNum_A");
		xxPageShowOfNum_A = (EZDCBigDecimalItem)newItem("xxPageShowOfNum_A");
		A = (business.blap.NFCL0510.NFCL0510_ACMsgArray)newMsgArray("A");
		arLockBoxFileNm_BH = (EZDCStringItem)newItem("arLockBoxFileNm_BH");
		arLockBoxBatNum_BH = (EZDCStringItem)newItem("arLockBoxBatNum_BH");
		xxPageShowFromNum_B = (EZDCBigDecimalItem)newItem("xxPageShowFromNum_B");
		xxPageShowToNum_B = (EZDCBigDecimalItem)newItem("xxPageShowToNum_B");
		xxPageShowOfNum_B = (EZDCBigDecimalItem)newItem("xxPageShowOfNum_B");
		B = (business.blap.NFCL0510.NFCL0510_BCMsgArray)newMsgArray("B");
		arBatRcptNm_P = (EZDCStringItem)newItem("arBatRcptNm_P");
	}

	/**
	 * get the type of array which is stored
	 * @return NFCL0510CMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NFCL0510CMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"arLockBoxFileNm_H", "arLockBoxFileNm_H", "H", null, TYPE_HANKAKUEISU, "50", null},
	{"arLockBoxCd_H", "arLockBoxCd_H", "H", null, TYPE_HANKAKUEISU, "2", null},
	{"arLockBoxCd_LC", "arLockBoxCd_LC", "LC", "99", TYPE_HANKAKUEISU, "2", null},
	{"arLockBoxNm_LD", "arLockBoxNm_LD", "LD", "99", TYPE_HANKAKUEISU, "30", null},
	{"arLockBoxStsCd_H", "arLockBoxStsCd_H", "H", null, TYPE_HANKAKUEISU, "2", null},
	{"arLockBoxStsCd_LC", "arLockBoxStsCd_LC", "LC", "99", TYPE_HANKAKUEISU, "2", null},
	{"arLockBoxStsDescTxt_LD", "arLockBoxStsDescTxt_LD", "LD", "99", TYPE_HANKAKUEISU, "50", null},
	{"arLockBoxBatNum_H", "arLockBoxBatNum_H", "H", null, TYPE_HANKAKUEISU, "3", null},
	{"arBatInfoMsgTxt_H", "arBatInfoMsgTxt_H", "H", null, TYPE_HANKAKUEISU, "400", null},
	{"rcvDt_H1", "rcvDt_H1", "H1", null, TYPE_NENTSUKIHI, "8", null},
	{"rcvDt_H2", "rcvDt_H2", "H2", null, TYPE_NENTSUKIHI, "8", null},
	{"xxChkBox_H", "xxChkBox_H", "H", null, TYPE_HANKAKUEIJI, "1", null},
	{"xxPageTblNm", "xxPageTblNm", null, null, TYPE_HANKAKUEISU, "1", null},
	{"xxScrEventNm", "xxScrEventNm", null, null, TYPE_HANKAKUEISU, "50", null},
	{"xxDplyTab", "xxDplyTab", null, null, TYPE_HANKAKUEISU, "50", null},
	{"xxFileData", "xxFileData", null, null, TYPE_UPLOAD, null, null},
	{"xxPageShowFromNum_A", "xxPageShowFromNum_A", "A", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowToNum_A", "xxPageShowToNum_A", "A", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowOfNum_A", "xxPageShowOfNum_A", "A", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"A", "A", null, "40", "business.blap.NFCL0510.NFCL0510_ACMsgArray", null, null},
	
	{"arLockBoxFileNm_BH", "arLockBoxFileNm_BH", "BH", null, TYPE_HANKAKUEISU, "50", null},
	{"arLockBoxBatNum_BH", "arLockBoxBatNum_BH", "BH", null, TYPE_HANKAKUEISU, "3", null},
	{"xxPageShowFromNum_B", "xxPageShowFromNum_B", "B", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowToNum_B", "xxPageShowToNum_B", "B", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowOfNum_B", "xxPageShowOfNum_B", "B", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"B", "B", null, "40", "business.blap.NFCL0510.NFCL0510_BCMsgArray", null, null},
	
	{"arBatRcptNm_P", "arBatRcptNm_P", "P", null, TYPE_HANKAKUEISU, "55", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"AR_LOCK_BOX_FILE_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//arLockBoxFileNm_H
        {"AR_LOCK_BOX_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//arLockBoxCd_H
        {"AR_LOCK_BOX_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//arLockBoxCd_LC
        {"AR_LOCK_BOX_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//arLockBoxNm_LD
        {"AR_LOCK_BOX_STS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//arLockBoxStsCd_H
        {"AR_LOCK_BOX_STS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//arLockBoxStsCd_LC
        {"AR_LOCK_BOX_STS_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//arLockBoxStsDescTxt_LD
        {"AR_LOCK_BOX_BAT_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//arLockBoxBatNum_H
        {"AR_BAT_INFO_MSG_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//arBatInfoMsgTxt_H
        {"RCV_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rcvDt_H1
        {"RCV_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rcvDt_H2
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_H
        {"XX_PAGE_TBL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageTblNm
        {"XX_SCR_EVENT_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxScrEventNm
        {"XX_DPLY_TAB",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDplyTab
        {"XX_FILE_DATA",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxFileData
        {"XX_PAGE_SHOW_FROM_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowFromNum_A
        {"XX_PAGE_SHOW_TO_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowToNum_A
        {"XX_PAGE_SHOW_OF_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowOfNum_A
		null,	//A
        {"AR_LOCK_BOX_FILE_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//arLockBoxFileNm_BH
        {"AR_LOCK_BOX_BAT_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//arLockBoxBatNum_BH
        {"XX_PAGE_SHOW_FROM_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowFromNum_B
        {"XX_PAGE_SHOW_TO_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowToNum_B
        {"XX_PAGE_SHOW_OF_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowOfNum_B
		null,	//B
        {"AR_BAT_RCPT_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//arBatRcptNm_P
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

