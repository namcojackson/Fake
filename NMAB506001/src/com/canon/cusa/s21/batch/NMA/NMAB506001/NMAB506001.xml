<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<sqlMap namespace="NMAB506001">

    <statement id="getInterfaceData" parameterClass="Map">  <!-- (3) b -->
        SELECT
                  #glblCmpyCd#                      AS GLBL_CMPY_CD
                , I.TRTY_TRK_PTY_NUM                AS DS_ACCT_NUM
                , I.LOC_NUM                         AS LOC_NUM
                , I.BILL_TO_CUST_CD                 AS BILL_TO_CUST_CD
                , I.SHIP_TO_CUST_CD                 AS SHIP_TO_CUST_CD
                , I.DS_ACCT_NM                      AS DS_ACCT_NM
                , I.TRTY_TRK_LINE_ADDR_01           AS FIRST_LINE_ADDR
                , I.TRTY_TRK_LINE_ADDR_02           AS SCD_LINE_ADDR
                , I.TRTY_TRK_CTY_ADDR               AS CTY_ADDR
                , I.TRTY_TRK_ST_TXT                 AS ST_CD
                , I.FIRST_POST_CD                   AS FIRST_POST_CD
                , I.TRTY_TRK_EXTN_POST_CD           AS EXTN_POST_CD
                , I.TRTY_TRK_TEL_NUM                AS TEL_NUM
                , I.TRTY_TRK_FAX_NUM                AS FAX_NUM
                , I.DUNS_NUM                        AS DUNS_NUM
                , I.EXTN_DUNS_NUM                   AS EXTN_DUNS_NUM
                , I.DS_CUST_SIC_CD                  AS DS_CUST_SIC_CD
                , I.DS_ACCT_URL                     AS DS_ACCT_URL
                , I.TRTY_ORG_CD                     AS TRTY_ORG_CD
                , I.LINE_BIZ_ROLE_TP_CD             AS LINE_BIZ_ROLE_TP_CD
                , I.TRTY_ORG_ID                     AS ORG_ID_DESC_TXT
                , I.TRTY_TRK_ORG_NM                 AS TRTY_ORG_NM
                , I.LAST_UPD_BY_PSN_TXT             AS RQST_UPD_BY_PSN_CD
                , I.LAST_UPD_TS                     AS RQST_UPD_TS
                , I.TRTY_TRK_CTRY_TXT               AS CTRY_CD
                , I.TRTY_TRK_ADDL_POST_CD           AS ADDL_POST_CD
                , I.DS_LOC_REV_AMT                  AS DS_LOC_REV_AMT
                , I.TRTY_TRK_CUST_SIC_DESC_TXT      AS DS_CUST_SIC_DESC_TXT
                , I.DS_LOC_EMP_NUM                  AS DS_LOC_EMP_NUM
                , NULL                              AS DS_XTRNL_REF_TXT
                , I.TRTY_TRK_DS_DATA_SRC_TXT        AS DS_DATA_SRC_TXT
                , I.TRTY_TRK_RVW_STS_CD             AS TRTY_TRK_RVW_STS_CD
                , I.TO_BE_LOC_NUM                   AS TO_BE_DS_XREF_PSN_CD
                , I.TO_BE_ACCT_TXT                  AS TO_BE_DS_XREF_ACCT_CD
                , NULL                              AS TRTY_TRK_PROS_RVW_STS_CD
            FROM
                NMAI5060_01     I
            WHERE
                I.INTERFACE_ID          = #interfaceId#
                AND I.TRANSACTION_ID    = #transactionId#
                AND I.EZCANCELFLAG      = '0'
            ORDER BY
                I.TRTY_TRK_DS_DATA_SRC_TXT
                , I.LOC_NUM
                , I.TRTY_TRK_PTY_NUM
                , I.DS_ACCT_NM
    </statement>

    <statement id="getNewProspect" parameterClass="Map">    <!-- (4) a -->
        SELECT
                  TTR.TRTY_TRK_PROS_RVW_RSLT_PK
                , TTR.DS_ACCT_NUM
                , TTR.LOC_NUM
                , TTR.BILL_TO_CUST_CD
                , TTR.SHIP_TO_CUST_CD
                , TTR.DS_ACCT_NM
                , TTR.FIRST_LINE_ADDR
                , TTR.SCD_LINE_ADDR
                , TTR.CTY_ADDR
                , TTR.ST_CD
                , TTR.FIRST_POST_CD
                , TTR.EXTN_POST_CD
                , TTR.TEL_NUM
                , TTR.DUNS_NUM
                , TTR.EXTN_DUNS_NUM
                , TTR.DS_CUST_SIC_CD
                , TTR.TRTY_ORG_CD
                , TTR.LINE_BIZ_ROLE_TP_CD
                , TTR.ORG_ID_DESC_TXT
                , TTR.TRTY_ORG_NM
                , TTR.RQST_UPD_BY_PSN_CD
                , TTR.RQST_UPD_TS
                , TTR.CTRY_CD
                , TTR.ADDL_POST_CD
                , TTR.DS_LOC_REV_AMT
                , TTR.DS_CUST_SIC_DESC_TXT
                , TTR.DS_LOC_EMP_NUM
                , TTR.DS_XTRNL_REF_TXT
                , TTR.DS_DATA_SRC_TXT
                , TTR.TRTY_TRK_RVW_STS_CD
                , TTR.TO_BE_DS_XREF_PSN_CD
                , TTR.TO_BE_DS_XREF_ACCT_CD
                , TTR.TRTY_TRK_PROC_STS_CD
                --
                , DARP.RVW_PROS_NUM                     AS ORIG_RVW_PROS_NUM
                , DARP.DS_ACCT_NUM                      AS ORIG_DS_ACCT_NUM
                , DARP.LOC_NUM                          AS ORIG_LOC_NUM
                , NVL(DARP.DS_XREF_ACCT_TP_CD, '99')    AS ORIG_DS_XREF_ACCT_TP_CD
                , DARP.PROS_RVW_STS_CD                  AS ORIG_PROS_RVW_STS_CD
                , DARP.BEF_PSN_NUM                      AS ORIG_BEF_PSN_NUM
                , DARP.BEF_DS_ACCT_NM                   AS ORIG_BEF_DS_ACCT_NM
                , DARP.DS_ACCT_URL                      AS DS_ACCT_URL
                , DARP.AFT_FAX_NUM                      AS FAX_NUM
                --
                , ST.ST_CD                              AS ORIG_ST_CD
                , LBRT.LINE_BIZ_ROLE_TP_CD              AS ORIG_LINE_BIZ_ROLE_TP_CD
                , C.CTRY_CD                             AS ORIG_CTRY_CD
                --
                , CASE
                    WHEN ST.ST_CD IS NULL
                    THEN 'N'
                    ELSE 'Y'
                    END                 EXISTS_ST
                --
                , CASE 
                    WHEN    TTR.LINE_BIZ_ROLE_TP_CD  IS NOT NULL
                        AND LBRT.LINE_BIZ_ROLE_TP_CD IS     NULL
                    THEN 'N' 
                    ELSE 'Y' 
                    END                 EXISTS_LINE_BIZ_ROLE_TP
                --
                , CASE 
                    WHEN    TTR.CTRY_CD IS NOT NULL
                        AND C.CTRY_CD   IS     NULL
                    THEN 'N'
                    ELSE 'Y'
                    END                 EXISTS_CTRY
            FROM
                TRTY_TRK_PROS_RVW_RSLT  TTR
                , DS_ACCT_RVW_PROS      DARP
                , ST                    ST
                , LINE_BIZ_ROLE_TP      LBRT
                , CTRY C 
            WHERE
                TTR.GLBL_CMPY_CD                = #glblCmpyCd#
                AND TTR.TRTY_TRK_RVW_STS_CD    IN (#update#, #delete#)
                AND TTR.TRTY_TRK_PROC_STS_CD    = #new#   -- New
                AND TTR.EZCANCELFLAG            = '0'
                                --
                AND TTR.GLBL_CMPY_CD            = DARP.GLBL_CMPY_CD(+)
                AND TTR.DS_DATA_SRC_TXT         = DARP.RVW_PROS_NUM(+)
                AND DARP.EZCANCELFLAG(+)        = '0'
                               --
                AND TTR.GLBL_CMPY_CD            = ST.GLBL_CMPY_CD(+)
                AND TTR.ST_CD                   = ST.ST_CD(+)
                AND ST.EZCANCELFLAG(+)          = '0'
                                 --
                AND TTR.GLBL_CMPY_CD            = LBRT.GLBL_CMPY_CD(+)
                AND TTR.LINE_BIZ_ROLE_TP_CD     = LBRT.LINE_BIZ_ROLE_TP_CD(+)
                AND LBRT.EZCANCELFLAG(+)        = '0'
                            --
                AND TTR.GLBL_CMPY_CD            = C.GLBL_CMPY_CD(+)
                AND TTR.CTRY_CD                 = C.CTRY_CD(+)
                AND C.EZCANCELFLAG(+)           = '0'
            ORDER BY
                TTR.DS_DATA_SRC_TXT
                , TTR.LOC_NUM
                , TTR.DS_ACCT_NUM
                , TTR.DS_ACCT_NM
    </statement>

    <statement id="getActiveTerritory" parameterClass="Map" resultClass="Map">  <!-- (4) b-1-6. -->
        SELECT
                  DOU.ORG_CD
                , DOU.ORG_STRU_TP_CD
            FROM
                DS_ORG_UNIT     DOU
                , ORG_STRU_TP   OST
            WHERE
                DOU.GLBL_CMPY_CD        = #glblCmpyCd#
                AND DOU.ORG_CD          = #orgCd#
                AND DOU.GNRN_TP_CD     IN (#current#, #future#)
                AND DOU.EFF_FROM_DT    &lt;= #slsDt#
                AND (
                    DOU.EFF_THRU_DT    &gt;= #slsDt#
                    OR DOU.EFF_THRU_DT IS NULL
                )
                AND DOU.EZCANCELFLAG    = '0'
                --
                AND DOU.GLBL_CMPY_CD    = OST.GLBL_CMPY_CD
                AND DOU.ORG_STRU_TP_CD  = OST.ORG_STRU_TP_CD
                AND OST.TRTY_STRU_FLG   = 'Y'
                AND OST.EZCANCELFLAG    = '0'
                AND ROWNUM              =  1
    </statement>

    <statement id="getCountyPk" parameterClass="Map" resultClass="BigDecimal">   <!-- (5) b-1 -->
        SELECT
                  C.CNTY_PK
            FROM
                CNTY C
            WHERE
                C.GLBL_CMPY_CD      = #glblCmpyCd#
                AND C.CNTY_NM       = #cntyNm#
                AND C.ST_CD         = #stCd#
                AND C.EZCANCELFLAG  = '0'
                AND ROWNUM          =  1
    </statement>

    <statement id="getDsAcctRvwProsPkList" parameterClass="Map" resultClass="BigDecimal">   <!-- (5) b-2 -->
        SELECT
                  DARP.DS_ACCT_RVW_PROS_PK
            FROM
                DS_ACCT_RVW_PROS    DARP
            WHERE
                DARP.GLBL_CMPY_CD       = #glblCmpyCd#
                AND DARP.RVW_PROS_NUM   = #rvwProsNum#
              <!-- 2017/10/11 QC#18598 DEL START -->
              <!-- <isNotNull property="locNum"> -->
              <!--  AND DARP.LOC_NUM        = #locNum# -->
              <!-- </isNotNull> -->
              <!-- 2017/10/11 QC#18598 DEL END -->
                AND DARP.EZCANCELFLAG   = '0'
    </statement>

    <statement id="getCountSalesRepRelation" parameterClass="Map" resultClass="Integer">    <!-- (5) c-1-1 -->
        SELECT
                  COUNT(DOU.ORG_CD) CNT
            FROM
                DS_ORG_UNIT         DOU
                , DS_ORG_RESRC_RELN DORR
            WHERE
                DOU.GLBL_CMPY_CD                = #glblCmpyCd#
                AND DOU.ORG_CD                  = #orgCd#
                AND DOU.ORG_STRU_TP_CD          = #orgStruTpCd#
                AND DOU.GNRN_TP_CD             IN (#current#, #future#)
                AND DOU.EFF_FROM_DT            &lt;= #slsDt#
                AND (
                    DOU.EFF_THRU_DT            &gt;= #slsDt#
                    OR DOU.EFF_THRU_DT         IS NULL
                )
                AND DOU.EZCANCELFLAG            = '0'
                --
                AND DOU.GLBL_CMPY_CD            = DORR.GLBL_CMPY_CD
                AND DOU.ORG_CD                  = DORR.ORG_CD
                AND DOU.ORG_STRU_TP_CD          = DORR.ORG_STRU_TP_CD
                AND DORR.GNRN_TP_CD            IN (#current#, #future#)
                AND DORR.EFF_FROM_DT           &lt;= #slsDt#
                AND (
                    DORR.EFF_THRU_DT           &gt;= #slsDt#
                    OR DORR.EFF_THRU_DT        IS NULL
                )
                AND DORR.ACCT_TEAM_ROLE_TP_CD  IS NULL
                AND DORR.EZCANCELFLAG           = '0'
    </statement>

    <statement id="getCountTerritoryRule" parameterClass="Map" resultClass="Integer">   <!-- (5) c-2-1 -->
        SELECT
                  COUNT(TR.GLBL_CMPY_CD)    CNT
            FROM
                TRTY_RULE TR
            WHERE
                TR.GLBL_CMPY_CD             = #glblCmpyCd#
                AND TR.TRTY_RULE_TP_CD      = #trtyRuleTpCd#
                AND TR.ORG_STRU_TP_CD       = #orgStruTpCd#
                AND TR.EFF_FROM_DT         &lt;= #slsDt#
                AND (
                    TR.EFF_THRU_DT         &gt;= #slsDt#
                    OR TR.EFF_THRU_DT      IS NULL
                )
                AND TR.TRTY_RULE_FROM_VAL_TXT = #trtyRuleFromValTxt#    -- locNum
                AND TR.ORG_CD                 = #orgCd#
                AND TR.EZCANCELFLAG           = '0'
    </statement>

    <statement id="getCountTerritoryRuleLogicNotOR" parameterClass="Map" resultClass="Integer"> <!-- (5) c-2-2 -->
        SELECT
                  COUNT(TR.GLBL_CMPY_CD)    CNT
            FROM
                TRTY_RULE TR 
            WHERE
                TR.GLBL_CMPY_CD                 = #glblCmpyCd#
                AND TR.ORG_CD                   = #orgCd#
                AND TR.ORG_STRU_TP_CD           = #orgStruTpCd#
                AND TR.EFF_FROM_DT             &lt;= #slsDt#
                AND ( 
                    TR.EFF_THRU_DT             &gt;= #slsDt#
                    OR TR.EFF_THRU_DT          IS NULL
                ) 
                AND (
                    TR.TRTY_RULE_TP_CD          != #trtyRuleTpCd#
                    OR TR.TRTY_RULE_LOGIC_TP_CD != #trtyRuleLogicTpCd#
                )
                AND TR.EZCANCELFLAG             = '0'
    </statement>

    <!-- 2017/09/14 QC#20360 Mod Start -->
    <!-- <statement id="getRegisterdSalesRep" parameterClass="Map" resultClass="String"> --> <!-- (5) d-1 -->
    <statement id="getRegisterdSalesRep" parameterClass="Map" resultClass="Map">
    <!-- 2017/09/14 QC#20360 Mod End -->
        SELECT
                  P.PSN_NUM
        <!-- 2017/09/14 AQC#20360 Add Start -->
                , P.LINE_BIZ_TP_CD
        <!-- 2017/09/14 AQC#20360 Add End -->
            FROM
                DS_ORG_UNIT         DOU
                , DS_ORG_RESRC_RELN DORR
                , S21_PSN           P
            WHERE
                DOU.GLBL_CMPY_CD                = #glblCmpyCd#
                AND DOU.ORG_CD                  = #orgCd#
                AND DOU.ORG_STRU_TP_CD          = #orgStruTpCd#
                AND DOU.GNRN_TP_CD             IN (#current#, #future#)
                AND DOU.EFF_FROM_DT            &lt;= #slsDt#
                AND (
                    DOU.EFF_THRU_DT            &gt;= #slsDt#
                    OR DOU.EFF_THRU_DT         IS NULL
                )
                AND DOU.EZCANCELFLAG            = '0'
                                --
                AND DOU.GLBL_CMPY_CD            = DORR.GLBL_CMPY_CD
                AND DOU.ORG_CD                  = DORR.ORG_CD
                AND DOU.ORG_STRU_TP_CD          = DORR.ORG_STRU_TP_CD
                AND DORR.GNRN_TP_CD            IN (#current#, #future#)
                AND DORR.EFF_FROM_DT           &lt;= #slsDt#
                AND (
                    DORR.EFF_THRU_DT           &gt;= #slsDt#
                    OR DORR.EFF_THRU_DT        IS NULL
                )
                AND DORR.ACCT_TEAM_ROLE_TP_CD  IS NULL
                AND DORR.EZCANCELFLAG           = '0'
                               --
                AND DORR.GLBL_CMPY_CD           = P.GLBL_CMPY_CD
                AND DORR.PSN_CD                 = P.PSN_CD
                AND P.EZCANCELFLAG              = '0'
            ORDER BY
                P.PSN_NUM
    </statement>

    <statement id="getCustInfoForInactive" parameterClass="Map" resultClass="Map">  <!-- (6) d-1 -->
        SELECT
                  DAP.DS_ACCT_NUM
                , DAP.DS_ACCT_NM
                , DAP.DS_ACCT_ITRL_FLG
                , DAP.DS_ACCT_DLR_CD
                , DAP.DS_ACCT_LEGAL_NM
                , DAP.DBA_NM
                , DAP.RGTN_STS_CD
                , DAP.DS_ACCT_URL
                , DAP.DS_ACCT_CLS_CD
                , DAP.COA_CH_CD
                , DAP.COA_AFFL_CD
                , DAP.DS_ACCT_TP_CD
                --
                , PLW.LOC_NUM
                , PLW.EFF_FROM_DT
                , PLW.EFF_THRU_DT
                , PLW.FIRST_LINE_ADDR
                , PLW.SCD_LINE_ADDR
                , PLW.THIRD_LINE_ADDR
                , PLW.FRTH_LINE_ADDR
                , PLW.CTY_ADDR
                , PLW.ST_CD
                , PLW.POST_CD
                , PLW.CTRY_CD
                , PLW.LOC_NM
                , PLW.ADDL_LOC_NM
                , PLW.GLN_NUM
                , PLW.TEL_NUM
                , PLW.FAX_NUM
                , PLW.PROV_NM
                , PLW.GEO_CD
                --
                , PLW.LINE_BIZ_TP_CD
                , PLW.DS_INSD_CTY_LIMIT_FLG
                , PLW.DS_LOC_NM
                --
                , C.CNTY_NM
            FROM
                DS_ACCT_PROS        DAP
                , PROS_PTY_LOC_WRK  PLW
                , CNTY              C
            WHERE
                DAP.GLBL_CMPY_CD                = #glblCmpyCd#
                <!-- QC#18598 2017/10/11 Add Start -->
                AND DAP.DS_ACCT_NUM             = #dsAcctNum#
                <!-- QC#18598 2017/10/11 Add End -->
                AND DAP.DS_ACCT_ACTV_CUST_FLG   = 'Y'
                AND DAP.LOC_NUM                 = #locNum#
                <!-- QC#20561 2017/08/14 Mod Start -->
                <!-- AND DAP.RGTN_STS_CD             = #rgtnStsCd# -->
                AND DAP.RGTN_STS_CD             = #rgtnStsCd_P01#
                <!-- QC#20561 2017/08/14 Mod End -->
                AND DAP.EZCANCELFLAG            = '0'
                --
                AND DAP.GLBL_CMPY_CD            = PLW.GLBL_CMPY_CD
                AND DAP.PTY_LOC_PK              = PLW.PTY_LOC_PK
                <!-- QC#20561 2017/08/14 Mod Start -->
                <!-- AND PLW.RGTN_STS_CD             = #rgtnStsCd# -->
                AND PLW.RGTN_STS_CD             = #rgtnStsCd_P20#
                <!-- QC#20561 2017/08/14 Mod End -->
                AND PLW.EZCANCELFLAG            = '0'
                --
                AND PLW.GLBL_CMPY_CD            = C.GLBL_CMPY_CD(+)
                AND PLW.CNTY_PK                 = C.CNTY_PK(+)
                AND C.EZCANCELFLAG(+)           = '0'
            ORDER BY
                DAP.DS_ACCT_NUM
    </statement>

    <statement id="getProsRvwId" parameterClass="Map" resultClass="String"> <!-- (6) *1 -->
        SELECT
                 E404.SF_ACCOUNT_ID
            FROM
                CANON_E404_SF_ACCT_MAPPING_TBL E404
            WHERE
                E404.SF_PROSPECT_NUMBER = #sfProspectNumber#    -- DS_DATA_SRC_TXT
                AND ROWNUM              = 1
    </statement>

    <statement id="getE404Info" parameterClass="Map" resultClass="Map"> <!-- (6) *2 -->
      <isNull property="dsDataSrcTxt">
        SELECT
                  SF_ACCOUNT_ID
                , SF_PROSPECT_NUMBER
            FROM
                CANON_E404_SF_ACCT_MAPPING_TBL  E404
            WHERE
                PARTY_SITE_NUMBER = #locNum#
      </isNull>
      <isNotNull property="dsDataSrcTxt">
        SELECT
                  SF_ACCOUNT_ID
                , #dsDataSrcTxt#    AS SF_PROSPECT_NUMBER
            FROM
                CANON_E404_SF_ACCT_MAPPING_TBL  E404
            WHERE
                SF_PROSPECT_NUMBER = #dsDataSrcTxt#
      </isNotNull>
            AND ROWNUM  = 1
    </statement>

    <!-- 2017/08/15 QC#20392-1 Mod Start -->
<!--     <statement id="getCountProsPtyLocWrk" parameterClass="Map" resultClass="Integer"> --> <!-- (4) b-1-7 -->
<!--         SELECT -->
<!--             COUNT(P.LOC_NUM) CNT -->
<!--         FROM -->
<!--             PROS_PTY_LOC_WRK     P -->
<!--         WHERE -->
<!--             P.GLBL_CMPY_CD          = #glblCmpyCd# -->
<!--             AND P.LOC_NUM           = #locNum# -->
<!--             AND P.RGTN_STS_CD      != #rgtnStsCd# -->
<!--             AND P.EFF_FROM_DT      &lt;= #slsDt# -->
<!--             AND (  -->
<!--                 P.EFF_THRU_DT      &gt;= #slsDt# -->
<!--                 OR P.EFF_THRU_DT   IS NULL -->
<!--                 )  -->
<!--             AND P.EZCANCELFLAG      = '0' -->
<!--     </statement> -->
    <statement id="getCountPtyLocWrk" parameterClass="Map" resultClass="Integer"> <!-- (4) b-1-7 -->
        SELECT
               SUM(A.CNT) CNT
        FROM (
            SELECT
                   COUNT(P.LOC_NUM) CNT
            FROM
                   PTY_LOC_WRK     P
            WHERE
                   P.GLBL_CMPY_CD       = #glblCmpyCd#
               AND P.LOC_NUM            = #locNum#
               AND P.RGTN_STS_CD       != #rgtnStsCd#
               AND P.EFF_FROM_DT    &lt;= #slsDt#
               AND ( 
                   P.EFF_THRU_DT    &gt;= #slsDt#
                   OR P.EFF_THRU_DT    IS NULL
                   ) 
                AND P.EZCANCELFLAG      = '0'
            
            UNION ALL
            SELECT
                   COUNT(P.LOC_NUM) CNT
            FROM
                   PROS_PTY_LOC_WRK P
            WHERE
                   P.GLBL_CMPY_CD       = #glblCmpyCd#
               AND P.LOC_NUM            = #locNum#
               AND P.RGTN_STS_CD       != #rgtnStsCd#
               AND P.EFF_FROM_DT    &lt;= #slsDt#
               AND ( 
                   P.EFF_THRU_DT    &gt;= #slsDt#
                   OR P.EFF_THRU_DT    IS NULL
                   ) 
               AND P.EZCANCELFLAG       = '0'
        ) A
    </statement>
    <!-- 2017/08/15 QC#20392-1 Mod End -->

    <statement id="getCustomer" parameterClass="Map" resultClass="Integer">
        SELECT
            COUNT(B.SELL_TO_CUST_PK) CNT
        FROM
             ACCT_LOC     A
            ,SELL_TO_CUST B
        WHERE
                A.GLBL_CMPY_CD  = #glblCmpyCd#
            AND A.LOC_NUM       = #locNum#
            AND A.EZCANCELFLAG  = '0'
            AND A.GLBL_CMPY_CD  = B.GLBL_CMPY_CD
            AND A.LOC_NUM       = B.LOC_NUM
            AND B.EZCANCELFLAG  = '0'
            AND ROWNUM          =  1
    </statement>

    <!-- 2017/09/14 QC#20360 Add Start -->
    <statement id="getCurrentOwnerInfo" parameterClass="Map" resultClass="Map">
        SELECT
               P.LINE_BIZ_TP_CD
        FROM
               S21_PSN        P
              ,LINE_BIZ_TP    L
        WHERE
               P.GLBL_CMPY_CD     = #glblCmpyCd#
           AND P.PSN_NUM          = #psnNum#
           AND P.EZCANCELFLAG     = '0'
           AND L.GLBL_CMPY_CD     = P.GLBL_CMPY_CD
           AND P.LINE_BIZ_TP_CD   = L.LINE_BIZ_TP_CD
           AND L.EZCANCELFLAG     = '0'
    </statement>
    <!-- 2017/09/14 QC#20360 Add End -->
    <!-- 2018/03/23 QC#23157 Add Start -->
    <statement id="getOverlapPostalCode" parameterClass="Map" resultClass="Integer">
        SELECT
               COUNT(TR.TRTY_RULE_PK) CNT
        FROM
               TRTY_RULE TR
        WHERE
               TR.GLBL_CMPY_CD          = #glblCmpyCd#
           AND TR.EFF_FROM_DT       &lt;= #slsDt#
           AND (
               TR.EFF_THRU_DT       &gt;= #slsDt#
            OR TR.EFF_THRU_DT          IS NULL
           )
           AND TR.EZCANCELFLAG          = '0'

           AND TR.ORG_CD                = #orgCd#
           AND TR.ORG_STRU_TP_CD        = #orgStruTpCd#
           AND TR.TRTY_RULE_TP_CD       = #trtyRuleTpCd#
           AND TR.TRTY_RULE_LOGIC_TP_CD = #trtyRuleLogicTpCd#

           AND (
               (TR.TRTY_RULE_OPRD_TP_CD = #trtyRuleOprdTpCd_Eq#
                  AND TR.TRTY_RULE_FROM_VAL_TXT = #postCd#)

            <!-- START 2018/06/01 Hd.Sugawara [QC#24293,DEL] -->
            <!-- OR (TR.TRTY_RULE_OPRD_TP_CD = #trtyRuleOprdTpCd_Lk# -->
            <!--       AND #postCd# LIKE TR.TRTY_RULE_FROM_VAL_TXT) -->
            <!-- END 2018/06/01 Hd.Sugawara [QC#24293,DEL] -->

            OR (TR.TRTY_RULE_OPRD_TP_CD = #trtyRuleOprdTpCd_Bw#
                  AND #postCd# BETWEEN TR.TRTY_RULE_FROM_VAL_TXT AND TR.TRTY_RULE_THRU_VAL_TXT)
           )
    </statement>
    <!-- 2018/03/23 QC#23157 Add End -->

</sqlMap>
