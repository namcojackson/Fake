<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<sqlMap namespace="NWCB010001">

    <statement id="getInvoiceData" parameterClass="Map" resultClass="Map">
    SELECT
         I.INV_NUM                                              INV_NUM
        ,I.INV_DT                                               INV_DT
        ,I.INV_TOT_DEAL_NET_AMT                                 INV_AMT
        ,I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT       INV_CHARGE_AMT
        ,I.INV_TOT_DEAL_FRT_AMT                                 FRT_AMT
        ,I.INV_TOT_DEAL_TAX_AMT                                 TAX_AMT
        ,I.PRE_PMT_AMT                                          PRE_PMT_AMT
        ,I.NET_DUE_DT                                           PAST_DUE_AFT
        ,I.INV_TOT_DEAL_NET_AMT - NVL(I.PRE_PMT_AMT,0)         BALANCE_DUE
        ,CASE WHEN I.INV_TOT_DEAL_NET_AMT &lt; 0 THEN
             '-' || DECODE(I.INV_TOT_DEAL_NET_AMT, NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(ABS(I.INV_TOT_DEAL_NET_AMT), #amtFormat#)
         ELSE
             DECODE(I.INV_TOT_DEAL_NET_AMT, NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(I.INV_TOT_DEAL_NET_AMT, #amtFormat#)
         END    INV_AMT_TXT
        ,CASE WHEN (I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT) &lt; 0 THEN
             '-' || DECODE((I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT), NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(ABS(I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT),#amtFormat#)
         ELSE
             DECODE((I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT), NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT,#amtFormat#)
         END   INV_CHARGE_AMT_TXT
        ,CASE WHEN I.INV_TOT_DEAL_FRT_AMT &lt; 0 THEN
             '-' || DECODE(I.INV_TOT_DEAL_FRT_AMT, NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(ABS(I.INV_TOT_DEAL_FRT_AMT), #amtFormat#)
         ELSE
             DECODE(I.INV_TOT_DEAL_FRT_AMT, NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(I.INV_TOT_DEAL_FRT_AMT, #amtFormat#)
         END    FRT_AMT_TXT
        ,CASE WHEN I.INV_TOT_DEAL_TAX_AMT &lt; 0 THEN
             '-' || DECODE(I.INV_TOT_DEAL_TAX_AMT, NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(ABS(I.INV_TOT_DEAL_TAX_AMT), #amtFormat#)
         ELSE
             DECODE(I.INV_TOT_DEAL_TAX_AMT, NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(I.INV_TOT_DEAL_TAX_AMT, #amtFormat#)
         END    TAX_AMT_TXT
        ,CASE WHEN I.PRE_PMT_AMT &lt; 0 THEN
             '-' || DECODE(I.PRE_PMT_AMT, NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(ABS(I.PRE_PMT_AMT), #amtFormat#)
         ELSE
             DECODE(I.PRE_PMT_AMT, NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(I.PRE_PMT_AMT, #amtFormat#)
         END    PRE_PMT_AMT_TXT
        ,CASE WHEN (I.INV_TOT_DEAL_NET_AMT - NVL(I.PRE_PMT_AMT,0)) &lt; 0 THEN
             '-' || DECODE(I.INV_TOT_DEAL_NET_AMT - NVL(I.PRE_PMT_AMT,0), NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(ABS(I.INV_TOT_DEAL_NET_AMT - NVL(I.PRE_PMT_AMT,0)),#amtFormat#)
         ELSE
             DECODE(I.INV_TOT_DEAL_NET_AMT - NVL(I.PRE_PMT_AMT,0), NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(I.INV_TOT_DEAL_NET_AMT - NVL(I.PRE_PMT_AMT,0),#amtFormat#)
         END    BALANCE_DUE_TXT

        ,SI.BILL_TO_CUST_ACCT_CD                                 BILL_TO_CD
        ,DAC.DS_ACCT_NM                                          BILL_TO_NM
        ,TRIM(TRIM(I.BILL_TO_CTAC_PSN_FIRST_NM || ' ' || I.BILL_TO_CTAC_PSN_MID_NM)
            || ' ' || I.BILL_TO_CTAC_PSN_LAST_NM)               BILL_TO_ATTN

        ,I.RCPNT_FIRST_LINE_ADDR                                BILL_TO_FIRST_ADDR
        ,RTRIM(I.RCPNT_SCD_LINE_ADDR || ' ' || I.RCPNT_THIRD_LINE_ADDR || ' ' || I.RCPNT_FRTH_LINE_ADDR)   BILL_TO_SCD_ADDR
        ,I.RCPNT_CTY_ADDR                                       BILL_TO_CTY
        ,I.RCPNT_ST_CD                                          BILL_TO_ST
        ,I.RCPNT_POST_CD                                        BILL_TO_ZIP_CD
        ,I.BILL_TO_CUST_CD                                      BILL_TO_CUST_CD
        ,BTC.LOC_NUM                                            BILL_TO_LOC_NUM
        ,I.PMT_TERM_CD                                          PMT_TERM_CD
        ,PT.PMT_TERM_NM                                         TERMS
        ,#formatKey1#                                           FORMAT_KEY
        ,SI.DS_CONTR_CATG_CD                                    CONTR_CATG
        ,SI.SVC_INV_SRC_TP_CD                                   INV_SRC_TP
        , NULL                                                  ORDER_TYPE
        ,I.DS_INV_TP_CD                                        DS_INV_TP
        ,E.EIN_CD                                               REM_TO_EIN_CD
        ,RT.LOC_NM                                              REM_TO_NM
        ,RT.FIRST_LINE_ADDR                                     REM_TO_FIRST_ADDR
        ,RT.SCD_LINE_ADDR || RT.THIRD_LINE_ADDR || RT.FRTH_LINE_ADDR    
                                                                REM_TO_SCD_ADDR
        ,RT.CTY_ADDR                                            REM_TO_CTY
        ,RT.ST_CD                                               REM_TO_ST
        ,RT.POST_CD                                             REM_TO_POST
        ,I.INV_TOT_DEAL_FRT_AMT                                 INV_TOT_DEAL_FRT_AMT
        ,I.INV_TOT_DEAL_TAX_AMT                                 INV_TOT_DEAL_TAX_AMT
        ,I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT       INV_TOT_DEAL_SLS_AMT
        ,I.INV_TOT_DEAL_NET_AMT                                 INV_TOT_DEAL_NET_AMT
        ,DIT.INV_PRINT_FLG                                      INV_PRINT_FLG
        ,I.LINE_BIZ_TP_CD                                       LINE_BIZ_TP_CD
        ,I.DS_BIZ_AREA_CD                                       DS_BIZ_AREA_CD
        ,CASE WHEN NVL(NVL(BTC.DS_TAX_PRNT_TP_CD, DAC.DS_TAX_PRNT_TP_CD), #dsTaxPrntTp10#) = #dsTaxPrntTp10#
            THEN 'N' ELSE 'Y' END   TAX_DETAIL_FLG
        ,I.DPLY_MDSE_DTL_FLG        DTL_DPLY_FLG
        ,CASE WHEN SI.DS_CONTR_CATG_CD = #dsContrCatgFlt# AND SI.SVC_INV_SRC_TP_CD = #svcInvSrcTpC#
                THEN #formatTpFL#
            <!-- QC#29371 -->
              WHEN SI.DS_CONTR_CATG_CD = #dsContrCatgAgg# AND SI.SVC_INV_SRC_TP_CD = #svcInvSrcTpC#
                THEN #formatTpAG#
              WHEN SI.DS_CONTR_CATG_CD  &lt;&gt; #dsContrCatgFlt# 
               AND SI.DS_CONTR_CATG_CD  &lt;&gt; #dsContrCatgAgg# AND SI.SVC_INV_SRC_TP_CD = #svcInvSrcTpC#  <!-- QC#29371 -->
                THEN #formatTpMA#
              ELSE   #formatTpPL#  
         END                          FORMAT_TYPE
        ,I.INV_TP_CD                                            INV_TP_CD
        ,I.PMT_TERM_CASH_DISC_CD                                PMT_TERM_CASH_DISC_CD
        ,I.PMT_TERM_CD                                          PAYMENT_TERM_CD
        ,PTCD.ISTL_PMT_TERM_FLG                                 ISTL_FLG
        ,I.INV_PRT_BAT_TP_CD                                   BAT_TP
        ,I.CPO_ORD_NUM                                          CPO_ORD_NUM
        ,SI.DS_CONTR_PK                                         CONTR_PK
        ,SI.FSR_NUM                                             FSR_NUM
        ,I.INV_FIRST_CMNT_TXT                                   COMMENT1
        ,NVL(I.INV_SCD_CMNT_TXT, '')                            COMMENT2
        ,I.INV_THIRD_CMNT_TXT                                   COMMENT3
        ,I.INV_FRTH_CMNT_TXT                                    COMMENT4
        ,PTCD.PMT_CC_FLG                                        PMT_CC_FLG
        ,DCC.CR_CARD_LAST_DIGIT_NUM                             CR_CARD_LAST_DIGIT 
        ,I.INV_PRINT_STS_CD                                     INV_PRINT_STS_CD
        ,CASE WHEN (SELECT COUNT(DS_INV_MTR_DTL_PK) 
                        FROM DS_INV_MTR_DTL DIM 
                        WHERE DIM.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                          AND DIM.INV_NUM      = I.INV_NUM
                          AND DIM.EZCANCELFLAG = '0')  > 0 
            THEN 'Y' ELSE 'N' END                               AR_METER_FLG
        ,I.DS_ORD_CATG_CD                                      DS_ORD_CATG_CD
        ,I.DS_ORD_TP_CD                                        DS_ORD_TP_CD
        ,I.DS_ORD_RSN_CD                                       DS_ORD_RSN_CD
        ,NVL(I.ORD_DT, I.INV_DT)                                ORD_DT
        ,I.PMT_TERM_CASH_DISC_CD
        ,I.PMT_TERM_CASH_DISC_DESC_TXT
        ,CCY.CCY_SGN_TXT
        ,LBT.INV_PRINT_MSG_TXT
        ,(SELECT
            COUNT(SIL.SVC_INV_LINE_PK)
        FROM 
            SVC_INV_LINE        SIL
        WHERE
                SIL.GLBL_CMPY_CD        = #glblCmpyCd#
            AND SIL.SVC_INV_NUM         = SI.SVC_INV_NUM
            AND SIL.SVC_INV_CHRG_TP_CD  = #svcInvChrgTpCdMC#
            AND SIL.EZCANCELFLAG        = '0') MC_CNT
        ,I.SYS_SRC_CD
        ,SI.CR_CARD_CUST_REF_NUM
        ,I.CR_REBIL_RSN_CATG_CD
        ,I.SLS_REP_TOC_CD
        ,'02' INV_PRINT_STYLE_CD
        ,I.CUST_CARE_TKT_NUM
        ,I.ORIG_INV_NUM
        ,0 SUPLY_CNT
        ,'0'                                                   MAN_INV_FLG
        ,I.CR_CARD_CHRG_CPLT_CD
        <!-- 2019/11/02 QC#53873 ADD START -->
        ,NVL(CECH.CONS_BILL_STATUS, 'Y')                          CONS_BILL_STATUS
        <!-- 2019/11/02 QC#53873 ADD END -->
        <!-- START 2023/11/08 R.Takau [QC#61584, ADD] -->
        ,'N'                                                   TAX_PRINT_FLG
        <!-- END 2023/11/08 R.Takau [QC#61584, ADD] -->
    FROM 
         SVC_INV            SI
        ,BILL_TO_CUST       BTC
        ,PMT_TERM           PT
        ,INV                I
        ,REM_TO             RT
        ,DS_INV_TP          DIT
        ,SELL_TO_CUST       DAC
        ,PMT_TERM_CASH_DISC PTCD
        ,EIN                E
        ,DS_CR_CARD         DCC
        ,CCY                CCY
        ,LINE_BIZ_TP        LBT
        <!-- 2019/11/02 QC#53873 ADD START -->
        ,CANON_E193_CS_HEADERS CECH
        <!-- 2019/11/02 QC#53873 ADD END -->
    WHERE
            I.INV_PRINT_STS_CD      IN (#invPrintStsCd1#, #invPrintStsCd3#)
        AND I.INV_DT            &lt;= #slsDt#
        AND I.GLBL_CMPY_CD          = #glblCmpyCd#
        AND I.FNLZ_INV_FLG          = 'Y'
        AND I.EZCANCELFLAG          = '0'
        AND I.BILL_TO_CUST_CD       = BTC.BILL_TO_CUST_CD
        AND I.GLBL_CMPY_CD          = BTC.GLBL_CMPY_CD
        AND BTC.EZCANCELFLAG        = '0'
        AND I.PMT_TERM_CD           = PT.PMT_TERM_CD
        AND I.GLBL_CMPY_CD          = PT.GLBL_CMPY_CD
        AND PT.EZCANCELFLAG         = '0'
        AND I.SYS_SRC_CD         &lt;&gt; #sysSrcCdNFC#
        AND I.INV_NUM               = SI.SVC_INV_NUM 
        AND I.GLBL_CMPY_CD          = SI.GLBL_CMPY_CD
        AND SI.EZCANCELFLAG         = '0'
        AND BTC.REM_ID              = RT.REM_ID
        AND BTC.GLBL_CMPY_CD        = RT.GLBL_CMPY_CD
        AND RT.EZCANCELFLAG         = '0'
        AND I.DS_INV_TP_CD         = DIT.DS_INV_TP_CD
        AND I.GLBL_CMPY_CD         = DIT.GLBL_CMPY_CD
        AND DIT.EZCANCELFLAG        = '0'
        AND I.BILL_TO_CUST_ACCT_CD = DAC.SELL_TO_CUST_CD
        AND I.GLBL_CMPY_CD         = DAC.GLBL_CMPY_CD
        AND DAC.EZCANCELFLAG        = '0'
        <isEqual property="procMode" compareValue="01">
        AND NOT EXISTS (SELECT '1' 
                        FROM    INV_PRT_CTRL    IPC
                        WHERE IPC.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                          AND IPC.INV_NUM      = I.INV_NUM
                          AND IPC.EZCANCELFLAG = '0')
        </isEqual>
        <isEqual property="procMode" compareValue="02">
        AND EXISTS (SELECT '1' 
                        FROM    INV_PRT_CTRL    IPC
                        WHERE IPC.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                          AND IPC.INV_NUM      = I.INV_NUM
                          AND IPC.EZCANCELFLAG = '0')
        </isEqual>
        AND I.PMT_TERM_CASH_DISC_CD     = PTCD.PMT_TERM_CASH_DISC_CD
        AND I.GLBL_CMPY_CD              = PTCD.GLBL_CMPY_CD
        AND PTCD.EZCANCELFLAG           = '0'
        AND E.GLBL_CMPY_CD              = #glblCmpyCd#
        AND E.EZCANCELFLAG              = '0'
        AND SI.CR_CARD_CUST_REF_NUM     = DCC.CR_CARD_CUST_REF_NUM(+)
        AND SI.GLBL_CMPY_CD             = DCC.GLBL_CMPY_CD(+)
        AND DCC.EZCANCELFLAG(+)         = '0'
        AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
        AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
        AND CCY.EZCANCELFLAG(+)         = '0'
        AND I.GLBL_CMPY_CD             = LBT.GLBL_CMPY_CD(+)   
        AND I.LINE_BIZ_TP_CD           = LBT.LINE_BIZ_TP_CD(+)   
        AND LBT.EZCANCELFLAG(+)         = '0'
        <!-- 2019/11/02 QC#53873 ADD START -->
        AND SI.CUST_CARE_TKT_NUM        = CECH.TICKET_NUMBER (+)
        <!-- 2019/11/02 QC#53873 ADD END -->
   UNION ALL
    SELECT
         I.INV_NUM                                              INV_NUM
        ,I.INV_DT                                               INV_DT
        ,I.INV_TOT_DEAL_NET_AMT                                 INV_AMT
        <!-- 2019/10/04 QC#53599 Mod Start -->
        ,CASE WHEN IL.INV_NUM IS NULL THEN
             I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT
         ELSE
             I.INV_TOT_DEAL_TAX_AMT
         END                                                    INV_CHARGE_AMT 
        <!-- ,I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT       INV_CHARGE_AMT -->
        <!-- 2019/10/04 QC#53599 Mod Start -->
        ,I.INV_TOT_DEAL_FRT_AMT                                 FRT_AMT
        <!-- 2019/10/04 QC#53599 Mod Start -->
        ,CASE WHEN IL.INV_NUM IS NULL THEN
             I.INV_TOT_DEAL_TAX_AMT
         ELSE
             I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT
         END                                                    TAX_AMT 
         <!-- 2019/10/04 QC#53599 Mod Start -->
         <!-- ,I.INV_TOT_DEAL_TAX_AMT                                 TAX_AMT -->
        ,I.PRE_PMT_AMT                                          PRE_PMT_AMT
        ,I.NET_DUE_DT                                           PAST_DUE_AFT
        ,I.INV_TOT_DEAL_NET_AMT - NVL(I.PRE_PMT_AMT,0)         BALANCE_DUE
        ,CASE WHEN I.INV_TOT_DEAL_NET_AMT &lt; 0 THEN
             '-' || DECODE(I.INV_TOT_DEAL_NET_AMT, NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(ABS(I.INV_TOT_DEAL_NET_AMT), #amtFormat#)
         ELSE
             DECODE(I.INV_TOT_DEAL_NET_AMT, NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(I.INV_TOT_DEAL_NET_AMT, #amtFormat#)
         END    INV_AMT_TXT
        ,CASE WHEN (I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT) &lt; 0 THEN
             '-' || DECODE((I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT), NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(ABS(I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT),#amtFormat#)
         ELSE
             DECODE((I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT), NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT,#amtFormat#)
         END   INV_CHARGE_AMT_TXT
        ,CASE WHEN I.INV_TOT_DEAL_FRT_AMT &lt; 0 THEN
             '-' || DECODE(I.INV_TOT_DEAL_FRT_AMT, NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(ABS(I.INV_TOT_DEAL_FRT_AMT), #amtFormat#)
         ELSE
             DECODE(I.INV_TOT_DEAL_FRT_AMT, NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(I.INV_TOT_DEAL_FRT_AMT, #amtFormat#)
         END    FRT_AMT_TXT
        ,CASE WHEN I.INV_TOT_DEAL_TAX_AMT &lt; 0 THEN
             '-' || DECODE(I.INV_TOT_DEAL_TAX_AMT, NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(ABS(I.INV_TOT_DEAL_TAX_AMT), #amtFormat#)
         ELSE
             DECODE(I.INV_TOT_DEAL_TAX_AMT, NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(I.INV_TOT_DEAL_TAX_AMT, #amtFormat#)
         END    TAX_AMT_TXT
        ,CASE WHEN I.PRE_PMT_AMT &lt; 0 THEN
             '-' || DECODE(I.PRE_PMT_AMT, NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(ABS(I.PRE_PMT_AMT), #amtFormat#)
         ELSE
             DECODE(I.PRE_PMT_AMT, NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(I.PRE_PMT_AMT, #amtFormat#)
         END    PRE_PMT_AMT_TXT
        ,CASE WHEN (I.INV_TOT_DEAL_NET_AMT - NVL(I.PRE_PMT_AMT,0)) &lt; 0 THEN
             '-' || DECODE(I.INV_TOT_DEAL_NET_AMT - NVL(I.PRE_PMT_AMT,0), NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(ABS(I.INV_TOT_DEAL_NET_AMT - NVL(I.PRE_PMT_AMT,0)),#amtFormat#)
         ELSE
             DECODE(I.INV_TOT_DEAL_NET_AMT - NVL(I.PRE_PMT_AMT,0), NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(I.INV_TOT_DEAL_NET_AMT - NVL(I.PRE_PMT_AMT,0),#amtFormat#)
         END    BALANCE_DUE_TXT
        <!-- 2019/06/04 QC#50647 MOD START -->
        <!-- ,SI.BILL_TO_CUST_ACCT_CD                                 BILL_TO_CD -->
        ,I.BILL_TO_CUST_ACCT_CD                                  BILL_TO_CD
        <!-- 2019/06/04 QC#50647 MOD END -->
        ,DAC.DS_ACCT_NM                                          BILL_TO_NM
        ,TRIM(TRIM(I.BILL_TO_CTAC_PSN_FIRST_NM || ' ' || I.BILL_TO_CTAC_PSN_MID_NM)
            || ' ' || I.BILL_TO_CTAC_PSN_LAST_NM)               BILL_TO_ATTN

        ,I.RCPNT_FIRST_LINE_ADDR                                BILL_TO_FIRST_ADDR
        ,RTRIM(I.RCPNT_SCD_LINE_ADDR || ' ' || I.RCPNT_THIRD_LINE_ADDR || ' ' || I.RCPNT_FRTH_LINE_ADDR)   BILL_TO_SCD_ADDR
        ,I.RCPNT_CTY_ADDR                                       BILL_TO_CTY
        ,I.RCPNT_ST_CD                                          BILL_TO_ST
        ,I.RCPNT_POST_CD                                        BILL_TO_ZIP_CD
        ,I.BILL_TO_CUST_CD                                      BILL_TO_CUST_CD
        ,BTC.LOC_NUM                                            BILL_TO_LOC_NUM
        ,I.PMT_TERM_CD                                          PMT_TERM_CD
        ,PT.PMT_TERM_NM                                         TERMS
        ,#formatKey1#                                           FORMAT_KEY
        ,SI.DS_CONTR_CATG_CD                                    CONTR_CATG
        ,SI.SVC_INV_SRC_TP_CD                                   INV_SRC_TP
        , NULL                                                  ORDER_TYPE
        ,I.DS_INV_TP_CD                                        DS_INV_TP
        ,E.EIN_CD                                               REM_TO_EIN_CD
        ,RT.LOC_NM                                              REM_TO_NM
        ,RT.FIRST_LINE_ADDR                                     REM_TO_FIRST_ADDR
        ,RT.SCD_LINE_ADDR || RT.THIRD_LINE_ADDR || RT.FRTH_LINE_ADDR    
                                                                REM_TO_SCD_ADDR
        ,RT.CTY_ADDR                                            REM_TO_CTY
        ,RT.ST_CD                                               REM_TO_ST
        ,RT.POST_CD                                             REM_TO_POST
        ,I.INV_TOT_DEAL_FRT_AMT                                 INV_TOT_DEAL_FRT_AMT
        <!-- 2019/06/05 QC#50731 MOD START  -->
        <!-- ,I.INV_TOT_DEAL_TAX_AMT                                 INV_TOT_DEAL_TAX_AMT -->
        ,CASE WHEN IL.INV_NUM IS NULL
              THEN I.INV_TOT_DEAL_TAX_AMT
              ELSE I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT
         END INV_TOT_DEAL_TAX_AMT
        <!-- ,I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT       INV_TOT_DEAL_SLS_AMT -->
        ,CASE WHEN IL.INV_NUM IS NULL
              THEN I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT
              ELSE I.INV_TOT_DEAL_TAX_AMT
         END INV_TOT_DEAL_SLS_AMT
        <!-- 2019/06/05 QC#50731 MOD END  -->
        ,I.INV_TOT_DEAL_NET_AMT                                 INV_TOT_DEAL_NET_AMT
        ,DIT.INV_PRINT_FLG                                      INV_PRINT_FLG
        ,I.LINE_BIZ_TP_CD                                      LINE_BIZ_TP_CD
        ,I.DS_BIZ_AREA_CD                                      DS_BIZ_AREA_CD
        ,CASE WHEN NVL(NVL(BTC.DS_TAX_PRNT_TP_CD, DAC.DS_TAX_PRNT_TP_CD), #dsTaxPrntTp10#) = #dsTaxPrntTp10#
            THEN 'N' ELSE 'Y' END   TAX_DETAIL_FLG
        ,I.DPLY_MDSE_DTL_FLG        DTL_DPLY_FLG
        ,CASE WHEN SI.DS_CONTR_CATG_CD = #dsContrCatgFlt# AND SI.SVC_INV_SRC_TP_CD = #svcInvSrcTpC#
                THEN #formatTpFL#
            <!-- QC#29371 -->
              WHEN SI.DS_CONTR_CATG_CD = #dsContrCatgAgg# AND SI.SVC_INV_SRC_TP_CD = #svcInvSrcTpC#
                THEN #formatTpAG#
              WHEN SI.DS_CONTR_CATG_CD  &lt;&gt; #dsContrCatgFlt#
               AND SI.DS_CONTR_CATG_CD  &lt;&gt; #dsContrCatgAgg# AND SI.SVC_INV_SRC_TP_CD = #svcInvSrcTpC#  <!-- QC#29371 -->
                THEN #formatTpMA#
              ELSE   #formatTpPL#  
         END                          FORMAT_TYPE
        ,I.INV_TP_CD                                            INV_TP_CD
        ,I.PMT_TERM_CASH_DISC_CD                                PMT_TERM_CASH_DISC_CD
        ,I.PMT_TERM_CD                                          PAYMENT_TERM_CD
        ,PTCD.ISTL_PMT_TERM_FLG                                 ISTL_FLG
        ,I.INV_PRT_BAT_TP_CD                                   BAT_TP
        ,I.CPO_ORD_NUM                                          CPO_ORD_NUM
        ,SI.DS_CONTR_PK                                         CONTR_PK
        ,SI.FSR_NUM                                             FSR_NUM
        ,I.INV_FIRST_CMNT_TXT                                   COMMENT1
        ,NVL(I.INV_SCD_CMNT_TXT, '')                            COMMENT2
        ,I.INV_THIRD_CMNT_TXT                                   COMMENT3
        ,I.INV_FRTH_CMNT_TXT                                    COMMENT4
        ,PTCD.PMT_CC_FLG                                        PMT_CC_FLG
        ,DCC.CR_CARD_LAST_DIGIT_NUM                             CR_CARD_LAST_DIGIT 
        ,I.INV_PRINT_STS_CD                                     INV_PRINT_STS_CD
        ,CASE WHEN (SELECT COUNT(DS_INV_MTR_DTL_PK) 
                        FROM DS_INV_MTR_DTL DIM 
                        WHERE DIM.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                          AND DIM.INV_NUM      = I.INV_NUM
                          AND DIM.EZCANCELFLAG = '0')  > 0 
        <!-- 2019/06/25 QC#50915 ADD START  -->
            AND <!-- If multi Tier --> 
                NOT EXISTS(SELECT 1
                        FROM SVC_INV_LINE       SIL
                            ,DS_CONTR_BLLG_SCHD BS
                        WHERE SIL.GLBL_CMPY_CD          = SI.GLBL_CMPY_CD
                          AND SIL.SVC_INV_NUM           = SI.SVC_INV_NUM
                          AND SIL.EZCANCELFLAG          = '0'
                          AND SIL.GLBL_CMPY_CD          = BS.GLBL_CMPY_CD
                          AND SIL.DS_CONTR_BLLG_SCHD_PK = BS.DS_CONTR_BLLG_SCHD_PK
                          AND BS.USG_CHRG_FLG          = 'Y'
                          AND BS.EZCANCELFLAG          = '0'
                          AND EXISTS (SELECT 1 FROM CONTR_XS_COPY X 
                                       WHERE X.GLBL_CMPY_CD       = BS.GLBL_CMPY_CD 
                                       AND X.DS_CONTR_BLLG_MTR_PK = BS.DS_CONTR_BLLG_MTR_PK 
                                       AND X.EZCANCELFLAG         = '0' 
                                       AND X.XS_MTR_FIRST_FLG     = 'N' )
                        )
        <!-- 2019/06/05 QC#50915 ADD END  -->
            THEN 'Y' ELSE 'N' END                              AR_METER_FLG
        ,I.DS_ORD_CATG_CD                                      DS_ORD_CATG_CD
        ,I.DS_ORD_TP_CD                                        DS_ORD_TP_CD
        ,I.DS_ORD_RSN_CD                                       DS_ORD_RSN_CD
        ,NVL(I.ORD_DT, I.INV_DT)                                ORD_DT
        ,I.PMT_TERM_CASH_DISC_CD
        ,I.PMT_TERM_CASH_DISC_DESC_TXT
        ,CCY.CCY_SGN_TXT
        ,LBT.INV_PRINT_MSG_TXT
        ,(SELECT
            COUNT(SIL.SVC_INV_LINE_PK)
        FROM 
            SVC_INV_LINE        SIL
        WHERE
                SIL.GLBL_CMPY_CD        = #glblCmpyCd#
            AND SIL.SVC_INV_NUM         = SI.SVC_INV_NUM
            AND SIL.SVC_INV_CHRG_TP_CD  = #svcInvChrgTpCdMC#
            AND SIL.EZCANCELFLAG        = '0') MC_CNT
        ,I.SYS_SRC_CD
        ,SI.CR_CARD_CUST_REF_NUM
        ,I.CR_REBIL_RSN_CATG_CD
        ,I.SLS_REP_TOC_CD
        ,'02' INV_PRINT_STYLE_CD
        ,I.CUST_CARE_TKT_NUM
        ,I.ORIG_INV_NUM
        ,0 SUPLY_CNT
        ,'0'                                                   MAN_INV_FLG
        ,I.CR_CARD_CHRG_CPLT_CD
        <!-- 2019/11/02 QC#53873 ADD START -->
        ,NVL(CECH.CONS_BILL_STATUS, 'Y')                          CONS_BILL_STATUS
        <!-- 2019/11/02 QC#53873 ADD END -->
        <!-- START 2023/11/08 R.Takau [QC#61584, ADD] -->
        ,'N'                                                   TAX_PRINT_FLG
        <!-- END 2023/11/08 R.Takau [QC#61584, ADD] -->
    FROM 
         SVC_INV            SI
        ,BILL_TO_CUST       BTC
        ,PMT_TERM           PT
        ,INV                I
        ,REM_TO             RT
        ,DS_INV_TP          DIT
        ,SELL_TO_CUST       DAC
        ,PMT_TERM_CASH_DISC PTCD
        ,EIN                E
        ,DS_CR_CARD         DCC
        ,CCY                CCY
        ,LINE_BIZ_TP        LBT
        <!-- 2019/06/05 QC#50731 ADD START  -->
        ,(SELECT IL.INV_NUM FROM INV_LINE IL, TAX_ADJ_ITEM TAI WHERE IL.GLBL_CMPY_CD = #glblCmpyCd# AND IL.EZCANCELFLAG = '0' AND IL.GLBL_CMPY_CD = TAI.GLBL_CMPY_CD AND IL.EZCANCELFLAG = TAI.EZCANCELFLAG AND IL.MDSE_CD = TAI.MDSE_CD GROUP BY IL.INV_NUM) IL
        <!-- 2019/06/05 QC#50731 ADD END  -->
        <!-- 2019/11/02 QC#53873 ADD START -->
        ,CANON_E193_CS_HEADERS CECH
        <!-- 2019/11/02 QC#53873 ADD END -->
    WHERE
            I.INV_PRINT_STS_CD      IN (#invPrintStsCd1#, #invPrintStsCd3#)
        AND I.INV_DT            &lt;= #slsDt#
        AND I.GLBL_CMPY_CD          = #glblCmpyCd#
        AND I.FNLZ_INV_FLG          = 'Y'
        AND I.EZCANCELFLAG          = '0'
        AND I.BILL_TO_CUST_CD       = BTC.BILL_TO_CUST_CD
        AND I.GLBL_CMPY_CD          = BTC.GLBL_CMPY_CD
        AND BTC.EZCANCELFLAG        = '0'
        AND I.PMT_TERM_CD           = PT.PMT_TERM_CD
        AND I.GLBL_CMPY_CD          = PT.GLBL_CMPY_CD
        AND PT.EZCANCELFLAG         = '0'
        AND I.SYS_SRC_CD            = #sysSrcCdNFC#
        AND I.ORIG_INV_NUM          = SI.SVC_INV_NUM 
        AND I.GLBL_CMPY_CD          = SI.GLBL_CMPY_CD
        AND SI.EZCANCELFLAG         = '0'
        AND BTC.REM_ID              = RT.REM_ID
        AND BTC.GLBL_CMPY_CD        = RT.GLBL_CMPY_CD
        AND RT.EZCANCELFLAG         = '0'
        AND I.DS_INV_TP_CD         = DIT.DS_INV_TP_CD
        AND I.GLBL_CMPY_CD         = DIT.GLBL_CMPY_CD
        AND DIT.EZCANCELFLAG        = '0'
        AND I.BILL_TO_CUST_ACCT_CD = DAC.SELL_TO_CUST_CD
        AND I.GLBL_CMPY_CD         = DAC.GLBL_CMPY_CD
        AND DAC.EZCANCELFLAG        = '0'
        <isEqual property="procMode" compareValue="01">
        AND NOT EXISTS (SELECT '1' 
                        FROM    INV_PRT_CTRL    IPC
                        WHERE IPC.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                          AND IPC.INV_NUM      = I.INV_NUM
                          AND IPC.EZCANCELFLAG = '0')
        </isEqual>
        <isEqual property="procMode" compareValue="02">
        AND EXISTS (SELECT '1' 
                        FROM    INV_PRT_CTRL    IPC
                        WHERE IPC.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                          AND IPC.INV_NUM      = I.INV_NUM
                          AND IPC.EZCANCELFLAG = '0')
        </isEqual>
        AND I.PMT_TERM_CASH_DISC_CD     = PTCD.PMT_TERM_CASH_DISC_CD
        AND I.GLBL_CMPY_CD              = PTCD.GLBL_CMPY_CD
        AND PTCD.EZCANCELFLAG           = '0'
        AND E.GLBL_CMPY_CD              = #glblCmpyCd#
        AND E.EZCANCELFLAG              = '0'
        AND SI.CR_CARD_CUST_REF_NUM     = DCC.CR_CARD_CUST_REF_NUM(+)
        AND SI.GLBL_CMPY_CD             = DCC.GLBL_CMPY_CD(+)
        AND DCC.EZCANCELFLAG(+)         = '0'
        AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
        AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
        AND CCY.EZCANCELFLAG(+)         = '0'
        AND I.GLBL_CMPY_CD             = LBT.GLBL_CMPY_CD(+)   
        AND I.LINE_BIZ_TP_CD           = LBT.LINE_BIZ_TP_CD(+)   
        AND LBT.EZCANCELFLAG(+)         = '0'
        <!-- 2019/06/05 QC#50731 ADD START -->
        AND I.INV_NUM                   = IL.INV_NUM(+)
        <!-- 2019/06/05 QC#50731 ADD END  -->
        <!-- 2019/11/02 QC#53873 ADD START -->
        AND SI.CUST_CARE_TKT_NUM        = CECH.TICKET_NUMBER (+)
        <!-- 2019/11/02 QC#53873 ADD END -->
   UNION ALL
    SELECT 
         I.INV_NUM                                              INV_NUM
        ,I.INV_DT                                               INV_DT
        ,I.INV_TOT_DEAL_NET_AMT                                 INV_AMT
        ,I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT       INV_CHARGE_AMT
        ,I.INV_TOT_DEAL_FRT_AMT                                 FRT_AMT 
        ,I.INV_TOT_DEAL_TAX_AMT                                 TAX_AMT 
        ,I.PRE_PMT_AMT                                         PRE_PMT_AMT_TXT
        ,I.NET_DUE_DT                                           PAST_DUE_AFT
        ,I.INV_TOT_DEAL_NET_AMT - NVL(I.PRE_PMT_AMT,0)         BALANCE_DUE
        ,CASE WHEN I.INV_TOT_DEAL_NET_AMT &lt; 0 THEN
             '-' || DECODE(I.INV_TOT_DEAL_NET_AMT, NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(ABS(I.INV_TOT_DEAL_NET_AMT), #amtFormat#)
         ELSE
             DECODE(I.INV_TOT_DEAL_NET_AMT, NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(I.INV_TOT_DEAL_NET_AMT, #amtFormat#)
         END    INV_AMT_TXT
        ,CASE WHEN (I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT) &lt; 0 THEN
             '-' || DECODE((I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT), NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(ABS(I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT),#amtFormat#)
         ELSE
             DECODE((I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT), NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT,#amtFormat#)
         END   INV_CHARGE_AMT_TXT
        ,CASE WHEN I.INV_TOT_DEAL_FRT_AMT &lt; 0 THEN
             '-' || DECODE(I.INV_TOT_DEAL_FRT_AMT, NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(ABS(I.INV_TOT_DEAL_FRT_AMT), #amtFormat#)
         ELSE
             DECODE(I.INV_TOT_DEAL_FRT_AMT, NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(I.INV_TOT_DEAL_FRT_AMT, #amtFormat#)
         END    FRT_AMT_TXT
        ,CASE WHEN I.INV_TOT_DEAL_TAX_AMT &lt; 0 THEN
             '-' || DECODE(I.INV_TOT_DEAL_TAX_AMT, NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(ABS(I.INV_TOT_DEAL_TAX_AMT), #amtFormat#)
         ELSE
             DECODE(I.INV_TOT_DEAL_TAX_AMT, NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(I.INV_TOT_DEAL_TAX_AMT, #amtFormat#)
         END    TAX_AMT_TXT
        ,CASE WHEN I.PRE_PMT_AMT &lt; 0 THEN
             '-' || DECODE(I.PRE_PMT_AMT, NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(ABS(I.PRE_PMT_AMT), #amtFormat#)
         ELSE
             DECODE(I.PRE_PMT_AMT, NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(I.PRE_PMT_AMT, #amtFormat#)
         END    PRE_PMT_AMT_TXT
        ,CASE WHEN (I.INV_TOT_DEAL_NET_AMT - NVL(I.PRE_PMT_AMT,0)) &lt; 0 THEN
             '-' || DECODE(I.INV_TOT_DEAL_NET_AMT - NVL(I.PRE_PMT_AMT,0), NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(ABS(I.INV_TOT_DEAL_NET_AMT - NVL(I.PRE_PMT_AMT,0)),#amtFormat#)
         ELSE
             DECODE(I.INV_TOT_DEAL_NET_AMT - NVL(I.PRE_PMT_AMT,0), NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(I.INV_TOT_DEAL_NET_AMT - NVL(I.PRE_PMT_AMT,0),#amtFormat#)
         END    BALANCE_DUE_TXT

        ,I.BILL_TO_CUST_ACCT_CD                                BILL_TO_CD
        ,DAC.DS_ACCT_NM                                         BILL_TO_NM
        ,TRIM(BILL_TO_CTAC_PSN_FIRST_NM || ' ' || BILL_TO_CTAC_PSN_MID_NM
            || ' ' || BILL_TO_CTAC_PSN_LAST_NM)                 BILL_TO_ATTN
        ,I.RCPNT_FIRST_LINE_ADDR                                BILL_TO_FIRST_ADDR
        ,RTRIM(I.RCPNT_SCD_LINE_ADDR || I.RCPNT_THIRD_LINE_ADDR || I.RCPNT_FRTH_LINE_ADDR)     BILL_TO_SCD_ADDR
        <!-- QC#19420 mod Start-->
        <!-- ,BTC.CTY_ADDR                                           BILL_TO_CTY -->
        <!-- ,BTC.ST_CD                                              BILL_TO_ST -->
        <!-- ,BTC.POST_CD                                            BILL_TO_ZIP_CD -->
        ,I.RCPNT_CTY_ADDR                                       BILL_TO_CTY
        ,I.RCPNT_ST_CD                                          BILL_TO_ST
        ,I.RCPNT_POST_CD                                        BILL_TO_ZIP_CD
        <!-- QC#19420 mod End-->
        ,BTC.BILL_TO_CUST_CD                                    BILL_TO_CUST_CD
        ,BTC.LOC_NUM                                            BILL_TO_LOC_NUM
        ,I.PMT_TERM_CD                                          PMT_TERM_CD
        ,PT.PMT_TERM_NM                                         TERMS
        ,#formatKey2#                                           FORMAT_KEY
        ,NULL                                                   CONTR_CATG
        ,NULL                                                   INV_SRC_TP
        ,DC.DS_ORD_TP_CD                                        ORDER_TYPE
        ,I.DS_INV_TP_CD                                        DS_INV_TP
        ,E.EIN_CD                                               REM_TO_EIN_CD
        ,RT.LOC_NM                                              REM_TO_NM
        ,RT.FIRST_LINE_ADDR                                     REM_TO_FIRST_ADDR
        ,RT.SCD_LINE_ADDR || RT.THIRD_LINE_ADDR || RT.FRTH_LINE_ADDR        REM_TO_SCD_ADDR
        ,RT.CTY_ADDR                                            REM_TO_CTY
        ,RT.ST_CD                                               REM_TO_ST
        ,RT.POST_CD                                             REM_TO_POST
        ,I.INV_TOT_DEAL_FRT_AMT                                 INV_TOT_DEAL_FRT_AMT
        ,I.INV_TOT_DEAL_TAX_AMT                                 INV_TOT_DEAL_TAX_AMT
        ,I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT       INV_TOT_DEAL_SLS_AMT
        ,I.INV_TOT_DEAL_NET_AMT                                 INV_TOT_DEAL_NET_AMT
        ,DIT.INV_PRINT_FLG                                      INV_PRINT_FLG
        ,I.LINE_BIZ_TP_CD                                      LINE_BIZ_TP_CD
        ,I.DS_BIZ_AREA_CD                                      DS_BIZ_AREA_CD
        ,CASE WHEN NVL(NVL(BTC.DS_TAX_PRNT_TP_CD, DAC.DS_TAX_PRNT_TP_CD), #dsTaxPrntTp10#) = #dsTaxPrntTp10#
              THEN 'N' ELSE 'Y' END                             TAX_DETAIL_FLG
        ,I.DPLY_MDSE_DTL_FLG                                   DTL_DPLY_FLG
        ,#formatTpSS#                                           FORMAT_TYPE
        ,I.INV_TP_CD                                            INV_TP_CD
        ,I.PMT_TERM_CASH_DISC_CD                                PMT_TERM_CASH_DISC_CD
        ,I.PMT_TERM_CD                                          PAYMENT_TERM_CD
        ,PTCD.ISTL_PMT_TERM_FLG                                 ISTL_FLG
        ,I.INV_PRT_BAT_TP_CD                                   BAT_TP
        ,I.CPO_ORD_NUM                                          CPO_ORD_NUM
        ,NULL                                                   CONTR_PK
        ,NULL                                                   FSR_NUM
        ,I.INV_FIRST_CMNT_TXT                                   COMMENT1
        ,I.INV_SCD_CMNT_TXT                                     COMMENT2
        ,I.INV_THIRD_CMNT_TXT                                   COMMENT3
        ,I.INV_FRTH_CMNT_TXT                                    COMMENT4
        ,PTCD.PMT_CC_FLG                                        PMT_CC_FLG
        ,NULL                                                   CR_CARD_LAST_DIGIT  
        ,I.INV_PRINT_STS_CD                                     INV_PRINT_STS_CD
        ,'N'                                                    AR_METER_FLG
        ,I.DS_ORD_CATG_CD                                      DS_ORD_CATG_CD
        ,I.DS_ORD_TP_CD                                        DS_ORD_TP_CD
        ,I.DS_ORD_RSN_CD                                       DS_ORD_RSN_CD
        ,NVL(I.ORD_DT, I.INV_DT)                                ORD_DT
        ,I.PMT_TERM_CASH_DISC_CD
        ,I.PMT_TERM_CASH_DISC_DESC_TXT
        ,CCY.CCY_SGN_TXT
        ,LBT.INV_PRINT_MSG_TXT
        ,0 MC_CNT
        ,I.SYS_SRC_CD
        ,NULL CR_CARD_CUST_REF_NUM
        ,I.CR_REBIL_RSN_CATG_CD
        ,I.SLS_REP_TOC_CD
        ,NVL(DOTPD.INV_PRINT_STYLE_CD, '02') INV_PRINT_STYLE_CD
        ,I.CUST_CARE_TKT_NUM
        ,I.ORIG_INV_NUM
        ,(select count(OCBC.ORD_CATG_BIZ_CTX_PK) from ORD_CATG_BIZ_CTX OCBC
          where EZCANCELFLAG = '0' 
          AND OCBC.GLBL_CMPY_CD = I.GLBL_CMPY_CD AND OCBC.ORD_CATG_CTX_TP_CD = 'INV_PRT_SUPPLIES_ORDER'
          AND OCBC.DS_ORD_CATG_CD = I.DS_ORD_CATG_CD
          AND (OCBC.DS_ORD_TP_CD = I.DS_ORD_TP_CD OR OCBC.DS_ORD_TP_CD IS NULL))            SUPLY_CNT
        ,'0'                                                   MAN_INV_FLG
        ,I.CR_CARD_CHRG_CPLT_CD
        <!-- 2019/11/02 QC#53873 ADD START -->
        ,'Y'                          CONS_BILL_STATUS
        <!-- 2019/11/02 QC#53873 ADD END -->
        <!-- START 2023/11/09 R.Takau [QC#61584, ADD] -->
        ,CASE WHEN (SELECT COUNT(*)
                       FROM INV II
                       WHERE
                           II.GLBL_CMPY_CD         = I.GLBL_CMPY_CD
                       AND II.BILL_TO_CUST_ACCT_CD IN (
                           <iterate property="billToCustAcctCdCfsArray" var="billToCustAcctCdCfsArray[]" open="" close="" conjunction=",">
                           #billToCustAcctCdCfsArray[]#
                           </iterate>
                       )
                       AND II.DS_INV_TP_CD         IN (
                           <iterate property="taxPrintDsInvTpArray" var="taxPrintDsInvTpArray[]" open="" close="" conjunction=",">
                           #taxPrintDsInvTpArray[]#
                           </iterate>
                       )
                       AND II.INV_NUM              = I.INV_NUM
                       AND II.EZCANCELFLAG         = '0'
                       AND EXISTS (
                           SELECT 1
                           FROM INV_BOL IB
                           WHERE 1=1
                           AND IB.GLBL_CMPY_CD           = II.GLBL_CMPY_CD
                           AND II.INV_NUM = IB.INV_NUM
                           AND IB.SHIP_TO_ST_CD IN (
                               <iterate property="shipToCustStCdArray" var="shipToCustStCdArray[]" open="" close="" conjunction=",">
                               #shipToCustStCdArray[]#
                               </iterate>
                               )
                           AND IB.EZCANCELFLAG            = '0'
                       )
                       AND EXISTS (
                           SELECT 1
                           FROM ORG_FUNC_ASG OFA, S21_PSN SP
                           WHERE 1=1
                           AND OFA.GLBL_CMPY_CD           = II.GLBL_CMPY_CD
                           AND OFA.TOC_CD                 = II.SLS_REP_TOC_CD
                           AND OFA.EZCANCELFLAG           = '0'
                           AND SP.GLBL_CMPY_CD            = OFA.GLBL_CMPY_CD
                           AND SP.PSN_CD                  = OFA.PSN_CD
                           AND SP.ST_CD                   IN (
                               <iterate property="slsRepStCdArray" var="slsRepStCdArray[]" open="" close="" conjunction=",">
                               #slsRepStCdArray[]#
                               </iterate>
                           )
                           AND SP.EZCANCELFLAG            = '0'
                       )
                       AND NOT EXISTS (
                           SELECT 1
                           FROM INV_LINE IL, TAX_ADJ_ITEM TAI
                           WHERE 1=1
                           AND IL.GLBL_CMPY_CD            = II.GLBL_CMPY_CD
                           AND IL.INV_NUM                 = II.INV_NUM
                           AND IL.EZCANCELFLAG            = '0'
                           AND TAI.GLBL_CMPY_CD           = IL.GLBL_CMPY_CD
                           AND TAI.MDSE_CD                = IL.MDSE_CD
                           AND TAI.EZCANCELFLAG           = '0'
                           )
                       AND NOT EXISTS (
                           SELECT 1
                           FROM INV_LINE IL
                           WHERE 1=1
                           AND IL.GLBL_CMPY_CD            = II.GLBL_CMPY_CD
                           AND IL.INV_NUM                 = II.INV_NUM
                           AND IL.MDSE_CD                 IN ( 
                               <iterate property="slsTaxMdseCdArray" var="slsTaxMdseCdArray[]" open="" close="" conjunction=",">
                               #slsTaxMdseCdArray[]#
                               </iterate>
                           )
                           AND IL.EZCANCELFLAG            = '0'
                       )
                   ) > 0
            THEN 'Y' ELSE 'N' END                              TAX_PRINT_FLG
            <!-- END 2023/11/09 R.Takau [QC#61584, ADD] -->
    FROM 
         INV                I
        ,BILL_TO_CUST       BTC
        ,PMT_TERM           PT
        ,CPO                DC
        ,REM_TO             RT
        ,DS_INV_TP          DIT
        ,SELL_TO_CUST       DAC
        ,PMT_TERM_CASH_DISC PTCD
        ,EIN                E
        ,CCY                CCY
        ,LINE_BIZ_TP        LBT
        ,DS_ORD_TP_PROC_DFN DOTPD
    WHERE
            I.INV_PRINT_STS_CD      IN (#invPrintStsCd1#, #invPrintStsCd3#)
        AND I.INV_DT            &lt;= #slsDt#
        AND I.GLBL_CMPY_CD          = #glblCmpyCd#
        AND I.FNLZ_INV_FLG          = 'Y'
        AND I.EZCANCELFLAG          = '0'
        AND NOT EXISTS (
                SELECT
                    1
                FROM
                    SVC_INV
                WHERE
                    GLBL_CMPY_CD                    = #glblCmpyCd#
                <!-- QC#27069 Del Start -->
                <!--
                AND
                    I.SYS_SRC_CD                    &lt;&gt; #sysSrcCdNFC#
                -->
                <!-- QC#27069 Del End -->
                AND
                    SVC_INV_NUM                     = I.INV_NUM
                AND
                    EZCANCELFLAG                    = '0'
            )
       <!-- QC#27069 Del Start -->
       <!--
        AND NOT EXISTS (
                SELECT
                    1
                FROM
                    SVC_INV
                WHERE
                    GLBL_CMPY_CD                    = #glblCmpyCd#
                AND
                    I.SYS_SRC_CD                    = #sysSrcCdNFC#
                AND
                    SVC_INV_NUM                     = I.ORIG_INV_NUM
                AND
                    EZCANCELFLAG                    = '0'
            )
        -->
        <!-- QC#27069 Del End -->
        AND I.BILL_TO_CUST_CD       = BTC.BILL_TO_CUST_CD
        AND I.GLBL_CMPY_CD          = BTC.GLBL_CMPY_CD
        AND BTC.EZCANCELFLAG        = '0'
        AND I.PMT_TERM_CD           = PT.PMT_TERM_CD
        AND I.GLBL_CMPY_CD          = PT.GLBL_CMPY_CD
        AND PT.EZCANCELFLAG         = '0'
        AND I.CPO_ORD_NUM           = DC.CPO_ORD_NUM(+)
        AND I.GLBL_CMPY_CD          = DC.GLBL_CMPY_CD(+)
        AND DC.EZCANCELFLAG(+)      = '0'
        AND BTC.REM_ID              = RT.REM_ID(+)
        AND BTC.GLBL_CMPY_CD        = RT.GLBL_CMPY_CD(+)
        AND RT.EZCANCELFLAG(+)      = '0'
        AND I.DS_INV_TP_CD         = DIT.DS_INV_TP_CD
        AND I.GLBL_CMPY_CD         = DIT.GLBL_CMPY_CD
        AND DIT.EZCANCELFLAG        = '0'
        AND I.BILL_TO_CUST_ACCT_CD = DAC.SELL_TO_CUST_CD
        AND I.GLBL_CMPY_CD         = DAC.GLBL_CMPY_CD
        AND DAC.EZCANCELFLAG        = '0'
        <isEqual property="procMode" compareValue="01">
        AND NOT EXISTS (SELECT '1'
                        FROM INV_PRT_CTRL       IPC
                        WHERE IPC.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                          AND IPC.INV_NUM      = I.INV_NUM
                          AND IPC.EZCANCELFLAG = '0')
        </isEqual>
        <isEqual property="procMode" compareValue="02">
        AND EXISTS (SELECT '1'
                    FROM INV_PRT_CTRL       IPC
                    WHERE IPC.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                      AND IPC.INV_NUM      = I.INV_NUM
                      AND IPC.EZCANCELFLAG = '0')
        </isEqual>
        AND I.PMT_TERM_CASH_DISC_CD = PTCD.PMT_TERM_CASH_DISC_CD
        AND I.GLBL_CMPY_CD          = PTCD.GLBL_CMPY_CD
        AND PTCD.EZCANCELFLAG       = '0'
        AND E.GLBL_CMPY_CD          = #glblCmpyCd#
        AND E.EZCANCELFLAG          = '0'
        AND I.GLBL_CMPY_CD          = CCY.GLBL_CMPY_CD(+)
        AND I.DEAL_CCY_CD           = CCY.CCY_CD(+)
        AND CCY.EZCANCELFLAG(+)     = '0'
        AND I.GLBL_CMPY_CD          = LBT.GLBL_CMPY_CD(+)
        AND I.LINE_BIZ_TP_CD        = LBT.LINE_BIZ_TP_CD(+)
        AND LBT.EZCANCELFLAG(+)     = '0'
        AND I.GLBL_CMPY_CD          = DOTPD.GLBL_CMPY_CD(+)
        AND I.EZCANCELFLAG          = DOTPD.EZCANCELFLAG(+)
        AND I.DS_ORD_TP_CD          = DOTPD.DS_ORD_TP_CD(+)
        <!-- QC#27069 Add Start -->
        AND I.SYS_SRC_CD            &lt;&gt; #sysSrcCdNFC#
        <!-- QC#27069 Add End -->
   UNION ALL
    SELECT 
         I.INV_NUM                                              INV_NUM
        ,I.INV_DT                                               INV_DT
        ,I.INV_TOT_DEAL_NET_AMT                                 INV_AMT
        <!-- 2019/10/04 QC#53599 Mod Start -->
        ,CASE WHEN IL.INV_NUM IS NULL THEN
             I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT
         ELSE
             I.INV_TOT_DEAL_TAX_AMT
         END                                                    INV_CHARGE_AMT 
        <!-- ,I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT       INV_CHARGE_AMT -->
        <!-- 2019/10/04 QC#53599 Mod Start -->
        ,I.INV_TOT_DEAL_FRT_AMT                                 FRT_AMT 
        <!-- 2019/10/04 QC#53599 Mod Start -->
        ,CASE WHEN IL.INV_NUM IS NULL THEN
             I.INV_TOT_DEAL_TAX_AMT
         ELSE
             I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT
         END                                                    TAX_AMT 
         <!-- 2019/10/04 QC#53599 Mod Start -->
         <!-- ,I.INV_TOT_DEAL_TAX_AMT                                 TAX_AMT -->
        ,I.PRE_PMT_AMT                                          PRE_PMT_AMT
        ,I.NET_DUE_DT                                           PAST_DUE_AFT
        ,I.INV_TOT_DEAL_NET_AMT - NVL(I.PRE_PMT_AMT,0)          BALANCE_DUE
        ,CASE WHEN I.INV_TOT_DEAL_NET_AMT &lt; 0 THEN
             '-' || DECODE(I.INV_TOT_DEAL_NET_AMT, NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(ABS(I.INV_TOT_DEAL_NET_AMT), #amtFormat#)
         ELSE
             DECODE(I.INV_TOT_DEAL_NET_AMT, NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(I.INV_TOT_DEAL_NET_AMT, #amtFormat#)
         END    INV_AMT_TXT
        ,CASE WHEN (I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT) &lt; 0 THEN
             '-' || DECODE((I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT), NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(ABS(I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT),#amtFormat#)
         ELSE
             DECODE((I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT), NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT,#amtFormat#)
         END   INV_CHARGE_AMT_TXT
        ,CASE WHEN I.INV_TOT_DEAL_FRT_AMT &lt; 0 THEN
             '-' || DECODE(I.INV_TOT_DEAL_FRT_AMT, NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(ABS(I.INV_TOT_DEAL_FRT_AMT), #amtFormat#)
         ELSE
             DECODE(I.INV_TOT_DEAL_FRT_AMT, NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(I.INV_TOT_DEAL_FRT_AMT, #amtFormat#)
         END    FRT_AMT_TXT
        ,CASE WHEN I.INV_TOT_DEAL_TAX_AMT &lt; 0 THEN
             '-' || DECODE(I.INV_TOT_DEAL_TAX_AMT, NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(ABS(I.INV_TOT_DEAL_TAX_AMT), #amtFormat#)
         ELSE
             DECODE(I.INV_TOT_DEAL_TAX_AMT, NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(I.INV_TOT_DEAL_TAX_AMT, #amtFormat#)
         END    TAX_AMT_TXT
        ,CASE WHEN I.PRE_PMT_AMT &lt; 0 THEN
             '-' || DECODE(I.PRE_PMT_AMT, NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(ABS(I.PRE_PMT_AMT), #amtFormat#)
         ELSE
             DECODE(I.PRE_PMT_AMT, NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(I.PRE_PMT_AMT, #amtFormat#)
         END    PRE_PMT_AMT_TXT
        ,CASE WHEN (I.INV_TOT_DEAL_NET_AMT - NVL(I.PRE_PMT_AMT,0)) &lt; 0 THEN
             '-' || DECODE(I.INV_TOT_DEAL_NET_AMT - NVL(I.PRE_PMT_AMT,0), NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(ABS(I.INV_TOT_DEAL_NET_AMT - NVL(I.PRE_PMT_AMT,0)),#amtFormat#)
         ELSE
             DECODE(I.INV_TOT_DEAL_NET_AMT - NVL(I.PRE_PMT_AMT,0), NULL, '', CCY.CCY_SGN_TXT) || TO_CHAR(I.INV_TOT_DEAL_NET_AMT - NVL(I.PRE_PMT_AMT,0),#amtFormat#)
         END    BALANCE_DUE_TXT

        ,I.BILL_TO_CUST_ACCT_CD                                BILL_TO_CD
        ,DAC.DS_ACCT_NM                                         BILL_TO_NM
        ,TRIM(BILL_TO_CTAC_PSN_FIRST_NM || ' ' || BILL_TO_CTAC_PSN_MID_NM
            || ' ' || BILL_TO_CTAC_PSN_LAST_NM)                 BILL_TO_ATTN
        ,I.RCPNT_FIRST_LINE_ADDR                                BILL_TO_FIRST_ADDR
        ,RTRIM(I.RCPNT_SCD_LINE_ADDR || I.RCPNT_THIRD_LINE_ADDR || I.RCPNT_FRTH_LINE_ADDR)     BILL_TO_SCD_ADDR
        ,I.RCPNT_CTY_ADDR                                       BILL_TO_CTY
        ,I.RCPNT_ST_CD                                          BILL_TO_ST
        ,I.RCPNT_POST_CD                                        BILL_TO_ZIP_CD
        ,BTC.BILL_TO_CUST_CD                                    BILL_TO_CUST_CD
        ,BTC.LOC_NUM                                            BILL_TO_LOC_NUM
        ,I.PMT_TERM_CD                                          PMT_TERM_CD
        ,PT.PMT_TERM_NM                                         TERMS
        ,#formatKey2#                                           FORMAT_KEY
        ,NULL                                                   CONTR_CATG
        ,NULL                                                   INV_SRC_TP
        ,DC.DS_ORD_TP_CD                                        ORDER_TYPE
        ,I.DS_INV_TP_CD                                        DS_INV_TP
        ,E.EIN_CD                                               REM_TO_EIN_CD
        ,RT.LOC_NM                                              REM_TO_NM
        ,RT.FIRST_LINE_ADDR                                     REM_TO_FIRST_ADDR
        ,RT.SCD_LINE_ADDR || RT.THIRD_LINE_ADDR || RT.FRTH_LINE_ADDR        REM_TO_SCD_ADDR
        ,RT.CTY_ADDR                                            REM_TO_CTY
        ,RT.ST_CD                                               REM_TO_ST
        ,RT.POST_CD                                             REM_TO_POST
        ,I.INV_TOT_DEAL_FRT_AMT                                 INV_TOT_DEAL_FRT_AMT
        <!-- 2019/06/05 QC#50731 MOD START  -->
        <!-- ,I.INV_TOT_DEAL_TAX_AMT                                 INV_TOT_DEAL_TAX_AMT -->
        ,CASE WHEN IL.INV_NUM IS NULL
              THEN I.INV_TOT_DEAL_TAX_AMT
              ELSE I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT
         END INV_TOT_DEAL_TAX_AMT
        <!-- ,I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT       INV_TOT_DEAL_SLS_AMT -->
        ,CASE WHEN IL.INV_NUM IS NULL
              THEN I.INV_TOT_DEAL_SLS_AMT + I.INV_TOT_DEAL_DISC_AMT
              ELSE I.INV_TOT_DEAL_TAX_AMT
         END INV_TOT_DEAL_SLS_AMT
        <!-- 2019/06/05 QC#50731 MOD END  -->
        ,I.INV_TOT_DEAL_NET_AMT                                 INV_TOT_DEAL_NET_AMT
        ,DIT.INV_PRINT_FLG                                      INV_PRINT_FLG
        ,I.LINE_BIZ_TP_CD                                      LINE_BIZ_TP_CD
        ,I.DS_BIZ_AREA_CD                                      DS_BIZ_AREA_CD
        ,CASE WHEN NVL(NVL(BTC.DS_TAX_PRNT_TP_CD, DAC.DS_TAX_PRNT_TP_CD), #dsTaxPrntTp10#) = #dsTaxPrntTp10#
              THEN 'N' ELSE 'Y' END                             TAX_DETAIL_FLG
        ,I.DPLY_MDSE_DTL_FLG                                   DTL_DPLY_FLG

        ,CASE 

         <isNotNull property="fsrInvTpCdArray">
         WHEN
            <iterate property="fsrInvTpCdArray" var="fsrInvTpCd[]" open="I.DS_INV_TP_CD IN (" close=")" conjunction=",">
             #fsrInvTpCd[]#
             </iterate>
         THEN #formatTpPL#
         </isNotNull>

         WHEN ( 
           SELECT
               COUNT(IL.DS_CONTR_NUM) 
           FROM
               INV_LINE IL
           WHERE
               IL.GLBL_CMPY_CD = I.GLBL_CMPY_CD 
               AND IL.EZCANCELFLAG = I.EZCANCELFLAG 
               AND IL.INV_NUM = I.INV_NUM
         ) &gt; 0 
         THEN 
           CASE WHEN ( 
             SELECT
                 DC.DS_CONTR_CATG_CD 
             FROM
               ( 
                 SELECT
                     IL2.DS_CONTR_NUM 
                 FROM
                     INV_LINE IL2
                 WHERE
                     IL2.GLBL_CMPY_CD = I.GLBL_CMPY_CD 
                     AND IL2.EZCANCELFLAG = I.EZCANCELFLAG 
                     AND IL2.INV_NUM = I.INV_NUM
               ) DCN
               , DS_CONTR DC 
             WHERE
               DC.DS_CONTR_NUM = DCN.DS_CONTR_NUM 
               AND ROWNUM = 1
           ) = #dsContrCatgFlt#
           <!-- Tobe
           THEN #formatTpFL#
           -->
           <!-- For QC#27069 -->
           THEN #formatTpSS#
           ELSE 
             CASE WHEN EXISTS(
                 SELECT
                     1 
                 FROM
                     INV_LINE IL3
                 WHERE
                     IL3.GLBL_CMPY_CD = I.GLBL_CMPY_CD 
                     AND IL3.EZCANCELFLAG = I.EZCANCELFLAG 
                     AND IL3.INV_NUM = I.INV_NUM
                     AND IL3.SVC_INV_CHRG_TP_CD IN (#svcInvChrgTpCdBC#, #svcInvChrgTpCdMC#, #svcInvChrgTpCdAC#))
             THEN #formatTpMA#
             ELSE #formatTpSS#
             END 
           END 
         ELSE #formatTpSS#
         END FORMAT_TYPE 

        ,I.INV_TP_CD                                            INV_TP_CD
        ,I.PMT_TERM_CASH_DISC_CD                                PMT_TERM_CASH_DISC_CD
        ,I.PMT_TERM_CD                                          PAYMENT_TERM_CD
        ,PTCD.ISTL_PMT_TERM_FLG                                 ISTL_FLG
        ,I.INV_PRT_BAT_TP_CD                                   BAT_TP
        ,I.CPO_ORD_NUM                                          CPO_ORD_NUM
        ,NULL                                                   CONTR_PK
        ,NULL                                                   FSR_NUM
        ,I.INV_FIRST_CMNT_TXT                                   COMMENT1
        ,I.INV_SCD_CMNT_TXT                                     COMMENT2
        ,I.INV_THIRD_CMNT_TXT                                   COMMENT3
        ,I.INV_FRTH_CMNT_TXT                                    COMMENT4
        ,PTCD.PMT_CC_FLG                                        PMT_CC_FLG
        ,NULL                                                   CR_CARD_LAST_DIGIT  
        ,I.INV_PRINT_STS_CD                                     INV_PRINT_STS_CD
        ,'N'                                                    AR_METER_FLG
        ,I.DS_ORD_CATG_CD                                      DS_ORD_CATG_CD
        ,I.DS_ORD_TP_CD                                        DS_ORD_TP_CD
        ,I.DS_ORD_RSN_CD                                       DS_ORD_RSN_CD
        ,NVL(I.ORD_DT, I.INV_DT)                                ORD_DT
        ,I.PMT_TERM_CASH_DISC_CD
        ,I.PMT_TERM_CASH_DISC_DESC_TXT
        ,CCY.CCY_SGN_TXT
        ,LBT.INV_PRINT_MSG_TXT
        ,0 MC_CNT
        ,I.SYS_SRC_CD
        ,NULL CR_CARD_CUST_REF_NUM
        ,I.CR_REBIL_RSN_CATG_CD
        ,I.SLS_REP_TOC_CD
        ,NVL(DOTPD.INV_PRINT_STYLE_CD, '02') INV_PRINT_STYLE_CD
        ,I.CUST_CARE_TKT_NUM
        ,I.ORIG_INV_NUM
        ,(select count(OCBC.ORD_CATG_BIZ_CTX_PK) from ORD_CATG_BIZ_CTX OCBC
          where EZCANCELFLAG = '0' 
          AND OCBC.GLBL_CMPY_CD = I.GLBL_CMPY_CD AND OCBC.ORD_CATG_CTX_TP_CD = 'INV_PRT_SUPPLIES_ORDER'
          AND OCBC.DS_ORD_CATG_CD = I.DS_ORD_CATG_CD
          AND (OCBC.DS_ORD_TP_CD = I.DS_ORD_TP_CD OR OCBC.DS_ORD_TP_CD IS NULL))            SUPLY_CNT
        ,'1'                                                   MAN_INV_FLG
        ,I.CR_CARD_CHRG_CPLT_CD
        <!-- 2019/11/02 QC#53873 ADD START -->
        ,'Y'                          CONS_BILL_STATUS
        <!-- 2019/11/02 QC#53873 ADD END -->
        <!-- START 2023/11/09 R.Takau [QC#61584, ADD] -->
        ,CASE WHEN (SELECT COUNT(*)
                       FROM INV II
                       WHERE
                           II.GLBL_CMPY_CD         = I.GLBL_CMPY_CD
                       AND II.BILL_TO_CUST_ACCT_CD IN (
                           <iterate property="billToCustAcctCdCfsArray" var="billToCustAcctCdCfsArray[]" open="" close="" conjunction=",">
                           #billToCustAcctCdCfsArray[]#
                           </iterate>
                       )
                       AND II.DS_INV_TP_CD         IN (
                           <iterate property="taxPrintDsInvTpArray" var="taxPrintDsInvTpArray[]" open="" close="" conjunction=",">
                           #taxPrintDsInvTpArray[]#
                           </iterate>
                       )
                       AND II.INV_NUM              = I.INV_NUM
                       AND II.EZCANCELFLAG         = '0'
                       AND EXISTS (
                                    SELECT 1
                                    FROM INV_BOL IB
                                    WHERE 1=1
                           AND IB.GLBL_CMPY_CD           = II.GLBL_CMPY_CD
                                    AND II.INV_NUM = IB.INV_NUM
                                    AND IB.SHIP_TO_ST_CD IN (
                               <iterate property="shipToCustStCdArray" var="shipToCustStCdArray[]" open="" close="" conjunction=",">
                               #shipToCustStCdArray[]#
                               </iterate>
                           )
                           AND IB.EZCANCELFLAG            = '0'
                       )
                       AND EXISTS (
                           SELECT 1
                           FROM ORG_FUNC_ASG OFA, S21_PSN SP
                           WHERE 1=1
                           AND OFA.GLBL_CMPY_CD           = II.GLBL_CMPY_CD
                           AND OFA.TOC_CD                 = II.SLS_REP_TOC_CD
                           AND OFA.EZCANCELFLAG           = '0'
                           AND SP.GLBL_CMPY_CD            = OFA.GLBL_CMPY_CD
                           AND SP.PSN_CD                  = OFA.PSN_CD
                           AND SP.ST_CD                   IN (
                               <iterate property="slsRepStCdArray" var="slsRepStCdArray[]" open="" close="" conjunction=",">
                               #slsRepStCdArray[]#
                               </iterate>
                           )
                           AND SP.EZCANCELFLAG            = '0'
                       )
                       AND NOT EXISTS (
                           SELECT 1
                           FROM INV_LINE IL, TAX_ADJ_ITEM TAI
                           WHERE 1=1
                           AND IL.GLBL_CMPY_CD            = II.GLBL_CMPY_CD
                           AND IL.INV_NUM                 = II.INV_NUM
                           AND IL.EZCANCELFLAG            = '0'
                           AND TAI.GLBL_CMPY_CD           = IL.GLBL_CMPY_CD
                           AND TAI.MDSE_CD                = IL.MDSE_CD
                           AND TAI.EZCANCELFLAG           = '0'
                       )
                       AND NOT EXISTS (
                           SELECT 1
                           FROM INV_LINE IL
                           WHERE 1=1
                           AND IL.GLBL_CMPY_CD            = II.GLBL_CMPY_CD
                           AND IL.INV_NUM                 = II.INV_NUM
                           AND IL.MDSE_CD                 IN ( 
                               <iterate property="slsTaxMdseCdArray" var="slsTaxMdseCdArray[]" open="" close="" conjunction=",">
                               #slsTaxMdseCdArray[]#
                               </iterate>
                           )
                           AND IL.EZCANCELFLAG            = '0'
                       )
             ) > 0
            THEN 'Y' ELSE 'N' END                              TAX_PRINT_FLG
        <!-- END 2023/11/09 R.Takau [QC#61584, ADD] -->
    FROM 
         INV                I
        ,BILL_TO_CUST       BTC
        ,PMT_TERM           PT
        ,CPO                DC
        ,REM_TO             RT
        ,DS_INV_TP          DIT
        ,SELL_TO_CUST       DAC
        ,PMT_TERM_CASH_DISC PTCD
        ,EIN                E
        ,CCY                CCY
        ,LINE_BIZ_TP        LBT
        ,DS_ORD_TP_PROC_DFN DOTPD
        <!-- 2019/06/05 QC#50731 ADD START  -->
        ,(SELECT IL.INV_NUM FROM INV_LINE IL, TAX_ADJ_ITEM TAI WHERE IL.GLBL_CMPY_CD = #glblCmpyCd# AND IL.EZCANCELFLAG = '0' AND IL.GLBL_CMPY_CD = TAI.GLBL_CMPY_CD AND IL.EZCANCELFLAG = TAI.EZCANCELFLAG AND IL.MDSE_CD = TAI.MDSE_CD GROUP BY IL.INV_NUM) IL
        <!-- 2019/06/05 QC#50731 ADD END  -->
    WHERE
            I.INV_PRINT_STS_CD      IN (#invPrintStsCd1#, #invPrintStsCd3#)
        AND I.INV_DT            &lt;= #slsDt#
        AND I.GLBL_CMPY_CD          = #glblCmpyCd#
        AND I.FNLZ_INV_FLG          = 'Y'
        AND I.EZCANCELFLAG          = '0'
        AND NOT EXISTS (
                SELECT
                    1
                FROM
                    SVC_INV
                WHERE
                    GLBL_CMPY_CD                    = #glblCmpyCd#
                AND
                    SVC_INV_NUM                     = I.ORIG_INV_NUM
                AND
                    EZCANCELFLAG                    = '0'
            )
        AND I.BILL_TO_CUST_CD       = BTC.BILL_TO_CUST_CD
        AND I.GLBL_CMPY_CD          = BTC.GLBL_CMPY_CD
        AND BTC.EZCANCELFLAG        = '0'
        AND I.PMT_TERM_CD           = PT.PMT_TERM_CD
        AND I.GLBL_CMPY_CD          = PT.GLBL_CMPY_CD
        AND PT.EZCANCELFLAG         = '0'
        AND I.CPO_ORD_NUM           = DC.CPO_ORD_NUM(+)
        AND I.GLBL_CMPY_CD          = DC.GLBL_CMPY_CD(+)
        AND DC.EZCANCELFLAG(+)      = '0'
        AND BTC.REM_ID              = RT.REM_ID(+)
        AND BTC.GLBL_CMPY_CD        = RT.GLBL_CMPY_CD(+)
        AND RT.EZCANCELFLAG(+)      = '0'
        AND I.DS_INV_TP_CD         = DIT.DS_INV_TP_CD
        AND I.GLBL_CMPY_CD         = DIT.GLBL_CMPY_CD
        AND DIT.EZCANCELFLAG        = '0'
        AND I.BILL_TO_CUST_ACCT_CD = DAC.SELL_TO_CUST_CD
        AND I.GLBL_CMPY_CD         = DAC.GLBL_CMPY_CD
        AND DAC.EZCANCELFLAG        = '0'
        <isEqual property="procMode" compareValue="01">
        AND NOT EXISTS (SELECT '1'
                        FROM INV_PRT_CTRL       IPC
                        WHERE IPC.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                          AND IPC.INV_NUM      = I.INV_NUM
                          AND IPC.EZCANCELFLAG = '0')
        </isEqual>
        <isEqual property="procMode" compareValue="02">
        AND EXISTS (SELECT '1'
                    FROM INV_PRT_CTRL       IPC
                    WHERE IPC.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                      AND IPC.INV_NUM      = I.INV_NUM
                      AND IPC.EZCANCELFLAG = '0')
        </isEqual>
        AND I.PMT_TERM_CASH_DISC_CD = PTCD.PMT_TERM_CASH_DISC_CD
        AND I.GLBL_CMPY_CD          = PTCD.GLBL_CMPY_CD
        AND PTCD.EZCANCELFLAG       = '0'
        AND E.GLBL_CMPY_CD          = #glblCmpyCd#
        AND E.EZCANCELFLAG          = '0'
        AND I.GLBL_CMPY_CD          = CCY.GLBL_CMPY_CD(+)
        AND I.DEAL_CCY_CD           = CCY.CCY_CD(+)
        AND CCY.EZCANCELFLAG(+)     = '0'
        AND I.GLBL_CMPY_CD          = LBT.GLBL_CMPY_CD(+)   
        AND I.LINE_BIZ_TP_CD        = LBT.LINE_BIZ_TP_CD(+)   
        AND LBT.EZCANCELFLAG(+)     = '0'
        AND I.GLBL_CMPY_CD          = DOTPD.GLBL_CMPY_CD(+)
        AND I.EZCANCELFLAG          = DOTPD.EZCANCELFLAG(+)
        AND I.DS_ORD_TP_CD          = DOTPD.DS_ORD_TP_CD(+)
        AND I.SYS_SRC_CD            = #sysSrcCdNFC#
        <!-- 2019/06/05 QC#50731 ADD START  -->
        AND I.INV_NUM               = IL.INV_NUM(+)
        <!-- 2019/06/05 QC#50731 ADD END  -->

        ORDER BY INV_NUM
  
    </statement> 
       
    <statement id="getFooterComment" parameterClass="Map" resultClass="Map">
        SELECT
             UI.USG_INV_DESC_CD
            ,UI.USG_INV_DESC_TXT
        FROM 
            USG_INV_DESC        UI
        WHERE
                UI.GLBL_CMPY_CD        = #glblCmpyCd#
            AND UI.EZCANCELFLAG        = '0'
    </statement>

    <statement id="getPmtTermInfo" parameterClass="Map" resultClass="Map">
        SELECT
             IPT.ISTL_PMT_TERM_AOT              ISTL_PMT_TERM_AOT
            ,IPT.ISTL_PMT_TERM_PCT              ISTL_PMT_TERM_PCT
            ,IPT.ISTL_PMT_TERM_DTL_NUM          ISTL_PMT_TERM_DTL_NUM
        FROM 
            ISTL_PMT_TERM           IPT
        WHERE
                IPT.GLBL_CMPY_CD        = #glblCmpyCd#
            AND IPT.ISTL_PMT_TERM_CD    = #pmtTermCd#
            AND IPT.EZCANCELFLAG        = '0'
        ORDER BY
            IPT.ISTL_PMT_TERM_DTL_NUM
    </statement>

    <statement id="getFleetSummary" parameterClass="Map" resultClass="Map">
        SELECT
             FLT_SMRY.SOURCE
            ,FLT_SMRY.PRODUCT_TYPE
            ,TO_CHAR(SUM(QTY), 'FM9G999G999G999')                                           QTY
            ,CASE WHEN SUM(FLT_SMRY.BASE_CHARGE) &lt; 0 THEN
                 '-' || FLT_SMRY.CCY_SGN_TXT || TO_CHAR(ABS(SUM(FLT_SMRY.BASE_CHARGE)), #amtFormat# )
             ELSE
                 FLT_SMRY.CCY_SGN_TXT || TO_CHAR(SUM(FLT_SMRY.BASE_CHARGE), #amtFormat# )
             END    BASE_CHARGE
            <!-- ,FLT_SMRY.CCY_SGN_TXT || TO_CHAR(0  , #amtFormat# )               ATTACHMENT_CHARGE -->
            ,CASE WHEN SUM(FLT_SMRY.ATTACHMENT_CHARGE) &lt; 0 THEN
                 '-' || FLT_SMRY.CCY_SGN_TXT || TO_CHAR(ABS(SUM(FLT_SMRY.ATTACHMENT_CHARGE)), 'FM999G999G999G999G990D00' )
             ELSE
                 FLT_SMRY.CCY_SGN_TXT || TO_CHAR(SUM(FLT_SMRY.ATTACHMENT_CHARGE), 'FM999G999G999G999G990D00' )
             END    ATTACHMENT_CHARGE
            ,CASE WHEN SUM(FLT_SMRY.USAGE_CHARGE) &lt; 0 THEN
                '-' || FLT_SMRY.CCY_SGN_TXT || TO_CHAR(ABS(SUM(FLT_SMRY.USAGE_CHARGE)), #amtFormat# )
             ELSE
                FLT_SMRY.CCY_SGN_TXT || TO_CHAR(SUM(FLT_SMRY.USAGE_CHARGE), #amtFormat# )
             END    USAGE_CHARGE
            ,CASE WHEN SUM(FLT_SMRY.AMOUNT) &lt; 0 THEN
                '-' || FLT_SMRY.CCY_SGN_TXT || TO_CHAR(ABS(SUM(FLT_SMRY.AMOUNT)), #amtFormat# )
             ELSE
                FLT_SMRY.CCY_SGN_TXT || TO_CHAR(SUM(FLT_SMRY.AMOUNT), #amtFormat# )
             END    AMOUNT
        <isEqual property="taxDtlFlg" compareValue="N">
            ,NULL                STATE_TAX
            ,NULL                COUNTY_TAX
            ,NULL                CITY_TAX
        </isEqual>
        <isNotEqual property="taxDtlFlg" compareValue="N">
            ,SUM(FLT_SMRY.STATE_TAX)               STATE_TAX
            ,SUM(FLT_SMRY.COUNTY_TAX)              COUNTY_TAX
            ,SUM(FLT_SMRY.CITY_TAX)                CITY_TAX
        </isNotEqual>
            ,SUM(FLT_SMRY.TOTAL_TAX)               TOTAL_TAX
            ,SUM((FLT_SMRY.AMOUNT + FLT_SMRY.TOTAL_TAX))          SUBTOTALS
        FROM
            (
        <!-- Contract Charge(Base, Usage) -->
        SELECT
            <!--  QC#51364 2019/07/13Mod Start-->
            <!-- IPSP.INV_PRINT_SVC_PGM_SRC_NM                      SOURCE --> 
            <!-- ,IPSP.INV_PRINT_SVC_PGM_PROD_NM                     PRODUCT_TYPE --> 
            NVL(IPSP_B.INV_PRINT_SVC_PGM_SRC_NM, IPSP.INV_PRINT_SVC_PGM_SRC_NM)        SOURCE 
            ,NVL(IPSP_B.INV_PRINT_SVC_PGM_PROD_NM, IPSP.INV_PRINT_SVC_PGM_PROD_NM)     PRODUCT_TYPE 

            <!--  QC#51364 2019/07/13Mod End-->
            ,CASE WHEN I.INV_TP_CD = '2' THEN -1 ELSE 1 END     QTY
<!-- 
            ,CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC#
             THEN IL.INV_LINE_DEAL_NET_AMT 
             ELSE 0 END  BASE_CHARGE
            ,0 ATTACHMENT_CHARGE
            ,CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdMC#
                     THEN IL.INV_LINE_DEAL_NET_AMT
                ELSE 0  END USAGE_CHARGE
 -->
            <!-- 06/03/2019 QC#50626 Mod Start-->
            <!--
            ,CASE WHEN (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD = 'MACH') OR (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD &lt;&gt; 'MACH' AND NVL(DCD.SVC_INV_MERGE_TP_CD, '0')  = '1' )
                            THEN CASE WHEN I.INV_TP_CD = '2' THEN IL.INV_LINE_DEAL_NET_AMT * -1 ELSE IL.INV_LINE_DEAL_NET_AMT END
                            ELSE 0   END BASE_CHARGE
            ,CASE WHEN (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD &lt;&gt; 'MACH' AND NVL(DCD.SVC_INV_MERGE_TP_CD, '0')  &lt;&gt; '1' )
                            THEN CASE WHEN I.INV_TP_CD = '2' THEN IL.INV_LINE_DEAL_NET_AMT * -1 ELSE IL.INV_LINE_DEAL_NET_AMT END
                            ELSE 0 END ATTACHMENT_CHARGE
            ,CASE WHEN (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdMC#)
                            THEN CASE WHEN I.INV_TP_CD = '2' THEN IL.INV_LINE_DEAL_NET_AMT * -1 ELSE IL.INV_LINE_DEAL_NET_AMT END
                            ELSE 0 END USAGE_CHARGE
             -->
            ,CASE WHEN (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD = 'MACH') OR (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD &lt;&gt; 'MACH' AND NVL(DCD.SVC_INV_MERGE_TP_CD, '0')  = '1' )
                            THEN SIL.INV_LINE_DEAL_NET_AMT
                            ELSE 0   END BASE_CHARGE
            ,CASE WHEN (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD &lt;&gt; 'MACH' AND NVL(DCD.SVC_INV_MERGE_TP_CD, '0')  &lt;&gt; '1' )
                            THEN SIL.INV_LINE_DEAL_NET_AMT
                            ELSE 0 END ATTACHMENT_CHARGE
            ,CASE WHEN (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdMC#)
                            THEN SIL.INV_LINE_DEAL_NET_AMT
                            ELSE 0 END USAGE_CHARGE
            <!-- 06/03/2019 QC#50626 Mod End-->
            ,SIL.INV_LINE_DEAL_NET_AMT AMOUNT
        <isEqual property="taxDtlFlg" compareValue="N">
            ,NULL                STATE_TAX
            ,NULL                COUNTY_TAX
            ,NULL                CITY_TAX
        </isEqual>
        <isNotEqual property="taxDtlFlg" compareValue="N">
            ,DILTD1.DEAL_SLS_TAX_AMT              STATE_TAX
            ,DILTD2.DEAL_SLS_TAX_AMT              COUNTY_TAX
            ,DILTD3.DEAL_SLS_TAX_AMT              CITY_TAX
        </isNotEqual>
            ,SIL.INV_LINE_DEAL_TAX_AMT            TOTAL_TAX
            ,(SIL.INV_LINE_DEAL_NET_AMT + SIL.INV_LINE_DEAL_TAX_AMT)          SUBTOTALS
            ,CCY.CCY_SGN_TXT
            ,I.INV_TP_CD
        FROM
        <!-- 2018/08/21 QC#27684 mod Start -->
        <!-- INV                            I -->
            (SELECT INV_NUM,
                    CASE SYS_SRC_CD
                        WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                        ELSE INV_NUM
                    END AS SVC_INV_NUM,
                    GLBL_CMPY_CD,
                    EZCANCELFLAG,
                    DEAL_CCY_CD,
                    INV_TP_CD
               FROM INV
              WHERE INV_NUM                   = #invNum#
                AND GLBL_CMPY_CD              = #glblCmpyCd#
                AND EZCANCELFLAG              = '0') I
        <!-- 2018/08/21 QC#27684 mod End -->
            ,SVC_INV                        SI
            ,INV_LINE                       IL
            <!-- QC#52209 2019/07/31 Mod-->
            <!-- ,SVC_INV_LINE                   SIL -->
            ,INV_PRT_SVC_INV_LINE_WRK         SIL
            ,DS_INV_LINE_TAX_DTL            DILTD1
            ,DS_INV_LINE_TAX_DTL            DILTD2
            ,DS_INV_LINE_TAX_DTL            DILTD3
            ,INV_PRINT_SVC_PGM              IPSP
            ,SVC_INV_LINE_TP                SILT
            ,CCY                            CCY
            ,DS_CONTR_DTL                   DCD
            <!--  QC#51364 2019/07/13 Add Start-->
            <!-- QC#52209 2019/07/31 Mod-->
            <!-- ,SVC_INV_LINE                   SIL_B -->
            ,INV_PRT_SVC_INV_LINE_WRK         SIL_B
            ,INV_PRINT_SVC_PGM              IPSP_B
            <!--  QC#51364 2019/07/13 Add End-->
        WHERE
        <!-- 2018/08/21 QC#27684 del Start -->
        <!--
                I.INV_NUM                   = #invNum#
            AND I.GLBL_CMPY_CD              = #glblCmpyCd#
            AND I.EZCANCELFLAG              = '0'
            AND ((      I.SYS_SRC_CD    &lt;&gt; #sysSrcCdNFC#    
                    AND I.INV_NUM       = SI.SVC_INV_NUM )
                OR  (I.SYS_SRC_CD       = #sysSrcCdNFC# 
                    AND I.ORIG_INV_NUM    = SI.SVC_INV_NUM )
                )
        -->
        <!-- 2018/08/21 QC#27684 del End -->
        <!-- 2018/08/21 QC#27684 add Start -->
                I.SVC_INV_NUM               = SI.SVC_INV_NUM
        <!-- 2018/08/21 QC#27684 add End -->
            AND I.GLBL_CMPY_CD              = SI.GLBL_CMPY_CD 
            AND SI.SVC_INV_SRC_TP_CD        = #siSrcTpCd#
            AND SI.DS_CONTR_CATG_CD         = #dsContrCatgCd#
            AND SI.EZCANCELFLAG             = '0'
            AND I.INV_NUM                   = IL.INV_NUM 
            AND I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD 
            AND IL.EZCANCELFLAG             = '0'
            AND IL.INV_NUM                  = SIL.SVC_INV_NUM 
            AND IL.SVC_INV_LINE_PK          = SIL.SVC_INV_LINE_PK 
            AND IL.GLBL_CMPY_CD             = SIL.GLBL_CMPY_CD 
            AND SIL.EZCANCELFLAG            = '0'
            AND SIL.SVC_INV_CHRG_TP_CD      &lt;&gt; #siChrgTpCdAC# <!-- 2019/02/05 QC#29371 Mod -->
            AND SILT.FLEET_LINE_FLG         = #fleetFlg# <!-- 2019/02/05 QC#29371 Mod -->
            AND SIL.SVC_INV_LINE_TP_CD      = SILT.SVC_INV_LINE_TP_CD 
            AND SIL.GLBL_CMPY_CD            = SILT.GLBL_CMPY_CD 
            AND SILT.EZCANCELFLAG           = '0'
            AND IL.INV_NUM                 = DILTD1.INV_NUM(+) 
            AND IL.INV_BOL_LINE_NUM        = DILTD1.INV_BOL_LINE_NUM(+)
            AND IL.INV_LINE_NUM            = DILTD1.INV_LINE_NUM(+)
            AND IL.INV_LINE_SUB_NUM        = DILTD1.INV_LINE_SUB_NUM(+)
            AND IL.INV_LINE_SUB_TRX_NUM    = DILTD1.INV_TRX_LINE_SUB_NUM(+)
            AND DILTD1.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd01#
            AND IL.GLBL_CMPY_CD            = DILTD1.GLBL_CMPY_CD(+)
            AND DILTD1.EZCANCELFLAG(+)      = '0'
            AND IL.INV_NUM                 = DILTD2.INV_NUM(+)
            AND IL.INV_BOL_LINE_NUM        = DILTD2.INV_BOL_LINE_NUM(+)
            AND IL.INV_LINE_NUM            = DILTD2.INV_LINE_NUM(+)
            AND IL.INV_LINE_SUB_NUM        = DILTD2.INV_LINE_SUB_NUM(+)
            AND IL.INV_LINE_SUB_TRX_NUM    = DILTD2.INV_TRX_LINE_SUB_NUM(+)
            AND DILTD2.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd02#
            AND IL.GLBL_CMPY_CD            = DILTD2.GLBL_CMPY_CD(+)
            AND DILTD2.EZCANCELFLAG(+)      = '0'
            AND IL.INV_NUM                 = DILTD3.INV_NUM(+) 
            AND IL.INV_BOL_LINE_NUM        = DILTD3.INV_BOL_LINE_NUM(+) 
            AND IL.INV_LINE_NUM            = DILTD3.INV_LINE_NUM(+) 
            AND IL.INV_LINE_SUB_NUM        = DILTD3.INV_LINE_SUB_NUM(+) 
            AND IL.INV_LINE_SUB_TRX_NUM    = DILTD3.INV_TRX_LINE_SUB_NUM(+) 
            AND DILTD3.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd03#
            AND IL.GLBL_CMPY_CD            = DILTD3.GLBL_CMPY_CD(+)
            AND DILTD3.EZCANCELFLAG(+)      = '0'
            AND SIL.SVC_PGM_MDSE_CD         = IPSP.INV_PRINT_SVC_PGM_CD (+) 
            AND SIL.GLBL_CMPY_CD            = IPSP.GLBL_CMPY_CD (+) 
            AND IPSP.EZCANCELFLAG(+)        = '0'
            AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
            AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
            AND CCY.EZCANCELFLAG(+)         = '0'
            AND IL.DS_CONTR_DTL_PK          = DCD.DS_CONTR_DTL_PK (+)
            AND IL.GLBL_CMPY_CD             = DCD.GLBL_CMPY_CD (+)
            AND DCD.EZCANCELFLAG(+)        = '0'
            <!--  QC#51364 2019/07/13 Add Start-->
            AND SIL.SVC_INV_NUM             = SIL_B.SVC_INV_NUM (+) 
            AND SIL.PRNT_SVC_INV_LINE_PK    = SIL_B.SVC_INV_LINE_PK (+) 
            AND SIL.GLBL_CMPY_CD            = SIL_B.GLBL_CMPY_CD (+) 
            AND SIL_B.EZCANCELFLAG(+)       = '0'
            AND SIL_B.SVC_PGM_MDSE_CD       = IPSP_B.INV_PRINT_SVC_PGM_CD (+) 
            AND SIL.GLBL_CMPY_CD            = IPSP_B.GLBL_CMPY_CD (+) 
            AND IPSP_B.EZCANCELFLAG(+)      = '0'
            <!--  QC#51364 2019/07/13 Add End-->

        UNION ALL
        <!-- Additional Charge(Base, Usage) -->
        SELECT
            <!-- START 07/13/2022 [QC#60289, MOD] -->
            <!--  IPSP.INV_PRINT_SVC_PGM_SRC_NM                      SOURCE         -->
            <!-- ,IPSP.INV_PRINT_SVC_PGM_PROD_NM                     PRODUCT_TYPE   -->
             NVL(IPSP_G.INV_PRINT_SVC_PGM_SRC_NM, IPSP.INV_PRINT_SVC_PGM_SRC_NM )                     SOURCE
            ,NVL(IPSP_G.INV_PRINT_SVC_PGM_PROD_NM, IPSP.INV_PRINT_SVC_PGM_PROD_NM  )                   PRODUCT_TYPE
            <!-- END   07/13/2022 [QC#60289, MOD] -->
            ,0                                                  QTY
            ,CASE WHEN SILAC.ADDL_CHRG_INV_TP_CD = 'BASE'
             <!--  THEN SILAC.ADDL_CHRG_FLAT_DEAL_PRC_AMT -->
                  THEN SIL_B.INV_LINE_DEAL_NET_AMT
                  ELSE 0 END  BASE_CHARGE
            ,0 ATTACHMENT_CHARGE
            ,CASE WHEN SILAC.ADDL_CHRG_INV_TP_CD = 'USGE'
             <!--  THEN SILAC.ADDL_CHRG_FLAT_DEAL_PRC_AMT-->
                  THEN SIL_B.INV_LINE_DEAL_NET_AMT
                  ELSE 0 END USAGE_CHARGE
             <!-- ,SILAC.ADDL_CHRG_FLAT_DEAL_PRC_AMT AMOUNT -->
            ,SIL_B.INV_LINE_DEAL_NET_AMT AMOUNT
        <isEqual property="taxDtlFlg" compareValue="N">
            ,NULL                STATE_TAX
            ,NULL                COUNTY_TAX
            ,NULL                CITY_TAX
        </isEqual>
        <isNotEqual property="taxDtlFlg" compareValue="N">
            ,DILTD1.DEAL_SLS_TAX_AMT              STATE_TAX
            ,DILTD2.DEAL_SLS_TAX_AMT              COUNTY_TAX
            ,DILTD3.DEAL_SLS_TAX_AMT              CITY_TAX
        </isNotEqual>
            ,SIL_B.INV_LINE_DEAL_TAX_AMT      TOTAL_TAX
            <!--  ,(SILAC.ADDL_CHRG_FLAT_DEAL_PRC_AMT + SIL_B.INV_LINE_DEAL_TAX_AMT)          SUBTOTALS-->
            ,(SIL_B.INV_LINE_DEAL_NET_AMT + SIL_B.INV_LINE_DEAL_TAX_AMT)          SUBTOTALS
            ,CCY.CCY_SGN_TXT
            ,I.INV_TP_CD
        FROM
        <!-- 2018/08/21 QC#27684 mod Start -->
        <!-- INV                            I -->
            (SELECT INV_NUM,
                    CASE SYS_SRC_CD
                        WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                        ELSE INV_NUM
                    END AS SVC_INV_NUM,
                    GLBL_CMPY_CD,
                    EZCANCELFLAG,
                    DEAL_CCY_CD,
                    INV_TP_CD
               FROM INV
              WHERE INV_NUM                   = #invNum#
                AND GLBL_CMPY_CD              = #glblCmpyCd#
                AND EZCANCELFLAG              = '0') I
        <!-- 2018/08/21 QC#27684 mod End -->
            ,SVC_INV                        SI
            ,INV_LINE                       IL
            <!-- QC#52209 2019/07/31 Mod-->
            <!-- ,SVC_INV_LINE                   SIL -->
            <!-- ,SVC_INV_LINE                   SIL_B -->
            ,INV_PRT_SVC_INV_LINE_WRK         SIL
            ,INV_PRT_SVC_INV_LINE_WRK         SIL_B
            <!-- START 07/13/2022 [QC#60289, ADD] -->
            ,INV_PRT_SVC_INV_LINE_WRK         SIL_G
            <!-- END   07/13/2022 [QC#60289, ADD] -->
            ,INV_LINE                       IL_B
            <!-- START 07/13/2022 [QC#60289, ADD] -->
            ,INV_LINE                       IL_G
            <!-- END   07/13/2022 [QC#60289, ADD] -->
            ,DS_INV_LINE_TAX_DTL            DILTD1
            ,DS_INV_LINE_TAX_DTL            DILTD2
            ,DS_INV_LINE_TAX_DTL            DILTD3
            ,INV_PRINT_SVC_PGM              IPSP
            <!-- START 07/13/2022 [QC#60289, ADD] -->
            ,INV_PRINT_SVC_PGM              IPSP_G
            <!-- END   07/13/2022 [QC#60289, ADD] -->
            ,SVC_INV_LINE_TP                SILT
            ,CCY                            CCY
            ,SVC_INV_LINE_ADDL_CHRG         SILAC
        WHERE
        <!-- 2018/08/21 QC#27684 del Start -->
        <!--
                I.INV_NUM                   = #invNum#
            AND I.GLBL_CMPY_CD              = #glblCmpyCd#
            AND I.EZCANCELFLAG              = '0'
            AND ((      I.SYS_SRC_CD    &lt;&gt; #sysSrcCdNFC#    
                    AND I.INV_NUM       = SI.SVC_INV_NUM )
                OR  (I.SYS_SRC_CD       = #sysSrcCdNFC# 
                    AND I.ORIG_INV_NUM    = SI.SVC_INV_NUM )
                )
        -->
        <!-- 2018/08/21 QC#27684 del End -->
        <!-- 2018/08/21 QC#27684 add Start -->
                I.SVC_INV_NUM               = SI.SVC_INV_NUM
        <!-- 2018/08/21 QC#27684 add End -->
            AND I.GLBL_CMPY_CD              = SI.GLBL_CMPY_CD 
            AND SI.SVC_INV_SRC_TP_CD        = #siSrcTpCd#
            AND SI.DS_CONTR_CATG_CD         = #dsContrCatgCd#
            AND SI.EZCANCELFLAG             = '0'
            AND I.INV_NUM                   = IL.INV_NUM 
            AND I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD 
            AND IL.EZCANCELFLAG             = '0'
            AND IL.INV_NUM                  = SIL.SVC_INV_NUM
            AND IL.SVC_INV_LINE_PK          = SIL.SVC_INV_LINE_PK 
            AND IL.GLBL_CMPY_CD             = SIL.GLBL_CMPY_CD 
            AND SIL.EZCANCELFLAG            = '0'
            AND SIL.SVC_INV_NUM             = SIL_B.SVC_INV_NUM
            AND SIL.SVC_INV_LINE_PK         = SIL_B.PRNT_SVC_INV_LINE_PK
            AND SIL.GLBL_CMPY_CD            = SIL_B.GLBL_CMPY_CD
            AND SIL_B.EZCANCELFLAG          = '0'
            <!-- START 07/13/2022 [QC#60289, ADD] -->
            AND SIL.SVC_INV_NUM             = SIL_G.SVC_INV_NUM(+)
            AND SIL.PRNT_SVC_INV_LINE_PK    = SIL_G.SVC_INV_LINE_PK(+)
            AND SIL.GLBL_CMPY_CD            = SIL_G.GLBL_CMPY_CD(+)
            AND SIL_G.EZCANCELFLAG (+)      = '0'
            <!-- END   07/13/2022 [QC#60289, ADD] -->
            AND SIL_B.SVC_INV_LINE_PK       = IL_B.SVC_INV_LINE_PK 
            <!--START 06/20/2022 [QC#60205, ADD] -->
            AND SIL_B.SVC_INV_NUM           = IL_B.INV_NUM
            <!--END   06/20/2022 [QC#60205, ADD] -->
            AND SIL_B.GLBL_CMPY_CD          = IL_B.GLBL_CMPY_CD 
            AND IL_B.EZCANCELFLAG            = '0'
            <!-- START 07/13/2022 [QC#60289, ADD] -->
            AND SIL_G.SVC_INV_LINE_PK       = IL_G.SVC_INV_LINE_PK(+)
			AND SIL_G.SVC_INV_NUM           = IL_G.INV_NUM(+)
			AND SIL_G.GLBL_CMPY_CD          = IL_G.GLBL_CMPY_CD(+) 
            AND IL_G.EZCANCELFLAG(+)        = '0'
            <!-- END   07/13/2022 [QC#60289, ADD] -->
            AND SIL.SVC_INV_LINE_TP_CD      = SILT.SVC_INV_LINE_TP_CD 
            AND SIL.GLBL_CMPY_CD            = SILT.GLBL_CMPY_CD 
            AND SILT.FLEET_LINE_FLG         = #fleetFlg#    <!-- QC#29371 -->
            AND SILT.EZCANCELFLAG           = '0'
            AND IL_B.INV_NUM                = DILTD1.INV_NUM(+) 
            AND IL_B.INV_BOL_LINE_NUM       = DILTD1.INV_BOL_LINE_NUM(+)
            AND IL_B.INV_LINE_NUM           = DILTD1.INV_LINE_NUM(+)
            AND IL_B.INV_LINE_SUB_NUM       = DILTD1.INV_LINE_SUB_NUM(+)
            AND IL_B.INV_LINE_SUB_TRX_NUM   = DILTD1.INV_TRX_LINE_SUB_NUM(+)
            AND DILTD1.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd01#
            AND IL_B.GLBL_CMPY_CD           = DILTD1.GLBL_CMPY_CD(+)
            AND DILTD1.EZCANCELFLAG(+)      = '0'
            AND IL_B.INV_NUM                = DILTD2.INV_NUM(+)
            AND IL_B.INV_BOL_LINE_NUM       = DILTD2.INV_BOL_LINE_NUM(+)
            AND IL_B.INV_LINE_NUM           = DILTD2.INV_LINE_NUM(+)
            AND IL_B.INV_LINE_SUB_NUM       = DILTD2.INV_LINE_SUB_NUM(+)
            AND IL_B.INV_LINE_SUB_TRX_NUM   = DILTD2.INV_TRX_LINE_SUB_NUM(+)
            AND DILTD2.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd02#
            AND IL_B.GLBL_CMPY_CD           = DILTD2.GLBL_CMPY_CD(+)
            AND DILTD2.EZCANCELFLAG(+)      = '0'
            AND IL_B.INV_NUM                = DILTD3.INV_NUM(+) 
            AND IL_B.INV_BOL_LINE_NUM       = DILTD3.INV_BOL_LINE_NUM(+) 
            AND IL_B.INV_LINE_NUM           = DILTD3.INV_LINE_NUM(+) 
            AND IL_B.INV_LINE_SUB_NUM       = DILTD3.INV_LINE_SUB_NUM(+) 
            AND IL_B.INV_LINE_SUB_TRX_NUM   = DILTD3.INV_TRX_LINE_SUB_NUM(+) 
            AND DILTD3.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd03#
            AND IL_B.GLBL_CMPY_CD           = DILTD3.GLBL_CMPY_CD(+)
            AND DILTD3.EZCANCELFLAG(+)      = '0'
            AND SIL.SVC_PGM_MDSE_CD         = IPSP.INV_PRINT_SVC_PGM_CD (+) 
            AND SIL.GLBL_CMPY_CD            = IPSP.GLBL_CMPY_CD (+) 
            AND IPSP.EZCANCELFLAG(+)        = '0'
            <!-- START 07/13/2022 [QC#60289, ADD] -->
            AND SIL_G.SVC_PGM_MDSE_CD         = IPSP_G.INV_PRINT_SVC_PGM_CD (+) 
            AND SIL_G.GLBL_CMPY_CD            = IPSP_G.GLBL_CMPY_CD (+) 
            AND IPSP_G.EZCANCELFLAG(+)        = '0'
            <!-- END   07/13/2022 [QC#60289, ADD] -->
            AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
            AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
            AND CCY.EZCANCELFLAG(+)         = '0'
            AND SIL_B.SVC_INV_LINE_PK       = SILAC.SVC_INV_LINE_PK
            AND SIL_B.GLBL_CMPY_CD          = SILAC.GLBL_CMPY_CD
            AND SIL_B.EZCANCELFLAG          = '0'
        ) FLT_SMRY
        GROUP BY
             FLT_SMRY.CCY_SGN_TXT
            ,FLT_SMRY.SOURCE
            ,FLT_SMRY.PRODUCT_TYPE
    </statement>

    <statement id="getMaintenceSummary" parameterClass="Map" resultClass="Map">
    SELECT
        <!-- START 07/13/2022 [QC#60289, MOD] -->
        <!--  NVL(IPSP_B.INV_PRINT_SVC_PGM_SRC_NM, IPSP.INV_PRINT_SVC_PGM_SRC_NM)        SOURCE              -->
        <!-- ,NVL(IPSP_B.INV_PRINT_SVC_PGM_PROD_NM, IPSP.INV_PRINT_SVC_PGM_PROD_NM)      PRODUCT_TYPE        -->
         NVL(IPSP_G.INV_PRINT_SVC_PGM_SRC_NM, NVL(IPSP_B.INV_PRINT_SVC_PGM_SRC_NM, IPSP.INV_PRINT_SVC_PGM_SRC_NM))          SOURCE  
        ,NVL(IPSP_G.INV_PRINT_SVC_PGM_PROD_NM, NVL(IPSP_B.INV_PRINT_SVC_PGM_PROD_NM, IPSP.INV_PRINT_SVC_PGM_PROD_NM))       PRODUCT_TYPE
        <!-- END   07/13/2022 [QC#60289, MOD] -->
        ,TO_CHAR(COUNT(DISTINCT SIL.SVC_MACH_MSTR_PK), #qtyFormat# )                QTY 
        <!-- QC#25910 -->
        <!--  
        ,CASE WHEN SUM(
            CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC#
                 THEN IL.INV_LINE_DEAL_NET_AMT                
                 ELSE  0   END) &lt; 0 THEN
            '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(SUM(
                CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC#
                 THEN IL.INV_LINE_DEAL_NET_AMT                
                 ELSE  0   END)), #amtFormat# )
         ELSE
            CCY.CCY_SGN_TXT || TO_CHAR(SUM(
                CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC#
                 THEN IL.INV_LINE_DEAL_NET_AMT                
                 ELSE  0   END), #amtFormat# )
         END    BASE_CHARGE 
        ,CASE WHEN SUM(
            CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC#
                 THEN IL.INV_LINE_DEAL_NET_AMT
                 ELSE 0   END) &lt; 0 THEN
            '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(SUM(
                CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC#
                 THEN IL.INV_LINE_DEAL_NET_AMT
                 ELSE 0   END)), #amtFormat# )
         ELSE
            CCY.CCY_SGN_TXT || TO_CHAR(SUM(
                CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC#
                 THEN IL.INV_LINE_DEAL_NET_AMT
                 ELSE 0   END), #amtFormat# )
         END    ATTACHMENT_CHARGE 
         -->
        ,CASE WHEN SUM(CASE WHEN (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD = 'MACH') OR (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD &lt;&gt; 'MACH' AND NVL(DCD.SVC_INV_MERGE_TP_CD, '0') = '1') OR (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC# AND SILAC.ADDL_CHRG_INV_TP_CD = 'BASE')
                            THEN SIL.INV_LINE_DEAL_NET_AMT
                            ELSE  0   
                       END) &lt; 0 
              THEN '-' || CCY.CCY_SGN_TXT || 
                   TO_CHAR(ABS(SUM(CASE WHEN (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD = 'MACH') OR (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD &lt;&gt; 'MACH' AND NVL(DCD.SVC_INV_MERGE_TP_CD, '0') = '1') OR (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC# AND SILAC.ADDL_CHRG_INV_TP_CD = 'BASE')
                                        THEN SIL.INV_LINE_DEAL_NET_AMT
                                        ELSE 0 
                                   END)), #amtFormat# )
              ELSE CCY.CCY_SGN_TXT || 
                   TO_CHAR(SUM(CASE WHEN (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD = 'MACH') OR (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD &lt;&gt; 'MACH' AND NVL(DCD.SVC_INV_MERGE_TP_CD, '0') = '1') OR (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC# AND SILAC.ADDL_CHRG_INV_TP_CD = 'BASE')
                                    THEN SIL.INV_LINE_DEAL_NET_AMT
                                    ELSE 0 END), #amtFormat# )
         END    BASE_CHARGE 
        ,CASE WHEN SUM(CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD &lt;&gt; 'MACH' AND NVL(DCD.SVC_INV_MERGE_TP_CD, '0')  &lt;&gt;  '1'
                            THEN SIL.INV_LINE_DEAL_NET_AMT                
                            ELSE  0   END) &lt; 0 
              THEN '-' || CCY.CCY_SGN_TXT || 
                   TO_CHAR(ABS(SUM(CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD &lt;&gt; 'MACH' AND NVL(DCD.SVC_INV_MERGE_TP_CD, '0')  &lt;&gt;  '1'
                                        THEN SIL.INV_LINE_DEAL_NET_AMT                
                                        ELSE 0 
                                   END)), #amtFormat# )
              ELSE CCY.CCY_SGN_TXT ||
                   TO_CHAR(SUM(CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD &lt;&gt; 'MACH' AND NVL(DCD.SVC_INV_MERGE_TP_CD, '0')  &lt;&gt;  '1'
                                    THEN SIL.INV_LINE_DEAL_NET_AMT                
                                    ELSE  0   
                               END), #amtFormat# )
         END ATTACHMENT_CHARGE
        ,CASE WHEN SUM(CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdMC# OR (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC# AND SILAC.ADDL_CHRG_INV_TP_CD = 'USGE')
                            THEN SIL.INV_LINE_DEAL_NET_AMT
                            ELSE 0    
                       END) &lt; 0 
              THEN '-' || CCY.CCY_SGN_TXT ||
                   TO_CHAR(ABS(SUM(CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdMC# OR (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC# AND SILAC.ADDL_CHRG_INV_TP_CD = 'USGE')
                                        THEN SIL.INV_LINE_DEAL_NET_AMT
                                        ELSE 0    
                                   END)), #amtFormat# )
              ELSE CCY.CCY_SGN_TXT ||
                   TO_CHAR(SUM(CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdMC# OR (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC# AND SILAC.ADDL_CHRG_INV_TP_CD = 'USGE')
                                    THEN SIL.INV_LINE_DEAL_NET_AMT
                                    ELSE 0 
                               END), #amtFormat# )
         END USAGE_CHARGE
        ,CASE WHEN SUM(SIL.INV_LINE_DEAL_NET_AMT) &lt; 0 
              THEN '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(SUM(SIL.INV_LINE_DEAL_NET_AMT)), #amtFormat# )
              ELSE CCY.CCY_SGN_TXT || TO_CHAR(SUM(SIL.INV_LINE_DEAL_NET_AMT), #amtFormat# )
         END AMOUNT 

        <isEqual property="taxDtlFlg" compareValue="N">
            ,NULL                           STATE_TAX 
            ,NULL                           COUNTY_TAX 
            ,NULL                           CITY_TAX 
        </isEqual>
        <isNotEqual property="taxDtlFlg" compareValue="N">
         ,SUM(DILTD1.DEAL_SLS_TAX_AMT)             STATE_TAX 
         ,SUM(DILTD2.DEAL_SLS_TAX_AMT)             COUNTY_TAX 
         ,SUM(DILTD3.DEAL_SLS_TAX_AMT)             CITY_TAX 
        </isNotEqual>
         ,SUM(SIL.INV_LINE_DEAL_TAX_AMT)            TOTAL_TAX 
         ,SUM(SIL.INV_LINE_DEAL_NET_AMT + SIL.INV_LINE_DEAL_TAX_AMT)          SUBTOTALS 
    FROM 
        <!-- 2018/08/21 QC#27684 mod Start -->
        <!-- INV                                I -->
        (SELECT INV_NUM
                ,CASE SYS_SRC_CD
                     WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                     ELSE INV_NUM
                END AS SVC_INV_NUM
                ,GLBL_CMPY_CD
                ,EZCANCELFLAG
                ,DEAL_CCY_CD
                ,BILL_TO_CUST_ACCT_CD
           FROM INV
          WHERE INV_NUM                   = #invNum#
            AND GLBL_CMPY_CD              = #glblCmpyCd#
            AND EZCANCELFLAG              = '0') I
        <!-- 2018/08/21 QC#27684 mod End -->
        ,SVC_INV                            SI
        ,INV_LINE                           IL
        <!-- QC#52209 2019/07/31 Mod-->
        <!--,SVC_INV_LINE                       SIL -->
        <!-- ,SVC_INV_LINE                      SIL_B -->
        ,INV_PRT_SVC_INV_LINE_WRK             SIL
        ,INV_PRT_SVC_INV_LINE_WRK             SIL_B
        <!-- START 07/13/2022 [QC#60289, ADD] -->
        ,INV_PRT_SVC_INV_LINE_WRK             SIL_G
        <!-- END   07/13/2022 [QC#60289, ADD] -->
        ,DS_INV_LINE_TAX_DTL                DILTD1
        ,DS_INV_LINE_TAX_DTL                DILTD2
        ,DS_INV_LINE_TAX_DTL                DILTD3
        ,INV_PRINT_SVC_PGM                  IPSP
        ,INV_PRINT_SVC_PGM                  IPSP_B
        <!-- START 07/13/2022 [QC#60289, ADD] -->
        ,INV_PRINT_SVC_PGM                  IPSP_G
        <!-- END   07/13/2022 [QC#60289, ADD] -->
        ,INV_PRINT_EX                       IPE
        ,INV_PRINT_EX                       IPE_B
        <!-- START 07/13/2022 [QC#60289, ADD] -->
        ,INV_PRINT_EX                       IPE_G
        <!-- END   07/13/2022 [QC#60289, ADD] -->
        ,CCY                                CCY
        ,SVC_INV_LINE_ADDL_CHRG             SILAC
        ,DS_CONTR_DTL                       DCD
    WHERE
        <!-- 2018/08/21 QC#27684 del Start -->
        <!--
            I.INV_NUM                   = #invNum# 
        AND I.GLBL_CMPY_CD              = #glblCmpyCd#
        AND I.EZCANCELFLAG              = '0'
        AND ((      I.SYS_SRC_CD    &lt;&gt; #sysSrcCdNFC#    
                AND I.INV_NUM       = SI.SVC_INV_NUM )
           OR  (I.SYS_SRC_CD           = #sysSrcCdNFC# 
                 AND I.ORIG_INV_NUM    = SI.SVC_INV_NUM )
                )
        -->
        <!-- 2018/08/21 QC#27684 del End -->
        <!-- 2018/08/21 QC#27684 add Start -->
            I.SVC_INV_NUM               = SI.SVC_INV_NUM
        <!-- 2018/08/21 QC#27684 add End -->
        AND SI.SVC_INV_SRC_TP_CD        = #siSrcTpCd# 
        AND SI.DS_CONTR_CATG_CD         IN (#dsContrCatgCdREG#, #dsContrCatgCdAGG#)
        AND I.GLBL_CMPY_CD              = SI.GLBL_CMPY_CD 
        AND SI.EZCANCELFLAG             = '0'
        AND I.INV_NUM                   = IL.INV_NUM
        AND I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD 
        AND IL.EZCANCELFLAG             = '0'
        AND IL.INV_NUM                  = SIL.SVC_INV_NUM 
        AND IL.SVC_INV_LINE_PK          = SIL.SVC_INV_LINE_PK 
        AND IL.GLBL_CMPY_CD             = SIL.GLBL_CMPY_CD 
        AND SIL.EZCANCELFLAG            = '0'
        AND IL.INV_NUM                  = DILTD1.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM         = DILTD1.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM             = DILTD1.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM         = DILTD1.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM     = DILTD1.INV_TRX_LINE_SUB_NUM(+)
        AND IL.GLBL_CMPY_CD             = DILTD1.GLBL_CMPY_CD(+)
        AND DILTD1.EZCANCELFLAG(+)      = '0'
        AND DILTD1.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd01#
        AND IL.INV_NUM                  = DILTD2.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM         = DILTD2.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM             = DILTD2.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM         = DILTD2.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM     = DILTD2.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD2.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd02#
        AND IL.GLBL_CMPY_CD             = DILTD2.GLBL_CMPY_CD(+)
        AND DILTD2.EZCANCELFLAG(+)      = '0'
        AND IL.INV_NUM                  = DILTD3.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM         = DILTD3.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM             = DILTD3.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM         = DILTD3.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM     = DILTD3.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD3.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd03#
        AND IL.GLBL_CMPY_CD             = DILTD3.GLBL_CMPY_CD(+)
        AND DILTD3.EZCANCELFLAG(+)      = '0'
        AND SIL.SVC_PGM_MDSE_CD         = IPSP.INV_PRINT_SVC_PGM_CD (+) 
        AND SIL.GLBL_CMPY_CD            = IPSP.GLBL_CMPY_CD (+) 
        AND IPSP.EZCANCELFLAG(+)        = '0'
        AND SIL.SVC_INV_NUM             = SIL_B.SVC_INV_NUM (+) 
        AND SIL.PRNT_SVC_INV_LINE_PK    = SIL_B.SVC_INV_LINE_PK (+) 
        AND SIL.GLBL_CMPY_CD            = SIL_B.GLBL_CMPY_CD (+) 
        AND SIL_B.EZCANCELFLAG(+)       = '0'
        AND SIL_B.SVC_PGM_MDSE_CD       = IPSP_B.INV_PRINT_SVC_PGM_CD (+) 
        AND SIL.GLBL_CMPY_CD            = IPSP_B.GLBL_CMPY_CD (+) 
        AND IPSP_B.EZCANCELFLAG(+)      = '0'
        <!-- START 07/13/2022 [QC#60289, ADD] -->
        AND SIL_B.SVC_INV_NUM             = SIL_G.SVC_INV_NUM (+) 
        AND SIL_B.PRNT_SVC_INV_LINE_PK    = SIL_G.SVC_INV_LINE_PK (+) 
        AND SIL_B.GLBL_CMPY_CD            = SIL_G.GLBL_CMPY_CD (+) 
        AND SIL_G.EZCANCELFLAG(+)       = '0'
        AND SIL_G.SVC_PGM_MDSE_CD       = IPSP_G.INV_PRINT_SVC_PGM_CD (+) 
        AND SIL_G.GLBL_CMPY_CD            = IPSP_G.GLBL_CMPY_CD (+) 
        AND IPSP_G.EZCANCELFLAG(+)      = '0'
        <!-- END   07/13/2022 [QC#60289, ADD] -->
        AND I.BILL_TO_CUST_ACCT_CD     = IPE.DS_ACCT_NUM (+) 
        AND SIL.MDL_ID                  = IPE.MDL_ID (+) 
        AND I.GLBL_CMPY_CD             = IPE.GLBL_CMPY_CD (+) 
        AND IPE.EZCANCELFLAG(+)         = '0'
        AND I.BILL_TO_CUST_ACCT_CD     = IPE_B.DS_ACCT_NUM (+)    
        AND SIL_B.MDL_ID                = IPE_B.MDL_ID (+)
        AND I.GLBL_CMPY_CD             = IPE_B.GLBL_CMPY_CD (+)    
        AND IPE_B.EZCANCELFLAG(+)       = '0'
        <!-- START 07/13/2022 [QC#60289, ADD] -->
        AND SIL_G.MDL_ID                = IPE_G.MDL_ID (+)
        AND I.GLBL_CMPY_CD             = IPE_G.GLBL_CMPY_CD (+)    
        AND IPE_G.EZCANCELFLAG(+)       = '0'
        <!-- END   07/13/2022 [QC#60289, ADD] -->
        AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
        AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
        AND CCY.EZCANCELFLAG(+)         = '0'
        AND SIL.SVC_INV_LINE_PK         = SILAC.SVC_INV_LINE_PK (+)
        AND SIL.GLBL_CMPY_CD            = SILAC.GLBL_CMPY_CD (+)
        AND SILAC.EZCANCELFLAG(+)       = '0'
        AND IL.DS_CONTR_DTL_PK         = DCD.DS_CONTR_DTL_PK (+)
        AND IL.GLBL_CMPY_CD            = DCD.GLBL_CMPY_CD (+)
        AND DCD.EZCANCELFLAG(+)       = '0'
    GROUP BY
        CCY.CCY_SGN_TXT
        <!-- START 07/13/2022 [QC#60289, MOD] -->
        <!-- ,NVL(IPSP_B.INV_PRINT_SVC_PGM_SRC_NM, IPSP.INV_PRINT_SVC_PGM_SRC_NM)       -->
        <!-- ,NVL(IPSP_B.INV_PRINT_SVC_PGM_PROD_NM, IPSP.INV_PRINT_SVC_PGM_PROD_NM)     -->  
        ,NVL(IPSP_G.INV_PRINT_SVC_PGM_SRC_NM, NVL(IPSP_B.INV_PRINT_SVC_PGM_SRC_NM, IPSP.INV_PRINT_SVC_PGM_SRC_NM))
        ,NVL(IPSP_G.INV_PRINT_SVC_PGM_PROD_NM, NVL(IPSP_B.INV_PRINT_SVC_PGM_PROD_NM, IPSP.INV_PRINT_SVC_PGM_PROD_NM))
        <!-- END   07/13/2022 [QC#60289, MOD] -->
    </statement>

    <!-- QC#27069 Add Start -->
    <statement id="getMaintenceSummary_manInv" parameterClass="Map" resultClass="Map">
    SELECT
         IPSP.INV_PRINT_SVC_PGM_SRC_NM        SOURCE
        ,IPSP.INV_PRINT_SVC_PGM_PROD_NM      PRODUCT_TYPE
        ,TO_CHAR(COUNT(DISTINCT IL.SVC_MACH_MSTR_PK), #qtyFormat# )                QTY
        ,CASE WHEN SUM(
            CASE WHEN 
            <!-- Mod Start 2019/06/04 QC#50681 -->
            <!-- IL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# -->
                (IL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND DCD.DS_CONTR_DTL_TP_CD != #dsContrDtlTpAcc# AND DCD.DS_CONTR_DTL_TP_CD != #dsContrDtlTpFleet# )
             OR (IL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND NVL(DCD.SVC_INV_MERGE_TP_CD, '0') = '1'
                                                        AND (DCD.DS_CONTR_DTL_TP_CD = #dsContrDtlTpAcc# OR DCD.DS_CONTR_DTL_TP_CD = #dsContrDtlTpFleet# ))
            <!-- Mod End 2019/06/04 QC#50681 -->
                 THEN IL.INV_LINE_DEAL_NET_AMT
                 ELSE  0   END) &lt; 0 THEN
            '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(SUM(
                CASE WHEN 
            <!-- Mod Start 2019/06/04 QC#50681 -->
            <!-- IL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# -->
                (IL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND DCD.DS_CONTR_DTL_TP_CD != #dsContrDtlTpAcc# AND DCD.DS_CONTR_DTL_TP_CD != #dsContrDtlTpFleet# )
             OR (IL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND  NVL(DCD.SVC_INV_MERGE_TP_CD, '0') = '1'
                                                        AND (DCD.DS_CONTR_DTL_TP_CD = #dsContrDtlTpAcc# OR DCD.DS_CONTR_DTL_TP_CD = #dsContrDtlTpFleet# ))
            <!-- Mod End 2019/06/04 QC#50681 -->
                 THEN IL.INV_LINE_DEAL_NET_AMT
                 ELSE  0   END)), #amtFormat# )
         ELSE
            CCY.CCY_SGN_TXT || TO_CHAR(SUM(
                CASE WHEN 
            <!-- Mod Start 2019/06/04 QC#50681 -->
            <!-- IL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# -->
                (IL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND DCD.DS_CONTR_DTL_TP_CD != #dsContrDtlTpAcc# AND DCD.DS_CONTR_DTL_TP_CD != #dsContrDtlTpFleet# )
             OR (IL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND  NVL(DCD.SVC_INV_MERGE_TP_CD, '0') = '1'
                                                        AND (DCD.DS_CONTR_DTL_TP_CD = #dsContrDtlTpAcc# OR DCD.DS_CONTR_DTL_TP_CD = #dsContrDtlTpFleet# ))
            <!-- Mod End 2019/06/04 QC#50681 -->
                 THEN IL.INV_LINE_DEAL_NET_AMT
                 ELSE  0   END), #amtFormat# )
         END    BASE_CHARGE
        ,CASE WHEN SUM(
            CASE WHEN 
            <!-- Mod Start 2019/06/04 QC#50681 -->
            <!-- IL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC# -->
                 IL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND NVL(DCD.SVC_INV_MERGE_TP_CD, '0') = '0'
                                                        AND (DCD.DS_CONTR_DTL_TP_CD = #dsContrDtlTpAcc# OR DCD.DS_CONTR_DTL_TP_CD = #dsContrDtlTpFleet# )
            <!-- Mod End 2019/06/04 QC#50681 -->
                 THEN IL.INV_LINE_DEAL_NET_AMT
                 ELSE 0   END) &lt; 0 THEN
            '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(SUM(
                CASE WHEN 
            <!-- Mod Start 2019/06/04 QC#50681 -->
            <!-- IL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC# -->
                 IL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND  NVL(DCD.SVC_INV_MERGE_TP_CD, '0') = '0'
                                                        AND (DCD.DS_CONTR_DTL_TP_CD = #dsContrDtlTpAcc# OR DCD.DS_CONTR_DTL_TP_CD = #dsContrDtlTpFleet# )
            <!-- Mod End 2019/06/04 QC#50681 -->
                 THEN IL.INV_LINE_DEAL_NET_AMT
                 ELSE 0   END)), #amtFormat# )
         ELSE
            CCY.CCY_SGN_TXT || TO_CHAR(SUM(
                CASE WHEN 
            <!-- Mod Start 2019/06/04 QC#50681 -->
            <!-- IL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC# -->
                 IL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND  NVL(DCD.SVC_INV_MERGE_TP_CD, '0') = '0'
                                                        AND (DCD.DS_CONTR_DTL_TP_CD = #dsContrDtlTpAcc# OR DCD.DS_CONTR_DTL_TP_CD = #dsContrDtlTpFleet# )
            <!-- Mod End 2019/06/04 QC#50681 -->
                 THEN IL.INV_LINE_DEAL_NET_AMT
                 ELSE 0   END), #amtFormat# )
         END    ATTACHMENT_CHARGE
        ,CASE WHEN SUM(
                CASE WHEN IL.SVC_INV_CHRG_TP_CD = #siChrgTpCdMC#
                 THEN IL.INV_LINE_DEAL_NET_AMT
                 ELSE 0    END) &lt; 0 THEN
            '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(SUM(
                CASE WHEN IL.SVC_INV_CHRG_TP_CD = #siChrgTpCdMC#
                 THEN IL.INV_LINE_DEAL_NET_AMT
                 ELSE 0    END)), #amtFormat# )
         ELSE
            CCY.CCY_SGN_TXT || TO_CHAR(SUM(
                CASE WHEN IL.SVC_INV_CHRG_TP_CD = #siChrgTpCdMC#
                 THEN IL.INV_LINE_DEAL_NET_AMT
                 ELSE 0    END), #amtFormat# )
         END    USAGE_CHARGE
        ,CASE WHEN SUM(IL.INV_LINE_DEAL_NET_AMT) &lt; 0 THEN
            '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(SUM(IL.INV_LINE_DEAL_NET_AMT)), #amtFormat# )
         ELSE
            CCY.CCY_SGN_TXT || TO_CHAR(SUM(IL.INV_LINE_DEAL_NET_AMT), #amtFormat# )
         END    AMOUNT
         <isEqual property="taxDtlFlg" compareValue="N">
         ,NULL                                     STATE_TAX
         ,NULL                                     COUNTY_TAX
         ,NULL                                     CITY_TAX
         </isEqual>
         <isNotEqual property="taxDtlFlg" compareValue="N">
         ,SUM(DILTD1.DEAL_SLS_TAX_AMT)             STATE_TAX
         ,SUM(DILTD2.DEAL_SLS_TAX_AMT)             COUNTY_TAX
         ,SUM(DILTD3.DEAL_SLS_TAX_AMT)             CITY_TAX
<!--     ,SUM(IL.INV_LINE_DEAL_TAX_AMT)            TOTAL_TAX--><!-- DEL QC#50375 2019/05/16 -->
         </isNotEqual>
         
         ,SUM(IL.INV_LINE_DEAL_TAX_AMT)            TOTAL_TAX  <!-- ADD QC#50375 2019/05/16 -->
         ,SUM(IL.INV_LINE_DEAL_NET_AMT + IL.INV_LINE_DEAL_TAX_AMT)          SUBTOTALS
    FROM
        (SELECT INV_NUM
                ,CASE SYS_SRC_CD
                     WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                     ELSE INV_NUM
                 END AS SVC_INV_NUM
                ,GLBL_CMPY_CD
                ,EZCANCELFLAG
                ,DEAL_CCY_CD
                ,BILL_TO_CUST_ACCT_CD
                ,SYS_SRC_CD
           FROM INV
          WHERE INV_NUM                   = #invNum#
            AND GLBL_CMPY_CD              = #glblCmpyCd#
            AND EZCANCELFLAG              = '0') I
        ,INV_LINE                           IL
        ,DS_INV_LINE_TAX_DTL                DILTD1
        ,DS_INV_LINE_TAX_DTL                DILTD2
        ,DS_INV_LINE_TAX_DTL                DILTD3
        ,INV_PRINT_SVC_PGM                  IPSP
        ,INV_PRINT_EX                       IPE
        ,CCY                                CCY
        ,(
         <!-- Add Start 2019/06/04 QC#50679 -->
         SELECT  
                A.DS_CONTR_NUM
               ,A.GLBL_CMPY_CD
               ,A.DS_CONTR_PK
               ,A.SVC_MACH_MSTR_PK
               ,A.MDL_ID
               ,A.SVC_PGM_MDSE_CD
               ,A.DS_CONTR_DTL_TP_CD
               ,A.SVC_INV_MERGE_TP_CD
         FROM (
         <!-- Add End 2019/06/04 QC#50679 -->
               SELECT
                    DC.DS_CONTR_NUM
                   ,DCD_2.GLBL_CMPY_CD
                   ,DCD_2.DS_CONTR_PK
                   ,DCD_2.SVC_MACH_MSTR_PK
                   ,DCD_2.MDL_ID
                   ,DCD_2.SVC_PGM_MDSE_CD
                   <!-- Add Start 2019/06/04 QC#50681 -->
                   ,DCD_2.DS_CONTR_DTL_TP_CD
                   ,DCD_2.SVC_INV_MERGE_TP_CD
                   <!-- Add End 2019/06/04 QC#50681 -->
                   <!-- Add Start 2019/06/04 QC#50683 -->
                   ,ROW_NUMBER () OVER (PARTITION BY DC.DS_CONTR_NUM
                                                    ,DCD_2.GLBL_CMPY_CD
                                                    ,DCD_2.DS_CONTR_PK
                                                    ,DCD_2.SVC_MACH_MSTR_PK
                                                    ,DCD_2.MDL_ID 
                                        ORDER BY DCD_2.DS_CONTR_DTL_PK) AS NUM1
                   <!-- Add Start 2019/06/04 QC#50683 -->
               FROM 
                    INV_LINE                 IL2
                    , DS_CONTR               DC 
                    , DS_CONTR_DTL           DCD_2
               WHERE
                       IL2.INV_NUM                     = #invNum#
                   AND IL2.DS_CONTR_NUM                = DC.DS_CONTR_NUM
                   AND DC.DS_CONTR_PK                  = DCD_2.DS_CONTR_PK
                   AND IL2.SVC_MACH_MSTR_PK            = DCD_2.SVC_MACH_MSTR_PK
                   AND DCD_2.DS_CONTR_DTL_TP_CD &lt;&gt; #dsContrDtlTpFleet#
                   AND IL2.GLBL_CMPY_CD                = #glblCmpyCd#
                   AND IL2.EZCANCELFLAG                = '0'
                   AND DC.GLBL_CMPY_CD                 = #glblCmpyCd#
                   AND DC.EZCANCELFLAG                 = '0'
                   AND DCD_2.GLBL_CMPY_CD              = #glblCmpyCd#
                   AND DCD_2.EZCANCELFLAG              = '0'
               GROUP BY
                    DC.DS_CONTR_NUM
                   ,DCD_2.GLBL_CMPY_CD
                   ,DCD_2.DS_CONTR_PK
                   ,DCD_2.SVC_MACH_MSTR_PK
                   ,DCD_2.MDL_ID
                   ,DCD_2.SVC_PGM_MDSE_CD
                   <!-- Add Start 2019/06/04 QC#50681 -->
                   ,DCD_2.DS_CONTR_DTL_TP_CD
                   ,DCD_2.SVC_INV_MERGE_TP_CD
                   <!-- Add Start 2019/06/04 QC#50681 -->
          <!-- Add Start 2019/06/04 QC#50679 -->
                   ,DCD_2.DS_CONTR_DTL_PK
               ) A
          WHERE A.NUM1 = 1
          <!-- Add End 2019/06/04 QC#50679 -->
          ) DCD
    WHERE
            I.INV_NUM                   = #invNum#
        AND I.GLBL_CMPY_CD              = #glblCmpyCd#
        AND I.EZCANCELFLAG              = '0'
        AND I.SYS_SRC_CD                = #sysSrcCdNFC#
        AND I.INV_NUM                   = IL.INV_NUM
        AND I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD
        AND IL.EZCANCELFLAG             = '0'
        AND IL.INV_NUM                  = DILTD1.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM         = DILTD1.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM             = DILTD1.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM         = DILTD1.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM     = DILTD1.INV_TRX_LINE_SUB_NUM(+)
        AND IL.GLBL_CMPY_CD             = DILTD1.GLBL_CMPY_CD(+)
        AND DILTD1.EZCANCELFLAG(+)      = '0'
        AND DILTD1.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd01#
        AND IL.INV_NUM                  = DILTD2.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM         = DILTD2.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM             = DILTD2.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM         = DILTD2.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM     = DILTD2.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD2.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd02#
        AND IL.GLBL_CMPY_CD             = DILTD2.GLBL_CMPY_CD(+)
        AND DILTD2.EZCANCELFLAG(+)      = '0'
        AND IL.INV_NUM                  = DILTD3.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM         = DILTD3.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM             = DILTD3.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM         = DILTD3.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM     = DILTD3.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD3.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd03#
        AND IL.GLBL_CMPY_CD             = DILTD3.GLBL_CMPY_CD(+)
        AND DILTD3.EZCANCELFLAG(+)      = '0'
        AND IL.DS_CONTR_NUM             = DCD.DS_CONTR_NUM(+)
        AND IL.SVC_MACH_MSTR_PK         = DCD.SVC_MACH_MSTR_PK(+)
        AND DCD.GLBL_CMPY_CD            = IPSP.GLBL_CMPY_CD (+)
        AND DCD.SVC_PGM_MDSE_CD         = IPSP.INV_PRINT_SVC_PGM_CD (+)
        AND IPSP.EZCANCELFLAG(+)        = '0'
        AND I.BILL_TO_CUST_ACCT_CD      = IPE.DS_ACCT_NUM (+)
        AND IL.MDL_ID                   = IPE.MDL_ID (+)
        AND I.GLBL_CMPY_CD              = IPE.GLBL_CMPY_CD (+)
        AND IPE.EZCANCELFLAG(+)         = '0'
        AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
        AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
        AND CCY.EZCANCELFLAG(+)         = '0'
    GROUP BY
        CCY.CCY_SGN_TXT
        ,IPSP.INV_PRINT_SVC_PGM_SRC_NM
        ,IPSP.INV_PRINT_SVC_PGM_PROD_NM
    </statement>
    <!-- QC#27069 Add End -->

    <statement id="getPartsSummary" parameterClass="Map" resultClass="Map">
    WITH A AS(
    
    SELECT
        CASE WHEN M_H.COA_PROD_CD LIKE #prodCd# THEN #invSmryLineTpNmNC#
              WHEN M_H.COA_MDSE_TP_CD = #coaMdseTpCd# THEN #invSmryLineTpNmNC#
              ELSE #invSmryLineTpNmC#  END          PRODUCT_TYPE
        ,IL.INV_DPLY_QTY                   QTY
        ,NULL                               BASE_CHARGE 
        ,NULL                               ATTACHMENT_CHARGE 
        ,NULL                               USAGE_CHARGE 
        ,IL.INV_LINE_DEAL_NET_AMT           AMOUNT
        <isEqual property="taxDtlFlg" compareValue="N">
        ,NULL                               STATE_TAX 
        ,NULL                               COUNTY_TAX 
        ,NULL                               CITY_TAX 
        </isEqual>
        <isNotEqual property="taxDtlFlg" compareValue="N"> 
        ,DILTD1.DEAL_SLS_TAX_AMT            STATE_TAX 
        <!-- QC#50882 2019/06/20 Mod -->
        <!--,DILTD1.DEAL_SLS_TAX_AMT            COUNTY_TAX -->
        <!--,DILTD1.DEAL_SLS_TAX_AMT            CITY_TAX -->
        ,DILTD2.DEAL_SLS_TAX_AMT            COUNTY_TAX 
        ,DILTD3.DEAL_SLS_TAX_AMT            CITY_TAX 
        </isNotEqual>
        ,IL.INV_LINE_DEAL_TAX_AMT          TOTAL_TAX 
        ,IL.INV_LINE_DEAL_NET_AMT + IL.INV_LINE_DEAL_TAX_AMT        SUBTOTALS 
        ,CCY.CCY_SGN_TXT
    FROM
        <!-- 2018/08/21 QC#27684 Mod Start -->
        <!-- INV                    I -->
        (
            SELECT
                   INV_NUM,
                   CASE SYS_SRC_CD
                       WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                       ELSE INV_NUM
                   END  AS SVC_INV_NUM,
                   GLBL_CMPY_CD,
                   EZCANCELFLAG,
                   LEASE_CMPY_PO_NUM,
                   DEAL_CCY_CD
              FROM INV
             WHERE
                   INV_NUM = #invNum#
              AND  GLBL_CMPY_CD  = #glblCmpyCd#
              AND  EZCANCELFLAG  = '0'
        ) I
        <!-- 2018/08/21 QC#27684 Mod End -->
        ,SVC_INV                SI
        ,INV_LINE               IL
        <!-- QC#52209 2019/07/31 Mod-->
        <!-- ,SVC_INV_LINE           SIL -->
        <!-- ,INV_PRT_SVC_INV_LINE_WRK SIL  --><!-- 2020/03/18 QC#56281 Del Start -->
        ,ALL_MDSE_V             M_H
        ,DS_INV_LINE_TAX_DTL    DILTD1
        ,DS_INV_LINE_TAX_DTL    DILTD2
        ,DS_INV_LINE_TAX_DTL    DILTD3
        ,CCY                            CCY
    WHERE
        <!-- 2018/08/21 QC#27684 del Start -->
        <!--
            I.GLBL_CMPY_CD              = #glblCmpyCd#
        AND I.INV_NUM                   = #invNum#
        AND I.EZCANCELFLAG              = '0'  
        AND I.GLBL_CMPY_CD              = SI.GLBL_CMPY_CD
        AND ((     I.SYS_SRC_CD    &lt;&gt; #sysSrcCdNFC#    
               AND I.INV_NUM       = SI.SVC_INV_NUM )
           OR  (I.SYS_SRC_CD        = #sysSrcCdNFC# 
               AND I.ORIG_INV_NUM    = SI.SVC_INV_NUM )
           )
        -->
        <!-- 2018/08/21 QC#27684 del End -->
        <!-- 2018/08/21 QC#27684 add Start -->
            I.GLBL_CMPY_CD              = SI.GLBL_CMPY_CD
        AND I.SVC_INV_NUM               = SI.SVC_INV_NUM 
        <!-- 2018/08/21 QC#27684 add End -->
        AND SI.EZCANCELFLAG             = '0' 
        AND I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD
        AND I.INV_NUM                   = IL.INV_NUM
        AND IL.EZCANCELFLAG             = '0' 
        <!-- 2020/03/18 QC#56281 Del Start -->
        <!-- AND IL.GLBL_CMPY_CD             = SIL.GLBL_CMPY_CD -->
        <!-- AND IL.INV_NUM                  = SIL.SVC_INV_NUM -->
        <!-- AND IL.SVC_INV_LINE_PK          = SIL.SVC_INV_LINE_PK -->
        <!-- AND SIL.EZCANCELFLAG            = '0'  -->
        <!-- 2020/03/18 QC#56281 Del End -->
        AND SI.SVC_INV_SRC_TP_CD        = #siSrcTpCd#
        AND SI.GLBL_CMPY_CD             = M_H.GLBL_CMPY_CD (+)
        AND SI.MDSE_CD                  = M_H.MDSE_CD (+)
        AND M_H.EZCANCELFLAG(+)         = '0' 
        AND IL.GLBL_CMPY_CD             = DILTD1.GLBL_CMPY_CD(+)
        AND IL.INV_NUM                  = DILTD1.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM         = DILTD1.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM             = DILTD1.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM         = DILTD1.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM     = DILTD1.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD1.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd01#
        AND DILTD1.EZCANCELFLAG(+)      = '0' 
        AND IL.GLBL_CMPY_CD             = DILTD2.GLBL_CMPY_CD(+)
        AND IL.INV_NUM                  = DILTD2.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM         = DILTD2.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM             = DILTD2.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM         = DILTD2.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM     = DILTD2.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD2.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd02#
        AND DILTD2.EZCANCELFLAG(+)      = '0' 
        AND IL.GLBL_CMPY_CD             = DILTD3.GLBL_CMPY_CD(+)
        AND IL.INV_NUM                  = DILTD3.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM         = DILTD3.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM             = DILTD3.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM         = DILTD3.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM     = DILTD3.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD3.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd03#
        AND DILTD3.EZCANCELFLAG(+)      = '0' 
        AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
        AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
        AND CCY.EZCANCELFLAG(+)         = '0'
        )
    SELECT
        #ordClsPL#        SOURCE
        ,PRODUCT_TYPE
        <!-- QC#17491 -->
        <!--  ,TO_CHAR(SUM(QTY), #qtyFormat# )              QTY-->
        ,RTRIM(TO_CHAR(SUM(QTY), #qtyFormat# ),'.')         QTY
        ,NULL                                               BASE_CHARGE 
        ,NULL                                               ATTACHMENT_CHARGE 
        ,NULL                                               USAGE_CHARGE 
        ,CASE WHEN SUM(AMOUNT) &lt; 0 THEN
            '-' || CCY_SGN_TXT || TO_CHAR(ABS(SUM(AMOUNT)), #amtFormat# )
         ELSE
            CCY_SGN_TXT || TO_CHAR(SUM(AMOUNT), #amtFormat# )
         END    AMOUNT
        ,SUM(STATE_TAX)    STATE_TAX 
        ,SUM(COUNTY_TAX)   COUNTY_TAX 
        ,SUM(CITY_TAX)     CITY_TAX 
        ,SUM(TOTAL_TAX)    TOTAL_TAX 
        ,SUM(SUBTOTALS)    SUBTOTALS 
        
    FROM
        A
    GROUP BY
        CCY_SGN_TXT
       ,PRODUCT_TYPE
    </statement>

<!-- 2019/05/07 QC#50078 Add Start -->
    <statement id="getPartsSummary_manInv" parameterClass="Map" resultClass="Map">
    WITH A AS(
    
    SELECT
        CASE WHEN M_H.COA_PROD_CD LIKE #prodCd# THEN #invSmryLineTpNmNC#
              WHEN M_H.COA_MDSE_TP_CD = #coaMdseTpCd# THEN #invSmryLineTpNmNC#
              ELSE #invSmryLineTpNmC#  END          PRODUCT_TYPE
        ,IL.INV_DPLY_QTY                   QTY
        ,NULL                               BASE_CHARGE 
        ,NULL                               ATTACHMENT_CHARGE 
        ,NULL                               USAGE_CHARGE 
        ,IL.INV_LINE_DEAL_NET_AMT           AMOUNT
        <isEqual property="taxDtlFlg" compareValue="N">
        ,NULL                               STATE_TAX 
        ,NULL                               COUNTY_TAX 
        ,NULL                               CITY_TAX 
        </isEqual>
        <isNotEqual property="taxDtlFlg" compareValue="N"> 
        ,DILTD1.DEAL_SLS_TAX_AMT            STATE_TAX 
        <!-- QC#50882 2019/06/20 Mod -->
        <!-- ,DILTD1.DEAL_SLS_TAX_AMT            COUNTY_TAX  -->
        <!-- ,DILTD1.DEAL_SLS_TAX_AMT            CITY_TAX -->
        ,DILTD2.DEAL_SLS_TAX_AMT            COUNTY_TAX
        ,DILTD3.DEAL_SLS_TAX_AMT            CITY_TAX
        </isNotEqual>
        ,IL.INV_LINE_DEAL_TAX_AMT          TOTAL_TAX 
        ,IL.INV_LINE_DEAL_NET_AMT + IL.INV_LINE_DEAL_TAX_AMT        SUBTOTALS 
        ,CCY.CCY_SGN_TXT
    FROM
        (
            SELECT
                   INV_NUM,
                   GLBL_CMPY_CD,
                   EZCANCELFLAG,
                   LEASE_CMPY_PO_NUM,
                   DEAL_CCY_CD
              FROM INV
             WHERE
                   INV_NUM = #invNum#
              AND  GLBL_CMPY_CD  = #glblCmpyCd#
              AND  EZCANCELFLAG  = '0'
        ) I
        ,INV_LINE               IL
        ,ALL_MDSE_V             M_H
        ,DS_INV_LINE_TAX_DTL    DILTD1
        ,DS_INV_LINE_TAX_DTL    DILTD2
        ,DS_INV_LINE_TAX_DTL    DILTD3
        ,CCY                    CCY
        ,INV_LINE               IL1
        ,SVC_MACH_MSTR          SMM
    WHERE
            I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD
        AND I.INV_NUM                   = IL.INV_NUM
        AND IL.EZCANCELFLAG             = '0'

        AND I.INV_NUM                   = IL1.INV_NUM(+)
        AND I.GLBL_CMPY_CD              = IL1.GLBL_CMPY_CD(+)
        AND IL1.EZCANCELFLAG(+)         = '0'
        AND IL1.INV_BOL_LINE_NUM(+)     = '001'
        AND IL1.INV_LINE_NUM(+)         = '00001'
        AND IL1.INV_LINE_SUB_NUM(+)     = '001'
        AND IL1.INV_LINE_SUB_TRX_NUM(+) = '001'

        AND IL1.SVC_MACH_MSTR_PK        = SMM.SVC_MACH_MSTR_PK(+)
        AND IL1.GLBL_CMPY_CD            = SMM.GLBL_CMPY_CD(+)
        AND SMM.EZCANCELFLAG(+)         = '0'
        AND SMM.MDSE_CD                 = M_H.MDSE_CD (+)
        AND SMM.GLBL_CMPY_CD            = M_H.GLBL_CMPY_CD (+)
        AND M_H.EZCANCELFLAG(+)         = '0'
        AND IL.GLBL_CMPY_CD            = DILTD1.GLBL_CMPY_CD(+)
        AND IL.INV_NUM                 = DILTD1.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM        = DILTD1.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM            = DILTD1.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM        = DILTD1.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM    = DILTD1.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD1.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd01#
        AND DILTD1.EZCANCELFLAG(+)      = '0' 
        AND IL.GLBL_CMPY_CD            = DILTD2.GLBL_CMPY_CD(+)
        AND IL.INV_NUM                 = DILTD2.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM        = DILTD2.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM            = DILTD2.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM        = DILTD2.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM    = DILTD2.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD2.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd02#
        AND DILTD2.EZCANCELFLAG(+)      = '0' 
        AND IL.GLBL_CMPY_CD            = DILTD3.GLBL_CMPY_CD(+)
        AND IL.INV_NUM                 = DILTD3.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM        = DILTD3.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM            = DILTD3.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM        = DILTD3.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM    = DILTD3.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD3.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd03#
        AND DILTD3.EZCANCELFLAG(+)      = '0' 
        AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
        AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
        AND CCY.EZCANCELFLAG(+)         = '0'
        )
    SELECT
        #ordClsPL#        SOURCE
        ,PRODUCT_TYPE
        ,RTRIM(TO_CHAR(SUM(QTY), #qtyFormat# ),'.')         QTY
        ,NULL                                               BASE_CHARGE 
        ,NULL                                               ATTACHMENT_CHARGE 
        ,NULL                                               USAGE_CHARGE 
        ,CASE WHEN SUM(AMOUNT) &lt; 0 THEN
            '-' || CCY_SGN_TXT || TO_CHAR(ABS(SUM(AMOUNT)), #amtFormat# )
         ELSE
            CCY_SGN_TXT || TO_CHAR(SUM(AMOUNT), #amtFormat# )
         END    AMOUNT
        ,SUM(STATE_TAX)    STATE_TAX 
        ,SUM(COUNTY_TAX)   COUNTY_TAX 
        ,SUM(CITY_TAX)     CITY_TAX 
        ,SUM(TOTAL_TAX)    TOTAL_TAX 
        ,SUM(SUBTOTALS)    SUBTOTALS 
        
    FROM
        A
    GROUP BY
        CCY_SGN_TXT
       ,PRODUCT_TYPE
    </statement>
<!-- 2019/05/07 QC#50078 Add End -->

    <statement id="getSaleSummary" parameterClass="Map" resultClass="Map">

    WITH A AS (
      SELECT
         <!-- QC#26826 -->
         CASE WHEN M_B.MDSE_CD IS NOT NULL THEN
             CASE WHEN M_B.COA_PROD_CD LIKE #prodCd# THEN '2'
                 WHEN M_B.COA_MDSE_TP_CD = #coaMdseTpCd# THEN '2'
             ELSE
                 CASE WHEN IL.BASE_CMPT_FLG = 'Y' THEN
                     '1'
                 ELSE
                     '3'
                 END
             END
         ELSE
             CASE WHEN M.COA_PROD_CD LIKE #prodCd# THEN '2'
             WHEN M.COA_MDSE_TP_CD = #coaMdseTpCd# THEN '2'
             ELSE
                 CASE WHEN IL.BASE_CMPT_FLG = 'Y' THEN
                     '1'
                 ELSE
                     '3'
                 END
             END
         END
         SORT_TYPE,
         CASE WHEN 
         <!-- QC#26846 -->
         <isEqual property="isBillablePartsOrderFlg" compareValue="true">
             'Y' = 'Y'
         </isEqual>
         <isNotEqual property="isBillablePartsOrderFlg" compareValue="true">
             'Y' = 'N'
         </isNotEqual>
            THEN #ordClsPARTS# 
         WHEN 
         <isEqual property="isSupplyOrderFlg" compareValue="true">
             'Y' = 'Y'
         </isEqual>
         <isNotEqual property="isSupplyOrderFlg" compareValue="true">
             'Y' = 'N'
         </isNotEqual>
            THEN #ordClsSUPL# 
            ELSE #ordClsSL#   END                               SOURCE 
        <!--  ,CASE WHEN I.CR_REBIL_RSN_CATG_CD IS NOT NULL THEN 
            #creditAndOdRebill#
            -->
         ,CASE WHEN M.MDSE_CD = #varCharConst2# AND 
         <isEqual property="isEasyPac1Flg" compareValue="true">
             'Y' = 'Y'
         </isEqual>
         <isNotEqual property="isEasyPac1Flg" compareValue="true">
             'Y' = 'N'
         </isNotEqual>
            THEN NVL(#varCharConst1#, #shortFall#)
         WHEN M_B.MDSE_CD IS NOT NULL THEN  
             CASE WHEN M_B.COA_PROD_CD LIKE #prodCd# THEN #invSmryLineTpNmNC#
                 WHEN M_B.COA_MDSE_TP_CD = #coaMdseTpCd# THEN #invSmryLineTpNmNC#
             ELSE 
                 CASE WHEN IL.BASE_CMPT_FLG = 'Y' THEN 
                     CASE WHEN IL.MDL_NM IS NOT NULL AND INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) = 0 THEN
                         #invSmryLineTpNmC# || '-' || IL.MDL_NM  
                     WHEN IL.MDL_NM IS NOT NULL THEN
                         IL.MDL_NM  
                     ELSE
                         #invSmryLineTpNmC#
                     END
                 ELSE
                     CASE WHEN 
                     <isEqual property="isNoConfigOrderFlg" compareValue="true">
                         'Y' = 'N' AND INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) = 0
                     </isEqual>
                     <isNotEqual property="isNoConfigOrderFlg" compareValue="true">
                         'Y' = 'Y' AND INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) = 0
                     </isNotEqual>
                     THEN
                            #invSmryLineTpNmC# || '-ATTACHMENT'
                     WHEN
                     <isEqual property="isNoConfigOrderFlg" compareValue="true">
                         'Y' = 'N' AND INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) &lt;&gt; 0
                     </isEqual>
                     <isNotEqual property="isNoConfigOrderFlg" compareValue="true">
                         'Y' = 'Y' AND INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) &lt;&gt; 0
                     </isNotEqual>
                     THEN
                            'ATTACHMENT'
                     ELSE
                            #invSmryLineTpNmC#
                     END
                 END
             END 
         ELSE  
             CASE WHEN M.COA_PROD_CD LIKE #prodCd# THEN #invSmryLineTpNmNC#
             WHEN M.COA_MDSE_TP_CD = #coaMdseTpCd# THEN #invSmryLineTpNmNC#
             ELSE 
                 CASE WHEN IL.BASE_CMPT_FLG = 'Y' THEN 
                     CASE WHEN IL.MDL_NM IS NOT NULL AND INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) = 0 THEN
                         #invSmryLineTpNmC# || '-' || IL.MDL_NM  
                     WHEN IL.MDL_NM IS NOT NULL THEN
                         IL.MDL_NM  
                     ELSE
                         #invSmryLineTpNmC#
                     END
                 ELSE
                     CASE WHEN 
                 <isEqual property="isNoConfigOrderFlg" compareValue="true">
                     'Y' = 'N'  AND INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) = 0
                 </isEqual>
                 <isNotEqual property="isNoConfigOrderFlg" compareValue="true">
                     'Y' = 'Y'  AND INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) = 0
                 </isNotEqual>
                     THEN
                         #invSmryLineTpNmC# || '-ATTACHMENT'
                     WHEN
                 <isEqual property="isNoConfigOrderFlg" compareValue="true">
                     'Y' = 'N' AND INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) &lt;&gt; 0
                 </isEqual>
                 <isNotEqual property="isNoConfigOrderFlg" compareValue="true">
                     'Y' = 'Y' AND INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) &lt;&gt; 0
                 </isNotEqual>
                     THEN
                         'ATTACHMENT'
                     WHEN (
                     <isEqual property="isEasyPac1Flg" compareValue="true">
                         'Y' = 'Y'
                     </isEqual>
                     <isNotEqual property="isEasyPac1Flg" compareValue="true">
                         'Y' = 'N'
                     </isNotEqual>
                     ) OR INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) = 0 AND (select count(ORD_CATG_BIZ_CTX_PK) from ORD_CATG_BIZ_CTX 
            where EZCANCELFLAG = '0' 
            AND GLBL_CMPY_CD = I.GLBL_CMPY_CD AND ORD_CATG_CTX_TP_CD = 'INV_PRT_SUPPLIES_ORDER'
            AND DS_ORD_CATG_CD = I.DS_ORD_CATG_CD
            AND (DS_ORD_TP_CD = I.DS_ORD_TP_CD OR DS_ORD_TP_CD IS NULL)) &lt;= 0 THEN
                         #invSmryLineTpNmC#
                     ELSE
                         ''
                     END
                 END
             END
         END        PRODUCT_TYPE
        <isEqual property="isEasyPac1Flg" compareValue="true">
        ,CASE WHEN IL.DS_CONTR_DTL_PK IS NULL THEN
            NVL(IL.SPLY_PGM_SHIP_QTY, IL.SHIP_QTY)
         ELSE 0 END  QTY 
        </isEqual>
        <isNotEqual property="isEasyPac1Flg" compareValue="true"> 
<!-- START 2018/09/10 T.Ogura [QC#27999,MOD] -->
<!--    ,CASE WHEN IL.DS_CONTR_DTL_PK IS NULL THEN -->
        ,CASE WHEN IL.DS_CONTR_DTL_PK IS NULL AND NVL(IL.INV_LINE_CATG_CD, #invLineCatgItem#) &lt;&gt; #invLineCatgFrt# THEN
<!-- END   2018/09/10 T.Ogura [QC#27999,MOD] -->
            NVL(IL.INV_DPLY_QTY, IL.SHIP_QTY)
         ELSE 0 END  QTY 
        </isNotEqual>
        <isEqual property="dtlDplyFlg" compareValue="Y">
<!-- START 2018/09/10 T.Ogura [QC#27999,MOD] -->
<!--    ,IL.INV_LINE_DEAL_NET_AMT                                   AMOUNT -->
         <!-- 2019/06/05 QC#50731 MOD START -->
        <!-- ,CASE WHEN NVL(IL.INV_LINE_CATG_CD, #invLineCatgItem#) &lt;&gt; #invLineCatgFrt# THEN
            IL.INV_LINE_DEAL_NET_AMT
         ELSE 0 END  AMOUNT -->
         , CASE WHEN TAI.MDSE_CD IS NULL
                THEN CASE WHEN NVL(IL.INV_LINE_CATG_CD, #invLineCatgItem#) &lt;&gt; #invLineCatgFrt#
                          THEN IL.INV_LINE_DEAL_NET_AMT
                          ELSE 0 
                     END
                ELSE IL.INV_LINE_DEAL_TAX_AMT
           END AMOUNT
         <!-- 2019/06/05 QC#50731 MOD END  -->
<!-- END   2018/09/10 T.Ogura [QC#27999,MOD] -->
        </isEqual>
        <isNotEqual property="dtlDplyFlg" compareValue="Y"> 
        ,NULL                                                       AMOUNT
        </isNotEqual>

        <isEqual property="taxDtlFlg" compareValue="N">
        ,NULL                           STATE_TAX 
        ,NULL                           COUNTY_TAX 
        ,NULL                           CITY_TAX 
        </isEqual>
        <isNotEqual property="taxDtlFlg" compareValue="N"> 
        ,DILTD1.DEAL_SLS_TAX_AMT        STATE_TAX 
        ,DILTD2.DEAL_SLS_TAX_AMT        COUNTY_TAX 
        ,DILTD3.DEAL_SLS_TAX_AMT        CITY_TAX 
        </isNotEqual>
<!-- START 2018/09/10 T.Ogura [QC#27999,MOD] -->
<!--    ,IL.INV_LINE_DEAL_TAX_AMT                                   TOTAL_TAX -->
         <!-- 2019/06/05 QC#50731 MOD START  -->
         <!-- ,CASE WHEN NVL(IL.INV_LINE_CATG_CD, #invLineCatgItem#) &lt;&gt; #invLineCatgFrt# THEN
            IL.INV_LINE_DEAL_TAX_AMT
         ELSE 0 END  TOTAL_TAX -->
         ,CASE WHEN TAI.MDSE_CD IS NULL
               THEN CASE WHEN NVL(IL.INV_LINE_CATG_CD, #invLineCatgItem#) &lt;&gt; #invLineCatgFrt#
                         THEN IL.INV_LINE_DEAL_TAX_AMT
                         ELSE 0
                    END
               ELSE IL.INV_LINE_DEAL_NET_AMT
          END TOTAL_TAX
         <!-- 2019/06/05 QC#50731 MOD END -->
<!-- END   2018/09/10 T.Ogura [QC#27999,MOD] -->
<!-- START 2018/09/10 T.Ogura [QC#27999,MOD] -->
<!--    ,IL.INV_LINE_DEAL_NET_AMT + IL.INV_LINE_DEAL_TAX_AMT        SUBTOTALS -->
        ,CASE WHEN NVL(IL.INV_LINE_CATG_CD, #invLineCatgItem#) &lt;&gt; #invLineCatgFrt# THEN
            IL.INV_LINE_DEAL_NET_AMT + IL.INV_LINE_DEAL_TAX_AMT
         ELSE 0 END  SUBTOTALS
<!-- END   2018/09/10 T.Ogura [QC#27999,MOD] -->
        ,CCY.CCY_SGN_TXT
        <!-- 2019/02/01 QC#29371 SRNO.11 Add Start-->
        ,LOB.PRMO_ITEM_PRINT_FLG        PRMO_ITEM_PRINT_FLG
        ,CASE  WHEN LOB.PRMO_ITEM_PRINT_FLG = 'N' AND MTVS.COA_MDSE_TP_CD IS NOT NULL 
           THEN '1'
           ELSE NULL
         END                            COA_MDSE_TP_CD
        <!-- 2019/02/01 QC#29371 SRNO.11 Add End-->
    FROM
         INV                    I 
        ,INV_LINE               IL 
        ,DS_INV_LINE_TAX_DTL    DILTD1 
        ,DS_INV_LINE_TAX_DTL    DILTD2 
        ,DS_INV_LINE_TAX_DTL    DILTD3 
        ,INV_LINE               IL_B 
        ,MDSE                   M 
        ,MDSE                   M_B 
        ,CCY
        ,VAR_CHAR_CONST         VCC
        <!-- 2019/02/01 QC#29371 SRNO.11 Add Start-->
        ,LINE_BIZ_TP LOB
        ,MDSE_TP_VAL_SET MTVS
        <!-- 2019/02/01 QC#29371 SRNO.11 Add End-->
        <!-- 2019/06/05 QC#50731 ADD START -->
        ,TAX_ADJ_ITEM           TAI
        <!-- 2019/06/05 QC#50731 ADD END  -->
    WHERE
            I.GLBL_CMPY_CD              = #glblCmpyCd#
        AND I.INV_NUM                   = #invNum#
        AND I.EZCANCELFLAG              =  '0'
        AND I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD
        AND I.INV_NUM                   = IL.INV_NUM 
        AND IL.SET_MDSE_CD              IS NULL
        <!-- 2018/05/25 QC#21841 Add Start -->
        AND (IL.INV_LINE_CATG_CD IS NULL
<!-- START 2018/09/10 T.Ogura [QC#27999,ADD] -->
        OR IL.INV_LINE_CATG_CD  = #invLineCatgFrt#
<!-- END   2018/09/10 T.Ogura [QC#27999,ADD] -->
        OR IL.INV_LINE_CATG_CD  = #invLineCatgItem#)
        <!-- 2018/05/25 QC#21841 Add End -->
        AND IL.EZCANCELFLAG             =  '0'
        AND NOT EXISTS (SELECT 1 FROM SVC_INV S
                        WHERE S.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                          AND S.SVC_INV_NUM  = I.INV_NUM
                          AND S.EZCANCELFLAG = '0')
        AND IL.GLBL_CMPY_CD            = DILTD1.GLBL_CMPY_CD(+)
        AND IL.INV_NUM                 = DILTD1.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM        = DILTD1.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM            = DILTD1.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM        = DILTD1.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM    = DILTD1.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD1.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd01#
        AND DILTD1.EZCANCELFLAG(+)      =  '0'
        AND IL.GLBL_CMPY_CD            = DILTD2.GLBL_CMPY_CD(+)
        AND IL.INV_NUM                 = DILTD2.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM        = DILTD2.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM            = DILTD2.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM        = DILTD2.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM    = DILTD2.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD2.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd02#
        AND DILTD2.EZCANCELFLAG(+)      =  '0'
        AND IL.GLBL_CMPY_CD            = DILTD3.GLBL_CMPY_CD(+)
        AND IL.INV_NUM                 = DILTD3.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM        = DILTD3.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM            = DILTD3.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM        = DILTD3.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM    = DILTD3.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD3.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd03#
        AND DILTD3.EZCANCELFLAG(+)      =  '0'
        AND IL.GLBL_CMPY_CD            = IL_B.GLBL_CMPY_CD (+) 
        AND IL.INV_NUM                 = IL_B.INV_NUM (+) 
        AND IL.DS_ORD_POSN_NUM         = IL_B.DS_ORD_POSN_NUM (+) 
        AND IL_B.BASE_CMPT_FLG (+)     = 'Y'
        AND IL_B.DS_CONTR_DTL_PK IS NULL
        AND IL_B.EZCANCELFLAG(+)       =  '0'
        AND IL.GLBL_CMPY_CD             = M.GLBL_CMPY_CD 
        AND IL.MDSE_CD                  = M.MDSE_CD 
        AND M.EZCANCELFLAG              =  '0'
        AND IL_B.GLBL_CMPY_CD           = M_B.GLBL_CMPY_CD (+) 
        AND IL_B.MDSE_CD                = M_B.MDSE_CD (+) 
        AND M_B.EZCANCELFLAG(+)         =  '0'
        AND I.GLBL_CMPY_CD = CCY.GLBL_CMPY_CD (+)  
        AND I.DEAL_CCY_CD = CCY.CCY_CD (+)  
        AND CCY.EZCANCELFLAG(+)      =  '0'
        <!-- QC#13096 add Start -->
        AND (CASE
                WHEN IL.INV_LINE_DEAL_NET_AMT = 0
                 AND IL.INV_LINE_DEAL_TAX_AMT = 0 <!-- QC#54143 2019/10/31 Add -->
                 AND EXISTS (
                        SELECT
                            'X'
                        FROM
                            ORD_LINE_VAL_SET    OLVS
                        WHERE
                                OLVS.GLBL_CMPY_CD           = IL.GLBL_CMPY_CD
                            AND OLVS.DS_ORD_LINE_CATG_CD    = IL.DS_ORD_LINE_CATG_CD
                            AND OLVS.ORD_LINE_CTX_TP_CD     = #zdInvPrtExcl#
                            AND OLVS.EZCANCELFLAG           = '0'
                    )
                THEN 'X'
                ELSE NULL
                END
            )  IS NULL
        <!-- QC#13096 add End -->
        AND VCC.GLBL_CMPY_CD              = #glblCmpyCd#
        AND VCC.EZCANCELFLAG              =  '0'
        AND VCC.VAR_CHAR_CONST_NM         =  'NWCB0100_SAP_LINE_BIZ_TP'
        <!-- 2019/02/01 QC#29371 SRNO.11 Add Start-->
        AND I.GLBL_CMPY_CD = LOB.GLBL_CMPY_CD
        AND I.EZCANCELFLAG = LOB.EZCANCELFLAG
        AND I.LINE_BIZ_TP_CD = LOB.LINE_BIZ_TP_CD
        AND M.GLBL_CMPY_CD = MTVS.GLBL_CMPY_CD(+)
        AND M.COA_MDSE_TP_CD = MTVS.COA_MDSE_TP_CD(+)
        AND M.EZCANCELFLAG = MTVS.EZCANCELFLAG(+)
        AND MTVS.MDSE_TP_CTX_TP_CD(+) = #invPrtPrmoItems#
        <!-- 2019/02/01 QC#29371 SRNO.11 Add End-->
        <!-- 2019/06/05 QC#50731 ADD START  -->
        AND IL.GLBL_CMPY_CD = TAI.GLBL_CMPY_CD(+)
        AND IL.EZCANCELFLAG = TAI.EZCANCELFLAG(+)
        AND IL.MDSE_CD = TAI.MDSE_CD(+)
        <!-- 2019/06/05 QC#50731 ADD END  -->
   <!-- 2018/06/03 QC#21841 Add Start -->
   UNION ALL
    SELECT
         SORT_TYPE,   <!-- QC#26826 -->
         SOURCE
        ,PRODUCT_TYPE
        ,1                               QTY
        ,SUM(AMOUNT)                     AMOUNT
        ,SUM(STATE_TAX)                  STATE_TAX 
        ,SUM(COUNTY_TAX)                 COUNTY_TAX 
        ,SUM(CITY_TAX)                   CITY_TAX 
        ,SUM(TOTAL_TAX)                  TOTAL_TAX
        ,SUM(SUBTOTALS)                  SUBTOTALS
        ,CCY_SGN_TXT
        <!-- 2019/02/01 QC#29371 SRNO.11 Add Start-->
        ,NULL                            PRMO_ITEM_PRINT_FLG
        ,NULL                            COA_MDSE_TP_CD
        <!-- 2019/02/01 QC#29371 SRNO.11 Add End-->
    FROM (
          SELECT
              <!-- QC#26826 -->
              CASE WHEN M_B.MDSE_CD IS NOT NULL THEN
                 CASE WHEN M_B.COA_PROD_CD LIKE #prodCd# THEN '2'
                     WHEN M_B.COA_MDSE_TP_CD = #coaMdseTpCd# THEN '2'
                 ELSE
                     CASE WHEN IL.BASE_CMPT_FLG = 'Y' THEN
                         '1'
                     ELSE
                         '4'
                     END
                 END
             ELSE
                 CASE WHEN M.COA_PROD_CD LIKE #prodCd# THEN '2'
                 WHEN M.COA_MDSE_TP_CD = #coaMdseTpCd# THEN '2'
                 ELSE
                     CASE WHEN IL.BASE_CMPT_FLG = 'Y' THEN
                         '1'
                     ELSE
                         '4'
                     END
                 END
             END
             SORT_TYPE,
             CASE WHEN 
             <!-- QC#26846 -->
             <isEqual property="isBillablePartsOrderFlg" compareValue="true">
                 'Y' = 'Y'
             </isEqual>
             <isNotEqual property="isBillablePartsOrderFlg" compareValue="true">
                 'Y' = 'N'
             </isNotEqual>
                THEN #ordClsPARTS# 
                WHEN 
             <isEqual property="isSupplyOrderFlg" compareValue="true">
                 'Y' = 'Y'
             </isEqual>
             <isNotEqual property="isSupplyOrderFlg" compareValue="true">
                 'Y' = 'N'
             </isNotEqual>
                THEN #ordClsSUPL# 
                ELSE #ordClsSL#   END                               SOURCE 
            <!--  ,CASE WHEN I.CR_REBIL_RSN_CATG_CD IS NOT NULL THEN 
                #creditAndOdRebill#
                -->
             ,CASE WHEN M.MDSE_CD = #varCharConst2# AND 
             <isEqual property="isEasyPac1Flg" compareValue="true">
                 'Y' = 'Y'
             </isEqual>
             <isNotEqual property="isEasyPac1Flg" compareValue="true">
                 'Y' = 'N'
             </isNotEqual>
                THEN NVL(#varCharConst1#, #shortFall#)
             WHEN M_B.MDSE_CD IS NOT NULL THEN  
                 CASE WHEN M_B.COA_PROD_CD LIKE #prodCd# THEN #invSmryLineTpNmNC#
                     WHEN M_B.COA_MDSE_TP_CD = #coaMdseTpCd# THEN #invSmryLineTpNmNC#
                 ELSE 
                     CASE WHEN IL.BASE_CMPT_FLG = 'Y' THEN 
                         CASE WHEN IL.MDL_NM IS NOT NULL AND INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) = 0 THEN
                             #invSmryLineTpNmC# || '-' || IL.MDL_NM  
                         WHEN IL.MDL_NM IS NOT NULL THEN
                             IL.MDL_NM  
                         ELSE
                             #invSmryLineTpNmC#
                         END
                     ELSE
                         CASE WHEN 
                         <isEqual property="isNoConfigOrderFlg" compareValue="true">
                             'Y' = 'N' AND INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) = 0
                         </isEqual>
                         <isNotEqual property="isNoConfigOrderFlg" compareValue="true">
                             'Y' = 'Y' AND INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) = 0
                         </isNotEqual>
                         THEN
                                #invSmryLineTpNmC# || '-ATTACHMENT'
                         WHEN
                         <isEqual property="isNoConfigOrderFlg" compareValue="true">
                             'Y' = 'N' AND INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) &lt;&gt; 0
                         </isEqual>
                         <isNotEqual property="isNoConfigOrderFlg" compareValue="true">
                             'Y' = 'Y' AND INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) &lt;&gt; 0
                         </isNotEqual>
                         THEN
                                'ATTACHMENT'
                         ELSE
                                #invSmryLineTpNmC#
                         END
                     END
                 END 
             ELSE  
                 CASE WHEN M.COA_PROD_CD LIKE #prodCd# THEN #invSmryLineTpNmNC#
                 WHEN M.COA_MDSE_TP_CD = #coaMdseTpCd# THEN #invSmryLineTpNmNC#
                 ELSE 
                     CASE WHEN IL.BASE_CMPT_FLG = 'Y' THEN 
                         CASE WHEN IL.MDL_NM IS NOT NULL AND INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) = 0 THEN
                             #invSmryLineTpNmC# || '-' || IL.MDL_NM  
                         WHEN IL.MDL_NM IS NOT NULL THEN
                             IL.MDL_NM  
                         ELSE
                             #invSmryLineTpNmC#
                         END
                     ELSE
                         CASE WHEN 
                     <isEqual property="isNoConfigOrderFlg" compareValue="true">
                         'Y' = 'N'  AND INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) = 0
                     </isEqual>
                     <isNotEqual property="isNoConfigOrderFlg" compareValue="true">
                         'Y' = 'Y'  AND INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) = 0
                     </isNotEqual>
                         THEN
                             #invSmryLineTpNmC# || '-ATTACHMENT'
                         WHEN
                     <isEqual property="isNoConfigOrderFlg" compareValue="true">
                         'Y' = 'N' AND INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) &lt;&gt; 0
                     </isEqual>
                     <isNotEqual property="isNoConfigOrderFlg" compareValue="true">
                         'Y' = 'Y' AND INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) &lt;&gt; 0
                     </isNotEqual>
                         THEN
                             'ATTACHMENT'
                         WHEN (
                         <isEqual property="isEasyPac1Flg" compareValue="true">
                             'Y' = 'Y'
                         </isEqual>
                         <isNotEqual property="isEasyPac1Flg" compareValue="true">
                             'Y' = 'N'
                         </isNotEqual>
                         ) OR INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) = 0 AND (select count(ORD_CATG_BIZ_CTX_PK) from ORD_CATG_BIZ_CTX 
                where EZCANCELFLAG = '0' 
                AND GLBL_CMPY_CD = I.GLBL_CMPY_CD AND ORD_CATG_CTX_TP_CD = 'INV_PRT_SUPPLIES_ORDER'
                AND DS_ORD_CATG_CD = I.DS_ORD_CATG_CD
                AND (DS_ORD_TP_CD = I.DS_ORD_TP_CD OR DS_ORD_TP_CD IS NULL)) &lt;= 0 THEN
                             #invSmryLineTpNmC#
                         ELSE
                             ''
                         END
                     END
                 END
             END        PRODUCT_TYPE
            <isEqual property="isEasyPac1Flg" compareValue="true">
            ,CASE WHEN IL.DS_CONTR_DTL_PK IS NULL THEN
                NVL(IL.SPLY_PGM_SHIP_QTY, IL.SHIP_QTY)
             ELSE 0 END  QTY 
            </isEqual>
            <isNotEqual property="isEasyPac1Flg" compareValue="true"> 
            ,CASE WHEN IL.DS_CONTR_DTL_PK IS NULL THEN
                NVL(IL.INV_DPLY_QTY, IL.SHIP_QTY)
             ELSE 0 END  QTY 
            </isNotEqual>
            <isEqual property="dtlDplyFlg" compareValue="Y">
            <!-- 2019/06/05 QC#50731 MOD START  -->
            <!--  ,IL.INV_LINE_DEAL_NET_AMT                                   AMOUNT -->
            ,CASE WHEN TAI.MDSE_CD IS NULL
                  THEN IL.INV_LINE_DEAL_NET_AMT
                  ELSE IL.INV_LINE_DEAL_TAX_AMT
             END AMOUNT
            <!-- 2019/06/05 QC#50731 MOD END  -->
            </isEqual>
            <isNotEqual property="dtlDplyFlg" compareValue="Y"> 
            ,NULL                                                       AMOUNT
            </isNotEqual>

            <isEqual property="taxDtlFlg" compareValue="N">
            ,NULL                           STATE_TAX 
            ,NULL                           COUNTY_TAX 
            ,NULL                           CITY_TAX 
            </isEqual>
            <isNotEqual property="taxDtlFlg" compareValue="N"> 
            ,DILTD1.DEAL_SLS_TAX_AMT        STATE_TAX 
            ,DILTD2.DEAL_SLS_TAX_AMT        COUNTY_TAX 
            ,DILTD3.DEAL_SLS_TAX_AMT        CITY_TAX 
            </isNotEqual>
            <!-- 2019/06/05 QC#50731 MOD START  -->
            <!-- ,IL.INV_LINE_DEAL_TAX_AMT                                   TOTAL_TAX -->
            ,CASE WHEN TAI.MDSE_CD IS NULL
                  THEN IL.INV_LINE_DEAL_TAX_AMT
                  ELSE IL.INV_LINE_DEAL_NET_AMT
                  END TOTAL_TAX
            <!-- 2019/06/05 QC#50731 MOD END  -->
            ,IL.INV_LINE_DEAL_NET_AMT + IL.INV_LINE_DEAL_TAX_AMT        SUBTOTALS 
            ,CCY.CCY_SGN_TXT
            ,IL.DS_ORD_POSN_NUM
            ,IL.MDSE_CD
        FROM
             INV                    I 
            ,INV_LINE               IL 
            ,DS_INV_LINE_TAX_DTL    DILTD1 
            ,DS_INV_LINE_TAX_DTL    DILTD2 
            ,DS_INV_LINE_TAX_DTL    DILTD3 
            ,INV_LINE               IL_B 
            ,MDSE                   M 
            ,MDSE                   M_B 
            ,CCY
            ,VAR_CHAR_CONST         VCC
            <!-- 2019/06/05 QC#50731 ADD START -->
            ,TAX_ADJ_ITEM           TAI
            <!-- 2019/06/05 QC#50731 ADD END  -->
        WHERE
                I.GLBL_CMPY_CD              = #glblCmpyCd#
            AND I.INV_NUM                   = #invNum#
            AND I.EZCANCELFLAG              =  '0'
            AND I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD
            AND I.INV_NUM                   = IL.INV_NUM 
            AND IL.SET_MDSE_CD              IS NULL
            AND IL.INV_LINE_CATG_CD         = #invLineCatgChg#
            AND IL.EZCANCELFLAG             =  '0'
            AND NOT EXISTS (SELECT 1 FROM SVC_INV S
                            WHERE S.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                              AND S.SVC_INV_NUM  = I.INV_NUM
                              AND S.EZCANCELFLAG = '0')
            AND IL.GLBL_CMPY_CD            = DILTD1.GLBL_CMPY_CD(+)
            AND IL.INV_NUM                 = DILTD1.INV_NUM(+)
            AND IL.INV_BOL_LINE_NUM        = DILTD1.INV_BOL_LINE_NUM(+)
            AND IL.INV_LINE_NUM            = DILTD1.INV_LINE_NUM(+)
            AND IL.INV_LINE_SUB_NUM        = DILTD1.INV_LINE_SUB_NUM(+)
            AND IL.INV_LINE_SUB_TRX_NUM    = DILTD1.INV_TRX_LINE_SUB_NUM(+)
            AND DILTD1.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd01#
            AND DILTD1.EZCANCELFLAG(+)      =  '0'
            AND IL.GLBL_CMPY_CD            = DILTD2.GLBL_CMPY_CD(+)
            AND IL.INV_NUM                 = DILTD2.INV_NUM(+)
            AND IL.INV_BOL_LINE_NUM        = DILTD2.INV_BOL_LINE_NUM(+)
            AND IL.INV_LINE_NUM            = DILTD2.INV_LINE_NUM(+)
            AND IL.INV_LINE_SUB_NUM        = DILTD2.INV_LINE_SUB_NUM(+)
            AND IL.INV_LINE_SUB_TRX_NUM    = DILTD2.INV_TRX_LINE_SUB_NUM(+)
            AND DILTD2.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd02#
            AND DILTD2.EZCANCELFLAG(+)      =  '0'
            AND IL.GLBL_CMPY_CD            = DILTD3.GLBL_CMPY_CD(+)
            AND IL.INV_NUM                 = DILTD3.INV_NUM(+)
            AND IL.INV_BOL_LINE_NUM        = DILTD3.INV_BOL_LINE_NUM(+)
            AND IL.INV_LINE_NUM            = DILTD3.INV_LINE_NUM(+)
            AND IL.INV_LINE_SUB_NUM        = DILTD3.INV_LINE_SUB_NUM(+)
            AND IL.INV_LINE_SUB_TRX_NUM    = DILTD3.INV_TRX_LINE_SUB_NUM(+)
            AND DILTD3.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd03#
            AND DILTD3.EZCANCELFLAG(+)      =  '0'
            AND IL.GLBL_CMPY_CD            = IL_B.GLBL_CMPY_CD (+) 
            AND IL.INV_NUM                 = IL_B.INV_NUM (+) 
            AND IL.DS_ORD_POSN_NUM         = IL_B.DS_ORD_POSN_NUM (+) 
            AND IL_B.BASE_CMPT_FLG (+)     = 'Y'
            AND IL_B.DS_CONTR_DTL_PK IS NULL
            AND IL_B.EZCANCELFLAG(+)       =  '0'
            AND IL.GLBL_CMPY_CD             = M.GLBL_CMPY_CD 
            AND IL.MDSE_CD                  = M.MDSE_CD 
            AND M.EZCANCELFLAG              =  '0'
            AND IL_B.GLBL_CMPY_CD           = M_B.GLBL_CMPY_CD (+) 
            AND IL_B.MDSE_CD                = M_B.MDSE_CD (+) 
            AND M_B.EZCANCELFLAG(+)         =  '0'
            AND I.GLBL_CMPY_CD = CCY.GLBL_CMPY_CD (+)  
            AND I.DEAL_CCY_CD = CCY.CCY_CD (+)  
            AND CCY.EZCANCELFLAG(+)      =  '0'
            AND (CASE
                    WHEN IL.INV_LINE_DEAL_NET_AMT = 0
                     AND IL.INV_LINE_DEAL_TAX_AMT = 0 <!-- QC#54143 2019/10/31 Add -->
                     AND EXISTS (
                            SELECT
                                'X'
                            FROM
                                ORD_LINE_VAL_SET    OLVS
                            WHERE
                                    OLVS.GLBL_CMPY_CD           = IL.GLBL_CMPY_CD
                                AND OLVS.DS_ORD_LINE_CATG_CD    = IL.DS_ORD_LINE_CATG_CD
                                AND OLVS.ORD_LINE_CTX_TP_CD     = #zdInvPrtExcl#
                                AND OLVS.EZCANCELFLAG           = '0'
                        )
                    THEN 'X'
                    ELSE NULL
                    END
                )  IS NULL
            AND VCC.GLBL_CMPY_CD              = #glblCmpyCd#
            AND VCC.EZCANCELFLAG              =  '0'
            AND VCC.VAR_CHAR_CONST_NM         =  'NWCB0100_SAP_LINE_BIZ_TP'
            <!-- 2019/06/05 QC#50731 ADD START  -->
            AND IL.GLBL_CMPY_CD = TAI.GLBL_CMPY_CD(+)
            AND IL.EZCANCELFLAG = TAI.EZCANCELFLAG(+)
            AND IL.MDSE_CD = TAI.MDSE_CD(+)
            <!-- 2019/06/05 QC#50731 ADD END  -->
     )
     GROUP BY
             SORT_TYPE,  <!-- QC#26826 -->
             CCY_SGN_TXT
            ,SOURCE     
            ,PRODUCT_TYPE
            ,DS_ORD_POSN_NUM
            ,MDSE_CD
        <!-- 2018/06/03 QC#21841 Add End -->
    )
    SELECT
         MIN(SORT_TYPE) SORT_TYPE,  <!-- QC#26826 -->
         SOURCE     
        ,PRODUCT_TYPE
        ,TO_CHAR(SUM(QTY), #qtyFormat#)                         QTY 
        ,NULL                                                   BASE_CHARGE 
        ,NULL                                                   ATTACHMENT_CHARGE 
        ,NULL                                                   USAGE_CHARGE 
        ,CASE WHEN SUM(AMOUNT) IS NULL THEN NULL
         ELSE
             CASE WHEN SUM(AMOUNT) &lt; 0 THEN
                '-' || CCY_SGN_TXT || TO_CHAR(ABS(SUM(AMOUNT)), 'FM999G999G999G999G990D00' )
             ELSE
                CCY_SGN_TXT || TO_CHAR(SUM(AMOUNT), 'FM999G999G999G999G990D00' )
             END
         END     AMOUNT
        ,SUM(STATE_TAX)        STATE_TAX 
        ,SUM(COUNTY_TAX)       COUNTY_TAX 
        ,SUM(CITY_TAX)         CITY_TAX 
        ,SUM(TOTAL_TAX)        TOTAL_TAX 
        ,SUM(SUBTOTALS)        SUBTOTALS 
        ,PRMO_ITEM_PRINT_FLG
        ,COA_MDSE_TP_CD
    FROM
        A
    GROUP BY 
         CCY_SGN_TXT
        ,SOURCE     
        ,PRODUCT_TYPE
        ,PRMO_ITEM_PRINT_FLG
        ,COA_MDSE_TP_CD
    ORDER BY 1
    </statement>

    <statement id="getSaleSummaryFreightInfo" parameterClass="Map" resultClass="Map">
    SELECT
       <!-- 2018/05/25 QC#21841 Mod Start -->
       <!--
        SUM(IB.FRT_DEAL_TAX_AMT)                                FRT_TAX
       ,SUM(IB.SHIP_DEAL_FRT_AMT + IB.FRT_DEAL_TAX_AMT)         FRT_CHRG_AMT
       -->
        SUM(IL.INV_LINE_DEAL_TAX_AMT)                              FRT_TAX
       ,SUM(IL.INV_LINE_DEAL_NET_AMT + IL.INV_LINE_DEAL_TAX_AMT)   FRT_CHRG_AMT
       <!-- 2018/05/25 QC#21841 Mod End -->
       <isEqual property="taxDtlFlg" compareValue="N">
       ,NULL                                                    FRT_STATE_TAX
       ,NULL                                                    FRT_COUNTY_TAX
       ,NULL                                                    FRT_CITY_TAX
       </isEqual>
       <isNotEqual property="taxDtlFlg" compareValue="N"> 
       ,SUM(DILTDF1.DEAL_SLS_TAX_AMT)                           FRT_STATE_TAX
       ,SUM(DILTDF2.DEAL_SLS_TAX_AMT)                           FRT_COUNTY_TAX
       ,SUM(DILTDF3.DEAL_SLS_TAX_AMT)                           FRT_CITY_TAX
       </isNotEqual>
    FROM
         INV                    I 
        ,CCY
        ,DS_INV_LINE_TAX_DTL    DILTDF1
        ,DS_INV_LINE_TAX_DTL    DILTDF2
        ,DS_INV_LINE_TAX_DTL    DILTDF3
        <!-- 2018/05/25 QC#21841 Mod Start -->
        <!-- ,INV_BOL                IB-->
        ,INV_LINE               IL
        <!-- 2018/05/25 QC#21841 Mod End -->
    WHERE
            I.GLBL_CMPY_CD              = #glblCmpyCd#
        AND I.INV_NUM                   = #invNum#
        AND I.EZCANCELFLAG              =  '0'
        AND I.GLBL_CMPY_CD = CCY.GLBL_CMPY_CD (+)  
        AND I.DEAL_CCY_CD = CCY.CCY_CD (+)  
        AND CCY.EZCANCELFLAG(+)      =  '0'
        <!-- 2018/05/25 QC#21841 Mod Start -->
        <!--
        AND I.GLBL_CMPY_CD = IB.GLBL_CMPY_CD
        AND I.INV_NUM = IB.INV_NUM
        AND IB.EZCANCELFLAG = '0'

        AND I.GLBL_CMPY_CD                = DILTDF1.GLBL_CMPY_CD(+)
        AND I.INV_NUM                     = DILTDF1.INV_NUM(+)
        AND DILTDF1.INV_LINE_NUM(+)        = '*'  
        AND DILTDF1.INV_LINE_SUB_NUM(+)    = '*'  
        AND DILTDF1.INV_TRX_LINE_SUB_NUM(+)= '*'  
        AND DILTDF1.DS_SLS_TAX_TP_CD(+)    = #dsSlsTaxTpCd11#
        AND DILTDF1.EZCANCELFLAG(+)        =  '0'  

        AND I.GLBL_CMPY_CD                = DILTDF2.GLBL_CMPY_CD(+)
        AND I.INV_NUM                     = DILTDF2.INV_NUM(+)
        AND DILTDF2.INV_LINE_NUM(+)        = '*'  
        AND DILTDF2.INV_LINE_SUB_NUM(+)    = '*'  
        AND DILTDF2.INV_TRX_LINE_SUB_NUM(+)= '*'  
        AND DILTDF2.DS_SLS_TAX_TP_CD(+)    = #dsSlsTaxTpCd12#
        AND DILTDF2.EZCANCELFLAG(+)        =  '0'  

        AND I.GLBL_CMPY_CD                = DILTDF3.GLBL_CMPY_CD(+)  
        AND I.INV_NUM                     = DILTDF3.INV_NUM(+)  
        AND DILTDF3.INV_LINE_NUM(+)        = '*'  
        AND DILTDF3.INV_LINE_SUB_NUM(+)    = '*'  
        AND DILTDF3.INV_TRX_LINE_SUB_NUM(+)= '*'  
        AND DILTDF3.DS_SLS_TAX_TP_CD(+)    = #dsSlsTaxTpCd13#
        AND DILTDF3.EZCANCELFLAG(+)        =  '0'
        -->
        AND I.GLBL_CMPY_CD               = IL.GLBL_CMPY_CD
        AND I.INV_NUM                    = IL.INV_NUM
        AND IL.INV_LINE_CATG_CD          = #invLineCatgFrt#
        AND IL.EZCANCELFLAG              = '0'

        AND IL.GLBL_CMPY_CD              = DILTDF1.GLBL_CMPY_CD(+)
        AND IL.INV_NUM                   = DILTDF1.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM          = DILTDF1.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM              = DILTDF1.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM          = DILTDF1.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM      = DILTDF1.INV_TRX_LINE_SUB_NUM(+)
        AND DILTDF1.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd11#
        AND DILTDF1.EZCANCELFLAG(+)      =  '0'

        AND IL.GLBL_CMPY_CD              = DILTDF2.GLBL_CMPY_CD(+)
        AND IL.INV_NUM                   = DILTDF2.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM          = DILTDF2.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM              = DILTDF2.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM          = DILTDF2.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM      = DILTDF2.INV_TRX_LINE_SUB_NUM(+)
        AND DILTDF2.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd12#
        AND DILTDF2.EZCANCELFLAG(+)      =  '0'

        AND IL.GLBL_CMPY_CD              = DILTDF3.GLBL_CMPY_CD(+)
        AND IL.INV_NUM                   = DILTDF3.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM          = DILTDF3.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM              = DILTDF3.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM          = DILTDF3.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM      = DILTDF3.INV_TRX_LINE_SUB_NUM(+)
        AND DILTDF3.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd13#
        AND DILTDF3.EZCANCELFLAG(+)      =  '0'
        <!-- 2018/05/25 QC#21841 Mod End -->
    </statement>
    
    <statement id="getFleetSubTotal" parameterClass="Map" resultClass="Map">
    SELECT
         FLT_SMRY.CCY_SGN_TXT
        ,FLT_SMRY.CONTR_PK                                                     CONTR_PK
        ,MAX(FLT_SMRY.CONTR_NO)                                                CONTR_NO
        ,FLT_SMRY.SVC_PGM_CD                                                   SVC_PGM_CD
        ,MAX(INITCAP(FLT_SMRY.MDSE_DESC_SHORT_TXT))                            SVC_PGM_NM
        ,TRIM (TO_CHAR (MAX(FLT_SMRY.BASE_COPY_QTY), 'FM999G999G999G999G999')) BASE_COPY_QTY
        ,FLT_SMRY.PO_NO                                                        PO_NO
        <isEqual property="taxDtlFlg" compareValue="Y">
        ,NVL(SUM(FLT_SMRY.STATE_TAX),0)                               STATE_TAX
        ,CASE WHEN NVL(SUM(FLT_SMRY.STATE_TAX),0) &lt; 0 THEN
            '-' || FLT_SMRY.CCY_SGN_TXT || TO_CHAR(ABS(NVL(SUM(FLT_SMRY.STATE_TAX),0)), #amtFormat#)
         ELSE
            FLT_SMRY.CCY_SGN_TXT || TO_CHAR(NVL(SUM(FLT_SMRY.STATE_TAX),0), #amtFormat#)
         END     STATE_TAX_TXT
        ,NVL(SUM(FLT_SMRY.COUNTY_TAX),0)                               COUNTY_TAX
        ,CASE WHEN NVL(SUM(FLT_SMRY.COUNTY_TAX),0) &lt; 0 THEN
            '-' || FLT_SMRY.CCY_SGN_TXT || TO_CHAR(ABS(NVL(SUM(FLT_SMRY.COUNTY_TAX),0)), #amtFormat#)
         ELSE
            FLT_SMRY.CCY_SGN_TXT || TO_CHAR(NVL(SUM(FLT_SMRY.COUNTY_TAX),0), #amtFormat#)
         END    COUNTY_TAX_TXT
        ,NVL(SUM(FLT_SMRY.CITY_TAX),0)                               CITY_TAX
        ,CASE WHEN NVL(SUM(FLT_SMRY.CITY_TAX),0) &lt; 0 THEN
            '-' || FLT_SMRY.CCY_SGN_TXT || TO_CHAR(ABS(NVL(SUM(FLT_SMRY.CITY_TAX),0)), #amtFormat#)
         ELSE
            FLT_SMRY.CCY_SGN_TXT || TO_CHAR(NVL(SUM(FLT_SMRY.CITY_TAX),0), #amtFormat#)
         END    CITY_TAX_TXT
        </isEqual>
        <isNotEqual property="taxDtlFlg" compareValue="Y">
        ,NULL           STATE_TAX
        ,NULL           STATE_TAX_TXT
        ,NULL           COUNTY_TAX
        ,NULL           COUNTY_TAX_TXT
        ,NULL           CITY_TAX
        ,NULL           CITY_TAX_TXT
        </isNotEqual>
        
        ,SUM(FLT_SMRY.TOTAL_TAX)                                              TOTAL_TAX
        ,CASE WHEN SUM(FLT_SMRY.TOTAL_TAX) IS NOT NULL THEN
            CASE WHEN SUM(FLT_SMRY.TOTAL_TAX) &lt; 0 THEN
                '-' || FLT_SMRY.CCY_SGN_TXT || TO_CHAR(ABS(SUM(FLT_SMRY.TOTAL_TAX)), #amtFormat#)
            ELSE
                FLT_SMRY.CCY_SGN_TXT || TO_CHAR(SUM(FLT_SMRY.TOTAL_TAX), #amtFormat#)
            END
         ELSE
             ''
         END    TOTAL_TAX_TXT
        ,SUM(FLT_SMRY.TOTAL_AMT)  TOTAL_AMT
        ,CASE WHEN SUM(FLT_SMRY.TOTAL_AMT) IS NOT NULL THEN
            CASE WHEN SUM(FLT_SMRY.TOTAL_AMT) &lt; 0 THEN
                '-' || FLT_SMRY.CCY_SGN_TXT || TO_CHAR(ABS(SUM(FLT_SMRY.TOTAL_AMT)), #amtFormat#)
            ELSE
                FLT_SMRY.CCY_SGN_TXT || TO_CHAR(SUM(FLT_SMRY.TOTAL_AMT), #amtFormat#)
            END
         ELSE
             ''
         END    TOTAL_AMT_TXT
        ,SUM(CASE WHEN FLT_SMRY.SVC_INV_CHRG_TP_CD = 'BC' THEN 1 ELSE 0 END)   BASE_CHARGE_COUNT
        ,FLT_SMRY.INV_PRINT_COV_TXT
        ,MIN(SVC_INV_LINE_NUM) SVC_INV_LINE_NUM

    FROM (
    SELECT
         SI.DS_CONTR_PK                                             CONTR_PK
        ,SI.DS_CONTR_NUM                                            CONTR_NO
        <!-- 02/06/2019 QC#29371 SRNO8 MOD Start-->
        <!-- ,SIL.SVC_PGM_MDSE_CD                                        SVC_PGM_CD -->
        <!-- 05/29/2019 QC#50419 MOD Start-->
        ,CASE WHEN (DCD.SVC_INV_MERGE_TP_CD = #svcInvMergeTpIntoBaseCharge#) AND (IPFL.PRNT_SVC_INV_LINE_PK IS NOT NULL) THEN IPFL_P.SVC_PGM_MDSE_CD
        <!-- ,CASE WHEN DCD.SVC_INV_MERGE_TP_CD = #svcInvMergeTpIntoBaseCharge# THEN IPFL_P.SVC_PGM_MDSE_CD -->
        <!-- 05/29/2019 QC#50419 MOD End-->
          ELSE IPFL.SVC_PGM_MDSE_CD 
          END AS                                                    SVC_PGM_CD
        <!-- 02/06/2019 QC#29371 SRNO8 MOD End-->
        ,INITCAP(DMI.MDSE_DESC_SHORT_TXT)                           SVC_PGM_NM
        ,IPFL.COPY_INCL_QTY                      BASE_COPY_QTY
        <!-- QC#50104 Mod -->
        <!-- ,NVL(I.LEASE_CMPY_PO_NUM, NVL(IPFL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))               PO_NO  -->
        <!-- START 2022/02/21 [QC#59724, MOD] -->
        <!-- ,UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(IPFL.PRNT_SVC_INV_LINE_PK, IPFL_P.CUST_ISS_PO_NUM, IPFL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))) PO_NO -->
        ,CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
         THEN I.CUST_ISS_PO_NUM
         ELSE UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(IPFL.PRNT_SVC_INV_LINE_PK, IPFL_P.CUST_ISS_PO_NUM, IPFL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)))
         END  AS PO_NO
        <!-- END   2022/02/21 [QC#59724, MOD] -->
        ,DILTD1.DEAL_SLS_TAX_AMT           STATE_TAX
        ,DILTD2.DEAL_SLS_TAX_AMT           COUNTY_TAX
        ,DILTD3.DEAL_SLS_TAX_AMT           CITY_TAX
        ,IPFL.INV_LINE_DEAL_TAX_AMT                                  TOTAL_TAX
        ,(NVL(IPFL.INV_LINE_DEAL_TAX_AMT, 0) + NVL(IPFL.INV_LINE_DEAL_NET_AMT, 0) )   TOTAL_AMT
        ,IPFL.SVC_INV_CHRG_TP_CD
        ,IPFL.INV_PRINT_COV_TXT
        ,CCY.CCY_SGN_TXT
        ,DMI.MDSE_DESC_SHORT_TXT
        ,IPFL.SVC_INV_LINE_NUM
    FROM 
        <!-- 2018/08/21 QC#27684 mod Start -->
        <!-- INV                    I -->
        (SELECT INV_NUM,
                CASE SYS_SRC_CD
                     WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                     ELSE INV_NUM
                     END AS SVC_INV_NUM,
                GLBL_CMPY_CD,
                EZCANCELFLAG,
                LEASE_CMPY_PO_NUM,
                DEAL_CCY_CD
                <!-- START 2022/02/21 [QC#59724, ADD] -->
                ,CUST_ISS_PO_NUM
                <!-- END   2022/02/21 [QC#59724, ADD] -->
         FROM   INV
         WHERE  INV_NUM                   = #invNum#
           AND  GLBL_CMPY_CD              = #glblCmpyCd#
           AND  EZCANCELFLAG              = '0') I
        <!-- 2018/08/21 QC#27684 mod End -->
        ,SVC_INV                SI
        ,INV_LINE               IL
        <!-- QC#52209 2019/07/31 Mod -->
        <!-- ,INV_PRT_FLEET_LINE     IPFL   -->
        <!-- ,INV_PRT_FLEET_LINE     IPFL_P -->
        ,INV_PRT_SVC_INV_LINE_WRK IPFL
        ,INV_PRT_SVC_INV_LINE_WRK IPFL_P
        ,SVC_INV_LINE_TP        SILT
        ,DS_INV_LINE_TAX_DTL    DILTD1
        ,DS_INV_LINE_TAX_DTL    DILTD2
        ,DS_INV_LINE_TAX_DTL    DILTD3
        ,CCY                    CCY
        ,MDSE                   DMI
        <!-- 02/06/2019 QC#29371 SRNO8 ADD Start-->
        ,DS_CONTR_DTL DCD
        <!-- 02/06/2019 QC#29371 SRNO8 ADD END-->
    WHERE
        <!-- 2018/08/21 QC#27684 del Start -->
        <!--
            I.GLBL_CMPY_CD              = #glblCmpyCd#
        AND I.INV_NUM                   = #invNum#
        AND I.EZCANCELFLAG              = '0' 
        AND I.GLBL_CMPY_CD              = SI.GLBL_CMPY_CD
        AND ((      I.SYS_SRC_CD        &lt;&gt; #sysSrcCdNFC#    
                AND I.INV_NUM           = SI.SVC_INV_NUM )
            OR  (   I.SYS_SRC_CD        = #sysSrcCdNFC# 
                AND I.ORIG_INV_NUM      = SI.SVC_INV_NUM )
            )
        -->
        <!-- 2018/08/21 QC#27684 del End -->
        <!-- 2018/08/21 QC#27684 add Start -->
            I.GLBL_CMPY_CD              = SI.GLBL_CMPY_CD
        AND I.SVC_INV_NUM               = SI.SVC_INV_NUM
        <!-- 2018/08/21 QC#27684 add End -->
        AND SI.EZCANCELFLAG             = '0' 
        AND I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD
        AND I.INV_NUM                   = IL.INV_NUM
        AND I.EZCANCELFLAG              = '0' 

        AND IL.GLBL_CMPY_CD             = IPFL.GLBL_CMPY_CD (+)
        AND IL.INV_NUM                  = IPFL.SVC_INV_NUM (+)
        AND IL.SVC_INV_LINE_PK          = IPFL.SVC_INV_LINE_PK (+)
        AND IPFL.EZCANCELFLAG (+)       = '0'
        AND IPFL.SVC_INV_LINE_TP_CD (+) != #svcInvLineTpAddl#

        AND IPFL.GLBL_CMPY_CD           = SILT.GLBL_CMPY_CD
        AND IPFL.SVC_INV_LINE_TP_CD     = SILT.SVC_INV_LINE_TP_CD
        AND SILT.FLEET_LINE_FLG         = #fleetFlg#
        AND SILT.EZCANCELFLAG           = '0' 

        AND IL.GLBL_CMPY_CD             = DILTD1.GLBL_CMPY_CD(+)
        AND IL.INV_NUM                  = DILTD1.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM         = DILTD1.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM             = DILTD1.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM         = DILTD1.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM     = DILTD1.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD1.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd01#
        AND DILTD1.EZCANCELFLAG(+)      = '0' 
        AND IL.GLBL_CMPY_CD             = DILTD2.GLBL_CMPY_CD(+)
        AND IL.INV_NUM                  = DILTD2.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM         = DILTD2.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM             = DILTD2.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM         = DILTD2.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM     = DILTD2.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD2.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd02#
        AND DILTD2.EZCANCELFLAG(+)      = '0' 
        AND IL.GLBL_CMPY_CD             = DILTD3.GLBL_CMPY_CD(+)
        AND IL.INV_NUM                  = DILTD3.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM         = DILTD3.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM             = DILTD3.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM         = DILTD3.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM     = DILTD3.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD3.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd03#
        AND DILTD3.EZCANCELFLAG(+)      = '0' 
        AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
        AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
        AND CCY.EZCANCELFLAG(+)         = '0'
        AND IPFL.GLBL_CMPY_CD           = DMI.GLBL_CMPY_CD(+)
        AND IPFL.SVC_PGM_MDSE_CD        = DMI.MDSE_CD(+)
        AND DMI.EZCANCELFLAG(+)         = '0'
        <!-- 02/06/2019 QC#29371 SRNO8 ADD Start-->
        AND IPFL.GLBL_CMPY_CD           = DCD.GLBL_CMPY_CD
        AND IPFL.DS_CONTR_DTL_PK        = DCD.DS_CONTR_DTL_PK
        AND DCD.EZCANCELFLAG(+)         = '0'
        AND IPFL.GLBL_CMPY_CD           = IPFL_P.GLBL_CMPY_CD(+)
        AND IPFL.SVC_INV_NUM            = IPFL_P.SVC_INV_NUM(+)  <!-- 06/04/2019 QC#50687 ADD -->
        AND IPFL.PRNT_SVC_INV_LINE_PK   = IPFL_P.SVC_INV_LINE_PK(+)
        AND IPFL_P.EZCANCELFLAG(+)      = '0'
        <!-- 02/06/2019 QC#29371 SRNO8 ADD End-->
    UNION ALL
     SELECT
         SI.DS_CONTR_PK                                             CONTR_PK
        ,SI.DS_CONTR_NUM                                            CONTR_NO
        <!-- START 06/20/2022 [QC#60205, ADD] -->
        <!--,IPFL_B.SVC_PGM_MDSE_CD                                     SVC_PGM_CD -->
        ,CASE WHEN (DCD.SVC_INV_MERGE_TP_CD = #svcInvMergeTpIntoBaseCharge#) AND (IPFL_B.PRNT_SVC_INV_LINE_PK IS NOT NULL) THEN IPFL_C.SVC_PGM_MDSE_CD
         ELSE IPFL_B.SVC_PGM_MDSE_CD
         END AS                                                     SVC_PGM_CD
        <!-- END   06/20/2022 [QC#60205, ADD] -->
        ,INITCAP(DMI.MDSE_DESC_SHORT_TXT)                           SVC_PGM_NM
        ,IPFL_B.COPY_INCL_QTY  BASE_COPY_QTY
        <!-- QC#50104 Mod -->
        <!-- ,NVL(I.LEASE_CMPY_PO_NUM, NVL(IPFL_B.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))               PO_NO -->
        <!-- START 2022/02/21 [QC#59724, MOD] -->
        <!-- ,UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(IPFL.PRNT_SVC_INV_LINE_PK, IPFL_B.CUST_ISS_PO_NUM, IPFL.CUST_ISS_PO_NUM),SI.CUST_ISS_PO_NUM))) PO_NO -->
        ,CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
         THEN I.CUST_ISS_PO_NUM
         ELSE UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(IPFL.PRNT_SVC_INV_LINE_PK, IPFL_B.CUST_ISS_PO_NUM, IPFL.CUST_ISS_PO_NUM),SI.CUST_ISS_PO_NUM)))
         END  AS PO_NO
        <!-- END   2022/02/21 [QC#59724, MOD] -->
        ,DILTD1.DEAL_SLS_TAX_AMT           STATE_TAX
        ,DILTD2.DEAL_SLS_TAX_AMT           COUNTY_TAX
        ,DILTD3.DEAL_SLS_TAX_AMT           CITY_TAX
        ,IPFL.INV_LINE_DEAL_TAX_AMT   TOTAL_TAX
        <!--  ,(SIL_B.INV_LINE_DEAL_TAX_AMT + SILAC.ADDL_CHRG_FLAT_DEAL_PRC_AMT)  TOTAL_AMT-->
        ,(IPFL.INV_LINE_DEAL_TAX_AMT + IPFL.INV_LINE_DEAL_NET_AMT)  TOTAL_AMT
        ,IPFL_B.SVC_INV_CHRG_TP_CD
        ,IPFL_B.INV_PRINT_COV_TXT
        ,CCY.CCY_SGN_TXT
        ,DMI.MDSE_DESC_SHORT_TXT
        ,IPFL.SVC_INV_LINE_NUM
        FROM
        <!-- 2018/08/21 QC#27684 mod Start -->
        <!-- INV                            I -->
            (SELECT INV_NUM,
                    CASE SYS_SRC_CD
                        WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                        ELSE INV_NUM
                    END AS SVC_INV_NUM,
                    GLBL_CMPY_CD,
                    EZCANCELFLAG,
                    LEASE_CMPY_PO_NUM,
                    DEAL_CCY_CD
                    <!-- START 2022/02/21 [QC#59724, ADD] -->
                    ,CUST_ISS_PO_NUM
                    <!-- END   2022/02/21 [QC#59724, ADD] -->
               FROM INV
              WHERE INV_NUM                   = #invNum#
                AND GLBL_CMPY_CD              = #glblCmpyCd#
                AND EZCANCELFLAG              = '0') I
        <!-- 2018/08/21 QC#27684 mod End -->
            ,SVC_INV                        SI
            ,INV_LINE                       IL
            <!-- QC#52209 2019/07/31 Mod -->
            <!-- ,INV_PRT_FLEET_LINE             IPFL   -->
            <!-- ,INV_PRT_FLEET_LINE             IPFL_B -->
            ,INV_PRT_SVC_INV_LINE_WRK         IPFL
            ,INV_PRT_SVC_INV_LINE_WRK         IPFL_B
            ,DS_INV_LINE_TAX_DTL            DILTD1
            ,DS_INV_LINE_TAX_DTL            DILTD2
            ,DS_INV_LINE_TAX_DTL            DILTD3
            ,INV_PRINT_SVC_PGM              IPSP
            ,SVC_INV_LINE_TP                SILT
            ,CCY                            CCY
            ,SVC_INV_LINE_ADDL_CHRG         SILAC
        ,MDSE                   DMI
            <!-- START 06/20/2022 [QC#60205, ADD] -->
            ,DS_CONTR_DTL                   DCD
            ,INV_PRT_SVC_INV_LINE_WRK       IPFL_C
            <!-- END   06/20/2022 [QC#60205, ADD] -->
        WHERE
        <!-- 2018/08/21 QC#27684 del Start -->
        <!--
                I.INV_NUM                   = #invNum#
            AND I.GLBL_CMPY_CD              = #glblCmpyCd#
            AND I.EZCANCELFLAG              = '0'
            AND ((      I.SYS_SRC_CD    &lt;&gt; 'NFC'    
                    AND I.INV_NUM       = SI.SVC_INV_NUM )
                OR  (I.SYS_SRC_CD       = #sysSrcCdNFC# 
                    AND I.ORIG_INV_NUM    = SI.SVC_INV_NUM )
                )
        -->
        <!-- 2018/08/21 QC#27684 del End -->
        <!-- 2018/08/21 QC#27684 add Start -->
                I.SVC_INV_NUM               = SI.SVC_INV_NUM
        <!-- 2018/08/21 QC#27684 add End -->
            AND I.GLBL_CMPY_CD              = SI.GLBL_CMPY_CD 
            AND SI.EZCANCELFLAG             = '0'

            AND I.INV_NUM                   = IL.INV_NUM 
            AND I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD 
            AND IL.EZCANCELFLAG             = '0'
            AND IL.INV_NUM                  = IPFL.SVC_INV_NUM 
            AND IL.SVC_INV_LINE_PK          = IPFL.SVC_INV_LINE_PK 
            AND IL.GLBL_CMPY_CD             = IPFL.GLBL_CMPY_CD 
            AND IPFL.EZCANCELFLAG           = '0'
            AND IPFL.SVC_INV_LINE_TP_CD     = SILT.SVC_INV_LINE_TP_CD 
            AND IPFL.GLBL_CMPY_CD           = SILT.GLBL_CMPY_CD
            AND SILT.FLEET_LINE_FLG         = #fleetFlg# <!-- QC#29371 -->
            AND SILT.EZCANCELFLAG           = '0'
            AND IL.INV_NUM                  = DILTD1.INV_NUM(+) 
            AND IL.INV_BOL_LINE_NUM         = DILTD1.INV_BOL_LINE_NUM(+)
            AND IL.INV_LINE_NUM             = DILTD1.INV_LINE_NUM(+)
            AND IL.INV_LINE_SUB_NUM         = DILTD1.INV_LINE_SUB_NUM(+)
            AND IL.INV_LINE_SUB_TRX_NUM     = DILTD1.INV_TRX_LINE_SUB_NUM(+)
            AND DILTD1.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd01#
            AND IPFL.GLBL_CMPY_CD           = DILTD1.GLBL_CMPY_CD(+)
            AND DILTD1.EZCANCELFLAG(+)      = '0'
            AND IL.INV_NUM                  = DILTD2.INV_NUM(+)
            AND IL.INV_BOL_LINE_NUM         = DILTD2.INV_BOL_LINE_NUM(+)
            AND IL.INV_LINE_NUM             = DILTD2.INV_LINE_NUM(+)
            AND IL.INV_LINE_SUB_NUM         = DILTD2.INV_LINE_SUB_NUM(+)
            AND IL.INV_LINE_SUB_TRX_NUM     = DILTD2.INV_TRX_LINE_SUB_NUM(+)
            AND DILTD2.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd02#
            AND IL.GLBL_CMPY_CD             = DILTD2.GLBL_CMPY_CD(+)
            AND DILTD2.EZCANCELFLAG(+)      = '0'
            AND IL.INV_NUM                  = DILTD3.INV_NUM(+) 
            AND IL.INV_BOL_LINE_NUM         = DILTD3.INV_BOL_LINE_NUM(+) 
            AND IL.INV_LINE_NUM             = DILTD3.INV_LINE_NUM(+) 
            AND IL.INV_LINE_SUB_NUM         = DILTD3.INV_LINE_SUB_NUM(+) 
            AND IL.INV_LINE_SUB_TRX_NUM     = DILTD3.INV_TRX_LINE_SUB_NUM(+) 
            AND DILTD3.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd03#
            AND IL.GLBL_CMPY_CD             = DILTD3.GLBL_CMPY_CD(+)
            AND DILTD3.EZCANCELFLAG(+)      = '0'
            AND IPFL.SVC_PGM_MDSE_CD        = IPSP.INV_PRINT_SVC_PGM_CD (+) 
            AND IPFL.GLBL_CMPY_CD           = IPSP.GLBL_CMPY_CD (+) 
            AND IPSP.EZCANCELFLAG(+)        = '0'
            AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
            AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
            AND CCY.EZCANCELFLAG(+)         = '0'
            <!-- 2019/02/06 S21_NA#29371 Mod Start -->
            <!-- AND SIL.SVC_INV_LINE_PK         = SIL_B.PRNT_SVC_INV_LINE_PK
            AND SIL.GLBL_CMPY_CD             = SIL_B.GLBL_CMPY_CD
            AND SIL_B.EZCANCELFLAG           = '0'
            AND SIL_B.SVC_INV_LINE_PK        = SILAC.SVC_INV_LINE_PK
            AND SIL_B.GLBL_CMPY_CD           = SILAC.GLBL_CMPY_CD
            AND SIL_B.EZCANCELFLAG           = '0'
            AND SIL.GLBL_CMPY_CD             = DMI.GLBL_CMPY_CD(+)
            AND SIL.SVC_PGM_MDSE_CD          = DMI.MDSE_CD(+) -->
            AND IPFL.SVC_INV_LINE_PK         = SILAC.SVC_INV_LINE_PK
            AND IPFL.GLBL_CMPY_CD            = SILAC.GLBL_CMPY_CD
            AND SILAC.EZCANCELFLAG           = '0'
            AND IPFL.PRNT_SVC_INV_LINE_PK    = IPFL_B.SVC_INV_LINE_PK
            AND IPFL.SVC_INV_NUM             = IPFL_B.SVC_INV_NUM    <!-- 06/04/2019 QC#50687 ADD -->
            AND IPFL.GLBL_CMPY_CD            = IPFL_B.GLBL_CMPY_CD
            AND IPFL_B.EZCANCELFLAG          = '0'
            AND IPFL_B.GLBL_CMPY_CD          = DMI.GLBL_CMPY_CD(+)
            AND IPFL_B.SVC_PGM_MDSE_CD       = DMI.MDSE_CD(+)
            AND DMI.EZCANCELFLAG(+)           = '0'
            <!-- 2019/02/06 S21_NA#29371 Mod End -->
            <!-- START 06/20/2022 [QC#60205, ADD] -->
            AND IPFL_B.GLBL_CMPY_CD          = DCD.GLBL_CMPY_CD(+)
            AND IPFL_B.DS_CONTR_DTL_PK       = DCD.DS_CONTR_DTL_PK(+)
            AND DCD.EZCANCELFLAG(+)          = '0'
            AND IPFL_B.PRNT_SVC_INV_LINE_PK  = IPFL_C.SVC_INV_LINE_PK(+)
            AND IPFL_B.SVC_INV_NUM           = IPFL_C.SVC_INV_NUM(+)
            AND IPFL_B.GLBL_CMPY_CD          = IPFL_C.GLBL_CMPY_CD(+)
            AND IPFL_C.EZCANCELFLAG (+)      = '0'
            <!-- END   06/20/2022 [QC#60205, ADD] -->
    ) FLT_SMRY
    GROUP BY
         FLT_SMRY.CCY_SGN_TXT
        ,FLT_SMRY.CONTR_PK
        ,FLT_SMRY.SVC_PGM_CD
        ,FLT_SMRY.PO_NO
        ,FLT_SMRY.INV_PRINT_COV_TXT
    ORDER BY
        FLT_SMRY.CCY_SGN_TXT
       ,FLT_SMRY.CONTR_PK
       ,SVC_INV_LINE_NUM
    </statement>

    <statement id="getFleetChrgDtl" parameterClass="Map" resultClass="Map">
    SELECT 
        FCD.INV_NUM
       ,FCD.CHARGE_TYPE
       ,FCD.PERIOD_FROM
       ,FCD.PERIOD_THRU
       <!-- QC#26826 -->
       ,CASE WHEN FCD.SVC_INV_CHRG_TP_CD = #siChrgTpCdMC# THEN NULL ELSE
            CASE WHEN SUM(FCD.AMOUNT) IS NOT NULL THEN
                CASE WHEN SUM(FCD.AMOUNT) &lt; 0 THEN
                    '-' || FCD.CCY_SGN_TXT || TO_CHAR(ABS(SUM(FCD.AMOUNT)), #amtFormat#) 
                ELSE
                    FCD.CCY_SGN_TXT || TO_CHAR(SUM(FCD.AMOUNT), #amtFormat#) 
                END
            ELSE
                ''
            END
         END TOTAL_AMT_TXT
       ,FCD.SPECIAL_CHARGE_FLG
       ,FCD.SVC_INV_CHRG_TP_CD
       ,SUM(FCD.AMOUNT) AMOUNT  <!-- QC#26826 -->
       ,FCD.CCY_SGN_TXT
    FROM (
        SELECT
         CASE WHEN IPFL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# THEN '1' ELSE '4' END TYPE,
        <!-- 2019/06/14 QC#50791 Mod Start -->
         I.INV_NUM                                   INV_NUM
    <!-- SI.SVC_INV_NUM                              INV_NUM-->
        <!-- 2019/06/14 QC#50791 Mod End -->
        ,INITCAP(IPSP.INV_PRINT_SVC_PGM_SRC_NM)  || ' - ' ||  INITCAP(IPSP.INV_PRINT_SVC_PGM_PROD_NM)  || ' ' ||  
                CASE WHEN IPFL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# 
                THEN 'Base' 
                ELSE 'Usage' END                    CHARGE_TYPE
        ,IPFL.BLLG_PER_FROM_DT                       PERIOD_FROM
        ,IPFL.BLLG_PER_THRU_DT                       PERIOD_THRU
        <!-- QC#26826 -->
        <!--,CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdMC# THEN NULL ELSE
            CASE WHEN IL.INV_LINE_DEAL_NET_AMT IS NOT NULL THEN
                CASE WHEN IL.INV_LINE_DEAL_NET_AMT &lt; 0 THEN
                    '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(IL.INV_LINE_DEAL_NET_AMT), #amtFormat#) 
                ELSE
                    CCY.CCY_SGN_TXT || TO_CHAR(IL.INV_LINE_DEAL_NET_AMT, #amtFormat#) 
                END
            ELSE
                ''
            END
         END    TOTAL_AMT_TXT-->
        ,'N'                                       SPECIAL_CHARGE_FLG
        ,IPFL.SVC_INV_CHRG_TP_CD
        ,IPFL.INV_LINE_DEAL_NET_AMT                  AMOUNT
        ,CCY.CCY_SGN_TXT
    FROM
        <!-- 2018/08/21 QC#27684 mod Start -->
        <!-- INV                        I -->
        (SELECT INV_NUM,
                CASE SYS_SRC_CD
                     WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                     ELSE INV_NUM
                     END AS SVC_INV_NUM,
                GLBL_CMPY_CD,
                EZCANCELFLAG,
                LEASE_CMPY_PO_NUM,
                DEAL_CCY_CD
                <!-- START 2022/02/21 [QC#59724, ADD] -->
                ,CUST_ISS_PO_NUM
                <!-- END   2022/02/21 [QC#59724, ADD] -->
           FROM INV
          WHERE INV_NUM                     = #invNum#
            AND GLBL_CMPY_CD                = #glblCmpyCd#
            AND EZCANCELFLAG                = '0')  I
        <!-- 2018/08/21 QC#27684 mod End -->
        ,SVC_INV                    SI
        <!-- QC#52209 2019/07/31 Mod -->
        <!-- ,INV_PRT_FLEET_LINE         IPFL   -->
        <!-- QC#50104 Add -->
        <!-- ,INV_PRT_FLEET_LINE         IPFL_B -->
        ,INV_PRT_SVC_INV_LINE_WRK     IPFL
        ,INV_PRT_SVC_INV_LINE_WRK     IPFL_B
        ,SVC_INV_LINE_TP            SILT
        ,INV_PRINT_SVC_PGM          IPSP
        ,CCY                        CCY
    WHERE
        <!-- 2018/08/21 QC#27684 del Start -->
        <!--
            I.INV_NUM                       = #invNum#
        AND I.GLBL_CMPY_CD                  = #glblCmpyCd#
        AND I.EZCANCELFLAG                  = '0'
        AND I.GLBL_CMPY_CD                  = IL.GLBL_CMPY_CD
        -->
        <!-- 2018/08/21 QC#27684 del End -->
            I.GLBL_CMPY_CD                  = IPFL.GLBL_CMPY_CD
        AND I.INV_NUM                       = IPFL.SVC_INV_NUM
        AND IPFL.EZCANCELFLAG               = '0'
         <!-- QC#50104 Add Start -->
        AND IPFL.PRNT_SVC_INV_LINE_PK       = IPFL_B.SVC_INV_LINE_PK(+) 
        AND IPFL.SVC_INV_NUM                = IPFL_B.SVC_INV_NUM(+)  <!-- QC#50791 Add -->
        AND IPFL.GLBL_CMPY_CD               = IPFL_B.GLBL_CMPY_CD(+)
        AND IPFL_B.EZCANCELFLAG(+)          = '0'
        <!-- QC#50104 Add End -->
        AND I.GLBL_CMPY_CD                  = SI.GLBL_CMPY_CD
        <!-- 2018/08/21 QC#27684 add Start -->
        AND I.SVC_INV_NUM                   = SI.SVC_INV_NUM
        <!-- 2018/08/21 QC#27684 add End -->
        <!-- 2018/08/21 QC#27684 del Start -->
        <!--
        AND ((      I.SYS_SRC_CD        &lt;&gt; #sysSrcCdNFC#    
                AND I.INV_NUM           = SI.SVC_INV_NUM )
            OR  (   I.SYS_SRC_CD        = #sysSrcCdNFC# 
                AND I.ORIG_INV_NUM      = SI.SVC_INV_NUM )
            )
        -->
        <!-- 2018/08/21 QC#27684 del End -->
        AND SI.DS_CONTR_PK                  = #contrPk#
        AND SI.EZCANCELFLAG                 = '0'
        AND IPFL.GLBL_CMPY_CD               = SILT.GLBL_CMPY_CD
        AND IPFL.SVC_INV_LINE_TP_CD         = SILT.SVC_INV_LINE_TP_CD
        AND SILT.FLEET_LINE_FLG             = #fleetFlg#
        AND SILT.EZCANCELFLAG               = '0'
        <isNotNull property="svcPgm">
        AND IPFL.SVC_PGM_MDSE_CD             = #svcPgm#
        </isNotNull>
        <isNull property="svcPgm">
        AND IPFL.SVC_PGM_MDSE_CD              IS NULL
        </isNull>
        <isNotNull property="poNo">
        <!-- 2019/04/04 QC#30756 Mod Start -->
        <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(IPFL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)) = #poNo# -->
        <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(IPFL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))) = UPPER(#poNo#)  -->
        <!-- QC#50104 Mod -->
        <!-- START 2022/02/21 [QC#59724, MOD] -->
        <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(IPFL.PRNT_SVC_INV_LINE_PK, IPFL_B.CUST_ISS_PO_NUM, IPFL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))) = UPPER(#poNo#) -->
        AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
        THEN UPPER(I.CUST_ISS_PO_NUM)
        ELSE UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(IPFL.PRNT_SVC_INV_LINE_PK, IPFL_B.CUST_ISS_PO_NUM, IPFL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)))
        END = UPPER(#poNo#)
        <!-- END   2022/02/21 [QC#59724, MOD] -->
        <!-- 2019/04/04 QC#30756 Mod End -->
        </isNotNull>
        <isNull property="poNo">
        <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(IPFL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)) IS NULL   -->
        <!-- START 2022/02/21 [QC#59724, MOD] -->
        <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(IPFL.PRNT_SVC_INV_LINE_PK, IPFL_B.CUST_ISS_PO_NUM, IPFL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)) IS NULL -->
        AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
        THEN I.CUST_ISS_PO_NUM
        ELSE NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(IPFL.PRNT_SVC_INV_LINE_PK, IPFL_B.CUST_ISS_PO_NUM, IPFL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))
        END IS NULL
        <!-- END   2022/02/21 [QC#59724, MOD] -->
        </isNull>
        AND IPFL.GLBL_CMPY_CD               = IPSP.GLBL_CMPY_CD (+)
        AND IPFL.SVC_PGM_MDSE_CD            = IPSP.INV_PRINT_SVC_PGM_CD (+)
        AND IPSP.EZCANCELFLAG(+)            = '0'
        AND I.GLBL_CMPY_CD                  = CCY.GLBL_CMPY_CD(+)
        AND I.DEAL_CCY_CD                   = CCY.CCY_CD(+)
        AND CCY.EZCANCELFLAG(+)             = '0'
    UNION ALL
    SELECT
        CASE WHEN SILAC.ADDL_CHRG_INV_TP_CD = 'BASE' THEN '2' ELSE '3' END TYPE,
        <!-- 2019/06/14 QC#50791 Mod Start -->
         I.INV_NUM                                   INV_NUM
    <!-- SI.SVC_INV_NUM                              INV_NUM-->
        <!-- 2019/06/14 QC#50791 Mod End -->
        ,ACT.ADDL_CHRG_TP_NM                         CHARGE_TYPE
        ,IPFL.BLLG_PER_FROM_DT                       PERIOD_FROM
        ,IPFL.BLLG_PER_THRU_DT                       PERIOD_THRU
        <!--  ,CASE WHEN SILAC.ADDL_CHRG_FLAT_DEAL_PRC_AMT &lt; 0 THEN-->
        <!-- QC#26826 -->
        <!-- ,CASE WHEN SIL_B.INV_LINE_DEAL_NET_AMT &lt; 0 THEN-->
        <!--      '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(SILAC.ADDL_CHRG_FLAT_DEAL_PRC_AMT), #amtFormat#) -->
        <!--     '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(SIL_B.INV_LINE_DEAL_NET_AMT), #amtFormat#)  -->
        <!--  ELSE -->
        <!--      CCY.CCY_SGN_TXT || TO_CHAR(SILAC.ADDL_CHRG_FLAT_DEAL_PRC_AMT, #amtFormat#) -->
        <!--    CCY.CCY_SGN_TXT || TO_CHAR(SIL_B.INV_LINE_DEAL_NET_AMT, #amtFormat#)  -->
        <!-- END     TOTAL_AMT_TXT -->
        ,'Y'                                         SPECIAL_CHARGE_FLG
        ,#siChrgTpCdAC#                              SVC_INV_CHRG_TP_CD
        <!--  ,SILAC.ADDL_CHRG_FLAT_DEAL_PRC_AMT          AMOUNT-->
        ,IPFL_B.INV_LINE_DEAL_NET_AMT                AMOUNT
        ,CCY.CCY_SGN_TXT
    FROM
        <!-- 2018/08/21 QC#27684 mod Start -->
        <!-- INV                        I -->
        (SELECT INV_NUM,
                CASE SYS_SRC_CD
                     WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                     ELSE INV_NUM
                END AS SVC_INV_NUM,
                GLBL_CMPY_CD,
                EZCANCELFLAG,
                LEASE_CMPY_PO_NUM,
                DEAL_CCY_CD
                <!-- START 2022/02/21 [QC#59724, ADD] -->
                ,CUST_ISS_PO_NUM
                <!-- END   2022/02/21 [QC#59724, ADD] -->
           FROM INV
          WHERE INV_NUM                     = #invNum#
            AND GLBL_CMPY_CD                = #glblCmpyCd#
            AND EZCANCELFLAG                = '0') I
        <!-- 2018/08/21 QC#27684 mod End -->
        ,SVC_INV                    SI
        <!-- QC#52209 2019/07/31 Mod -->
        <!-- ,INV_PRT_FLEET_LINE         IPFL-->
        <!-- ,INV_PRT_FLEET_LINE         IPFL_B-->  <!-- QC#50104 Add -->
        ,INV_PRT_SVC_INV_LINE_WRK     IPFL
        ,INV_PRT_SVC_INV_LINE_WRK     IPFL_B
        ,SVC_INV_LINE_TP            SILT
        ,SVC_INV_LINE_ADDL_CHRG     SILAC
        ,INV_PRINT_SVC_PGM          IPSP
        ,ADDL_CHRG_TP_V             ACT
        ,CCY                        CCY
    WHERE
        <!-- 2018/08/21 QC#27684 del Start -->
        <!--
            I.INV_NUM                       = #invNum#
        AND I.GLBL_CMPY_CD                  = #glblCmpyCd#
        AND I.EZCANCELFLAG                  = '0'
        AND I.GLBL_CMPY_CD                  = IL.GLBL_CMPY_CD
        -->
        <!-- 2018/08/21 QC#27684 del End -->
            I.GLBL_CMPY_CD                  = IPFL.GLBL_CMPY_CD
        AND I.INV_NUM                       = IPFL.SVC_INV_NUM
        AND IPFL.EZCANCELFLAG               = '0'
         <!-- QC#50104 Add Start -->
        AND IPFL.SVC_INV_NUM                = IPFL_B.SVC_INV_NUM(+) 
        AND IPFL.PRNT_SVC_INV_LINE_PK       = IPFL_B.SVC_INV_LINE_PK(+) 
        AND IPFL.GLBL_CMPY_CD               = IPFL_B.GLBL_CMPY_CD(+)
        AND IPFL_B.EZCANCELFLAG(+)          = '0'
        <!-- QC#50104 Add End -->
        AND I.GLBL_CMPY_CD                  = SI.GLBL_CMPY_CD
        <!-- 2018/08/21 QC#27684 del Start -->
        <!--
        AND ((      I.SYS_SRC_CD        &lt;&gt; #sysSrcCdNFC#    
                AND I.INV_NUM           = SI.SVC_INV_NUM )
            OR  (   I.SYS_SRC_CD        = #sysSrcCdNFC# 
                AND I.ORIG_INV_NUM      = SI.SVC_INV_NUM )
            )
        -->
        <!-- 2018/08/21 QC#27684 del End -->
        <!-- 2018/08/21 QC#27684 add Start -->
        AND I.SVC_INV_NUM                   = SI.SVC_INV_NUM
        <!-- 2018/08/21 QC#27684 add End -->
        AND SI.DS_CONTR_PK                  = #contrPk#
        AND SI.EZCANCELFLAG                 = '0'
        AND IPFL.GLBL_CMPY_CD               = SILT.GLBL_CMPY_CD
        AND IPFL.SVC_INV_LINE_TP_CD         = SILT.SVC_INV_LINE_TP_CD
        AND SILT.FLEET_LINE_FLG             = #fleetFlg#
        AND SILT.EZCANCELFLAG               = '0'
        <isNotNull property="svcPgm">
        AND IPFL.SVC_PGM_MDSE_CD            = #svcPgm#
        </isNotNull>
        <isNull property="svcPgm">
        AND IPFL.SVC_PGM_MDSE_CD            IS NULL
        </isNull>
        <isNotNull property="poNo">
        <!-- 2019/04/04 QC#30756 Mod Start -->
        <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(IPFL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)) = #poNo# -->
        <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(IPFL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))) = UPPER(#poNo#) -->
        <!-- QC#50104 Mod -->
        <!-- START 2022/02/21 [QC#59724, MOD] -->
        <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(IPFL.PRNT_SVC_INV_LINE_PK, IPFL_B.CUST_ISS_PO_NUM, IPFL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))) = UPPER(#poNo#) -->
        AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
        THEN UPPER(I.CUST_ISS_PO_NUM)
        ELSE UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(IPFL.PRNT_SVC_INV_LINE_PK, IPFL_B.CUST_ISS_PO_NUM, IPFL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)))
        END = UPPER(#poNo#)
        <!-- END   2022/02/21 [QC#59724, MOD] -->
        <!-- 2019/04/04 QC#30756 Mod End -->
        </isNotNull>
        <isNull property="poNo">
         <!-- QC#50104 Mod -->
        <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(IPFL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)) IS NULL -->
        <!-- START 2022/02/21 [QC#59724, MOD] -->
        <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(IPFL.PRNT_SVC_INV_LINE_PK, IPFL_B.CUST_ISS_PO_NUM, IPFL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)) IS NULL -->
        AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
        THEN I.CUST_ISS_PO_NUM
        ELSE NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(IPFL.PRNT_SVC_INV_LINE_PK, IPFL_B.CUST_ISS_PO_NUM, IPFL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))
        END IS NULL
        <!-- END   2022/02/21 [QC#59724, MOD] -->
        </isNull>
        AND IPFL.GLBL_CMPY_CD               = IPSP.GLBL_CMPY_CD (+)
        AND IPFL.SVC_PGM_MDSE_CD            = IPSP.INV_PRINT_SVC_PGM_CD (+)
        AND IPSP.EZCANCELFLAG(+)            = '0'
        AND I.GLBL_CMPY_CD                  = CCY.GLBL_CMPY_CD(+)
        AND I.DEAL_CCY_CD                   = CCY.CCY_CD(+)
        AND CCY.EZCANCELFLAG(+)             = '0'
        AND IPFL.SVC_INV_LINE_PK            = IPFL_B.PRNT_SVC_INV_LINE_PK
        AND IPFL.GLBL_CMPY_CD               = IPFL_B.GLBL_CMPY_CD
        AND IPFL_B.EZCANCELFLAG             = '0'
        AND IPFL_B.SVC_INV_LINE_PK          = SILAC.SVC_INV_LINE_PK
        AND IPFL_B.GLBL_CMPY_CD             = SILAC.GLBL_CMPY_CD
        AND SILAC.PRINT_DTL_FLG             = #printDtlFlg#
        AND SILAC.EZCANCELFLAG              = '0'
        AND SILAC.GLBL_CMPY_CD              = ACT.GLBL_CMPY_CD (+)
        AND SILAC.ADDL_CHRG_TP_CD           = ACT.ADDL_CHRG_TP_CD (+)
        AND ACT.EZCANCELFLAG(+)             = '0'
    ) FCD
    <!-- QC#26826 -->
    GROUP BY
        FCD.TYPE, FCD.INV_NUM, FCD.CHARGE_TYPE, FCD.PERIOD_FROM, FCD.PERIOD_THRU, FCD.SPECIAL_CHARGE_FLG, FCD.SVC_INV_CHRG_TP_CD, FCD.CCY_SGN_TXT
    ORDER BY
        FCD.TYPE, FCD.INV_NUM, FCD.CHARGE_TYPE, FCD.PERIOD_FROM, FCD.PERIOD_THRU
    </statement>

    <statement id="getFleetChrgDtlForAgg" parameterClass="Map" resultClass="Map"><!-- QC#29371 -->
    SELECT
         FCD.INV_NUM
        ,FCD.CHARGE_TYPE
        ,FCD.PERIOD_FROM
        ,FCD.PERIOD_THRU
        ,CASE 
            WHEN FCD.SVC_INV_CHRG_TP_CD = #siChrgTpCdMC# 
            THEN NULL 
            ELSE CASE 
                WHEN SUM(FCD.AMOUNT) IS NOT NULL 
                THEN CASE 
                    WHEN SUM(FCD.AMOUNT) &lt; 0 
                    THEN '-' || FCD.CCY_SGN_TXT || TO_CHAR(ABS(SUM(FCD.AMOUNT)), #amtFormat#) 
                    ELSE FCD.CCY_SGN_TXT || TO_CHAR(SUM(FCD.AMOUNT), #amtFormat#) 
                    END 
                ELSE '' 
                END 
            END AS TOTAL_AMT_TXT
        , FCD.SPECIAL_CHARGE_FLG
        , FCD.SVC_INV_CHRG_TP_CD
        , SUM(FCD.AMOUNT) AS AMOUNT
        , FCD.CCY_SGN_TXT
        , FCD.SVC_MACH_MSTR_PK 
    FROM
        (SELECT
            CASE WHEN IPFL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# THEN '1' ELSE '4' END TYPE,
            <!-- 2019/06/14 QC#50791 Mod Start -->
             I.INV_NUM                                 INV_NUM
        <!-- SI.SVC_INV_NUM                            INV_NUM-->
            <!-- 2019/06/14 QC#50791 Mod End -->
            ,INITCAP(IPSP.INV_PRINT_SVC_PGM_SRC_NM)  || ' - ' ||  INITCAP(IPSP.INV_PRINT_SVC_PGM_PROD_NM)  || ' ' ||
                    CASE WHEN IPFL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# 
                    THEN 'Base' 
                    ELSE 'Usage' END                   CHARGE_TYPE
            ,IPFL.BLLG_PER_FROM_DT                     PERIOD_FROM
            ,IPFL.BLLG_PER_THRU_DT                     PERIOD_THRU
            ,'N'                                       SPECIAL_CHARGE_FLG
            ,IPFL.SVC_INV_CHRG_TP_CD
            ,CASE WHEN IPFL.SVC_INV_CHRG_TP_CD = #siChrgTpCdMC# THEN NULL ELSE
                 CASE WHEN IPFL.INV_LINE_DEAL_NET_AMT IS NOT NULL THEN
                     CASE WHEN IPFL.INV_LINE_DEAL_NET_AMT  + NVL(IPFL_C.CHILD_INV_LINE_DEAL_NET_AMT, 0) &lt; 0 THEN
                         '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(IPFL.INV_LINE_DEAL_NET_AMT + NVL(IPFL_C.CHILD_INV_LINE_DEAL_NET_AMT, 0)), #amtFormat#)
                     ELSE
                         CCY.CCY_SGN_TXT || TO_CHAR(IPFL.INV_LINE_DEAL_NET_AMT + NVL(IPFL_C.CHILD_INV_LINE_DEAL_NET_AMT, 0), #amtFormat#)
                     END
                 ELSE
                     ''
                 END
             END TOTAL_AMT_TXT
            ,IPFL.INV_LINE_DEAL_NET_AMT + NVL(IPFL_C.CHILD_INV_LINE_DEAL_NET_AMT, 0)                  AMOUNT
            ,CCY.CCY_SGN_TXT
            , NVL( 
                IPFL.SVC_MACH_MSTR_PK
                , ( 
                    SELECT
                              L.SVC_MACH_MSTR_PK 
                        FROM
                            <!-- QC#52209 2019/07/31 Mod -->
                            <!-- SVC_INV_LINE L  -->
                            INV_PRT_SVC_INV_LINE_WRK L
                        WHERE
                            L.SVC_INV_NUM          = IPFL.SVC_INV_NUM 
                            AND L.SVC_INV_LINE_PK  = IPFL.PRNT_SVC_INV_LINE_PK 
                            AND L.GLBL_CMPY_CD     = IPFL.GLBL_CMPY_CD 
                            AND L.EZCANCELFLAG     = '0'
                )
            ) SVC_MACH_MSTR_PK
            , IPFL.SVC_INV_LINE_NUM
        FROM
            (SELECT INV_NUM,
                    CASE SYS_SRC_CD
                         WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                         ELSE INV_NUM
                         END AS SVC_INV_NUM,
                    GLBL_CMPY_CD,
                    EZCANCELFLAG,
                    LEASE_CMPY_PO_NUM,
                    DEAL_CCY_CD
                    <!-- START 2022/02/21 [QC#59724, ADD] -->
                    ,CUST_ISS_PO_NUM
                    <!-- END   2022/02/21 [QC#59724, ADD] -->
               FROM INV
              WHERE INV_NUM                     = #invNum#
                AND GLBL_CMPY_CD                = #glblCmpyCd#
                AND EZCANCELFLAG                = '0')  I
            ,SVC_INV                    SI
            <!-- QC#52209 2019/07/31 Mod -->
            <!-- ,INV_PRT_FLEET_LINE         IPFL   -->
            <!-- ,INV_PRT_FLEET_LINE         IPFL_B --><!-- QC#50104 Add -->
            ,INV_PRT_SVC_INV_LINE_WRK     IPFL
            ,INV_PRT_SVC_INV_LINE_WRK     IPFL_B <!-- QC#50104 Add -->
            ,SVC_INV_LINE_TP            SILT
            ,INV_PRINT_SVC_PGM          IPSP
            ,CCY                        CCY
            <!-- 02/06/2019 QC#29371 SRNO8 Add Start-->
            ,(
                SELECT
                    IPFL_C.GLBL_CMPY_CD
                    , IPFL_C.SVC_INV_NUM
                    , IPFL_C.PRNT_SVC_INV_LINE_PK
                    , SUM(IPFL_C.INV_LINE_DEAL_NET_AMT) CHILD_INV_LINE_DEAL_NET_AMT 
                FROM
                   <!-- QC#52209 2019/07/31 Mod -->
                   <!-- INV_PRT_FLEET_LINE         IPFL_C -->
                   INV_PRT_SVC_INV_LINE_WRK     IPFL_C
                WHERE
                    IPFL_C.GLBL_CMPY_CD = #glblCmpyCd#
                    AND IPFL_C.SVC_INV_NUM = #invNum#
                    AND IPFL_C.EZCANCELFLAG = '0'
                    AND EXISTS ( 
                        SELECT
                            1 
                        FROM
                            DS_CONTR_DTL DCD_C
                        WHERE
                            IPFL_C.GLBL_CMPY_CD = DCD_C.GLBL_CMPY_CD 
                            AND IPFL_C.DS_CONTR_PK = DCD_C.DS_CONTR_PK 
                            AND IPFL_C.DS_CONTR_DTL_PK = DCD_C.DS_CONTR_DTL_PK 
                            AND DCD_C.SVC_INV_MERGE_TP_CD = #svcInvMergeTpIntoBaseCharge#
                            AND DCD_C.EZCANCELFLAG = '0'
                    )
                    <!-- 05/29/2019 QC#50419 Add Start--> 
                    AND IPFL_C.PRNT_SVC_INV_LINE_PK IS NOT NULL
                    <!-- 05/29/2019 QC#50419 Add End--> 
                GROUP BY
                    IPFL_C.GLBL_CMPY_CD
                    ,IPFL_C.SVC_INV_NUM 
                    ,IPFL_C.PRNT_SVC_INV_LINE_PK 
            ) IPFL_C
            <!-- 02/06/2019 QC#29371 SRNO8 Add End-->
        WHERE
                I.GLBL_CMPY_CD                  = IPFL.GLBL_CMPY_CD
            AND I.INV_NUM                       = IPFL.SVC_INV_NUM
            AND IPFL.EZCANCELFLAG               = '0'
            <!-- QC#50104 Add Start -->
            AND IPFL.PRNT_SVC_INV_LINE_PK       = IPFL_B.SVC_INV_LINE_PK(+) 
            AND IPFL.SVC_INV_NUM                = IPFL_B.SVC_INV_NUM(+)  <!-- QC#50791 Add -->
            AND IPFL.GLBL_CMPY_CD               = IPFL_B.GLBL_CMPY_CD(+)
            AND IPFL_B.EZCANCELFLAG(+)          = '0'
            <!-- QC#50104 Add End -->
            AND I.GLBL_CMPY_CD                  = SI.GLBL_CMPY_CD
            AND I.SVC_INV_NUM                   = SI.SVC_INV_NUM
            AND SI.DS_CONTR_PK                  = #contrPk#
            AND SI.EZCANCELFLAG                 = '0'
            AND IPFL.GLBL_CMPY_CD               = SILT.GLBL_CMPY_CD
            AND IPFL.SVC_INV_LINE_TP_CD         = SILT.SVC_INV_LINE_TP_CD
            AND SILT.FLEET_LINE_FLG             = #fleetFlg#
            AND SILT.EZCANCELFLAG               = '0'
            <isNotNull property="svcPgm">
            AND IPFL.SVC_PGM_MDSE_CD             = #svcPgm#
            </isNotNull>
            <isNull property="svcPgm">
            AND IPFL.SVC_PGM_MDSE_CD              IS NULL
            </isNull>
            <isNotNull property="poNo">
            <!-- 2019/04/04 QC#30756 Mod Start -->
            <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(IPFL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)) = #poNo# -->
            <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(IPFL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))) = UPPER(#poNo#) -->
            <!-- QC#50104 Mod -->
            <!-- START 2022/02/21 [QC#59724, MOD] -->
            <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL2(IPFL.PRNT_SVC_INV_LINE_PK, IPFL_B.CUST_ISS_PO_NUM, NVL(IPFL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)))) = UPPER(#poNo#) -->
            AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
            THEN UPPER(I.CUST_ISS_PO_NUM)
            ELSE UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL2(IPFL.PRNT_SVC_INV_LINE_PK, IPFL_B.CUST_ISS_PO_NUM, NVL(IPFL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))))
            END = UPPER(#poNo#)
            <!-- END   2022/02/21 [QC#59724, MOD] -->
            <!-- 2019/04/04 QC#30756 Mod End -->
            </isNotNull>
            <isNull property="poNo">
            <!-- QC#50104 Mod -->
            <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(IPFL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)) IS NULL -->
            <!-- START 2022/02/21 [QC#59724, MOD] -->
            <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(IPFL_B.CUST_ISS_PO_NUM, NVL(IPFL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))) IS NULL -->
            AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
            THEN I.CUST_ISS_PO_NUM
            ELSE NVL(I.LEASE_CMPY_PO_NUM, NVL(IPFL_B.CUST_ISS_PO_NUM, NVL(IPFL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)))
            END IS NULL
            <!-- END   2022/02/21 [QC#59724, MOD] -->
            </isNull>
            AND IPFL.GLBL_CMPY_CD               = IPSP.GLBL_CMPY_CD (+)
            AND IPFL.SVC_PGM_MDSE_CD            = IPSP.INV_PRINT_SVC_PGM_CD (+)
            AND IPSP.EZCANCELFLAG(+)            = '0'
            AND I.GLBL_CMPY_CD                  = CCY.GLBL_CMPY_CD(+)
            AND I.DEAL_CCY_CD                   = CCY.CCY_CD(+)
            AND CCY.EZCANCELFLAG(+)             = '0'
            <!-- 02/06/2019 QC#29371 SRNO8 Add Start-->
            <!-- 05/29/2019 QC#50419 Mod Start-->
            <!--
            AND EXISTS (
                SELECT
                    1
                FROM
                    DS_CONTR_DTL DCD
                WHERE
                        IPFL.GLBL_CMPY_CD = DCD.GLBL_CMPY_CD
                    AND IPFL.DS_CONTR_PK = DCD.DS_CONTR_PK
                    AND IPFL.DS_CONTR_DTL_PK = DCD.DS_CONTR_DTL_PK
                AND (DCD.SVC_INV_MERGE_TP_CD <![CDATA[<>]]> '1' OR DCD.SVC_INV_MERGE_TP_CD IS NULL)
                AND DCD.EZCANCELFLAG = '0'
            )
            -->
            AND 
             CASE WHEN IPFL.PRNT_SVC_INV_LINE_PK IS NULL THEN 1
                  WHEN EXISTS (
                SELECT
                    1
                FROM
                    DS_CONTR_DTL DCD
                WHERE
                        IPFL.GLBL_CMPY_CD = DCD.GLBL_CMPY_CD
                    AND IPFL.DS_CONTR_PK = DCD.DS_CONTR_PK
                    AND IPFL.DS_CONTR_DTL_PK = DCD.DS_CONTR_DTL_PK
                AND (DCD.SVC_INV_MERGE_TP_CD <![CDATA[<>]]> '1' OR DCD.SVC_INV_MERGE_TP_CD IS NULL)
                AND DCD.EZCANCELFLAG = '0'
            ) THEN 1
            ELSE 0
            END <![CDATA[>=]]> 1
            <!-- 05/29/2019 QC#50419 Mod End-->
            AND IPFL.GLBL_CMPY_CD = IPFL_C.GLBL_CMPY_CD(+)
            AND IPFL.SVC_INV_NUM     = IPFL_C.SVC_INV_NUM(+)
            AND IPFL.SVC_INV_LINE_PK = IPFL_C.PRNT_SVC_INV_LINE_PK(+)
            <!-- 02/06/2019 QC#29371 SRNO8 Add End-->
        UNION ALL
        SELECT
            CASE WHEN SILAC.ADDL_CHRG_INV_TP_CD = 'BASE' THEN '2' ELSE '3' END TYPE,
            <!-- 2019/06/14 QC#50791 Mod Start -->
             I.INV_NUM                                  INV_NUM
        <!-- SI.SVC_INV_NUM                             INV_NUM-->
            <!-- 2019/06/14 QC#50791 Mod End -->
            ,ACT.ADDL_CHRG_TP_NM                        CHARGE_TYPE
            ,IPFL.BLLG_PER_FROM_DT                      PERIOD_FROM
            ,IPFL.BLLG_PER_THRU_DT                      PERIOD_THRU
            ,'Y'                                        SPECIAL_CHARGE_FLG
            ,#siChrgTpCdAC#                             SVC_INV_CHRG_TP_CD
            ,CASE WHEN IPFL.SVC_INV_CHRG_TP_CD = #siChrgTpCdMC# THEN NULL ELSE
                 CASE WHEN IPFL.INV_LINE_DEAL_NET_AMT IS NOT NULL THEN
                     CASE WHEN IPFL.INV_LINE_DEAL_NET_AMT &lt; 0 THEN
                         '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(IPFL_B.INV_LINE_DEAL_NET_AMT), #amtFormat#)
                     ELSE
                         CCY.CCY_SGN_TXT || TO_CHAR(IPFL_B.INV_LINE_DEAL_NET_AMT, #amtFormat#)
                     END
                 ELSE
                     ''
                 END
             END TOTAL_AMT_TXT
            ,IPFL_B.INV_LINE_DEAL_NET_AMT                AMOUNT
            ,CCY.CCY_SGN_TXT
            , NVL(IPFL_B.SVC_MACH_MSTR_PK, IPFL.SVC_MACH_MSTR_PK)   SVC_MACH_MSTR_PK
            , IPFL.SVC_INV_LINE_NUM
        FROM
            (SELECT INV_NUM,
                    CASE SYS_SRC_CD
                         WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                         ELSE INV_NUM
                    END AS SVC_INV_NUM,
                    GLBL_CMPY_CD,
                    EZCANCELFLAG,
                    LEASE_CMPY_PO_NUM,
                    DEAL_CCY_CD
                    <!-- START 2022/02/21 [QC#59724, ADD] -->
                    ,CUST_ISS_PO_NUM
                    <!-- END   2022/02/21 [QC#59724, ADD] -->
               FROM INV
              WHERE INV_NUM                     = #invNum#
                AND GLBL_CMPY_CD                = #glblCmpyCd#
                AND EZCANCELFLAG                = '0') I
            ,SVC_INV                    SI
            <!-- QC#52209 2019/07/31 Mod -->
            <!-- ,INV_PRT_FLEET_LINE         IPFL   -->
            <!-- ,INV_PRT_FLEET_LINE         IPFL_B -->
            ,INV_PRT_SVC_INV_LINE_WRK     IPFL
            ,INV_PRT_SVC_INV_LINE_WRK     IPFL_B
            ,SVC_INV_LINE_TP            SILT
            ,SVC_INV_LINE_ADDL_CHRG     SILAC
            ,INV_PRINT_SVC_PGM          IPSP
            ,ADDL_CHRG_TP_V             ACT
            ,CCY                        CCY
        WHERE
                I.GLBL_CMPY_CD                  = IPFL.GLBL_CMPY_CD
            AND I.INV_NUM                       = IPFL.SVC_INV_NUM
            AND IPFL.EZCANCELFLAG               = '0'
            AND I.GLBL_CMPY_CD                  = SI.GLBL_CMPY_CD
            AND I.SVC_INV_NUM                   = SI.SVC_INV_NUM
            AND SI.DS_CONTR_PK                  = #contrPk#
            AND SI.EZCANCELFLAG                 = '0'
            AND IPFL.GLBL_CMPY_CD               = SILT.GLBL_CMPY_CD
            AND IPFL.SVC_INV_LINE_TP_CD         = SILT.SVC_INV_LINE_TP_CD
            AND SILT.FLEET_LINE_FLG             = #fleetFlg#
            AND SILT.EZCANCELFLAG               = '0'
            <isNotNull property="svcPgm">
            AND IPFL.SVC_PGM_MDSE_CD            = #svcPgm#
            </isNotNull>
            <isNull property="svcPgm">
            AND IPFL.SVC_PGM_MDSE_CD              IS NULL
            </isNull>
            <isNotNull property="poNo">
            <!-- 2019/04/04 QC#30756 Mod Start -->
            <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(IPFL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)) = #poNo# -->
            <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(IPFL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))) = UPPER(#poNo#) -->
            <!-- 2019/04/04 QC#30756 Mod End -->
            <!-- QC#50104 Mod -->
            <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL2(IPFL.PRNT_SVC_INV_LINE_PK, IPFL_B.CUST_ISS_PO_NUM, NVL(IPFL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)))) = UPPER(#poNo#) -->
            <!-- START 2022/02/21 [QC#59724, MOD] -->
            AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
            THEN UPPER(I.CUST_ISS_PO_NUM)
	        <!-- START 07/13/2022 [QC#60289, MOD] -->
            <!-- ELSE UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL2(IPFL.PRNT_SVC_INV_LINE_PK, IPFL_B.CUST_ISS_PO_NUM, NVL(IPFL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))))   -->
            ELSE UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(IPFL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)))
	        <!-- END   07/13/2022 [QC#60289, MOD] -->
            END = UPPER(#poNo#)
            <!-- END   2022/02/21 [QC#59724, MOD] -->
            </isNotNull>
            <isNull property="poNo">
            <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(IPFL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)) IS NULL -->
            <!-- QC#50104 Mod -->
            <!-- START 2022/02/21 [QC#59724, MOD] -->
            <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(IPFL.PRNT_SVC_INV_LINE_PK, IPFL_B.CUST_ISS_PO_NUM, IPFL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)) IS NULL -->
            AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
            THEN I.CUST_ISS_PO_NUM
            ELSE NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(IPFL.PRNT_SVC_INV_LINE_PK, IPFL_B.CUST_ISS_PO_NUM, IPFL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))
            END IS NULL
            <!-- END   2022/02/21 [QC#59724, MOD] -->
            </isNull>
            AND IPFL.GLBL_CMPY_CD               = IPSP.GLBL_CMPY_CD (+)
            AND IPFL.SVC_PGM_MDSE_CD            = IPSP.INV_PRINT_SVC_PGM_CD (+)
            AND IPSP.EZCANCELFLAG(+)            = '0'
            AND I.GLBL_CMPY_CD                  = CCY.GLBL_CMPY_CD(+)
            AND I.DEAL_CCY_CD                   = CCY.CCY_CD(+)
            AND CCY.EZCANCELFLAG(+)             = '0'
            AND IPFL.SVC_INV_LINE_PK            = IPFL_B.PRNT_SVC_INV_LINE_PK
            AND IPFL.SVC_INV_NUM                = IPFL_B.SVC_INV_NUM  <!-- QC#50791 Add -->
            AND IPFL.GLBL_CMPY_CD               = IPFL_B.GLBL_CMPY_CD
            AND IPFL_B.EZCANCELFLAG             = '0'
            AND IPFL_B.SVC_INV_LINE_PK          = SILAC.SVC_INV_LINE_PK
            AND IPFL_B.GLBL_CMPY_CD             = SILAC.GLBL_CMPY_CD
            AND SILAC.PRINT_DTL_FLG             = #printDtlFlg#
            AND SILAC.EZCANCELFLAG              = '0'
            AND SILAC.GLBL_CMPY_CD              = ACT.GLBL_CMPY_CD (+)
            AND SILAC.ADDL_CHRG_TP_CD           = ACT.ADDL_CHRG_TP_CD (+)
            AND ACT.EZCANCELFLAG(+)             = '0'
        <!-- START 06/20/2022 [QC#60205, ADD] -->
        UNION ALL
        SELECT
            CASE WHEN SILAC.ADDL_CHRG_INV_TP_CD = 'BASE' THEN '2' ELSE '3' END TYPE,
             I.INV_NUM                                  INV_NUM
            ,ACT.ADDL_CHRG_TP_NM                        CHARGE_TYPE
            ,IPFL.BLLG_PER_FROM_DT                      PERIOD_FROM
            ,IPFL.BLLG_PER_THRU_DT                      PERIOD_THRU
            ,'Y'                                        SPECIAL_CHARGE_FLG
            ,#siChrgTpCdAC#                             SVC_INV_CHRG_TP_CD
            ,CASE WHEN IPFL.SVC_INV_CHRG_TP_CD = #siChrgTpCdMC# THEN NULL ELSE
                 CASE WHEN IPFL.INV_LINE_DEAL_NET_AMT IS NOT NULL THEN
                     CASE WHEN IPFL.INV_LINE_DEAL_NET_AMT &lt; 0 THEN
                         '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(IPFL_ACB.INV_LINE_DEAL_NET_AMT), #amtFormat#)
                     ELSE
                         CCY.CCY_SGN_TXT || TO_CHAR(IPFL_ACB.INV_LINE_DEAL_NET_AMT, #amtFormat#)
                     END
                 ELSE
                     ''
                 END
             END TOTAL_AMT_TXT
            ,IPFL_ACB.INV_LINE_DEAL_NET_AMT                AMOUNT
            ,CCY.CCY_SGN_TXT
            , NVL(IPFL_ACB.SVC_MACH_MSTR_PK, IPFL.SVC_MACH_MSTR_PK)   SVC_MACH_MSTR_PK
            , IPFL.SVC_INV_LINE_NUM
        FROM
            (SELECT INV_NUM,
                    CASE SYS_SRC_CD
                         WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                         ELSE INV_NUM
                    END AS SVC_INV_NUM,
                    GLBL_CMPY_CD,
                    EZCANCELFLAG,
                    LEASE_CMPY_PO_NUM,
                    DEAL_CCY_CD
                    ,CUST_ISS_PO_NUM
               FROM INV
              WHERE INV_NUM                     = #invNum#
                AND GLBL_CMPY_CD                = #glblCmpyCd#
                AND EZCANCELFLAG                = '0') I
            ,SVC_INV                    SI
            ,INV_PRT_SVC_INV_LINE_WRK   IPFL
            ,SVC_INV_LINE_TP            SILT
            ,SVC_INV_LINE_ADDL_CHRG     SILAC
            ,INV_PRINT_SVC_PGM          IPSP
            ,ADDL_CHRG_TP_V             ACT
            ,CCY                        CCY
            ,INV_PRT_SVC_INV_LINE_WRK   IPFL_AC
            ,INV_PRT_SVC_INV_LINE_WRK   IPFL_ACB
            ,DS_CONTR_DTL               DTL
        WHERE
                I.GLBL_CMPY_CD                  = IPFL.GLBL_CMPY_CD
            AND I.INV_NUM                       = IPFL.SVC_INV_NUM
            AND IPFL.EZCANCELFLAG               = '0'
            AND I.GLBL_CMPY_CD                  = SI.GLBL_CMPY_CD
            AND I.SVC_INV_NUM                   = SI.SVC_INV_NUM
            AND SI.DS_CONTR_PK                  = #contrPk#
            AND SI.EZCANCELFLAG                 = '0'
            AND IPFL.GLBL_CMPY_CD               = SILT.GLBL_CMPY_CD
            AND IPFL.SVC_INV_LINE_TP_CD         = SILT.SVC_INV_LINE_TP_CD
            AND SILT.FLEET_LINE_FLG             = #fleetFlg#
            AND SILT.EZCANCELFLAG               = '0'
            <isNotNull property="svcPgm">
            AND IPFL.SVC_PGM_MDSE_CD            = #svcPgm#
            </isNotNull>
            <isNull property="svcPgm">
            AND IPFL.SVC_PGM_MDSE_CD              IS NULL
            </isNull>
            <isNotNull property="poNo">
            AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
            THEN UPPER(I.CUST_ISS_PO_NUM)
            ELSE UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL2(IPFL.PRNT_SVC_INV_LINE_PK, IPFL_ACB.CUST_ISS_PO_NUM, NVL(IPFL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))))
            END = UPPER(#poNo#)
            </isNotNull>
            <isNull property="poNo">
            AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
            THEN I.CUST_ISS_PO_NUM
            ELSE NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(IPFL.PRNT_SVC_INV_LINE_PK, IPFL_ACB.CUST_ISS_PO_NUM, IPFL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))
            END IS NULL
            </isNull>
            AND IPFL.GLBL_CMPY_CD               = IPSP.GLBL_CMPY_CD (+)
            AND IPFL.SVC_PGM_MDSE_CD            = IPSP.INV_PRINT_SVC_PGM_CD (+)
            AND IPSP.EZCANCELFLAG(+)            = '0'
            AND I.GLBL_CMPY_CD                  = CCY.GLBL_CMPY_CD(+)
            AND I.DEAL_CCY_CD                   = CCY.CCY_CD(+)
            AND CCY.EZCANCELFLAG(+)             = '0'
            AND IPFL.GLBL_CMPY_CD               = IPFL_AC.GLBL_CMPY_CD
            AND IPFL.SVC_INV_LINE_PK            = IPFL_AC.PRNT_SVC_INV_LINE_PK
            AND IPFL.SVC_INV_NUM                = IPFL_AC.SVC_INV_NUM
            AND IPFL_AC.EZCANCELFLAG            = '0'
            AND IPFL_AC.GLBL_CMPY_CD            = IPFL_ACB.GLBL_CMPY_CD
            AND IPFL_AC.SVC_INV_LINE_PK         = IPFL_ACB.PRNT_SVC_INV_LINE_PK
            AND IPFL_AC.SVC_INV_NUM             = IPFL_ACB.SVC_INV_NUM
            AND IPFL_ACB.EZCANCELFLAG           = '0'
            AND IPFL_ACB.GLBL_CMPY_CD           = DTL.GLBL_CMPY_CD
            AND IPFL_ACB.DS_CONTR_DTL_PK        = DTL.DS_CONTR_DTL_PK
            AND DTL.EZCANCELFLAG                = '0'
            AND DTL.SVC_INV_MERGE_TP_CD         = '1'
            AND IPFL_ACB.SVC_INV_LINE_PK        = SILAC.SVC_INV_LINE_PK
            AND IPFL_ACB.GLBL_CMPY_CD           = SILAC.GLBL_CMPY_CD
            AND SILAC.PRINT_DTL_FLG             = #printDtlFlg#
            AND SILAC.EZCANCELFLAG              = '0'
            AND SILAC.GLBL_CMPY_CD              = ACT.GLBL_CMPY_CD (+)
            AND SILAC.ADDL_CHRG_TP_CD           = ACT.ADDL_CHRG_TP_CD (+)
            AND ACT.EZCANCELFLAG(+)             = '0'
        <!-- END   06/20/2022 [QC#60205, ADD] -->
        ORDER BY
              TYPE
            , INV_NUM
            , SVC_MACH_MSTR_PK
            , SVC_INV_LINE_NUM
            , CHARGE_TYPE
            , PERIOD_FROM
            , PERIOD_THRU
        ) FCD, 
<!-- 02/07/2019 QC#29371 K.Fujimoto Mod Start-->
          SVC_MACH_MSTR SMM, 
          SVC_CONFIG_MSTR SCM
        WHERE 
              SMM.GLBL_CMPY_CD          = #glblCmpyCd#
          AND SMM.SVC_MACH_MSTR_PK      = FCD.SVC_MACH_MSTR_PK
          AND SMM.EZCANCELFLAG          = '0'
          AND SCM.EZCANCELFLAG(+)       = '0'
          AND SCM.GLBL_CMPY_CD(+)       = SMM.GLBL_CMPY_CD
          AND SCM.SVC_CONFIG_MSTR_PK(+) = SMM.SVC_CONFIG_MSTR_PK
    GROUP BY
          FCD.TYPE
        , FCD.INV_NUM
        , FCD.CHARGE_TYPE
        , FCD.PERIOD_FROM
        , FCD.PERIOD_THRU
        , FCD.SPECIAL_CHARGE_FLG
        , FCD.SVC_INV_CHRG_TP_CD
        , FCD.CCY_SGN_TXT
        , FCD.SVC_MACH_MSTR_PK
        , SCM.SVC_MACH_MSTR_PK
        , SMM.SVC_MACH_TP_CD
        , SMM.SVC_MACH_SQ_NUM
    ORDER BY
          FCD.TYPE
        , FCD.INV_NUM
        , FCD.CHARGE_TYPE
        , FCD.PERIOD_FROM
        , FCD.PERIOD_THRU
        , SCM.SVC_MACH_MSTR_PK
        , SMM.SVC_MACH_TP_CD
        , SMM.SVC_MACH_SQ_NUM
<!-- 02/07/2019 QC#29371 K.Fujimoto Mod End  -->
    </statement>

    <statement id="getFleetChrgDtlForAdditionalChargeNonDisp" parameterClass="Map" resultClass="Map">
    <!-- START 06/20/2022 [QC#60205, ADD] -->
    SELECT
        SUM(AMOUNT) AS AMOUNT
    FROM (
    <!-- END   06/20/2022 [QC#60205, ADD] -->
    SELECT
         <!--  SUM(SILAC.ADDL_CHRG_FLAT_DEAL_PRC_AMT)          AMOUNT-->
         SUM(IPFL_B.INV_LINE_DEAL_NET_AMT)         AMOUNT
    FROM
        <!-- 2018/08/21 QC#27684 mod Start -->
        <!-- INV                        I -->
        (SELECT INV_NUM,
                CASE SYS_SRC_CD
                     WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                     ELSE INV_NUM
                     END AS SVC_INV_NUM,
                GLBL_CMPY_CD,
                EZCANCELFLAG,
                LEASE_CMPY_PO_NUM,
                DEAL_CCY_CD
                <!-- START 2022/02/21 [QC#59724, ADD] -->
                ,CUST_ISS_PO_NUM
                <!-- END   2022/02/21 [QC#59724, ADD] -->
         FROM   INV
         WHERE  INV_NUM            = #invNum#
           AND  GLBL_CMPY_CD       = #glblCmpyCd#
           AND  EZCANCELFLAG       = '0') I
        <!-- 2018/08/21 QC#27684 mod End -->
        ,SVC_INV                    SI
        <!-- QC#52209 2019/07/31 Mod -->
        <!-- ,INV_PRT_FLEET_LINE         IPFL   -->
        <!-- ,INV_PRT_FLEET_LINE         IPFL_B -->
        ,INV_PRT_SVC_INV_LINE_WRK     IPFL
        ,INV_PRT_SVC_INV_LINE_WRK     IPFL_B
        ,SVC_INV_LINE_TP            SILT
        ,SVC_INV_LINE_ADDL_CHRG     SILAC
        ,INV_PRINT_SVC_PGM          IPSP
        ,ADDL_CHRG_TP_V             ACT
        ,CCY                        CCY
    WHERE
        <!-- 2018/08/21 QC#27684 del Start -->
        <!--
            I.INV_NUM                       = #invNum#
        AND I.GLBL_CMPY_CD                  = #glblCmpyCd#
        AND I.EZCANCELFLAG                  = '0'
        AND I.GLBL_CMPY_CD                  = IL.GLBL_CMPY_CD
        -->
        <!-- 2018/08/21 QC#27684 del End -->
        <!-- 2018/08/21 QC#27684 add Start -->
            I.GLBL_CMPY_CD                  = IPFL.GLBL_CMPY_CD
        <!-- 2018/08/21 QC#27684 add End -->
        AND I.INV_NUM                       = IPFL.SVC_INV_NUM
        AND IPFL.EZCANCELFLAG               = '0'
        AND I.GLBL_CMPY_CD                  = SI.GLBL_CMPY_CD
        <!-- 2018/08/21 QC#27684 del Start -->
        <!--
        AND ((      I.SYS_SRC_CD        &lt;&gt; #sysSrcCdNFC#    
                AND I.INV_NUM           = SI.SVC_INV_NUM )
            OR  (   I.SYS_SRC_CD        = #sysSrcCdNFC# 
                AND I.ORIG_INV_NUM      = SI.SVC_INV_NUM )
            )
        -->
        <!-- 2018/08/21 QC#27684 del End -->
        <!-- 2018/08/21 QC#27684 add Start -->
        AND I.SVC_INV_NUM                   = SI.SVC_INV_NUM
        <!-- 2018/08/21 QC#27684 add End -->
        AND SI.DS_CONTR_PK                  = #contrPk#
        AND SI.EZCANCELFLAG                 = '0'
        <isEqual property="fleetFlg" compareValue="N">
            <isNotNull property="svcMachMstrPk">
        AND IPFL.SVC_MACH_MSTR_PK           = #svcMachMstrPk#
            </isNotNull>
        </isEqual>
        AND IPFL.GLBL_CMPY_CD               = SILT.GLBL_CMPY_CD
        AND IPFL.SVC_INV_LINE_TP_CD         = SILT.SVC_INV_LINE_TP_CD
        AND SILT.FLEET_LINE_FLG             = #fleetFlg#
        AND SILT.EZCANCELFLAG               = '0'
        <isNotNull property="svcPgm">
        AND IPFL.SVC_PGM_MDSE_CD             = #svcPgm#
        </isNotNull>
        <isNull property="svcPgm">
        AND IPFL.SVC_PGM_MDSE_CD              IS NULL
        </isNull>
        <isNotNull property="poNo">
        <!-- 2019/04/04 QC#30756 Mod Start -->
        <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(IPFL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)) = #poNo# -->
        <!-- START 2022/02/21 [QC#59724, MOD] -->
        <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(IPFL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))) = UPPER(#poNo#) -->
        AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
        THEN UPPER(I.CUST_ISS_PO_NUM)
        ELSE UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(IPFL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)))
        END = UPPER(#poNo#)
        <!-- END   2022/02/21 [QC#59724, MOD] -->
        <!-- 2019/04/04 QC#30756 Mod End -->
        </isNotNull>
        <isNull property="poNo">
        <!-- START 2022/02/21 [QC#59724, MOD] -->
        <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(IPFL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)) IS NULL -->
        AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
        THEN I.CUST_ISS_PO_NUM
        ELSE NVL(I.LEASE_CMPY_PO_NUM, NVL(IPFL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))
        END IS NULL
        <!-- END   2022/02/21 [QC#59724, MOD] -->
        </isNull>
        AND IPFL.GLBL_CMPY_CD               = IPSP.GLBL_CMPY_CD (+)
        AND IPFL.SVC_PGM_MDSE_CD            = IPSP.INV_PRINT_SVC_PGM_CD (+)
        AND IPSP.EZCANCELFLAG(+)            = '0'
        AND I.GLBL_CMPY_CD                  = CCY.GLBL_CMPY_CD(+)
        AND I.DEAL_CCY_CD                   = CCY.CCY_CD(+)
        AND CCY.EZCANCELFLAG(+)             = '0'
        AND IPFL.SVC_INV_LINE_PK            = IPFL_B.PRNT_SVC_INV_LINE_PK
        AND IPFL.SVC_INV_NUM                = IPFL_B.SVC_INV_NUM  <!-- QC#50791 Add -->
        AND IPFL.GLBL_CMPY_CD               = IPFL_B.GLBL_CMPY_CD
        AND IPFL_B.EZCANCELFLAG             = '0'
        AND IPFL_B.SVC_INV_LINE_PK          = SILAC.SVC_INV_LINE_PK
        AND IPFL_B.GLBL_CMPY_CD             = SILAC.GLBL_CMPY_CD
        AND SILAC.ADDL_CHRG_INV_TP_CD       = #addlChrgInvTpCd#
        AND SILAC.PRINT_DTL_FLG             = #printDtlFlg#
        AND SILAC.EZCANCELFLAG              = '0'
        AND SILAC.GLBL_CMPY_CD              = ACT.GLBL_CMPY_CD (+)
        AND SILAC.ADDL_CHRG_TP_CD           = ACT.ADDL_CHRG_TP_CD (+)
        AND ACT.EZCANCELFLAG(+)             = '0'
        <isNotNull property="periodFrom">
        AND IPFL.BLLG_PER_FROM_DT            = #periodFrom#
        </isNotNull>
        <isNull property="periodFrom">
        AND IPFL.BLLG_PER_FROM_DT            IS NULL
        </isNull>
        <isNotNull property="periodThru">
        AND IPFL.BLLG_PER_THRU_DT            = #periodThru#
        </isNotNull>
        <isNull property="periodThru">
        AND IPFL.BLLG_PER_THRU_DT            IS NULL
        </isNull>
    <!-- START 06/20/2022 [QC#60205, ADD] -->
    UNION
    SELECT
         SUM(IPFL_ACB.INV_LINE_DEAL_NET_AMT)         AMOUNT
    FROM
        (SELECT INV_NUM,
                CASE SYS_SRC_CD
                     WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                     ELSE INV_NUM
                     END AS SVC_INV_NUM,
                GLBL_CMPY_CD,
                EZCANCELFLAG,
                LEASE_CMPY_PO_NUM,
                DEAL_CCY_CD
                ,CUST_ISS_PO_NUM
         FROM   INV
         WHERE  INV_NUM            = #invNum#
           AND  GLBL_CMPY_CD       = #glblCmpyCd#
           AND  EZCANCELFLAG       = '0') I
        ,SVC_INV                    SI
        ,INV_PRT_SVC_INV_LINE_WRK   IPFL
        ,SVC_INV_LINE_TP            SILT
        ,SVC_INV_LINE_ADDL_CHRG     SILAC
        ,INV_PRINT_SVC_PGM          IPSP
        ,ADDL_CHRG_TP_V             ACT
        ,CCY                        CCY
        ,INV_PRT_SVC_INV_LINE_WRK   IPFL_AC
        ,INV_PRT_SVC_INV_LINE_WRK   IPFL_ACB
        ,DS_CONTR_DTL               DTL
    WHERE
            I.GLBL_CMPY_CD                  = IPFL.GLBL_CMPY_CD
        AND I.INV_NUM                       = IPFL.SVC_INV_NUM
        AND IPFL.EZCANCELFLAG               = '0'
        AND I.GLBL_CMPY_CD                  = SI.GLBL_CMPY_CD
        AND I.SVC_INV_NUM                   = SI.SVC_INV_NUM
        AND SI.DS_CONTR_PK                  = #contrPk#
        AND SI.EZCANCELFLAG                 = '0'
        <isEqual property="fleetFlg" compareValue="N">
            <isNotNull property="svcMachMstrPk">
        AND IPFL.SVC_MACH_MSTR_PK           = #svcMachMstrPk#
            </isNotNull>
        </isEqual>
        AND IPFL.GLBL_CMPY_CD               = SILT.GLBL_CMPY_CD
        AND IPFL.SVC_INV_LINE_TP_CD         = SILT.SVC_INV_LINE_TP_CD
        AND SILT.FLEET_LINE_FLG             = #fleetFlg#
        AND SILT.EZCANCELFLAG               = '0'
        <isNotNull property="svcPgm">
        AND IPFL.SVC_PGM_MDSE_CD             = #svcPgm#
        </isNotNull>
        <isNull property="svcPgm">
        AND IPFL.SVC_PGM_MDSE_CD              IS NULL
        </isNull>
        <isNotNull property="poNo">
        AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
        THEN UPPER(I.CUST_ISS_PO_NUM)
        ELSE UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(IPFL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)))
        END = UPPER(#poNo#)
        </isNotNull>
        <isNull property="poNo">
        AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
        THEN I.CUST_ISS_PO_NUM
        ELSE NVL(I.LEASE_CMPY_PO_NUM, NVL(IPFL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))
        END IS NULL
        </isNull>
        AND IPFL.GLBL_CMPY_CD               = IPSP.GLBL_CMPY_CD (+)
        AND IPFL.SVC_PGM_MDSE_CD            = IPSP.INV_PRINT_SVC_PGM_CD (+)
        AND IPSP.EZCANCELFLAG(+)            = '0'
        AND I.GLBL_CMPY_CD                  = CCY.GLBL_CMPY_CD(+)
        AND I.DEAL_CCY_CD                   = CCY.CCY_CD(+)
        AND CCY.EZCANCELFLAG(+)             = '0'
        AND IPFL.GLBL_CMPY_CD               = IPFL_AC.GLBL_CMPY_CD
        AND IPFL.SVC_INV_LINE_PK            = IPFL_AC.PRNT_SVC_INV_LINE_PK
        AND IPFL.SVC_INV_NUM                = IPFL_AC.SVC_INV_NUM
        AND IPFL_AC.EZCANCELFLAG            = '0'
        AND IPFL_AC.GLBL_CMPY_CD            = IPFL_ACB.GLBL_CMPY_CD
        AND IPFL_AC.SVC_INV_LINE_PK         = IPFL_ACB.PRNT_SVC_INV_LINE_PK
        AND IPFL_AC.SVC_INV_NUM             = IPFL_ACB.SVC_INV_NUM
        AND IPFL_ACB.EZCANCELFLAG           = '0'
        AND IPFL_ACB.GLBL_CMPY_CD           = DTL.GLBL_CMPY_CD
        AND IPFL_ACB.DS_CONTR_DTL_PK        = DTL.DS_CONTR_DTL_PK
        AND DTL.EZCANCELFLAG                = '0'
        AND DTL.SVC_INV_MERGE_TP_CD         = '1'
        AND IPFL_ACB.SVC_INV_LINE_PK        = SILAC.SVC_INV_LINE_PK
        AND IPFL_ACB.GLBL_CMPY_CD           = SILAC.GLBL_CMPY_CD
        AND SILAC.ADDL_CHRG_INV_TP_CD       = #addlChrgInvTpCd#
        AND SILAC.PRINT_DTL_FLG             = #printDtlFlg#
        AND SILAC.EZCANCELFLAG              = '0'
        AND SILAC.GLBL_CMPY_CD              = ACT.GLBL_CMPY_CD (+)
        AND SILAC.ADDL_CHRG_TP_CD           = ACT.ADDL_CHRG_TP_CD (+)
        AND ACT.EZCANCELFLAG(+)             = '0'
        <isNotNull property="periodFrom">
        AND IPFL.BLLG_PER_FROM_DT            = #periodFrom#
        </isNotNull>
        <isNull property="periodFrom">
        AND IPFL.BLLG_PER_FROM_DT            IS NULL
        </isNull>
        <isNotNull property="periodThru">
        AND IPFL.BLLG_PER_THRU_DT            = #periodThru#
        </isNotNull>
        <isNull property="periodThru">
        AND IPFL.BLLG_PER_THRU_DT            IS NULL
        </isNull>
    )
    <!-- END   06/20/2022 [QC#60205, ADD] -->
    </statement>

    <statement id="getFleetMtrChrg" parameterClass="Map" resultClass="Map">
        <!-- QC#29371 add start -->
        SELECT
                  INV_NUM
                , SHIP_TO_CODE
                , SHIP_TO_NAME
                , SHIP_TO_FST_ADDR
                , SHIP_TO_SCD_ADDR
                , SHIP_TO_CITY
                , SHIP_TO_ST
                , SHIP_TO_POST
                , MACHINE_PK
                , SERIAL_NO
                , MODEL
                , CUST_CODES1
                , CUST_CODES2
                , CUST_CODES3
                , CUST_CODES4
                , CUST_CODES5
                , CUST_CODES6
                , METER_TYPE
                , TO_CHAR(SUM(START_READ), #qtyFormat#)     START_READ
                , TO_CHAR(SUM(END_READ), #qtyFormat#)       END_READ
                , TO_CHAR(SUM(TEST_COPIES), #qtyFormat#)    TEST_COPIES
                , TO_CHAR(SUM(COPIES_MADE), #qtyFormat#)    COPIES_MADE
                , SHIP_TO_CUST_ACCT_CD
                , SHIP_TO_CUST_ACCT_NM
                , MTR_LB_SORT_NUM
                , CUST_ISS_PO_NUM 
            FROM
                (
        <!-- QC#29371 add end -->
    SELECT
        <!-- 2019/06/14 QC#50791 Mod Start -->
         I.INV_NUM                              INV_NUM
    <!-- SIL.SVC_INV_NUM                        INV_NUM-->
        <!-- 2019/06/14 QC#50791 Mod End -->
        ,SIL.SHIP_TO_CUST_CD                    SHIP_TO_CODE
        ,STC.LOC_NM                             SHIP_TO_NAME
        ,STC.FIRST_LINE_ADDR                    SHIP_TO_FST_ADDR
        ,STC.SCD_LINE_ADDR
            || STC.THIRD_LINE_ADDR 
            || STC.FRTH_LINE_ADDR               SHIP_TO_SCD_ADDR
        ,STC.CTY_ADDR                           SHIP_TO_CITY
        ,STC.ST_CD                              SHIP_TO_ST
        ,STC.POST_CD                            SHIP_TO_POST
        ,SIL.SVC_MACH_MSTR_PK                   MACHINE_PK
        ,SIL.SER_NUM                            SERIAL_NO
        ,SIL.MDL_NM                             MODEL
        ,SIL.FIRST_BLLG_ATTRB_VAL_TXT           CUST_CODES1
        ,SIL.SCD_BLLG_ATTRB_VAL_TXT             CUST_CODES2
        ,SIL.THIRD_BLLG_ATTRB_VAL_TXT           CUST_CODES3
        ,SIL.FRTH_BLLG_ATTRB_VAL_TXT            CUST_CODES4
        ,SIL.FIFTH_BLLG_ATTRB_VAL_TXT           CUST_CODES5
        ,SIL.SIXTH_BLLG_ATTRB_VAL_TXT           CUST_CODES6
        <!-- START 2018/02/05 M.Naito [QC#21184, MOD] -->
        <!-- ,SILM.MTR_LB_DESC_TXT                   METER_TYPE -->
        ,NVL(ML.INV_PRINT_MTR_LB_DESC_TXT, SILM.MTR_LB_DESC_TXT) METER_TYPE
        <!-- END 2018/02/05 M.Naito [QC#21184, MOD] -->
        <!-- START 2018/06/11 K.Kitachi [QC#20750, MOD] -->
        <!-- ,TO_CHAR(SILM.PREV_TOT_COPY_QTY, #qtyFormat#)       START_READ -->
        ,CASE
            WHEN
                EXISTS(
                    SELECT
                        1
                    FROM
                        CONTR_PHYS_BLLG_MTR_RELN X
                    WHERE
                            RLN.GLBL_CMPY_CD               = X.GLBL_CMPY_CD
                        AND RLN.DS_CONTR_BLLG_MTR_PK       = X.DS_CONTR_BLLG_MTR_PK
                        AND RLN.CONTR_MTR_MULT_RATE &lt;&gt; X.CONTR_MTR_MULT_RATE
                        AND X.BLLBL_FLG                    = 'Y'
                        AND X.EZCANCELFLAG                 = '0'
                )
<!--            THEN TO_CHAR(TMS.START_READ_MTR_CNT * RLN.CONTR_MTR_MULT_RATE, #qtyFormat#)-->
<!--            ELSE TO_CHAR(TMS.START_READ_MTR_CNT, #qtyFormat#)-->

            <!--06/04/2019 QC#50658 Mod Start -->
            <!-- THEN TMS.START_READ_MTR_CNT * RLN.CONTR_MTR_MULT_RATE -->  <!-- QC#29371 -->
            <!-- ELSE TMS.START_READ_MTR_CNT -->                             <!-- QC#29371 -->
            THEN
                CASE
                    WHEN SI.INV_TP_CD = #invTpCd# THEN
                        TMS.START_READ_MTR_CNT * RLN.CONTR_MTR_MULT_RATE
                    ELSE
                        TMS_O.START_READ_MTR_CNT * RLN.CONTR_MTR_MULT_RATE
                END
            ELSE
                CASE
                    WHEN SI.INV_TP_CD = #invTpCd# THEN
                        TMS.START_READ_MTR_CNT
                    ELSE
                        TMS_O.START_READ_MTR_CNT
                END
            <!--06/04/2019 QC#50658 Mod End -->
        END START_READ
        <!-- ,TO_CHAR(SILM.TOT_COPY_QTY, #qtyFormat#)            END_READ -->
        ,CASE
            WHEN
                EXISTS(
                    SELECT
                        1
                    FROM
                        CONTR_PHYS_BLLG_MTR_RELN X
                    WHERE
                            RLN.GLBL_CMPY_CD               = X.GLBL_CMPY_CD
                        AND RLN.DS_CONTR_BLLG_MTR_PK       = X.DS_CONTR_BLLG_MTR_PK
                        AND RLN.CONTR_MTR_MULT_RATE &lt;&gt; X.CONTR_MTR_MULT_RATE
                        AND X.BLLBL_FLG                    = 'Y'
                        AND X.EZCANCELFLAG                 = '0'
                )
<!--            THEN TO_CHAR(TMS.END_READ_MTR_CNT * RLN.CONTR_MTR_MULT_RATE, #qtyFormat#)-->
<!--            ELSE TO_CHAR(TMS.END_READ_MTR_CNT, #qtyFormat#)-->

            <!--06/04/2019 QC#50658 Mod Start -->
            <!-- THEN TMS.END_READ_MTR_CNT * RLN.CONTR_MTR_MULT_RATE --> <!-- QC#29371 -->
            <!-- ELSE TMS.END_READ_MTR_CNT -->                           <!-- QC#29371 -->
            THEN
                CASE
                    WHEN SI.INV_TP_CD = #invTpCd# THEN
                        TMS.END_READ_MTR_CNT * RLN.CONTR_MTR_MULT_RATE
                    ELSE
                        TMS_O.END_READ_MTR_CNT * RLN.CONTR_MTR_MULT_RATE
                END
            ELSE
                CASE
                    WHEN SI.INV_TP_CD = #invTpCd# THEN
                        TMS.END_READ_MTR_CNT
                    ELSE
                        TMS_O.END_READ_MTR_CNT
                END
            <!--06/04/2019 QC#50658 Mod End -->

        END END_READ
        <!-- ,TO_CHAR(SILM.TEST_COPY_QTY, #qtyFormat#)           TEST_COPIES -->
        ,CASE
            WHEN
                EXISTS(
                    SELECT
                        1
                    FROM
                        CONTR_PHYS_BLLG_MTR_RELN X
                    WHERE
                            RLN.GLBL_CMPY_CD               = X.GLBL_CMPY_CD
                        AND RLN.DS_CONTR_BLLG_MTR_PK       = X.DS_CONTR_BLLG_MTR_PK
                        AND RLN.CONTR_MTR_MULT_RATE &lt;&gt; X.CONTR_MTR_MULT_RATE
                        AND X.BLLBL_FLG                    = 'Y'
                        AND X.EZCANCELFLAG                 = '0'
                )
<!--            THEN TO_CHAR(TMS.TEST_MTR_CNT * RLN.CONTR_MTR_MULT_RATE, #qtyFormat#)-->
<!--            ELSE TO_CHAR(TMS.TEST_MTR_CNT, #qtyFormat#)-->

            <!--06/04/2019 QC#50658 Mod Start -->
            <!--
            THEN TMS.TEST_MTR_CNT * RLN.CONTR_MTR_MULT_RATE
            ELSE TMS.TEST_MTR_CNT
            -->
            THEN
                CASE
                    WHEN SI.INV_TP_CD = #invTpCd# THEN
                        TMS.TEST_MTR_CNT * RLN.CONTR_MTR_MULT_RATE
                    ELSE
                        TMS_O.TEST_MTR_CNT * RLN.CONTR_MTR_MULT_RATE
                END
            ELSE
                CASE
                    WHEN SI.INV_TP_CD = #invTpCd# THEN
                        TMS.TEST_MTR_CNT
                    ELSE
                        TMS_O.TEST_MTR_CNT
                END
            <!--06/04/2019 QC#50658 Mod End -->

        END TEST_COPIES
        <!-- START 2017/09/11 K.Kojima [QC#18440,MOD] -->
        <!-- ,TO_CHAR(SILM.BLLG_COPY_QTY, #qtyFormat#)           COPIES_MADE -->
        <!-- ,TO_CHAR(SILM.MTR_COPY_QTY, #qtyFormat#)           COPIES_MADE -->
        <!-- END 2017/09/11 K.Kojima [QC#18440,MOD] -->
        ,CASE
            WHEN
                EXISTS(
                    SELECT
                        1
                    FROM
                        CONTR_PHYS_BLLG_MTR_RELN X
                    WHERE
                            RLN.GLBL_CMPY_CD               = X.GLBL_CMPY_CD
                        AND RLN.DS_CONTR_BLLG_MTR_PK       = X.DS_CONTR_BLLG_MTR_PK
                        AND RLN.CONTR_MTR_MULT_RATE &lt;&gt; X.CONTR_MTR_MULT_RATE
                        AND X.BLLBL_FLG                    = 'Y'
                        AND X.EZCANCELFLAG                 = '0'
                )
<!--            THEN TO_CHAR(TMS.TOT_COPY_QTY * RLN.CONTR_MTR_MULT_RATE, #qtyFormat#)-->
<!--            ELSE TO_CHAR(TMS.TOT_COPY_QTY, #qtyFormat#)-->

            <!--06/04/2019 QC#50658 Mod Start -->
            <!--
            THEN TMS.TOT_COPY_QTY * RLN.CONTR_MTR_MULT_RATE
            ELSE TMS.TOT_COPY_QTY
            -->
            THEN
                CASE
                    WHEN SI.INV_TP_CD = #invTpCd# THEN
                        TMS.TOT_COPY_QTY * RLN.CONTR_MTR_MULT_RATE
                    ELSE
                        TMS_O.TOT_COPY_QTY * RLN.CONTR_MTR_MULT_RATE
                END
            ELSE
                CASE
                    WHEN SI.INV_TP_CD = #invTpCd# THEN
                        TMS.TOT_COPY_QTY
                    ELSE
                        TMS_O.TOT_COPY_QTY
                END
            <!--06/04/2019 QC#50658 Mod End -->

        END COPIES_MADE
        <!-- END 2018/06/11 K.Kitachi [QC#20750, MOD] -->
        <!-- QC#20788 add Start -->
        ,IB.SHIP_TO_CUST_ACCT_CD                SHIP_TO_CUST_ACCT_CD
        <!-- QC#26919 -->
        <!--,IB.SHIP_TO_CUST_ACCT_NM                SHIP_TO_CUST_ACCT_NM-->
        ,CASE WHEN IB.DROP_SHIP_FLG = 'Y' THEN IB.SHIP_TO_LOC_NM ELSE IB.SHIP_TO_CUST_ACCT_NM END SHIP_TO_CUST_ACCT_NM
        <!-- QC#20788 add End -->
        ,ML.MTR_LB_SORT_NUM
        ,SIL.CUST_ISS_PO_NUM    <!-- QC#29371 -->
    FROM
        <!-- 2018/08/21 QC#27684 mod Start -->
        <!-- INV                    I -->
        (SELECT INV_NUM,
                CASE SYS_SRC_CD
                     WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                     ELSE INV_NUM
                     END AS SVC_INV_NUM,
                GLBL_CMPY_CD,
                EZCANCELFLAG,
                LEASE_CMPY_PO_NUM
                <!-- START 2022/02/21 [QC#59724, ADD] -->
                ,CUST_ISS_PO_NUM
                <!-- END   2022/02/21 [QC#59724, ADD] -->
         FROM   INV
         WHERE  INV_NUM            = #invNum#
           AND  GLBL_CMPY_CD       = #glblCmpyCd#
           AND  EZCANCELFLAG       = '0') I
        <!-- 2018/08/21 QC#27684 mod End -->
        ,SVC_INV                SI
        <!-- QC#52209 2019/07/31 Mod-->
        <!-- ,SVC_INV_LINE           SIL -->
        ,INV_PRT_SVC_INV_LINE_WRK SIL
        ,SVC_INV_LINE_MTR       SILM
        ,SVC_INV_LINE_TP        SILT
        ,SHIP_TO_CUST           STC
        <!-- QC#20788 add Start -->
        ,INV_BOL                IB
        <!-- QC#20788 add End -->
        <!-- START 2018/02/05 M.Naito [QC#21184, MOD] -->
        ,MTR_LB                 ML
        <!-- END 2018/02/05 M.Naito [QC#21184, MOD] -->
        <!-- START 2018/06/11 K.Kitachi [QC#20750, ADD] -->
        ,CONTR_PHYS_BLLG_MTR_RELN RLN
        ,BLLG_SCHD_TEST_MTR_SMRY  TMS
        <!-- END 2018/06/11 K.Kitachi [QC#20750, ADD] -->
        <!-- 06/04/2019 QC#50658 Add Start -->
        ,DS_CONTR_BLLG_SCHD BS
        ,BLLG_SCHD_TEST_MTR_SMRY  TMS_O
        <!-- 06/04/2019 QC#50658 Add End -->
    
    WHERE
        <!-- 2018/08/21 QC#27684 del Start -->
        <!--
            I.INV_NUM                   = #invNum#
        AND I.GLBL_CMPY_CD              = #glblCmpyCd#
        AND I.EZCANCELFLAG              = '0'
        -->
        <!-- QC#20788 add Start -->
        <!--
        AND I.GLBL_CMPY_CD              = IB.GLBL_CMPY_CD
        -->
        <!-- 2018/08/21 QC#27684 del End -->
            I.GLBL_CMPY_CD              = IB.GLBL_CMPY_CD
        AND I.INV_NUM                   = IB.INV_NUM
        AND IB.INV_BOL_LINE_NUM         = '001'
        AND IB.EZCANCELFLAG             = '0'
        <!-- QC#20788 add End -->
        AND I.GLBL_CMPY_CD            = SI.GLBL_CMPY_CD
        <!-- 2018/08/21 QC#27684 del Start -->
        <!--
        AND ((      I.SYS_SRC_CD        &lt;&gt; #sysSrcCdNFC#    
                AND I.INV_NUM           = SI.SVC_INV_NUM )
            OR  (   I.SYS_SRC_CD        = #sysSrcCdNFC# 
                AND I.ORIG_INV_NUM      = SI.SVC_INV_NUM )
            )
        -->
        <!-- 2018/08/21 QC#27684 del End -->
        <!-- 2018/08/21 QC#27684 add Start -->
        AND I.SVC_INV_NUM      = SI.SVC_INV_NUM
        <!-- 2018/08/21 QC#27684 add End -->
        AND SI.EZCANCELFLAG           = '0'
        AND SI.GLBL_CMPY_CD           = SIL.GLBL_CMPY_CD
        AND SI.SVC_INV_NUM            = SIL.SVC_INV_NUM
        AND SIL.EZCANCELFLAG          = '0'
        AND SIL.GLBL_CMPY_CD          = SILT.GLBL_CMPY_CD
        AND SIL.SVC_INV_LINE_TP_CD      = SILT.SVC_INV_LINE_TP_CD
        AND SILT.FLEET_LINE_FLG         = #fleetFlg#
        AND SILT.EZCANCELFLAG         = '0'
        AND SIL.GLBL_CMPY_CD          = SILM.GLBL_CMPY_CD
        AND SIL.SVC_INV_LINE_PK         = SILM.SVC_INV_LINE_PK
        AND SILM.EZCANCELFLAG         = '0'
        <isNull property="svcPgm">
        AND SIL.SVC_PGM_MDSE_CD          IS NULL
        </isNull>
        <isNotNull property="svcPgm">
        AND SIL.SVC_PGM_MDSE_CD         = #svcPgm#
        </isNotNull>
        AND SIL.SVC_INV_CHRG_TP_CD      = #siChrgTpCdMC# 
        AND SI.DS_CONTR_PK              = #contrPk#
        <isNull property="poNo">
        <!-- START 2022/02/21 [QC#59724, MOD] -->
        <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))  IS NULL -->
        AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
        THEN I.CUST_ISS_PO_NUM
        ELSE NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))
        END IS NULL
        <!-- END   2022/02/21 [QC#59724, MOD] -->
        </isNull>
        <isNotNull property="poNo">
        <!-- 2019/04/04 QC#30756 Mod Start -->
        <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))  = #poNo# -->
        <!-- START 2022/02/21 [QC#59724, MOD] -->
        <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)))  = UPPER(#poNo#) -->
        AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
        THEN UPPER(I.CUST_ISS_PO_NUM)
        ELSE UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)))
        END = UPPER(#poNo#)
        <!-- END   2022/02/21 [QC#59724, MOD] -->
        <!-- 2019/04/04 QC#30756 Mod End -->
        </isNotNull>
        AND SIL.GLBL_CMPY_CD          = STC.GLBL_CMPY_CD (+)
        AND SIL.SHIP_TO_CUST_CD         = STC.SHIP_TO_CUST_CD (+)
        AND STC.RGTN_STS_CD(+)             = #rgtnStsCd#
        AND STC.EZCANCELFLAG(+)       = '0'
        <isEqual property="meterFlg" compareValue="Y"> 
        AND 1=2
        </isEqual>
        <!-- START 2018/02/05 M.Naito [QC#21184, MOD] -->
        AND SILM.GLBL_CMPY_CD           = ML.GLBL_CMPY_CD
        AND SILM.MTR_LB_CD              = ML.MTR_LB_CD
        AND ML.EZCANCELFLAG             = '0'
        <!-- END 2018/02/05 M.Naito [QC#21184, MOD] -->
        <!-- START 2018/06/11 K.Kitachi [QC#20750, ADD] -->
        AND SILM.GLBL_CMPY_CD           = RLN.GLBL_CMPY_CD
        AND SILM.DS_CONTR_BLLG_MTR_PK   = RLN.DS_CONTR_BLLG_MTR_PK
        AND RLN.BLLBL_FLG               = 'Y'
        AND RLN.EZCANCELFLAG            = '0'
        <!-- 06/04/2019 QC#50658 Mod Start -->
        AND RLN.GLBL_CMPY_CD            = TMS.GLBL_CMPY_CD(+)
        AND RLN.SVC_PHYS_MTR_PK         = TMS.SVC_PHYS_MTR_PK(+)
        AND SIL.DS_CONTR_BLLG_SCHD_PK   = TMS.DS_CONTR_BLLG_SCHD_PK(+)
        AND TMS.EZCANCELFLAG(+)         = '0'
        <!--
        AND RLN.GLBL_CMPY_CD            = TMS.GLBL_CMPY_CD
        AND RLN.SVC_PHYS_MTR_PK         = TMS.SVC_PHYS_MTR_PK
        AND SIL.DS_CONTR_BLLG_SCHD_PK   = TMS.DS_CONTR_BLLG_SCHD_PK
        AND TMS.EZCANCELFLAG            = '0'
        -->
        <!-- 06/04/2019 QC#50658 Mod End -->
        <!-- END 2018/06/11 K.Kitachi [QC#20750, ADD] -->

        <!-- 06/04/2019 QC#50658 Add Start -->
        AND SIL.GLBL_CMPY_CD                = BS.GLBL_CMPY_CD
        AND SIL.DS_CONTR_BLLG_SCHD_PK       = BS.DS_CONTR_BLLG_SCHD_PK
        AND BS.EZCANCELFLAG                 = '0'

        AND RLN.GLBL_CMPY_CD                = TMS_O.GLBL_CMPY_CD (+)
        AND RLN.SVC_PHYS_MTR_PK             = TMS_O.SVC_PHYS_MTR_PK (+)
        AND BS.GLBL_CMPY_CD                 = TMS_O.GLBL_CMPY_CD (+)
        AND BS.ORIG_DS_CONTR_BLLG_SCHD_PK   = TMS_O.DS_CONTR_BLLG_SCHD_PK (+)
        AND TMS_O.EZCANCELFLAG(+)           = '0'
        <!-- 06/04/2019 QC#50658 Add End -->
 
    UNION ALL

    SELECT 
        <!-- 2019/06/14 QC#50791 Mod Start -->
         I.INV_NUM                              INV_NUM
    <!-- SIL.SVC_INV_NUM                        INV_NUM-->
        <!-- 2019/06/14 QC#50791 Mod End -->
        ,SIL.SHIP_TO_CUST_CD                    SHIP_TO_CODE
        ,STC.LOC_NM                             SHIP_TO_NAME
        ,STC.FIRST_LINE_ADDR                    SHIP_TO_FST_ADDR
        ,STC.SCD_LINE_ADDR
            || STC.THIRD_LINE_ADDR 
            || STC.FRTH_LINE_ADDR               SHIP_TO_SCD_ADDR
        ,STC.CTY_ADDR                           SHIP_TO_CITY
        ,STC.ST_CD                              SHIP_TO_ST
        ,STC.POST_CD                            SHIP_TO_POST
        ,SIL.SVC_MACH_MSTR_PK                   MACHINE_PK
        ,SIL.SER_NUM                            SERIAL_NO
        ,SIL.MDL_NM                             MODEL
        ,SIL.FIRST_BLLG_ATTRB_VAL_TXT           CUST_CODES1
        ,SIL.SCD_BLLG_ATTRB_VAL_TXT             CUST_CODES2
        ,SIL.THIRD_BLLG_ATTRB_VAL_TXT           CUST_CODES3
        ,SIL.FRTH_BLLG_ATTRB_VAL_TXT            CUST_CODES4
        ,SIL.FIFTH_BLLG_ATTRB_VAL_TXT           CUST_CODES5
        ,SIL.SIXTH_BLLG_ATTRB_VAL_TXT           CUST_CODES6

        <!-- 2019/06/18 QC#50803 Mod Start -->
        , NVL( 
            ML.INV_PRINT_MTR_LB_DESC_TXT
            , DIMD.MTR_LB_DESC_TXT
        ) METER_TYPE
        <!-- ,DIMD.MTR_LB_DESC_TXT                                       METER_TYPE -->
        <!-- 2019/06/18 QC#50803 Mod End -->

<!--        ,TO_CHAR(DIMD.PREV_TOT_COPY_QTY, #qtyFormat#)       START_READ-->
<!--        ,TO_CHAR(DIMD.TOT_COPY_QTY, #qtyFormat#)            END_READ-->
<!--        ,TO_CHAR(DIMD.TEST_COPY_QTY, #qtyFormat#)           TEST_COPIES-->
        ,DIMD.PREV_TOT_COPY_QTY       START_READ    <!-- QC#29371 -->
        ,DIMD.TOT_COPY_QTY            END_READ      <!-- QC#29371 -->
        ,DIMD.TEST_COPY_QTY           TEST_COPIES   <!-- QC#29371 -->
        <!-- START 2017/09/11 K.Kojima [QC#18440,MOD] -->
        <!-- ,TO_CHAR(DIMD.BLLG_COPY_QTY, #qtyFormat#)           COPIES_MADE -->
<!--        ,TO_CHAR((NVL(DIMD.TOT_COPY_QTY, 0) - NVL(DIMD.PREV_TOT_COPY_QTY, 0) - NVL(DIMD.TEST_COPY_QTY, 0)), #qtyFormat#)           COPIES_MADE-->
        ,NVL(DIMD.TOT_COPY_QTY, 0) - NVL(DIMD.PREV_TOT_COPY_QTY, 0) - NVL(DIMD.TEST_COPY_QTY, 0)    COPIES_MADE <!-- QC#29371 -->
        <!-- END 2017/09/11 K.Kojima [QC#18440,MOD] -->
        <!-- QC#20788 add Start -->
        ,IB.SHIP_TO_CUST_ACCT_CD                SHIP_TO_CUST_ACCT_CD
        <!-- QC#26919 -->
        <!--,IB.SHIP_TO_CUST_ACCT_NM                SHIP_TO_CUST_ACCT_NM-->
        ,CASE WHEN IB.DROP_SHIP_FLG = 'Y' THEN IB.SHIP_TO_LOC_NM ELSE IB.SHIP_TO_CUST_ACCT_NM END SHIP_TO_CUST_ACCT_NM
        <!-- QC#20788 add End -->
        <!-- 2019/06/25 QC#50916 Mod Start -->
        ,ML.MTR_LB_SORT_NUM
   <!-- ,NULL MTR_LB_SORT_NUM-->
        <!-- 2019/06/25 QC#50916 Mod End -->
        ,SIL.CUST_ISS_PO_NUM    <!-- QC#29371 -->
    FROM
        <!-- 2018/08/21 QC#27684 mod Start -->
        <!-- INV                    I -->
        (SELECT INV_NUM,
                CASE SYS_SRC_CD
                     WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                     ELSE INV_NUM
                     END AS SVC_INV_NUM,
                GLBL_CMPY_CD,
                EZCANCELFLAG,
                LEASE_CMPY_PO_NUM
                <!-- START 2022/02/21 [QC#59724, ADD] -->
                ,CUST_ISS_PO_NUM
                <!-- END   2022/02/21 [QC#59724, ADD] -->
         FROM   INV
         WHERE  INV_NUM            = #invNum#
           AND  GLBL_CMPY_CD       = #glblCmpyCd#
           AND  EZCANCELFLAG       = '0') I
        <!-- 2018/08/21 QC#27684 mod End -->
        ,SVC_INV                SI
        ,INV_LINE               IL
        <!-- QC#52209 2019/07/31 Mod -->
        <!-- ,SVC_INV_LINE           SIL -->
        ,INV_PRT_SVC_INV_LINE_WRK SIL
        ,DS_INV_MTR_DTL         DIMD
        ,SVC_INV_LINE_TP        SILT
        ,SHIP_TO_CUST           STC
        <!-- QC#20788 add Start -->
        ,INV_BOL                IB
        <!-- QC#20788 add End -->

        <!-- 2019/06/18 QC#50803 Add Start -->
        , MTR_LB ML
        <!-- 2019/06/18 QC#50803 Add End -->

    WHERE
        <!-- 2018/08/21 QC#27684 del Start -->
        <!--
            I.INV_NUM                   = #invNum#
        AND I.GLBL_CMPY_CD              = #glblCmpyCd#
        AND I.EZCANCELFLAG              = '0'
        AND I.GLBL_CMPY_CD              = SI.GLBL_CMPY_CD
        -->
        <!-- 2018/08/21 QC#27684 del End -->
            I.GLBL_CMPY_CD              = SI.GLBL_CMPY_CD
        <!-- QC#20788 add Start -->
        AND I.GLBL_CMPY_CD              = IB.GLBL_CMPY_CD
        AND I.INV_NUM                   = IB.INV_NUM
        AND IB.INV_BOL_LINE_NUM         = '001'
        AND IB.EZCANCELFLAG             = '0'
        <!-- QC#20788 add End -->
        <!-- 2018/08/21 QC#27684 del Start -->
        <!--
        AND ((      I.SYS_SRC_CD        &lt;&gt; #sysSrcCdNFC#    
                AND I.INV_NUM           = SI.SVC_INV_NUM )
            OR  (   I.SYS_SRC_CD        = #sysSrcCdNFC# 
                AND I.ORIG_INV_NUM      = SI.SVC_INV_NUM )
            )
        -->
        <!-- 2018/08/21 QC#27684 del End -->
        <!-- 2018/08/21 QC#27684 mod Start -->
        AND I.SVC_INV_NUM               = SI.SVC_INV_NUM
        AND SI.EZCANCELFLAG             = '0'
        <!-- 2018/08/21 QC#27684 mod End -->
        AND I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD
        AND I.INV_NUM                   = IL.INV_NUM
        AND IL.EZCANCELFLAG             = '0'
        AND IL.GLBL_CMPY_CD             = SIL.GLBL_CMPY_CD
        AND IL.INV_NUM                  = SIL.SVC_INV_NUM <!-- QC#54201 2019/11/04 Add-->
        AND IL.SVC_INV_LINE_PK          = SIL.SVC_INV_LINE_PK
        AND SIL.EZCANCELFLAG            = '0'
        AND SIL.GLBL_CMPY_CD            = SILT.GLBL_CMPY_CD
        AND SIL.SVC_INV_LINE_TP_CD      = SILT.SVC_INV_LINE_TP_CD
        AND SILT.FLEET_LINE_FLG         = #fleetFlg#
        AND SILT.EZCANCELFLAG           = '0'
        AND IL.GLBL_CMPY_CD             = DIMD.GLBL_CMPY_CD
        AND IL.INV_NUM                  = DIMD.INV_NUM
        AND IL.INV_BOL_LINE_NUM         = DIMD.INV_BOL_LINE_NUM
        AND IL.INV_LINE_NUM             = DIMD.INV_LINE_NUM
        AND IL.INV_LINE_SUB_NUM         = DIMD.INV_LINE_SUB_NUM
        AND IL.INV_LINE_SUB_TRX_NUM     = DIMD.INV_LINE_SUB_TRX_NUM
        AND DIMD.EZCANCELFLAG           = '0'

        <!-- 2019/06/18 QC#50803 Add Start -->
        AND DIMD.MTR_LB_CD                  = ML.MTR_LB_CD(+)
        AND DIMD.GLBL_CMPY_CD               = ML.GLBL_CMPY_CD(+)
        AND ML.EZCANCELFLAG(+)              = '0'
        <!-- 2019/06/18 QC#50803 Add End -->

        AND SIL.SVC_INV_CHRG_TP_CD      = #siChrgTpCdMC# 
        AND SI.DS_CONTR_PK              = #contrPk#
        <isNull property="svcPgm">
        AND SIL.SVC_PGM_MDSE_CD          IS NULL
        </isNull>
        <isNotNull property="svcPgm">
        AND SIL.SVC_PGM_MDSE_CD         = #svcPgm#
        </isNotNull>
        <isNull property="poNo">
        <!-- START 2022/02/21 [QC#59724, MOD] -->
        <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))     IS NULL -->
        AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
        THEN I.CUST_ISS_PO_NUM
        ELSE NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))
        END IS NULL
        <!-- END   2022/02/21 [QC#59724, MOD] -->
        </isNull>
        <isNotNull property="poNo">
        <!-- 2019/04/04 QC#30756 Mod Start -->
        <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))     = #poNo# -->
        <!-- START 2022/02/21 [QC#59724, MOD] -->
        <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)))     = UPPER(#poNo#) -->
        AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
        THEN UPPER(I.CUST_ISS_PO_NUM)
        ELSE UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)))
        END = UPPER(#poNo#)
        <!-- END   2022/02/21 [QC#59724, MOD] -->
        <!-- 2019/04/04 QC#30756 Mod End -->
        </isNotNull>
        AND SIL.GLBL_CMPY_CD            = STC.GLBL_CMPY_CD (+)
        AND SIL.SHIP_TO_CUST_CD         = STC.SHIP_TO_CUST_CD (+)
        AND STC.RGTN_STS_CD(+)          = #rgtnStsCd#
        AND STC.EZCANCELFLAG(+)         = '0'
        <isEqual property="meterFlg" compareValue="N"> 
        AND 1=2
        </isEqual>
        <!-- QC#29371 add start -->
        ) TMP 
            GROUP BY
                INV_NUM
                , SHIP_TO_CODE
                , SHIP_TO_NAME
                , SHIP_TO_FST_ADDR
                , SHIP_TO_SCD_ADDR
                , SHIP_TO_CITY
                , SHIP_TO_ST
                , SHIP_TO_POST
                , MACHINE_PK
                , SERIAL_NO
                , MODEL
                , CUST_CODES1
                , CUST_CODES2
                , CUST_CODES3
                , CUST_CODES4
                , CUST_CODES5
                , CUST_CODES6
                , METER_TYPE
                , SHIP_TO_CUST_ACCT_CD
                , SHIP_TO_CUST_ACCT_NM
                , MTR_LB_SORT_NUM
                , CUST_ISS_PO_NUM
        <!-- QC#29371 add end -->
        ORDER BY
            SHIP_TO_CODE
           ,SHIP_TO_NAME
           ,SHIP_TO_FST_ADDR
           ,SHIP_TO_SCD_ADDR
           ,SHIP_TO_CITY
           ,SHIP_TO_ST
           ,SHIP_TO_POST
           ,SERIAL_NO
           ,MACHINE_PK
           ,MTR_LB_SORT_NUM
    </statement>

    <statement id="getFleetBaseChrg" parameterClass="Map" resultClass="Map">
    SELECT
         I.INV_NUM                              INV_NUM
        ,IPFL.SHIP_TO_CUST_CD                   SHIP_TO_CODE
        ,STC.LOC_NM                             SHIP_TO_NAME
        ,STC.FIRST_LINE_ADDR                    SHIP_TO_FST_ADDR
        ,STC.SCD_LINE_ADDR
            || STC.THIRD_LINE_ADDR                   
            || STC.FRTH_LINE_ADDR               SHIP_TO_SCD_ADDR
        ,STC.CTY_ADDR                           SHIP_TO_CITY
        ,STC.ST_CD                              SHIP_TO_ST
        ,STC.POST_CD                            SHIP_TO_POST
        ,IPFL.SVC_MACH_MSTR_PK                  MACHINE_PK
        ,IPFL.SER_NUM                           SERIAL_NO
        ,IPFL.MDL_NM                            MODEL
        ,IPFL.FIRST_BLLG_ATTRB_VAL_TXT          CUST_CODES1
        ,IPFL.SCD_BLLG_ATTRB_VAL_TXT            CUST_CODES2
        ,IPFL.THIRD_BLLG_ATTRB_VAL_TXT          CUST_CODES3
        ,IPFL.FRTH_BLLG_ATTRB_VAL_TXT           CUST_CODES4
        ,IPFL.FIFTH_BLLG_ATTRB_VAL_TXT          CUST_CODES5
        ,IPFL.SIXTH_BLLG_ATTRB_VAL_TXT          CUST_CODES6
        ,NULL                   METER_TYPE
        ,NULL                   START_READ
        ,NULL                   END_READ
        ,NULL                   TEST_COPIES
        ,NULL                   COPIES_MADE
        ,(SELECT COUNT(IPF.INV_PRT_FLEET_LOC_PK) FROM INV_PRT_FLEET_LOC IPF
         WHERE 
        <!-- QC#50687 Del Start
             IPF.INV_NUM = #invNum#
         AND
             QC#50687 Del End -->
             IPF.SHIP_TO_CUST_CD = IPFL.SHIP_TO_CUST_CD
         AND IPF.GLBL_CMPY_CD    = #glblCmpyCd#
         AND IPF.EZCANCELFLAG    = '0'
         AND IPF.INV_PRT_FLEET_SUB_TOT_PK = #invPrtFreetSubTotPk# 
         )LOC_CNT 
        ,(SELECT COUNT(IPF.INV_PRT_FLEET_LOC_PK) FROM INV_PRT_FLEET_MACH IPF, INV_PRT_FLEET_LOC IPFL
         WHERE 
        <!-- QC#50687 Del Start
             IPF.INV_NUM = #invNum#
         AND
             QC#50687 Del End -->
             IPF.SVC_MACH_MSTR_PK = IPFL.SVC_MACH_MSTR_PK
         AND IPF.GLBL_CMPY_CD    = #glblCmpyCd#
         AND IPF.EZCANCELFLAG    = '0'  
         AND IPF.INV_PRT_FLEET_LOC_PK = IPFL.INV_PRT_FLEET_LOC_PK 
         AND IPF.GLBL_CMPY_CD = IPFL.GLBL_CMPY_CD 
         AND IPF.EZCANCELFLAG = IPFL.EZCANCELFLAG 
         AND IPFL.INV_PRT_FLEET_SUB_TOT_PK = #invPrtFreetSubTotPk#
         )MACH_CNT 
        <!-- QC#20788 add Start -->
        ,IB.SHIP_TO_CUST_ACCT_CD                SHIP_TO_CUST_ACCT_CD
        <!--,IB.SHIP_TO_CUST_ACCT_NM                SHIP_TO_CUST_ACCT_NM-->
        ,CASE WHEN IB.DROP_SHIP_FLG = 'Y' THEN IB.SHIP_TO_LOC_NM ELSE IB.SHIP_TO_CUST_ACCT_NM END SHIP_TO_CUST_ACCT_NM
        <!-- QC#20788 add End -->
        ,IPFL.CUST_ISS_PO_NUM    <!-- QC#51829 -->
    FROM 
        <!-- 2018/08/21 QC#27684 mod Start -->
        <!-- INV                    I -->
        (SELECT INV_NUM,
                CASE SYS_SRC_CD
                     WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                     ELSE INV_NUM
                     END AS SVC_INV_NUM,
                GLBL_CMPY_CD,
                EZCANCELFLAG,
                LEASE_CMPY_PO_NUM
                <!-- START 2022/02/21 [QC#59724, ADD] -->
                ,CUST_ISS_PO_NUM
                <!-- END   2022/02/21 [QC#59724, ADD] -->
         FROM   INV
         WHERE  INV_NUM       = #invNum#
           AND  GLBL_CMPY_CD  = #glblCmpyCd#
           AND  EZCANCELFLAG  = '0') I
        <!-- 2018/08/21 QC#27684 mod End -->
        ,SVC_INV                SI
        <!-- QC#52209 2019/07/31 Mod -->
        <!-- ,INV_PRT_FLEET_LINE     IPFL    -->
        <!-- ,INV_PRT_FLEET_LINE     IPFL_B  -->
        ,INV_PRT_SVC_INV_LINE_WRK IPFL
        ,INV_PRT_SVC_INV_LINE_WRK IPFL_B
        ,SVC_INV_LINE_TP        SILT
        ,SHIP_TO_CUST           STC
        <!-- QC#20788 add Start -->
        ,INV_BOL                IB
        <!-- QC#20788 add End -->
    WHERE
    
        <!-- 2018/08/21 QC#27684 del Start -->
        <!--    
            I.INV_NUM                   = #invNum#
        AND I.GLBL_CMPY_CD              = #glblCmpyCd#
        AND I.EZCANCELFLAG              = '0'
        -->
        <!-- QC#20788 add Start -->
        <!--    
        AND I.GLBL_CMPY_CD              = IB.GLBL_CMPY_CD
        -->
        <!-- 2018/08/21 QC#27684 del End -->
            I.GLBL_CMPY_CD              = IB.GLBL_CMPY_CD
        AND I.INV_NUM                   = IB.INV_NUM
        AND IB.INV_BOL_LINE_NUM         = '001'
        AND IB.EZCANCELFLAG             = '0'
        <!-- QC#20788 add End -->
        AND I.GLBL_CMPY_CD              = SI.GLBL_CMPY_CD
        AND SI.EZCANCELFLAG             = '0'
        <!-- 2018/08/21 QC#27684 del Start -->
        <!--    
        AND ((      I.SYS_SRC_CD        &lt;&gt; #sysSrcCdNFC#    
                AND I.INV_NUM           = SI.SVC_INV_NUM )
            OR  (   I.SYS_SRC_CD        = #sysSrcCdNFC# 
                AND I.ORIG_INV_NUM      = SI.SVC_INV_NUM )
            )
        -->
        <!-- 2018/08/21 QC#27684 del End -->
        <!-- 2018/08/21 QC#27684 mod Start -->
        AND I.SVC_INV_NUM               = SI.SVC_INV_NUM
        <!-- 2018/08/21 QC#27684 mod End -->
        AND SI.GLBL_CMPY_CD             = IPFL.GLBL_CMPY_CD
        AND IPFL.EZCANCELFLAG           = '0'
        AND SI.SVC_INV_NUM              = IPFL.SVC_INV_NUM
        <!-- QC#50104 Add Start -->
        AND IPFL.PRNT_SVC_INV_LINE_PK   = IPFL_B.SVC_INV_LINE_PK(+) 
        AND IPFL.SVC_INV_NUM            = IPFL_B.SVC_INV_NUM(+)  <!-- QC#50791 Add -->
        AND IPFL.GLBL_CMPY_CD           = IPFL_B.GLBL_CMPY_CD(+)
        AND IPFL.EZCANCELFLAG(+)        = '0'
        <!-- QC#50104 Add End -->
        AND IPFL.GLBL_CMPY_CD           = SILT.GLBL_CMPY_CD
        AND SILT.EZCANCELFLAG           = '0'
        AND IPFL.SVC_INV_LINE_TP_CD     = SILT.SVC_INV_LINE_TP_CD
        AND SILT.FLEET_LINE_FLG         = #fleetFlg#
        AND IPFL.SVC_INV_CHRG_TP_CD     = #siChrgTpCdBC#
        AND SI.DS_CONTR_PK              = #contrPk#
    <isNull property="svcPgm">
        AND IPFL.SVC_PGM_MDSE_CD        IS NULL
    </isNull>
    <isNotNull property="svcPgm">
        AND IPFL.SVC_PGM_MDSE_CD        = #svcPgm#
    </isNotNull>
    <isNull property="poNo">
        <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(IPFL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))   IS NULL -->
        <!-- QC#50104 Mod -->
        <!-- START 2022/02/21 [QC#59724, MOD] -->
        <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(IPFL.PRNT_SVC_INV_LINE_PK, IPFL_B.CUST_ISS_PO_NUM, IPFL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)) IS NULL -->
        AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
        THEN I.CUST_ISS_PO_NUM
        ELSE NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(IPFL.PRNT_SVC_INV_LINE_PK, IPFL_B.CUST_ISS_PO_NUM, IPFL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))
        END IS NULL
        <!-- END   2022/02/21 [QC#59724, MOD] -->
    </isNull>
    <isNotNull property="poNo">
        <!-- 2019/04/04 QC#30756 Mod Start -->
        <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(IPFL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))   = #poNo# -->
        <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(IPFL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)))   = UPPER(#poNo#) -->
        <!-- 2019/04/04 QC#30756 Mod End -->
        <!-- QC#50104 Mod -->
        <!-- START 2022/02/21 [QC#59724, MOD] -->
        <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(IPFL.PRNT_SVC_INV_LINE_PK, IPFL_B.CUST_ISS_PO_NUM, IPFL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))) = UPPER(#poNo#) -->
        AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
        THEN UPPER(I.CUST_ISS_PO_NUM)
        ELSE UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(IPFL.PRNT_SVC_INV_LINE_PK, IPFL_B.CUST_ISS_PO_NUM, IPFL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)))
        END = UPPER(#poNo#)
        <!-- END   2022/02/21 [QC#59724, MOD] -->
    </isNotNull>
        AND IPFL.GLBL_CMPY_CD           = STC.GLBL_CMPY_CD(+)
        AND STC.EZCANCELFLAG(+)         = '0'
        AND IPFL.SHIP_TO_CUST_CD        = STC.SHIP_TO_CUST_CD(+)
        AND STC.RGTN_STS_CD(+)          = #rgtnStsCd#
        ORDER BY
            SHIP_TO_CODE
           ,SHIP_TO_NAME
           ,SHIP_TO_FST_ADDR
           ,SHIP_TO_SCD_ADDR
           ,SHIP_TO_CITY
           ,SHIP_TO_ST
           ,SHIP_TO_POST
           ,SERIAL_NO
           ,MACHINE_PK
    </statement>

    <statement id="getFleetSmryMtr" parameterClass="Map" resultClass="Map">
    SELECT
         TYPE
        ,METER_TYPE
        ,COPIES_MADE
        ,TO_CHAR(COPIES_MADE, #qtyFormat#)      COPIES_MADE_TXT
        ,MULTIPLIER
        <!-- START 2018/06/11 K.Kitachi [QC#20750, MOD] -->
        <!-- ,CASE WHEN MULTIPLIER IS NULL THEN '-' ELSE RTRIM(TO_CHAR(MULTIPLIER, #rateFormat#), '.') END MULTIPLIER_TXT -->
        ,CASE WHEN MULTIPLIER IS NULL AND TYPE = #type2# THEN '-' ELSE RTRIM(TO_CHAR(MULTIPLIER, #rateFormat#), '.') END MULTIPLIER_TXT
        <!-- END 2018/06/11 K.Kitachi [QC#20750, MOD] -->
        ,ALLOWANCE
        ,TO_CHAR(ALLOWANCE, #qtyFormat#)        ALLOWANCE_TXT
        ,AMOUNT
        ,CASE WHEN AMOUNT IS NOT NULL THEN
            CASE WHEN AMOUNT &lt; 0 THEN
                '-' || CCY_SGN_TXT || TO_CHAR(ABS(AMOUNT), #amtFormat#)
            ELSE
                CCY_SGN_TXT || TO_CHAR(AMOUNT, #amtFormat#)
            END
         ELSE
             ''
         END    AMOUNT_TXT
        ,#flgN#                                 SPECIAL_CHARGE_FLG
        ,MAX_DS_CONTRACT_BLLG_MTR_PK
        ,SVC_CONTR_MTR_BLLG_PK
        ,MTR_LB_CD
        ,MTR_LB_SORT_NUM
        <!--  START 2022/03/29 L.Mandanas [QC#58350, ADD] -->
        ,BILLABLE_COPIES
        ,MULTIPLIED_USAGE
        <!--  END 2022/03/29 L.Mandanas [QC#58350, ADD] -->
    FROM (
        SELECT
             #type1#                                     TYPE
            <!-- START 2018/02/05 M.Naito [QC#21184, MOD] -->
            <!-- ,SILM.MTR_LB_DESC_TXT                       METER_TYPE -->
            ,NVL(ML.INV_PRINT_MTR_LB_DESC_TXT, SILM.MTR_LB_DESC_TXT) METER_TYPE
            <!-- END 2018/02/05 M.Naito [QC#21184, MOD] -->
            <!-- START 2018/06/11 K.Kitachi [QC#20750, MOD] -->
            <!-- START 2017/09/26 K.Kojima [QC#18440,MOD] -->
            <!-- ,SUM(SILM.BLLG_COPY_QTY)                    COPIES_MADE -->
            <!-- ,SUM(SILM.MTR_COPY_QTY)                     COPIES_MADE -->
            <!-- END 2017/09/26 K.Kojima [QC#18440,MOD] -->
            ,SUM(MACH.COPIES_MADE)                      COPIES_MADE
            <!-- ,SILM.CONTR_MTR_MULT_RATE                   MULTIPLIER -->
            ,MACH.MULTIPLIER                            MULTIPLIER
            <!-- END 2018/06/11 K.Kitachi [QC#20750, MOD] -->
            ,SUM(SILM.COPY_INCL_QTY)                     ALLOWANCE
            <!--  ,SUM(SILM.MTR_CHRG_DEAL_AMT)                AMOUNT-->
            ,SUM(SILM.MTR_CHRG_DEAL_AMT+NVL(ADD_MTR.ADD_AMT,0))                AMOUNT
            ,#flgN#                                     SPECIAL_CHARGE_FLG
            ,MAX(DS_CONTR_BLLG_MTR_PK)                  MAX_DS_CONTRACT_BLLG_MTR_PK
            ,NULL                                       SVC_CONTR_MTR_BLLG_PK
            ,CCY.CCY_SGN_TXT
            ,ML.MTR_LB_CD
            ,ML.MTR_LB_SORT_NUM
            <!--  START 2022/03/29 L.Mandanas [QC#58350, ADD] -->
            ,SUM(SILM.BLLG_COPY_QTY)                        BILLABLE_COPIES
            ,SUM(SILM.MTR_COPY_QTY)                     MULTIPLIED_USAGE
            <!--  END 2022/03/29 L.Mandanas [QC#58350, ADD] -->
        FROM
        <!-- 2018/08/21 QC#27684 mod Start -->
        <!-- INV                    I -->
             (SELECT INV_NUM,
                CASE SYS_SRC_CD
                     WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                     ELSE INV_NUM
                     END AS SVC_INV_NUM,
                GLBL_CMPY_CD,
                EZCANCELFLAG,
                LEASE_CMPY_PO_NUM,
                DEAL_CCY_CD
                <!-- START 2022/02/21 [QC#59724, ADD] -->
                ,CUST_ISS_PO_NUM
                <!-- END   2022/02/21 [QC#59724, ADD] -->
              FROM   INV
              WHERE  INV_NUM            = #invNum#
                AND  GLBL_CMPY_CD       = #glblCmpyCd#
                AND  EZCANCELFLAG       = '0') I
        <!-- 2018/08/21 QC#27684 mod End -->
            ,SVC_INV                SI
            ,INV_LINE               IL
            <!-- QC#52209 2019/07/31 Mod -->
            <!-- ,SVC_INV_LINE           SIL -->
            <!-- ,SVC_INV_LINE           SIL_B -->
            ,INV_PRT_SVC_INV_LINE_WRK SIL
            ,INV_PRT_SVC_INV_LINE_WRK  SIL_B
            ,SVC_INV_LINE_MTR       SILM
            ,SVC_INV_LINE_TP        SILT
            ,CCY                    CCY
            <!-- START 2018/02/05 M.Naito [QC#21184, MOD] -->
            ,MTR_LB                 ML
            <!-- END 2018/02/05 M.Naito [QC#21184, MOD] -->
            ,(SELECT SIL_A.SVC_INV_NUM, SILAC.SVC_CONTR_MTR_BLLG_PK, SUM(SIL_A.INV_LINE_DEAL_NET_AMT) ADD_AMT 
              FROM SVC_INV_LINE_ADDL_CHRG SILAC, SVC_INV_LINE SIL_A
              WHERE SILAC.GLBL_CMPY_CD = #glblCmpyCd# AND SILAC.EZCANCELFLAG = '0'
              AND SILAC.SVC_INV_LINE_PK = SIL_A.SVC_INV_LINE_PK
              AND SILAC.PRINT_DTL_FLG = 'N' AND ADDL_CHRG_INV_TP_CD = 'USGE'
              AND SIL_A.GLBL_CMPY_CD = #glblCmpyCd# AND SIL_A.EZCANCELFLAG = '0'
              GROUP BY SIL_A.SVC_INV_NUM, SILAC.SVC_CONTR_MTR_BLLG_PK) ADD_MTR
            <!-- START 2018/06/11 K.Kitachi [QC#20750, ADD] -->
            ,(
                SELECT
                     <!-- 2019/02/05 QC#29371 SRNO#7 Mod Start -->
                     DCBS.DS_CONTR_BLLG_SCHD_PK
                     
                     <!-- 2019/06/11 QC#50705 Mod Start -->
                    ,CASE
                        WHEN  MAX(SI.INV_TP_CD) = #invTpCd# THEN
                            CASE
                                WHEN MAX(TMS.CONTR_MTR_MULT_RATE) &lt;&gt; MIN(TMS.CONTR_MTR_MULT_RATE)
                                THEN SUM(TMS.TOT_COPY_QTY * TMS.CONTR_MTR_MULT_RATE)
                                ELSE SUM(TMS.TOT_COPY_QTY)
                            END
                        ELSE
                            CASE
                                WHEN MAX(TMS_O.CONTR_MTR_MULT_RATE) &lt;&gt; MIN(TMS_O.CONTR_MTR_MULT_RATE)
                                THEN SUM(TMS_O.TOT_COPY_QTY * TMS_O.CONTR_MTR_MULT_RATE)
                                ELSE SUM(TMS_O.TOT_COPY_QTY)
                            END
                     END COPIES_MADE
                    ,CASE
                        WHEN MAX(SI.INV_TP_CD) = #invTpCd# THEN
                            CASE
                                WHEN MAX(TMS.CONTR_MTR_MULT_RATE) &lt;&gt; MIN(TMS.CONTR_MTR_MULT_RATE)
                                THEN NULL
                                ELSE MAX(TMS.CONTR_MTR_MULT_RATE)
                            END
                        ELSE
                            CASE
                                WHEN MAX(TMS_O.CONTR_MTR_MULT_RATE) &lt;&gt; MIN(TMS_O.CONTR_MTR_MULT_RATE)
                                THEN NULL
                                ELSE MAX(TMS_O.CONTR_MTR_MULT_RATE)
                            END
                     END MULTIPLIER
                     <!-- 2019/02/05 QC#29371 SRNO#7 Mod End -->
                     <!--
                    ,CASE
                        WHEN MAX(TMS.CONTR_MTR_MULT_RATE) &lt;&gt; MIN(TMS.CONTR_MTR_MULT_RATE)
                        THEN SUM(TMS.TOT_COPY_QTY * TMS.CONTR_MTR_MULT_RATE)
                        ELSE SUM(TMS.TOT_COPY_QTY)
                    END COPIES_MADE
                    ,CASE
                        WHEN MAX(TMS.CONTR_MTR_MULT_RATE) &lt;&gt; MIN(TMS.CONTR_MTR_MULT_RATE)
                        THEN NULL
                        ELSE MAX(TMS.CONTR_MTR_MULT_RATE)
                    END MULTIPLIER
                    -->
                    <!-- 2019/06/11 QC#50705 Mod End -->
                FROM
        <!-- 2018/08/21 QC#27684 mod Start -->
        <!--         INV                      I -->
                    (SELECT INV_NUM,
                            CASE SYS_SRC_CD
                                 WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                                 ELSE INV_NUM
                                 END AS SVC_INV_NUM,
                            GLBL_CMPY_CD,
                            EZCANCELFLAG,
                            LEASE_CMPY_PO_NUM
                            <!-- START 2022/02/21 [QC#59724, ADD] -->
                            ,CUST_ISS_PO_NUM
                            <!-- END   2022/02/21 [QC#59724, ADD] -->
                     FROM   INV
                     WHERE  INV_NUM            = #invNum#
                       AND  GLBL_CMPY_CD       = #glblCmpyCd#
                       AND  EZCANCELFLAG       = '0') I
        <!-- 2018/08/21 QC#27684 mod End -->
                    ,SVC_INV                  SI
                    ,INV_LINE                 IL
                    <!-- QC#52209 2019/07/31 Mod -->
                    <!-- ,SVC_INV_LINE             SIL -->
                    <!-- ,SVC_INV_LINE             SIL_B -->
                    ,INV_PRT_SVC_INV_LINE_WRK   SIL
                    ,INV_PRT_SVC_INV_LINE_WRK   SIL_B
                    ,DS_CONTR_BLLG_SCHD       DCBS
                    ,CONTR_PHYS_BLLG_MTR_RELN RLN
                    ,BLLG_SCHD_TEST_MTR_SMRY  TMS
                    <!-- 2019/06/11 QC#50705 Add Start -->
                    , BLLG_SCHD_TEST_MTR_SMRY TMS_O
                    , DS_CONTR_BLLG_SCHD BS 
                    <!-- 2019/06/11 QC#50705 Add End -->
                WHERE
        <!-- 2018/08/21 QC#27684 del Start -->
        <!--
                        I.INV_NUM                   = #invNum#
                    AND I.GLBL_CMPY_CD              = #glblCmpyCd#
                    AND I.EZCANCELFLAG              = '0'
                    AND SI.DS_CONTR_PK              = #contrPk#
        -->
        <!-- 2018/08/21 QC#27684 del End -->
        <!-- 2018/08/21 QC#27684 add Start -->
                        SI.DS_CONTR_PK              = #contrPk#
        <!-- 2018/08/21 QC#27684 add End -->
        <!-- 2018/08/21 QC#27684 del Start -->
        <!--
                    AND ((  I.SYS_SRC_CD        &lt;&gt; #sysSrcCdNFC#
                        AND I.INV_NUM           = SI.SVC_INV_NUM )
                    OR  (   I.SYS_SRC_CD        = #sysSrcCdNFC# 
                        AND I.ORIG_INV_NUM      = SI.SVC_INV_NUM )
                    )
        -->
        <!-- 2018/08/21 QC#27684 del End -->
        <!-- 2018/08/21 QC#27684 add Start -->
                    AND I.SVC_INV_NUM               = SI.SVC_INV_NUM
        <!-- 2018/08/21 QC#27684 add End -->
                    AND I.GLBL_CMPY_CD              = SI.GLBL_CMPY_CD
                    AND SI.EZCANCELFLAG             = '0'
                    AND I.INV_NUM                   = IL.INV_NUM
                    AND I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD
                    AND IL.EZCANCELFLAG             = '0'
                    AND SIL.SVC_INV_CHRG_TP_CD      = #siChrgTpCdMC#
                    AND IL.INV_NUM                  = SIL.SVC_INV_NUM
                    AND IL.SVC_INV_LINE_PK          = SIL.SVC_INV_LINE_PK
                    AND IL.GLBL_CMPY_CD             = SIL.GLBL_CMPY_CD
                    AND SIL.EZCANCELFLAG            = '0'
                    <!-- QC#50104 Add Start -->
                    AND SIL.PRNT_SVC_INV_LINE_PK    = SIL_B.SVC_INV_LINE_PK(+) 
                    AND SIL.SVC_INV_NUM             = SIL_B.SVC_INV_NUM(+) 
                    AND SIL.GLBL_CMPY_CD            = SIL_B.GLBL_CMPY_CD(+)
                    AND SIL_B.EZCANCELFLAG(+)       = '0'
                    <!-- QC#50104 Add End -->
                    AND SIL.GLBL_CMPY_CD            = DCBS.GLBL_CMPY_CD
                    <!-- 2019/02/05 QC#29371 SRNO#7 Mod Start -->
                    AND SIL.DS_CONTR_BLLG_SCHD_PK   = DCBS.DS_CONTR_BLLG_SCHD_PK
                    <!-- 2019/02/05 QC#29371 SRNO#7 Mod End -->
                    AND DCBS.EZCANCELFLAG           = '0'
                    AND DCBS.GLBL_CMPY_CD           = RLN.GLBL_CMPY_CD
                    AND DCBS.DS_CONTR_BLLG_MTR_PK   = RLN.DS_CONTR_BLLG_MTR_PK
                    AND RLN.BLLBL_FLG               = 'Y'
                    AND RLN.EZCANCELFLAG            = '0'
                    <!-- 2019/06/11 QC#50705 Mod Start -->
                    AND RLN.GLBL_CMPY_CD            = TMS.GLBL_CMPY_CD(+)
                    AND RLN.SVC_PHYS_MTR_PK         = TMS.SVC_PHYS_MTR_PK(+)
                    AND DCBS.DS_CONTR_BLLG_SCHD_PK  = TMS.DS_CONTR_BLLG_SCHD_PK(+)
                    AND TMS.EZCANCELFLAG(+)         = '0'
                    <!--
                    AND RLN.GLBL_CMPY_CD            = TMS.GLBL_CMPY_CD
                    AND RLN.SVC_PHYS_MTR_PK         = TMS.SVC_PHYS_MTR_PK
                    AND DCBS.DS_CONTR_BLLG_SCHD_PK  = TMS.DS_CONTR_BLLG_SCHD_PK
                    AND TMS.EZCANCELFLAG            = '0'
                    -->
                    <!-- 2019/06/11 QC#50705 Mod End -->
                    <!-- 2019/06/11 QC#50705 Add Start -->
                    AND SIL.GLBL_CMPY_CD            = BS.GLBL_CMPY_CD 
                    AND SIL.DS_CONTR_BLLG_SCHD_PK   = BS.DS_CONTR_BLLG_SCHD_PK 
                    AND BS.EZCANCELFLAG             = '0' 
                    AND RLN.GLBL_CMPY_CD            = TMS_O.GLBL_CMPY_CD(+) 
                    AND RLN.SVC_PHYS_MTR_PK         = TMS_O.SVC_PHYS_MTR_PK(+) 
                    AND BS.GLBL_CMPY_CD             = TMS_O.GLBL_CMPY_CD(+) 
                    AND BS.ORIG_DS_CONTR_BLLG_SCHD_PK = TMS_O.DS_CONTR_BLLG_SCHD_PK(+) 
                    AND TMS_O.EZCANCELFLAG(+) = '0' 
                    <!-- 2019/06/11 QC#50705 Add End -->
                <isNull property="svcPgm">
                    AND SIL.SVC_PGM_MDSE_CD          IS NULL
                </isNull>
                <isNotNull property="svcPgm">
                    AND SIL.SVC_PGM_MDSE_CD         = #svcPgm#
                </isNotNull>
                <isNull property="poNo">
                    <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))       IS NULL -->
                    <!-- QC#50104 Mod -->
                    <!-- START 2022/02/21 [QC#59724, MOD] -->
                    <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)) IS NULL -->
                    AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
                    THEN I.CUST_ISS_PO_NUM
                    ELSE NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))
                    END IS NULL
                    <!-- END   2022/02/21 [QC#59724, MOD] -->
                </isNull>
                <isNotNull property="poNo">
                    <!-- 2019/04/04 QC#30756 Mod Start -->
                    <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))       = #poNo# -->
                    <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)))       = UPPER(#poNo#) -->
                    <!-- QC#50104 Mod -->
                    <!-- START 2022/02/21 [QC#59724, MOD] -->
                    <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))) = UPPER(#poNo#) -->
                    AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
                    THEN UPPER(I.CUST_ISS_PO_NUM)
                    ELSE UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)))
                    END = UPPER(#poNo#)
                    <!-- END   2022/02/21 [QC#59724, MOD] -->
                    <!-- 2019/04/04 QC#30756 Mod End -->
                </isNotNull>
                <isEqual property="meterFlg" compareValue="Y"> 
                    AND 1=2
                </isEqual>
                GROUP BY
                    <!-- 2019/02/05 QC#29371 SRNO#7 Mod Start -->
                    DCBS.DS_CONTR_BLLG_SCHD_PK
                    <!-- 2019/02/05 QC#29371 SRNO#7 Mod End -->
            ) MACH
            <!-- END 2018/06/11 K.Kitachi [QC#20750, ADD] -->
        
        WHERE
        <!-- 2018/08/21 QC#27684 del Start -->
        <!--
                I.INV_NUM                   = #invNum#
            AND I.GLBL_CMPY_CD              = #glblCmpyCd#
            AND I.EZCANCELFLAG              = '0'
            AND SI.DS_CONTR_PK              = #contrPk#
            AND ((  I.SYS_SRC_CD        &lt;&gt; #sysSrcCdNFC#    
                AND I.INV_NUM           = SI.SVC_INV_NUM )
            OR  (   I.SYS_SRC_CD        = #sysSrcCdNFC# 
                AND I.ORIG_INV_NUM      = SI.SVC_INV_NUM )
            )
        -->
        <!-- 2018/08/21 QC#27684 del End -->
        <!-- 2018/08/21 QC#27684 add Start -->
                SI.DS_CONTR_PK              = #contrPk#
            AND I.SVC_INV_NUM               = SI.SVC_INV_NUM
        <!-- 2018/08/21 QC#27684 add End -->
            AND I.GLBL_CMPY_CD              = SI.GLBL_CMPY_CD
            AND SI.EZCANCELFLAG             = '0'
            AND I.INV_NUM                   = IL.INV_NUM
            AND I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD
            AND IL.EZCANCELFLAG             = '0'
            AND SIL.SVC_INV_CHRG_TP_CD      = #siChrgTpCdMC#
            AND IL.SVC_INV_LINE_PK          = SIL.SVC_INV_LINE_PK
            AND IL.INV_NUM                  = SIL.SVC_INV_NUM
            AND IL.GLBL_CMPY_CD             = SIL.GLBL_CMPY_CD
            AND SIL.EZCANCELFLAG            = '0'
            <!-- QC#50104 Add Start -->
            AND SIL.PRNT_SVC_INV_LINE_PK    = SIL_B.SVC_INV_LINE_PK(+) 
            AND SIL.SVC_INV_NUM             = SIL_B.SVC_INV_NUM(+) 
            AND SIL.GLBL_CMPY_CD            = SIL_B.GLBL_CMPY_CD(+)
            AND SIL_B.EZCANCELFLAG(+)       = '0'
            <!-- QC#50104 Add End -->
            AND SIL.SVC_INV_LINE_PK         = SILM.SVC_INV_LINE_PK
            AND SIL.GLBL_CMPY_CD            = SILM.GLBL_CMPY_CD
            AND SILM.EZCANCELFLAG           = '0'
            AND SIL.SVC_INV_LINE_TP_CD      = SILT.SVC_INV_LINE_TP_CD
            AND SILT.FLEET_LINE_FLG         = #fleetFlg# <!-- QC#29371 -->
            AND SIL.GLBL_CMPY_CD            = SILT.GLBL_CMPY_CD
            AND SILT.EZCANCELFLAG           = '0'
            AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
            AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
            AND CCY.EZCANCELFLAG(+)         = '0'
        <isNull property="svcPgm">
            AND SIL.SVC_PGM_MDSE_CD          IS NULL
        </isNull>
        <isNotNull property="svcPgm">
            AND SIL.SVC_PGM_MDSE_CD         = #svcPgm#
        </isNotNull>
        <isNull property="poNo">
            <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))       IS NULL -->
            <!-- QC#50104 Mod -->
            <!-- START 2022/02/21 [QC#59724, MOD] -->
            <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL_B.CUST_ISS_PO_NUM, NVL(SIL_B.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)))) IS NULL -->
            AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
            THEN I.CUST_ISS_PO_NUM
            ELSE UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL_B.CUST_ISS_PO_NUM, NVL(SIL_B.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))))
            END IS NULL
            <!-- END   2022/02/21 [QC#59724, MOD] -->
        </isNull>
        <isNotNull property="poNo">
            <!-- 2019/04/04 QC#30756 Mod Start -->
            <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))       = #poNo# -->
            <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)))       = UPPER(#poNo#) -->
            <!-- 2019/04/04 QC#30756 Mod Start -->
            <!-- QC#50104 Mod -->
            <!-- START 2022/02/21 [QC#59724, MOD] -->
            <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))) = UPPER(#poNo#) -->
            AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
            THEN UPPER(I.CUST_ISS_PO_NUM)
            ELSE UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)))
            END = UPPER(#poNo#)
            <!-- END   2022/02/21 [QC#59724, MOD] -->
        </isNotNull>
        <isEqual property="meterFlg" compareValue="Y"> 
            AND 1=2
        </isEqual>
        <!-- START 2018/02/05 M.Naito [QC#21184, MOD] -->
        AND SILM.GLBL_CMPY_CD           = ML.GLBL_CMPY_CD
        AND SILM.MTR_LB_CD              = ML.MTR_LB_CD
        AND ML.EZCANCELFLAG             = '0'
        <!-- END 2018/02/05 M.Naito [QC#21184, MOD] -->

        AND SILM.SVC_INV_NUM = ADD_MTR.SVC_INV_NUM (+)
        AND SILM.SVC_CONTR_MTR_BLLG_PK = ADD_MTR.SVC_CONTR_MTR_BLLG_PK (+)

        <!-- START 2018/06/11 K.Kitachi [QC#20750, ADD] -->
        <!-- 2019/02/05 QC#29371 SRNO#7 Mod Start -->
        AND SIL.DS_CONTR_BLLG_SCHD_PK   = MACH.DS_CONTR_BLLG_SCHD_PK
        <!-- 2019/02/05 QC#29371 SRNO#7 Mod End -->
        <!-- END 2018/06/11 K.Kitachi [QC#20750, ADD] -->
            
        GROUP BY 
             CCY.CCY_SGN_TXT
            <!-- START 2018/02/05 M.Naito [QC#21184, MOD]] -->
            <!-- ,SILM.MTR_LB_DESC_TXT -->
            ,NVL(ML.INV_PRINT_MTR_LB_DESC_TXT, SILM.MTR_LB_DESC_TXT)
            <!-- END 2018/02/05 M.Naito [QC#21184, MOD] -->
            <!-- START 2018/06/11 K.Kitachi [QC#20750, MOD] -->
            <!-- ,SILM.CONTR_MTR_MULT_RATE -->
            ,MACH.MULTIPLIER
            ,ML.MTR_LB_CD
            ,ML.MTR_LB_SORT_NUM
            <!-- END 2018/06/11 K.Kitachi [QC#20750, MOD] -->

<!--  
        UNION
        
        SELECT
             #type2#                TYPE 
            ,SIL.MDSE_NM            METER_TYPE
            ,NULL                   COPIES_MADE
            ,NULL                   MULTIPLIER
            ,NULL                   ALLOWANCE
            ,SUM(IL.INV_LINE_DEAL_NET_AMT)     AMOUNT
            ,#flgY#                 SPECIAL_CHARGE_FLG
            ,NULL                   MAX_DS_CONTRACT_BLLG_MTR_PK
            ,CCY.CCY_SGN_TXT
        
        FROM
             INV                    I
            ,SVC_INV                SI
            ,INV_LINE               IL
            ,SVC_INV_LINE           SIL
            ,SVC_INV_LINE_TP        SILT
            ,SVC_INV_LINE_ADDL_CHRG SILAC
            ,CCY                    CCY
        
        WHERE
                I.INV_NUM                   = #invNum#
            AND I.GLBL_CMPY_CD              = #glblCmpyCd#
            AND I.EZCANCELFLAG              = '0'
            AND ((  I.SYS_SRC_CD        &lt;&gt; #sysSrcCdNFC#    
                AND I.INV_NUM           = SI.SVC_INV_NUM )
            OR  (   I.SYS_SRC_CD        = #sysSrcCdNFC# 
                AND I.ORIG_INV_NUM      = SI.SVC_INV_NUM )
            )
            AND I.GLBL_CMPY_CD              = SI.GLBL_CMPY_CD
            AND SI.EZCANCELFLAG             = '0'
            AND I.INV_NUM                   = IL.INV_NUM
            AND I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD
            AND IL.EZCANCELFLAG             = '0'
            AND IL.SVC_INV_LINE_PK         = SIL.SVC_INV_LINE_PK
            AND SIL.SVC_INV_CHRG_TP_CD      = #siChrgTpCdAC#
            AND IL.GLBL_CMPY_CD            = SIL.GLBL_CMPY_CD
            AND SIL.EZCANCELFLAG            = '0'
            AND SI.DS_CONTR_PK              = #contrPk#
            AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
            AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
            AND CCY.EZCANCELFLAG(+)         = '0'
        <isNull property="svcPgm">
            AND SIL.SVC_PGM_MDSE_CD          IS NULL
        </isNull>
        <isNotNull property="svcPgm">
            AND SIL.SVC_PGM_MDSE_CD         = #svcPgm#
        </isNotNull>
        <isNull property="poNo">
            AND NVL(I.LEASE_CMPY_PO_NUM, SI.CUST_ISS_PO_NUM)       IS NULL
        </isNull>
        <isNotNull property="poNo">
            AND NVL(I.LEASE_CMPY_PO_NUM, SI.CUST_ISS_PO_NUM)       = #poNo#
        </isNotNull>
            AND SIL.SVC_INV_LINE_TP_CD      = SILT.SVC_INV_LINE_TP_CD
            AND SILT.FLEET_LINE_FLG         = #flgY#
            AND SIL.GLBL_CMPY_CD            = SILT.GLBL_CMPY_CD
            AND SILT.EZCANCELFLAG           = '0'
            AND SIL.SVC_INV_LINE_PK         = SILAC.SVC_INV_LINE_PK (+)
            AND SILAC.PRINT_DTL_FLG (+)     = #flgY#
            AND SIL.GLBL_CMPY_CD            = SILAC.GLBL_CMPY_CD (+)
            AND SILAC.EZCANCELFLAG(+)       = '0'

        GROUP BY 
            CCY.CCY_SGN_TXT
           ,SIL.MDSE_NM        
-->
    UNION
    
        SELECT
             #type1#                                    TYPE
            <!-- 2019/07/02 QC#50972 Mod Start -->
            <!-- ,DIMD.MTR_LB_DESC_TXT                       METER_TYPE -->
            , NVL( 
                ML.INV_PRINT_MTR_LB_DESC_TXT
                , DIMD.MTR_LB_DESC_TXT
            ) METER_TYPE
            <!-- 2019/07/02 QC#50972 Mod End -->
            <!-- START 2017/09/26 K.Kojima [QC#18440,MOD] -->
            <!-- ,SUM(DIMD.BLLG_COPY_QTY)                    COPIES_MADE -->
            ,SUM(NVL(DIMD.TOT_COPY_QTY, 0) - NVL(DIMD.PREV_TOT_COPY_QTY, 0) - NVL(DIMD.TEST_COPY_QTY, 0))    COPIES_MADE
            <!-- END 2017/09/26 K.Kojima [QC#18440,MOD] -->
            ,DIMD.CONTR_MTR_MULT_RATE                   MULTIPLIER
            ,SUM(DIMD.COPY_INCL_QTY)                    ALLOWANCE
            ,SUM(DIMD.MTR_CHRG_DEAL_AMT)                AMOUNT
            ,#flgN#                                     SPECIAL_CHARGE_FLG
            ,NULL                                       MAX_DS_CONTRACT_BLLG_MTR_PK
            ,MAX(DIMD.SVC_CONTR_MTR_BLLG_PK)            SVC_CONTR_MTR_BLLG_PK
            ,CCY.CCY_SGN_TXT
            ,DIMD.MTR_LB_CD
            ,NULL MTR_LB_SORT_NUM
            <!--  START 2022/03/29 L.Mandanas [QC#58350, ADD] -->
            ,SUM(DIMD.BLLG_COPY_QTY) AS BILLABLE_COPIES
            ,SUM(NVL(DIMD.TOT_COPY_QTY, 0) - NVL(DIMD.PREV_TOT_COPY_QTY, 0) - NVL(DIMD.TEST_COPY_QTY, 0))  MULTIPLIED_USAGE
            <!--  END 2022/03/29 L.Mandanas [QC#58350, ADD] -->         
        FROM
        <!-- 2018/08/21 QC#27684 mod Start -->
        <!-- INV                    I -->
            (SELECT INV_NUM,
                    CASE SYS_SRC_CD
                         WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                         ELSE INV_NUM
                    END AS SVC_INV_NUM,
                    GLBL_CMPY_CD,
                    EZCANCELFLAG,
                    LEASE_CMPY_PO_NUM,
                    DEAL_CCY_CD
                    <!-- START 2022/02/21 [QC#59724, ADD] -->
                    ,CUST_ISS_PO_NUM
                    <!-- END   2022/02/21 [QC#59724, ADD] -->
               FROM INV
              WHERE INV_NUM                   = #invNum#
                AND GLBL_CMPY_CD              = #glblCmpyCd#
                AND EZCANCELFLAG              = '0') I
        <!-- 2018/08/21 QC#27684 mod End -->
            ,SVC_INV                SI
            ,INV_LINE               IL
            <!-- QC#52209 2019/07/31 Mod -->
            <!-- ,SVC_INV_LINE           SIL -->
            <!-- ,SVC_INV_LINE           SIL_B -->
            ,INV_PRT_SVC_INV_LINE_WRK SIL
            ,INV_PRT_SVC_INV_LINE_WRK SIL_B
            ,DS_INV_MTR_DTL         DIMD
            ,SVC_INV_LINE_TP        SILT
            ,CCY                    CCY
        <!-- 2019/07/02 QC#50972 Add Start -->
            ,MTR_LB                 ML
        <!-- 2019/07/02 QC#50972 Add End -->

        WHERE
        <!-- 2018/08/21 QC#27684 del Start -->
        <!--
                I.INV_NUM                   = #invNum#
            AND I.GLBL_CMPY_CD              = #glblCmpyCd#
            AND I.EZCANCELFLAG              = '0'
            AND SI.DS_CONTR_PK              = #contrPk#
            AND ((  I.SYS_SRC_CD        &lt;&gt; #sysSrcCdNFC#    
                AND I.INV_NUM           = SI.SVC_INV_NUM )
            OR  (   I.SYS_SRC_CD        = #sysSrcCdNFC# 
                AND I.ORIG_INV_NUM      = SI.SVC_INV_NUM )
            )
        -->
        <!-- 2018/08/21 QC#27684 del End -->
        <!-- 2018/08/21 QC#27684 add Start -->
                SI.DS_CONTR_PK              = #contrPk#
            AND I.SVC_INV_NUM               = SI.SVC_INV_NUM
        <!-- 2018/08/21 QC#27684 add End -->
            AND I.GLBL_CMPY_CD              = SI.GLBL_CMPY_CD
            AND SI.EZCANCELFLAG             = '0'
            AND I.INV_NUM                   = IL.INV_NUM
            AND I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD
            AND IL.EZCANCELFLAG             = '0'
            AND SIL.SVC_INV_CHRG_TP_CD      = #siChrgTpCdMC#
            AND IL.INV_NUM                  = SIL.SVC_INV_NUM
            AND IL.SVC_INV_LINE_PK          = SIL.SVC_INV_LINE_PK
            AND IL.GLBL_CMPY_CD             = SIL.GLBL_CMPY_CD
            AND SIL.EZCANCELFLAG            = '0'
            <!-- QC#50104 Add Start -->
            AND SIL.SVC_INV_NUM             = SIL_B.SVC_INV_NUM(+) 
            AND SIL.PRNT_SVC_INV_LINE_PK    = SIL_B.SVC_INV_LINE_PK(+) 
            AND SIL.GLBL_CMPY_CD            = SIL_B.GLBL_CMPY_CD(+)
            AND SIL_B.EZCANCELFLAG(+)       = '0'
            <!-- QC#50104 Add End -->
            AND SIL.SVC_INV_LINE_TP_CD      = SILT.SVC_INV_LINE_TP_CD
            AND SILT.FLEET_LINE_FLG         = #fleetFlg# <!-- QC#29371 -->
            AND SIL.GLBL_CMPY_CD            = SILT.GLBL_CMPY_CD
            AND SILT.EZCANCELFLAG           = '0'
            AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
            AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
            AND CCY.EZCANCELFLAG(+)         = '0'
            <!-- START 2018/07/25 E.Kameishi [QC#27068,ADD] -->
            AND IL.GLBL_CMPY_CD             = DIMD.GLBL_CMPY_CD
            AND IL.INV_NUM                  = DIMD.INV_NUM
            AND IL.INV_BOL_LINE_NUM         = DIMD.INV_BOL_LINE_NUM
            AND IL.INV_LINE_NUM             = DIMD.INV_LINE_NUM
            AND IL.INV_LINE_SUB_NUM         = DIMD.INV_LINE_SUB_NUM
            AND IL.INV_LINE_SUB_TRX_NUM     = DIMD.INV_LINE_SUB_TRX_NUM
            AND DIMD.EZCANCELFLAG           = '0'
            <!-- END 2018/07/25 E.Kameishi [QC#27068,ADD] -->

            <!-- 2019/07/02 QC#50972 Add Start -->
            AND DIMD.MTR_LB_CD                  = ML.MTR_LB_CD(+)
            AND DIMD.GLBL_CMPY_CD               = ML.GLBL_CMPY_CD(+)
            AND ML.EZCANCELFLAG(+)              = '0'
            <!-- 2019/07/02 QC#50972 Add End -->

        <isNull property="svcPgm">
            AND SIL.SVC_PGM_MDSE_CD          IS NULL
        </isNull>
        <isNotNull property="svcPgm">
            AND SIL.SVC_PGM_MDSE_CD         = #svcPgm#
        </isNotNull>
        <isNull property="poNo">
            <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))       IS NULL -->
            <!-- QC#50104 Mod -->
            <!-- START 2022/02/21 [QC#59724, MOD] -->
            <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)) IS NULL -->
            AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
            THEN I.CUST_ISS_PO_NUM
            ELSE NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))
            END IS NULL
            <!-- END   2022/02/21 [QC#59724, MOD] -->
        </isNull>
        <isNotNull property="poNo">
            <!-- 2019/04/04 QC#30756 Mod Start -->
            <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))       = #poNo# -->
            <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)))       = UPPER(#poNo#) -->
            <!-- 2019/04/04 QC#30756 Mod End -->
            <!-- QC#50104 Mod -->
            <!-- START 2022/02/21 [QC#59724, MOD] -->
            <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))) = UPPER(#poNo#) -->
            AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
            THEN UPPER(I.CUST_ISS_PO_NUM)
            ELSE UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)))
            END = UPPER(#poNo#)
            <!-- END   2022/02/21 [QC#59724, MOD] -->
        </isNotNull>
            <isEqual property="meterFlg" compareValue="N"> 
            AND 1=2
            </isEqual>
        GROUP BY 
             CCY.CCY_SGN_TXT
            <!-- 2019/07/02 QC#50972 Mod Start -->
            <!-- ,DIMD.MTR_LB_DESC_TXT -->
            ,NVL( 
                 ML.INV_PRINT_MTR_LB_DESC_TXT
                 , DIMD.MTR_LB_DESC_TXT
             )
            <!-- 2019/07/02 QC#50972 Mod End -->
            ,DIMD.CONTR_MTR_MULT_RATE
            ,DIMD.MTR_LB_CD
        
        )
    ORDER BY 
        MTR_LB_SORT_NUM
    </statement>

    <!-- START 2018/07/25 E.Kameishi [QC#27068,MOD] -->
    <statement id="getSmryXsEx" parameterClass="Map" resultClass="Map">
    SELECT
          QTY
         ,RATE
    FROM
        (
        SELECT
             TO_CHAR(SUM(SILXM.XS_MTR_COPY_QTY), #qtyFormat#) QTY
            ,CASE WHEN SILXM.XS_MTR_AMT_RATE IS NOT NULL THEN
                CASE WHEN SILXM.XS_MTR_AMT_RATE &lt; 0 THEN
                    '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(SILXM.XS_MTR_AMT_RATE), #rateFormat#)
                ELSE
                    CCY.CCY_SGN_TXT || TO_CHAR(SILXM.XS_MTR_AMT_RATE, #rateFormat#)
                END
             ELSE
                ''
             END    RATE
            ,SUM(SILXM.ORIG_XS_MTR_FROM_COPY_QTY) FROM_QTY
            
        FROM
             SVC_INV_LINE_XS_MTR            SILXM
        <!-- START 2019/06/04 [QC#50689,MOD] --> 
        <!--,INV I-->
            ,(SELECT INV_NUM,
                    CASE SYS_SRC_CD
                         WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                         ELSE INV_NUM
                    END AS SVC_INV_NUM,
                    GLBL_CMPY_CD,
                    EZCANCELFLAG,
                    LEASE_CMPY_PO_NUM,
                    DEAL_CCY_CD
               FROM INV
              WHERE INV_NUM                   = #svcInvNum#
                AND GLBL_CMPY_CD              = #glblCmpyCd#
                AND EZCANCELFLAG              = '0') I
       <!-- END 2019/06/04 [QC#50689,MOD] -->
            ,CCY CCY
        WHERE
                SILXM.GLBL_CMPY_CD           = #glblCmpyCd#
            AND SILXM.GLBL_CMPY_CD           = I.GLBL_CMPY_CD
       <!-- START 2019/06/04 [QC#50689,MOD] -->
       <!-- AND SILXM.SVC_INV_NUM            = I.INV_NUM-->
            AND SILXM.SVC_INV_NUM            = I.SVC_INV_NUM
       <!-- END 2019/06/04 [QC#50689,MOD] -->
            AND I.EZCANCELFLAG               = '0'
            AND I.GLBL_CMPY_CD               = CCY.GLBL_CMPY_CD(+)
            AND I.DEAL_CCY_CD                = CCY.CCY_CD(+)
            AND CCY.EZCANCELFLAG(+)          = '0'
        <isNull property="dsContrBllgMtrPk">
            AND SILXM.DS_CONTR_BLLG_MTR_PK    IS NULL
        </isNull>
        <isNotNull property="dsContrBllgMtrPk">
            AND SILXM.DS_CONTR_BLLG_MTR_PK   = #dsContrBllgMtrPk#
        </isNotNull>
        <isNull property="svcContrMtrBllgPk">
            AND SILXM.SVC_CONTR_MTR_BLLG_PK    IS NULL
        </isNull>
        <isNotNull property="svcContrMtrBllgPk">
            AND SILXM.SVC_CONTR_MTR_BLLG_PK   = #svcContrMtrBllgPk#
        </isNotNull>
        <isEqual property="meterFlg" compareValue="Y"> 
            AND 1=2
        </isEqual>
            AND SILXM.EZCANCELFLAG           = '0'
       <!-- START 2019/06/04 [QC#50689,DEL] -->
       <!-- AND SILXM.SVC_INV_NUM            = #svcInvNum#-->
       <!-- END 2019/06/04 [QC#50689,DEL] -->
        GROUP BY
            SILXM.XS_MTR_AMT_RATE
           ,CCY.CCY_SGN_TXT
        UNION
        SELECT
             TO_CHAR(NVL(DIMD.TOT_COPY_QTY, 0) - NVL(DIMD.PREV_TOT_COPY_QTY, 0) - NVL(DIMD.TEST_COPY_QTY, 0) - NVL(DIMD.COPY_INCL_QTY, 0), #qtyFormat#) QTY
<!-- START 2018/11/08 T.Ogura [QC#29077,MOD] -->
<!--        ,TO_CHAR(DIMD.XS_MTR_AMT_RATE, #rateFormat#)     RATE -->
            ,CCY.CCY_SGN_TXT || TO_CHAR(DIMD.XS_MTR_AMT_RATE, #rateFormat#) RATE
<!-- END   2018/11/08 T.Ogura [QC#29077,MOD] -->
            ,DIMD.PREV_TOT_COPY_QTY                          FROM_QTY
        FROM
             DS_INV_MTR_DTL DIMD
            ,INV            I
            ,CCY            CCY
        WHERE
                DIMD.GLBL_CMPY_CD           = #glblCmpyCd#
            AND DIMD.GLBL_CMPY_CD           = I.GLBL_CMPY_CD
            AND DIMD.INV_NUM                = I.INV_NUM
            AND I.EZCANCELFLAG              = '0'
            AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
            AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
            AND CCY.EZCANCELFLAG(+)         = '0'
        <isNull property="svcContrMtrBllgPk">
            AND DIMD.SVC_CONTR_MTR_BLLG_PK    IS NULL
        </isNull>
        <isNotNull property="svcContrMtrBllgPk">
            AND DIMD.SVC_CONTR_MTR_BLLG_PK   = #svcContrMtrBllgPk#
        </isNotNull>
        <isEqual property="meterFlg" compareValue="N"> 
            AND 1=2
        </isEqual>
            AND DIMD.EZCANCELFLAG           = '0'
            AND DIMD.INV_NUM            = #svcInvNum#
        )
    ORDER BY
        FROM_QTY
    </statement>

    <statement id="getSmryXs" parameterClass="Map" resultClass="Map">
    SELECT
          QTY
         ,RATE_TXT
         ,RATE
    FROM
        (
        SELECT
             TO_CHAR(SUM(SILXM.XS_MTR_COPY_QTY), #qtyFormat#) QTY
             <!-- Mod Start 2019/02/06 QC#29371 -->
            ,CASE WHEN SILXM.XS_MTR_AMT_RATE IS NOT NULL THEN
                CASE WHEN SILXM.XS_MTR_AMT_RATE &lt; 0 THEN
                    <!-- '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(SILXM.XS_MTR_AMT_RATE), #rateFormat#) -->
                    CASE WHEN MOD(SILXM.XS_MTR_AMT_RATE, 1) = 0 THEN
                        '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(SILXM.XS_MTR_AMT_RATE), #rateFormat2#)
                    ELSE
                        '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(SILXM.XS_MTR_AMT_RATE), #rateFormat#)
                    END
                ELSE
                    <!-- CCY.CCY_SGN_TXT || TO_CHAR(SILXM.XS_MTR_AMT_RATE, #rateFormat#) -->
                    CASE WHEN MOD(SILXM.XS_MTR_AMT_RATE, 1) = 0 THEN
                        CCY.CCY_SGN_TXT || TO_CHAR(SILXM.XS_MTR_AMT_RATE, #rateFormat2#)
                    ELSE
                        CCY.CCY_SGN_TXT || TO_CHAR(SILXM.XS_MTR_AMT_RATE, #rateFormat#)
                    END
                END
             ELSE
                 ''
             END    RATE_TXT
             <!-- Mod End 2019/02/06 QC#29371 -->
            ,SILXM.XS_MTR_AMT_RATE  RATE
            ,SUM(SILXM.ORIG_XS_MTR_FROM_COPY_QTY) FROM_QTY
        FROM
             SVC_INV_LINE_XS_MTR            SILXM
        <!-- START 2019/06/04 [QC#50689,MOD] --> 
        <!--,INV I-->
            ,(SELECT INV_NUM,
                    CASE SYS_SRC_CD
                         WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                         ELSE INV_NUM
                    END AS SVC_INV_NUM,
                    GLBL_CMPY_CD,
                    EZCANCELFLAG,
                    LEASE_CMPY_PO_NUM,
                    DEAL_CCY_CD
               FROM INV
              WHERE INV_NUM                   = #svcInvNum#
                AND GLBL_CMPY_CD              = #glblCmpyCd#
                AND EZCANCELFLAG              = '0') I
       <!-- END 2019/06/04 [QC#50689,MOD] -->
            ,CCY CCY
        WHERE
       <!-- START 2019/06/04 [QC#50689,MOD] -->
       <!--     SILXM.GLBL_CMPY_CD           = #glblCmpyCd#-->
       <!-- AND SILXM.GLBL_CMPY_CD           = I.GLBL_CMPY_CD-->
       <!-- AND SILXM.SVC_INV_NUM            = I.INV_NUM-->
                SILXM.GLBL_CMPY_CD           = I.GLBL_CMPY_CD
            AND SILXM.SVC_INV_NUM            = I.SVC_INV_NUM
       <!-- END 2019/06/04 [QC#50689,MOD] -->
            AND I.EZCANCELFLAG               = '0'
            AND I.GLBL_CMPY_CD               = CCY.GLBL_CMPY_CD(+)
            AND I.DEAL_CCY_CD                = CCY.CCY_CD(+)
            AND CCY.EZCANCELFLAG(+)          = '0'
        <isNull property="dsContrBllgMtrPk">
            AND SILXM.DS_CONTR_BLLG_MTR_PK    IS NULL
        </isNull>
        <isNotNull property="dsContrBllgMtrPk">
            AND SILXM.DS_CONTR_BLLG_MTR_PK   = #dsContrBllgMtrPk#
        </isNotNull>
            AND SILXM.EZCANCELFLAG           = '0'
<!--            AND SILXM.SVC_INV_NUM            = #svcInvNum#--> <!-- 2019/06/04 [QC#50689,DEL] -->
        <isEqual property="meterFlg" compareValue="Y"> 
            AND 1=2
        </isEqual>
        GROUP BY
            SILXM.XS_MTR_AMT_RATE
           ,CCY.CCY_SGN_TXT
        UNION
        SELECT
             TO_CHAR(NVL(DIMD.TOT_COPY_QTY, 0) - NVL(DIMD.PREV_TOT_COPY_QTY, 0) - NVL(DIMD.TEST_COPY_QTY, 0) - NVL(DIMD.COPY_INCL_QTY, 0), #qtyFormat#) QTY
<!-- START 2018/11/08 T.Ogura [QC#29077,MOD] -->
<!--        ,TO_CHAR(DIMD.XS_MTR_AMT_RATE, #rateFormat#)     RATE_TXT -->
            <!-- Mod Start 2019/02/06 QC#29371 -->
            <!-- ,CCY.CCY_SGN_TXT || TO_CHAR(DIMD.XS_MTR_AMT_RATE, #rateFormat#) RATE_TXT -->
            ,CASE WHEN MOD(DIMD.XS_MTR_AMT_RATE, 1) = 0 THEN
                CCY.CCY_SGN_TXT ||TO_CHAR(DIMD.XS_MTR_AMT_RATE, #rateFormat2#)
             ELSE
                CCY.CCY_SGN_TXT ||TO_CHAR(DIMD.XS_MTR_AMT_RATE, #rateFormat#)
             END AS RATE_TXT
            <!-- Mod End 2019/02/06 QC#29371 -->
<!-- END   2018/11/08 T.Ogura [QC#29077,MOD] -->
            ,DIMD.XS_MTR_AMT_RATE                            RATE
            ,DIMD.PREV_TOT_COPY_QTY                          FROM_QTY
        FROM
             DS_INV_MTR_DTL DIMD
            ,INV            I
            ,CCY            CCY
        WHERE
                DIMD.GLBL_CMPY_CD           = #glblCmpyCd#
            AND DIMD.GLBL_CMPY_CD           = I.GLBL_CMPY_CD
            AND DIMD.INV_NUM                = I.INV_NUM
            AND I.EZCANCELFLAG              = '0'
            AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
            AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
            AND CCY.EZCANCELFLAG(+)         = '0'
        <isNull property="svcContrMtrBllgPk">
            AND DIMD.SVC_CONTR_MTR_BLLG_PK    IS NULL
        </isNull>
        <isNotNull property="svcContrMtrBllgPk">
            AND DIMD.SVC_CONTR_MTR_BLLG_PK   = #svcContrMtrBllgPk#
        </isNotNull>
        <isEqual property="meterFlg" compareValue="N"> 
            AND 1=2
        </isEqual>
            AND DIMD.EZCANCELFLAG           = '0'
            AND DIMD.INV_NUM            = #svcInvNum#
        )
    ORDER BY
        FROM_QTY
    </statement>
    <!-- END 2018/07/25 E.Kameishi [QC#27068,MOD] -->
    <statement id="getSmryXsForAgg" parameterClass="Map" resultClass="Map">
    SELECT
          QTY
         ,RATE_TXT
         ,RATE
    FROM
        (
        SELECT
             TO_CHAR(SUM(SILXM.XS_MTR_COPY_QTY), #qtyFormat#) QTY
            ,CASE WHEN SILXM.XS_MTR_AMT_RATE IS NOT NULL THEN
                CASE WHEN SILXM.XS_MTR_AMT_RATE &lt; 0 THEN
                    CASE WHEN MOD(SILXM.XS_MTR_AMT_RATE, 1) = 0 THEN
                        '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(SILXM.XS_MTR_AMT_RATE), #rateFormat2#)
                    ELSE
                        '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(SILXM.XS_MTR_AMT_RATE), #rateFormat#)
                    END
                ELSE
                    CASE WHEN MOD(SILXM.XS_MTR_AMT_RATE, 1) = 0 THEN
                        CCY.CCY_SGN_TXT || TO_CHAR(SILXM.XS_MTR_AMT_RATE, #rateFormat2#)
                    ELSE
                        CCY.CCY_SGN_TXT || TO_CHAR(SILXM.XS_MTR_AMT_RATE, #rateFormat#)
                    END
                END
             ELSE
                 ''
             END    RATE_TXT
            ,SILXM.XS_MTR_AMT_RATE  RATE
            ,SUM(SILXM.ORIG_XS_MTR_FROM_COPY_QTY) FROM_QTY
        FROM
             SVC_INV_LINE_XS_MTR            SILXM
            ,SVC_INV_LINE_MTR               SILM
        <!-- START 2019/06/04 [QC#50689,MOD] --> 
        <!--,INV I-->
            ,(SELECT INV_NUM,
                    CASE SYS_SRC_CD
                         WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                         ELSE INV_NUM
                    END AS SVC_INV_NUM,
                    GLBL_CMPY_CD,
                    EZCANCELFLAG,
                    LEASE_CMPY_PO_NUM,
                    DEAL_CCY_CD
               FROM INV
              WHERE INV_NUM                   = #svcInvNum#
                AND GLBL_CMPY_CD              = #glblCmpyCd#
                AND EZCANCELFLAG              = '0') I
       <!-- END 2019/06/04 [QC#50689,MOD] -->
            ,CCY CCY
        WHERE
       <!-- START 2019/06/04 [QC#50689,MOD] -->
       <!--     SILXM.GLBL_CMPY_CD           = #glblCmpyCd#-->
       <!-- AND SILXM.EZCANCELFLAG           = '0'-->
       <!-- AND SILXM.SVC_INV_NUM            = #svcInvNum#-->
                SILXM.SVC_INV_NUM            = I.SVC_INV_NUM
            AND SILXM.EZCANCELFLAG           = '0'
       <!-- START 2019/06/04 [QC#50689,MOD] -->
            AND SILXM.GLBL_CMPY_CD           = SILM.GLBL_CMPY_CD
            AND SILXM.EZCANCELFLAG           = SILM.EZCANCELFLAG
            AND SILXM.SVC_INV_LINE_MTR_PK    = SILM.SVC_INV_LINE_MTR_PK
            AND SILM.MTR_LB_CD               = #mtrLbCd#
            AND SILXM.GLBL_CMPY_CD           = I.GLBL_CMPY_CD
<!--            AND SILXM.SVC_INV_NUM            = I.INV_NUM-->  <!-- 2019/06/04 [QC#50689,DEL] -->
            AND I.EZCANCELFLAG               = '0'
            AND I.GLBL_CMPY_CD               = CCY.GLBL_CMPY_CD(+)
            AND I.DEAL_CCY_CD                = CCY.CCY_CD(+)
            AND CCY.EZCANCELFLAG(+)          = '0'
        <isEqual property="meterFlg" compareValue="Y"> 
            AND 1=2
        </isEqual>
        GROUP BY
            SILXM.XS_MTR_AMT_RATE
           ,CCY.CCY_SGN_TXT
        UNION
        SELECT
             TO_CHAR(SUM(NVL(DIMD.TOT_COPY_QTY, 0) - NVL(DIMD.PREV_TOT_COPY_QTY, 0) - NVL(DIMD.TEST_COPY_QTY, 0) - NVL(DIMD.COPY_INCL_QTY, 0)), #qtyFormat#) QTY
            ,CASE WHEN MOD(DIMD.XS_MTR_AMT_RATE, 1) = 0 THEN
                CCY.CCY_SGN_TXT ||TO_CHAR(DIMD.XS_MTR_AMT_RATE, #rateFormat2#)
             ELSE
                CCY.CCY_SGN_TXT ||TO_CHAR(DIMD.XS_MTR_AMT_RATE, #rateFormat#)
             END AS RATE_TXT
            ,DIMD.XS_MTR_AMT_RATE                            RATE
            ,SUM(DIMD.PREV_TOT_COPY_QTY)                     FROM_QTY
        FROM
             DS_INV_MTR_DTL DIMD
            ,INV            I
            ,CCY            CCY
        WHERE
                DIMD.GLBL_CMPY_CD            = #glblCmpyCd#
            AND DIMD.EZCANCELFLAG            = '0'
            AND DIMD.INV_NUM                 = #svcInvNum#
            AND DIMD.MTR_LB_CD               = #mtrLbCd#
            AND DIMD.GLBL_CMPY_CD            = I.GLBL_CMPY_CD
            AND DIMD.INV_NUM                 = I.INV_NUM
            AND I.EZCANCELFLAG               = '0'
            AND I.GLBL_CMPY_CD               = CCY.GLBL_CMPY_CD(+)
            AND I.DEAL_CCY_CD                = CCY.CCY_CD(+)
            AND CCY.EZCANCELFLAG(+)          = '0'
        <isEqual property="meterFlg" compareValue="N"> 
            AND 1=2
        </isEqual>
        GROUP BY
            DIMD.XS_MTR_AMT_RATE
           ,CCY.CCY_SGN_TXT
        )
    ORDER BY
        FROM_QTY
    </statement>

    <statement id="getMaintSubTotal" parameterClass="Map" resultClass="Map">
        <!-- QC#52618 2019/08/29 Add-->
        WITH INV_LINE_RELEN AS (
           SELECT
              IL.GLBL_CMPY_CD
              , IL.INV_NUM 
              , IL.INV_BOL_LINE_NUM
              , IL.INV_LINE_NUM
              , IL.INV_LINE_SUB_NUM
              , IL.INV_LINE_SUB_TRX_NUM
              , IL.INV_LINE_DEAL_TAX_AMT
              , IL.INV_LINE_DEAL_NET_AMT
              , IB.SHIP_TO_CUST_ACCT_CD
              , CASE WHEN IB.DROP_SHIP_FLG = 'Y' THEN IB.SHIP_TO_LOC_NM ELSE IB.SHIP_TO_CUST_ACCT_NM END SHIP_TO_CUST_ACCT_NM
              , SIL.SVC_INV_LINE_PK
              , SIL.PRNT_SVC_INV_LINE_PK
              , SIL.SHIP_TO_CUST_CD
              , SIL.CUST_ISS_PO_NUM
              , SIL.FIRST_BLLG_ATTRB_VAL_TXT
              , SIL.SCD_BLLG_ATTRB_VAL_TXT
              , SIL.THIRD_BLLG_ATTRB_VAL_TXT
              , SIL.FRTH_BLLG_ATTRB_VAL_TXT
              , SIL.FIFTH_BLLG_ATTRB_VAL_TXT
              , SIL.SIXTH_BLLG_ATTRB_VAL_TXT
           FROM INV_LINE IL
              , INV_BOL IB
              , INV_PRT_SVC_INV_LINE_WRK SIL
           WHERE IL.GLBL_CMPY_CD             = #glblCmpyCd#
             AND IL.INV_NUM                  = #invNum#
             AND IL.EZCANCELFLAG             = '0'
             AND IL.GLBL_CMPY_CD             = IB.GLBL_CMPY_CD
             AND IL.INV_NUM                  = IB.INV_NUM
             AND IL.INV_BOL_LINE_NUM         = IB.INV_BOL_LINE_NUM
             AND IB.EZCANCELFLAG             = '0'
             AND IL.INV_NUM                  = SIL.SVC_INV_NUM
             AND IL.SVC_INV_LINE_PK          = SIL.SVC_INV_LINE_PK
             AND IL.GLBL_CMPY_CD             = SIL.GLBL_CMPY_CD
             AND SIL.EZCANCELFLAG            = '0'
        )
        SELECT
        <!-- START 2019/07/30 S.Takami [QC#52141,MOD] -->
        <!--  NVL(SIL_P.SHIP_TO_CUST_CD, SIL.SHIP_TO_CUST_CD)               SHIP_TO_CODE -->
        <!-- ,MAX(NVL(STC_P.LOC_NM, STC.LOC_NM))                            SHIP_TO_NAME -->
        <!-- ,MAX(NVL(STC_P.FIRST_LINE_ADDR, STC.FIRST_LINE_ADDR))          SHIP_TO_FST_ADDR -->
        <!-- ,MAX(NVL(STC_P.SCD_LINE_ADDR, STC.SCD_LINE_ADDR)) -->
        <!--     || MAX(NVL(STC_P.THIRD_LINE_ADDR, STC.THIRD_LINE_ADDR)) -->
        <!--     || MAX(NVL(STC_P.FRTH_LINE_ADDR, STC.FRTH_LINE_ADDR))      SHIP_TO_SCD_ADDR -->
        <!-- ,MAX(NVL(STC_P.CTY_ADDR, STC.CTY_ADDR))                        SHIP_TO_CITY -->
        <!-- ,MAX(NVL(STC_P.ST_CD, STC.ST_CD))                              SHIP_TO_ST -->
        <!-- ,MAX(NVL(STC_P.POST_CD, STC.POST_CD))                          SHIP_TO_POST -->
         -- FOR getMaintMach, Ship_To_Cust_Cd mast be taken from SVC_INV_LINE.
         NVL(IL_B.SHIP_TO_CUST_CD, IL.SHIP_TO_CUST_CD)                 SHIP_TO_CODE
        ,MAX(STC.LOC_NM)                                               SHIP_TO_NAME
        ,MAX(STC.FIRST_LINE_ADDR)                                      SHIP_TO_FST_ADDR
        ,MAX(STC.SCD_LINE_ADDR)
            || MAX(STC.THIRD_LINE_ADDR)
            || MAX(STC.FRTH_LINE_ADDR)                                 SHIP_TO_SCD_ADDR
        ,MAX(STC.CTY_ADDR)                                             SHIP_TO_CITY
        ,MAX(STC.ST_CD)                                                SHIP_TO_ST
        ,MAX(STC.POST_CD)                                              SHIP_TO_POST
        <!-- END 2019/07/30 S.Takami [QC#52141,MOD] -->
        <!-- ,NVL(LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))                    PO_NO -->
        <!-- START 2022/02/21 [QC#59724, MOD] -->
        <!-- ,UPPER(NVL(LEASE_CMPY_PO_NUM, NVL(NVL2(IL.PRNT_SVC_INV_LINE_PK, IL_B.CUST_ISS_PO_NUM, IL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))) PO_NO -->
        ,CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
         THEN I.CUST_ISS_PO_NUM
         ELSE UPPER(NVL(LEASE_CMPY_PO_NUM, NVL(NVL2(IL.PRNT_SVC_INV_LINE_PK, IL_B.CUST_ISS_PO_NUM, IL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)))
         END  AS PO_NO
        <!-- END   2022/02/21 [QC#59724, MOD] -->
        ,IL.FIRST_BLLG_ATTRB_VAL_TXT                                  CUST_CODES1
        ,IL.SCD_BLLG_ATTRB_VAL_TXT                                    CUST_CODES2
        ,IL.THIRD_BLLG_ATTRB_VAL_TXT                                  CUST_CODES3
        ,IL.FRTH_BLLG_ATTRB_VAL_TXT                                   CUST_CODES4
        ,IL.FIFTH_BLLG_ATTRB_VAL_TXT                                  CUST_CODES5
        ,IL.SIXTH_BLLG_ATTRB_VAL_TXT                                  CUST_CODES6
        <isEqual property="taxDtlFlg" compareValue="Y">
        , NVL(SUM(DILTD1.DEAL_SLS_TAX_AMT),0)                          STATE_TAX
        , CASE WHEN NVL(SUM(DILTD1.DEAL_SLS_TAX_AMT),0) &lt; 0 THEN
            '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(NVL(SUM(DILTD1.DEAL_SLS_TAX_AMT),0)), #amtFormat# )
          ELSE
            CCY.CCY_SGN_TXT || TO_CHAR(NVL(SUM(DILTD1.DEAL_SLS_TAX_AMT),0), #amtFormat# )
          END    STATE_TAX_TXT
        <!-- QC#50884 2019/06/25 -->
        <!-- , NVL(SUM(DILTD2.DEAL_SLS_TAX_AMT),0)                          COUNTY_TAX_TXT -->
        , NVL(SUM(DILTD2.DEAL_SLS_TAX_AMT),0)                          COUNTY_TAX
        , CASE WHEN NVL(SUM(DILTD2.DEAL_SLS_TAX_AMT),0) &lt; 0 THEN
            '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(NVL(SUM(DILTD2.DEAL_SLS_TAX_AMT),0)), #amtFormat# )
          ELSE
            CCY.CCY_SGN_TXT || TO_CHAR(NVL(SUM(DILTD2.DEAL_SLS_TAX_AMT),0), #amtFormat# )
          END    COUNTY_TAX_TXT
        , NVL(SUM(DILTD3.DEAL_SLS_TAX_AMT),0)                          CITY_TAX
        , CASE WHEN NVL(SUM(DILTD3.DEAL_SLS_TAX_AMT),0) &lt; 0 THEN
            '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(NVL(SUM(DILTD3.DEAL_SLS_TAX_AMT),0)), #amtFormat#)
          ELSE
            CCY.CCY_SGN_TXT || TO_CHAR(NVL(SUM(DILTD3.DEAL_SLS_TAX_AMT),0), #amtFormat#)
          END    CITY_TAX_TXT
        </isEqual>
        <isNotEqual property="taxDtlFlg" compareValue="Y">
        ,NULL                                       STATE_TAX
        ,NULL                                       STATE_TAX_TXT
        ,NULL                                       COUNTY_TAX
        ,NULL                                       COUNTY_TAX_TXT
        ,NULL                                       CITY_TAX
        ,NULL                                       CITY_TAX_TXT
        </isNotEqual>
<!-- START 2018/11/08 T.Ogura [QC#29077,MOD] -->
<!--    , SUM(SIL.INV_LINE_DEAL_TAX_AMT)                                        TOTAL_TAX -->
        , SUM(IL.INV_LINE_DEAL_TAX_AMT)                                         TOTAL_TAX
<!-- END   2018/11/08 T.Ogura [QC#29077,MOD] -->
<!-- START 2018/11/08 T.Ogura [QC#29077,MOD] -->
<!--    , CASE WHEN SUM(SIL.INV_LINE_DEAL_TAX_AMT) IS NOT NULL THEN -->
<!--        CASE WHEN SUM(SIL.INV_LINE_DEAL_TAX_AMT) &lt; 0 THEN -->
<!--            '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(SUM(SIL.INV_LINE_DEAL_TAX_AMT)), #amtFormat# ) -->
<!--        ELSE -->
<!--            CCY.CCY_SGN_TXT || TO_CHAR(SUM(SIL.INV_LINE_DEAL_TAX_AMT), #amtFormat# ) -->
<!--        END -->
<!--      ELSE -->
<!--        '' -->
<!--      END    TOTAL_TAX_TXT -->
        , CASE WHEN SUM(IL.INV_LINE_DEAL_TAX_AMT) IS NOT NULL THEN
            CASE WHEN SUM(IL.INV_LINE_DEAL_TAX_AMT) &lt; 0 THEN
                '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(SUM(IL.INV_LINE_DEAL_TAX_AMT)), #amtFormat# )
            ELSE
                CCY.CCY_SGN_TXT || TO_CHAR(SUM(IL.INV_LINE_DEAL_TAX_AMT), #amtFormat# )
            END
          ELSE
            ''
          END    TOTAL_TAX_TXT
<!-- END   2018/11/08 T.Ogura [QC#29077,MOD] -->
<!-- START 2018/11/08 T.Ogura [QC#29077,MOD] -->
<!--    , SUM(SIL.INV_LINE_DEAL_TAX_AMT + SIL.INV_LINE_DEAL_NET_AMT)            TOTAL_AMOUNT -->
        , SUM(IL.INV_LINE_DEAL_TAX_AMT + IL.INV_LINE_DEAL_NET_AMT)              TOTAL_AMOUNT
<!-- END   2018/11/08 T.Ogura [QC#29077,MOD] -->
<!-- START 2018/11/08 T.Ogura [QC#29077,MOD] -->
<!--    , CASE WHEN SUM(SIL.INV_LINE_DEAL_TAX_AMT + SIL.INV_LINE_DEAL_NET_AMT) IS NOT NULL THEN -->
<!--        CASE WHEN SUM(SIL.INV_LINE_DEAL_TAX_AMT + SIL.INV_LINE_DEAL_NET_AMT) &lt; 0 THEN -->
<!--            '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(SUM(SIL.INV_LINE_DEAL_TAX_AMT + SIL.INV_LINE_DEAL_NET_AMT)), #amtFormat#) -->
<!--        ELSE -->
<!--            CCY.CCY_SGN_TXT || TO_CHAR(SUM(SIL.INV_LINE_DEAL_TAX_AMT + SIL.INV_LINE_DEAL_NET_AMT), #amtFormat#) -->
<!--        END -->
<!--      ELSE -->
<!--        '' -->
<!--      END    TOTAL_AMOUNT_TXT -->
        , CASE WHEN SUM(IL.INV_LINE_DEAL_TAX_AMT + IL.INV_LINE_DEAL_NET_AMT) IS NOT NULL THEN
            CASE WHEN SUM(IL.INV_LINE_DEAL_TAX_AMT + IL.INV_LINE_DEAL_NET_AMT) &lt; 0 THEN
                '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(SUM(IL.INV_LINE_DEAL_TAX_AMT + IL.INV_LINE_DEAL_NET_AMT)), #amtFormat#)
            ELSE
                CCY.CCY_SGN_TXT || TO_CHAR(SUM(IL.INV_LINE_DEAL_TAX_AMT + IL.INV_LINE_DEAL_NET_AMT), #amtFormat#)
            END
          ELSE
            ''
          END    TOTAL_AMOUNT_TXT
<!-- END   2018/11/08 T.Ogura [QC#29077,MOD] -->
        <!-- QC#52618 2019/08/29 Mod Start-->
        <!-- QC#20788 add Start -->
        <!-- ,IB.SHIP_TO_CUST_ACCT_CD                SHIP_TO_CUST_ACCT_CD -->
        <!-- QC#26919 -->
        <!--,IB.SHIP_TO_CUST_ACCT_NM                SHIP_TO_CUST_ACCT_NM-->
        <!-- ,CASE WHEN IB.DROP_SHIP_FLG = 'Y' THEN IB.SHIP_TO_LOC_NM ELSE IB.SHIP_TO_CUST_ACCT_NM END SHIP_TO_CUST_ACCT_NM -->
        <!-- QC#20788 add End -->
        , NVL(IL_B.SHIP_TO_CUST_ACCT_CD, IL.SHIP_TO_CUST_ACCT_CD)                 SHIP_TO_CUST_ACCT_CD
        , NVL(IL_B.SHIP_TO_CUST_ACCT_NM, IL.SHIP_TO_CUST_ACCT_NM)                 SHIP_TO_CUST_ACCT_NM
        <!-- QC#52618 2019/08/29 Mod End-->
    
    FROM 
        <!-- 2018/08/21 QC#27684 Mod Start -->
        <!-- INV                        I -->
        (
             SELECT
                   INV_NUM,
                   CASE SYS_SRC_CD
                      WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                      ELSE INV_NUM
                   END  AS SVC_INV_NUM,
                   GLBL_CMPY_CD,
                   EZCANCELFLAG,
                   LEASE_CMPY_PO_NUM,
                   DEAL_CCY_CD
                   <!-- START 2022/02/21 [QC#59724, ADD] -->
                   ,CUST_ISS_PO_NUM
                   <!-- END   2022/02/21 [QC#59724, ADD] -->
             FROM
                   INV
             WHERE
                   INV_NUM = #invNum#
               AND GLBL_CMPY_CD      = #glblCmpyCd#
               AND EZCANCELFLAG      = '0'
        ) I
        <!-- 2018/08/21 QC#27684 Mod End -->
        ,SVC_INV                    SI
        <!-- QC#52618 2019/08/29 Mod Start-->
        <!-- ,INV_LINE                   IL -->
        <!-- QC#52209 2019/07/31 Mod -->
        <!-- ,SVC_INV_LINE               SIL -->
        <!-- ,SVC_INV_LINE               SIL_B -->
        <!-- ,INV_PRT_SVC_INV_LINE_WRK     SIL -->
        <!-- ,INV_PRT_SVC_INV_LINE_WRK     SIL_B -->
        ,INV_LINE_RELEN             IL
        ,INV_LINE_RELEN             IL_B
        <!-- QC#52618 2019/08/29 Mod End-->

        ,DS_INV_LINE_TAX_DTL        DILTD1
        ,DS_INV_LINE_TAX_DTL        DILTD2
        ,DS_INV_LINE_TAX_DTL        DILTD3
        ,SHIP_TO_CUST               STC
        ,CCY                        CCY
        <!-- START 2019/07/30 S.Takami [QC#52141,DEL] -->
        <!-- ,SVC_INV_LINE               SIL_P -->
        <!-- ,SHIP_TO_CUST               STC_P -->
        <!-- END 2019/07/30 S.Takami [QC#52141,DEL] -->
        <!-- QC#52618 2019/08/29 Del Start-->
        <!-- QC#20788 add Start -->
        <!-- ,INV_BOL                IB -->
        <!-- QC#20788 add End -->
    
    WHERE
        <!-- 2018/08/21 QC#27684 Mod Start -->
        <!--
            I.INV_NUM                   = #invNum#
        AND I.GLBL_CMPY_CD              = #glblCmpyCd#
        AND I.EZCANCELFLAG              = '0' 
        AND ((      I.SYS_SRC_CD        &lt;&gt; #sysSrcCdNFC#    
                AND I.INV_NUM           = SI.SVC_INV_NUM )
            OR  (   I.SYS_SRC_CD        = #sysSrcCdNFC# 
                AND I.ORIG_INV_NUM      = SI.SVC_INV_NUM )
            )
        -->
            I.SVC_INV_NUM               = SI.SVC_INV_NUM
        <!-- 2018/08/21 QC#27684 Mod End -->
        AND I.GLBL_CMPY_CD              = SI.GLBL_CMPY_CD
        AND SI.EZCANCELFLAG             = '0'
        <!-- QC#52618 2019/08/29 Mod Start-->
        <!-- AND I.INV_NUM                   = IL.INV_NUM -->
        <!-- AND I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD -->
        <!-- AND IL.EZCANCELFLAG             = '0' -->
        <!-- QC#20788 add Start -->
        <!-- AND IL.GLBL_CMPY_CD             = IB.GLBL_CMPY_CD -->
        <!-- AND IL.INV_NUM                  = IB.INV_NUM -->
        <!-- AND IL.INV_BOL_LINE_NUM         = IB.INV_BOL_LINE_NUM -->
        <!-- AND IB.EZCANCELFLAG             = '0' -->
        <!-- QC#20788 add End -->
        <!-- AND IL.INV_NUM                  = SIL.SVC_INV_NUM -->
        <!-- AND IL.SVC_INV_LINE_PK          = SIL.SVC_INV_LINE_PK -->
        <!-- AND IL.GLBL_CMPY_CD             = SIL.GLBL_CMPY_CD -->
        <!-- QC#50104 Add Start -->
        <!-- AND SIL.SVC_INV_NUM             = SIL_B.SVC_INV_NUM(+)  -->
        <!-- AND SIL.PRNT_SVC_INV_LINE_PK    = SIL_B.SVC_INV_LINE_PK(+)  -->
        <!-- AND SIL.GLBL_CMPY_CD            = SIL_B.GLBL_CMPY_CD(+) -->
        <!-- AND SIL_B.EZCANCELFLAG(+)       = '0' -->
        <!-- QC#50104 Add End -->
        <!-- AND SIL.EZCANCELFLAG            = '0'  -->
        AND I.INV_NUM                   = IL.INV_NUM
        AND I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD
        AND IL.INV_NUM                  = IL_B.INV_NUM(+) 
        AND IL.PRNT_SVC_INV_LINE_PK     = IL_B.SVC_INV_LINE_PK(+) 
        AND IL.GLBL_CMPY_CD             = IL_B.GLBL_CMPY_CD(+)
        <!-- QC#52618 2019/08/29 Mod End-->
        AND IL.INV_NUM                 = DILTD1.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM        = DILTD1.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM            = DILTD1.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM        = DILTD1.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM    = DILTD1.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD1.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd01#
        AND IL.GLBL_CMPY_CD            = DILTD1.GLBL_CMPY_CD(+)
        AND DILTD1.EZCANCELFLAG(+)      = '0' 
        AND IL.INV_NUM                 = DILTD2.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM        = DILTD2.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM            = DILTD2.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM        = DILTD2.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM    = DILTD2.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD2.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd02# 
        AND IL.GLBL_CMPY_CD            = DILTD2.GLBL_CMPY_CD(+)
        AND DILTD2.EZCANCELFLAG(+)      = '0' 
        AND IL.INV_NUM                 = DILTD3.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM        = DILTD3.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM            = DILTD3.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM        = DILTD3.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM    = DILTD3.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD3.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd03#
        AND IL.GLBL_CMPY_CD            = DILTD3.GLBL_CMPY_CD(+)
        AND DILTD3.EZCANCELFLAG(+)      = '0' 
        <!-- START 2019/07/30 S.Takami [QC#52141,MOD] -->
        <!-- AND SIL.SHIP_TO_CUST_CD         = STC.SHIP_TO_CUST_CD(+) -->
        <!-- AND STC.RGTN_STS_CD(+)          = #rgtnStsCd# -->
        <!-- AND SIL.GLBL_CMPY_CD            = STC.GLBL_CMPY_CD(+) -->
        <!-- AND STC.EZCANCELFLAG(+)         = '0' -->
        AND IL.SHIP_TO_CUST_CD          = STC.SHIP_TO_CUST_CD(+)
        AND IL.GLBL_CMPY_CD             = STC.GLBL_CMPY_CD(+)
        AND STC.RGTN_STS_CD(+)          = #rgtnStsCd#
        AND STC.EZCANCELFLAG(+)         = '0'
        <!-- END 2019/07/30 S.Takami [QC#52141,MOD] -->
        AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
        AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
        AND CCY.EZCANCELFLAG(+)         = '0'
        <!-- START 2019/07/30 S.Takami [QC#52141,DEL] -->
        <!-- AND SIL.GLBL_CMPY_CD            = SIL_P.GLBL_CMPY_CD(+) -->
        <!-- AND SIL.PRNT_SVC_INV_LINE_PK    = SIL_P.SVC_INV_LINE_PK(+) -->
        <!-- AND SIL_P.EZCANCELFLAG(+)       = '0' -->
        <!-- AND SIL_P.SHIP_TO_CUST_CD       = STC_P.SHIP_TO_CUST_CD(+) -->
        <!-- AND STC_P.RGTN_STS_CD(+)        = 'P20' -->
        <!-- AND SIL_P.GLBL_CMPY_CD          = STC_P.GLBL_CMPY_CD(+) -->
        <!-- AND STC_P.EZCANCELFLAG(+)       = '0' -->
        <!-- END 2019/07/30 S.Takami [QC#52141,DEL] -->

    GROUP BY
        <!-- QC#52618 2019/08/29 Mod Start-->
        <!--  CCY.CCY_SGN_TXT -->
        <!-- START 2019/07/30 S.Takami [QC#52141,MOD] -->
        <!-- ,NVL(SIL_P.SHIP_TO_CUST_CD, SIL.SHIP_TO_CUST_CD) -->
        <!-- ,NVL(SIL_B.SHIP_TO_CUST_CD, SIL.SHIP_TO_CUST_CD) -->
        <!-- END 2019/07/30 S.Takami [QC#52141,MOD] -->
        <!-- ,UPPER(NVL(LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))) -->
        <!-- ,SIL.FIRST_BLLG_ATTRB_VAL_TXT -->
        <!-- ,SIL.SCD_BLLG_ATTRB_VAL_TXT -->
        <!-- ,SIL.THIRD_BLLG_ATTRB_VAL_TXT -->
        <!-- ,SIL.FRTH_BLLG_ATTRB_VAL_TXT -->
        <!-- ,SIL.FIFTH_BLLG_ATTRB_VAL_TXT -->
        <!-- ,SIL.SIXTH_BLLG_ATTRB_VAL_TXT -->
        <!-- QC#20788 add Start -->
        <!-- ,IB.SHIP_TO_CUST_ACCT_CD -->
        <!--,IB.SHIP_TO_CUST_ACCT_NM-->
        <!-- ,CASE WHEN IB.DROP_SHIP_FLG = 'Y' THEN IB.SHIP_TO_LOC_NM ELSE IB.SHIP_TO_CUST_ACCT_NM END -->
        <!-- QC#20788 add End -->
         CCY.CCY_SGN_TXT
        ,NVL(IL_B.SHIP_TO_CUST_CD, IL.SHIP_TO_CUST_CD)
        <!-- START 2022/02/21 [QC#59724, MOD] -->
        <!-- ,UPPER(NVL(LEASE_CMPY_PO_NUM, NVL(NVL2(IL.PRNT_SVC_INV_LINE_PK, IL_B.CUST_ISS_PO_NUM, IL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))) -->
        ,CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' ')) THEN I.CUST_ISS_PO_NUM ELSE UPPER(NVL(LEASE_CMPY_PO_NUM, NVL(NVL2(IL.PRNT_SVC_INV_LINE_PK, IL_B.CUST_ISS_PO_NUM, IL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))) END
        <!-- END   2022/02/21 [QC#59724, MOD] -->
        ,IL.FIRST_BLLG_ATTRB_VAL_TXT
        ,IL.SCD_BLLG_ATTRB_VAL_TXT
        ,IL.THIRD_BLLG_ATTRB_VAL_TXT
        ,IL.FRTH_BLLG_ATTRB_VAL_TXT
        ,IL.FIFTH_BLLG_ATTRB_VAL_TXT
        ,IL.SIXTH_BLLG_ATTRB_VAL_TXT
        ,NVL(IL_B.SHIP_TO_CUST_ACCT_CD, IL.SHIP_TO_CUST_ACCT_CD)
        ,NVL(IL_B.SHIP_TO_CUST_ACCT_NM, IL.SHIP_TO_CUST_ACCT_NM)
        <!-- QC#52618 2019/08/29 Mod End-->
    </statement>

    <!-- QC#27069 Add Start -->
    <statement id="getMaintSubTotal_manInv" parameterClass="Map" resultClass="Map">
        SELECT
         IB.SHIP_TO_CUST_CD                                            SHIP_TO_CODE
        ,MAX(STC.LOC_NM)                                               SHIP_TO_NAME
        ,MAX(STC.FIRST_LINE_ADDR)                                      SHIP_TO_FST_ADDR
        
        ,MAX(STC.SCD_LINE_ADDR)              
            || MAX(STC.THIRD_LINE_ADDR)    
            || MAX(STC.FRTH_LINE_ADDR)                                 SHIP_TO_SCD_ADDR
        ,MAX(STC.CTY_ADDR)                                             SHIP_TO_CITY
        ,MAX(STC.ST_CD)                                                SHIP_TO_ST
        ,MAX(STC.POST_CD)                                              SHIP_TO_POST
        ,NVL(I.LEASE_CMPY_PO_NUM, IL.CUST_ISS_PO_NUM)                  PO_NO
        ,IL.FIRST_BLLG_ATTRB_VAL_TXT                                  CUST_CODES1
        ,IL.SCD_BLLG_ATTRB_VAL_TXT                                    CUST_CODES2
        ,IL.THIRD_BLLG_ATTRB_VAL_TXT                                  CUST_CODES3
        ,IL.FRTH_BLLG_ATTRB_VAL_TXT                                   CUST_CODES4
        ,IL.FIFTH_BLLG_ATTRB_VAL_TXT                                  CUST_CODES5
        ,IL.SIXTH_BLLG_ATTRB_VAL_TXT                                  CUST_CODES6
        <isEqual property="taxDtlFlg" compareValue="Y">
        , NVL(SUM(DILTD1.DEAL_SLS_TAX_AMT),0)                          STATE_TAX
        , CASE WHEN NVL(SUM(DILTD1.DEAL_SLS_TAX_AMT),0) &lt; 0 THEN
            '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(NVL(SUM(DILTD1.DEAL_SLS_TAX_AMT),0)), #amtFormat# )
          ELSE
            CCY.CCY_SGN_TXT || TO_CHAR(NVL(SUM(DILTD1.DEAL_SLS_TAX_AMT),0), #amtFormat# )
          END    STATE_TAX_TXT
        , NVL(SUM(DILTD2.DEAL_SLS_TAX_AMT),0)                          COUNTY_TAX_TXT
        , CASE WHEN NVL(SUM(DILTD2.DEAL_SLS_TAX_AMT),0) &lt; 0 THEN
            '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(NVL(SUM(DILTD2.DEAL_SLS_TAX_AMT),0)), #amtFormat# )
          ELSE
            CCY.CCY_SGN_TXT || TO_CHAR(NVL(SUM(DILTD2.DEAL_SLS_TAX_AMT),0), #amtFormat# )
          END    COUNTY_TAX_TXT
        , NVL(SUM(DILTD3.DEAL_SLS_TAX_AMT),0)                          CITY_TAX
        , CASE WHEN NVL(SUM(DILTD3.DEAL_SLS_TAX_AMT),0) &lt; 0 THEN
            '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(NVL(SUM(DILTD3.DEAL_SLS_TAX_AMT),0)), #amtFormat#)
          ELSE
            CCY.CCY_SGN_TXT || TO_CHAR(NVL(SUM(DILTD3.DEAL_SLS_TAX_AMT),0), #amtFormat#)
          END    CITY_TAX_TXT
        </isEqual>
        <isNotEqual property="taxDtlFlg" compareValue="Y">
        ,NULL                                       STATE_TAX
        ,NULL                                       STATE_TAX_TXT
        ,NULL                                       COUNTY_TAX
        ,NULL                                       COUNTY_TAX_TXT
        ,NULL                                       CITY_TAX
        ,NULL                                       CITY_TAX_TXT
        </isNotEqual>
        , SUM(IL.INV_LINE_DEAL_TAX_AMT)                                        TOTAL_TAX
        , CASE WHEN SUM(IL.INV_LINE_DEAL_TAX_AMT) IS NOT NULL THEN
            CASE WHEN SUM(IL.INV_LINE_DEAL_TAX_AMT) &lt; 0 THEN
                '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(SUM(IL.INV_LINE_DEAL_TAX_AMT)), #amtFormat# )
            ELSE
                CCY.CCY_SGN_TXT || TO_CHAR(SUM(IL.INV_LINE_DEAL_TAX_AMT), #amtFormat# )
            END
          ELSE
            ''
          END    TOTAL_TAX_TXT
        , SUM(IL.INV_LINE_DEAL_TAX_AMT + IL.INV_LINE_DEAL_NET_AMT)            TOTAL_AMOUNT
        , CASE WHEN SUM(IL.INV_LINE_DEAL_TAX_AMT + IL.INV_LINE_DEAL_NET_AMT) IS NOT NULL THEN
            CASE WHEN SUM(IL.INV_LINE_DEAL_TAX_AMT + IL.INV_LINE_DEAL_NET_AMT) &lt; 0 THEN
                '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(SUM(IL.INV_LINE_DEAL_TAX_AMT + IL.INV_LINE_DEAL_NET_AMT)), #amtFormat#)
            ELSE
                CCY.CCY_SGN_TXT || TO_CHAR(SUM(IL.INV_LINE_DEAL_TAX_AMT + IL.INV_LINE_DEAL_NET_AMT), #amtFormat#)
            END
          ELSE
            ''
          END    TOTAL_AMOUNT_TXT
        ,IB.SHIP_TO_CUST_ACCT_CD                SHIP_TO_CUST_ACCT_CD
        ,CASE WHEN IB.DROP_SHIP_FLG = 'Y' THEN IB.SHIP_TO_LOC_NM ELSE IB.SHIP_TO_CUST_ACCT_NM END SHIP_TO_CUST_ACCT_NM

    FROM 
        (
             SELECT
                   INV_NUM,
                   CASE SYS_SRC_CD
                      WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                      ELSE INV_NUM
                   END  AS SVC_INV_NUM,
                   GLBL_CMPY_CD,
                   EZCANCELFLAG,
                   LEASE_CMPY_PO_NUM,
                   DEAL_CCY_CD
             FROM
                   INV
             WHERE
                   INV_NUM = #invNum#
               AND GLBL_CMPY_CD      = #glblCmpyCd#
               AND EZCANCELFLAG      = '0'
        ) I
        ,INV_LINE                   IL
        ,INV_BOL                    IB
        ,DS_INV_LINE_TAX_DTL        DILTD1
        ,DS_INV_LINE_TAX_DTL        DILTD2
        ,DS_INV_LINE_TAX_DTL        DILTD3
        ,SHIP_TO_CUST               STC
        ,CCY                        CCY

    WHERE
            I.INV_NUM                   = IL.INV_NUM
        AND I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD
        AND IL.EZCANCELFLAG             = '0'
        AND IL.GLBL_CMPY_CD             = IB.GLBL_CMPY_CD
        AND IL.INV_NUM                  = IB.INV_NUM
        AND IL.INV_BOL_LINE_NUM         = IB.INV_BOL_LINE_NUM
        AND IB.EZCANCELFLAG             = '0'
        AND IL.INV_NUM                  = DILTD1.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM         = DILTD1.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM             = DILTD1.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM         = DILTD1.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM     = DILTD1.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD1.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd01#
        AND IL.GLBL_CMPY_CD             = DILTD1.GLBL_CMPY_CD(+)
        AND DILTD1.EZCANCELFLAG(+)      = '0' 
        AND IL.INV_NUM                  = DILTD2.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM         = DILTD2.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM             = DILTD2.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM         = DILTD2.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM     = DILTD2.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD2.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd02# 
        AND IL.GLBL_CMPY_CD             = DILTD2.GLBL_CMPY_CD(+)
        AND DILTD2.EZCANCELFLAG(+)      = '0' 
        AND IL.INV_NUM                  = DILTD3.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM         = DILTD3.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM             = DILTD3.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM         = DILTD3.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM     = DILTD3.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD3.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd03#
        AND IL.GLBL_CMPY_CD             = DILTD3.GLBL_CMPY_CD(+)
        AND DILTD3.EZCANCELFLAG(+)      = '0' 
        AND IB.SHIP_TO_CUST_CD          = STC.SHIP_TO_CUST_CD(+)
        AND STC.RGTN_STS_CD(+)          = #rgtnStsCd#
        AND IB.GLBL_CMPY_CD             = STC.GLBL_CMPY_CD(+)
        AND STC.EZCANCELFLAG(+)         = '0' 
        AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
        AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
        AND CCY.EZCANCELFLAG(+)         = '0'

    GROUP BY
         CCY.CCY_SGN_TXT
        ,IB.SHIP_TO_CUST_CD
        ,NVL(I.LEASE_CMPY_PO_NUM, IL.CUST_ISS_PO_NUM)
        ,IL.FIRST_BLLG_ATTRB_VAL_TXT
        ,IL.SCD_BLLG_ATTRB_VAL_TXT
        ,IL.THIRD_BLLG_ATTRB_VAL_TXT
        ,IL.FRTH_BLLG_ATTRB_VAL_TXT
        ,IL.FIFTH_BLLG_ATTRB_VAL_TXT
        ,IL.SIXTH_BLLG_ATTRB_VAL_TXT
        ,IB.SHIP_TO_CUST_ACCT_CD
        ,CASE WHEN IB.DROP_SHIP_FLG = 'Y' THEN IB.SHIP_TO_LOC_NM ELSE IB.SHIP_TO_CUST_ACCT_NM END
    </statement>
    <!-- QC#27069 Add End -->

    <statement id="getMaintMach" parameterClass="Map" resultClass="Map">

    SELECT
         MACHINE.CONTR_PK
        ,MAX(MACHINE.CONTR_NO) CONTR_NO
        <!-- ,MACHINE.SVC_PGM_CD QC#52615 2019/08/13 Del -->
        <!-- ,MAX(MACHINE.SVC_PGM_NM) SVC_PGM_NM  QC#52615 2019/08/13 Del -->
        ,MACHINE.MACHINE_PK
        ,MACHINE.SERIAL_NO
        ,MACHINE.MODEL_ID
        ,MACHINE.INV_LINE_TP_CD
        ,MAX(MACHINE.MODEL) MODEL
        ,MAX(MACHINE.BASE_SERIAL_NO) BASE_SERIAL_NO
        ,MAX(MACHINE.BASE_COPY_QTY) BASE_COPY_QTY
        ,SUM(MACHINE.BASE_CHRG_COUNT) BASE_CHRG_COUNT
        ,SUM(MACHINE.METER_CHRG_COUNT) METER_CHRG_COUNT
        ,MACHINE.INV_PRINT_COV_TXT
        <!-- QC#29672 2019/01/29 Add Start -->
        ,MACHINE.SVC_INV_CHRG_TP_CD
        ,MACHINE.SVC_INV_MERGE_TP_CD
        ,MACHINE.HAS_PARENT
        <!-- QC#29672 2019/01/29 Add End -->
    FROM (
        SELECT 
             SI.DS_CONTR_PK                                        CONTR_PK
            ,SI.DS_CONTR_NUM                                       CONTR_NO
            ,NVL(SIL_B.SVC_PGM_MDSE_CD, SIL.SVC_PGM_MDSE_CD)         SVC_PGM_CD
            ,INITCAP(DMI.MDSE_DESC_SHORT_TXT)                      SVC_PGM_NM
            ,NVL(SIL_B.SVC_MACH_MSTR_PK, SIL.SVC_MACH_MSTR_PK)     MACHINE_PK
            ,NVL(SIL_B.SER_NUM, SIL.SER_NUM)                       SERIAL_NO
            ,NVL(SIL_B.MDL_ID, SIL.MDL_ID)                         MODEL_ID
            ,NVL(SIL_B.SVC_INV_LINE_TP_CD, SIL.SVC_INV_LINE_TP_CD) INV_LINE_TP_CD
            ,NVL(SIL_B.MDL_NM, SIL.MDL_NM)                         MODEL
            ,SIL_B.SER_NUM                                         BASE_SERIAL_NO
            ,TRIM (TO_CHAR (SIL.COPY_INCL_QTY, #qtyFormat#))       BASE_COPY_QTY
            ,0                                                     BASE_CHRG_COUNT
            ,0                                                     METER_CHRG_COUNT
<!-- QC#13358 add Start -->
            <!-- QC#29672 2019/01/23 Mod Start -->
            ,SIL.INV_PRINT_COV_TXT   INV_PRINT_COV_TXT
            <!-- ,NVL(SIL_B.INV_PRINT_COV_TXT, SIL.INV_PRINT_COV_TXT)   INV_PRINT_COV_TXT -->
            <!-- QC#29672 2019/01/23 Mod End -->
<!-- QC#13358 add End -->
            ,SIL.SVC_INV_LINE_NUM
            <!-- QC#29672 2019/01/29 Add Start -->
            ,SIL.SVC_INV_CHRG_TP_CD
            ,DCD.SVC_INV_MERGE_TP_CD
            ,CASE WHEN (SIL.PRNT_SVC_INV_LINE_PK IS NOT NULL) THEN 'Y' ELSE 'N' END HAS_PARENT
            <!-- QC#29672 2019/01/29 Add End -->
            ,AC.PRINT_DTL_FLG   <!-- QC#30345 -->
        FROM
            <!-- 2018/08/21 QC#27684 Mod Start -->
            <!-- INV                    I -->
             (
                  SELECT
                        INV_NUM,
                        CASE SYS_SRC_CD
                           WHEN  #sysSrcCdNFC# THEN ORIG_INV_NUM
                           ELSE INV_NUM
                        END  AS SVC_INV_NUM,
                        GLBL_CMPY_CD,
                        EZCANCELFLAG,
                        LEASE_CMPY_PO_NUM
                        <!-- START 2022/02/21 [QC#59724, ADD] -->
                        ,CUST_ISS_PO_NUM
                        <!-- END   2022/02/21 [QC#59724, ADD] -->
                  FROM
                        INV
                  WHERE
                        INV_NUM = #invNum#
                    AND GLBL_CMPY_CD  = #glblCmpyCd#
                    AND EZCANCELFLAG  = '0'
             ) I
            <!-- 2018/08/21 QC#27684 Mod End -->
            ,SVC_INV                SI
            ,INV_LINE               IL
            <!-- QC#52209 2019/07/31 Mod -->
            <!-- ,SVC_INV_LINE           SIL -->
            <!-- ,SVC_INV_LINE           SIL_B -->
            ,INV_PRT_SVC_INV_LINE_WRK      SIL
            ,INV_PRT_SVC_INV_LINE_WRK      SIL_B
            ,MDSE                   DMI

            <!-- QC#29672 2019/01/29 Add Start -->
            ,DS_CONTR_DTL           DCD
            <!-- QC#29672 2019/01/29 Add End -->
            ,SVC_INV_LINE_ADDL_CHRG AC  <!-- QC#30580 -->

        WHERE
            <!-- 2018/08/21 QC#27684 Mod Start -->
            <!--
                I.INV_NUM                       = #invNum#
            AND I.GLBL_CMPY_CD                  = #glblCmpyCd#
            AND I.EZCANCELFLAG                  = '0'
            AND ((      I.SYS_SRC_CD        &lt;&gt; #sysSrcCdNFC#
                    AND I.INV_NUM           = SI.SVC_INV_NUM )
                OR  (   I.SYS_SRC_CD        = #sysSrcCdNFC# 
                    AND I.ORIG_INV_NUM      = SI.SVC_INV_NUM )
                )
            -->
                I.SVC_INV_NUM                   = SI.SVC_INV_NUM
            <!-- 2018/08/21 QC#27684 Mod End -->
            AND I.GLBL_CMPY_CD                  = SI.GLBL_CMPY_CD
            AND SI.EZCANCELFLAG                 = '0'
            AND I.INV_NUM                       = IL.INV_NUM
            AND I.GLBL_CMPY_CD                  = IL.GLBL_CMPY_CD
            AND IL.EZCANCELFLAG                 = '0'
            AND IL.INV_NUM                      = SIL.SVC_INV_NUM
            AND IL.SVC_INV_LINE_PK              = SIL.SVC_INV_LINE_PK
            AND IL.GLBL_CMPY_CD                 = SIL.GLBL_CMPY_CD
            AND SIL.EZCANCELFLAG                = '0'
            AND SIL.SVC_INV_NUM                 = SIL_B.SVC_INV_NUM(+)
            AND SIL.PRNT_SVC_INV_LINE_PK        = SIL_B.SVC_INV_LINE_PK(+)
            AND SIL.GLBL_CMPY_CD                = SIL_B.GLBL_CMPY_CD(+)
            AND SIL_B.EZCANCELFLAG(+)           = '0'
            AND SIL.GLBL_CMPY_CD                = DMI.GLBL_CMPY_CD(+)
            AND SIL.SVC_PGM_MDSE_CD             = DMI.MDSE_CD(+)
            AND DMI.EZCANCELFLAG(+)             = '0'
            AND SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC#
            AND (NVL(SIL_B.SHIP_TO_CUST_CD, SIL.SHIP_TO_CUST_CD) = #shipToCust#
                    OR NVL(SIL_B.SHIP_TO_CUST_CD, SIL.SHIP_TO_CUST_CD)          IS NULL)

            <!-- QC#29672 2019/01/29 Add Start -->
            AND DCD.DS_CONTR_PK = SIL.DS_CONTR_PK
            AND DCD.DS_CONTR_DTL_PK = SIL.DS_CONTR_DTL_PK
            AND DCD.GLBL_CMPY_CD = SIL.GLBL_CMPY_CD
            AND DCD.EZCANCELFLAG                = '0'
            AND CASE WHEN (SIL.PRNT_SVC_INV_LINE_PK IS NOT NULL) AND (DCD.SVC_INV_MERGE_TP_CD = #svcInvMergeTpPrintWithBase#) THEN
                  0
                ELSE
                  1
                END = 1
            <!-- QC#29672 2019/01/29 Add End -->

            <!-- AND NVL(DMI.SVC_PGM_TP_CD, '00') &lt;&gt; #svcPgmTpCd14# QC#52209 2019/07/31 Del -->
            <!-- QC#52209 2019/07/31 Add -->
            AND SIL.INV_PRT_FLG = 'Y'
            <isNotNull property="poNo" >
            <!-- 2019/04/04 QC#30756 Mod Start -->
            <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))   = #poNo# -->
            <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)))   = UPPER(#poNo#)  -->
            <!-- QC#50104 Mod -->
            <!-- START 2022/02/21 [QC#59724, MOD] -->
            <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))) = UPPER(#poNo#) -->
            AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
            THEN UPPER(I.CUST_ISS_PO_NUM)
            ELSE UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)))
            END = UPPER(#poNo#)
            <!-- END   2022/02/21 [QC#59724, MOD] -->
            <!-- 2019/04/04 QC#30756 Mod End -->
            </isNotNull>
            <isNull property="poNo" >
            <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))  IS NULL -->
            <!-- QC#50104 Mod -->
            <!-- START 2022/02/21 [QC#59724, MOD] -->
            <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)) IS NULL -->
            AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
            THEN I.CUST_ISS_PO_NUM
            ELSE NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))
            END IS NULL
            <!-- END   2022/02/21 [QC#59724, MOD] -->
            </isNull>

            <isNotNull property="custCodes1" >
            AND SIL.FIRST_BLLG_ATTRB_VAL_TXT    = #custCodes1#
            </isNotNull>
            <isNull property="custCodes1" >
            AND SIL.FIRST_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes2">
            AND SIL.SCD_BLLG_ATTRB_VAL_TXT    = #custCodes2#
            </isNotNull>
            <isNull property="custCodes2" >
            AND SIL.SCD_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes3" >
            AND SIL.THIRD_BLLG_ATTRB_VAL_TXT    = #custCodes3#
            </isNotNull>
            <isNull property="custCodes3" >
            AND SIL.THIRD_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes4" >
            AND SIL.FRTH_BLLG_ATTRB_VAL_TXT    = #custCodes4#
            </isNotNull>
            <isNull property="custCodes4" >
            AND SIL.FRTH_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes5" >
            AND SIL.FIFTH_BLLG_ATTRB_VAL_TXT    = #custCodes5#
            </isNotNull>
            <isNull property="custCodes5" >
            AND SIL.FIFTH_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes6" >
            AND SIL.SIXTH_BLLG_ATTRB_VAL_TXT    = #custCodes6#
            </isNotNull>
            <isNull property="custCodes6" >
            AND SIL.SIXTH_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <!-- QC#30345 -->
            AND AC.GLBL_CMPY_CD(+)              = SIL.GLBL_CMPY_CD
            AND AC.SVC_INV_LINE_PK(+)           = SIL.SVC_INV_LINE_PK   <!-- QC#30580 -->
            AND AC.EZCANCELFLAG(+)              = '0'

        UNION ALL
        SELECT
             SI.DS_CONTR_PK                                              CONTR_PK
            ,SI.DS_CONTR_NUM                                             CONTR_NO
            ,SIL.SVC_PGM_MDSE_CD                                         SVC_PGM_CD
            ,INITCAP(DMI.MDSE_DESC_SHORT_TXT)                            SVC_PGM_NM
            ,SIL.SVC_MACH_MSTR_PK                                        MACHINE_PK
            ,SIL.SER_NUM                                                 SERIAL_NO
            ,SIL.MDL_ID                                                  MODEL_ID
            ,SIL.SVC_INV_LINE_TP_CD                                      INV_LINE_TP_CD
            ,SIL.MDL_NM                                                  MODEL
            ,SIL_B.SER_NUM                                               BASE_SERIAL_NO
            ,TRIM (TO_CHAR (SIL.COPY_INCL_QTY, #qtyFormat#))             BASE_COPY_QTY
            ,CASE WHEN SIL.SVC_INV_CHRG_TP_CD = 'BC' THEN 1 ELSE 0 END   BASE_CHRG_COUNT
            ,CASE WHEN SIL.SVC_INV_CHRG_TP_CD = 'MC' THEN 1 ELSE 0 END   METER_CHRG_COUNT
            ,SIL.INV_PRINT_COV_TXT                                       INV_PRINT_COV_TXT
            ,SIL.SVC_INV_LINE_NUM
            <!-- QC#29672 2019/01/29 Add Start -->
            ,SIL.SVC_INV_CHRG_TP_CD
            ,DCD.SVC_INV_MERGE_TP_CD
            ,CASE WHEN (SIL.PRNT_SVC_INV_LINE_PK IS NOT NULL) THEN 'Y' ELSE 'N' END HAS_PARENT
            <!-- QC#29672 2019/01/29 Add End -->
            ,NULL    PRINT_DTL_FLG  <!-- QC#30345 -->
        FROM
             <!-- 2018/08/21 QC#27684 Mod Start -->
             <!-- INV                    I -->
            (
                SELECT
                       INV_NUM,
                       CASE SYS_SRC_CD
                           WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                           ELSE INV_NUM
                       END  AS SVC_INV_NUM,
                       GLBL_CMPY_CD,
                       EZCANCELFLAG,
                       LEASE_CMPY_PO_NUM
                        <!-- START 2022/02/21 [QC#59724, ADD] -->
                        ,CUST_ISS_PO_NUM
                        <!-- END   2022/02/21 [QC#59724, ADD] -->
                  FROM
                       INV
                 WHERE
                       INV_NUM = #invNum#
                   AND GLBL_CMPY_CD   = #glblCmpyCd#
                   AND EZCANCELFLAG   = '0'
            ) I
            <!-- 2018/08/21 QC#27684 Mod End -->
            ,SVC_INV                SI
            ,INV_LINE               IL
            <!-- QC#52209 2019/07/31 Mod -->
            <!-- ,SVC_INV_LINE           SIL -->
            <!-- ,SVC_INV_LINE           SIL_B -->
            ,INV_PRT_SVC_INV_LINE_WRK      SIL
            ,INV_PRT_SVC_INV_LINE_WRK      SIL_B
            ,MDSE                   DMI

            <!-- QC#29672 2019/01/29 Add Start -->
            ,DS_CONTR_DTL           DCD
            <!-- QC#29672 2019/01/29 Add End -->

        WHERE
            <!-- 2018/08/21 QC#27684 Mod Start -->
            <!--
                I.INV_NUM                       = #invNum#
            AND I.GLBL_CMPY_CD                  = #glblCmpyCd#
            AND I.EZCANCELFLAG                  = '0'
            AND ((      I.SYS_SRC_CD        &lt;&gt; #sysSrcCdNFC#
                    AND I.INV_NUM           = SI.SVC_INV_NUM )
                OR  (   I.SYS_SRC_CD        = #sysSrcCdNFC# 
                    AND I.ORIG_INV_NUM      = SI.SVC_INV_NUM )
                )
            -->
                I.SVC_INV_NUM                   = SI.SVC_INV_NUM
            <!-- 2018/08/21 QC#27684 Mod End -->
            AND I.GLBL_CMPY_CD                  = SI.GLBL_CMPY_CD
            AND SI.EZCANCELFLAG                 = '0'
            AND I.INV_NUM                       = IL.INV_NUM
            AND I.GLBL_CMPY_CD                  = IL.GLBL_CMPY_CD
            AND IL.EZCANCELFLAG                 = '0'
            AND IL.INV_NUM                      = SIL.SVC_INV_NUM
            AND IL.SVC_INV_LINE_PK              = SIL.SVC_INV_LINE_PK
            AND IL.GLBL_CMPY_CD                 = SIL.GLBL_CMPY_CD
            AND SIL.EZCANCELFLAG                = '0'
            AND SIL.SVC_INV_NUM                 = SIL_B.SVC_INV_NUM(+)
            AND SIL.PRNT_SVC_INV_LINE_PK        = SIL_B.SVC_INV_LINE_PK(+)
            AND SIL.GLBL_CMPY_CD                = SIL_B.GLBL_CMPY_CD(+)
            AND SIL_B.EZCANCELFLAG(+)           = '0'
            AND SIL.GLBL_CMPY_CD                = DMI.GLBL_CMPY_CD(+)
            AND SIL.SVC_PGM_MDSE_CD             = DMI.MDSE_CD(+)
            AND DMI.EZCANCELFLAG(+)             = '0'
            AND SIL.SVC_INV_CHRG_TP_CD &lt;&gt; #siChrgTpCdAC#
            <!-- QC#57076 2020/06/05 Mod -->
            AND (NVL(SIL_B.SHIP_TO_CUST_CD, SIL.SHIP_TO_CUST_CD) = #shipToCust#
                    OR NVL(SIL_B.SHIP_TO_CUST_CD, SIL.SHIP_TO_CUST_CD)          IS NULL)

            <!-- QC#29672 2019/01/29 Add Start -->
            AND DCD.DS_CONTR_PK = SIL.DS_CONTR_PK
            AND DCD.DS_CONTR_DTL_PK = SIL.DS_CONTR_DTL_PK
            AND DCD.GLBL_CMPY_CD = SIL.GLBL_CMPY_CD
            AND DCD.EZCANCELFLAG                = '0'
            AND CASE WHEN (SIL.PRNT_SVC_INV_LINE_PK IS NOT NULL) AND (DCD.SVC_INV_MERGE_TP_CD = #svcInvMergeTpPrintWithBase#) THEN
                  0
                ELSE
                  1
                END = 1
            <!-- QC#29672 2019/01/29 Add End -->

            <!-- AND NVL(DMI.SVC_PGM_TP_CD, '00') &lt;&gt; #svcPgmTpCd14# QC#52209 2019/07/31 Del -->
            <!-- QC#52209 2019/07/31 Add -->
            AND SIL.INV_PRT_FLG  = 'Y'
            <isNotNull property="poNo" >
            <!-- 2019/04/04 QC#30756 Mod Start -->
            <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))   = #poNo# -->
            <!-- QC#50104 Mod -->
            <!-- START 2022/02/21 [QC#59724, MOD] -->
            <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))) = UPPER(#poNo#) -->
            AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
            THEN UPPER(I.CUST_ISS_PO_NUM)
            ELSE UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)))
            END = UPPER(#poNo#)
            <!-- END   2022/02/21 [QC#59724, MOD] -->
            <!-- 2019/04/04 QC#30756 Mod End -->
            </isNotNull>
            <isNull property="poNo" >
            <!-- QC#50104 Mod -->
            <!-- START 2022/02/21 [QC#59724, MOD] -->
            <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)) IS NULL -->
            AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
            THEN I.CUST_ISS_PO_NUM
            ELSE NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))
            END IS NULL
            <!-- END   2022/02/21 [QC#59724, MOD] -->
            </isNull>    
                                            
            <isNotNull property="custCodes1" >
            AND SIL.FIRST_BLLG_ATTRB_VAL_TXT    = #custCodes1#
            </isNotNull>
            <isNull property="custCodes1" >
            AND SIL.FIRST_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>        
            <isNotNull property="custCodes2">
            AND SIL.SCD_BLLG_ATTRB_VAL_TXT    = #custCodes2#
            </isNotNull>
            <isNull property="custCodes2" >
            AND SIL.SCD_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>        
            <isNotNull property="custCodes3" >
            AND SIL.THIRD_BLLG_ATTRB_VAL_TXT    = #custCodes3#
            </isNotNull>
            <isNull property="custCodes3" >
            AND SIL.THIRD_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>        
            <isNotNull property="custCodes4" >
            AND SIL.FRTH_BLLG_ATTRB_VAL_TXT    = #custCodes4#
            </isNotNull>
            <isNull property="custCodes4" >
            AND SIL.FRTH_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>        
            <isNotNull property="custCodes5" >
            AND SIL.FIFTH_BLLG_ATTRB_VAL_TXT    = #custCodes5#
            </isNotNull>
            <isNull property="custCodes5" >
            AND SIL.FIFTH_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>        
            <isNotNull property="custCodes6" >
            AND SIL.SIXTH_BLLG_ATTRB_VAL_TXT    = #custCodes6#
            </isNotNull>
            <isNull property="custCodes6" >
            AND SIL.SIXTH_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
        ) MACHINE
        <!-- QC#30345 -->
    WHERE
        MACHINE.PRINT_DTL_FLG       IS NULL
        OR MACHINE.PRINT_DTL_FLG     = 'Y'

    GROUP BY
         MACHINE.CONTR_PK
        ,MACHINE.MACHINE_PK
        ,MACHINE.SERIAL_NO
        ,MACHINE.MODEL_ID
        <!-- ,MACHINE.SVC_PGM_CD  QC#52615 2019/08/13 Del -->
        ,MACHINE.INV_LINE_TP_CD
        ,MACHINE.INV_PRINT_COV_TXT
        <!-- QC#29672 2019/01/29 Add Start -->
        ,MACHINE.SVC_INV_CHRG_TP_CD
        ,MACHINE.SVC_INV_MERGE_TP_CD
        ,MACHINE.HAS_PARENT
        <!-- QC#29672 2019/01/29 Add End -->
    ORDER BY
         MIN(MACHINE.SVC_INV_LINE_NUM)
        <!-- MAX(MACHINE.BASE_SERIAL_NO) NULLS FIRST -->
        ,MACHINE.CONTR_PK
        ,MACHINE.SERIAL_NO
        ,MACHINE.MACHINE_PK
        ,MACHINE.MODEL_ID
        <!-- ,MACHINE.SVC_PGM_CD QC#52615 2019/08/13 Del -->
        ,MACHINE.INV_LINE_TP_CD
        ,MACHINE.INV_PRINT_COV_TXT
        <!-- QC#29672 2019/01/29 Add Start -->
        ,MACHINE.SVC_INV_CHRG_TP_CD
        ,MACHINE.SVC_INV_MERGE_TP_CD
        ,MACHINE.HAS_PARENT
        <!-- QC#29672 2019/01/29 Add End -->
    </statement>

    <!-- QC#27069 Add Start -->
    <statement id="getMaintMach_manInv" parameterClass="Map" resultClass="Map">
    SELECT
         MACHINE.CONTR_PK
        ,MAX(MACHINE.CONTR_NO) CONTR_NO
        <!-- ,MACHINE.SVC_PGM_CD QC#52615 2019/08/13 Del -->
        <!-- ,MAX(MACHINE.SVC_PGM_NM) SVC_PGM_NM QC#52615 2019/08/13 Del -->
        ,MACHINE.MACHINE_PK
        ,MACHINE.SERIAL_NO
        ,MACHINE.MODEL_ID
        ,MACHINE.INV_LINE_TP_CD
        ,MAX(MACHINE.MODEL) MODEL
        ,MAX(MACHINE.BASE_SERIAL_NO) BASE_SERIAL_NO
        ,MAX(MACHINE.BASE_COPY_QTY) BASE_COPY_QTY
        ,SUM(MACHINE.BASE_CHRG_COUNT) BASE_CHRG_COUNT
        ,SUM(MACHINE.METER_CHRG_COUNT) METER_CHRG_COUNT
        ,MACHINE.INV_PRINT_COV_TXT
        <!-- QC#29672 2019/01/30 Add Start -->
        ,MACHINE.SVC_INV_CHRG_TP_CD
        ,NULL SVC_INV_MERGE_TP_CD
        ,'N' HAS_PARENT
        <!-- QC#29672 2019/01/30 Add End -->
    FROM (
        SELECT 
             DCD.DS_CONTR_PK                                       CONTR_PK
            ,DC.DS_CONTR_NUM                                       CONTR_NO
            ,DCD.SVC_PGM_MDSE_CD                                   SVC_PGM_CD
            ,INITCAP(DMI.MDSE_DESC_SHORT_TXT)                      SVC_PGM_NM
            ,IL.SVC_MACH_MSTR_PK                                   MACHINE_PK
            ,SMM.SER_NUM                                           SERIAL_NO
            ,IL.MDL_ID                                             MODEL_ID
            ,DECODE(SMM.SVC_MACH_TP_CD, '2', 'ACSY', '')           INV_LINE_TP_CD
            ,IL.MDL_NM                                             MODEL
            ,SMM_B.SER_NUM                                         BASE_SERIAL_NO
            ,TRIM (TO_CHAR (0, #qtyFormat#))                       BASE_COPY_QTY
            ,0                                                     BASE_CHRG_COUNT
            ,0                                                     METER_CHRG_COUNT
            ,''                                                    INV_PRINT_COV_TXT
            ,IL.INV_BOL_LINE_NUM || IL.INV_LINE_NUM                INV_LINE_NUM
            <!-- QC#29672 2019/01/29 Add Start -->
            ,IL.SVC_INV_CHRG_TP_CD
            <!-- QC#29672 2019/01/29 Add End -->
        FROM
             INV                    I
            ,INV_BOL                IB
            ,INV_LINE               IL
            ,MDSE                   DMI
            ,DS_CONTR               DC  
            ,SVC_MACH_MSTR          SMM
            ,SVC_CONFIG_MSTR        SCM
            ,SVC_MACH_MSTR          SMM_B
            <!-- MDO START 2019/06/05 QC#50679  -->
<!--            ,(-->
<!--                  SELECT-->
<!--                       DCD_2.GLBL_CMPY_CD-->
<!--                      ,DCD_2.DS_CONTR_PK-->
<!--                      ,DCD_2.SVC_MACH_MSTR_PK-->
<!--                      ,DCD_2.MDL_ID-->
<!--                      ,DCD_2.SVC_PGM_MDSE_CD-->
<!--                  FROM -->
<!--                       DS_CONTR_DTL DCD_2-->
<!--                  WHERE-->
<!--                          DCD_2.GLBL_CMPY_CD    = #glblCmpyCd#-->
<!--                      AND DCD_2.EZCANCELFLAG    = '0'-->
<!--                  GROUP BY-->
<!--                       DCD_2.GLBL_CMPY_CD-->
<!--                      ,DCD_2.DS_CONTR_PK-->
<!--                      ,DCD_2.SVC_MACH_MSTR_PK-->
<!--                      ,DCD_2.MDL_ID-->
<!--                      ,DCD_2.SVC_PGM_MDSE_CD-->
<!--             ) DCD-->
            , (SELECT  
                A.DS_CONTR_NUM
               ,A.GLBL_CMPY_CD
               ,A.DS_CONTR_PK
               ,A.SVC_MACH_MSTR_PK
               ,A.MDL_ID
               ,A.SVC_PGM_MDSE_CD
          FROM (
               SELECT
                    DC.DS_CONTR_NUM
                   ,DCD_2.GLBL_CMPY_CD
                   ,DCD_2.DS_CONTR_PK
                   ,DCD_2.SVC_MACH_MSTR_PK
                   ,DCD_2.MDL_ID
                   ,DCD_2.SVC_PGM_MDSE_CD
                   ,DCD_2.DS_CONTR_DTL_PK
                   ,ROW_NUMBER () OVER (PARTITION BY 
                                             DC.DS_CONTR_NUM
                                            ,DCD_2.GLBL_CMPY_CD
                                            ,DCD_2.DS_CONTR_PK
                                            ,DCD_2.SVC_MACH_MSTR_PK
                                            ,DCD_2.MDL_ID
                                        ORDER BY DCD_2.DS_CONTR_DTL_PK)     AS NUM1
               FROM 
                      INV_LINE               IL2
                    , DS_CONTR               DC 
                    , DS_CONTR_DTL           DCD_2
               WHERE
                       IL2.INV_NUM                     = #invNum#
                   AND IL2.DS_CONTR_NUM                = DC.DS_CONTR_NUM
                   AND DC.DS_CONTR_PK                  = DCD_2.DS_CONTR_PK
                   AND IL2.SVC_MACH_MSTR_PK            = DCD_2.SVC_MACH_MSTR_PK
                   AND IL2.GLBL_CMPY_CD                = 'ADB'
                   AND IL2.EZCANCELFLAG                = '0'
                   AND DC.GLBL_CMPY_CD                 = 'ADB'
                   AND DC.EZCANCELFLAG                 = '0'
                   AND DCD_2.GLBL_CMPY_CD              = 'ADB'
                   AND DCD_2.EZCANCELFLAG              = '0'
               GROUP BY
                    DC.DS_CONTR_NUM
                   ,DCD_2.GLBL_CMPY_CD
                   ,DCD_2.DS_CONTR_PK
                   ,DCD_2.SVC_MACH_MSTR_PK
                   ,DCD_2.MDL_ID
                   ,DCD_2.SVC_PGM_MDSE_CD
                   ,DCD_2.DS_CONTR_DTL_PK
                   ) A
            WHERE A.NUM1 = 1
           ) DCD
            <!-- MDO START 2019/06/05 QC#50679  -->
        WHERE
                I.INV_NUM                       = #invNum#
            AND I.GLBL_CMPY_CD                  = #glblCmpyCd#
            AND I.EZCANCELFLAG                  = '0'
            AND I.INV_NUM                       = IB.INV_NUM
            AND I.GLBL_CMPY_CD                  = IB.GLBL_CMPY_CD
            AND IB.EZCANCELFLAG                 = '0'
            AND IB.INV_NUM                      = IL.INV_NUM
            AND IB.INV_BOL_LINE_NUM             = IL.INV_BOL_LINE_NUM
            AND IB.GLBL_CMPY_CD                 = IL.GLBL_CMPY_CD
            AND IL.EZCANCELFLAG                 = '0'

            AND IL.SVC_MACH_MSTR_PK             = SMM.SVC_MACH_MSTR_PK(+)
            AND IL.GLBL_CMPY_CD                 = SMM.GLBL_CMPY_CD(+)
            AND SMM.EZCANCELFLAG(+)             = '0'
            AND SMM.SVC_CONFIG_MSTR_PK          = SCM.SVC_CONFIG_MSTR_PK(+)
            AND SMM.GLBL_CMPY_CD                = SCM.GLBL_CMPY_CD(+)
            AND SCM.EZCANCELFLAG(+)             = '0'
            AND SCM.SVC_MACH_MSTR_PK            = SMM_B.SVC_MACH_MSTR_PK(+)
            AND SCM.GLBL_CMPY_CD                = SMM_B.GLBL_CMPY_CD(+)
            AND SMM_B.EZCANCELFLAG(+)           = '0'

            AND IL.DS_CONTR_NUM                 = DC.DS_CONTR_NUM(+) 
            AND IL.GLBL_CMPY_CD                 = DC.GLBL_CMPY_CD (+)
            AND DC.EZCANCELFLAG (+)             = '0'
            AND DC.DS_CONTR_PK                  = DCD.DS_CONTR_PK(+)  
            AND IL.SVC_MACH_MSTR_PK             = DCD.SVC_MACH_MSTR_PK(+) 

            AND DCD.GLBL_CMPY_CD                = DMI.GLBL_CMPY_CD(+)
            AND DCD.SVC_PGM_MDSE_CD             = DMI.MDSE_CD(+)
            AND DMI.EZCANCELFLAG(+)             = '0'
            AND (IB.SHIP_TO_CUST_CD = #shipToCust#
                    OR IB.SHIP_TO_CUST_CD          IS NULL)
            <isNotNull property="poNo" >
            <!-- 2019/04/04 QC#30756 Mod Start -->
            <!-- AND NVL(I.LEASE_CMPY_PO_NUM, I.CUST_ISS_PO_NUM)   = #poNo# -->
            AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, I.CUST_ISS_PO_NUM))   = UPPER(#poNo#)
            <!-- 2019/04/04 QC#30756 Mod End -->
            </isNotNull>
            <isNull property="poNo" >
            AND NVL(I.LEASE_CMPY_PO_NUM, I.CUST_ISS_PO_NUM)  IS NULL
            </isNull>

            <isNotNull property="custCodes1" >
            AND IL.FIRST_BLLG_ATTRB_VAL_TXT    = #custCodes1#
            </isNotNull>
            <isNull property="custCodes1" >
            AND IL.FIRST_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes2">
            AND IL.SCD_BLLG_ATTRB_VAL_TXT    = #custCodes2#
            </isNotNull>
            <isNull property="custCodes2" >
            AND IL.SCD_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes3" >
            AND IL.THIRD_BLLG_ATTRB_VAL_TXT    = #custCodes3#
            </isNotNull>
            <isNull property="custCodes3" >
            AND IL.THIRD_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes4" >
            AND IL.FRTH_BLLG_ATTRB_VAL_TXT    = #custCodes4#
            </isNotNull>
            <isNull property="custCodes4" >
            AND IL.FRTH_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes5" >
            AND IL.FIFTH_BLLG_ATTRB_VAL_TXT    = #custCodes5#
            </isNotNull>
            <isNull property="custCodes5" >
            AND IL.FIFTH_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes6" >
            AND IL.SIXTH_BLLG_ATTRB_VAL_TXT    = #custCodes6#
            </isNotNull>
            <isNull property="custCodes6" >
            AND IL.SIXTH_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
        ) MACHINE

    GROUP BY
         MACHINE.CONTR_PK
        ,MACHINE.MACHINE_PK
        ,MACHINE.SERIAL_NO
        ,MACHINE.MODEL_ID
        <!-- ,MACHINE.SVC_PGM_CD QC#52615 2019/08/13 Del -->
        ,MACHINE.INV_LINE_TP_CD
        ,MACHINE.INV_PRINT_COV_TXT
        <!-- QC#29672 2019/01/29 Add Start -->
        ,MACHINE.SVC_INV_CHRG_TP_CD
        <!-- QC#29672 2019/01/29 Add End -->
    ORDER BY
         MIN(MACHINE.INV_LINE_NUM)
        ,MACHINE.CONTR_PK
        ,MACHINE.SERIAL_NO
        ,MACHINE.MACHINE_PK
        ,MACHINE.MODEL_ID
        <!-- ,MACHINE.SVC_PGM_CD QC#52615 2019/08/13 Del -->
        ,MACHINE.INV_LINE_TP_CD
        ,MACHINE.INV_PRINT_COV_TXT
        <!-- QC#29672 2019/01/29 Add Start -->
        ,MACHINE.SVC_INV_CHRG_TP_CD
        <!-- QC#29672 2019/01/29 Add End -->
    </statement>
    <!-- QC#27069 Add End -->
    <!-- QC#30494 Start -->
    <statement id="getMaintSerNum" parameterClass="Map" resultClass="Map">
    SELECT
        ACC.SER_NUM ACC_SER_NUM
       ,ACC.SVC_MACH_TP_CD ACC_SVC_MACH_TP_CD
       ,MAIN.SER_NUM BASE_SER_NUM
    FROM
        SVC_MACH_MSTR ACC
       ,SVC_CONFIG_MSTR SCM
       ,SVC_MACH_MSTR MAIN
    WHERE
        ACC.EZCANCELFLAG = '0'
    AND ACC.GLBL_CMPY_CD = 'ADB'
    AND ACC.SVC_MACH_MSTR_PK = #svcMachMstrPk#
    AND SCM.EZCANCELFLAG(+) = '0'
    AND SCM.GLBL_CMPY_CD(+) = 'ADB'
    AND ACC.SVC_CONFIG_MSTR_PK = SCM.SVC_CONFIG_MSTR_PK(+)
    AND MAIN.EZCANCELFLAG(+) = '0'
    AND MAIN.GLBL_CMPY_CD(+) = 'ADB'
    AND SCM.SVC_MACH_MSTR_PK = MAIN.SVC_MACH_MSTR_PK(+)
    </statement>
    <!-- QC#30494 End -->

    <statement id="getMaintMtrChrg" parameterClass="Map" resultClass="Map">
    SELECT 
        INV_NUM
       ,CHARGE_TYPE
       ,PERIOD_FROM
       ,PERIOD_THRU
       ,SVC_INV_CHRG_TP_CD
       <!-- QC#29672 2019/01/23 Mod Start -->
       ,CASE WHEN SVC_INV_CHRG_TP_CD = #siChrgTpCdMC# THEN NULL ELSE
            CASE WHEN AMOUNT_TXT &lt; 0 THEN
                '-' || CCY_SGN_TXT || TO_CHAR(ABS(AMOUNT_TXT), #amtFormat#)
            ELSE
                CCY_SGN_TXT || TO_CHAR(AMOUNT_TXT, #amtFormat#)
            END
        END AMOUNT_TXT
        <!--
       ,CASE WHEN SVC_INV_CHRG_TP_CD = #siChrgTpCdMC# THEN NULL ELSE
            CASE WHEN SUM(AMOUNT_TXT) &lt; 0 THEN
                '-' || CCY_SGN_TXT || TO_CHAR(ABS(SUM(AMOUNT_TXT)), #amtFormat#)
            ELSE
                CCY_SGN_TXT || TO_CHAR(SUM(AMOUNT_TXT), #amtFormat#)
            END
        END AMOUNT_TXT
        -->
        <!-- QC#29672 2019/01/23 Mod End -->
       ,CASE WHEN SVC_INV_CHRG_TP_CD = #siChrgTpCdAC# THEN 'Y' ELSE 'N' END SPECIAL_CHARGE_FLG
       <!-- QC#29672 2019/01/23 Mod Start -->
       ,AMOUNT_TXT AMOUNT
       <!-- ,SUM(AMOUNT_TXT) AMOUNT -->
       <!-- QC#29672 2019/01/23 Mod End -->
       ,CCY_SGN_TXT
       <!-- QC#29672 2019/01/23 Mod Start -->
       ,TO_CHAR(SVC_CONTR_BASE_BLLG_PK) SVC_CONTR_BASE_BLLG_PK_COMMA
       <!--
       ,LISTAGG(SVC_CONTR_BASE_BLLG_PK, ',') WITHIN GROUP (ORDER BY SVC_CONTR_BASE_BLLG_PK) SVC_CONTR_BASE_BLLG_PK_COMMA
        -->
       <!-- QC#29672 2019/01/23 Mod End -->
       ,TYPE
       ,SVC_MACH_MSTR_PK
       ,DS_CONTR_CRAT_TP_CD
       ,SVC_PGM_TP_CD
       ,SVC_INV_MERGE_TP_CD
       <!-- QC#29672 2019/01/23 Mod Start -->
       ,DS_CONTR_DTL_PK
       <!-- ,MIN(DS_CONTR_DTL_PK) DS_CONTR_DTL_PK -->
       <!-- QC#29672 2019/01/23 Mod End -->
       <!-- QC#29672 2019/01/30 Add Start -->
       ,HAS_PARENT
       <!-- QC#29672 2019/01/30 Add End -->
    FROM (
        <!-- Additional Charge of Contract Invoice from Service -->
        SELECT
             <!-- QC#26826 -->
             CASE WHEN SILAC.ADDL_CHRG_INV_TP_CD = 'BASE' THEN '3' ELSE '4' END TYPE,
             I.INV_NUM                              INV_NUM
            ,CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC# THEN
                 ACT.ADDL_CHRG_TP_NM
             ELSE
                 CASE WHEN SIL_B.SVC_INV_LINE_PK IS NOT NULL THEN
                     CASE WHEN IPE_B.INV_PRINT_EX_PK IS NULL THEN
                         INITCAP(IPSP_B.INV_PRINT_SVC_PGM_SRC_NM) || ' - ' || INITCAP(IPSP_B.INV_PRINT_SVC_PGM_PROD_NM) || ' ' ||
                             CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD = #siInvTpCdMACH# THEN #siChrgTpNmBase#
                                  WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD &lt;&gt; #siInvTpCdMACH# THEN #siChrgTpNmAttachment#
                             ELSE #siChrgTpNmUsage# END
                     ELSE
                         #tpFax# || ' ' ||
                             CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD = #siInvTpCdMACH# THEN #siChrgTpNmBase#
                                  WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD &lt;&gt; #siInvTpCdMACH# THEN #siChrgTpNmAttachment#
                             ELSE #siChrgTpNmUsage# END
                     END
                 ELSE
                     CASE WHEN SIL.SVC_INV_LINE_PK IS NOT NULL THEN
                         CASE WHEN IPE.INV_PRINT_EX_PK IS NULL THEN
                             INITCAP(IPSP.INV_PRINT_SVC_PGM_SRC_NM)  || ' - ' || INITCAP(IPSP.INV_PRINT_SVC_PGM_PROD_NM) || ' ' ||
                                 CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD = #siInvTpCdMACH# THEN #siChrgTpNmBase#
                                      WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD &lt;&gt; #siInvTpCdMACH# THEN #siChrgTpNmAttachment#
                                 ELSE #siChrgTpNmUsage# END
                         ELSE
                             #tpFax# || ' ' ||
                                 CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD = #siInvTpCdMACH# THEN #siChrgTpNmBase#
                                      WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD &lt;&gt; #siInvTpCdMACH# THEN #siChrgTpNmAttachment#
                                 ELSE #siChrgTpNmUsage# END
                         END
                     END
                 END
             END                                        CHARGE_TYPE
            ,SIL.BLLG_PER_FROM_DT                       PERIOD_FROM
            ,SIL.BLLG_PER_THRU_DT                       PERIOD_THRU
            ,IL.INV_LINE_DEAL_NET_AMT                   AMOUNT_TXT
            ,SIL.SVC_INV_CHRG_TP_CD
            ,CCY.CCY_SGN_TXT
            ,SIL.SVC_CONTR_BASE_BLLG_PK
            ,IL.SVC_MACH_MSTR_PK                        SVC_MACH_MSTR_PK
            ,NULL                                       DS_CONTR_CRAT_TP_CD
            ,M.SVC_PGM_TP_CD                            SVC_PGM_TP_CD
            <!-- START 06/20/2022 [QC#60205, MOD] -->
            <!--  ,NULL                                       SVC_INV_MERGE_TP_CD  -->
            ,DCD.SVC_INV_MERGE_TP_CD                    SVC_INV_MERGE_TP_CD
            <!-- END   06/20/2022 [QC#60205, MOD] -->
            ,IL.DS_CONTR_DTL_PK                         DS_CONTR_DTL_PK
            ,CASE WHEN (SIL.PRNT_SVC_INV_LINE_PK IS NOT NULL) THEN  'Y' ELSE 'N' END HAS_PARENT
        FROM
             INV                        I
            ,SVC_INV                    SI
            ,INV_LINE                   IL
            ,SVC_INV_LINE               SIL
            ,SVC_INV_LINE               SIL_B
            <!-- START 06/20/2022 [QC#60205, ADD] -->
            ,SVC_INV_LINE               SIL_AC
            ,DS_CONTR_DTL               DCD
            <!-- END   06/20/2022 [QC#60205, ADD] -->
            ,INV_PRINT_SVC_PGM          IPSP
            ,INV_PRINT_SVC_PGM          IPSP_B
            ,INV_PRINT_EX               IPE
            ,INV_PRINT_EX               IPE_B
            ,SVC_INV_LINE_ADDL_CHRG     SILAC
            ,ADDL_CHRG_TP_V             ACT
            ,CCY                        CCY
            ,MDSE                       M
        WHERE
                I.INV_NUM                   = #invNum#
            AND I.GLBL_CMPY_CD              = #glblCmpyCd#
            AND I.EZCANCELFLAG              = '0'

            AND SI.DS_CONTR_PK              = #contrPk#
            AND I.SYS_SRC_CD                &lt;&gt; #sysSrcCdNFC#
            AND I.INV_NUM                   = SI.SVC_INV_NUM
            AND I.GLBL_CMPY_CD              = SI.GLBL_CMPY_CD
            AND SI.EZCANCELFLAG             = '0'
            AND I.INV_NUM                   = IL.INV_NUM
            AND I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD
            AND IL.EZCANCELFLAG             = '0'
            AND IL.INV_NUM                  = SIL.SVC_INV_NUM
            AND IL.SVC_INV_LINE_PK          = SIL.SVC_INV_LINE_PK
            AND IL.GLBL_CMPY_CD             = SIL.GLBL_CMPY_CD
            AND SIL.EZCANCELFLAG            = '0'
            AND SIL.SVC_PGM_MDSE_CD         = IPSP.INV_PRINT_SVC_PGM_CD (+)
            AND SIL.GLBL_CMPY_CD            = IPSP.GLBL_CMPY_CD (+)
            AND IPSP.EZCANCELFLAG(+)        = '0'
            AND SIL.SVC_INV_NUM             = SIL_B.SVC_INV_NUM (+)
            AND SIL.PRNT_SVC_INV_LINE_PK    = SIL_B.SVC_INV_LINE_PK (+)
            AND SIL.GLBL_CMPY_CD            = SIL_B.GLBL_CMPY_CD (+)
            AND SIL_B.EZCANCELFLAG(+)       = '0'
            <!-- START 06/20/2022 [QC#60205, ADD] -->
            AND SIL_B.SVC_INV_NUM             = SIL_AC.SVC_INV_NUM (+)
            AND SIL_B.PRNT_SVC_INV_LINE_PK    = SIL_AC.SVC_INV_LINE_PK (+)
            AND SIL_B.GLBL_CMPY_CD            = SIL_AC.GLBL_CMPY_CD (+)
            AND SIL_AC.EZCANCELFLAG(+)        = '0'
            AND IL.GLBL_CMPY_CD               = DCD.GLBL_CMPY_CD(+)
            AND DCD.EZCANCELFLAG(+)           = '0'
            AND IL.DS_CONTR_DTL_PK            = DCD.DS_CONTR_DTL_PK
            <isNotNull property="lineTpMach" >
            AND ((DCD.DS_CONTR_DTL_TP_CD &lt;&gt; #dtlTpAcc#) OR (DCD.DS_CONTR_DTL_TP_CD = #dtlTpAcc# AND DCD.SVC_INV_MERGE_TP_CD = #mergeIntoBase#))
            </isNotNull>
            <!-- END   06/20/2022 [QC#60205, ADD] -->
            AND SIL_B.SVC_PGM_MDSE_CD       = IPSP_B.INV_PRINT_SVC_PGM_CD (+)
            AND SIL_B.GLBL_CMPY_CD          = IPSP_B.GLBL_CMPY_CD (+)
            AND IPSP_B.EZCANCELFLAG(+)      = '0'
            AND I.BILL_TO_CUST_ACCT_CD      = IPE.DS_ACCT_NUM (+)
            AND SIL.MDL_ID                  = IPE.MDL_ID (+)
            AND I.GLBL_CMPY_CD              = IPE.GLBL_CMPY_CD (+)
            AND IPE.EZCANCELFLAG(+)         = '0'
            <!-- QC#19191 add Start -->
            AND I.BILL_TO_CUST_ACCT_CD      = IPE_B.DS_ACCT_NUM (+)
            AND SIL_B.MDL_ID                = IPE_B.MDL_ID (+)
            AND I.GLBL_CMPY_CD              = IPE_B.GLBL_CMPY_CD (+)
            AND IPE_B.EZCANCELFLAG(+)       = '0'
            <!-- QC#19191 add End -->
            AND SIL.SVC_INV_LINE_PK         = SILAC.SVC_INV_LINE_PK (+)
            AND SIL.GLBL_CMPY_CD            = SILAC.GLBL_CMPY_CD (+)
            AND SILAC.PRINT_DTL_FLG (+)     = #flgY# <!-- QC#18223 add -->
            AND SILAC.EZCANCELFLAG(+)       = '0'
            AND SILAC.ADDL_CHRG_TP_CD       = ACT.ADDL_CHRG_TP_CD (+)
            AND SILAC.GLBL_CMPY_CD          = ACT.GLBL_CMPY_CD (+)
            AND ACT.EZCANCELFLAG(+)         = '0'
            AND (NVL(SIL_B.SHIP_TO_CUST_CD, SIL.SHIP_TO_CUST_CD) = #shipToCust#
                    OR NVL(SIL_B.SHIP_TO_CUST_CD, SIL.SHIP_TO_CUST_CD)          IS NULL)
            AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
            AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
            AND CCY.EZCANCELFLAG(+)         = '0'
            AND SIL.GLBL_CMPY_CD            = M.GLBL_CMPY_CD(+)
            AND SIL.EZCANCELFLAG            = M.EZCANCELFLAG(+)
            AND SIL.SVC_PGM_MDSE_CD         = M.MDSE_CD(+)
            AND SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC#
            -- <!-- QC#30852 -->
            AND SIL.SVC_INV_CHRG_TP_CD = #svcInvChrgTpCd#
            --
            <!-- QC#29672 2019/01/30 Mod Start -->
            <isNotNull property="modelId" >
            <!-- QC#30852 -->
                AND (SIL_B.MDL_ID = #modelId# OR SIL.MDL_ID = #modelId#)
            <!-- 
                <isNotNull property="isMergeTpPrintAccs" >
                AND SIL.MDL_ID                 = #modelId#
                </isNotNull>
                <isNull property="isMergeTpPrintAccs" >
                AND CASE WHEN SIL.PRNT_SVC_INV_LINE_PK IS NOT NULL THEN
                        SIL_B.MDL_ID
                    ELSE
                        SIL.MDL_ID
                    END = #modelId#
                </isNull>
            QC#30852 -->
            </isNotNull>
            <isNull property="modelId" >
                <isNotNull property="isMergeTpPrintAccs" >
                AND SIL.MDL_ID                 IS NULL
                </isNotNull>
                <isNull property="isMergeTpPrintAccs" >
                AND CASE WHEN SIL.PRNT_SVC_INV_LINE_PK IS NOT NULL THEN
                        SIL_B.MDL_ID
                    ELSE
                        SIL.MDL_ID
                    END IS NULL
                </isNull>
            </isNull>
            <!--
            <isNotNull property="modelId" >
            AND NVL(SIL_B.MDL_ID, SIL.MDL_ID)                 = #modelId#
            </isNotNull>
            <isNull property="modelId" >
            AND NVL(SIL_B.MDL_ID, SIL.MDL_ID)                  IS NULL
            </isNull>
            -->
            <!-- QC#29672 2019/01/30 Mod End -->
            <!-- QC#29672 2019/01/30 Mod Start -->
            <isNotNull property="machPk" >
            <!-- QC#30852 -->
            <!-- START 06/20/2022 [QC#60205, MOD] -->
            <!--     AND (SIL_B.SVC_MACH_MSTR_PK = #machPk# OR SIL.SVC_MACH_MSTR_PK = #machPk#)  -->
                AND (SIL_B.SVC_MACH_MSTR_PK = #machPk# OR SIL.SVC_MACH_MSTR_PK = #machPk# OR SIL_AC.SVC_MACH_MSTR_PK = #machPk#)
            <!-- END   06/20/2022 [QC#60205, MOD] -->
            <!-- 
                <isNotNull property="isMergeTpPrintAccs" >
                AND SIL.SVC_MACH_MSTR_PK                 = #machPk#
                </isNotNull>
                <isNull property="isMergeTpPrintAccs" >
                AND CASE WHEN SIL.PRNT_SVC_INV_LINE_PK IS NOT NULL THEN
                        SIL_B.SVC_MACH_MSTR_PK
                    ELSE
                        SIL.SVC_MACH_MSTR_PK
                    END = #machPk#
                </isNull>
            QC#30852 -->
            </isNotNull>
            <isNull property="machPk" >
                <isNotNull property="isMergeTpPrintAccs" >
                AND SIL.SVC_MACH_MSTR_PK                 IS NULL
                </isNotNull>
                <isNull property="isMergeTpPrintAccs" >
                AND CASE WHEN SIL.PRNT_SVC_INV_LINE_PK IS NOT NULL THEN
                        SIL_B.SVC_MACH_MSTR_PK
                    ELSE
                        SIL.SVC_MACH_MSTR_PK
                    END IS NULL
                </isNull>
            </isNull>
            <!--
            <isNotNull property="machPk" >
            AND NVL(SIL_B.SVC_MACH_MSTR_PK, SIL.SVC_MACH_MSTR_PK)         = #machPk#
            </isNotNull>
            <isNull property="machPk" >
            AND NVL(SIL_B.SVC_MACH_MSTR_PK, SIL.SVC_MACH_MSTR_PK)         IS NULL
            </isNull>
            -->
            <!-- QC#29672 2019/01/30 Mod End -->
            <!-- QC#29672 2019/01/23 Mod Start -->
            <isNotNull property="svcPgm" >
            <!-- QC#30852 -->
            <!-- START 06/20/2022 [QC#60205, MOD] -->
            <!--     AND (SIL_B.INV_PRINT_COV_TXT = #svcPgm# OR SIL.INV_PRINT_COV_TXT = #svcPgm#)   -->
                AND (SIL_B.INV_PRINT_COV_TXT = #svcPgm# OR SIL.INV_PRINT_COV_TXT = #svcPgm# OR SIL_AC.INV_PRINT_COV_TXT = #svcPgm#)
            <!-- END   06/20/2022 [QC#60205, MOD] -->
            <!-- 
                <isNotNull property="isMergeTpPrintAccs" >
                AND SIL.INV_PRINT_COV_TXT                 = #svcPgm#
                </isNotNull>
                <isNull property="isMergeTpPrintAccs" >
                AND CASE WHEN SIL.PRNT_SVC_INV_LINE_PK IS NOT NULL THEN
                        SIL_B.INV_PRINT_COV_TXT
                    ELSE
                        SIL.INV_PRINT_COV_TXT
                    END = #svcPgm#
                </isNull>
            QC#30852 -->
            </isNotNull>
            <isNull property="svcPgm" >
                <isNotNull property="isMergeTpPrintAccs" >
                AND SIL.INV_PRINT_COV_TXT                 IS NULL
                </isNotNull>
                <isNull property="isMergeTpPrintAccs" >
                AND CASE WHEN SIL.PRNT_SVC_INV_LINE_PK IS NOT NULL THEN
                        SIL_B.INV_PRINT_COV_TXT
                    ELSE
                        SIL.INV_PRINT_COV_TXT
                    END IS NULL
                </isNull>
            </isNull>
            <!--
            <isNotNull property="svcPgm" >
            AND NVL(SIL_B.INV_PRINT_COV_TXT, SIL.INV_PRINT_COV_TXT)         = #svcPgm#
            </isNotNull>
            <isNull property="svcPgm" >
            AND NVL(SIL_B.INV_PRINT_COV_TXT, SIL.INV_PRINT_COV_TXT)         IS NULL
            </isNull>
            -->
            <!-- QC#29672 2019/01/23 Mod End -->
            <isNotNull property="custCodes1" >
            AND SIL.FIRST_BLLG_ATTRB_VAL_TXT    = #custCodes1#
            </isNotNull>
            <isNull property="custCodes1" >
            AND SIL.FIRST_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes2">
            AND SIL.SCD_BLLG_ATTRB_VAL_TXT    = #custCodes2#
            </isNotNull>
            <isNull property="custCodes2" >
            AND SIL.SCD_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes3" >
            AND SIL.THIRD_BLLG_ATTRB_VAL_TXT    = #custCodes3#
            </isNotNull>
            <isNull property="custCodes3" >
            AND SIL.THIRD_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes4" >
            AND SIL.FRTH_BLLG_ATTRB_VAL_TXT    = #custCodes4#
            </isNotNull>
            <isNull property="custCodes4" >
            AND SIL.FRTH_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes5" >
            AND SIL.FIFTH_BLLG_ATTRB_VAL_TXT    = #custCodes5#
            </isNotNull>
            <isNull property="custCodes5" >
            AND SIL.FIFTH_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes6" >
            AND SIL.SIXTH_BLLG_ATTRB_VAL_TXT    = #custCodes6#
            </isNotNull>
            <isNull property="custCodes6" >
            AND SIL.SIXTH_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNull property="poNo">
                <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))       IS NULL  -->
                <!-- QC#50104 Mod -->
                <!-- START 2022/02/21 [QC#59724, MOD] -->
                <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)) IS NULL -->
                AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
                THEN I.CUST_ISS_PO_NUM
                ELSE NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))
                END IS NULL
                <!-- END   2022/02/21 [QC#59724, MOD] -->
            </isNull>
            <isNotNull property="poNo">
                <!-- 2019/04/04 QC#30756 Mod Start -->
                <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))       = #poNo# -->
                <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)))       = UPPER(#poNo#)  -->
                <!-- 2019/04/04 QC#30756 Mod End -->
                <!-- QC#50104 Mod -->
                <!-- START 2022/02/21 [QC#59724, MOD] -->
                <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))) = UPPER(#poNo#) -->
                AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
                THEN UPPER(I.CUST_ISS_PO_NUM)
                ELSE UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)))
                END = UPPER(#poNo#)
                <!-- END   2022/02/21 [QC#59724, MOD] -->
            </isNotNull>
        UNION ALL
        <!-- Additional Charge of Contract Invoice from AR -->
        SELECT
             <!-- QC#26826 -->
             CASE WHEN SILAC.ADDL_CHRG_INV_TP_CD = 'BASE' THEN '3' ELSE '4' END TYPE,
             I.INV_NUM                              INV_NUM
            ,CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC# THEN
                 ACT.ADDL_CHRG_TP_NM
             ELSE
                 CASE WHEN SIL_B.SVC_INV_LINE_PK IS NOT NULL THEN
                     CASE WHEN IPE_B.INV_PRINT_EX_PK IS NULL THEN
                         INITCAP(IPSP_B.INV_PRINT_SVC_PGM_SRC_NM) || ' - ' || INITCAP(IPSP_B.INV_PRINT_SVC_PGM_PROD_NM) || ' ' ||
                             CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD = #siInvTpCdMACH# THEN #siChrgTpNmBase#
                                  WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD &lt;&gt; #siInvTpCdMACH# THEN #siChrgTpNmAttachment#
                             ELSE #siChrgTpNmUsage# END
                     ELSE
                         #tpFax# || ' ' ||
                             CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD = #siInvTpCdMACH# THEN #siChrgTpNmBase#
                                  WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD &lt;&gt; #siInvTpCdMACH# THEN #siChrgTpNmAttachment#
                             ELSE #siChrgTpNmUsage# END
                     END
                 ELSE
                     CASE WHEN SIL.SVC_INV_LINE_PK IS NOT NULL THEN
                         CASE WHEN IPE.INV_PRINT_EX_PK IS NULL THEN
                             INITCAP(IPSP.INV_PRINT_SVC_PGM_SRC_NM)  || ' - ' || INITCAP(IPSP.INV_PRINT_SVC_PGM_PROD_NM) || ' ' ||
                                 CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD = #siInvTpCdMACH# THEN #siChrgTpNmBase#
                                      WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD &lt;&gt; #siInvTpCdMACH# THEN #siChrgTpNmAttachment#
                                 ELSE #siChrgTpNmUsage# END
                         ELSE
                             #tpFax# || ' ' ||
                                 CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD = #siInvTpCdMACH# THEN #siChrgTpNmBase#
                                      WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD &lt;&gt; #siInvTpCdMACH# THEN #siChrgTpNmAttachment#
                                 ELSE #siChrgTpNmUsage# END
                         END
                     END
                 END
             END                                        CHARGE_TYPE
            ,SIL.BLLG_PER_FROM_DT                       PERIOD_FROM
            ,SIL.BLLG_PER_THRU_DT                       PERIOD_THRU
            ,IL.INV_LINE_DEAL_NET_AMT                   AMOUNT_TXT
            ,SIL.SVC_INV_CHRG_TP_CD
            ,CCY.CCY_SGN_TXT
            ,SIL.SVC_CONTR_BASE_BLLG_PK
            ,IL.SVC_MACH_MSTR_PK                        SVC_MACH_MSTR_PK
            ,NULL                                       DS_CONTR_CRAT_TP_CD
            ,M.SVC_PGM_TP_CD                            SVC_PGM_TP_CD
            <!-- START 06/20/2022 [QC#60205, MOD] -->
            <!--  ,NULL                                       SVC_INV_MERGE_TP_CD  -->
            ,DCD.SVC_INV_MERGE_TP_CD                    SVC_INV_MERGE_TP_CD
            <!-- END   06/20/2022 [QC#60205, MOD] -->
            ,IL.DS_CONTR_DTL_PK                         DS_CONTR_DTL_PK
            ,CASE WHEN (SIL.PRNT_SVC_INV_LINE_PK IS NOT NULL) THEN  'Y' ELSE 'N' END HAS_PARENT
        FROM
             INV                        I
            ,SVC_INV                    SI
            ,INV_LINE                   IL
            ,SVC_INV_LINE               SIL
            ,INV_PRINT_SVC_PGM          IPSP
            ,SVC_INV_LINE               SIL_B
            <!-- START 06/20/2022 [QC#60205, ADD] -->
            ,SVC_INV_LINE               SIL_AC
            ,DS_CONTR_DTL               DCD
            <!-- END   06/20/2022 [QC#60205, ADD] -->
            ,INV_PRINT_SVC_PGM          IPSP_B
            ,INV_PRINT_EX               IPE
            ,INV_PRINT_EX               IPE_B
            ,SVC_INV_LINE_ADDL_CHRG     SILAC
            ,ADDL_CHRG_TP_V             ACT
            ,CCY                        CCY
            ,MDSE                       M
        WHERE
                I.INV_NUM                   = #invNum#
            AND I.GLBL_CMPY_CD              = #glblCmpyCd#
            AND I.EZCANCELFLAG              = '0'

            AND SI.DS_CONTR_PK              = #contrPk#
            AND I.SYS_SRC_CD                = #sysSrcCdNFC#
            AND I.ORIG_INV_NUM              = SI.SVC_INV_NUM
            AND I.GLBL_CMPY_CD              = SI.GLBL_CMPY_CD
            AND SI.EZCANCELFLAG             = '0'
            AND I.INV_NUM                   = IL.INV_NUM
            AND I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD
            AND IL.EZCANCELFLAG             = '0'
            AND IL.SVC_INV_LINE_PK          = SIL.SVC_INV_LINE_PK
            AND IL.GLBL_CMPY_CD             = SIL.GLBL_CMPY_CD
            AND SIL.EZCANCELFLAG            = '0'
            AND SIL.SVC_PGM_MDSE_CD         = IPSP.INV_PRINT_SVC_PGM_CD (+)
            AND SIL.GLBL_CMPY_CD            = IPSP.GLBL_CMPY_CD (+)
            AND IPSP.EZCANCELFLAG(+)        = '0'
            AND SIL.PRNT_SVC_INV_LINE_PK    = SIL_B.SVC_INV_LINE_PK (+)
            AND SIL.GLBL_CMPY_CD            = SIL_B.GLBL_CMPY_CD (+)
            AND SIL_B.EZCANCELFLAG(+)       = '0'
            <!-- START 06/20/2022 [QC#60205, ADD] -->
            AND SIL_B.SVC_INV_NUM             = SIL_AC.SVC_INV_NUM (+)
            AND SIL_B.PRNT_SVC_INV_LINE_PK    = SIL_AC.SVC_INV_LINE_PK (+)
            AND SIL_B.GLBL_CMPY_CD            = SIL_AC.GLBL_CMPY_CD (+)
            AND SIL_AC.EZCANCELFLAG(+)        = '0'
            AND IL.GLBL_CMPY_CD               = DCD.GLBL_CMPY_CD(+)
            AND DCD.EZCANCELFLAG(+)           = '0'
            AND IL.DS_CONTR_DTL_PK            = DCD.DS_CONTR_DTL_PK
            <isNotNull property="lineTpMach" >
            AND ((DCD.DS_CONTR_DTL_TP_CD &lt;&gt; #dtlTpAcc#) OR (DCD.DS_CONTR_DTL_TP_CD = #dtlTpAcc# AND DCD.SVC_INV_MERGE_TP_CD = #mergeIntoBase#))
            </isNotNull>
            <!-- END   06/20/2022 [QC#60205, ADD] -->
            AND SIL_B.SVC_PGM_MDSE_CD       = IPSP_B.INV_PRINT_SVC_PGM_CD (+)
            AND SIL_B.GLBL_CMPY_CD          = IPSP_B.GLBL_CMPY_CD (+)
            AND IPSP_B.EZCANCELFLAG(+)      = '0'
            AND I.BILL_TO_CUST_ACCT_CD      = IPE.DS_ACCT_NUM (+)
            AND SIL.MDL_ID                  = IPE.MDL_ID (+)
            AND I.GLBL_CMPY_CD              = IPE.GLBL_CMPY_CD (+)
            AND IPE.EZCANCELFLAG(+)         = '0'
            <!-- QC#19191 add Start -->
            AND I.BILL_TO_CUST_ACCT_CD      = IPE_B.DS_ACCT_NUM (+)
            AND SIL_B.MDL_ID                = IPE_B.MDL_ID (+)
            AND I.GLBL_CMPY_CD              = IPE_B.GLBL_CMPY_CD (+)
            AND IPE_B.EZCANCELFLAG(+)       = '0'
            <!-- QC#19191 add End -->
            AND SIL.SVC_INV_LINE_PK         = SILAC.SVC_INV_LINE_PK (+)
            AND SIL.GLBL_CMPY_CD            = SILAC.GLBL_CMPY_CD (+)
            AND SILAC.PRINT_DTL_FLG (+)     = #flgY# <!-- QC#18223 add -->
            AND SILAC.EZCANCELFLAG(+)       = '0'
            AND SILAC.ADDL_CHRG_TP_CD       = ACT.ADDL_CHRG_TP_CD (+)
            AND SILAC.GLBL_CMPY_CD          = ACT.GLBL_CMPY_CD (+)
            AND ACT.EZCANCELFLAG(+)         = '0'
            AND (NVL(SIL_B.SHIP_TO_CUST_CD, SIL.SHIP_TO_CUST_CD) = #shipToCust#
                    OR NVL(SIL_B.SHIP_TO_CUST_CD, SIL.SHIP_TO_CUST_CD)          IS NULL)
            AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
            AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
            AND CCY.EZCANCELFLAG(+)         = '0'
            AND SIL.GLBL_CMPY_CD            = M.GLBL_CMPY_CD(+)
            AND SIL.EZCANCELFLAG            = M.EZCANCELFLAG(+)
            AND SIL.SVC_PGM_MDSE_CD         = M.MDSE_CD(+)
            AND SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC#
            <!-- START 06/20/2022 [QC#60205, ADD] -->
            AND SIL.SVC_INV_CHRG_TP_CD = #svcInvChrgTpCd#
            <!-- END   06/20/2022 [QC#60205, ADD] -->
            <!-- QC#29672 2019/01/30 Mod Start -->
            <isNotNull property="modelId" >
                <isNotNull property="isMergeTpPrintAccs" >
            <!-- START 06/20/2022 [QC#60205, MOD] -->
            <!--     AND SIL.MDL_ID                 = #modelId#  -->
                AND CASE WHEN SIL.PRNT_SVC_INV_LINE_PK IS NOT NULL THEN
                        SIL_B.MDL_ID
                    ELSE
                        SIL.MDL_ID
                    END = #modelId#
            <!-- END   06/20/2022 [QC#60205, MOD] -->
                </isNotNull>
                <isNull property="isMergeTpPrintAccs" >
                AND CASE WHEN SIL.PRNT_SVC_INV_LINE_PK IS NOT NULL THEN
                        SIL_B.MDL_ID
                    ELSE
                        SIL.MDL_ID
                    END = #modelId#
                </isNull>
            </isNotNull>
            <isNull property="modelId" >
                <isNotNull property="isMergeTpPrintAccs" >
                AND SIL.MDL_ID                 IS NULL
                </isNotNull>
                <isNull property="isMergeTpPrintAccs" >
                AND CASE WHEN SIL.PRNT_SVC_INV_LINE_PK IS NOT NULL THEN
                        SIL_B.MDL_ID
                    ELSE
                        SIL.MDL_ID
                    END IS NULL
                </isNull>
            </isNull>
            <!--
            <isNotNull property="modelId" >
            AND NVL(SIL_B.MDL_ID, SIL.MDL_ID)                 = #modelId#
            </isNotNull>
            <isNull property="modelId" >
            AND NVL(SIL_B.MDL_ID, SIL.MDL_ID)                  IS NULL
            </isNull>
            -->
            <!-- QC#29672 2019/01/30 Mod End -->
            <!-- QC#29672 2019/01/30 Mod Start -->
            <isNotNull property="machPk" >
            <!-- START 06/20/2022 [QC#60205, MOD] -->
                AND (SIL_B.SVC_MACH_MSTR_PK = #machPk# OR SIL.SVC_MACH_MSTR_PK = #machPk# OR SIL_AC.SVC_MACH_MSTR_PK = #machPk#)
              <!--
                <isNotNull property="isMergeTpPrintAccs" >
                AND SIL.SVC_MACH_MSTR_PK                 = #machPk#
                </isNotNull>
                <isNull property="isMergeTpPrintAccs" >
                AND CASE WHEN SIL.PRNT_SVC_INV_LINE_PK IS NOT NULL THEN
                        SIL_B.SVC_MACH_MSTR_PK
                    ELSE
                        SIL.SVC_MACH_MSTR_PK
                    END = #machPk#
                </isNull>
               -->
            <!-- END   06/20/2022 [QC#60205, MOD] -->
            </isNotNull>
            <isNull property="machPk" >
                <isNotNull property="isMergeTpPrintAccs" >
                AND SIL.SVC_MACH_MSTR_PK                 IS NULL
                </isNotNull>
                <isNull property="isMergeTpPrintAccs" >
                AND CASE WHEN SIL.PRNT_SVC_INV_LINE_PK IS NOT NULL THEN
                        SIL_B.SVC_MACH_MSTR_PK
                    ELSE
                        SIL.SVC_MACH_MSTR_PK
                    END IS NULL
                </isNull>
            </isNull>
            <!--
            <isNotNull property="machPk" >
            AND NVL(SIL_B.SVC_MACH_MSTR_PK, SIL.SVC_MACH_MSTR_PK)         = #machPk#
            </isNotNull>
            <isNull property="machPk" >
            AND NVL(SIL_B.SVC_MACH_MSTR_PK, SIL.SVC_MACH_MSTR_PK)         IS NULL
            </isNull>
            -->
            <!-- QC#29672 2019/01/30 Mod End -->
            <!-- QC#29672 2019/01/23 Mod Start -->
            <isNotNull property="svcPgm" >
            <!-- START 06/20/2022 [QC#60205, MOD] -->
                AND (SIL_B.INV_PRINT_COV_TXT = #svcPgm# OR SIL.INV_PRINT_COV_TXT = #svcPgm# OR SIL_AC.INV_PRINT_COV_TXT = #svcPgm#)
            <!--    <isNotNull property="isMergeTpPrintAccs" >
                AND SIL.INV_PRINT_COV_TXT                 = #svcPgm#
                </isNotNull>
                <isNull property="isMergeTpPrintAccs" >
                AND CASE WHEN SIL.PRNT_SVC_INV_LINE_PK IS NOT NULL THEN
                        SIL_B.INV_PRINT_COV_TXT
                    ELSE
                        SIL.INV_PRINT_COV_TXT
                    END = #svcPgm#
                </isNull>
             -->
            <!-- END   06/20/2022 [QC#60205, MOD] -->
            </isNotNull>
            <isNull property="svcPgm" >
                <isNotNull property="isMergeTpPrintAccs" >
                AND SIL.INV_PRINT_COV_TXT                 IS NULL
                </isNotNull>
                <isNull property="isMergeTpPrintAccs" >
                AND CASE WHEN SIL.PRNT_SVC_INV_LINE_PK IS NOT NULL THEN
                        SIL_B.INV_PRINT_COV_TXT
                    ELSE
                        SIL.INV_PRINT_COV_TXT
                    END IS NULL
                </isNull>
            </isNull>
            <!--
            <isNotNull property="svcPgm" >
            AND NVL(SIL_B.INV_PRINT_COV_TXT, SIL.INV_PRINT_COV_TXT)         = #svcPgm#
            </isNotNull>
            <isNull property="svcPgm" >
            AND NVL(SIL_B.INV_PRINT_COV_TXT, SIL.INV_PRINT_COV_TXT)         IS NULL
            </isNull>
            -->
            <!-- QC#29672 2019/01/23 Mod End -->
            <isNotNull property="custCodes1" >
            AND SIL.FIRST_BLLG_ATTRB_VAL_TXT    = #custCodes1#
            </isNotNull>
            <isNull property="custCodes1" >
            AND SIL.FIRST_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes2">
            AND SIL.SCD_BLLG_ATTRB_VAL_TXT    = #custCodes2#
            </isNotNull>
            <isNull property="custCodes2" >
            AND SIL.SCD_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes3" >
            AND SIL.THIRD_BLLG_ATTRB_VAL_TXT    = #custCodes3#
            </isNotNull>
            <isNull property="custCodes3" >
            AND SIL.THIRD_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes4" >
            AND SIL.FRTH_BLLG_ATTRB_VAL_TXT    = #custCodes4#
            </isNotNull>
            <isNull property="custCodes4" >
            AND SIL.FRTH_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes5" >
            AND SIL.FIFTH_BLLG_ATTRB_VAL_TXT    = #custCodes5#
            </isNotNull>
            <isNull property="custCodes5" >
            AND SIL.FIFTH_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes6" >
            AND SIL.SIXTH_BLLG_ATTRB_VAL_TXT    = #custCodes6#
            </isNotNull>
            <isNull property="custCodes6" >
            AND SIL.SIXTH_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNull property="poNo">
                <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))       IS NULL -->
                <!-- QC#50104 Mod -->
                <!-- START 2022/02/21 [QC#59724, MOD] -->
                <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)) IS NULL -->
                AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
                THEN I.CUST_ISS_PO_NUM
                ELSE NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))
                END IS NULL
                <!-- END   2022/02/21 [QC#59724, MOD] -->
            </isNull>
            <isNotNull property="poNo">
                <!-- 2019/04/04 QC#30756 Mod Start -->
                <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))       = #poNo# -->
                <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)))       = UPPER(#poNo#) -->
                <!-- 2019/04/04 QC#30756 Mod End -->
                <!-- QC#50104 Mod -->
                <!-- START 2022/02/21 [QC#59724, MOD] -->
                <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))) = UPPER(#poNo#) -->
                AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
                THEN UPPER(I.CUST_ISS_PO_NUM)
                ELSE UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)))
                END = UPPER(#poNo#)
                <!-- END   2022/02/21 [QC#59724, MOD] -->
            </isNotNull>
        UNION ALL
        <!-- Base or Usage Charge of Contract Invoice from Service -->
        SELECT
             <!-- QC#26826 -->
             CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD = #siInvTpCdMACH# THEN '1' 
                  WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD &lt;&gt; #siInvTpCdMACH# THEN '2' 
                  ELSE '5' END TYPE,
             I.INV_NUM                              INV_NUM
            ,CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC# THEN
                 ACT.ADDL_CHRG_TP_NM 
             ELSE
                 CASE WHEN SIL.SVC_INV_LINE_PK IS NOT NULL THEN 
                     CASE WHEN IPE.INV_PRINT_EX_PK IS NULL THEN 
                         INITCAP(IPSP.INV_PRINT_SVC_PGM_SRC_NM)  || ' - ' || INITCAP(IPSP.INV_PRINT_SVC_PGM_PROD_NM) || ' ' || 
                             CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD = #siInvTpCdMACH# THEN #siChrgTpNmBase#
                                  WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD &lt;&gt; #siInvTpCdMACH# THEN #siChrgTpNmAttachment#
                             ELSE #siChrgTpNmUsage# END 
                     ELSE
                         'Fax' || ' ' ||
                             CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD = #siInvTpCdMACH# THEN #siChrgTpNmBase#
                                  WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD &lt;&gt; #siInvTpCdMACH# THEN #siChrgTpNmAttachment#
                             ELSE #siChrgTpNmUsage# END
                     END
                 END
             END                                        CHARGE_TYPE
            ,SIL.BLLG_PER_FROM_DT                       PERIOD_FROM
            ,SIL.BLLG_PER_THRU_DT                       PERIOD_THRU
            <!-- ,IL.INV_LINE_DEAL_NET_AMT                   AMOUNT_TXT QC#52209 2019/07/31 Mod -->-->
            ,SIL.INV_LINE_DEAL_NET_AMT                  AMOUNT_TXT
            ,SIL.SVC_INV_CHRG_TP_CD
            ,CCY.CCY_SGN_TXT
            ,SIL.SVC_CONTR_BASE_BLLG_PK
            ,IL.SVC_MACH_MSTR_PK                        SVC_MACH_MSTR_PK
            ,DCD.DS_CONTR_CRAT_TP_CD                    DS_CONTR_CRAT_TP_CD
            ,M.SVC_PGM_TP_CD                            SVC_PGM_TP_CD
            ,DCD.SVC_INV_MERGE_TP_CD                    SVC_INV_MERGE_TP_CD
            ,IL.DS_CONTR_DTL_PK                         DS_CONTR_DTL_PK
            ,CASE WHEN (SIL.PRNT_SVC_INV_LINE_PK IS NOT NULL) THEN  'Y' ELSE 'N' END HAS_PARENT
        FROM
             INV                        I
            ,SVC_INV                    SI
            ,INV_LINE                   IL
            <!-- QC#52209 2019/07/31 Mod -->
            <!-- ,SVC_INV_LINE               SIL -->
            <!-- ,SVC_INV_LINE               SIL_B -->
            ,INV_PRT_SVC_INV_LINE_WRK     SIL
            ,INV_PRT_SVC_INV_LINE_WRK     SIL_B
            ,INV_PRINT_SVC_PGM          IPSP
            ,INV_PRINT_SVC_PGM          IPSP_B
            ,INV_PRINT_EX               IPE
            ,INV_PRINT_EX               IPE_B
            ,SVC_INV_LINE_ADDL_CHRG     SILAC
            ,ADDL_CHRG_TP_V             ACT
            ,CCY                        CCY
            ,DS_CONTR_DTL               DCD
            ,MDSE                       M
        WHERE
                I.INV_NUM                   = #invNum#
            AND I.GLBL_CMPY_CD              = #glblCmpyCd#
            AND I.EZCANCELFLAG              = '0'

            AND SI.DS_CONTR_PK              = #contrPk#
            AND I.SYS_SRC_CD                &lt;&gt; #sysSrcCdNFC#
            AND I.INV_NUM                   = SI.SVC_INV_NUM
            AND I.GLBL_CMPY_CD              = SI.GLBL_CMPY_CD
            AND SI.EZCANCELFLAG             = '0'
            AND I.INV_NUM                   = IL.INV_NUM
            AND I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD
            AND IL.EZCANCELFLAG             = '0'
            AND IL.INV_NUM                  = SIL.SVC_INV_NUM
            AND IL.SVC_INV_LINE_PK          = SIL.SVC_INV_LINE_PK
            AND IL.GLBL_CMPY_CD             = SIL.GLBL_CMPY_CD
            AND SIL.EZCANCELFLAG            = '0'
            AND SIL.SVC_PGM_MDSE_CD         = IPSP.INV_PRINT_SVC_PGM_CD (+)
            AND SIL.GLBL_CMPY_CD            = IPSP.GLBL_CMPY_CD (+)
            AND IPSP.EZCANCELFLAG(+)        = '0'
            AND SIL.SVC_INV_NUM             = SIL_B.SVC_INV_NUM (+)
            AND SIL.PRNT_SVC_INV_LINE_PK    = SIL_B.SVC_INV_LINE_PK (+)
            AND SIL.GLBL_CMPY_CD            = SIL_B.GLBL_CMPY_CD (+)
            AND SIL_B.EZCANCELFLAG(+)       = '0'
            AND SIL_B.SVC_PGM_MDSE_CD       = IPSP_B.INV_PRINT_SVC_PGM_CD (+)
            AND SIL_B.GLBL_CMPY_CD          = IPSP_B.GLBL_CMPY_CD (+)
            AND IPSP_B.EZCANCELFLAG(+)      = '0'
            AND I.BILL_TO_CUST_ACCT_CD      = IPE.DS_ACCT_NUM (+)
            AND SIL.MDL_ID                  = IPE.MDL_ID (+)
            AND I.GLBL_CMPY_CD              = IPE.GLBL_CMPY_CD (+)
            AND IPE.EZCANCELFLAG(+)         = '0'
            AND I.BILL_TO_CUST_ACCT_CD      = IPE_B.DS_ACCT_NUM (+)
            AND SIL_B.MDL_ID                = IPE_B.MDL_ID (+)
            AND I.GLBL_CMPY_CD              = IPE_B.GLBL_CMPY_CD (+)
            AND IPE_B.EZCANCELFLAG(+)       = '0'
            AND SIL.SVC_INV_LINE_PK         = SILAC.SVC_INV_LINE_PK (+)
            AND SIL.GLBL_CMPY_CD            = SILAC.GLBL_CMPY_CD (+)
            AND SILAC.PRINT_DTL_FLG (+)     = 'Y'
            AND SILAC.EZCANCELFLAG(+)       = '0'
            AND SILAC.ADDL_CHRG_TP_CD       = ACT.ADDL_CHRG_TP_CD (+)
            AND SILAC.GLBL_CMPY_CD          = ACT.GLBL_CMPY_CD (+)
            AND ACT.EZCANCELFLAG(+)         = '0'
            AND (NVL(SIL_B.SHIP_TO_CUST_CD, SIL.SHIP_TO_CUST_CD) = #shipToCust#
                    OR NVL(SIL_B.SHIP_TO_CUST_CD, SIL.SHIP_TO_CUST_CD)          IS NULL)
            AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
            AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
            AND CCY.EZCANCELFLAG(+)         = '0'
            AND IL.GLBL_CMPY_CD             = DCD.GLBL_CMPY_CD
            AND IL.EZCANCELFLAG             = DCD.EZCANCELFLAG
            AND IL.DS_CONTR_DTL_PK          = DCD.DS_CONTR_DTL_PK
            AND SIL.GLBL_CMPY_CD            = M.GLBL_CMPY_CD(+)
            AND SIL.EZCANCELFLAG            = M.EZCANCELFLAG(+)
            AND SIL.SVC_PGM_MDSE_CD         = M.MDSE_CD(+)
            AND SIL.SVC_INV_CHRG_TP_CD &lt;&gt; #siChrgTpCdAC#

            <!-- QC#29672 2019/01/23 Add Start -->
            <isNull property="isChrgTpCdMC" >
            AND SIL.SVC_INV_CHRG_TP_CD &lt;&gt; #siChrgTpCdMC#
            </isNull>
            <isNotNull property="isChrgTpCdMC" >
            AND SIL.SVC_INV_CHRG_TP_CD      = #siChrgTpCdMC#
            </isNotNull>
            -- <!-- QC#30852 -->
            AND SIL.SVC_INV_CHRG_TP_CD = #svcInvChrgTpCd#
            --
            <!-- QC#29672 2019/01/23 Add End -->

            <!-- QC#29672 2019/01/30 Mod Start -->
            <isNotNull property="modelId" >
            <!-- QC#30852 -->
                AND (SIL_B.MDL_ID = #modelId# OR SIL.MDL_ID = #modelId#)
            <!-- 
                <isNotNull property="isMergeTpPrintAccs" >
                AND SIL.MDL_ID                 = #modelId#
                </isNotNull>
                <isNull property="isMergeTpPrintAccs" >
                AND CASE WHEN SIL.PRNT_SVC_INV_LINE_PK IS NOT NULL THEN
                        SIL_B.MDL_ID
                    ELSE
                        SIL.MDL_ID
                    END = #modelId#
                </isNull>
            QC#30852 -->
            </isNotNull>
            <isNull property="modelId" >
                <isNotNull property="isMergeTpPrintAccs" >
                AND SIL.MDL_ID                 IS NULL
                </isNotNull>
                <isNull property="isMergeTpPrintAccs" >
                AND CASE WHEN SIL.PRNT_SVC_INV_LINE_PK IS NOT NULL THEN
                        SIL_B.MDL_ID
                    ELSE
                        SIL.MDL_ID
                    END IS NULL
                </isNull>
            </isNull>
            <!--
            <isNotNull property="modelId" >
            AND NVL(SIL_B.MDL_ID, SIL.MDL_ID)                 = #modelId#
            </isNotNull>
            <isNull property="modelId" >
            AND NVL(SIL_B.MDL_ID, SIL.MDL_ID)                  IS NULL
            </isNull>
            -->
            <!-- QC#29672 2019/01/30 Mod End -->
            <!-- QC#29672 2019/01/30 Mod Start -->
            <isNotNull property="machPk" >
            <!-- QC#30852 -->
                AND (SIL_B.SVC_MACH_MSTR_PK = #machPk# OR SIL.SVC_MACH_MSTR_PK = #machPk#)
            <!-- 
                <isNotNull property="isMergeTpPrintAccs" >
                AND SIL.SVC_MACH_MSTR_PK                 = #machPk#
                </isNotNull>
                <isNull property="isMergeTpPrintAccs" >
                AND CASE WHEN SIL.PRNT_SVC_INV_LINE_PK IS NOT NULL THEN
                        SIL_B.SVC_MACH_MSTR_PK
                    ELSE
                        SIL.SVC_MACH_MSTR_PK
                    END = #machPk#
                </isNull>
            QC#30852 -->
            </isNotNull>
            <isNull property="machPk" >
                <isNotNull property="isMergeTpPrintAccs" >
                AND SIL.SVC_MACH_MSTR_PK                 IS NULL
                </isNotNull>
                <isNull property="isMergeTpPrintAccs" >
                AND CASE WHEN SIL.PRNT_SVC_INV_LINE_PK IS NOT NULL THEN
                        SIL_B.SVC_MACH_MSTR_PK
                    ELSE
                        SIL.SVC_MACH_MSTR_PK
                    END IS NULL
                </isNull>
            </isNull>
            <!--
            <isNotNull property="machPk" >
            AND NVL(SIL_B.SVC_MACH_MSTR_PK, SIL.SVC_MACH_MSTR_PK)         = #machPk#
            </isNotNull>
            <isNull property="machPk" >
            AND NVL(SIL_B.SVC_MACH_MSTR_PK, SIL.SVC_MACH_MSTR_PK)         IS NULL
            </isNull>
            -->
            <!-- QC#29672 2019/01/30 Mod End -->
            <!-- QC#29672 2019/01/23 Mod Start -->
            <isNotNull property="svcPgm" >
            <!-- QC#30852 -->
                AND (SIL_B.INV_PRINT_COV_TXT = #svcPgm# OR SIL.INV_PRINT_COV_TXT = #svcPgm#)
            <!-- 
                <isNotNull property="isMergeTpPrintAccs" >
                AND SIL.INV_PRINT_COV_TXT                 = #svcPgm#
                </isNotNull>
                <isNull property="isMergeTpPrintAccs" >
                AND CASE WHEN SIL.PRNT_SVC_INV_LINE_PK IS NOT NULL THEN
                        SIL_B.INV_PRINT_COV_TXT
                    ELSE
                        SIL.INV_PRINT_COV_TXT
                    END = #svcPgm#
                </isNull>
            QC#30852 -->
            </isNotNull>
            <isNull property="svcPgm" >
                <isNotNull property="isMergeTpPrintAccs" >
                AND SIL.INV_PRINT_COV_TXT                 IS NULL
                </isNotNull>
                <isNull property="isMergeTpPrintAccs" >
                AND CASE WHEN SIL.PRNT_SVC_INV_LINE_PK IS NOT NULL THEN
                        SIL_B.INV_PRINT_COV_TXT
                    ELSE
                        SIL.INV_PRINT_COV_TXT
                    END IS NULL
                </isNull>
            </isNull>
            <!--
            <isNotNull property="svcPgm" >
            AND NVL(SIL_B.INV_PRINT_COV_TXT, SIL.INV_PRINT_COV_TXT)         = #svcPgm#
            </isNotNull>
            <isNull property="svcPgm" >
            AND NVL(SIL_B.INV_PRINT_COV_TXT, SIL.INV_PRINT_COV_TXT)         IS NULL
            </isNull>
            -->
            <!-- QC#29672 2019/01/23 Mod End -->
            <isNotNull property="custCodes1" >
            AND SIL.FIRST_BLLG_ATTRB_VAL_TXT    = #custCodes1#
            </isNotNull>
            <isNull property="custCodes1" >
            AND SIL.FIRST_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes2">
            AND SIL.SCD_BLLG_ATTRB_VAL_TXT    = #custCodes2#
            </isNotNull>
            <isNull property="custCodes2" >
            AND SIL.SCD_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes3" >
            AND SIL.THIRD_BLLG_ATTRB_VAL_TXT    = #custCodes3#
            </isNotNull>
            <isNull property="custCodes3" >
            AND SIL.THIRD_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes4" >
            AND SIL.FRTH_BLLG_ATTRB_VAL_TXT    = #custCodes4#
            </isNotNull>
            <isNull property="custCodes4" >
            AND SIL.FRTH_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes5" >
            AND SIL.FIFTH_BLLG_ATTRB_VAL_TXT    = #custCodes5#
            </isNotNull>
            <isNull property="custCodes5" >
            AND SIL.FIFTH_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes6" >
            AND SIL.SIXTH_BLLG_ATTRB_VAL_TXT    = #custCodes6#
            </isNotNull>
            <isNull property="custCodes6" >
            AND SIL.SIXTH_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNull property="poNo">
            <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))       IS NULL -->
            <!-- QC#50104 Mod -->
            <!-- START 2022/02/21 [QC#59724, MOD] -->
            <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)) IS NULL -->
            AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
            THEN I.CUST_ISS_PO_NUM
            ELSE NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))
            END IS NULL
            <!-- END   2022/02/21 [QC#59724, MOD] -->
            </isNull>
            <isNotNull property="poNo">
            <!-- 2019/04/04 QC#30756 Mod Start -->
            <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))       = #poNo# -->
            <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)))       = UPPER(#poNo#)-->
            <!-- 2019/04/04 QC#30756 Mod End -->
            <!-- QC#50104 Mod -->
            <!-- START 2022/02/21 [QC#59724, MOD] -->
            <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))) = UPPER(#poNo#) -->
            AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
            THEN UPPER(I.CUST_ISS_PO_NUM)
            ELSE UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)))
            END = UPPER(#poNo#)
            <!-- END   2022/02/21 [QC#59724, MOD] -->
            </isNotNull>
            <!-- QC#52209 2019/07/31 Add -->
            AND SIL.INV_PRT_FLG            = 'Y' <!-- QC#52209 2019/07/31 Add -->
        UNION ALL
        <!-- Base or Usage Charge of Contract Invoice from AR -->
        SELECT
             <!-- QC#26826 -->
             CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD = #siInvTpCdMACH# THEN '1' 
                  WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD &lt;&gt; #siInvTpCdMACH# THEN '2' 
                  ELSE '5' END TYPE,
             I.INV_NUM                              INV_NUM
            ,CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC# THEN
                 ACT.ADDL_CHRG_TP_NM 
             ELSE
                 CASE WHEN SIL.SVC_INV_LINE_PK IS NOT NULL THEN 
                     CASE WHEN IPE.INV_PRINT_EX_PK IS NULL THEN 
                         INITCAP(IPSP.INV_PRINT_SVC_PGM_SRC_NM)  || ' - ' || INITCAP(IPSP.INV_PRINT_SVC_PGM_PROD_NM) || ' ' || 
                             CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD = #siInvTpCdMACH# THEN #siChrgTpNmBase#
                                  WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD &lt;&gt; #siInvTpCdMACH# THEN #siChrgTpNmAttachment#
                             ELSE #siChrgTpNmUsage# END 
                     ELSE
                         'Fax' || ' ' ||
                             CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD = #siInvTpCdMACH# THEN #siChrgTpNmBase#
                                  WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD &lt;&gt; #siInvTpCdMACH# THEN #siChrgTpNmAttachment#
                             ELSE #siChrgTpNmUsage# END
                     END
                 END
             END                                        CHARGE_TYPE
            ,SIL.BLLG_PER_FROM_DT                       PERIOD_FROM
            ,SIL.BLLG_PER_THRU_DT                       PERIOD_THRU
            <!-- ,IL.INV_LINE_DEAL_NET_AMT                   AMOUNT_TXT QC#52209 2019/07/31 Mod -->
            ,SIL.INV_LINE_DEAL_NET_AMT                  AMOUNT_TXT
            ,SIL.SVC_INV_CHRG_TP_CD
            ,CCY.CCY_SGN_TXT
            ,SIL.SVC_CONTR_BASE_BLLG_PK
            ,IL.SVC_MACH_MSTR_PK                        SVC_MACH_MSTR_PK
            ,DCD.DS_CONTR_CRAT_TP_CD                    DS_CONTR_CRAT_TP_CD
            ,M.SVC_PGM_TP_CD                            SVC_PGM_TP_CD
            ,DCD.SVC_INV_MERGE_TP_CD                    SVC_INV_MERGE_TP_CD
            ,IL.DS_CONTR_DTL_PK                         DS_CONTR_DTL_PK
            ,CASE WHEN (SIL.PRNT_SVC_INV_LINE_PK IS NOT NULL) THEN  'Y' ELSE 'N' END HAS_PARENT
        FROM
             INV                        I
            ,SVC_INV                    SI
            ,INV_LINE                   IL
            <!-- QC#52209 2019/07/31 Mod -->
            <!-- ,SVC_INV_LINE               SIL   -->
            <!-- ,SVC_INV_LINE               SIL_B -->
            ,INV_PRT_SVC_INV_LINE_WRK     SIL
            ,INV_PRT_SVC_INV_LINE_WRK     SIL_B
            ,INV_PRINT_SVC_PGM          IPSP
            ,INV_PRINT_SVC_PGM          IPSP_B
            ,INV_PRINT_EX               IPE
            ,INV_PRINT_EX               IPE_B
            ,SVC_INV_LINE_ADDL_CHRG     SILAC
            ,ADDL_CHRG_TP_V             ACT
            ,CCY                        CCY
            ,DS_CONTR_DTL               DCD
            ,MDSE                       M
        WHERE
                I.INV_NUM                   = #invNum#
            AND I.GLBL_CMPY_CD              = #glblCmpyCd#
            AND I.EZCANCELFLAG              = '0'

            AND SI.DS_CONTR_PK              = #contrPk#
            AND I.SYS_SRC_CD                = #sysSrcCdNFC#
            AND I.ORIG_INV_NUM              = SI.SVC_INV_NUM
            AND I.GLBL_CMPY_CD              = SI.GLBL_CMPY_CD
            AND SI.EZCANCELFLAG             = '0'
            AND I.INV_NUM                   = IL.INV_NUM
            AND I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD
            AND IL.EZCANCELFLAG             = '0'
            AND IL.INV_NUM                  = SIL.SVC_INV_NUM
            AND IL.SVC_INV_LINE_PK          = SIL.SVC_INV_LINE_PK
            AND IL.GLBL_CMPY_CD             = SIL.GLBL_CMPY_CD
            AND SIL.EZCANCELFLAG            = '0'
            AND SIL.SVC_PGM_MDSE_CD         = IPSP.INV_PRINT_SVC_PGM_CD (+)
            AND SIL.GLBL_CMPY_CD            = IPSP.GLBL_CMPY_CD (+)
            AND IPSP.EZCANCELFLAG(+)        = '0'
            AND SIL.SVC_INV_NUM             = SIL_B.SVC_INV_NUM (+)
            AND SIL.PRNT_SVC_INV_LINE_PK    = SIL_B.SVC_INV_LINE_PK (+)
            AND SIL.GLBL_CMPY_CD            = SIL_B.GLBL_CMPY_CD (+)
            AND SIL_B.EZCANCELFLAG(+)       = '0'
            AND SIL_B.SVC_PGM_MDSE_CD       = IPSP_B.INV_PRINT_SVC_PGM_CD (+)
            AND SIL_B.GLBL_CMPY_CD          = IPSP_B.GLBL_CMPY_CD (+)
            AND IPSP_B.EZCANCELFLAG(+)      = '0'
            AND I.BILL_TO_CUST_ACCT_CD      = IPE.DS_ACCT_NUM (+)
            AND SIL.MDL_ID                  = IPE.MDL_ID (+)
            AND I.GLBL_CMPY_CD              = IPE.GLBL_CMPY_CD (+)
            AND IPE.EZCANCELFLAG(+)         = '0'
            AND I.BILL_TO_CUST_ACCT_CD      = IPE_B.DS_ACCT_NUM (+)
            AND SIL_B.MDL_ID                = IPE_B.MDL_ID (+)
            AND I.GLBL_CMPY_CD              = IPE_B.GLBL_CMPY_CD (+)
            AND IPE_B.EZCANCELFLAG(+)       = '0'
            AND SIL.SVC_INV_LINE_PK         = SILAC.SVC_INV_LINE_PK (+)
            AND SIL.GLBL_CMPY_CD            = SILAC.GLBL_CMPY_CD (+)
            AND SILAC.PRINT_DTL_FLG (+)     = 'Y'
            AND SILAC.EZCANCELFLAG(+)       = '0'
            AND SILAC.ADDL_CHRG_TP_CD       = ACT.ADDL_CHRG_TP_CD (+)
            AND SILAC.GLBL_CMPY_CD          = ACT.GLBL_CMPY_CD (+)
            AND ACT.EZCANCELFLAG(+)         = '0'
            AND (NVL(SIL_B.SHIP_TO_CUST_CD, SIL.SHIP_TO_CUST_CD) = #shipToCust#
                    OR NVL(SIL_B.SHIP_TO_CUST_CD, SIL.SHIP_TO_CUST_CD)          IS NULL)
            AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
            AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
            AND CCY.EZCANCELFLAG(+)         = '0'
            AND IL.GLBL_CMPY_CD             = DCD.GLBL_CMPY_CD
            AND IL.EZCANCELFLAG             = DCD.EZCANCELFLAG
            AND IL.DS_CONTR_DTL_PK          = DCD.DS_CONTR_DTL_PK
            AND SIL.GLBL_CMPY_CD            = M.GLBL_CMPY_CD(+)
            AND SIL.EZCANCELFLAG            = M.EZCANCELFLAG(+)
            AND SIL.SVC_PGM_MDSE_CD         = M.MDSE_CD(+)
            AND SIL.SVC_INV_CHRG_TP_CD &lt;&gt; #siChrgTpCdAC#

            <!-- QC#29672 2019/01/29 Add Start -->
            <isNull property="isChrgTpCdMC" >
            AND SIL.SVC_INV_CHRG_TP_CD &lt;&gt; #siChrgTpCdMC#
            </isNull>
            <isNotNull property="isChrgTpCdMC" >
            AND SIL.SVC_INV_CHRG_TP_CD      = #siChrgTpCdMC#
            </isNotNull>
            <!-- START 06/20/2022 [QC#60205, ADD] -->
            AND SIL.SVC_INV_CHRG_TP_CD = #svcInvChrgTpCd#
            <!-- END   06/20/2022 [QC#60205, ADD] -->
            
            <!-- QC#29672 2019/01/29 Add End -->

            <!-- QC#29672 2019/01/30 Mod Start -->
            <isNotNull property="modelId" >
                <isNotNull property="isMergeTpPrintAccs" >
                AND SIL.MDL_ID                 = #modelId#
                </isNotNull>
                <isNull property="isMergeTpPrintAccs" >
                AND CASE WHEN SIL.PRNT_SVC_INV_LINE_PK IS NOT NULL THEN
                        SIL_B.MDL_ID
                    ELSE
                        SIL.MDL_ID
                    END = #modelId#
                </isNull>
            </isNotNull>
            <isNull property="modelId" >
                <isNotNull property="isMergeTpPrintAccs" >
                AND SIL.MDL_ID                 IS NULL
                </isNotNull>
                <isNull property="isMergeTpPrintAccs" >
                AND CASE WHEN SIL.PRNT_SVC_INV_LINE_PK IS NOT NULL THEN
                        SIL_B.MDL_ID
                    ELSE
                        SIL.MDL_ID
                    END IS NULL
                </isNull>
            </isNull>
            <!--
            <isNotNull property="modelId" >
            AND NVL(SIL_B.MDL_ID, SIL.MDL_ID)                 = #modelId#
            </isNotNull>
            <isNull property="modelId" >
            AND NVL(SIL_B.MDL_ID, SIL.MDL_ID)                  IS NULL
            </isNull>
            -->
            <!-- QC#29672 2019/01/30 Mod End -->
            <!-- QC#29672 2019/01/23 Mod Start -->
            <isNotNull property="machPk" >
                <isNotNull property="isMergeTpPrintAccs" >
                AND SIL.SVC_MACH_MSTR_PK                 = #machPk#
                </isNotNull>
                <isNull property="isMergeTpPrintAccs" >
                AND CASE WHEN SIL.PRNT_SVC_INV_LINE_PK IS NOT NULL THEN
                        SIL_B.SVC_MACH_MSTR_PK
                    ELSE
                        SIL.SVC_MACH_MSTR_PK
                    END = #machPk#
                </isNull>
            </isNotNull>
            <isNull property="machPk" >
                <isNotNull property="isMergeTpPrintAccs" >
                AND SIL.SVC_MACH_MSTR_PK                 IS NULL
                </isNotNull>
                <isNull property="isMergeTpPrintAccs" >
                AND CASE WHEN SIL.PRNT_SVC_INV_LINE_PK IS NOT NULL THEN
                        SIL_B.SVC_MACH_MSTR_PK
                    ELSE
                        SIL.SVC_MACH_MSTR_PK
                    END IS NULL
                </isNull>
            </isNull>
            <!--
            <isNotNull property="machPk" >
            AND NVL(SIL_B.SVC_MACH_MSTR_PK, SIL.SVC_MACH_MSTR_PK)         = #machPk#
            </isNotNull>
            <isNull property="machPk" >
            AND NVL(SIL_B.SVC_MACH_MSTR_PK, SIL.SVC_MACH_MSTR_PK)         IS NULL
            </isNull>
            -->
            <!-- QC#29672 2019/01/23 Mod End -->
            <!-- QC#29672 2019/01/23 Mod Start -->
            <isNotNull property="svcPgm" >
                <isNotNull property="isMergeTpPrintAccs" >
                AND SIL.INV_PRINT_COV_TXT                 = #svcPgm#
                </isNotNull>
                <isNull property="isMergeTpPrintAccs" >
                AND CASE WHEN SIL.PRNT_SVC_INV_LINE_PK IS NOT NULL THEN
                        SIL_B.INV_PRINT_COV_TXT
                    ELSE
                        SIL.INV_PRINT_COV_TXT
                    END = #svcPgm#
                </isNull>
            </isNotNull>
            <isNull property="svcPgm" >
                <isNotNull property="isMergeTpPrintAccs" >
                AND SIL.INV_PRINT_COV_TXT                 IS NULL
                </isNotNull>
                <isNull property="isMergeTpPrintAccs" >
                AND CASE WHEN SIL.PRNT_SVC_INV_LINE_PK IS NOT NULL THEN
                        SIL_B.INV_PRINT_COV_TXT
                    ELSE
                        SIL.INV_PRINT_COV_TXT
                    END IS NULL
                </isNull>
            </isNull>
            <!--
            <isNotNull property="svcPgm" >
            AND NVL(SIL_B.INV_PRINT_COV_TXT, SIL.INV_PRINT_COV_TXT)         = #svcPgm#
            </isNotNull>
            <isNull property="svcPgm" >
            AND NVL(SIL_B.INV_PRINT_COV_TXT, SIL.INV_PRINT_COV_TXT)         IS NULL
            </isNull>
            -->
            <!-- QC#29672 2019/01/23 Mod End -->
            <isNotNull property="custCodes1" >
            AND SIL.FIRST_BLLG_ATTRB_VAL_TXT    = #custCodes1#
            </isNotNull>
            <isNull property="custCodes1" >
            AND SIL.FIRST_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes2">
            AND SIL.SCD_BLLG_ATTRB_VAL_TXT    = #custCodes2#
            </isNotNull>
            <isNull property="custCodes2" >
            AND SIL.SCD_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes3" >
            AND SIL.THIRD_BLLG_ATTRB_VAL_TXT    = #custCodes3#
            </isNotNull>
            <isNull property="custCodes3" >
            AND SIL.THIRD_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes4" >
            AND SIL.FRTH_BLLG_ATTRB_VAL_TXT    = #custCodes4#
            </isNotNull>
            <isNull property="custCodes4" >
            AND SIL.FRTH_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes5" >
            AND SIL.FIFTH_BLLG_ATTRB_VAL_TXT    = #custCodes5#
            </isNotNull>
            <isNull property="custCodes5" >
            AND SIL.FIFTH_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes6" >
            AND SIL.SIXTH_BLLG_ATTRB_VAL_TXT    = #custCodes6#
            </isNotNull>
            <isNull property="custCodes6" >
            AND SIL.SIXTH_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNull property="poNo">
            <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))       IS NULL -->
            <!-- QC#50104 Mod -->
            <!-- START 2022/02/21 [QC#59724, MOD] -->
            <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)) IS NULL -->
            AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
            THEN I.CUST_ISS_PO_NUM
            ELSE NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))
            END IS NULL
            <!-- END   2022/02/21 [QC#59724, MOD] -->
            </isNull>
            <isNotNull property="poNo">
            <!-- 2019/04/04 QC#30756 Mod Start -->
            <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))       = #poNo# -->
            <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))) = UPPER(#poNo#)  -->
            <!-- START 2022/02/21 [QC#59724, MOD] -->
            <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))) = UPPER(#poNo#) -->
            AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
            THEN UPPER(I.CUST_ISS_PO_NUM)
            ELSE UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)))
            END = UPPER(#poNo#)
            <!-- END   2022/02/21 [QC#59724, MOD] -->
            <!-- 2019/04/04 QC#30756 Mod End -->
            </isNotNull>
            <!-- QC#52209 2019/07/31 Add -->
            AND SIL.INV_PRT_FLG            = 'Y' <!-- QC#52209 2019/07/31 Add -->
        )
    <!-- QC#29672 2019/01/23 Del Start -->
    <!--
    GROUP BY
        TYPE
       ,INV_NUM
       ,CCY_SGN_TXT
       ,CHARGE_TYPE
       ,PERIOD_FROM
       ,PERIOD_THRU
       ,SVC_INV_CHRG_TP_CD
       ,SVC_MACH_MSTR_PK
       ,DS_CONTR_CRAT_TP_CD
       ,SVC_PGM_TP_CD
       ,SVC_INV_MERGE_TP_CD
    -->
    <!-- QC#29672 2019/01/23 Del End -->
       <!--  ,SVC_CONTR_BASE_BLLG_PK-->
    ORDER BY
        TYPE
       ,INV_NUM
       ,CCY_SGN_TXT
       ,SPECIAL_CHARGE_FLG
       ,CHARGE_TYPE
       ,PERIOD_FROM
       ,PERIOD_THRU
       ,SVC_INV_CHRG_TP_CD
       ,SVC_MACH_MSTR_PK
       ,DS_CONTR_CRAT_TP_CD
       ,SVC_PGM_TP_CD
       ,SVC_INV_MERGE_TP_CD
       <!--  ,SVC_CONTR_BASE_BLLG_PK-->
    </statement>

    <!-- QC#27069 Add Start -->
    <statement id="getMaintMtrChrg_manInv" parameterClass="Map" resultClass="Map">
    SELECT 
        INV_NUM
       ,CHARGE_TYPE
       ,PERIOD_FROM
       ,PERIOD_THRU
       ,SVC_INV_CHRG_TP_CD
       <!-- QC#29672 2019/01/23 Mod Start -->
       ,CASE WHEN SVC_INV_CHRG_TP_CD = #siChrgTpCdMC# THEN NULL ELSE
            CASE WHEN AMOUNT_TXT &lt; 0 THEN
                '-' || CCY_SGN_TXT || TO_CHAR(ABS(AMOUNT_TXT), #amtFormat#)
            ELSE
                CCY_SGN_TXT || TO_CHAR(AMOUNT_TXT, #amtFormat#)
            END
        END AMOUNT_TXT
       <!--
       ,CASE WHEN SVC_INV_CHRG_TP_CD = #siChrgTpCdMC# THEN NULL ELSE
            CASE WHEN SUM(AMOUNT_TXT) &lt; 0 THEN
                '-' || CCY_SGN_TXT || TO_CHAR(ABS(SUM(AMOUNT_TXT)), #amtFormat#)
            ELSE
                CCY_SGN_TXT || TO_CHAR(SUM(AMOUNT_TXT), #amtFormat#)
            END
        END AMOUNT_TXT
        -->
        <!-- QC#29672 2019/01/23 Mod End -->
       ,'N' SPECIAL_CHARGE_FLG
       <!-- QC#29672 2019/01/23 Mod Start -->
       ,AMOUNT_TXT AMOUNT
       <!-- ,SUM(AMOUNT_TXT) AMOUNT -->
       <!-- QC#29672 2019/01/23 Mod End -->
       ,CCY_SGN_TXT
       ,TYPE
       ,SVC_MACH_MSTR_PK
       ,DS_CONTR_CRAT_TP_CD
       ,SVC_PGM_TP_CD
       ,NULL SVC_INV_MERGE_TP_CD
       <!-- QC#29672 2019/01/30 Mod Start -->
       ,DS_CONTR_DTL_PK
       <!-- ,MIN(DS_CONTR_DTL_PK) DS_CONTR_DTL_PK -->
       ,'N' HAS_PARENT
       <!-- QC#29672 2019/01/30 Mod End -->
    FROM (
        <!-- Base or Usage Charge of Contract Invoice from Service -->
        SELECT
             CASE WHEN IL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SMM.SVC_MACH_TP_CD  = '1' THEN '1' 
                  WHEN IL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SMM.SVC_MACH_TP_CD  &lt;&gt; '1' THEN '2' 
                  ELSE '5' END TYPE,
             I.INV_NUM                              INV_NUM
            ,CASE WHEN IL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC# THEN
                 ''
             ELSE
                 CASE WHEN IPE.INV_PRINT_EX_PK IS NULL THEN 
                     INITCAP(IPSP.INV_PRINT_SVC_PGM_SRC_NM)  || ' - ' || INITCAP(IPSP.INV_PRINT_SVC_PGM_PROD_NM) || ' ' || 
                         CASE WHEN IL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SMM.SVC_MACH_TP_CD  = '1' THEN #siChrgTpNmBase#
                              WHEN IL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SMM.SVC_MACH_TP_CD  &lt;&gt; '1' THEN #siChrgTpNmAttachment#
                         ELSE #siChrgTpNmUsage# END 
                 ELSE
                     'Fax' || ' ' ||
                         CASE WHEN IL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SMM.SVC_MACH_TP_CD  = '1' THEN #siChrgTpNmBase#
                              WHEN IL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SMM.SVC_MACH_TP_CD  &lt;&gt; '1' THEN #siChrgTpNmAttachment#
                         ELSE #siChrgTpNmUsage# END
                 END
             END                                        CHARGE_TYPE
            ,IL.BLLG_PER_FROM_DT                        PERIOD_FROM
            ,IL.BLLG_PER_THRU_DT                        PERIOD_THRU
            ,IL.INV_LINE_DEAL_NET_AMT                   AMOUNT_TXT
            ,IL.SVC_INV_CHRG_TP_CD
            ,CCY.CCY_SGN_TXT
            ,IL.SVC_MACH_MSTR_PK                        SVC_MACH_MSTR_PK
            ,DCD.DS_CONTR_CRAT_TP_CD                    DS_CONTR_CRAT_TP_CD
            ,DCD.SVC_INV_MERGE_TP_CD                    SVC_INV_MERGE_TP_CD
            ,NULL                                       SVC_PGM_TP_CD
            ,IL.DS_CONTR_DTL_PK                         DS_CONTR_DTL_PK
        FROM
             INV                        I
            ,INV_BOL                    IB
            ,INV_LINE                   IL
            ,INV_PRINT_SVC_PGM          IPSP
            ,INV_PRINT_EX               IPE
            ,CCY                        CCY
            ,SVC_MACH_MSTR              SMM
            <!-- MDO START 2019/06/05 QC#50679  -->
<!--            ,(-->
<!--                  SELECT-->
<!--                       DCD_2.GLBL_CMPY_CD-->
<!--                      ,DCD_2.DS_CONTR_PK-->
<!--                      ,DCD_2.SVC_MACH_MSTR_PK-->
<!--                      ,DCD_2.MDL_ID-->
<!--                      ,DCD_2.SVC_PGM_MDSE_CD-->
<!--                      ,DCD_2.DS_CONTR_CRAT_TP_CD-->
<!--                      ,DCD_2.SVC_INV_MERGE_TP_CD-->
<!--                  FROM -->
<!--                       DS_CONTR_DTL DCD_2-->
<!--                  WHERE-->
<!--                          DCD_2.GLBL_CMPY_CD    = #glblCmpyCd#-->
<!--                      AND DCD_2.EZCANCELFLAG    = '0'-->
<!--                  GROUP BY-->
<!--                       DCD_2.GLBL_CMPY_CD-->
<!--                      ,DCD_2.DS_CONTR_PK-->
<!--                      ,DCD_2.SVC_MACH_MSTR_PK-->
<!--                      ,DCD_2.MDL_ID-->
<!--                      ,DCD_2.SVC_PGM_MDSE_CD-->
<!--                      ,DCD_2.DS_CONTR_CRAT_TP_CD-->
<!--                      ,DCD_2.SVC_INV_MERGE_TP_CD-->
<!--             ) DCD-->
            , (SELECT  
                A.DS_CONTR_NUM
               ,A.GLBL_CMPY_CD
               ,A.DS_CONTR_PK
               ,A.SVC_MACH_MSTR_PK
               ,A.MDL_ID
               ,A.SVC_PGM_MDSE_CD
               ,A.DS_CONTR_CRAT_TP_CD
               ,A.SVC_INV_MERGE_TP_CD
          FROM (
               SELECT
                    DC.DS_CONTR_NUM
                   ,DCD_2.GLBL_CMPY_CD
                   ,DCD_2.DS_CONTR_PK
                   ,DCD_2.SVC_MACH_MSTR_PK
                   ,DCD_2.MDL_ID
                   ,DCD_2.SVC_PGM_MDSE_CD
                   ,DCD_2.DS_CONTR_DTL_PK
                   ,DCD_2.DS_CONTR_CRAT_TP_CD
                   ,DCD_2.SVC_INV_MERGE_TP_CD
                   ,ROW_NUMBER () OVER (PARTITION BY 
                                             DC.DS_CONTR_NUM
                                            ,DCD_2.GLBL_CMPY_CD
                                            ,DCD_2.DS_CONTR_PK
                                            ,DCD_2.SVC_MACH_MSTR_PK
                                            ,DCD_2.MDL_ID
                                        ORDER BY DCD_2.DS_CONTR_DTL_PK)     AS NUM1
               FROM 
                      INV_LINE               IL2
                    , DS_CONTR               DC 
                    , DS_CONTR_DTL           DCD_2
               WHERE
                       IL2.INV_NUM                     = #invNum#
                   AND IL2.DS_CONTR_NUM                = DC.DS_CONTR_NUM
                   AND DC.DS_CONTR_PK                  = DCD_2.DS_CONTR_PK
                   AND IL2.SVC_MACH_MSTR_PK            = DCD_2.SVC_MACH_MSTR_PK
                   AND IL2.GLBL_CMPY_CD                = 'ADB'
                   AND IL2.EZCANCELFLAG                = '0'
                   AND DC.GLBL_CMPY_CD                 = 'ADB'
                   AND DC.EZCANCELFLAG                 = '0'
                   AND DCD_2.GLBL_CMPY_CD              = 'ADB'
                   AND DCD_2.EZCANCELFLAG              = '0'
               GROUP BY
                    DC.DS_CONTR_NUM
                   ,DCD_2.GLBL_CMPY_CD
                   ,DCD_2.DS_CONTR_PK
                   ,DCD_2.SVC_MACH_MSTR_PK
                   ,DCD_2.MDL_ID
                   ,DCD_2.SVC_PGM_MDSE_CD
                   ,DCD_2.DS_CONTR_DTL_PK
                   ,DCD_2.DS_CONTR_CRAT_TP_CD
                   ,DCD_2.SVC_INV_MERGE_TP_CD
                   ) A
            WHERE A.NUM1 = 1
           ) DCD
            <!-- MDO START 2019/06/05 QC#50679  -->
        WHERE
                I.INV_NUM                   = #invNum#
            AND I.GLBL_CMPY_CD              = #glblCmpyCd#
            AND I.EZCANCELFLAG              = '0'

            AND I.INV_NUM                   = IB.INV_NUM
            AND I.GLBL_CMPY_CD              = IB.GLBL_CMPY_CD
            AND IB.EZCANCELFLAG             = '0'

            AND IB.INV_NUM                  = IL.INV_NUM
            AND IB.INV_BOL_LINE_NUM         = IL.INV_BOL_LINE_NUM
            AND IB.GLBL_CMPY_CD             = IL.GLBL_CMPY_CD
            AND IL.EZCANCELFLAG             = '0'

            AND IL.SVC_MACH_MSTR_PK         = SMM.SVC_MACH_MSTR_PK(+)
            AND IL.GLBL_CMPY_CD             = SMM.GLBL_CMPY_CD(+)
            AND SMM.EZCANCELFLAG(+)         = '0'
            AND DCD.DS_CONTR_PK(+)          = #contrPk#
            AND DCD.SVC_MACH_MSTR_PK(+)     = IL.SVC_MACH_MSTR_PK
            AND DCD.SVC_PGM_MDSE_CD         = IPSP.INV_PRINT_SVC_PGM_CD (+)
            AND IPSP.EZCANCELFLAG(+)        = '0'

            AND I.BILL_TO_CUST_ACCT_CD      = IPE.DS_ACCT_NUM (+)
            AND DCD.MDL_ID                  = IPE.MDL_ID (+)
            AND I.GLBL_CMPY_CD              = IPE.GLBL_CMPY_CD (+)
            AND IPE.EZCANCELFLAG(+)         = '0'
            AND (IB.SHIP_TO_CUST_CD = #shipToCust#
                   OR IB.SHIP_TO_CUST_CD          IS NULL)
            AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
            AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
            AND CCY.EZCANCELFLAG(+)         = '0'

            <isNotNull property="modelId" >
            AND IL.MDL_ID                = #modelId#
            </isNotNull>
            <isNull property="modelId" >
            AND IL.MDL_ID                IS NULL
            </isNull>
            <isNotNull property="machPk" >
            AND IL.SVC_MACH_MSTR_PK         = #machPk#
            </isNotNull>
            <isNull property="machPk" >
            AND IL.SVC_MACH_MSTR_PK        IS NULL
            </isNull>
            <isNotNull property="custCodes1" >
            AND IL.FIRST_BLLG_ATTRB_VAL_TXT    = #custCodes1#
            </isNotNull>
            <isNull property="custCodes1" >
            AND IL.FIRST_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes2">
            AND IL.SCD_BLLG_ATTRB_VAL_TXT    = #custCodes2#
            </isNotNull>
            <isNull property="custCodes2" >
            AND IL.SCD_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes3" >
            AND IL.THIRD_BLLG_ATTRB_VAL_TXT    = #custCodes3#
            </isNotNull>
            <isNull property="custCodes3" >
            AND IL.THIRD_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes4" >
            AND IL.FRTH_BLLG_ATTRB_VAL_TXT    = #custCodes4#
            </isNotNull>
            <isNull property="custCodes4" >
            AND IL.FRTH_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes5" >
            AND IL.FIFTH_BLLG_ATTRB_VAL_TXT    = #custCodes5#
            </isNotNull>
            <isNull property="custCodes5" >
            AND IL.FIFTH_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes6" >
            AND IL.SIXTH_BLLG_ATTRB_VAL_TXT    = #custCodes6#
            </isNotNull>
            <isNull property="custCodes6" >
            AND IL.SIXTH_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNull property="poNo">
            AND I.CUST_ISS_PO_NUM       IS NULL
            </isNull>
            <isNotNull property="poNo">
            <!-- 2019/04/04 QC#30756 Mod Start -->
            <!-- AND I.CUST_ISS_PO_NUM       = #poNo# -->
            AND UPPER(I.CUST_ISS_PO_NUM)       = UPPER(#poNo#)
            <!-- 2019/04/04 QC#30756 Mod End -->
            </isNotNull>

            <!-- QC#29672 2019/01/23 Add Start -->
            <isNull property="isChrgTpCdMC" >
            AND IL.SVC_INV_CHRG_TP_CD &lt;&gt; #siChrgTpCdMC#
            </isNull>
            <isNotNull property="isChrgTpCdMC" >
            AND IL.SVC_INV_CHRG_TP_CD      = #siChrgTpCdMC#
            </isNotNull>
            <!-- QC#29672 2019/01/23 Add End -->

        )
    <!-- QC#29672 2019/01/29 Del Start -->
    <!--
    GROUP BY
        TYPE,
        INV_NUM
       ,CCY_SGN_TXT
       ,CHARGE_TYPE
       ,PERIOD_FROM
       ,PERIOD_THRU
       ,SVC_INV_CHRG_TP_CD
       ,SVC_MACH_MSTR_PK
       ,DS_CONTR_CRAT_TP_CD
       ,SVC_PGM_TP_CD
       ,SVC_INV_MERGE_TP_CD
    -->
    <!-- QC#29672 2019/01/29 Del Start -->
    ORDER BY
        TYPE,
        INV_NUM
       ,CCY_SGN_TXT
       ,SPECIAL_CHARGE_FLG
       ,CHARGE_TYPE
       ,PERIOD_FROM
       ,PERIOD_THRU
       ,SVC_INV_CHRG_TP_CD
       ,SVC_MACH_MSTR_PK
       ,DS_CONTR_CRAT_TP_CD
       ,SVC_PGM_TP_CD
       ,SVC_INV_MERGE_TP_CD
    </statement>
    <!-- QC#27069 Add End -->


    <statement id="getMaintChrgDtlForAdditionalChargeNonDisp" parameterClass="Map" resultClass="Map">
    SELECT 
        SUM(AMOUNT) AMOUNT
    FROM (
        SELECT
             IL.INV_LINE_DEAL_NET_AMT                   AMOUNT
        FROM
             INV                        I
            ,SVC_INV                    SI
            ,INV_LINE                   IL
            <!-- QC#52209 2019/07/31 Mod -->
            <!-- ,SVC_INV_LINE               SIL  -->
            <!-- ,SVC_INV_LINE               SIL_B-->
            ,INV_PRT_SVC_INV_LINE_WRK     SIL
            ,INV_PRT_SVC_INV_LINE_WRK     SIL_B
            <!-- START 06/20/2022 [QC#60205,ADD] -->
            ,INV_PRT_SVC_INV_LINE_WRK     SIL_C
            <!-- END   06/20/2022 [QC#60205,ADD] -->
            ,SVC_INV_LINE_ADDL_CHRG     SILAC
            ,ADDL_CHRG_TP_V             ACT
            ,CCY                        CCY
        WHERE
                I.INV_NUM                   = #invNum#
            AND I.GLBL_CMPY_CD              = #glblCmpyCd#
            AND I.EZCANCELFLAG              = '0'

            AND SI.DS_CONTR_PK              = #contrPk#
            AND I.SYS_SRC_CD                &lt;&gt; #sysSrcCdNFC#
            AND I.INV_NUM                   = SI.SVC_INV_NUM
            AND I.GLBL_CMPY_CD              = SI.GLBL_CMPY_CD
            AND SI.EZCANCELFLAG             = '0'
            AND I.INV_NUM                   = IL.INV_NUM
            AND I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD
            AND IL.EZCANCELFLAG             = '0'
            AND IL.SVC_INV_LINE_PK          = SIL.SVC_INV_LINE_PK
            AND IL.INV_NUM                  = SIL.SVC_INV_NUM
            AND IL.GLBL_CMPY_CD             = SIL.GLBL_CMPY_CD
            AND SIL.EZCANCELFLAG            = '0'
            AND SIL.PRNT_SVC_INV_LINE_PK    = SIL_B.SVC_INV_LINE_PK (+)
            AND SIL.SVC_INV_NUM             = SIL_B.SVC_INV_NUM (+)
            AND SIL.GLBL_CMPY_CD            = SIL_B.GLBL_CMPY_CD (+)
            AND SIL_B.EZCANCELFLAG(+)       = '0'
            <!-- START 06/20/2022 [QC#60205,ADD] -->
            AND SIL_B.PRNT_SVC_INV_LINE_PK    = SIL_C.SVC_INV_LINE_PK (+)
            AND SIL_B.SVC_INV_NUM             = SIL_C.SVC_INV_NUM (+)
            AND SIL_B.GLBL_CMPY_CD            = SIL_C.GLBL_CMPY_CD (+)
            AND SIL_C.EZCANCELFLAG(+)       = '0'
            <!-- END   06/20/2022 [QC#60205,ADD] -->
            AND SIL.SVC_INV_LINE_PK         = SILAC.SVC_INV_LINE_PK
            AND SIL.GLBL_CMPY_CD            = SILAC.GLBL_CMPY_CD
            AND SILAC.PRINT_DTL_FLG         = #flgN# 
            AND SILAC.EZCANCELFLAG          = '0'
            AND SILAC.ADDL_CHRG_TP_CD       = ACT.ADDL_CHRG_TP_CD
            AND SILAC.GLBL_CMPY_CD          = ACT.GLBL_CMPY_CD
            AND ACT.EZCANCELFLAG            = '0'
            AND (NVL(SIL_B.SHIP_TO_CUST_CD, SIL.SHIP_TO_CUST_CD) = #shipToCust#
                    OR NVL(SIL_B.SHIP_TO_CUST_CD, SIL.SHIP_TO_CUST_CD)          IS NULL)
            AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
            AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
            AND CCY.EZCANCELFLAG(+)         = '0'
            AND SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC#
            <isNotNull property="modelId" >
            AND NVL(SIL_B.MDL_ID, SIL.MDL_ID)                 = #modelId#
            </isNotNull>
            <isNull property="modelId" >
            AND NVL(SIL_B.MDL_ID, SIL.MDL_ID)                  IS NULL
            </isNull>
            <isNotNull property="machPk" >
            <!-- START 06/20/2022 [QC#60205,MOD] -->
            <!-- AND NVL(SIL_B.SVC_MACH_MSTR_PK, SIL.SVC_MACH_MSTR_PK)       = #machPk#  -->
                <isNotEqual property="invLineTpCd" compareValue="ACSY">
                AND NVL(NVL(SIL_C.SVC_MACH_MSTR_PK, SIL_B.SVC_MACH_MSTR_PK), SIL.SVC_MACH_MSTR_PK)    = #machPk#
                </isNotEqual>
                <isEqual property="invLineTpCd" compareValue="ACSY">
                AND NVL(SIL_B.SVC_MACH_MSTR_PK, SIL.SVC_MACH_MSTR_PK)         = #machPk#
                </isEqual>
            <!-- END   06/20/2022 [QC#60205,MOD] -->
            </isNotNull>
            <isNull property="machPk" >
            AND NVL(SIL_B.SVC_MACH_MSTR_PK, SIL.SVC_MACH_MSTR_PK)         IS NULL
            </isNull>
            <isNotNull property="svcPgm" >
            AND NVL(SIL_B.INV_PRINT_COV_TXT, SIL.INV_PRINT_COV_TXT)         = #svcPgm#
            </isNotNull>
            <isNull property="svcPgm" >
            AND NVL(SIL_B.INV_PRINT_COV_TXT, SIL.INV_PRINT_COV_TXT)         IS NULL
            </isNull>
            <isNotNull property="custCodes1" >
            AND SIL.FIRST_BLLG_ATTRB_VAL_TXT    = #custCodes1#
            </isNotNull>
            <isNull property="custCodes1" >
            AND SIL.FIRST_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes2">
            AND SIL.SCD_BLLG_ATTRB_VAL_TXT    = #custCodes2#
            </isNotNull>
            <isNull property="custCodes2" >
            AND SIL.SCD_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes3" >
            AND SIL.THIRD_BLLG_ATTRB_VAL_TXT    = #custCodes3#
            </isNotNull>
            <isNull property="custCodes3" >
            AND SIL.THIRD_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes4" >
            AND SIL.FRTH_BLLG_ATTRB_VAL_TXT    = #custCodes4#
            </isNotNull>
            <isNull property="custCodes4" >
            AND SIL.FRTH_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes5" >
            AND SIL.FIFTH_BLLG_ATTRB_VAL_TXT    = #custCodes5#
            </isNotNull>
            <isNull property="custCodes5" >
            AND SIL.FIFTH_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNotNull property="custCodes6" >
            AND SIL.SIXTH_BLLG_ATTRB_VAL_TXT    = #custCodes6#
            </isNotNull>
            <isNull property="custCodes6" >
            AND SIL.SIXTH_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
            <isNull property="poNo">
                <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))       IS NULL -->
                <!-- QC#50104 Mod -->
                <!-- START 2022/02/21 [QC#59724, MOD] -->
                <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)) IS NULL -->
                AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
                THEN I.CUST_ISS_PO_NUM
                ELSE NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))
                END IS NULL
                <!-- END   2022/02/21 [QC#59724, MOD] -->
            </isNull>
            <isNotNull property="poNo">
                <!-- 2019/04/04 QC#30756 Mod Start -->
                <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))       = #poNo# -->
                <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)))       = UPPER(#poNo#) -->
                <!-- 2019/04/04 QC#30756 Mod End -->
                <!-- QC#50104 Mod -->
                <!-- START 2022/02/21 [QC#59724, MOD] -->
                <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))) = UPPER(#poNo#) -->
                AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
                THEN UPPER(I.CUST_ISS_PO_NUM)
                ELSE UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)))
                END = UPPER(#poNo#)
                <!-- END   2022/02/21 [QC#59724, MOD] -->
            </isNotNull>
            <isNotNull property="periodFrom">
            AND SIL.BLLG_PER_FROM_DT                                   = #periodFrom#
            </isNotNull>
            <isNull property="periodFrom">
            AND SIL.BLLG_PER_FROM_DT                                   IS NULL
            </isNull>
            <isNotNull property="periodThru">
            AND SIL.BLLG_PER_THRU_DT                                   = #periodThru#
            </isNotNull>
            <isNull property="periodThru">
            AND SIL.BLLG_PER_THRU_DT                                   IS NULL
            </isNull>
            <isNotNull property="svcContrBaseBllgPk">
            AND SILAC.SVC_CONTR_BASE_BLLG_PK                           =#svcContrBaseBllgPk#
            </isNotNull>
            <isNull property="svcContrBaseBllgPk">
            AND SILAC.SVC_CONTR_BASE_BLLG_PK                           IS NULL
            </isNull>
            <isNotNull property="addlChrgInvTpCd">
            AND SILAC.ADDL_CHRG_INV_TP_CD                              =#addlChrgInvTpCd#
            </isNotNull>
            <isNull property="addlChrgInvTpCd">
            AND SILAC.ADDL_CHRG_INV_TP_CD                              IS NULL
            </isNull>
            
        UNION ALL
            <!-- START 06/20/2022 [QC#60205, MOD] -->
        SELECT
             IL.INV_LINE_DEAL_NET_AMT                   AMOUNT
        FROM
             INV                        I
            ,SVC_INV                    SI
            ,INV_LINE                   IL
        WHERE
                I.INV_NUM                   = #invNum#
            AND I.GLBL_CMPY_CD              = #glblCmpyCd#
            AND I.EZCANCELFLAG              = '0'
            AND SI.DS_CONTR_PK              = #contrPk#
            AND I.SYS_SRC_CD                = #sysSrcCdNFC#
            AND I.ORIG_INV_NUM              = SI.SVC_INV_NUM
            AND I.GLBL_CMPY_CD              = SI.GLBL_CMPY_CD
            AND SI.EZCANCELFLAG             = '0'
            AND I.INV_NUM                   = IL.INV_NUM
            AND I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD
            AND IL.EZCANCELFLAG             = '0'
            AND EXISTS (
                   SELECT
                       1
                   FROM
                         INV_PRT_SVC_INV_LINE_WRK     SIL
                        ,INV_PRT_SVC_INV_LINE_WRK     SIL_B
                        ,INV_PRT_SVC_INV_LINE_WRK     SIL_C
			            ,SVC_INV_LINE_ADDL_CHRG     SILAC
			            ,ADDL_CHRG_TP_V             ACT
			            ,CCY                        CCY
                   WHERE
		                IL.SVC_INV_LINE_PK          = SIL.SVC_INV_LINE_PK
		            AND IL.GLBL_CMPY_CD             = SIL.GLBL_CMPY_CD
		            AND SIL.EZCANCELFLAG            = '0'
		            AND SIL.PRNT_SVC_INV_LINE_PK    = SIL_B.SVC_INV_LINE_PK (+)
		            AND SIL.GLBL_CMPY_CD            = SIL_B.GLBL_CMPY_CD (+)
		            AND SIL_B.EZCANCELFLAG(+)       = '0'
		            AND SIL_B.PRNT_SVC_INV_LINE_PK  = SIL_C.SVC_INV_LINE_PK (+)
		            AND SIL_B.SVC_INV_NUM           = SIL_C.SVC_INV_NUM (+)
		            AND SIL_B.GLBL_CMPY_CD          = SIL_C.GLBL_CMPY_CD (+)
		            AND SIL_C.EZCANCELFLAG(+)       = '0'
		            AND SIL.SVC_INV_LINE_PK         = SILAC.SVC_INV_LINE_PK 
		            AND SIL.GLBL_CMPY_CD            = SILAC.GLBL_CMPY_CD 
		            AND SILAC.PRINT_DTL_FLG         = #flgN# 
		            AND SILAC.EZCANCELFLAG          = '0'
		            AND SILAC.ADDL_CHRG_TP_CD       = ACT.ADDL_CHRG_TP_CD
		            AND SILAC.GLBL_CMPY_CD          = ACT.GLBL_CMPY_CD 
		            AND ACT.EZCANCELFLAG            = '0'
		            AND (NVL(SIL_B.SHIP_TO_CUST_CD, SIL.SHIP_TO_CUST_CD) = #shipToCust#
		                    OR NVL(SIL_B.SHIP_TO_CUST_CD, SIL.SHIP_TO_CUST_CD)          IS NULL)
		            AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
		            AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
		            AND CCY.EZCANCELFLAG(+)         = '0'
		            AND SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC#
		            <isNotNull property="modelId" >
		            AND NVL(SIL_B.MDL_ID, SIL.MDL_ID)                 = #modelId#
		            </isNotNull>
		            <isNull property="modelId" >
		            AND NVL(SIL_B.MDL_ID, SIL.MDL_ID)                  IS NULL
		            </isNull>
		            <isNotNull property="machPk" >
                        <isNotEqual property="invLineTpCd" compareValue="ACSY">
                        AND NVL(NVL(SIL_C.SVC_MACH_MSTR_PK, SIL_B.SVC_MACH_MSTR_PK), SIL.SVC_MACH_MSTR_PK)    = #machPk#
                        </isNotEqual>
                        <isEqual property="invLineTpCd" compareValue="ACSY">
                        AND NVL(SIL_B.SVC_MACH_MSTR_PK, SIL.SVC_MACH_MSTR_PK)      = #machPk#
                        </isEqual>
		            </isNotNull>
		            <isNull property="machPk" >
		            AND NVL(SIL_B.SVC_MACH_MSTR_PK, SIL.SVC_MACH_MSTR_PK)          IS NULL
		            </isNull>
		            <isNotNull property="svcPgm" >
		            AND NVL(SIL_B.INV_PRINT_COV_TXT, SIL.INV_PRINT_COV_TXT)         = #svcPgm#
		            </isNotNull>
		            <isNull property="svcPgm" >
		            AND NVL(SIL_B.INV_PRINT_COV_TXT, SIL.INV_PRINT_COV_TXT)         IS NULL
		            </isNull>
		            <isNotNull property="custCodes1" >
		            AND SIL.FIRST_BLLG_ATTRB_VAL_TXT    = #custCodes1#
		            </isNotNull>
		            <isNull property="custCodes1" >
		            AND SIL.FIRST_BLLG_ATTRB_VAL_TXT  IS NULL
		            </isNull>
		            <isNotNull property="custCodes2">
		            AND SIL.SCD_BLLG_ATTRB_VAL_TXT    = #custCodes2#
		            </isNotNull>
		            <isNull property="custCodes2" >
		            AND SIL.SCD_BLLG_ATTRB_VAL_TXT  IS NULL
		            </isNull>
		            <isNotNull property="custCodes3" >
		            AND SIL.THIRD_BLLG_ATTRB_VAL_TXT    = #custCodes3#
		            </isNotNull>
		            <isNull property="custCodes3" >
		            AND SIL.THIRD_BLLG_ATTRB_VAL_TXT  IS NULL
		            </isNull>
		            <isNotNull property="custCodes4" >
		            AND SIL.FRTH_BLLG_ATTRB_VAL_TXT    = #custCodes4#
		            </isNotNull>
		            <isNull property="custCodes4" >
		            AND SIL.FRTH_BLLG_ATTRB_VAL_TXT  IS NULL
		            </isNull>
		            <isNotNull property="custCodes5" >
		            AND SIL.FIFTH_BLLG_ATTRB_VAL_TXT    = #custCodes5#
		            </isNotNull>
		            <isNull property="custCodes5" >
		            AND SIL.FIFTH_BLLG_ATTRB_VAL_TXT  IS NULL
		            </isNull>
		            <isNotNull property="custCodes6" >
		            AND SIL.SIXTH_BLLG_ATTRB_VAL_TXT    = #custCodes6#
		            </isNotNull>
		            <isNull property="custCodes6" >
		            AND SIL.SIXTH_BLLG_ATTRB_VAL_TXT  IS NULL
		            </isNull>
		            <isNull property="poNo">
		                AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
		                THEN I.CUST_ISS_PO_NUM
		                ELSE NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))
		                END IS NULL
		            </isNull>
		            <isNotNull property="poNo">
		                AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
		                THEN UPPER(I.CUST_ISS_PO_NUM)
		                ELSE UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)))
		                END = UPPER(#poNo#)
		            </isNotNull>
		            <isNotNull property="periodFrom">
		            AND SIL.BLLG_PER_FROM_DT                                   = #periodFrom#
		            </isNotNull>
		            <isNull property="periodFrom">
		            AND SIL.BLLG_PER_FROM_DT                                   IS NULL
		            </isNull>
		            <isNotNull property="periodThru">
		            AND SIL.BLLG_PER_THRU_DT                                   = #periodThru#
		            </isNotNull>
		            <isNull property="periodThru">
		            AND SIL.BLLG_PER_THRU_DT                                   IS NULL
		            </isNull>
		            <isNotNull property="svcContrBaseBllgPk">
		            AND SILAC.SVC_CONTR_BASE_BLLG_PK                           =#svcContrBaseBllgPk#
		            </isNotNull>
		            <isNull property="svcContrBaseBllgPk">
		            AND SILAC.SVC_CONTR_BASE_BLLG_PK                           IS NULL
		            </isNull>
		            <isNotNull property="addlChrgInvTpCd">
		            AND SILAC.ADDL_CHRG_INV_TP_CD                              =#addlChrgInvTpCd#
		            </isNotNull>
		            <isNull property="addlChrgInvTpCd">
		            AND SILAC.ADDL_CHRG_INV_TP_CD                              IS NULL
		            </isNull>
                )

            <!-- END   06/20/2022 [QC#60205, MOD] -->
        <!-- START 06/20/2022 [QC#60205, ADD] -->
        UNION ALL
        SELECT 
           IL_C.INV_LINE_DEAL_NET_AMT   AMOUNT
        FROM  
             INV      I
            ,SVC_INV  SI
            ,INV_LINE IL
            ,INV_LINE IL_C
            ,SVC_INV_LINE SIL
            ,SVC_INV_LINE SIL_B
            ,SVC_INV_LINE SIL_C
            ,MDSE M
            ,SVC_INV_LINE_ADDL_CHRG SILAC
        WHERE 
            I.INV_NUM = #invNum#
        AND I.GLBL_CMPY_CD = #glblCmpyCd#
        AND I.EZCANCELFLAG = '0'
        AND I.INV_NUM                   = SI.SVC_INV_NUM
        AND I.GLBL_CMPY_CD              = SI.GLBL_CMPY_CD
        AND SI.EZCANCELFLAG             = '0'
        AND I.INV_NUM = IL.INV_NUM
        AND I.GLBL_CMPY_CD = IL.GLBL_CMPY_CD
        AND IL.EZCANCELFLAG = '0'
        AND IL.SVC_INV_LINE_PK = SIL.SVC_INV_LINE_PK 
        AND IL.GLBL_CMPY_CD = SIL.GLBL_CMPY_CD
        AND SIL.EZCANCELFLAG = '0'
        AND SIL.DS_CONTR_DTL_PK = #contrDtlPk#
        AND SIL.SVC_MACH_MSTR_PK = SIL_B.SVC_MACH_MSTR_PK
        AND SIL.DS_CONTR_DTL_PK &lt;&gt; SIL_B.DS_CONTR_DTL_PK
        AND SIL.SVC_INV_NUM = SIL_B.SVC_INV_NUM 
        AND SIL.GLBL_CMPY_CD = SIL_B.GLBL_CMPY_CD
        AND SIL_B.EZCANCELFLAG = '0'
        AND SIL_B.SVC_PGM_MDSE_CD = M.MDSE_CD
        AND SIL_B.GLBL_CMPY_CD = M.GLBL_CMPY_CD
        AND M.EZCANCELFLAG  = '0'
        AND M.SVC_PGM_TP_CD = '14'
        AND SIL_B.SVC_INV_LINE_PK = SIL_C.PRNT_SVC_INV_LINE_PK
        AND SIL_B.GLBL_CMPY_CD = SIL_C.GLBL_CMPY_CD
        AND SIL_C.EZCANCELFLAG = '0'
        AND SIL_C.SVC_INV_CHRG_TP_CD = 'AC'
        AND SIL_C.SVC_INV_LINE_PK = SILAC.SVC_INV_LINE_PK
        AND SIL_C.GLBL_CMPY_CD = SILAC.GLBL_CMPY_CD
        AND SILAC.EZCANCELFLAG = '0'
        AND SILAC.PRINT_DTL_FLG = 'N'
        AND SIL_C.SVC_INV_LINE_PK = IL_C.SVC_INV_LINE_PK
        AND SIL_C.SVC_INV_NUM     = IL_C.INV_NUM
        AND SIL_C.GLBL_CMPY_CD = IL_C.GLBL_CMPY_CD
        AND IL_C.EZCANCELFLAG = '0'
        AND (NVL(SIL_B.SHIP_TO_CUST_CD, SIL.SHIP_TO_CUST_CD) = #shipToCust#
            OR NVL(SIL_B.SHIP_TO_CUST_CD, SIL.SHIP_TO_CUST_CD)          IS NULL)
        <isNotNull property="custCodes1" >
        AND SIL.FIRST_BLLG_ATTRB_VAL_TXT    = #custCodes1#
        </isNotNull>
        <isNull property="custCodes1" >
        AND SIL.FIRST_BLLG_ATTRB_VAL_TXT  IS NULL
        </isNull>
        <isNotNull property="custCodes2">
        AND SIL.SCD_BLLG_ATTRB_VAL_TXT    = #custCodes2#
        </isNotNull>
        <isNull property="custCodes2" >
        AND SIL.SCD_BLLG_ATTRB_VAL_TXT  IS NULL
        </isNull>
        <isNotNull property="custCodes3" >
        AND SIL.THIRD_BLLG_ATTRB_VAL_TXT    = #custCodes3#
        </isNotNull>
        <isNull property="custCodes3" >
        AND SIL.THIRD_BLLG_ATTRB_VAL_TXT  IS NULL
        </isNull>
        <isNotNull property="custCodes4" >
        AND SIL.FRTH_BLLG_ATTRB_VAL_TXT    = #custCodes4#
        </isNotNull>
        <isNull property="custCodes4" >
        AND SIL.FRTH_BLLG_ATTRB_VAL_TXT  IS NULL
        </isNull>
        <isNotNull property="custCodes5" >
        AND SIL.FIFTH_BLLG_ATTRB_VAL_TXT    = #custCodes5#
        </isNotNull>
        <isNull property="custCodes5" >
        AND SIL.FIFTH_BLLG_ATTRB_VAL_TXT  IS NULL
        </isNull>
        <isNotNull property="custCodes6" >
        AND SIL.SIXTH_BLLG_ATTRB_VAL_TXT    = #custCodes6#
        </isNotNull>
        <isNull property="custCodes6" >
        AND SIL.SIXTH_BLLG_ATTRB_VAL_TXT  IS NULL
        </isNull>
        <isNull property="poNo">
            <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))       IS NULL -->
            <!-- QC#50104 Mod -->
            <!-- START 2022/02/21 [QC#59724, MOD] -->
            <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)) IS NULL -->
            AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
            THEN I.CUST_ISS_PO_NUM
            ELSE NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))
            END IS NULL
            <!-- END   2022/02/21 [QC#59724, MOD] -->
        </isNull>
        <isNotNull property="poNo">
            <!-- 2019/04/04 QC#30756 Mod Start -->
            <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))       = #poNo# -->
            <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)))       = UPPER(#poNo#) -->
            <!-- 2019/04/04 QC#30756 Mod End -->
            <!-- QC#50104 Mod -->
            <!-- START 2022/02/21 [QC#59724, MOD] -->
            <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))) = UPPER(#poNo#) -->
            AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
            THEN UPPER(I.CUST_ISS_PO_NUM)
            ELSE UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)))
            END = UPPER(#poNo#)
            <!-- END   2022/02/21 [QC#59724, MOD] -->
        </isNotNull>
        <isNotNull property="periodFrom">
        AND SIL.BLLG_PER_FROM_DT                                   = #periodFrom#
        </isNotNull>
        <isNull property="periodFrom">
        AND SIL.BLLG_PER_FROM_DT                                   IS NULL
        </isNull>
        <isNotNull property="periodThru">
        AND SIL.BLLG_PER_THRU_DT                                   = #periodThru#
        </isNotNull>
        <isNull property="periodThru">
        AND SIL.BLLG_PER_THRU_DT                                   IS NULL
        </isNull>
        <isNotNull property="addlChrgInvTpCd">
		AND SILAC.ADDL_CHRG_INV_TP_CD                             = #addlChrgInvTpCd#
		</isNotNull>
		<isNull property="addlChrgInvTpCd">
		AND SILAC.ADDL_CHRG_INV_TP_CD                              IS NULL
		</isNull>
        <!-- END 06/20/2022 [QC#60205, ADD] -->
        )
    </statement>
    <statement id="getMaintMtr" parameterClass="Map" resultClass="Map">
    SELECT
         SILM.DS_CONTR_BLLG_MTR_PK                             DS_CONTRACT_BLLG_MTR_PK
        ,SILM.SVC_CONTR_MTR_BLLG_PK                            SVC_CONTR_MTR_BLLG_PK
        <!-- START 2018/02/05 M.Naito [QC#21184, MOD] -->
        <!-- ,SILM.MTR_LB_DESC_TXT                                  METER_TYPE -->
        ,NVL(ML.INV_PRINT_MTR_LB_DESC_TXT, SILM.MTR_LB_DESC_TXT) METER_TYPE
        <!-- END 2018/02/05 M.Naito [QC#21184, MOD] -->
        <!-- QC#28894 Mod Start -->
        <!-- START 2018/06/11 K.Kitachi [QC#20750, MOD] -->
        <!-- ,TO_CHAR(SILM.PREV_TOT_COPY_QTY, #qtyFormat# )         START_READ -->
        ,CASE
            WHEN SI.INV_TP_CD = #invTpCd# THEN
              CASE
                WHEN MAX(TMS.CONTR_MTR_MULT_RATE) &lt;&gt; MIN(TMS.CONTR_MTR_MULT_RATE)
                THEN TO_CHAR(SUM(TMS.START_READ_MTR_CNT * TMS.CONTR_MTR_MULT_RATE), #qtyFormat# )
                ELSE TO_CHAR(SUM(TMS.START_READ_MTR_CNT), #qtyFormat# )
              END
            ELSE
              CASE
                WHEN MAX(TMS_O.CONTR_MTR_MULT_RATE) &lt;&gt; MIN(TMS_O.CONTR_MTR_MULT_RATE)
                THEN TO_CHAR(SUM(TMS_O.START_READ_MTR_CNT * TMS_O.CONTR_MTR_MULT_RATE), #qtyFormat# )
                ELSE TO_CHAR(SUM(TMS_O.START_READ_MTR_CNT), #qtyFormat# )
              END
        END START_READ
        <!-- ,TO_CHAR(SILM.TOT_COPY_QTY, #qtyFormat# )              END_READ -->
        ,CASE
            WHEN SI.INV_TP_CD = #invTpCd# THEN
              CASE
                WHEN MAX(TMS.CONTR_MTR_MULT_RATE) &lt;&gt; MIN(TMS.CONTR_MTR_MULT_RATE)
                THEN TO_CHAR(SUM(TMS.END_READ_MTR_CNT * TMS.CONTR_MTR_MULT_RATE), #qtyFormat# )
                ELSE TO_CHAR(SUM(TMS.END_READ_MTR_CNT), #qtyFormat# )
              END
            ELSE
              CASE
                WHEN MAX(TMS_O.CONTR_MTR_MULT_RATE) &lt;&gt; MIN(TMS_O.CONTR_MTR_MULT_RATE)
                THEN TO_CHAR(SUM(TMS_O.END_READ_MTR_CNT * TMS_O.CONTR_MTR_MULT_RATE), #qtyFormat# )
                ELSE TO_CHAR(SUM(TMS_O.END_READ_MTR_CNT), #qtyFormat# )
              END
        END END_READ
        <!-- ,TO_CHAR(SILM.TEST_COPY_QTY, #qtyFormat# )             TEST_COPIES -->
        ,CASE
            WHEN SI.INV_TP_CD = #invTpCd# THEN
              CASE
                WHEN MAX(TMS.CONTR_MTR_MULT_RATE) &lt;&gt; MIN(TMS.CONTR_MTR_MULT_RATE)
                THEN TO_CHAR(SUM(TMS.TEST_MTR_CNT * TMS.CONTR_MTR_MULT_RATE), #qtyFormat# )
                ELSE TO_CHAR(SUM(TMS.TEST_MTR_CNT), #qtyFormat# )
              END
            ELSE
              CASE
                WHEN MAX(TMS_O.CONTR_MTR_MULT_RATE) &lt;&gt; MIN(TMS_O.CONTR_MTR_MULT_RATE)
                THEN TO_CHAR(SUM(TMS_O.TEST_MTR_CNT * TMS_O.CONTR_MTR_MULT_RATE), #qtyFormat# )
                ELSE TO_CHAR(SUM(TMS_O.TEST_MTR_CNT), #qtyFormat# )
              END
        END TEST_COPIES
        <!-- ,TO_CHAR(SILM.MTR_COPY_QTY, #qtyFormat# )             COPIES_MADE_TXT -->
        ,CASE
            WHEN SI.INV_TP_CD = #invTpCd# THEN
              CASE
                WHEN MAX(TMS.CONTR_MTR_MULT_RATE) &lt;&gt; MIN(TMS.CONTR_MTR_MULT_RATE)
                THEN TO_CHAR(SUM(TMS.TOT_COPY_QTY * TMS.CONTR_MTR_MULT_RATE), #qtyFormat# )
                ELSE TO_CHAR(SUM(TMS.TOT_COPY_QTY), #qtyFormat# )
              END
            ELSE
              CASE
                WHEN MAX(TMS_O.CONTR_MTR_MULT_RATE) &lt;&gt; MIN(TMS_O.CONTR_MTR_MULT_RATE)
                THEN TO_CHAR(SUM(TMS_O.TOT_COPY_QTY * TMS_O.CONTR_MTR_MULT_RATE), #qtyFormat# )
                ELSE TO_CHAR(SUM(TMS_O.TOT_COPY_QTY), #qtyFormat# )
              END
        END COPIES_MADE_TXT
        <!-- ,CASE WHEN SILM.CONTR_MTR_MULT_RATE IS NULL THEN '-' ELSE RTRIM(TO_CHAR(SILM.CONTR_MTR_MULT_RATE, #rateFormat# ), '.') END MULTIPLIER_TXT -->
        ,CASE
            WHEN SI.INV_TP_CD = #invTpCd# THEN
              CASE
                WHEN MAX(TMS.CONTR_MTR_MULT_RATE) &lt;&gt; MIN(TMS.CONTR_MTR_MULT_RATE)
                THEN NULL
                ELSE RTRIM(TO_CHAR(MAX(TMS.CONTR_MTR_MULT_RATE),  #rateFormat# ), '.')
              END
            ELSE
              CASE
                WHEN MAX(TMS_O.CONTR_MTR_MULT_RATE) &lt;&gt; MIN(TMS_O.CONTR_MTR_MULT_RATE)
                THEN NULL
                ELSE RTRIM(TO_CHAR(MAX(TMS_O.CONTR_MTR_MULT_RATE),  #rateFormat# ), '.')
              END
        END MULTIPLIER_TXT
        <!-- END 2018/06/11 K.Kitachi [QC#20750, MOD] -->
        <!-- QC#28894 Mod End -->
        ,TO_CHAR(SILM.COPY_INCL_QTY, #qtyFormat# )             ALLOWANCE_TXT
        ,TO_CHAR(SILM.BLLG_COPY_QTY, #qtyFormat# )              BILLABLE_COPIES
        ,CASE WHEN SILM.MTR_CHRG_DEAL_AMT IS NOT NULL THEN
             CASE WHEN SILM.MTR_CHRG_DEAL_AMT &lt; 0 THEN
                 '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(SILM.MTR_CHRG_DEAL_AMT+NVL(ADD_MTR.ADD_AMT,0)), #amtFormat# )
             ELSE
                 CCY.CCY_SGN_TXT || TO_CHAR(SILM.MTR_CHRG_DEAL_AMT+NVL(ADD_MTR.ADD_AMT,0), #amtFormat# )
             END
         ELSE
             ''
         END    METER_AMOUNT_TXT
        ,ML.MTR_LB_SORT_NUM
        <!--  START 2022/03/29 L.Mandanas [QC#58350, ADD] -->
        ,SILM.MTR_COPY_QTY AS MULTIPLIED_USAGE
        <!--  END 2022/03/29 L.Mandanas [QC#58350, ADD] -->
    FROM
        <!-- 2018/08/21 QC#27684 Mod Start -->
        <!-- INV                I -->
        (
            SELECT
                   INV_NUM,
                   CASE SYS_SRC_CD
                      WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                      ELSE INV_NUM
                   END  AS SVC_INV_NUM,
                   GLBL_CMPY_CD,
                   EZCANCELFLAG,
                   LEASE_CMPY_PO_NUM,
                   DEAL_CCY_CD
                   <!-- START 2022/02/21 [QC#59724, ADD] -->
                   ,CUST_ISS_PO_NUM
                   <!-- END   2022/02/21 [QC#59724, ADD] -->
              FROM
                   INV
             WHERE
                   INV_NUM = #invNum#
               AND GLBL_CMPY_CD = #glblCmpyCd#
               AND EZCANCELFLAG = '0'
        ) I
        <!-- 2018/08/21 QC#27684 Mod End -->
        ,SVC_INV                SI
        ,INV_LINE               IL
        <!-- QC#52209 2019/07/31 Mod -->
        <!-- ,SVC_INV_LINE           SIL -->
        <!-- ,SVC_INV_LINE           SIL_B -->
        ,INV_PRT_SVC_INV_LINE_WRK SIL
        ,INV_PRT_SVC_INV_LINE_WRK SIL_B
        ,SVC_INV_LINE_MTR   SILM
        ,CCY                CCY    
        <!-- START 2018/02/05 M.Naito [QC#21184, MOD] -->
        ,MTR_LB             ML
        <!-- END 2018/02/05 M.Naito [QC#21184, MOD] -->
        ,(SELECT SIL_A.SVC_INV_NUM, SILAC.SVC_CONTR_MTR_BLLG_PK, SUM(SIL_A.INV_LINE_DEAL_NET_AMT) ADD_AMT 
          FROM SVC_INV_LINE_ADDL_CHRG SILAC, SVC_INV_LINE SIL_A
          WHERE SILAC.GLBL_CMPY_CD = #glblCmpyCd# AND SILAC.EZCANCELFLAG = '0'
          AND SILAC.SVC_INV_LINE_PK = SIL_A.SVC_INV_LINE_PK
          AND SILAC.PRINT_DTL_FLG = 'N' AND ADDL_CHRG_INV_TP_CD = 'USGE'
          AND SIL_A.GLBL_CMPY_CD = #glblCmpyCd# AND SIL_A.EZCANCELFLAG = '0'
          GROUP BY SIL_A.SVC_INV_NUM, SILAC.SVC_CONTR_MTR_BLLG_PK) ADD_MTR
        <!-- START 2018/06/11 K.Kitachi [QC#20750, ADD] -->
        ,CONTR_PHYS_BLLG_MTR_RELN RLN
        ,BLLG_SCHD_TEST_MTR_SMRY  TMS
        <!-- END 2018/06/11 K.Kitachi [QC#20750, ADD] -->
        <!-- QC#28894 Add Start -->
        ,DS_CONTR_BLLG_SCHD BS
        ,BLLG_SCHD_TEST_MTR_SMRY  TMS_O
        <!-- QC#28894 Add End -->

    WHERE
        <!-- 2018/08/21 QC#27684 Mod Start -->
        <!--
            I.INV_NUM                       = #invNum#
        AND I.GLBL_CMPY_CD                  = #glblCmpyCd#
        AND I.EZCANCELFLAG                  = '0'

        AND ((      I.SYS_SRC_CD        &lt;&gt; #sysSrcCdNFC#
                AND I.INV_NUM           = SI.SVC_INV_NUM )
            OR  (   I.SYS_SRC_CD        = #sysSrcCdNFC#
                AND I.ORIG_INV_NUM      = SI.SVC_INV_NUM )
            )
        -->
            I.SVC_INV_NUM                   = SI.SVC_INV_NUM
        <!-- 2018/08/21 QC#27684 Mod End -->
        AND I.GLBL_CMPY_CD                  = SI.GLBL_CMPY_CD
        AND SI.EZCANCELFLAG                 = '0'
        AND I.INV_NUM                       = IL.INV_NUM
        AND I.GLBL_CMPY_CD                  = IL.GLBL_CMPY_CD
        AND IL.EZCANCELFLAG                 = '0'
        AND SIL.SVC_INV_CHRG_TP_CD          = #invChrgTpCd#
        AND IL.SVC_INV_LINE_PK              = SIL.SVC_INV_LINE_PK
        AND IL.INV_NUM                      = SIL.SVC_INV_NUM <!-- QC#54201 2019/11/04 Add-->
        AND IL.GLBL_CMPY_CD                 = SIL.GLBL_CMPY_CD
        AND SIL.EZCANCELFLAG                = '0'
        AND SIL.SVC_INV_LINE_PK             = SILM.SVC_INV_LINE_PK
        AND SIL.GLBL_CMPY_CD                = SILM.GLBL_CMPY_CD
        AND SILM.EZCANCELFLAG               = '0'
        AND (SIL.SHIP_TO_CUST_CD            = #shipToCust#
                OR SIL.SHIP_TO_CUST_CD      IS NULL)
        AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
        AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
        AND CCY.EZCANCELFLAG(+)         = '0'
        
        AND SIL.PRNT_SVC_INV_LINE_PK    = SIL_B.SVC_INV_LINE_PK (+)
        AND SIL.SVC_INV_NUM             = SIL_B.SVC_INV_NUM (+) <!-- QC#54201 2019/11/04 Add-->
        AND SIL.GLBL_CMPY_CD            = SIL_B.GLBL_CMPY_CD (+)
        AND SIL_B.EZCANCELFLAG(+)       = '0'

        <isNotNull property="poNo" >
        <!-- 2019/04/04 QC#30756 Mod Start -->
        <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))   = #poNo# -->
        <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)))   = UPPER(#poNo#) -->
        <!-- 2019/04/04 QC#30756 Mod End -->
        <!-- QC#50104 Mod -->
        <!-- START 2022/02/21 [QC#59724, MOD] -->
        <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))) = UPPER(#poNo#) -->
        AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
        THEN UPPER(I.CUST_ISS_PO_NUM)
        ELSE UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)))
        END = UPPER(#poNo#)
        <!-- END   2022/02/21 [QC#59724, MOD] -->
        </isNotNull>
        <isNull property="poNo" >
        <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))  IS NULL -->
        <!-- QC#50104 Mod -->
        <!-- START 2022/02/21 [QC#59724, MOD] -->
        <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)) IS NULL -->
        AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
        THEN I.CUST_ISS_PO_NUM
        ELSE NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))
        END IS NULL
        <!-- END   2022/02/21 [QC#59724, MOD] -->
        </isNull>
        <isNotNull property="custCodes1" >
        AND SIL.FIRST_BLLG_ATTRB_VAL_TXT    = #custCodes1#
        </isNotNull>
        <isNull property="custCodes1" >
        AND SIL.FIRST_BLLG_ATTRB_VAL_TXT  IS NULL
        </isNull>
        <isNotNull property="custCodes2">
        AND SIL.SCD_BLLG_ATTRB_VAL_TXT    = #custCodes2#
        </isNotNull>
        <isNull property="custCodes2" >
        AND SIL.SCD_BLLG_ATTRB_VAL_TXT  IS NULL
        </isNull>
        <isNotNull property="custCodes3" >
        AND SIL.THIRD_BLLG_ATTRB_VAL_TXT    = #custCodes3#
        </isNotNull>
        <isNull property="custCodes3" >
        AND SIL.THIRD_BLLG_ATTRB_VAL_TXT  IS NULL
        </isNull>
        <isNotNull property="custCodes4" >
        AND SIL.FRTH_BLLG_ATTRB_VAL_TXT     = #custCodes4#
        </isNotNull>
        <isNull property="custCodes4" >
        AND SIL.FRTH_BLLG_ATTRB_VAL_TXT     IS NULL
        </isNull>
        <isNotNull property="custCodes5" >
        AND SIL.FIFTH_BLLG_ATTRB_VAL_TXT    = #custCodes5#
        </isNotNull>
        <isNull property="custCodes5" >
        AND SIL.FIFTH_BLLG_ATTRB_VAL_TXT    IS NULL
        </isNull>
        <isNotNull property="custCodes6" >
        AND SIL.SIXTH_BLLG_ATTRB_VAL_TXT    = #custCodes6#
        </isNotNull>
        <isNull property="custCodes6" >
        AND SIL.SIXTH_BLLG_ATTRB_VAL_TXT    IS NULL
        </isNull>
        <isNotNull property="contrPk" >
        AND SIL.DS_CONTR_PK                 = #contrPk#
        </isNotNull>
        <isNull property="contrPk" >
        AND SIL.DS_CONTR_PK                 IS NULL
        </isNull>
        <isNotNull property="machPk" >
        AND NVL(SIL_B.SVC_MACH_MSTR_PK, SIL.SVC_MACH_MSTR_PK)            = #machPk#
        </isNotNull>
        <isNull property="machPk" >
        AND NVL(SIL_B.SVC_MACH_MSTR_PK, SIL.SVC_MACH_MSTR_PK)            IS NULL
        </isNull>
        <isNotNull property="modelId" >
        AND NVL(SIL_B.MDL_ID, SIL.MDL_ID)                      = #modelId#
        </isNotNull>
        <isNull property="modelId" >
        AND NVL(SIL_B.MDL_ID, SIL.MDL_ID)                      IS NULL
        </isNull>
        <isNotNull property="svcPgm" >
        AND NVL(SIL_B.INV_PRINT_COV_TXT, SIL.INV_PRINT_COV_TXT)             = #svcPgm#
        </isNotNull>
        <isNull property="svcPgm" >
        AND NVL(SIL_B.INV_PRINT_COV_TXT, SIL.INV_PRINT_COV_TXT)             IS NULL
        </isNull>
        <isEqual property="meterFlg" compareValue="Y"> 
        AND 1=2
        </isEqual>
        <!-- START 2018/02/05 M.Naito [QC#21184, MOD] -->
        AND SILM.GLBL_CMPY_CD               = ML.GLBL_CMPY_CD
        AND SILM.MTR_LB_CD                  = ML.MTR_LB_CD
        AND ML.EZCANCELFLAG                 = '0'
        <!-- END 2018/02/05 M.Naito [QC#21184, MOD] -->
        
        AND SILM.SVC_INV_NUM = ADD_MTR.SVC_INV_NUM (+)
        AND SILM.SVC_CONTR_MTR_BLLG_PK = ADD_MTR.SVC_CONTR_MTR_BLLG_PK (+)

        <!-- START 2018/06/11 K.Kitachi [QC#20750, ADD] -->
        AND SILM.GLBL_CMPY_CD               = RLN.GLBL_CMPY_CD
        AND SILM.DS_CONTR_BLLG_MTR_PK       = RLN.DS_CONTR_BLLG_MTR_PK
        AND RLN.BLLBL_FLG                   = 'Y'
        AND RLN.EZCANCELFLAG                = '0'
        <!-- QC#28894 Mod Start -->
        AND RLN.GLBL_CMPY_CD                = TMS.GLBL_CMPY_CD (+)
        AND RLN.SVC_PHYS_MTR_PK             = TMS.SVC_PHYS_MTR_PK (+)
        AND SIL.DS_CONTR_BLLG_SCHD_PK       = TMS.DS_CONTR_BLLG_SCHD_PK (+)
        AND TMS.EZCANCELFLAG(+)             = '0'
        <!-- QC#28894 Mod End -->
        <!-- END 2018/06/11 K.Kitachi [QC#20750, ADD] -->

        <!-- QC#28894 Add Start -->
        AND SIL.GLBL_CMPY_CD                = BS.GLBL_CMPY_CD
        AND SIL.DS_CONTR_BLLG_SCHD_PK       = BS.DS_CONTR_BLLG_SCHD_PK
        AND BS.EZCANCELFLAG                 = '0'

        AND RLN.GLBL_CMPY_CD                = TMS_O.GLBL_CMPY_CD (+)
        AND RLN.SVC_PHYS_MTR_PK             = TMS_O.SVC_PHYS_MTR_PK (+)
        AND BS.GLBL_CMPY_CD                 = TMS_O.GLBL_CMPY_CD (+)
        AND BS.ORIG_DS_CONTR_BLLG_SCHD_PK   = TMS_O.DS_CONTR_BLLG_SCHD_PK (+)
        AND TMS_O.EZCANCELFLAG(+)           = '0'
        <!-- QC#28894 Add End -->

    <!-- START 2018/06/11 K.Kitachi [QC#20750, ADD] -->
    GROUP BY
         SILM.DS_CONTR_BLLG_MTR_PK
        ,SILM.SVC_CONTR_MTR_BLLG_PK
        ,NVL(ML.INV_PRINT_MTR_LB_DESC_TXT, SILM.MTR_LB_DESC_TXT)
        ,SILM.COPY_INCL_QTY
        ,SILM.BLLG_COPY_QTY
        ,CCY.CCY_SGN_TXT
        ,SILM.MTR_CHRG_DEAL_AMT
        ,NVL(ADD_MTR.ADD_AMT, 0)
        ,ML.MTR_LB_SORT_NUM
        <!-- QC#28894 Add Start -->
        ,SI.INV_TP_CD
        <!-- QC#28894 Add End -->
    <!-- END 2018/06/11 K.Kitachi [QC#20750, ADD] -->
        <!--  START 2022/03/29 L.Mandanas [QC#58350, ADD] -->
        ,SILM.MTR_COPY_QTY
        <!--  END 2022/03/29 L.Mandanas [QC#58350, ADD] -->

    UNION ALL
    SELECT 
         NULL                                                       DS_CONTRACT_BLLG_MTR_PK
        ,DIMD.SVC_CONTR_MTR_BLLG_PK                                 SVC_CONTR_MTR_BLLG_PK
        <!-- 2019/06/06 QC#50727 Mod Start -->
        , NVL( 
            ML.INV_PRINT_MTR_LB_DESC_TXT
            , DIMD.MTR_LB_DESC_TXT
        ) METER_TYPE
        <!-- ,DIMD.MTR_LB_DESC_TXT                                       METER_TYPE -->
        <!-- 2019/06/06 QC#50727 Mod End -->
        ,TO_CHAR(DIMD.PREV_TOT_COPY_QTY, #qtyFormat# )              START_READ
        ,TO_CHAR(DIMD.TOT_COPY_QTY , #qtyFormat# )                  END_READ
        ,TO_CHAR(DIMD.TEST_COPY_QTY, #qtyFormat# )                  TEST_COPIES
        ,TO_CHAR(DIMD.TOT_COPY_QTY - DIMD.PREV_TOT_COPY_QTY - DIMD.TEST_COPY_QTY, #qtyFormat# )                  COPIES_MADE_TXT
        ,CASE WHEN DIMD.CONTR_MTR_MULT_RATE IS NULL THEN '-' ELSE RTRIM(TO_CHAR(DIMD.CONTR_MTR_MULT_RATE, #rateFormat# ), '.') END MULTIPLIER_TXT
        ,TO_CHAR(DIMD.COPY_INCL_QTY, #qtyFormat# )                  ALLOWANCE_TXT
        ,TO_CHAR(DIMD.BLLG_COPY_QTY, #qtyFormat# )        BILLABLE_COPIES
        ,CASE WHEN DIMD.MTR_CHRG_DEAL_AMT IS NOT NULL THEN
             CASE WHEN DIMD.MTR_CHRG_DEAL_AMT &lt; 0 THEN
                 '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(DIMD.MTR_CHRG_DEAL_AMT), #amtFormat# )
             ELSE
                 CCY.CCY_SGN_TXT || TO_CHAR(DIMD.MTR_CHRG_DEAL_AMT, #amtFormat# )
             END
         ELSE
             ''
         END    METER_AMOUNT_TXT
        <!-- 2019/06/25 QC#50916 Mod Start -->
        ,ML.MTR_LB_SORT_NUM
   <!-- ,NULL MTR_LB_SORT_NUM-->
        <!-- 2019/06/25 QC#50916 Mod End -->
        <!--  START 2022/03/29 L.Mandanas [QC#58350, ADD] -->
        ,DIMD.TOT_COPY_QTY - DIMD.PREV_TOT_COPY_QTY - DIMD.TEST_COPY_QTY AS MULTIPLIED_USAGE
        <!--  END 2022/03/29 L.Mandanas [QC#58350, ADD] -->
    FROM
       <!-- 2018/08/21 QC#27684 Mod Start -->
       <!--  INV                I -->
        (
             SELECT
                   INV_NUM,
                   CASE SYS_SRC_CD
                      WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                      ELSE INV_NUM
                   END  AS SVC_INV_NUM,
                   GLBL_CMPY_CD,
                   EZCANCELFLAG,
                   LEASE_CMPY_PO_NUM,
                   DEAL_CCY_CD
                   <!-- START 2022/02/21 [QC#59724, ADD] -->
                   ,CUST_ISS_PO_NUM
                   <!-- END   2022/02/21 [QC#59724, ADD] -->
             FROM
                   INV
             WHERE
                   INV_NUM = #invNum#
               AND GLBL_CMPY_CD = #glblCmpyCd#
               AND EZCANCELFLAG = '0'
        ) I
       <!-- 2018/08/21 QC#27684 Mod End -->
        ,SVC_INV            SI
        ,INV_LINE           IL
        <!-- QC#52209 2019/07/31 Mod -->
        <!-- ,SVC_INV_LINE       SIL -->
        <!-- ,SVC_INV_LINE       SIL_B -->
        ,INV_PRT_SVC_INV_LINE_WRK  SIL
        ,INV_PRT_SVC_INV_LINE_WRK  SIL_B
        ,DS_INV_MTR_DTL     DIMD
        ,CCY                CCY
        <!-- 2019/06/06 QC#50727 Add Start -->
        , MTR_LB ML
        <!-- 2019/06/06 QC#50727 Add End -->

    WHERE
        <!-- 2018/08/21 QC#27684 Mod Start -->
        <!--
            I.INV_NUM                       = #invNum#
        AND I.GLBL_CMPY_CD                  = #glblCmpyCd#
        AND I.EZCANCELFLAG                  = '0'
        AND ((      I.SYS_SRC_CD        &lt;&gt; #sysSrcCdNFC#
                AND I.INV_NUM           = SI.SVC_INV_NUM )
            OR  (   I.SYS_SRC_CD        = #sysSrcCdNFC#
                AND I.ORIG_INV_NUM      = SI.SVC_INV_NUM )
            )
        -->
            I.SVC_INV_NUM                   = SI.SVC_INV_NUM
        <!-- 2018/08/21 QC#27684 Mod End -->
        AND I.GLBL_CMPY_CD                  = SI.GLBL_CMPY_CD
        AND SI.EZCANCELFLAG                 = '0'
        AND I.INV_NUM                       = IL.INV_NUM
        AND I.GLBL_CMPY_CD                  = IL.GLBL_CMPY_CD
        AND IL.EZCANCELFLAG                 = '0'
        AND SIL.SVC_INV_CHRG_TP_CD          = #invChrgTpCd#
        AND IL.INV_NUM                      = SIL.SVC_INV_NUM
        AND IL.SVC_INV_LINE_PK              = SIL.SVC_INV_LINE_PK
        AND IL.GLBL_CMPY_CD                 = SIL.GLBL_CMPY_CD
        AND SIL.EZCANCELFLAG                = '0'
        AND IL.INV_NUM                      = DIMD.INV_NUM
        AND IL.INV_BOL_LINE_NUM             = DIMD.INV_BOL_LINE_NUM
        AND IL.INV_LINE_NUM                 = DIMD.INV_LINE_NUM
        AND IL.INV_LINE_SUB_NUM             = DIMD.INV_LINE_SUB_NUM
        AND IL.INV_LINE_SUB_TRX_NUM         = DIMD.INV_LINE_SUB_TRX_NUM
        AND SIL.GLBL_CMPY_CD                = DIMD.GLBL_CMPY_CD
        AND DIMD.EZCANCELFLAG               = '0'

        <!-- 2019/06/06 QC#50727 Add Start -->
        AND DIMD.MTR_LB_CD                  = ML.MTR_LB_CD(+)
        AND DIMD.GLBL_CMPY_CD               = ML.GLBL_CMPY_CD(+)
        AND ML.EZCANCELFLAG(+)              = '0'
        <!-- 2019/06/06 QC#50727 Add End -->

        AND (SIL.SHIP_TO_CUST_CD            = #shipToCust#
                OR SIL.SHIP_TO_CUST_CD      IS NULL)
        AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
        AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
        AND CCY.EZCANCELFLAG(+)         = '0'

        AND SIL.SVC_INV_NUM             = SIL_B.SVC_INV_NUM (+)
        AND SIL.PRNT_SVC_INV_LINE_PK    = SIL_B.SVC_INV_LINE_PK (+)
        AND SIL.GLBL_CMPY_CD            = SIL_B.GLBL_CMPY_CD (+)
        AND SIL_B.EZCANCELFLAG(+)       = '0'

        <isNotNull property="poNo" >
        <!-- 2019/04/04 QC#30756 Mod Start -->
        <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))   = #poNo# -->
        <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)))   = UPPER(#poNo#) -->
        <!-- 2019/04/04 QC#30756 Mod End -->
        <!-- QC#50104 Mod -->
        <!-- START 2022/02/21 [QC#59724, MOD] -->
        <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))) = UPPER(#poNo#) -->
        AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
        THEN UPPER(I.CUST_ISS_PO_NUM)
        ELSE UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)))
        END = UPPER(#poNo#)
        <!-- END   2022/02/21 [QC#59724, MOD] -->
        </isNotNull>
        <isNull property="poNo" >
        <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))  IS NULL -->
        <!-- QC#50104 Mod -->
        <!-- START 2022/02/21 [QC#59724, MOD] -->
        <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM)) IS NULL -->
        AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
        THEN I.CUST_ISS_PO_NUM
        ELSE NVL(I.LEASE_CMPY_PO_NUM, NVL(NVL2(SIL.PRNT_SVC_INV_LINE_PK, SIL_B.CUST_ISS_PO_NUM, SIL.CUST_ISS_PO_NUM), SI.CUST_ISS_PO_NUM))
        END IS NULL
        <!-- END   2022/02/21 [QC#59724, MOD] -->
        </isNull>
        <isNotNull property="custCodes1" >
        AND SIL.FIRST_BLLG_ATTRB_VAL_TXT    = #custCodes1#
        </isNotNull>
        <isNull property="custCodes1" >
        AND SIL.FIRST_BLLG_ATTRB_VAL_TXT    IS NULL
        </isNull>
        <isNotNull property="custCodes2">
        AND SIL.SCD_BLLG_ATTRB_VAL_TXT      = #custCodes2#
        </isNotNull>
        <isNull property="custCodes2" >
        AND SIL.SCD_BLLG_ATTRB_VAL_TXT      IS NULL
        </isNull>
        <isNotNull property="custCodes3" >
        AND SIL.THIRD_BLLG_ATTRB_VAL_TXT    = #custCodes3#
        </isNotNull>
        <isNull property="custCodes3" >
        AND SIL.THIRD_BLLG_ATTRB_VAL_TXT    IS NULL
        </isNull>
        <isNotNull property="custCodes4" >
        AND SIL.FRTH_BLLG_ATTRB_VAL_TXT     = #custCodes4#
        </isNotNull>
        <isNull property="custCodes4" >
        AND SIL.FRTH_BLLG_ATTRB_VAL_TXT     IS NULL
        </isNull>
        <isNotNull property="custCodes5" >
        AND SIL.FIFTH_BLLG_ATTRB_VAL_TXT    = #custCodes5#
        </isNotNull>
        <isNull property="custCodes5" >
        AND SIL.FIFTH_BLLG_ATTRB_VAL_TXT    IS NULL
        </isNull>
        <isNotNull property="custCodes6" >
        AND SIL.SIXTH_BLLG_ATTRB_VAL_TXT     = #custCodes6#
        </isNotNull>
        <isNull property="custCodes6" >
        AND SIL.SIXTH_BLLG_ATTRB_VAL_TXT     IS NULL
        </isNull>
        <isNotNull property="contrPk" >
        AND SIL.DS_CONTR_PK                   = #contrPk#
        </isNotNull>
        <isNull property="contrPk" >
        AND SIL.DS_CONTR_PK                   IS NULL
        </isNull>
        <isNotNull property="machPk" >
        AND NVL(SIL_B.SVC_MACH_MSTR_PK, SIL.SVC_MACH_MSTR_PK)              = #machPk#
        </isNotNull>
        <isNull property="machPk" >
        AND NVL(SIL_B.SVC_MACH_MSTR_PK, SIL.SVC_MACH_MSTR_PK)              IS NULL
        </isNull>
        <isNotNull property="modelId" >
        AND NVL(SIL_B.MDL_ID, SIL.MDL_ID)                        = #modelId#
        </isNotNull>
        <isNull property="modelId" >
        AND NVL(SIL_B.MDL_ID, SIL.MDL_ID)                        IS NULL
        </isNull>
        <isNotNull property="svcPgm" >
        AND NVL(SIL_B.INV_PRINT_COV_TXT, SIL.INV_PRINT_COV_TXT)             = #svcPgm#
        </isNotNull>
        <isNull property="svcPgm" >
        AND NVL(SIL_B.INV_PRINT_COV_TXT, SIL.INV_PRINT_COV_TXT)               IS NULL
        </isNull>
        <isEqual property="meterFlg" compareValue="N"> 
        AND 1=2
        </isEqual>

    ORDER BY MTR_LB_SORT_NUM
    </statement>

    <statement id="getByBillToCustAcct" parameterClass="Map" resultClass="Map">
        SELECT 
            TRIM(TO_CHAR(SPC.SPLY_PGM_UNIT_AMT_RATE, #fmRate#))   AMT_RATE
            ,TRIM(TO_CHAR(SPC.SPLY_PGM_MLY_QUOT_QTY, #fmQty#))    QUOT_QTY
        FROM 
            SPLY_PGM_CONTR    SPC
        WHERE
                SPC.GLBL_CMPY_CD            = #glblCmpyCd#
            AND SPC.BILL_TO_CUST_ACCT_CD    = #billToCd#
            AND SPC.EFF_FROM_DT         &lt;= #orderDt#
            AND (SPC.EFF_THRU_DT        &gt;= #orderDt#
             OR SPC.EFF_THRU_DT             IS NULL)
            AND SPC.EZCANCELFLAG            = '0'
    </statement>
    
    <statement id="getSalsSplySubTotal" parameterClass="Map" resultClass="Map">
    SELECT
     *
    FROM (
    SELECT
         IB.SHIP_TO_CUST_CD                             SHIP_TO_CODE 
        ,IB.SHIP_TO_LOC_NM                              SHIP_TO_NAME 
        ,IB.SHIP_TO_FIRST_LINE_ADDR                     SHIP_TO_FST_ADDR 
        ,IB.SHIP_TO_SCD_LINE_ADDR
            || IB.SHIP_TO_THIRD_LINE_ADDR
            || IB.SHIP_TO_FRTH_LINE_ADDR                SHIP_TO_SCD_ADDR 
        ,IB.SHIP_TO_CTY_ADDR                            SHIP_TO_CITY 
        ,IB.SHIP_TO_ST_CD                               SHIP_TO_ST
        ,IB.SHIP_TO_POST_CD                             SHIP_TO_POST 
        ,NVL(I.LEASE_CMPY_PO_NUM, I.CUST_ISS_PO_NUM)   PO_NO 
        ,IL.FIRST_BLLG_ATTRB_VAL_TXT                   CUST_CODES1 
        ,IL.SCD_BLLG_ATTRB_VAL_TXT                     CUST_CODES2 
        ,IL.THIRD_BLLG_ATTRB_VAL_TXT                   CUST_CODES3 
        ,IL.FRTH_BLLG_ATTRB_VAL_TXT                    CUST_CODES4 
        ,IL.FIFTH_BLLG_ATTRB_VAL_TXT                   CUST_CODES5 
        ,IL.SIXTH_BLLG_ATTRB_VAL_TXT                   CUST_CODES6 
        ,I.CPO_ORD_NUM                                  ORDER_NO
        ,NULL                                           TRACKING_NO
        ,CASE WHEN 
         <isEqual property="isSupplyOrderFlg" compareValue="true">
             'Y' = 'Y'
         </isEqual>
         <isNotEqual property="isSupplyOrderFlg" compareValue="true">
             'Y' = 'N'
         </isNotEqual>
             THEN
             CASE WHEN M_B.MDSE_CD IS NOT NULL THEN
                 <!-- QC#26846 -->
                 CASE WHEN M_B.COA_PROD_CD LIKE #prodCd# THEN
                     <isEqual property="isBillablePartsOrderFlg" compareValue="true">
                     #ordCatgNmParts# || #nonCopier#
                     </isEqual>
                     <isNotEqual property="isBillablePartsOrderFlg" compareValue="true">
                     #ordCatgNmSply# || #nonCopier#
                     </isNotEqual>
                 WHEN M_B.COA_MDSE_TP_CD = #coaMdseTpCd# THEN
                     <isEqual property="isBillablePartsOrderFlg" compareValue="true">
                     #ordCatgNmParts# || #nonCopier#
                     </isEqual>
                     <isNotEqual property="isBillablePartsOrderFlg" compareValue="true">
                     #ordCatgNmSply# || #nonCopier#
                     </isNotEqual>
                 ELSE
                     <isEqual property="isBillablePartsOrderFlg" compareValue="true">
                     #ordCatgNmParts# || #copier#
                     </isEqual>
                     <isNotEqual property="isBillablePartsOrderFlg" compareValue="true">
                     #ordCatgNmSply# || #copier#
                     </isNotEqual>
                 END
             ELSE
                 CASE WHEN M.COA_PROD_CD LIKE #prodCd# THEN
                     <isEqual property="isBillablePartsOrderFlg" compareValue="true">
                     #ordCatgNmParts# || #nonCopier#
                     </isEqual>
                     <isNotEqual property="isBillablePartsOrderFlg" compareValue="true">
                     #ordCatgNmSply# || #nonCopier#
                     </isNotEqual>
                 WHEN M.COA_MDSE_TP_CD = #coaMdseTpCd# THEN
                     <isEqual property="isBillablePartsOrderFlg" compareValue="true">
                     #ordCatgNmParts# || #nonCopier#
                     </isEqual>
                     <isNotEqual property="isBillablePartsOrderFlg" compareValue="true">
                     #ordCatgNmSply# || #nonCopier#
                     </isNotEqual>
                 ELSE
                     <isEqual property="isBillablePartsOrderFlg" compareValue="true">
                     #ordCatgNmParts# || #copier#
                     </isEqual>
                     <isNotEqual property="isBillablePartsOrderFlg" compareValue="true">
                     #ordCatgNmSply# || #copier#
                     </isNotEqual>
                 END
             END
         ELSE
             CASE WHEN M_B.MDSE_CD IS NOT NULL THEN
                 CASE WHEN M_B.COA_PROD_CD LIKE #prodCd# THEN
                     #ordCatgNmSale# || #nonCopier#
                 WHEN M_B.COA_MDSE_TP_CD = #coaMdseTpCd# THEN
                     #ordCatgNmSale# || #nonCopier#
                 ELSE
                     #ordCatgNmSale# || #copier#
                 END
             ELSE
                 CASE WHEN M.COA_PROD_CD LIKE #prodCd# THEN
                     #ordCatgNmSale# || #nonCopier#
                 WHEN M.COA_MDSE_TP_CD = #coaMdseTpCd# THEN
                     #ordCatgNmSale# || #nonCopier#
                 ELSE
                     #ordCatgNmSale# || #copier#
                 END
             END
         END                                            CHARGE_TYPE
        ,T.TOC_NM                                       SALES_REP
        ,I.SLS_REP_TOC_CD                              SALES_REP_CODE
        
        <isEqual property="dtlDplyFlg" compareValue="N">
        ,IL.INV_LINE_DEAL_NET_AMT                       CHARGE

        </isEqual>
        <isNotEqual property="dtlDplyFlg" compareValue="N">
        ,NULL                                           CHARGE

        </isNotEqual>
        <isEqual property="taxDtlFlg" compareValue="Y">
        ,NVL(DILTD1.DEAL_SLS_TAX_AMT,0)                        STATE_TAX
        ,NVL(DILTD2.DEAL_SLS_TAX_AMT,0)                        COUNTY_TAX
        ,NVL(DILTD3.DEAL_SLS_TAX_AMT,0)                        CITY_TAX   
        
        </isEqual>
        <isNotEqual property="taxDtlFlg" compareValue="Y">
        ,NULL                                           STATE_TAX
        ,NULL                                           COUNTY_TAX
        ,NULL                                           CITY_TAX   
        </isNotEqual>
        <!-- 2019/06/05 QC#50731 MOD START  -->
        <!-- ,IL.INV_LINE_DEAL_TAX_AMT                               TOTAL_TAX  -->
        ,CASE WHEN 0 = (SELECT COUNT(TAI.MDSE_CD) FROM TAX_ADJ_ITEM TAI WHERE TAI.GLBL_CMPY_CD = #glblCmpyCd# AND TAI.EZCANCELFLAG = '0' AND TAI.MDSE_CD = IL.MDSE_CD)
              THEN IL.INV_LINE_DEAL_TAX_AMT
              ELSE IL.INV_LINE_DEAL_NET_AMT
         END TOTAL_TAX
        <!-- 2019/06/05 QC#50731 MOD END -->
        ,IL.INV_LINE_DEAL_NET_AMT + IL.INV_LINE_DEAL_TAX_AMT    TOTAL_AMOUNT
        ,SHIP_DEAL_FRT_AMT + SHIP_DEAL_HDLG_CHRG_AMT            FREIGHT
        
        <isEqual property="taxDtlFlg" compareValue="Y">
        ,DILTD4.DEAL_SLS_TAX_AMT                        FREIGHT_STATE_TAX
        ,DILTD5.DEAL_SLS_TAX_AMT                        FREIGHT_COUNTY_TAX
        ,DILTD6.DEAL_SLS_TAX_AMT                        FREIGHT_CITY_TAX
        
        </isEqual>
        <isNotEqual property="taxDtlFlg" compareValue="Y">
        ,NULL                                           FREIGHT_STATE_TAX
        ,NULL                                           FREIGHT_COUNTY_TAX
        ,NULL                                           FREIGHT_CITY_TAX
        </isNotEqual>
        ,NVL(DILTD4.DEAL_SLS_TAX_AMT, 0) + NVL(DILTD5.DEAL_SLS_TAX_AMT, 0) + NVL(DILTD6.DEAL_SLS_TAX_AMT, 0)  
                                                        FREIGHT_TOTAL_TAX
        ,IB.INV_BOL_LINE_NUM                            INVOICE_BOL_NUM
        <!-- QC#20788 add Start -->
        ,IB.SHIP_TO_CUST_ACCT_CD                        SHIP_TO_CUST_ACCT_CD
        <!-- QC#26919 -->
        <!-- ,IB.SHIP_TO_CUST_ACCT_NM                        SHIP_TO_CUST_ACCT_NM -->
        ,CASE WHEN IB.DROP_SHIP_FLG = 'Y' THEN IB.SHIP_TO_LOC_NM ELSE IB.SHIP_TO_CUST_ACCT_NM END SHIP_TO_CUST_ACCT_NM
        <!-- QC#20788 add End -->
        <!-- QC#20141 add Start -->
        ,I.CR_DR_RSN_SUB_CD                                     CR_DR_RSN_SUB_CD
        <!-- QC#20141 add End -->
        <!-- QC#20141 add Start -->
        ,IL.DS_ORD_POSN_NUM
        <!-- QC#20141 add End -->
        ,I.INV_NUM
    FROM
         INV                    I
        ,TOC                    T
        ,INV_BOL                IB
        ,INV_LINE               IL
        ,INV_LINE               IL_B
        ,MDSE                   M
        ,MDSE                   M_B
        ,DS_INV_LINE_TAX_DTL    DILTD1
        ,DS_INV_LINE_TAX_DTL    DILTD2
        ,DS_INV_LINE_TAX_DTL    DILTD3
        <!-- 2018/06/06 QC#21841-1 Mod Start -->
        <!-- 
        ,DS_INV_LINE_TAX_DTL    DILTD4
        ,DS_INV_LINE_TAX_DTL    DILTD5
        ,DS_INV_LINE_TAX_DTL    DILTD6
         -->
        ,(SELECT 
               INV_NUM
              ,INV_BOL_LINE_NUM
              ,DS_SLS_TAX_TP_CD
              ,SUM(DEAL_SLS_TAX_AMT) DEAL_SLS_TAX_AMT
              ,GLBL_CMPY_CD
              ,EZCANCELFLAG
          FROM DS_INV_LINE_TAX_DTL
          WHERE GLBL_CMPY_CD         = #glblCmpyCd#
          AND   INV_NUM              = #invNum#
          AND   DS_SLS_TAX_TP_CD     = #dsSlsTaxTpCd11#
          AND   EZCANCELFLAG         = '0'
          GROUP BY
               INV_NUM
              ,INV_BOL_LINE_NUM
              ,DS_SLS_TAX_TP_CD
              ,GLBL_CMPY_CD
              ,EZCANCELFLAG
         ) DILTD4
        ,(SELECT 
               INV_NUM
              ,INV_BOL_LINE_NUM
              ,DS_SLS_TAX_TP_CD
              ,SUM(DEAL_SLS_TAX_AMT) DEAL_SLS_TAX_AMT
              ,GLBL_CMPY_CD
              ,EZCANCELFLAG
          FROM DS_INV_LINE_TAX_DTL
          WHERE GLBL_CMPY_CD         = #glblCmpyCd#
          AND   INV_NUM              = #invNum#
          AND   DS_SLS_TAX_TP_CD     = #dsSlsTaxTpCd12#
          AND   EZCANCELFLAG         = '0'
          GROUP BY
               INV_NUM
              ,INV_BOL_LINE_NUM
              ,DS_SLS_TAX_TP_CD
              ,GLBL_CMPY_CD
              ,EZCANCELFLAG
         ) DILTD5
        ,(SELECT 
               INV_NUM
              ,INV_BOL_LINE_NUM
              ,DS_SLS_TAX_TP_CD
              ,SUM(DEAL_SLS_TAX_AMT) DEAL_SLS_TAX_AMT
              ,GLBL_CMPY_CD
              ,EZCANCELFLAG
          FROM DS_INV_LINE_TAX_DTL
          WHERE GLBL_CMPY_CD         = #glblCmpyCd#
          AND   INV_NUM              = #invNum#
          AND   DS_SLS_TAX_TP_CD     = #dsSlsTaxTpCd13#
          AND   EZCANCELFLAG         = '0'
          GROUP BY
               INV_NUM
              ,INV_BOL_LINE_NUM
              ,DS_SLS_TAX_TP_CD
              ,GLBL_CMPY_CD
              ,EZCANCELFLAG
         ) DILTD6
         <!-- 2018/06/06 QC#21841-1 Mod End -->
    WHERE
            I.INV_NUM                   = #invNum#
        AND I.GLBL_CMPY_CD              = #glblCmpyCd#
        AND I.EZCANCELFLAG              = '0'
        AND I.SLS_REP_TOC_CD           = T.TOC_CD (+)
        AND I.GLBL_CMPY_CD             = T.GLBL_CMPY_CD (+)
        AND T.EZCANCELFLAG(+)           = '0'
        AND I.INV_NUM                   = IB.INV_NUM
        AND I.GLBL_CMPY_CD              = IB.GLBL_CMPY_CD
        AND IB.EZCANCELFLAG             = '0'
        AND IB.INV_NUM                  = IL.INV_NUM
        AND IB.INV_BOL_LINE_NUM         = IL.INV_BOL_LINE_NUM
        AND IB.GLBL_CMPY_CD             = IL.GLBL_CMPY_CD
        AND IL.EZCANCELFLAG             = '0'
        AND IL.MDSE_CD                  = M.MDSE_CD
        AND IL.GLBL_CMPY_CD             = M.GLBL_CMPY_CD
        AND M.EZCANCELFLAG              = '0'
        AND IL.INV_NUM                 = IL_B.INV_NUM (+)
        AND IL.DS_ORD_POSN_NUM         = IL_B.DS_ORD_POSN_NUM (+)
        AND IL_B.BASE_CMPT_FLG (+)     = 'Y'
        AND IL_B.DS_CONTR_DTL_PK        IS NULL
        AND IL.GLBL_CMPY_CD            = IL_B.GLBL_CMPY_CD (+)
        AND IL_B.EZCANCELFLAG(+)       = '0'
        AND IL_B.MDSE_CD                = M_B.MDSE_CD (+)
        AND IL_B.GLBL_CMPY_CD           = M_B.GLBL_CMPY_CD (+)
        AND M_B.EZCANCELFLAG(+)         = '0'
        AND IL.INV_NUM                 = DILTD1.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM        = DILTD1.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM            = DILTD1.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM        = DILTD1.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM    = DILTD1.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD1.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd01#
        AND IL.GLBL_CMPY_CD            = DILTD1.GLBL_CMPY_CD(+)
        AND DILTD1.EZCANCELFLAG(+)         = '0'
    
        AND IL.INV_NUM                 = DILTD2.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM        = DILTD2.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM            = DILTD2.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM        = DILTD2.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM    = DILTD2.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD2.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd02#
        AND IL.GLBL_CMPY_CD            = DILTD2.GLBL_CMPY_CD(+)
        AND DILTD2.EZCANCELFLAG(+)         = '0'
        AND IL.INV_NUM                 = DILTD3.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM        = DILTD3.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM            = DILTD3.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM        = DILTD3.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM    = DILTD3.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD3.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd03#
        AND IL.GLBL_CMPY_CD            = DILTD3.GLBL_CMPY_CD(+)
        AND DILTD3.EZCANCELFLAG(+)         = '0'
        AND IB.INV_NUM                  = DILTD4.INV_NUM(+)
        AND IB.INV_BOL_LINE_NUM         = DILTD4.INV_BOL_LINE_NUM(+)
        <!-- 2018/06/06 QC#21841-1 Del Start -->
        <!--
        AND DILTD4.INV_LINE_NUM(+)         = #kome#
        AND DILTD4.INV_LINE_SUB_NUM(+)     = #kome#
        AND DILTD4.INV_TRX_LINE_SUB_NUM(+) = #kome#
        AND DILTD4.DS_SLS_TAX_TP_CD(+)     = #dsSlsTaxTpCd11#
        -->
        <!-- 2018/06/06 QC#21841-1 Del End -->
        AND IB.GLBL_CMPY_CD             = DILTD4.GLBL_CMPY_CD(+)
        AND DILTD4.EZCANCELFLAG(+)         = '0'
        AND IB.INV_NUM                  = DILTD5.INV_NUM(+)
        AND IB.INV_BOL_LINE_NUM         = DILTD5.INV_BOL_LINE_NUM(+)
        <!-- 2018/06/06 QC#21841-1 Del Start -->
        <!--
        AND DILTD5.INV_LINE_NUM(+)         = #kome#
        AND DILTD5.INV_LINE_SUB_NUM(+)     = #kome#
        AND DILTD5.INV_TRX_LINE_SUB_NUM(+) = #kome#
        AND DILTD5.DS_SLS_TAX_TP_CD(+)     = #dsSlsTaxTpCd12#
        -->
        <!-- 2018/06/06 QC#21841-1 Del End -->
        AND IB.GLBL_CMPY_CD             = DILTD5.GLBL_CMPY_CD(+)
        AND DILTD5.EZCANCELFLAG(+)         = '0'
        AND IB.INV_NUM                  = DILTD6.INV_NUM(+)
        AND IB.INV_BOL_LINE_NUM         = DILTD6.INV_BOL_LINE_NUM(+)
        <!-- 2018/06/06 QC#21841-1 Del Start -->
        <!--
        AND DILTD6.INV_LINE_NUM(+)         = #kome#
        AND DILTD6.INV_LINE_SUB_NUM(+)     = #kome#
        AND DILTD6.INV_TRX_LINE_SUB_NUM(+) = #kome#
        AND DILTD6.DS_SLS_TAX_TP_CD(+)     = #dsSlsTaxTpCd13#
        -->
        <!-- 2018/06/06 QC#21841-1 Del End -->
        AND IB.GLBL_CMPY_CD             = DILTD6.GLBL_CMPY_CD(+)
        AND DILTD6.EZCANCELFLAG(+)         = '0'
        <!-- QC#21841 Add Start -->
<!-- START 2018/09/10 T.Ogura [QC#27999,DEL] -->
<!--    AND NVL(IL.INV_LINE_CATG_CD, '00') NOT IN (#invLineCatgCd#) -->
<!-- END   2018/09/10 T.Ogura [QC#27999,DEL] -->
        <!-- QC#21841 Add End -->
    )
    ORDER BY
    <!--2019/01/10 QC#29371 SRNO15 mod Start -->
         SHIP_TO_CODE
        ,PO_NO
        ,CUST_CODES1
        ,CUST_CODES2
        ,CUST_CODES3
        ,CUST_CODES4
        ,CUST_CODES5
        ,CUST_CODES6
        ,ORDER_NO
        ,CHARGE_TYPE
        ,SALES_REP_CODE
        <!-- 2019/08/24 QC#53011 Mod Start  -->
        <!-- ,to_number(DS_ORD_POSN_NUM)
        ,INVOICE_BOL_NUM -->
        ,INVOICE_BOL_NUM
        ,to_number(DS_ORD_POSN_NUM)
        <!-- 2019/08/24 QC#53011 Mod Endnu  -->

        <!--
         PO_NO
        ,ORDER_NO
        ,INV_NUM
        ,to_number(DS_ORD_POSN_NUM)  QC#26826
        ,INVOICE_BOL_NUM             QC#27740
        -->
    <!--2019/01/10 QC#29371 mod End -->
    </statement>
    
    <statement id="getSalsSplyPartDtl" parameterClass="Map" resultClass="Map">
    SELECT
        #sortFlgInv#     BO_FLG
        <!-- QC#25431 Add Start -->
        ,'1'               EFF_LINE_FLG
        <!-- QC#25431 Add End -->
        ,CASE WHEN IL.MDSE_CD = #varCharConst2# AND 
         <isEqual property="isEasyPac1Flg" compareValue="true">
             'Y' = 'Y'
         </isEqual>
         <isNotEqual property="isEasyPac1Flg" compareValue="true">
             'Y' = 'N'
         </isNotEqual>
         THEN
             '1.1'
         ELSE
         <!-- QC#17962 add Start -->
         NVL(
         <!-- QC#17962 add End -->
         CONCAT (IL.ds_ord_posn_num, DECODE(IL.ds_ord_posn_num, NULL, '', '.'))
          || CONCAT (IL.ds_cpo_line_num,
                     DECODE (IL.ds_cpo_line_sub_num, NULL, '', '.'))
          || IL.ds_cpo_line_sub_num
         <!-- 06/05/2018 QC#50707 Mod Start -->
         <!-- QC#17962 add Start -->
          , TO_NUMBER(IL.INV_BOL_LINE_NUM)
             ||  '.'
             || TO_NUMBER(IL.INV_LINE_NUM)
         )
         <!--
          , TO_NUMBER(IL.INV_LINE_NUM)
             || DECODE(IL.SET_MDSE_CD, NULL, '', '.')
             || DECODE(IL.SET_MDSE_CD, NULL, '', TO_NUMBER(IL.INV_LINE_SUB_NUM))
         )
         -->
         <!-- QC#17962 add End -->
         <!-- 06/05/2018 QC#50707 Mod End -->
         END DISPLAY_LINE_NO
        ,IL.DS_ORD_POSN_NUM    <!-- QC#14530 add -->
        ,IL.DS_CPO_LINE_NUM
        ,IL.DS_CPO_LINE_SUB_NUM
        ,NVL(OTM.ORD_TAKE_MDSE_CD, IL.MDSE_CD)                  MDSE_CD
        ,M.MDSE_DESC_SHORT_TXT                                  DESCRIPTION
        <isEqual property="isEasyPac1Flg" compareValue="true">
        <!-- 2017/10/27 QC#20141 UPD START -->
        <!-- ,TO_CHAR(NVL(IL.SPLY_PGM_SHIP_QTY, IL.ORD_QTY), #qtyFormat#)    ORDER_QTY -->
        <!-- ,TO_CHAR(NVL(IL.SPLY_PGM_SHIP_QTY, IL.SHIP_QTY), #qtyFormat#)   SHIP_QTY -->
        ,TO_CHAR(CASE WHEN IL.ORD_QTY = 0 THEN NULL ELSE IL.ORD_QTY END, #qtyFormat#)                           ORDER_QTY
        ,TO_CHAR(IL.SHIP_QTY, #qtyFormat#)                          SHIP_QTY
        ,TO_CHAR(IL.SPLY_PGM_SHIP_QTY, #qtyFormat#)                 TOTAL_SQ_FEET
        <!-- 2017/10/27 QC#20141 UPD END -->
            <isEqual property="invPrintStyleCd" compareValue="01">
            , NULL                                                  PRICE_AMOUNT_TXT
            , NULL                                                  LINE_TOTAL_AMOUNT_TXT
            , NULL                                                  PRICE_AMOUNT
            , NULL                                                  LINE_TOTAL_AMOUNT
            </isEqual>
            <isEqual property="invPrintStyleCd" compareValue="02">
            ,TO_CHAR(IL.SPLY_PGM_UNIT_AMT_RATE, #rateFormat#)      PRICE_AMOUNT_TXT
            <!-- 2019/06/05 QC#50731 MOD START  -->
            <!-- ,TO_CHAR(IL.INV_LINE_DEAL_NET_AMT, #amtFormat#)         LINE_TOTAL_AMOUNT_TXT -->
            ,CASE WHEN TAI.MDSE_CD IS NULL
                  THEN TO_CHAR(IL.INV_LINE_DEAL_NET_AMT, #amtFormat#)
                  ELSE TO_CHAR(IL.INV_LINE_DEAL_TAX_AMT, #amtFormat#)
             END LINE_TOTAL_AMOUNT_TXT
            ,CASE WHEN TAI.MDSE_CD IS NULL
                  THEN IL.SPLY_PGM_UNIT_AMT_RATE 
                  ELSE IL.INV_LINE_DEAL_TAX_AMT
             END PRICE_AMOUNT
            <!-- , IL.SPLY_PGM_UNIT_AMT_RATE                            PRICE_AMOUNT  -->
            <!-- , IL.INV_LINE_DEAL_NET_AMT                              LINE_TOTAL_AMOUNT -->
            ,CASE WHEN TAI.MDSE_CD IS NULL
                  THEN IL.INV_LINE_DEAL_NET_AMT
                  ELSE IL.INV_LINE_DEAL_TAX_AMT
             END LINE_TOTAL_AMOUNT
            <!-- 2019/06/05 QC#50731 MOD END -->
            </isEqual>
            <isEqual property="invPrintStyleCd" compareValue="03">
            , NULL                                                  PRICE_AMOUNT_TXT
            , NULL                                                  LINE_TOTAL_AMOUNT_TXT
            , NULL                                                  PRICE_AMOUNT
            , NULL                                                  LINE_TOTAL_AMOUNT
            </isEqual>
        </isEqual>

        <isNotEqual property="isEasyPac1Flg" compareValue="true"> 
        ,TO_CHAR(NVL(IL.INV_DPLY_QTY, CASE WHEN IL.ORD_QTY = 0 THEN NULL ELSE IL.ORD_QTY END), #qtyFormat#)    ORDER_QTY
        ,TO_CHAR(NVL(IL.INV_DPLY_QTY, IL.SHIP_QTY), #qtyFormat#)   SHIP_QTY
        ,NULL                                                      TOTAL_SQ_FEET
            <isEqual property="invPrintStyleCd" compareValue="01">
            , NULL                                                  PRICE_AMOUNT_TXT
            , NULL                                                  LINE_TOTAL_AMOUNT_TXT
            , NULL                                                  PRICE_AMOUNT
            , NULL                                                  LINE_TOTAL_AMOUNT
            </isEqual>
            <isEqual property="invPrintStyleCd" compareValue="02">
            ,TO_CHAR(IL.DEAL_NET_UNIT_PRC_AMT, #amtFormat#)         PRICE_AMOUNT_TXT
            <!-- 2019/06/05 QC#50731 MOD START -->
            <!--  ,TO_CHAR(IL.INV_LINE_DEAL_NET_AMT, #amtFormat#)         LINE_TOTAL_AMOUNT_TXT -->
            ,CASE WHEN TAI.MDSE_CD IS NULL
                  THEN TO_CHAR(IL.INV_LINE_DEAL_NET_AMT, #amtFormat#)
                  ELSE TO_CHAR(IL.INV_LINE_DEAL_TAX_AMT, #amtFormat#)
             END LINE_TOTAL_AMOUNT_TXT
            <!-- , IL.DEAL_NET_UNIT_PRC_AMT                              PRICE_AMOUNT -->
            ,CASE WHEN TAI.MDSE_CD IS NULL
                  THEN IL.DEAL_NET_UNIT_PRC_AMT
                  ELSE IL.INV_LINE_DEAL_TAX_AMT
             END PRICE_AMOUNT
            <!-- , IL.INV_LINE_DEAL_NET_AMT                              LINE_TOTAL_AMOUNT  -->
            ,CASE WHEN TAI.MDSE_CD IS NULL
                  THEN IL.INV_LINE_DEAL_NET_AMT
                  ELSE IL.INV_LINE_DEAL_TAX_AMT
             END LINE_TOTAL_AMOUNT
            <!-- 2019/06/05 QC#50731 MOD END -->
            </isEqual>
            <isEqual property="invPrintStyleCd" compareValue="03">
            , NULL                                                  PRICE_AMOUNT_TXT
            , NULL                                                  LINE_TOTAL_AMOUNT_TXT
            <!-- 2019/08/22 QC#52928 Mod Start -->
            ,CASE WHEN TAI.MDSE_CD IS NULL
                  THEN IL.DEAL_NET_UNIT_PRC_AMT 
                  ELSE IL.INV_LINE_DEAL_TAX_AMT
             END PRICE_AMOUNT
            ,CASE WHEN TAI.MDSE_CD IS NULL
                  THEN IL.INV_LINE_DEAL_NET_AMT
                  ELSE IL.INV_LINE_DEAL_TAX_AMT
             END LINE_TOTAL_AMOUNT
            <!-- , NULL                                                  PRICE_AMOUNT -->
            <!-- , NULL                                                  LINE_TOTAL_AMOUNT -->
            <!-- 2019/08/22 QC#52928 Mod End -->
            </isEqual>
        </isNotEqual>
        ,IL.CSMP_CONTR_NUM                                      CSMP_NO
        ,IB.PRO_NUM                                             TRACKING_NO
        ,M.COA_MDSE_TP_CD                                       MDSE_TYPE
        ,IL.INV_NUM                                             INV_NUM
        ,IL.INV_BOL_LINE_NUM                                    INV_BOL_LINE_NUM
        ,IL.INV_LINE_NUM                                        INV_LINE_NUM
        ,IL.INV_LINE_SUB_NUM                                    INV_LINE_SUB_NUM
        ,IL.INV_LINE_SUB_TRX_NUM                                INV_LINE_SUB_TRX_NUM
        ,M_B.MDSE_CD                                            BASE_MDSE
        ,M.MDSE_CD                                              ORDER_MDSE
        ,IL.ORIG_OR_CUST_MDSE_CD                                CUSTOMER_MDSE_CODE
        ,OTM.ORD_TAKE_MDSE_CD                                   ORDER_TAKE_MDSE
        ,(SELECT COUNT(INV_NUM) 
            FROM INV_LINE 
           WHERE GLBL_CMPY_CD       = #glblCmpyCd#
             AND INV_NUM            = IL.INV_NUM 
             AND DS_ORD_POSN_NUM    = IL.DS_ORD_POSN_NUM
             AND EZCANCELFLAG       = '0')                      LINE_COUNT_PER_POSITION_NO
        ,CASE WHEN IL.INV_LINE_SUB_NUM = '000' THEN 
         (SELECT NVL(MAX(IL_S.BASE_CMPT_FLG), 'N') FROM INV_LINE IL_S WHERE
         IL_S.GLBL_CMPY_CD = #glblCmpyCd# AND IL_S.EZCANCELFLAG = '0' AND IL_S.INV_NUM = IL.INV_NUM 
         AND IL_S.INV_BOL_LINE_NUM = IL.INV_BOL_LINE_NUM AND IL_S.INV_LINE_NUM = IL.INV_LINE_NUM
         AND IL_S.BASE_CMPT_FLG = 'Y') ELSE IL.BASE_CMPT_FLG END BASE_CMPT_FLG
        ,IL_B.BASE_CMPT_FLG                                     B_BASE_CMPT_FLG
        ,''                                                     REV_RECOG_METH_CD 
        <!-- QC#14292 add Start -->
        ,IL.DS_CONTR_DTL_PK                                     DS_CONTR_DTL_PK
        <!-- QC#14292 add End -->
        <!-- QC#20141 add Start -->
        ,I.CR_DR_RSN_SUB_CD                                     CR_DR_RSN_SUB_CD
        ,M.EASY_PACK_TP_CD                                      EASY_PACK_TP_CD
        <!-- QC#20141 add End -->
         ,TO_CHAR(
         (select 
         SUM(line_sum.DEAL_NET_UNIT_PRC_AMT)
         from inv_line line_sum 
         where 
         line_sum.GLBL_CMPY_CD = IL.GLBL_CMPY_CD
         AND line_sum.EZCANCELFLAG = IL.EZCANCELFLAG
         AND line_sum.INV_NUM = IL.INV_NUM 
         AND line_sum.DS_ORD_POSN_NUM = IL.DS_ORD_POSN_NUM)
         , #amtFormat#)         CONFIG_SUM_PRICE_AMOUNT_TXT
         ,TO_CHAR(
         (select 
         SUM(line_sum.INV_LINE_DEAL_NET_AMT)
         from inv_line line_sum 
         where 
         line_sum.GLBL_CMPY_CD = IL.GLBL_CMPY_CD
         AND line_sum.EZCANCELFLAG = IL.EZCANCELFLAG
         AND line_sum.INV_NUM = IL.INV_NUM 
         AND line_sum.DS_ORD_POSN_NUM = IL.DS_ORD_POSN_NUM)
         , #amtFormat#)         CONFSUM_LINE_TOTAL_AMOUNT_TXT
         ,          (select 
         SUM(line_sum.DEAL_NET_UNIT_PRC_AMT)
         from inv_line line_sum 
         where 
         line_sum.GLBL_CMPY_CD = IL.GLBL_CMPY_CD
         AND line_sum.EZCANCELFLAG = IL.EZCANCELFLAG
         AND line_sum.INV_NUM = IL.INV_NUM 
         AND line_sum.DS_ORD_POSN_NUM = IL.DS_ORD_POSN_NUM)          CONFIG_SUM_PRICE_AMOUNT
         ,(select 
         SUM(line_sum.INV_LINE_DEAL_NET_AMT)
         from inv_line line_sum 
         where 
         line_sum.GLBL_CMPY_CD = IL.GLBL_CMPY_CD
         AND line_sum.EZCANCELFLAG = IL.EZCANCELFLAG
         AND line_sum.INV_NUM = IL.INV_NUM 
         AND line_sum.DS_ORD_POSN_NUM = IL.DS_ORD_POSN_NUM)          CONFIG_SUM_LINE_TOTAL_AMOUNT
         <!-- QC#26826 -->
         <!-- 06/05/2018 QC#50707 Mod Start -->
         ,CASE WHEN (IL.DS_ORD_POSN_NUM IS NULL) AND (IL.DS_CPO_LINE_NUM IS NULL) AND (IL.DS_CPO_LINE_SUB_NUM IS NULL) THEN
             TO_NUMBER(IL.INV_BOL_LINE_NUM) 
         ELSE
             TO_NUMBER(IL.DS_ORD_POSN_NUM) 
         END N_DS_ORD_POSN_NUM
         ,CASE WHEN (IL.DS_ORD_POSN_NUM IS NULL) AND (IL.DS_CPO_LINE_NUM IS NULL) AND (IL.DS_CPO_LINE_SUB_NUM IS NULL) THEN
             TO_NUMBER(IL.INV_LINE_NUM)
         ELSE
             TO_NUMBER(IL.DS_CPO_LINE_NUM)
         END N_DS_CPO_LINE_NUM
         ,CASE WHEN (IL.DS_ORD_POSN_NUM IS NULL) AND (IL.DS_CPO_LINE_NUM IS NULL) AND (IL.DS_CPO_LINE_SUB_NUM IS NULL) THEN
             TO_NUMBER(IL.INV_LINE_SUB_NUM)
         ELSE
              TO_NUMBER(IL.DS_CPO_LINE_SUB_NUM)
         END N_DS_CPO_LINE_SUB_NUM
         <!--
         ,to_number(IL.DS_ORD_POSN_NUM) N_DS_ORD_POSN_NUM
         ,to_number(IL.DS_CPO_LINE_NUM) N_DS_CPO_LINE_NUM
         ,to_number(IL.DS_CPO_LINE_SUB_NUM) N_DS_CPO_LINE_SUB_NUM
         -->
         <!-- 06/05/2018 QC#50707 Mod End -->
<!-- START 2018/09/10 T.Ogura [QC#27999,ADD] -->
         ,IL.INV_LINE_CATG_CD                                        INV_LINE_CATG_CD
<!-- END   2018/09/10 T.Ogura [QC#27999,ADD] -->

         <!-- 2019/08/22 QC#52928 Add Start -->
         ,CASE WHEN EXISTS(
         SELECT
           1
         FROM
           INV_LINE IL_S 
         WHERE
           IL_S.GLBL_CMPY_CD = #glblCmpyCd# 
           AND IL_S.EZCANCELFLAG = '0' 
           AND IL_S.INV_NUM = IL.INV_NUM 
           AND IL_S.DS_ORD_POSN_NUM = IL.DS_ORD_POSN_NUM
           AND IL_S.BASE_CMPT_FLG = 'Y') THEN
           'Y'
         ELSE
           'N'
         END IS_EXISTS_BASE_CMPT
         <!-- 2019/08/22 QC#52928 Add End -->
         <!-- START 2023/11/30 R.Takau  [QC#61584,ADD] -->
         ,IL.INV_LINE_DEAL_TAX_AMT    TAX_AMT
         ,IB.SHIP_TO_ST_CD            SHIP_TO_ST_CD
         ,IH.INV_PRINT_CATG_CD        INV_PRINT_CATG_CD
         <!-- END 2023/11/30 R.Takau  [QC#61584,ADD] -->
    FROM
         INV                I
        ,INV_BOL            IB
        ,INV_LINE           IL
        ,INV_LINE           IL_B
        ,MDSE               M
        ,MDSE               M_B
        ,ORD_TAKE_MDSE      OTM
        <!-- 2019/02/01 QC#29371 SRNO.11 Add Start-->
        ,LINE_BIZ_TP LOB
        ,MDSE_TP_VAL_SET MTVS
        <!-- 2019/02/01 QC#29371 SRNO.11 Add End-->
        <!-- 2019/06/05 QC#50731 ADD START -->
        ,TAX_ADJ_ITEM       TAI
        <!-- 2019/06/05 QC#50731 ADD END -->
        <!-- START 2023/12/15 R.Takau  [QC#61584,ADD] -->
        ,INV_PRT_HDR        IH
        <!-- START 2023/12/15 R.Takau  [QC#61584,ADD] -->
    WHERE
    
            I.GLBL_CMPY_CD              = #glblCmpyCd#  
        AND I.INV_NUM                   = #invNum#
            <isNotNull property="OrdNo" >
        AND I.CPO_ORD_NUM               = #OrdNo#
            </isNotNull>
            <isNotNull property="poNo" >
        <!-- 2019/04/04 QC#30756 Mod Start -->
        <!-- AND NVL(I.LEASE_CMPY_PO_NUM, I.CUST_ISS_PO_NUM)    = #poNo# -->
        AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, I.CUST_ISS_PO_NUM))    = UPPER(#poNo#)
        <!-- 2019/04/04 QC#30756 Mod End -->
            </isNotNull>
            <isNull>
        AND NVL(I.LEASE_CMPY_PO_NUM, I.CUST_ISS_PO_NUM)    IS NULL
            </isNull>
            <isNotNull property="dsOrdPosnNumList" >
        <!--2019/01/18 QC#29371 SRNO15 mod Start -->
        <!-- 
        AND IL.DS_ORD_POSN_NUM    = #posnNum#
        -->
        AND IL.DS_ORD_POSN_NUM    IN
            <iterate property="dsOrdPosnNumList" var="dsOrdPosnNum[]" open="(" close=" )" conjunction=",">
                #dsOrdPosnNum[]#
            </iterate>
        <!--2019/01/18 QC#29371 SRNO15 mod End -->
            </isNotNull>
            <isNull>
        AND IL.DS_ORD_POSN_NUM    IS NULL
            </isNull>
<!--  
        AND I.SLS_REP_TOC_CD           = #slsRepTocCd#
-->
        AND I.GLBL_CMPY_CD              = IB.GLBL_CMPY_CD
        AND I.INV_NUM                   = IB.INV_NUM
<!--  
        <isNotNull property="shipToCust" >
        AND IB.SHIP_TO_CUST_CD          = #shipToCust#
        </isNotNull>
        <isNull property="shipToCust" >
        AND IB.SHIP_TO_CUST_CD IS NULL
        </isNull>
-->
        AND IB.GLBL_CMPY_CD             = IL.GLBL_CMPY_CD
        AND IB.INV_NUM                  = IL.INV_NUM
        AND IB.INV_BOL_LINE_NUM         = IL.INV_BOL_LINE_NUM
<!--  
        <isNotNull property="custCodes1" >
        AND IL.FIRST_BLLG_ATTRB_VAL_TXT    = #custCodes1#
        </isNotNull>
        <isNull property="custCodes1" >
        AND IL.FIRST_BLLG_ATTRB_VAL_TXT  IS NULL
        </isNull>        
        <isNotNull property="custCodes2">
        AND IL.SCD_BLLG_ATTRB_VAL_TXT    = #custCodes2#
        </isNotNull>
        <isNull property="custCodes2" >
        AND IL.SCD_BLLG_ATTRB_VAL_TXT  IS NULL
        </isNull>        
        <isNotNull property="custCodes3" >
        AND IL.THIRD_BLLG_ATTRB_VAL_TXT    = #custCodes3#
        </isNotNull>
        <isNull property="custCodes3" >
        AND IL.THIRD_BLLG_ATTRB_VAL_TXT  IS NULL
        </isNull>        
        <isNotNull property="custCodes4" >
        AND IL.FRTH_BLLG_ATTRB_VAL_TXT    = #custCodes4#
        </isNotNull>
        <isNull property="custCodes4" >
        AND IL.FRTH_BLLG_ATTRB_VAL_TXT  IS NULL
        </isNull>        
        <isNotNull property="custCodes5" >
        AND IL.FIFTH_BLLG_ATTRB_VAL_TXT    = #custCodes5#
        </isNotNull>
        <isNull property="custCodes5" >
        AND IL.FIFTH_BLLG_ATTRB_VAL_TXT  IS NULL
        </isNull>        
        <isNotNull property="custCodes6" >
        AND IL.SIXTH_BLLG_ATTRB_VAL_TXT    = #custCodes6#
        </isNotNull>
        <isNull property="custCodes6" >
        AND IL.SIXTH_BLLG_ATTRB_VAL_TXT  IS NULL
        </isNull>
-->
        <!-- QC#13096 add Start -->
        AND (CASE
                WHEN IL.INV_LINE_DEAL_NET_AMT = 0
                 AND IL.INV_LINE_DEAL_TAX_AMT = 0 <!-- QC#54143 2019/10/31 Add -->
                 AND EXISTS (
                        SELECT
                            'X'
                        FROM
                            ORD_LINE_VAL_SET    OLVS
                        WHERE
                                OLVS.GLBL_CMPY_CD           = IL.GLBL_CMPY_CD
                            AND OLVS.DS_ORD_LINE_CATG_CD    = IL.DS_ORD_LINE_CATG_CD
                            AND OLVS.ORD_LINE_CTX_TP_CD     = #zdInvPrtExcl#
                            AND OLVS.EZCANCELFLAG           = '0'
                    )
                THEN 'X'
                ELSE NULL
                END
            )  IS NULL
        <!-- QC#13096 add End -->
        <!-- 2018/05/25 QC#21841 Add Start -->
        AND (IL.INV_LINE_CATG_CD IS NULL
<!-- START 2018/09/10 T.Ogura [QC#27999,MOD] -->
<!--        OR IL.INV_LINE_CATG_CD  NOT IN (#invLineCatgChg#, #invLineCatgFrt#)) -->
            OR IL.INV_LINE_CATG_CD  NOT IN (#invLineCatgChg#))
<!-- END   2018/09/10 T.Ogura [QC#27999,MOD] -->
        <!-- 2018/05/25 QC#21841 Add End -->
        AND IL.GLBL_CMPY_CD             = M.GLBL_CMPY_CD
        AND IL.MDSE_CD                  = M.MDSE_CD
        AND IL.GLBL_CMPY_CD            = IL_B.GLBL_CMPY_CD (+)
        AND IL.INV_NUM                 = IL_B.INV_NUM (+)
        AND IL.DS_ORD_POSN_NUM         = IL_B.DS_ORD_POSN_NUM (+)
        AND IL_B.BASE_CMPT_FLG (+)     = 'Y'
        AND IL_B.DS_CONTR_DTL_PK IS NULL
        AND IL_B.GLBL_CMPY_CD           = M_B.GLBL_CMPY_CD (+)
        AND IL_B.MDSE_CD                = M_B.MDSE_CD (+)
        AND IL.GLBL_CMPY_CD             = OTM.GLBL_CMPY_CD (+)
        AND SUBSTR(IL.MDSE_CD, 1, 8)    = OTM.ORD_TAKE_MDSE_CD (+)
<!--  
        AND CASE WHEN 
        <isEqual property="isSupplyOrderFlg" compareValue="true">
            'Y' = 'Y'
        </isEqual>
        <isNotEqual property="isSupplyOrderFlg" compareValue="true">
            'Y' = 'N'
        </isNotEqual>
            THEN
            CASE WHEN M_B.MDSE_CD IS NOT NULL THEN
                CASE WHEN M_B.COA_PROD_CD LIKE #prodCd# THEN
                    #ordCatgNmSply# || #nonCopier#
                WHEN M_B.COA_MDSE_TP_CD = #coaMdseTpCd# THEN
                    #ordCatgNmSply# || #nonCopier#
                ELSE
                    #ordCatgNmSply# || #copier#
                END
            ELSE
                CASE WHEN M.COA_PROD_CD LIKE #prodCd# THEN
                    #ordCatgNmSply# || #nonCopier#
                WHEN M.COA_MDSE_TP_CD = #coaMdseTpCd# THEN
                    #ordCatgNmSply# || #nonCopier#
                ELSE
                    #ordCatgNmSply# || #copier#
                END
            END
        ELSE
            CASE WHEN M_B.MDSE_CD IS NOT NULL THEN
                CASE WHEN M_B.COA_PROD_CD LIKE #prodCd# THEN
                    #ordCatgNmSale# || #nonCopier#
                WHEN M_B.COA_MDSE_TP_CD = #coaMdseTpCd# THEN
                    #ordCatgNmSale# || #nonCopier#
                ELSE
                    #ordCatgNmSale# || #copier#
                END
            ELSE
                CASE WHEN M.COA_PROD_CD LIKE #prodCd# THEN
                    #ordCatgNmSale# || #nonCopier#
                WHEN M.COA_MDSE_TP_CD = #coaMdseTpCd# THEN
                    #ordCatgNmSale# || #nonCopier#
                ELSE
                    #ordCatgNmSale# || #copier#
                END
            END
        END = #invChrgTpNm#
-->
        AND I.EZCANCELFLAG              = '0'
        AND IB.EZCANCELFLAG             = '0'
        AND IL.EZCANCELFLAG             = '0'
        AND IL_B.EZCANCELFLAG(+)        = '0'
        AND M.EZCANCELFLAG              = '0'
        AND M_B.EZCANCELFLAG(+)         = '0'
        AND OTM.EZCANCELFLAG(+)         = '0'
        <!-- 2019/02/01 QC#29371 SRNO.11 Add Start-->
        AND I.GLBL_CMPY_CD = LOB.GLBL_CMPY_CD
        AND I.EZCANCELFLAG = LOB.EZCANCELFLAG
        AND I.LINE_BIZ_TP_CD = LOB.LINE_BIZ_TP_CD
        AND M.GLBL_CMPY_CD = MTVS.GLBL_CMPY_CD(+)
        AND M.COA_MDSE_TP_CD = MTVS.COA_MDSE_TP_CD(+)
        AND M.EZCANCELFLAG = MTVS.EZCANCELFLAG(+)
        AND MTVS.MDSE_TP_CTX_TP_CD(+) = #invPrtPrmoItems#
        AND (CASE LOB.PRMO_ITEM_PRINT_FLG WHEN 'N' THEN
               CASE WHEN MTVS.COA_MDSE_TP_CD IS NOT NULL THEN 0 ELSE 1 END
               ELSE 1 
             END) = 1
        <!-- 2019/02/01 QC#29371 SRNO.11 Add End-->
<!-- 2018/05/25 QC#21841 Del Start -->
<!--        ORDER BY
             BO_FLG -->
<!-- QC#14530 mod Start -->
<!--        ,DISPLAY_LINE_NO
            ,DS_ORD_POSN_NUM
            ,DS_CPO_LINE_NUM
            ,DS_CPO_LINE_SUB_NUM    NULLS FIRST -->
<!-- QC#14530 mod End -->
<!-- QC#17962 add Start -->
<!--        ,INV_LINE_NUM
            ,INV_LINE_SUB_NUM -->
<!-- QC#17962 add End -->
<!-- 2018/05/25 QC#21841 Del End -->
<!-- 2018/05/25 QC#21841 Add Start -->
        <!-- 2019/06/05 QC#50731 ADD START  -->
        AND IL.GLBL_CMPY_CD = TAI.GLBL_CMPY_CD(+)
        AND IL.EZCANCELFLAG = TAI.EZCANCELFLAG(+)
        AND IL.MDSE_CD = TAI.MDSE_CD(+)
        <!-- 2019/06/05 QC#50731 ADD END -->
        <!-- START 2023/12/15 R.Takau [ADD,QC#61584] -->
        AND I.GLBL_CMPY_CD = IH.GLBL_CMPY_CD
        AND I.EZCANCELFLAG = IH.EZCANCELFLAG
        AND I.INV_NUM = IH.INV_BILL_NUM
        <!-- END 2023/12/15 R.Takau [ADD,QC#61584] -->
    UNION
    SELECT
         #sortFlgInv#                                            BO_FLG
        ,'1'                                                     EFF_LINE_FLG
        ,NULL                                                    DISPLAY_LINE_NO
        ,FRT.DS_ORD_POSN_NUM                                     DS_ORD_POSN_NUM
        ,MAX(FRT.DS_CPO_LINE_NUM)                                DS_CPO_LINE_NUM
        ,NULL                                                    DS_CPO_LINE_SUB_NUM
        ,FRT.MDSE_CD                                             MDSE_CD
        ,FRT.DESCRIPTION                                         DESCRIPTION
<!--        ,TO_CHAR(1)                                              ORDER_QTY-->
        ,TO_CHAR(NVL(SUM(FRT.INV_DPLY_QTY), CASE WHEN SUM(FRT.ORD_QTY) = 0 THEN NULL ELSE 1 END))
                                                                 ORDER_QTY
        ,TO_CHAR(1)                                              SHIP_QTY
        ,NULL                                                    TOTAL_SQ_FEET
        ,TO_CHAR(SUM(FRT.PRICE_AMOUNT_TXT), #amtFormat#)         PRICE_AMOUNT_TXT
        ,TO_CHAR(SUM(FRT.LINE_TOTAL_AMOUNT_TXT), #amtFormat#)    LINE_TOTAL_AMOUNT_TXT
        ,SUM(FRT.PRICE_AMOUNT)                                   PRICE_AMOUNT
        ,SUM(FRT.LINE_TOTAL_AMOUNT)                              LINE_TOTAL_AMOUNT
        ,NULL                                                    CSMP_NO
        ,NULL                                                    TRACKING_NO
        ,FRT.MDSE_TYPE                                           MDSE_TYPE
        ,FRT.INV_NUM                                             INV_NUM
        ,MAX(FRT.INV_BOL_LINE_NUM)                               INV_BOL_LINE_NUM
        ,MAX(FRT.INV_LINE_NUM)                                   INV_LINE_NUM
        ,NULL                                                    INV_LINE_SUB_NUM
        ,NULL                                                    INV_LINE_SUB_TRX_NUM
        ,FRT.BASE_MDSE                                           BASE_MDSE
        ,FRT.ORDER_MDSE                                          ORDER_MDSE
        ,FRT.CUSTOMER_MDSE_CODE                                  CUSTOMER_MDSE_CODE
        ,FRT.ORDER_TAKE_MDSE                                     ORDER_TAKE_MDSE
        ,FRT.LINE_COUNT_PER_POSITION_NO                          LINE_COUNT_PER_POSITION_NO
        ,'N'                                                     BASE_CMPT_FLG
        ,FRT.B_BASE_CMPT_FLG                                     B_BASE_CMPT_FLG
        ,''                                                      REV_RECOG_METH_CD 
        ,NULL                                                    DS_CONTR_DTL_PK
        ,FRT.CR_DR_RSN_SUB_CD                                    CR_DR_RSN_SUB_CD
        ,FRT.EASY_PACK_TP_CD                                     EASY_PACK_TP_CD
        ,NULL                                                    CONFIG_SUM_PRICE_AMOUNT_TXT
        ,NULL                                                    CONFSUM_LINE_TOTAL_AMOUNT_TXT
        ,NULL                                                    CONFIG_SUM_PRICE_AMOUNT
        ,NULL                                                    CONFIG_SUM_LINE_TOTAL_AMOUNT
        <!-- QC#26826 -->
        ,FRT.N_DS_ORD_POSN_NUM
        ,MAX(FRT.N_DS_CPO_LINE_NUM)                              N_DS_CPO_LINE_NUM
        ,NULL
<!-- START 2018/09/10 T.Ogura [QC#27999,ADD] -->
        ,#invLineCatgChg#                                        INV_LINE_CATG_CD
<!-- END   2018/09/10 T.Ogura [QC#27999,ADD] -->

         <!-- 2019/08/22 QC#52928 Add Start -->
         ,MAX(FRT.IS_EXISTS_BASE_CMPT) IS_EXISTS_BASE_CMPT
         <!-- 2019/08/22 QC#52928 Add End -->
         <!-- START 2023/11/30 R.Takau  [QC#61584,ADD] -->
         ,FRT.TAX_AMT    TAX_AMT
         ,FRT.SHIP_TO_ST_CD            SHIP_TO_ST_CD
         ,FRT.INV_PRINT_CATG_CD        INV_PRINT_CATG_CD
         <!-- END 2023/11/30 R.Takau  [QC#61584,ADD] -->
       FROM
       (
         SELECT
              IL.DS_ORD_POSN_NUM
             ,IL.DS_CPO_LINE_NUM                                     DS_CPO_LINE_NUM
             ,NVL(OTM.ORD_TAKE_MDSE_CD, IL.MDSE_CD)                  MDSE_CD
             ,M.MDSE_DESC_SHORT_TXT                                  DESCRIPTION
            <isEqual property="invPrintStyleCd" compareValue="01">
             , NULL                                                  PRICE_AMOUNT_TXT
             , NULL                                                  LINE_TOTAL_AMOUNT_TXT
             , NULL                                                  PRICE_AMOUNT
             , NULL                                                  LINE_TOTAL_AMOUNT
            </isEqual>
            <isEqual property="invPrintStyleCd" compareValue="02">
             <!-- 2018/05/31 QC#21841 Mod Start -->
             <!--  ,IL.DEAL_NET_UNIT_PRC_AMT                               PRICE_AMOUNT_TXT -->
             ,IL.INV_LINE_DEAL_NET_AMT                               PRICE_AMOUNT_TXT
             <!-- 2018/05/31 QC#21841 Mod End -->
             <!-- 2019/06/05 QC#50731 MOD START  -->
             <!-- ,IL.INV_LINE_DEAL_NET_AMT                               LINE_TOTAL_AMOUNT_TXT -->
             ,CASE WHEN TAI.MDSE_CD IS NULL
                   THEN IL.INV_LINE_DEAL_NET_AMT
                   ELSE IL.INV_LINE_DEAL_TAX_AMT
              END LINE_TOTAL_AMOUNT_TXT
             <!-- 2018/05/31 QC#21841 Mod Start -->
             <!-- ,IL.DEAL_NET_UNIT_PRC_AMT                               PRICE_AMOUNT -->
             <!-- ,IL.INV_LINE_DEAL_NET_AMT                               PRICE_AMOUNT -->
             ,CASE WHEN TAI.MDSE_CD IS NULL
                   THEN IL.INV_LINE_DEAL_NET_AMT
                   ELSE IL.INV_LINE_DEAL_TAX_AMT
              END PRICE_AMOUNT
             <!-- 2018/05/31 QC#21841 Mod End -->
             <!--, IL.INV_LINE_DEAL_NET_AMT                              LINE_TOTAL_AMOUNT --> 
             ,CASE WHEN TAI.MDSE_CD IS NULL
                   THEN IL.INV_LINE_DEAL_NET_AMT
                   ELSE IL.INV_LINE_DEAL_TAX_AMT
              END LINE_TOTAL_AMOUNT
             <!-- 2019/06/05 QC#50731 MOD END  -->
            </isEqual>
            <isEqual property="invPrintStyleCd" compareValue="03">
             , NULL                                                  PRICE_AMOUNT_TXT
             , NULL                                                  LINE_TOTAL_AMOUNT_TXT
             , NULL                                                  PRICE_AMOUNT
             , NULL                                                  LINE_TOTAL_AMOUNT
            </isEqual>
            ,M.COA_MDSE_TP_CD                                       MDSE_TYPE
            ,IL.INV_NUM                                             INV_NUM
            ,IL.INV_BOL_LINE_NUM                                    INV_BOL_LINE_NUM
            ,IL.INV_LINE_NUM                                        INV_LINE_NUM
            ,M_B.MDSE_CD                                            BASE_MDSE
            ,M.MDSE_CD                                              ORDER_MDSE
            ,IL.ORIG_OR_CUST_MDSE_CD                                CUSTOMER_MDSE_CODE
            ,OTM.ORD_TAKE_MDSE_CD                                   ORDER_TAKE_MDSE
            ,(SELECT COUNT(INV_NUM) 
              FROM INV_LINE 
              WHERE GLBL_CMPY_CD       = #glblCmpyCd#
                  AND INV_NUM            = IL.INV_NUM 
                  AND DS_ORD_POSN_NUM    = IL.DS_ORD_POSN_NUM
                  AND EZCANCELFLAG       = '0')                      LINE_COUNT_PER_POSITION_NO
            ,IL_B.BASE_CMPT_FLG                                    B_BASE_CMPT_FLG
            ,I.CR_DR_RSN_SUB_CD                                     CR_DR_RSN_SUB_CD
            ,M.EASY_PACK_TP_CD                                      EASY_PACK_TP_CD
            ,IL.ORD_QTY                                             ORD_QTY
            ,IL.INV_DPLY_QTY                                        INV_DPLY_QTY
            <!-- 06/05/2018 QC#50707 Mod Start -->
            ,CASE WHEN (IL.DS_ORD_POSN_NUM IS NULL) AND (IL.DS_CPO_LINE_NUM IS NULL) AND (IL.DS_CPO_LINE_SUB_NUM IS NULL) THEN
                TO_NUMBER(IL.INV_BOL_LINE_NUM) 
            ELSE
                TO_NUMBER(IL.DS_ORD_POSN_NUM) 
            END N_DS_ORD_POSN_NUM
            ,CASE WHEN (IL.DS_ORD_POSN_NUM IS NULL) AND (IL.DS_CPO_LINE_NUM IS NULL) AND (IL.DS_CPO_LINE_SUB_NUM IS NULL) THEN
                TO_NUMBER(IL.INV_LINE_NUM)
            ELSE
                TO_NUMBER(IL.DS_CPO_LINE_NUM)
            END N_DS_CPO_LINE_NUM
            ,CASE WHEN (IL.DS_ORD_POSN_NUM IS NULL) AND (IL.DS_CPO_LINE_NUM IS NULL) AND (IL.DS_CPO_LINE_SUB_NUM IS NULL) THEN
                TO_NUMBER(IL.INV_LINE_SUB_NUM)
            ELSE
                 TO_NUMBER(IL.DS_CPO_LINE_SUB_NUM)
            END N_DS_CPO_LINE_SUB_NUM
            <!-- QC#26826 -->
            <!--
            ,to_number(IL.DS_ORD_POSN_NUM) N_DS_ORD_POSN_NUM
            ,to_number(IL.DS_CPO_LINE_NUM) N_DS_CPO_LINE_NUM
            ,to_number(IL.DS_CPO_LINE_SUB_NUM) N_DS_CPO_LINE_SUB_NUM
            -->
            <!-- 06/05/2018 QC#50707 Mod End -->

            <!-- 2019/08/22 QC#52928 Add Start -->
             ,CASE WHEN EXISTS(
             SELECT
               1
             FROM
               INV_LINE IL_S 
             WHERE
               IL_S.GLBL_CMPY_CD = #glblCmpyCd# 
               AND IL_S.EZCANCELFLAG = '0' 
               AND IL_S.INV_NUM = IL.INV_NUM 
               AND IL_S.DS_ORD_POSN_NUM = IL.DS_ORD_POSN_NUM
               AND IL_S.BASE_CMPT_FLG = 'Y') THEN
               'Y'
             ELSE
               'N'
             END IS_EXISTS_BASE_CMPT
             <!-- 2019/08/22 QC#52928 Add End -->
             <!-- START 2023/11/30 R.Takau  [QC#61584,ADD] -->
             ,IL.INV_LINE_DEAL_TAX_AMT    TAX_AMT
             ,IB.SHIP_TO_ST_CD            SHIP_TO_ST_CD
             ,IH.INV_PRINT_CATG_CD        INV_PRINT_CATG_CD
             <!-- END 2023/11/30 R.Takau  [QC#61584,ADD] -->
         FROM
             INV                I
            ,INV_BOL            IB
            ,INV_LINE           IL
            ,INV_LINE           IL_B
            ,MDSE               M
            ,MDSE               M_B
            ,ORD_TAKE_MDSE      OTM
            <!-- 2019/06/05 QC#50731 ADD START  -->
            ,TAX_ADJ_ITEM       TAI
            <!-- 2019/06/05 QC#50731 ADD END  -->
            <!-- START 2023/11/30 R.Takau  [QC#61584,ADD] -->
            ,INV_PRT_HDR        IH
            <!-- END 2023/11/30 R.Takau  [QC#61584,ADD] -->
         WHERE
               I.GLBL_CMPY_CD              = #glblCmpyCd#
           AND I.INV_NUM                   = #invNum#
            <isNotNull property="OrdNo" >
           AND I.CPO_ORD_NUM               = #OrdNo#
            </isNotNull>
            <isNotNull property="poNo" >
            <!-- 2019/04/04 QC#30756 Mod Start -->
           <!-- AND NVL(I.LEASE_CMPY_PO_NUM, I.CUST_ISS_PO_NUM)    = #poNo# -->
           AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, I.CUST_ISS_PO_NUM))    = UPPER(#poNo#)
            <!-- 2019/04/04 QC#30756 Mod End -->
            </isNotNull>
            <isNull>
           AND NVL(I.LEASE_CMPY_PO_NUM, I.CUST_ISS_PO_NUM)    IS NULL
            </isNull>
            <isNotNull property="dsOrdPosnNumList" >
        <!--2019/01/18 QC#29371 SRNO15 mod Start -->
        <!-- 
        AND IL.DS_ORD_POSN_NUM    = #posnNum#
        -->
        AND IL.DS_ORD_POSN_NUM    IN
            <iterate property="dsOrdPosnNumList" var="dsOrdPosnNum[]" open="(" close=" )" conjunction=",">
                #dsOrdPosnNum[]#
            </iterate>
        <!--2019/01/18 QC#29371 SRNO15 mod End -->
            </isNotNull>
            <isNull>
           AND IL.DS_ORD_POSN_NUM    IS NULL
            </isNull>
           AND I.GLBL_CMPY_CD              = IB.GLBL_CMPY_CD
           AND I.INV_NUM                   = IB.INV_NUM
           AND IB.GLBL_CMPY_CD             = IL.GLBL_CMPY_CD
           AND IB.INV_NUM                  = IL.INV_NUM
           AND IB.INV_BOL_LINE_NUM         = IL.INV_BOL_LINE_NUM
           AND (CASE
                   WHEN IL.INV_LINE_DEAL_NET_AMT = 0
                    AND IL.INV_LINE_DEAL_TAX_AMT = 0 <!-- QC#54143 2019/10/31 Add -->
                    AND EXISTS (
                           SELECT
                               'X'
                           FROM
                               ORD_LINE_VAL_SET    OLVS
                           WHERE
                                   OLVS.GLBL_CMPY_CD           = IL.GLBL_CMPY_CD
                               AND OLVS.DS_ORD_LINE_CATG_CD    = IL.DS_ORD_LINE_CATG_CD
                               AND OLVS.ORD_LINE_CTX_TP_CD     = #zdInvPrtExcl#
                               AND OLVS.EZCANCELFLAG           = '0'
                          )
                       THEN 'X'
                       ELSE NULL
                       END
                    )  IS NULL
           <!-- 2018/05/25 QC#21841 Add Start -->
           AND IL.INV_LINE_CATG_CD         = #invLineCatgChg#
           <!-- 2018/05/25 QC#21841 Add End -->
           AND IL.GLBL_CMPY_CD             = M.GLBL_CMPY_CD
           AND IL.MDSE_CD                  = M.MDSE_CD
           AND IL.GLBL_CMPY_CD            = IL_B.GLBL_CMPY_CD (+)
           AND IL.INV_NUM                 = IL_B.INV_NUM (+)
           AND IL.DS_ORD_POSN_NUM         = IL_B.DS_ORD_POSN_NUM (+)
           AND IL_B.BASE_CMPT_FLG (+)     = 'Y'
           AND IL_B.DS_CONTR_DTL_PK IS NULL
           AND IL_B.GLBL_CMPY_CD           = M_B.GLBL_CMPY_CD (+)
           AND IL_B.MDSE_CD                = M_B.MDSE_CD (+)
           AND IL.GLBL_CMPY_CD             = OTM.GLBL_CMPY_CD (+)
           AND SUBSTR(IL.MDSE_CD, 1, 8)    = OTM.ORD_TAKE_MDSE_CD (+)
           AND I.EZCANCELFLAG              = '0'
           AND IB.EZCANCELFLAG             = '0'
           AND IL.EZCANCELFLAG             = '0'
           AND IL_B.EZCANCELFLAG(+)        = '0'
           AND M.EZCANCELFLAG              = '0'
           AND M_B.EZCANCELFLAG(+)         = '0'
           AND OTM.EZCANCELFLAG(+)         = '0'
           <!-- 2019/06/05 QC#50731 ADD START -->
           AND IL.GLBL_CMPY_CD = TAI.GLBL_CMPY_CD(+)
           AND IL.EZCANCELFLAG = TAI.EZCANCELFLAG(+)
           AND IL.MDSE_CD = TAI.MDSE_CD(+)
           <!-- START 2023/12/15 R.Takau [ADD,QC#61584] -->
           AND I.GLBL_CMPY_CD = IH.GLBL_CMPY_CD
           AND I.EZCANCELFLAG = IH.EZCANCELFLAG
           AND I.INV_NUM = IH.INV_BILL_NUM
           <!-- END 2023/12/15 R.Takau [ADD,QC#61584] -->
           )FRT
           <!-- 2019/06/05 QC#50731 ADD END  -->
         GROUP BY
              FRT.DS_ORD_POSN_NUM
             ,FRT.N_DS_ORD_POSN_NUM  <!-- QC#26826 -->
             ,FRT.MDSE_CD
             ,FRT.DESCRIPTION
             ,FRT.MDSE_TYPE
             ,FRT.INV_NUM
             ,FRT.BASE_MDSE
             ,FRT.ORDER_MDSE
             ,FRT.CUSTOMER_MDSE_CODE
             ,FRT.ORDER_TAKE_MDSE
             ,FRT.LINE_COUNT_PER_POSITION_NO
             ,FRT.B_BASE_CMPT_FLG
             ,FRT.CR_DR_RSN_SUB_CD
             ,FRT.EASY_PACK_TP_CD
             <!-- START 2023/11/30 R.Takau  [QC#61584,ADD] -->
             ,FRT.TAX_AMT
             ,FRT.SHIP_TO_ST_CD
             ,FRT.INV_PRINT_CATG_CD
             <!-- END 2023/11/30 R.Takau  [QC#61584,ADD] -->
          ORDER BY
              BO_FLG
              <!-- QC#26826 -->
             ,N_DS_ORD_POSN_NUM
             ,N_DS_CPO_LINE_NUM
             ,N_DS_CPO_LINE_SUB_NUM    NULLS FIRST
             ,INV_LINE_NUM
             ,INV_LINE_SUB_NUM
<!-- 2018/05/25 QC#21841 Add End -->
    </statement>

    <statement id="getPartsLaborSubTotal" parameterClass="Map" resultClass="Map">
    WITH A AS (
    SELECT
        <!-- QC#54877 2019/11/28 Mod Start-->
        <!-- SI.SHIP_TO_CUST_CD                 SHIP_TO_CODE  --> 
         IB.SHIP_TO_CUST_CD                 SHIP_TO_CODE
        <!-- QC#54877 2019/11/28 Mod End-->
        ,STC.LOC_NM                    SHIP_TO_NAME
        ,STC.FIRST_LINE_ADDR           SHIP_TO_FST_ADDRESS
        ,(STC.SCD_LINE_ADDR
            || STC.THIRD_LINE_ADDR 
            || STC.FRTH_LINE_ADDR)     SHIP_TO_SCD_ADDRESS
        ,STC.CTY_ADDR                  SHIP_TO_CITY
        ,STC.ST_CD                     SHIP_TO_ST
        ,STC.POST_CD                   SHIP_TO_POST

        <!-- 2020/03/18 QC#56281 Mod Start -->
        <!-- ,NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))  PO_NO -->
        <!-- START 2022/02/21 [QC#59724, MOD] -->
        <!-- ,NVL(I.LEASE_CMPY_PO_NUM, NVL(IL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))  PO_NO -->
        ,CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
        THEN I.CUST_ISS_PO_NUM
        ELSE NVL(I.LEASE_CMPY_PO_NUM, NVL(IL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))
        END AS PO_NO
        <!-- END   2022/02/21 [QC#59724, MOD] -->
        <!-- 2020/03/18 QC#56281 Mod End -->
        ,IL.FIRST_BLLG_ATTRB_VAL_TXT               CUST_CODES1
        ,IL.SCD_BLLG_ATTRB_VAL_TXT                 CUST_CODES2
        ,IL.THIRD_BLLG_ATTRB_VAL_TXT               CUST_CODES3
        ,IL.FRTH_BLLG_ATTRB_VAL_TXT                CUST_CODES4
        ,IL.FIFTH_BLLG_ATTRB_VAL_TXT               CUST_CODES5
        ,IL.SIXTH_BLLG_ATTRB_VAL_TXT               CUST_CODES6
        <!-- START 2018/08/08 M.Naito [QC#13309,MOD] -->
        <!-- ,SI.FSR_NUM                                 ORDER_NO -->
        ,NVL(SI.TEMP_ETTL_NUM, SI.FSR_NUM)         ORDER_NO
        <!-- END 2018/08/08 M.Naito [QC#13309,MOD] -->
        , CASE
                WHEN M_H.COA_PROD_CD LIKE #prodCd# THEN #invChrgTpPN#
                WHEN M_H.COA_MDSE_TP_CD = #coaMdseTpCd# THEN #invChrgTpPN#
                ELSE #invChrgTpPC#
           END                                  CHARGE_TYPE
        ,SI.FSR_NUM                             FSR_NO
        ,SI.TECH_CD                             TECH_CD
        ,TM.TECH_NM                             TECH_NM
        ,SI.SER_NUM                             SERIAL_NO
        <!-- 2017/02/27 QC#16575 ADD START -->
        ,SI.MDSE_CD                             MDSE_CD
        <!-- 2017/02/27 QC#16575 ADD E N D -->
        ,SI.MDL_NM                              MODEL
        
        <isEqual property="dtlDplyFlg" compareValue="N"> 
        ,IL.INV_LINE_DEAL_NET_AMT           CHARGE_TXT
        </isEqual>  
        <isNotEqual property="dtlDplyFlg" compareValue="N"> 
        , '0'                                CHARGE_TXT
        </isNotEqual>

        <isEqual property="taxDtlFlg" compareValue="Y">
        ,NVL(DILTD1.DEAL_SLS_TAX_AMT,0)            STATE_TAX_TXT
        ,NVL(DILTD2.DEAL_SLS_TAX_AMT,0)            COUNTY_TAX_TXT
        ,NVL(DILTD3.DEAL_SLS_TAX_AMT,0)            CITY_TAX_TXT
        </isEqual>
        <isNotEqual property="taxDtlFlg" compareValue="Y">
        ,'0'                                   STATE_TAX_TXT
        ,'0'                                   COUNTY_TAX_TXT
        ,'0'                                   CITY_TAX_TXT
        </isNotEqual>

        ,NVL(IL.INV_LINE_DEAL_TAX_AMT, 0)                           TOTAL_TAX_TXT
        ,NVL(IL.INV_LINE_DEAL_TAX_AMT, 0) + NVL(IL.INV_LINE_DEAL_NET_AMT, 0)        TOTAL_AMOUNT_TXT
        ,CCY.CCY_SGN_TXT
        <!-- QC#20788 add Start -->
        ,IB.SHIP_TO_CUST_ACCT_CD                SHIP_TO_CUST_ACCT_CD
        <!-- QC#26919 -->
        <!--,IB.SHIP_TO_CUST_ACCT_NM                SHIP_TO_CUST_ACCT_NM-->
        ,CASE WHEN IB.DROP_SHIP_FLG = 'Y' THEN IB.SHIP_TO_LOC_NM ELSE IB.SHIP_TO_CUST_ACCT_NM END SHIP_TO_CUST_ACCT_NM
        <!-- QC#20788 add End -->
        
    FROM
        <!-- 2018/08/21 QC#27684 Mod Start -->
        <!-- INV                    I -->
        (
             SELECT
                   INV_NUM,
                   CASE SYS_SRC_CD
                      WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                      ELSE INV_NUM
                   END  AS SVC_INV_NUM,
                   GLBL_CMPY_CD,
                   EZCANCELFLAG,
                   DEAL_CCY_CD,
                   LEASE_CMPY_PO_NUM
                   <!-- START 2022/02/21 [QC#59724, ADD] -->
                   ,CUST_ISS_PO_NUM
                   <!-- END   2022/02/21 [QC#59724, ADD] -->
             FROM
                   INV
             WHERE
                   INV_NUM = #invNum#
               AND GLBL_CMPY_CD              = #glblCmpyCd#
               AND EZCANCELFLAG              = '0'
        ) I
        <!-- 2018/08/21 QC#27684 Mod End -->
        ,SVC_INV                SI
        ,INV_LINE               IL
        <!--,SVC_INV_LINE           SIL--><!-- 2020/03/18 QC#56281 Del -->
        ,TECH_MSTR              TM
        ,DS_INV_LINE_TAX_DTL    DILTD1
        ,DS_INV_LINE_TAX_DTL    DILTD2
        ,DS_INV_LINE_TAX_DTL    DILTD3
        ,ALL_MDSE_V             M_H
        <!-- QC#54137 2019/11/04 Del    -->
        <!-- ,FSR                    F  -->
        ,SHIP_TO_CUST           STC
        ,CCY                    CCY
        <!-- QC#20788 add Start -->
        ,INV_BOL                IB
        <!-- QC#20788 add End -->
    
    WHERE
        <!-- 2018/08/21 QC#27684 Mod Start -->
        <!--
            I.INV_NUM                   = #invNum#
        AND I.GLBL_CMPY_CD              = #glblCmpyCd#
        AND I.EZCANCELFLAG              = '0'
        AND ((      I.SYS_SRC_CD        &lt;&gt; #sysSrcCdNFC#    
                AND I.INV_NUM           = SI.SVC_INV_NUM )
            OR  (   I.SYS_SRC_CD        = #sysSrcCdNFC# 
                AND I.ORIG_INV_NUM      = SI.SVC_INV_NUM )
            )
        -->
            I.SVC_INV_NUM               = SI.SVC_INV_NUM
        <!-- 2018/08/21 QC#27684 Mod End -->
        AND SI.SVC_INV_SRC_TP_CD        = #svcInvSrcTpCdD#
        AND I.GLBL_CMPY_CD              = SI.GLBL_CMPY_CD
        AND SI.EZCANCELFLAG             = '0'
        AND I.INV_NUM                   = IL.INV_NUM
        AND I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD
        AND IL.EZCANCELFLAG             = '0'
        <!-- QC#20788 add Start -->
        AND I.GLBL_CMPY_CD              = IB.GLBL_CMPY_CD
        AND I.INV_NUM                   = IB.INV_NUM
        AND IL.INV_BOL_LINE_NUM         = IB.INV_BOL_LINE_NUM
        AND IB.EZCANCELFLAG             = '0'
        <!-- QC#20788 add End -->
        <!-- 2020/03/18 QC#56281 Del Start -->
        <!-- AND IL.SVC_INV_LINE_PK         = SIL.SVC_INV_LINE_PK -->
        <!-- AND IL.GLBL_CMPY_CD            = SIL.GLBL_CMPY_CD    -->
        <!-- AND SIL.EZCANCELFLAG            = '0'                -->
        <!-- 2020/03/18 QC#56281 Del End -->
        <!-- QC#54137 2019/11/04 Del    -->
        <!-- AND SI.FSR_NUM                  = F.FSR_NUM (+)  -->
        <!-- AND SI.GLBL_CMPY_CD             = F.GLBL_CMPY_CD (+)  -->
        <!-- AND F.EZCANCELFLAG (+)          = '0'  -->
        <!-- 2019/09/13 QC#53181 Mod Start -->
        <!--
        AND F.SHIP_TO_CUST_CD           = STC.SHIP_TO_CUST_CD (+)
        AND F.GLBL_CMPY_CD              = STC.GLBL_CMPY_CD (+)
        -->
        <!-- QC#54877 2019/11/28 Mod Start-->
        <!--
        AND SI.SHIP_TO_CUST_CD          = STC.SHIP_TO_CUST_CD (+)
        AND SI.GLBL_CMPY_CD             = STC.GLBL_CMPY_CD (+)
        -->
        AND IB.SHIP_TO_CUST_CD          = STC.SHIP_TO_CUST_CD (+)
        AND IB.GLBL_CMPY_CD             = STC.GLBL_CMPY_CD (+)
        <!-- 2019/09/13 QC#53181 Mod End -->
        <!-- QC#54877 2019/11/28 Mod End-->
        AND STC.EZCANCELFLAG (+)        = '0'

        AND SI.TECH_CD                  = TM.TECH_TOC_CD (+)
        AND SI.GLBL_CMPY_CD             = TM.GLBL_CMPY_CD (+)
        AND TM.EZCANCELFLAG (+)         = '0'
        AND SI.MDSE_CD                  = M_H.MDSE_CD (+)
        AND SI.GLBL_CMPY_CD             = M_H.GLBL_CMPY_CD (+)
        AND M_H.EZCANCELFLAG(+)         = '0'
        
        AND IL.INV_NUM                 = DILTD1.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM        = DILTD1.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM            = DILTD1.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM        = DILTD1.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM    = DILTD1.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD1.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd01#
        AND IL.GLBL_CMPY_CD            = DILTD1.GLBL_CMPY_CD(+)
        AND DILTD1.EZCANCELFLAG(+)      = '0'
        AND IL.INV_NUM                 = DILTD2.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM        = DILTD2.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM            = DILTD2.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM        = DILTD2.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM    = DILTD2.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD2.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd02#
        AND IL.GLBL_CMPY_CD            = DILTD2.GLBL_CMPY_CD(+)
        AND DILTD2.EZCANCELFLAG(+)      = '0'
        AND IL.INV_NUM                 = DILTD3.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM        = DILTD3.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM            = DILTD3.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM        = DILTD3.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM    = DILTD3.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD3.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd03#
        AND IL.GLBL_CMPY_CD            = DILTD3.GLBL_CMPY_CD(+)
        AND DILTD3.EZCANCELFLAG(+)      = '0'
        AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
        AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
        AND CCY.EZCANCELFLAG(+)         = '0'
        
    )
    SELECT
         SHIP_TO_CODE
        ,MAX(SHIP_TO_NAME)                  SHIP_TO_NAME  
        ,MAX(SHIP_TO_FST_ADDRESS)           SHIP_TO_FST_ADDR
        ,MAX(SHIP_TO_SCD_ADDRESS)           SHIP_TO_SCD_ADDR
        ,MAX(SHIP_TO_CITY)                  SHIP_TO_CITY
        ,MAX(SHIP_TO_ST)                    SHIP_TO_ST
        ,MAX(SHIP_TO_POST)                  SHIP_TO_POST
        ,PO_NO
        ,CUST_CODES1
        ,CUST_CODES2
        ,CUST_CODES3
        ,CUST_CODES4
        ,CUST_CODES5
        ,CUST_CODES6
        ,ORDER_NO
        ,CHARGE_TYPE
        ,FSR_NO
        ,TECH_CD
        ,TECH_NM
        ,SERIAL_NO
        ,MODEL
        ,MDSE_CD
        ,CASE WHEN SUM(CHARGE_TXT) IS NOT NULL THEN
            CASE WHEN SUM(CHARGE_TXT) &lt; 0 THEN
                '-' || CCY_SGN_TXT|| TO_CHAR(ABS(SUM(CHARGE_TXT)) ,#amtFormat#)
            ELSE
                CCY_SGN_TXT|| TO_CHAR(SUM(CHARGE_TXT) ,#amtFormat#)
            END
         ELSE
            ''
         END    CHARGE_TXT

        ,CASE WHEN SUM(STATE_TAX_TXT) IS NOT NULL THEN
             CASE WHEN SUM(STATE_TAX_TXT) &lt; 0 THEN
                 '-' || CCY_SGN_TXT|| TO_CHAR(ABS(SUM(STATE_TAX_TXT)) ,#amtFormat#)
             ELSE
                 CCY_SGN_TXT|| TO_CHAR(SUM(STATE_TAX_TXT) ,#amtFormat#)
             END
         ELSE
             ''
         END    STATE_TAX_TXT
        ,CASE WHEN SUM(COUNTY_TAX_TXT) IS NOT NULL THEN
             CASE WHEN SUM(COUNTY_TAX_TXT) &lt; 0 THEN
                 '-' || CCY_SGN_TXT|| TO_CHAR(ABS(SUM(COUNTY_TAX_TXT)) ,#amtFormat#)
             ELSE
                 CCY_SGN_TXT|| TO_CHAR(SUM(COUNTY_TAX_TXT) ,#amtFormat#)
             END
         ELSE
             ''
         END    COUNTY_TAX_TXT
        ,CASE WHEN SUM(CITY_TAX_TXT) IS NOT NULL THEN
             CASE WHEN SUM(CITY_TAX_TXT) &lt; 0 THEN
                 '-' || CCY_SGN_TXT || TO_CHAR(ABS(SUM(CITY_TAX_TXT)) ,#amtFormat#)
             ELSE
                 CCY_SGN_TXT || TO_CHAR(SUM(CITY_TAX_TXT) ,#amtFormat#)
             END
         ELSE
             ''
         END    CITY_TAX_TXT
        ,CASE WHEN SUM(TOTAL_TAX_TXT) IS NOT NULL THEN
             CASE WHEN SUM(TOTAL_TAX_TXT) &lt; 0 THEN
                 '-' || CCY_SGN_TXT|| TO_CHAR(ABS(SUM(TOTAL_TAX_TXT)) ,#amtFormat#)
             ELSE
                 CCY_SGN_TXT|| TO_CHAR(SUM(TOTAL_TAX_TXT) ,#amtFormat#)
             END
         ELSE
             ''
         END    TOTAL_TAX_TXT
        ,CASE WHEN SUM(TOTAL_AMOUNT_TXT) IS NOT NULL THEN
             CASE WHEN SUM(TOTAL_AMOUNT_TXT) &lt; 0 THEN
                 '-' || CCY_SGN_TXT|| TO_CHAR(ABS(SUM(TOTAL_AMOUNT_TXT)) ,#amtFormat#)
             ELSE
                 CCY_SGN_TXT|| TO_CHAR(SUM(TOTAL_AMOUNT_TXT) ,#amtFormat#)
             END
         ELSE
             ''
         END    TOTAL_AMOUNT_TXT
        <!-- QC#20788 add Start -->
        ,SHIP_TO_CUST_ACCT_CD
        ,SHIP_TO_CUST_ACCT_NM
        <!-- QC#20788 add End -->
    FROM
        A
    GROUP BY
         CCY_SGN_TXT
        ,SHIP_TO_CODE 
        ,PO_NO
        ,CUST_CODES1
        ,CUST_CODES2
        ,CUST_CODES3
        ,CUST_CODES4
        ,CUST_CODES5
        ,CUST_CODES6
        ,ORDER_NO
        ,CHARGE_TYPE
        ,FSR_NO
        ,TECH_CD
        ,TECH_NM
        ,SERIAL_NO
        ,MODEL
        ,MDSE_CD
        <!-- QC#20788 add Start -->
        ,SHIP_TO_CUST_ACCT_CD
        ,SHIP_TO_CUST_ACCT_NM
        <!-- QC#20788 add End -->
    </statement>
    
<!-- 2019/05/07 QC#50078 Add Start -->
    <statement id="getPartsLaborSubTotal_manInv" parameterClass="Map" resultClass="Map">
    WITH A AS (

    SELECT
         IB.SHIP_TO_CUST_CD                        SHIP_TO_CODE
        ,STC.LOC_NM                                SHIP_TO_NAME
        ,STC.FIRST_LINE_ADDR                       SHIP_TO_FST_ADDRESS
        ,(STC.SCD_LINE_ADDR
            || STC.THIRD_LINE_ADDR 
            || STC.FRTH_LINE_ADDR)                 SHIP_TO_SCD_ADDRESS
        ,STC.CTY_ADDR                              SHIP_TO_CITY
        ,STC.ST_CD                                 SHIP_TO_ST
        ,STC.POST_CD                               SHIP_TO_POST

        ,NVL(I.LEASE_CMPY_PO_NUM, NVL(IL.CUST_ISS_PO_NUM, I.CUST_ISS_PO_NUM))  PO_NO
        ,IL.FIRST_BLLG_ATTRB_VAL_TXT               CUST_CODES1
        ,IL.SCD_BLLG_ATTRB_VAL_TXT                 CUST_CODES2
        ,IL.THIRD_BLLG_ATTRB_VAL_TXT               CUST_CODES3
        ,IL.FRTH_BLLG_ATTRB_VAL_TXT                CUST_CODES4
        ,IL.FIFTH_BLLG_ATTRB_VAL_TXT               CUST_CODES5
        ,IL.SIXTH_BLLG_ATTRB_VAL_TXT               CUST_CODES6
        ,I.SRC_SYS_DOC_NUM                         ORDER_NO
        ,CASE
                WHEN M_H.COA_PROD_CD LIKE #prodCd# THEN #invChrgTpPN#
                WHEN M_H.COA_MDSE_TP_CD = #coaMdseTpCd# THEN #invChrgTpPN#
                ELSE #invChrgTpPC#
           END                                     CHARGE_TYPE
        ,I.SRC_SYS_DOC_NUM                         FSR_NO
        ,''                                        TECH_CD
        ,I.SLS_REP_TOC_NM                          TECH_NM
        ,SMM.SER_NUM                               SERIAL_NO
        ,SMM.MDSE_CD                               MDSE_CD
        <!-- MOD START 2019/06/05 QC#50683 -->
   <!-- ,IL.MDL_NM                                 MODEL-->
        ,MN.T_MDL_NM                                 MODEL
       <!-- MOD END 2019/06/05 QC#50683 -->

        <isEqual property="dtlDplyFlg" compareValue="N"> 
        ,IL.INV_LINE_DEAL_NET_AMT                  CHARGE_TXT
        </isEqual>  
        <isNotEqual property="dtlDplyFlg" compareValue="N"> 
        , '0'                                      CHARGE_TXT
        </isNotEqual>

        <isEqual property="taxDtlFlg" compareValue="Y">
        ,NVL(DILTD1.DEAL_SLS_TAX_AMT,0)            STATE_TAX_TXT
        ,NVL(DILTD2.DEAL_SLS_TAX_AMT,0)            COUNTY_TAX_TXT
        ,NVL(DILTD3.DEAL_SLS_TAX_AMT,0)            CITY_TAX_TXT
        </isEqual>
        <isNotEqual property="taxDtlFlg" compareValue="Y">
        ,'0'                                       STATE_TAX_TXT
        ,'0'                                       COUNTY_TAX_TXT
        ,'0'                                       CITY_TAX_TXT
        </isNotEqual>

        ,NVL(IL.INV_LINE_DEAL_TAX_AMT, 0)                                           TOTAL_TAX_TXT
        ,NVL(IL.INV_LINE_DEAL_TAX_AMT, 0) + NVL(IL.INV_LINE_DEAL_NET_AMT, 0)        TOTAL_AMOUNT_TXT
        ,CCY.CCY_SGN_TXT
        ,IB.SHIP_TO_CUST_ACCT_CD                   SHIP_TO_CUST_ACCT_CD
        ,CASE WHEN IB.DROP_SHIP_FLG = 'Y' THEN IB.SHIP_TO_LOC_NM ELSE IB.SHIP_TO_CUST_ACCT_NM END SHIP_TO_CUST_ACCT_NM
    FROM
        (
             SELECT
                   INV_NUM,
                   GLBL_CMPY_CD,
                   EZCANCELFLAG,
                   DEAL_CCY_CD,
                   LEASE_CMPY_PO_NUM,
                   CUST_ISS_PO_NUM,
                   SRC_SYS_DOC_NUM,
                   SLS_REP_TOC_NM
             FROM
                   INV
             WHERE
                   INV_NUM = #invNum#
               AND GLBL_CMPY_CD              = #glblCmpyCd#
               AND EZCANCELFLAG              = '0'
        ) I
        ,INV_LINE               IL
        ,DS_INV_LINE_TAX_DTL    DILTD1
        ,DS_INV_LINE_TAX_DTL    DILTD2
        ,DS_INV_LINE_TAX_DTL    DILTD3
        ,ALL_MDSE_V             M_H
        ,SHIP_TO_CUST           STC
        ,CCY                    CCY
        ,INV_BOL                IB
        ,INV_LINE               IL1
        ,SVC_MACH_MSTR          SMM
        <!-- ADD START 2019/06/05 QC#50683 -->
        ,SVC_CONFIG_MSTR        SCM
        ,MDL_NM                 MN
       <!-- ADD END 2019/06/05 QC#50683 -->
    WHERE
            I.INV_NUM                   = IL.INV_NUM
        AND I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD
        AND IL.EZCANCELFLAG             = '0'
        AND I.GLBL_CMPY_CD              = IB.GLBL_CMPY_CD
        AND I.INV_NUM                   = IB.INV_NUM
        AND IL.INV_BOL_LINE_NUM         = IB.INV_BOL_LINE_NUM
        AND IB.EZCANCELFLAG             = '0'

        AND IB.SHIP_TO_CUST_CD          = STC.SHIP_TO_CUST_CD (+)
        AND IB.GLBL_CMPY_CD             = STC.GLBL_CMPY_CD (+)
        AND STC.EZCANCELFLAG (+)        = '0'

        AND I.INV_NUM                   = IL1.INV_NUM(+)
        AND I.GLBL_CMPY_CD              = IL1.GLBL_CMPY_CD(+)
        AND IL1.EZCANCELFLAG(+)         = '0'
        AND IL1.INV_BOL_LINE_NUM(+)     = '001'
        AND IL1.INV_LINE_NUM(+)         = '00001'
        AND IL1.INV_LINE_SUB_NUM(+)     = '001'
        AND IL1.INV_LINE_SUB_TRX_NUM(+) = '001'

        AND IL1.SVC_MACH_MSTR_PK        = SMM.SVC_MACH_MSTR_PK(+)
        AND IL1.GLBL_CMPY_CD            = SMM.GLBL_CMPY_CD(+)
        AND SMM.EZCANCELFLAG(+)         = '0'
        AND SMM.MDSE_CD                 = M_H.MDSE_CD (+)
        AND SMM.GLBL_CMPY_CD            = M_H.GLBL_CMPY_CD (+)
        AND M_H.EZCANCELFLAG(+)         = '0' 
        <!-- ADD START 2019/06/05 QC#50683 -->
        AND SMM.SVC_MACH_MSTR_PK        = SCM.SVC_MACH_MSTR_PK (+)
        AND SMM.GLBL_CMPY_CD            = SCM.GLBL_CMPY_CD (+)
        <!--  START 2022/11/21 L.Mandanas [QC#60805, ADD] -->
        AND SMM.SVC_CONFIG_MSTR_PK      = SCM.SVC_CONFIG_MSTR_PK (+)
        <!--  END 2022/11/21 L.Mandanas [QC#60805, ADD] -->
        AND SCM.EZCANCELFLAG(+)         = '0' 
        AND SCM.MDL_ID                  = MN.T_MDL_ID (+)
        AND SCM.GLBL_CMPY_CD            = MN.T_GLBL_CMPY_CD (+)
        AND MN.EZCANCELFLAG(+)          = '0' 
       <!-- ADD END 2019/06/05 QC#50683 -->

        AND IL.INV_NUM                 = DILTD1.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM        = DILTD1.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM            = DILTD1.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM        = DILTD1.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM    = DILTD1.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD1.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd01#
        AND IL.GLBL_CMPY_CD            = DILTD1.GLBL_CMPY_CD(+)
        AND DILTD1.EZCANCELFLAG(+)      = '0'
        AND IL.INV_NUM                 = DILTD2.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM        = DILTD2.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM            = DILTD2.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM        = DILTD2.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM    = DILTD2.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD2.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd02#
        AND IL.GLBL_CMPY_CD            = DILTD2.GLBL_CMPY_CD(+)
        AND DILTD2.EZCANCELFLAG(+)      = '0'
        AND IL.INV_NUM                 = DILTD3.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM        = DILTD3.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM            = DILTD3.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM        = DILTD3.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM    = DILTD3.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD3.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd03#
        AND IL.GLBL_CMPY_CD            = DILTD3.GLBL_CMPY_CD(+)
        AND DILTD3.EZCANCELFLAG(+)      = '0'
        AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
        AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
        AND CCY.EZCANCELFLAG(+)         = '0'
        
    )
    SELECT
         SHIP_TO_CODE
        ,MAX(SHIP_TO_NAME)                  SHIP_TO_NAME  
        ,MAX(SHIP_TO_FST_ADDRESS)           SHIP_TO_FST_ADDR
        ,MAX(SHIP_TO_SCD_ADDRESS)           SHIP_TO_SCD_ADDR
        ,MAX(SHIP_TO_CITY)                  SHIP_TO_CITY
        ,MAX(SHIP_TO_ST)                    SHIP_TO_ST
        ,MAX(SHIP_TO_POST)                  SHIP_TO_POST
        ,PO_NO
        ,CUST_CODES1
        ,CUST_CODES2
        ,CUST_CODES3
        ,CUST_CODES4
        ,CUST_CODES5
        ,CUST_CODES6
        ,ORDER_NO
        ,CHARGE_TYPE
        ,FSR_NO
        ,TECH_CD
        ,TECH_NM
        ,SERIAL_NO
        ,MODEL
        ,MDSE_CD
        ,CASE WHEN SUM(CHARGE_TXT) IS NOT NULL THEN
            CASE WHEN SUM(CHARGE_TXT) &lt; 0 THEN
                '-' || CCY_SGN_TXT|| TO_CHAR(ABS(SUM(CHARGE_TXT)) ,#amtFormat#)
            ELSE
                CCY_SGN_TXT|| TO_CHAR(SUM(CHARGE_TXT) ,#amtFormat#)
            END
         ELSE
            ''
         END    CHARGE_TXT

        ,CASE WHEN SUM(STATE_TAX_TXT) IS NOT NULL THEN
             CASE WHEN SUM(STATE_TAX_TXT) &lt; 0 THEN
                 '-' || CCY_SGN_TXT|| TO_CHAR(ABS(SUM(STATE_TAX_TXT)) ,#amtFormat#)
             ELSE
                 CCY_SGN_TXT|| TO_CHAR(SUM(STATE_TAX_TXT) ,#amtFormat#)
             END
         ELSE
             ''
         END    STATE_TAX_TXT
        ,CASE WHEN SUM(COUNTY_TAX_TXT) IS NOT NULL THEN
             CASE WHEN SUM(COUNTY_TAX_TXT) &lt; 0 THEN
                 '-' || CCY_SGN_TXT|| TO_CHAR(ABS(SUM(COUNTY_TAX_TXT)) ,#amtFormat#)
             ELSE
                 CCY_SGN_TXT|| TO_CHAR(SUM(COUNTY_TAX_TXT) ,#amtFormat#)
             END
         ELSE
             ''
         END    COUNTY_TAX_TXT
        ,CASE WHEN SUM(CITY_TAX_TXT) IS NOT NULL THEN
             CASE WHEN SUM(CITY_TAX_TXT) &lt; 0 THEN
                 '-' || CCY_SGN_TXT || TO_CHAR(ABS(SUM(CITY_TAX_TXT)) ,#amtFormat#)
             ELSE
                 CCY_SGN_TXT || TO_CHAR(SUM(CITY_TAX_TXT) ,#amtFormat#)
             END
         ELSE
             ''
         END    CITY_TAX_TXT
        ,CASE WHEN SUM(TOTAL_TAX_TXT) IS NOT NULL THEN
             CASE WHEN SUM(TOTAL_TAX_TXT) &lt; 0 THEN
                 '-' || CCY_SGN_TXT|| TO_CHAR(ABS(SUM(TOTAL_TAX_TXT)) ,#amtFormat#)
             ELSE
                 CCY_SGN_TXT|| TO_CHAR(SUM(TOTAL_TAX_TXT) ,#amtFormat#)
             END
         ELSE
             ''
         END    TOTAL_TAX_TXT
        ,CASE WHEN SUM(TOTAL_AMOUNT_TXT) IS NOT NULL THEN
             CASE WHEN SUM(TOTAL_AMOUNT_TXT) &lt; 0 THEN
                 '-' || CCY_SGN_TXT|| TO_CHAR(ABS(SUM(TOTAL_AMOUNT_TXT)) ,#amtFormat#)
             ELSE
                 CCY_SGN_TXT|| TO_CHAR(SUM(TOTAL_AMOUNT_TXT) ,#amtFormat#)
             END
         ELSE
             ''
         END    TOTAL_AMOUNT_TXT
        ,SHIP_TO_CUST_ACCT_CD
        ,SHIP_TO_CUST_ACCT_NM
    FROM
        A
    GROUP BY
         CCY_SGN_TXT
        ,SHIP_TO_CODE 
        ,PO_NO
        ,CUST_CODES1
        ,CUST_CODES2
        ,CUST_CODES3
        ,CUST_CODES4
        ,CUST_CODES5
        ,CUST_CODES6
        ,ORDER_NO
        ,CHARGE_TYPE
        ,FSR_NO
        ,TECH_CD
        ,TECH_NM
        ,SERIAL_NO
        ,MODEL
        ,MDSE_CD
        ,SHIP_TO_CUST_ACCT_CD
        ,SHIP_TO_CUST_ACCT_NM
    </statement>
<!-- 2019/05/07 QC#50078 Add End -->
    
    <statement id="getPartsLaborPartDtl" parameterClass="Map" resultClass="Map">
    SELECT
         IL.MDSE_CD                                MDSE_CD
        ,M_H.MDSE_DESC_SHORT_TXT                    DESCRIPTION
        ,RTRIM(TO_CHAR(IL.INV_DPLY_QTY, #qtyFormat#),'.')     ORDER_QTY
        ,RTRIM(TO_CHAR(IL.INV_DPLY_QTY, #qtyFormat#),'.')     SHIP_QTY
        <isEqual property="dtlDplyFlg" compareValue="Y"> 
        ,CASE WHEN IL.DEAL_NET_UNIT_PRC_AMT IS NOT NULL THEN
             CASE WHEN IL.DEAL_NET_UNIT_PRC_AMT &lt; 0 THEN
                 '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(IL.DEAL_NET_UNIT_PRC_AMT), #amtFormat#)
             ELSE
                 CCY.CCY_SGN_TXT || TO_CHAR(IL.DEAL_NET_UNIT_PRC_AMT, #amtFormat#)
             END
         ELSE
             ''
         END   PRICE_AMOUNT_TXT
        ,IL.DEAL_NET_UNIT_PRC_AMT                PRICE_AMOUNT
        </isEqual>  
        <isNotEqual property="dtlDplyFlg" compareValue="Y"> 
        ,NULL  PRICE_AMOUNT_TXT
        ,NULL                PRICE_AMOUNT
        </isNotEqual>
        <isEqual property="dtlDplyFlg" compareValue="Y"> 
        <!--  ,CASE WHEN SIL.INV_LINE_DEAL_SLS_AMT IS NOT NULL THEN-->
        ,CASE WHEN IL.INV_LINE_DEAL_NET_AMT IS NOT NULL THEN
             <!--  CASE WHEN SIL.INV_LINE_DEAL_SLS_AMT &lt; 0 THEN-->
             CASE WHEN IL.INV_LINE_DEAL_NET_AMT &lt; 0 THEN
                 <!--  '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(SIL.INV_LINE_DEAL_SLS_AMT), #amtFormat#)-->
                 '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(IL.INV_LINE_DEAL_NET_AMT), #amtFormat#)
             ELSE
                 <!--  CCY.CCY_SGN_TXT || TO_CHAR(SIL.INV_LINE_DEAL_SLS_AMT, #amtFormat#)-->
                 CCY.CCY_SGN_TXT || TO_CHAR(IL.INV_LINE_DEAL_NET_AMT, #amtFormat#)
             END
         ELSE
             ''
         END   LINE_TOTAL_AMOUNT_TXT
        <!--  ,SIL.INV_LINE_DEAL_SLS_AMT            LINE_TOTAL_AMOUNT-->
        ,IL.INV_LINE_DEAL_NET_AMT            LINE_TOTAL_AMOUNT
        </isEqual>  
        <isNotEqual property="dtlDplyFlg" compareValue="Y"> 
        , NULL LINE_TOTAL_AMOUNT_TXT
        , NULL            LINE_TOTAL_AMOUNT
        </isNotEqual>
        <!-- QC#17516 -->
        ,(IL.INV_BOL_LINE_NUM || '-' || IL.INV_LINE_NUM || '-' || IL.INV_LINE_SUB_NUM || '-' || IL.INV_LINE_SUB_TRX_NUM) DPLY_LINE_NUM
        <!-- QC#17577 -->
        ,IL.INV_BOL_LINE_NUM
        ,IL.INV_LINE_NUM
        ,IL.INV_LINE_SUB_NUM
        ,IL.INV_LINE_SUB_TRX_NUM
    
    FROM 
        <!-- 2018/08/21 QC#27684 Mod Start -->
        <!-- INV                I -->
        (
             SELECT
                   INV_NUM,
                   CASE SYS_SRC_CD
                      WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                      ELSE INV_NUM
                   END  AS SVC_INV_NUM,
                   GLBL_CMPY_CD,
                   EZCANCELFLAG,
                   LEASE_CMPY_PO_NUM,
                   DEAL_CCY_CD
                   <!-- START 2022/02/21 [QC#59724, ADD] -->
                   ,CUST_ISS_PO_NUM
                   <!-- END   2022/02/21 [QC#59724, ADD] -->
             FROM
                   INV
             WHERE
                   INV_NUM = #invNum#
               AND GLBL_CMPY_CD      = #glblCmpyCd#
               AND EZCANCELFLAG      = '0'
        ) I
        <!-- 2018/08/21 QC#27684 Mod End -->
        ,INV_BOL            IB
        ,INV_LINE           IL
        ,SVC_INV            SI
        <!--,SVC_INV_LINE       SIL --> <!-- 2020/03/18 QC#56281 Del -->
        ,TECH_MSTR          TM
        ,ALL_MDSE_V         M_H
        <!-- QC#54137 2019/11/04 Del    -->
        <!-- ,FSR                F      -->
        ,CCY                CCY
    
    WHERE
        <!-- 2018/08/21 QC#27684 Mod Start -->
        <!--
            I.INV_NUM                   = #invNum#
        AND I.GLBL_CMPY_CD              = #glblCmpyCd#
        AND I.EZCANCELFLAG              = '0' 
        AND ((      I.SYS_SRC_CD        &lt;&gt; #sysSrcCdNFC#    
                AND I.INV_NUM           = SI.SVC_INV_NUM )
            OR  (   I.SYS_SRC_CD        = #sysSrcCdNFC# 
                AND I.ORIG_INV_NUM      = SI.SVC_INV_NUM )
            )
        -->
            I.SVC_INV_NUM               = SI.SVC_INV_NUM
        <!-- 2018/08/21 QC#27684 Mod End -->
        AND I.GLBL_CMPY_CD              = SI.GLBL_CMPY_CD
        AND SI.EZCANCELFLAG             = '0' 
        AND SI.SVC_INV_SRC_TP_CD        = #svcInvSrcTpCdD#
        <!-- QC#54137 2019/11/04 Mod Start    -->
        <!-- AND (F.SHIP_TO_CUST_CD         = #shipToCust#  -->
        <!--         OR F.SHIP_TO_CUST_CD      IS NULL)  -->
        AND I.INV_NUM                   = IB.INV_NUM
        AND I.GLBL_CMPY_CD              = IB.GLBL_CMPY_CD
        AND IB.EZCANCELFLAG             = '0' 
        AND (IB.SHIP_TO_CUST_CD         = #shipToCust#
                OR IB.SHIP_TO_CUST_CD      IS NULL)
<!-- START 2018/08/01 T.Ogura [QC#13309,MOD] -->
<!--    AND SI.FSR_NUM                  = #fsrNo# -->
        AND (SI.FSR_NUM                 = #fsrNo#
             OR SI.FSR_NUM              IS NULL)
<!-- END   2018/08/01 T.Ogura [QC#13309,MOD] -->
        <!-- 2017/02/27 QC#16575 UPD START -->
        <!-- AND (SI.SER_NUM                  = #serNo# -->
        AND (
              (SI.SER_NUM               = #serNo#
           AND SI.MDSE_CD               = #mdseCd# )
        <!-- 2017/02/27 QC#16575 UPD E N D -->
                OR SI.SER_NUM           IS NULL)
        AND (SI.MDL_NM                   = #model#
                OR SI.MDL_NM            IS NULL)
        AND (TM.TECH_NM                  = #techNm#
                OR TM.TECH_NM           IS NULL)
        AND SI.GLBL_CMPY_CD             = TM.GLBL_CMPY_CD (+)
        AND TM.EZCANCELFLAG (+)         = '0' 
        AND SI.TECH_CD                  = TM.TECH_TOC_CD (+)
        <!-- QC#54137 2019/11/04 Mod Start    -->
        <!-- AND I.INV_NUM                   = IL.INV_NUM  -->
        <!-- AND I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD  -->
        <!-- AND IL.EZCANCELFLAG             = '0'  -->
        AND IB.INV_NUM                  = IL.INV_NUM
        AND IB.GLBL_CMPY_CD             = IL.GLBL_CMPY_CD
        AND IL.EZCANCELFLAG             = '0' 
        <!-- QC#54137 2019/11/04 Mod End    -->
        <!-- 2020/03/18 QC#56281 Del Start -->
        <!-- AND IL.SVC_INV_LINE_PK          = SIL.SVC_INV_LINE_PK -->
        <!-- AND IL.GLBL_CMPY_CD             = SIL.GLBL_CMPY_CD -->
        <!-- AND SIL.EZCANCELFLAG            = '0'  -->
        <!-- 2020/03/18 QC#56281 Del End -->
        AND IL.MDSE_CD                  = M_H.MDSE_CD (+)
        AND IL.GLBL_CMPY_CD             = M_H.GLBL_CMPY_CD (+)
        AND M_H.EZCANCELFLAG(+)         = '0' 
        <!-- QC#54137 2019/11/04 Del -->
        <!-- AND SI.FSR_NUM                  = F.FSR_NUM (+) -->
        <!-- AND SI.GLBL_CMPY_CD             = F.GLBL_CMPY_CD (+) -->
<!-- START 2018/08/01 T.Ogura [QC#13309,MOD] -->
<!--    AND F.EZCANCELFLAG              = '0' -->
        <!-- AND F.EZCANCELFLAG(+)           = '0'  -->
<!-- END   2018/08/01 T.Ogura [QC#13309,MOD] -->
        AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
        AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
        AND CCY.EZCANCELFLAG(+)         = '0'
            <isNotNull property="poNo" >
        <!-- 2019/04/04 QC#30756 Mod Start -->
        <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))    = #poNo# -->
        <!-- 2020/03/18 QC#56281 Mod Start -->
        <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)))    = UPPER(#poNo#) -->
        <!-- START 2022/02/21 [QC#59724, MOD] -->
        <!-- AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(IL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)))    = UPPER(#poNo#) -->
        AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
        THEN UPPER(I.CUST_ISS_PO_NUM)
        ELSE UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(IL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM)))
        END = UPPER(#poNo#)
        <!-- END   2022/02/21 [QC#59724, MOD] -->
        <!-- 2020/03/18 QC#56281 Mod End -->
        <!-- 2019/04/04 QC#30756 Mod End -->
            </isNotNull>
            <isNull property="poNo" >
        <!-- 2019/04/16 QC#56601 Mod Start -->
        <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(SIL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))    IS NULL -->
        <!-- START 2022/02/21 [QC#59724, MOD] -->
        <!-- AND NVL(I.LEASE_CMPY_PO_NUM, NVL(IL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))    IS NULL -->
        AND CASE WHEN UPPER(NVL(SI.CUST_ISS_PO_NUM, ' ')) &lt;&gt; UPPER(NVL(I.CUST_ISS_PO_NUM, ' '))
        THEN I.CUST_ISS_PO_NUM
        ELSE NVL(I.LEASE_CMPY_PO_NUM, NVL(IL.CUST_ISS_PO_NUM, SI.CUST_ISS_PO_NUM))
        END IS NULL
        <!-- END   2022/02/21 [QC#59724, MOD] -->
        <!-- 2019/04/16 QC#56601 Mod End -->
            </isNull>
        <isNotNull property="custCodes1" >
        AND IL.FIRST_BLLG_ATTRB_VAL_TXT    = #custCodes1#
        </isNotNull>
        <isNull property="custCodes1" >
        AND IL.FIRST_BLLG_ATTRB_VAL_TXT  IS NULL
        </isNull>        
        <isNotNull property="custCodes2">
        AND IL.SCD_BLLG_ATTRB_VAL_TXT    = #custCodes2#
        </isNotNull>
        <isNull property="custCodes2" >
        AND IL.SCD_BLLG_ATTRB_VAL_TXT  IS NULL
        </isNull>        
        <isNotNull property="custCodes3" >
        AND IL.THIRD_BLLG_ATTRB_VAL_TXT    = #custCodes3#
        </isNotNull>
        <isNull property="custCodes3" >
        AND IL.THIRD_BLLG_ATTRB_VAL_TXT  IS NULL
        </isNull>        
        <isNotNull property="custCodes4" >
        AND IL.FRTH_BLLG_ATTRB_VAL_TXT    = #custCodes4#
        </isNotNull>
        <isNull property="custCodes4" >
        AND IL.FRTH_BLLG_ATTRB_VAL_TXT  IS NULL
        </isNull>        
        <isNotNull property="custCodes5" >
        AND IL.FIFTH_BLLG_ATTRB_VAL_TXT    = #custCodes5#
        </isNotNull>
        <isNull property="custCodes5" >
        AND IL.FIFTH_BLLG_ATTRB_VAL_TXT  IS NULL
        </isNull>        
        <isNotNull property="custCodes6" >
        AND IL.SIXTH_BLLG_ATTRB_VAL_TXT    = #custCodes6#
        </isNotNull>
        <isNull property="custCodes6" >
        AND IL.SIXTH_BLLG_ATTRB_VAL_TXT  IS NULL
        </isNull>
        
        
        AND CASE
                WHEN M_H.COA_PROD_CD LIKE #prodCd# THEN #invChrgTpPN#
                WHEN M_H.COA_MDSE_TP_CD = #coaMdseTpCd# THEN #invChrgTpPN#
                ELSE #invChrgTpPC#
            END                         = #invChrgTpNm#
        ORDER BY IL.INV_BOL_LINE_NUM, IL.INV_LINE_NUM, IL.INV_LINE_SUB_NUM, IL.INV_LINE_SUB_TRX_NUM
    </statement>
    
<!-- 2019/05/07 QC#50078 Add Start -->
    <statement id="getPartsLaborPartDtl_manInv" parameterClass="Map" resultClass="Map">
    SELECT
         IL.MDSE_CD                                MDSE_CD
        ,M_H.MDSE_DESC_SHORT_TXT                   DESCRIPTION
        ,RTRIM(TO_CHAR(IL.INV_DPLY_QTY, #qtyFormat#),'.')     ORDER_QTY
        ,RTRIM(TO_CHAR(IL.INV_DPLY_QTY, #qtyFormat#),'.')     SHIP_QTY
        <isEqual property="dtlDplyFlg" compareValue="Y"> 
        ,CASE WHEN IL.DEAL_NET_UNIT_PRC_AMT IS NOT NULL THEN
             CASE WHEN IL.DEAL_NET_UNIT_PRC_AMT &lt; 0 THEN
                 '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(IL.DEAL_NET_UNIT_PRC_AMT), #amtFormat#)
             ELSE
                 CCY.CCY_SGN_TXT || TO_CHAR(IL.DEAL_NET_UNIT_PRC_AMT, #amtFormat#)
             END
         ELSE
             ''
         END                                     PRICE_AMOUNT_TXT
        ,IL.DEAL_NET_UNIT_PRC_AMT                PRICE_AMOUNT
        </isEqual>  
        <isNotEqual property="dtlDplyFlg" compareValue="Y"> 
        ,NULL                                    PRICE_AMOUNT_TXT
        ,NULL                                    PRICE_AMOUNT
        </isNotEqual>
        <isEqual property="dtlDplyFlg" compareValue="Y"> 
        ,CASE WHEN IL.INV_LINE_DEAL_NET_AMT IS NOT NULL THEN
             CASE WHEN IL.INV_LINE_DEAL_NET_AMT &lt; 0 THEN
                 '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(IL.INV_LINE_DEAL_NET_AMT), #amtFormat#)
             ELSE
                 CCY.CCY_SGN_TXT || TO_CHAR(IL.INV_LINE_DEAL_NET_AMT, #amtFormat#)
             END
         ELSE
             ''
         END                                     LINE_TOTAL_AMOUNT_TXT
        ,IL.INV_LINE_DEAL_NET_AMT                LINE_TOTAL_AMOUNT
        </isEqual>  
        <isNotEqual property="dtlDplyFlg" compareValue="Y"> 
        , NULL                                   LINE_TOTAL_AMOUNT_TXT
        , NULL                                   LINE_TOTAL_AMOUNT
        </isNotEqual>
        ,(IL.INV_BOL_LINE_NUM || '-' || IL.INV_LINE_NUM || '-' || IL.INV_LINE_SUB_NUM || '-' || IL.INV_LINE_SUB_TRX_NUM) DPLY_LINE_NUM
        ,IL.INV_BOL_LINE_NUM
        ,IL.INV_LINE_NUM
        ,IL.INV_LINE_SUB_NUM
        ,IL.INV_LINE_SUB_TRX_NUM
    FROM 
        (
             SELECT
                   INV_NUM,
                   GLBL_CMPY_CD,
                   EZCANCELFLAG,
                   LEASE_CMPY_PO_NUM,
                   DEAL_CCY_CD,
                   CUST_ISS_PO_NUM
             FROM
                   INV
             WHERE
                   INV_NUM           = #invNum#
               AND GLBL_CMPY_CD      = #glblCmpyCd#
               AND EZCANCELFLAG      = '0'
        ) I
        ,INV_LINE           IL
        ,ALL_MDSE_V         M_H
        ,CCY                CCY
    WHERE
            I.INV_NUM                   = IL.INV_NUM
        AND I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD
        AND IL.EZCANCELFLAG             = '0' 
        AND IL.MDSE_CD                  = M_H.MDSE_CD (+)
        AND IL.GLBL_CMPY_CD             = M_H.GLBL_CMPY_CD (+)
        AND M_H.EZCANCELFLAG(+)         = '0' 
        AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
        AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
        AND CCY.EZCANCELFLAG(+)         = '0'
            <isNotNull property="poNo" >
        AND UPPER(NVL(I.LEASE_CMPY_PO_NUM, NVL(IL.CUST_ISS_PO_NUM, I.CUST_ISS_PO_NUM)))    = UPPER(#poNo#)
            </isNotNull>
            <isNull property="poNo" >
        AND NVL(I.LEASE_CMPY_PO_NUM, NVL(IL.CUST_ISS_PO_NUM, I.CUST_ISS_PO_NUM))    IS NULL
            </isNull>
            <isNotNull property="custCodes1" >
        AND IL.FIRST_BLLG_ATTRB_VAL_TXT    = #custCodes1#
            </isNotNull>
            <isNull property="custCodes1" >
        AND IL.FIRST_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>        
            <isNotNull property="custCodes2">
        AND IL.SCD_BLLG_ATTRB_VAL_TXT    = #custCodes2#
            </isNotNull>
            <isNull property="custCodes2" >
        AND IL.SCD_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>        
            <isNotNull property="custCodes3" >
        AND IL.THIRD_BLLG_ATTRB_VAL_TXT    = #custCodes3#
            </isNotNull>
            <isNull property="custCodes3" >
        AND IL.THIRD_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>        
         <isNotNull property="custCodes4" >
        AND IL.FRTH_BLLG_ATTRB_VAL_TXT    = #custCodes4#
            </isNotNull>
          <isNull property="custCodes4" >
        AND IL.FRTH_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>        
            <isNotNull property="custCodes5" >
        AND IL.FIFTH_BLLG_ATTRB_VAL_TXT    = #custCodes5#
            </isNotNull>
            <isNull property="custCodes5" >
        AND IL.FIFTH_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>        
            <isNotNull property="custCodes6" >
        AND IL.SIXTH_BLLG_ATTRB_VAL_TXT    = #custCodes6#
            </isNotNull>
            <isNull property="custCodes6" >
        AND IL.SIXTH_BLLG_ATTRB_VAL_TXT  IS NULL
            </isNull>
        
        AND CASE
                WHEN M_H.COA_PROD_CD LIKE #prodCd# THEN #invChrgTpPN#
                WHEN M_H.COA_MDSE_TP_CD = #coaMdseTpCd# THEN #invChrgTpPN#
                ELSE #invChrgTpPC#
            END                         = #invChrgTpNm#
        ORDER BY IL.INV_BOL_LINE_NUM, IL.INV_LINE_NUM, IL.INV_LINE_SUB_NUM, IL.INV_LINE_SUB_TRX_NUM
    </statement>
<!-- 2019/05/07 QC#50078 Add End -->
    
    <statement id="getSerialNo" parameterClass="Map" resultClass="String">
    SELECT
        DILS.SER_NUM
    FROM 
        DS_INV_LINE_SER_NUM     DILS
    WHERE
            DILS.GLBL_CMPY_CD           = #glblCmpyCd#
        AND DILS.INV_NUM                = #invNum#
        AND DILS.INV_BOL_LINE_NUM       = #invBolLineNum#
        AND DILS.INV_LINE_NUM           = #invLineNum#
        AND DILS.INV_LINE_SUB_NUM       = #invLineSubNum#
        AND DILS.INV_TRX_LINE_SUB_NUM   = #invTrxLineSubNum#
        AND DILS.EZCANCELFLAG           = '0'
    </statement>
    <statement id="getSerialNoList" parameterClass="Map" resultClass="Map">
    SELECT
        DILS.SER_NUM
       ,M.MDSE_DESC_SHORT_TXT
       ,DILS.INV_NUM || DILS.INV_BOL_LINE_NUM || DILS.INV_LINE_NUM INV_LINE_KEY
    FROM 
        DS_INV_LINE_SER_NUM     DILS
       ,INV_LINE                IL
       ,MDSE                    M
    WHERE
            DILS.GLBL_CMPY_CD           = #glblCmpyCd#
        AND DILS.INV_NUM                = #invNum#
        AND DILS.EZCANCELFLAG           = '0'
        AND IL.GLBL_CMPY_CD             = #glblCmpyCd#
        AND IL.EZCANCELFLAG             = '0'
        AND DILS.INV_NUM                = IL.INV_NUM
        AND DILS.INV_BOL_LINE_NUM       = IL.INV_BOL_LINE_NUM
        AND DILS.INV_LINE_NUM           = IL.INV_LINE_NUM
        AND DILS.INV_LINE_SUB_NUM       = IL.INV_LINE_SUB_NUM
        AND DILS.INV_TRX_LINE_SUB_NUM   = IL.INV_LINE_SUB_TRX_NUM
        AND M.GLBL_CMPY_CD              = #glblCmpyCd#
        AND M.EZCANCELFLAG              = '0'
        AND IL.MDSE_CD                  = M.MDSE_CD
    order by INV_LINE_KEY
    </statement>
    
    <statement id="getConsTermWaitData" parameterClass="Map" resultClass="Map">
         SELECT
             CB.CONSL_BILL_PK               CONS_BILL_NUM
            ,CB.CTOFF_DT                    CONS_BILL_DT
            ,CB.DUE_DT                      CONS_BILL_DUE_DT
            ,CB.BILL_TO_CUST_CD             CONS_BILL_TO_CD
            ,BTC.LOC_NM                     CONS_BILL_TO_NM
            <!-- QC#30491 START -->
            <!-- ,BTC.ADDL_LOC_NM                CONS_BILL_TO_ATTENTION-->
            ,TRIM(TRIM(I.BILL_TO_CTAC_PSN_FIRST_NM || ' ' || I.BILL_TO_CTAC_PSN_MID_NM)
            || ' ' || I.BILL_TO_CTAC_PSN_LAST_NM) CONS_BILL_TO_ATTENTION
            <!-- QC#30491 END -->
            ,BTC.FIRST_LINE_ADDR            CONS_BILL_TO_FST_ADDR
            ,BTC.SCD_LINE_ADDR 
                || BTC.THIRD_LINE_ADDR
                || BTC.FRTH_LINE_ADDR       CONS_BILL_TO_SCD_ADDR
            ,BTC.CTY_ADDR                   CONS_BILL_TO_CTY
            ,BTC.ST_CD                      CONS_BILL_TO_ST
            ,BTC.POST_CD                    CONS_BILL_TO_ZIP_CD
            ,IPC.BILL_TO_DS_ACCT_NUM        CONS_BILL_TO_ACCT
            ,IPC.BILL_TO_DS_ACCT_NM         CONS_BILL_TO_ACCT_NM
            ,CB.BILL_TO_CUST_LOC_NUM        CONS_BILL_TO_LOC_NUM
            ,CB.PMT_TERM_CD                 CONS_TERM_CD
            ,PT.PMT_TERM_NM                 CONS_TERMS
            ,E.EIN_CD                       CONS_REMIT_TO_EIN_CD
            ,RT.LOC_NM                      CONS_REMIT_TO_NM
            ,RT.FIRST_LINE_ADDR             CONS_REMIT_TO_FST_ADDR
            ,RT.SCD_LINE_ADDR 
                || RT.THIRD_LINE_ADDR                  
                || RT.FRTH_LINE_ADDR        CONS_REMIT_TO_SCD_ADDR
            ,RT.CTY_ADDR                    CONS_REMIT_TO_CTY
            ,RT.ST_CD                       CONS_REMIT_TO_ST
            ,RT.POST_CD                     CONS_REMIT_TO_POST
                             
            ,CB.CRAT_PSN_CD                 CONS_CREATE_USER
            ,CB.CRAT_DT                     CONS_CREATE_DT
                             
            ,I.DS_BIZ_AREA_CD              DS_BIZ_AREA_CD
            ,I.LINE_BIZ_TP_CD              LINE_BIZ_TP_CD
           
            ,IPH.FIRST_USG_INV_DESC_TXT     FOOTER_MSG
            ,IPC.INV_NUM                    INV_NUM
            ,I.INV_TP_CD                    INV_TP_CD
            ,IPH.INV_TOT_AMT                INV_AMT
            ,(IPH.INV_TOT_AMT - NVL(IPH.INV_PRE_PMT_AMT, 0))            BALANCE_AMT
            ,IPH.INV_TOT_CHRG_AMT           INV_CHARGE_AMT
            ,IPH.INV_FRT_AMT                FRT_AMT
            ,IPH.INV_FRT_TAX_AMT            TAX_AMT
            ,NVL(IPH.INV_PRE_PMT_AMT, 0)    PRE_PMT_AMT
            ,PTCD.ISTL_PMT_TERM_FLG         ISTL_PMT_TERM_FLG
            ,PTCD.PMT_CC_FLG                PMT_CC_FLG
            ,CASE WHEN NVL(NVL(BTC.DS_TAX_PRNT_TP_CD, DAC.DS_TAX_PRNT_TP_CD), #dsTaxPrntTp10#) = #dsTaxPrntTp10#
                 THEN 'N' ELSE 'Y' END   TAX_DETAIL_FLG
            ,I.DPLY_MDSE_DTL_FLG           DETAIL_DISPLAY_FLG
            ,I.INV_PRT_BAT_TP_CD           BATCH_TP
            ,IR.INV_PRT_BAT_TP_NM           BATCH_TP_NM
            ,IPC.BILL_TO_CUST_CD            BILL_TO_CUST_CD
            ,IPC.INV_PRT_CTRL_REC_CD        CONTROL_REC_CD
            ,I.DS_ORD_CATG_CD              DS_ORD_CATG_CD
            ,I.DS_ORD_TP_CD                DS_ORD_TP_CD
            ,NVL(I.ORD_DT, I.INV_DT)        ORD_DT
            ,IPC.INV_PRT_CTRL_PK            INV_PRT_CTRL_PK
            ,I.INV_FIRST_CMNT_TXT           COMMENT1
            ,I.INV_SCD_CMNT_TXT             COMMENT2
            ,I.INV_THIRD_CMNT_TXT           COMMENT3
            ,I.INV_FRTH_CMNT_TXT            COMMENT4
            ,DIT.INV_PRINT_FLG              INV_PRINT_FLG
            ,CB.PMT_TERM_CASH_DISC_CD
            ,CB.PMT_TERM_CASH_DISC_DESC_TXT
            ,I.SYS_SRC_CD
            ,DECODE(SI.SVC_INV_NUM, NULL, '2', '1')   FORMAT_KEY
            ,I.INV_PRINT_STS_CD
            ,I.PMT_TERM_CD
            ,I.INV_DT
            ,I.INV_TOT_DEAL_NET_AMT - NVL(I.PRE_PMT_AMT,0) BALANCE_DUE
            ,I.CR_REBIL_RSN_CATG_CD CR_REBIL_RSN_CATG_CD
            ,I.CR_CARD_CHRG_CPLT_CD
            ,CCY.CCY_SGN_TXT
        FROM 
             INV_PRT_CTRL           IPC
            ,CONSL_BILL_LINE        CBL
            ,CONSL_BILL             CB
            ,BILL_TO_CUST           BTC
            ,PMT_TERM               PT
            ,REM_TO                 RT
            ,EIN                    E
            ,INV                    I
            ,DS_INV_TP              DIT
            ,INV_PRT_HDR            IPH
            ,PMT_TERM_CASH_DISC     PTCD
            ,INV_PRT_BAT_TP         IR
            ,SVC_INV                SI
            ,SELL_TO_CUST           DAC
            ,CCY                    CCY
        WHERE
                IPC.GLBL_CMPY_CD            = #glblCmpyCd# 
            AND IPC.CONSL_BILL_FLG          = 'Y' 
            AND IPC.INV_OTPT_REQ_FLG        = 'N' 
            AND CBL.GLBL_CMPY_CD            IS NULL
            AND IPC.GLBL_CMPY_CD            = CBL.GLBL_CMPY_CD (+) 
            AND IPC.INV_NUM                 = CBL.CONSL_BILL_TRX_ID (+) 
            AND CBL.GLBL_CMPY_CD            = CB.GLBL_CMPY_CD (+) 
            AND CBL.CONSL_BILL_PK           = CB.CONSL_BILL_PK (+) 
            AND CB.CONSL_PRINT_STS_CD (+)   = #conslPrintStsN# 
            AND CB.GLBL_CMPY_CD             = BTC.GLBL_CMPY_CD (+) 
            AND CB.BILL_TO_CUST_CD          = BTC.BILL_TO_CUST_CD (+) 
            AND CB.GLBL_CMPY_CD             = PT.GLBL_CMPY_CD (+) 
            AND CB.PMT_TERM_CD              = PT.PMT_TERM_CD (+) 
            AND BTC.GLBL_CMPY_CD            = RT.GLBL_CMPY_CD (+) 
            AND BTC.REM_ID                  = RT.REM_ID (+) 
            AND IPC.GLBL_CMPY_CD            = E.GLBL_CMPY_CD 
            AND IPC.GLBL_CMPY_CD            = I.GLBL_CMPY_CD 
            AND IPC.INV_NUM                 = I.INV_NUM 
            AND I.GLBL_CMPY_CD             = IR.GLBL_CMPY_CD(+)
            AND I.INV_PRT_BAT_TP_CD        = IR.INV_PRT_BAT_TP_CD(+)
            AND I.GLBL_CMPY_CD             = DIT.GLBL_CMPY_CD
            AND I.DS_INV_TP_CD             = DIT.DS_INV_TP_CD
            AND IPC.GLBL_CMPY_CD            = IPH.GLBL_CMPY_CD 
            AND IPC.INV_PRT_CTRL_PK         = IPH.INV_PRT_CTRL_PK 
            AND I.GLBL_CMPY_CD              = PTCD.GLBL_CMPY_CD 
            AND I.PMT_TERM_CASH_DISC_CD     = PTCD.PMT_TERM_CASH_DISC_CD 
            AND I.GLBL_CMPY_CD              = SI.GLBL_CMPY_CD (+)
            AND I.INV_NUM                   = SI.SVC_INV_NUM (+)
            AND CB.GLBL_CMPY_CD             = DAC.GLBL_CMPY_CD (+) 
            AND CB.BILL_TO_CUST_ACCT_CD     = DAC.SELL_TO_CUST_CD (+) 
            AND IPC.EZCANCELFLAG            = '0'
            AND CBL.EZCANCELFLAG(+)         = '0'
            AND CB.EZCANCELFLAG(+)          = '0'
            AND BTC.EZCANCELFLAG(+)         = '0'
            AND PT.EZCANCELFLAG(+)          = '0'
            AND RT.EZCANCELFLAG(+)          = '0'
            AND E.EZCANCELFLAG              = '0'
            AND I.EZCANCELFLAG              = '0'
            AND DIT.EZCANCELFLAG            = '0'
            AND IR.EZCANCELFLAG(+)          = '0'
            AND IPH.EZCANCELFLAG            = '0'
            AND PTCD.EZCANCELFLAG           = '0'
            AND SI.EZCANCELFLAG(+)          = '0'
            AND DAC.EZCANCELFLAG(+)         = '0'

            AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
            AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
            AND CCY.EZCANCELFLAG(+)         = '0'
         ORDER BY 
             CB.CONSL_BILL_PK
            ,CBL.CONSL_BILL_TRX_ID
            ,IPC.INV_NUM
    </statement>
    
    <statement id="getConsTermArrvData" parameterClass="Map" resultClass="Map">
         SELECT
             CB.CONSL_BILL_PK               CONS_BILL_NUM
            ,CB.CTOFF_DT                    CONS_BILL_DT
            ,CB.DUE_DT                      CONS_BILL_DUE_DT
            ,CB.BILL_TO_CUST_CD             CONS_BILL_TO_CD
            ,BTC.LOC_NM                     CONS_BILL_TO_NM
            <!-- QC#30491 START -->
            <!-- ,BTC.ADDL_LOC_NM                CONS_BILL_TO_ATTENTION-->
            ,TRIM(TRIM(I.BILL_TO_CTAC_PSN_FIRST_NM || ' ' || I.BILL_TO_CTAC_PSN_MID_NM)
            || ' ' || I.BILL_TO_CTAC_PSN_LAST_NM) CONS_BILL_TO_ATTENTION
            <!-- QC#30491 END -->
            ,BTC.FIRST_LINE_ADDR            CONS_BILL_TO_FST_ADDR
            ,BTC.SCD_LINE_ADDR 
                || BTC.THIRD_LINE_ADDR
                || BTC.FRTH_LINE_ADDR       CONS_BILL_TO_SCD_ADDR
            ,BTC.CTY_ADDR                   CONS_BILL_TO_CTY
            ,BTC.ST_CD                      CONS_BILL_TO_ST
            ,BTC.POST_CD                    CONS_BILL_TO_ZIP_CD
            ,IPC.BILL_TO_DS_ACCT_NUM        CONS_BILL_TO_ACCT
            ,IPC.BILL_TO_DS_ACCT_NM         CONS_BILL_TO_ACCT_NM
            ,CB.BILL_TO_CUST_LOC_NUM        CONS_BILL_TO_LOC_NUM
            ,CB.PMT_TERM_CD                 CONS_TERM_CD
            ,PT.PMT_TERM_NM                 CONS_TERMS
            ,E.EIN_CD                       CONS_REMIT_TO_EIN_CD
            ,RT.LOC_NM                      CONS_REMIT_TO_NM
            ,RT.FIRST_LINE_ADDR             CONS_REMIT_TO_FST_ADDR
            ,RT.SCD_LINE_ADDR 
                || RT.THIRD_LINE_ADDR                  
                || RT.FRTH_LINE_ADDR        CONS_REMIT_TO_SCD_ADDR
            ,RT.CTY_ADDR                    CONS_REMIT_TO_CTY
            ,RT.ST_CD                       CONS_REMIT_TO_ST
            ,RT.POST_CD                     CONS_REMIT_TO_POST
                             
            ,CB.CRAT_PSN_CD                 CONS_CREATE_USER
            ,CB.CRAT_DT                     CONS_CREATE_DT
                             
            ,I.DS_BIZ_AREA_CD              DS_BIZ_AREA_CD
            ,I.LINE_BIZ_TP_CD              LINE_BIZ_TP_CD
           
            ,IPH.FIRST_USG_INV_DESC_TXT     FOOTER_MSG
            ,IPC.INV_NUM                    INV_NUM
            ,I.INV_TP_CD                    INV_TP_CD
            ,IPH.INV_TOT_AMT                INV_AMT
            <!-- QC#21990 -->
            <!-- ,(IPH.INV_TOT_AMT - NVL(IPH.INV_PRE_PMT_AMT, 0))            BALANCE_AMT -->
            ,NVL(ATB.DEAL_RMNG_BAL_GRS_AMT, CASE WHEN I.INV_TP_CD = '2' THEN I.INV_TOT_DEAL_NET_AMT * -1 ELSE I.INV_TOT_DEAL_NET_AMT END)          BALANCE_AMT
            ,IPH.INV_TOT_CHRG_AMT           INV_CHARGE_AMT
            ,IPH.INV_FRT_AMT                FRT_AMT
            ,IPH.INV_FRT_TAX_AMT            TAX_AMT
            ,NVL(IPH.INV_PRE_PMT_AMT, 0)    PRE_PMT_AMT
            ,PTCD.ISTL_PMT_TERM_FLG         ISTL_PMT_TERM_FLG
            ,PTCD.PMT_CC_FLG                PMT_CC_FLG
            ,CASE WHEN NVL(NVL(BTC.DS_TAX_PRNT_TP_CD, DAC.DS_TAX_PRNT_TP_CD), #dsTaxPrntTp10#) = #dsTaxPrntTp10#
                 THEN 'N' ELSE 'Y' END   TAX_DETAIL_FLG
            ,I.DPLY_MDSE_DTL_FLG           DETAIL_DISPLAY_FLG
            <!-- QC#58231 -->
            ,NVL(IPC.INV_PRT_BAT_TP_CD, I.INV_PRT_BAT_TP_CD)           BATCH_TP
            ,NVL(IRPC.INV_PRT_BAT_TP_NM, IR.INV_PRT_BAT_TP_NM)           BATCH_TP_NM
            ,IPC.BILL_TO_CUST_CD            BILL_TO_CUST_CD
            ,IPC.INV_PRT_CTRL_REC_CD        CONTROL_REC_CD
            ,I.DS_ORD_CATG_CD              DS_ORD_CATG_CD
            ,I.DS_ORD_TP_CD                DS_ORD_TP_CD
            ,NVL(I.ORD_DT, I.INV_DT)        ORD_DT
            ,IPC.INV_PRT_CTRL_PK            INV_PRT_CTRL_PK
            ,I.INV_FIRST_CMNT_TXT           COMMENT1
            ,I.INV_SCD_CMNT_TXT             COMMENT2
            ,I.INV_THIRD_CMNT_TXT           COMMENT3
            ,I.INV_FRTH_CMNT_TXT            COMMENT4
            ,DIT.INV_PRINT_FLG              INV_PRINT_FLG
            ,CB.CONSL_DUE_TOT_DEAL_NET_AMT  CONSL_DUE_TOT_DEAL_NET_AMT
            ,CB.CONSL_TOT_DEAL_NET_AMT      CONSL_TOT_DEAL_NET_AMT
            ,CB.PMT_TERM_CASH_DISC_CD PMT_TERM_CASH_DISC_CD
            ,CB.PMT_TERM_CASH_DISC_DESC_TXT PMT_TERM_CASH_DISC_DESC_TXT
            ,LBT.INV_PRINT_MSG_TXT
            ,CCY.CCY_SGN_TXT
            ,SI.SVC_INV_SRC_TP_CD
            ,I.CR_REBIL_RSN_CATG_CD
            ,CB.ORIG_CONSL_BILL_PK
            ,I.CR_CARD_CHRG_CPLT_CD
        FROM 
             INV_PRT_CTRL           IPC
            ,CONSL_BILL_LINE        CBL
            ,CONSL_BILL             CB
            ,BILL_TO_CUST           BTC
            ,PMT_TERM               PT
            ,REM_TO                 RT
            ,EIN                    E
            ,INV                    I
            ,DS_INV_TP              DIT
            ,INV_PRT_HDR            IPH
            ,PMT_TERM_CASH_DISC     PTCD
            ,INV_PRT_BAT_TP         IR
            <!-- QC#58231 -->
            ,INV_PRT_BAT_TP         IRPC
            ,LINE_BIZ_TP            LBT
            ,CCY
            ,SELL_TO_CUST           DAC
            ,SVC_INV                SI
            ,AR_TRX_BAL             ATB  <!-- QC#21990 -->
        WHERE
                IPC.GLBL_CMPY_CD            = #glblCmpyCd# 
            AND IPC.CONSL_BILL_FLG          = 'Y' 
            AND IPC.INV_OTPT_REQ_FLG        = 'N' 
            AND IPC.GLBL_CMPY_CD            = CBL.GLBL_CMPY_CD
            AND IPC.INV_NUM                 = CBL.CONSL_BILL_TRX_ID
            AND CBL.GLBL_CMPY_CD            = CB.GLBL_CMPY_CD
            AND CBL.CONSL_BILL_PK           = CB.CONSL_BILL_PK
            AND CB.CONSL_PRINT_STS_CD       = #conslPrintStsN# 
            AND CB.CONSL_STS_CD             = #conslStsCd10# 
            AND CB.GLBL_CMPY_CD             = BTC.GLBL_CMPY_CD (+) 
            AND CB.BILL_TO_CUST_CD          = BTC.BILL_TO_CUST_CD (+) 
            AND CB.GLBL_CMPY_CD             = PT.GLBL_CMPY_CD (+) 
            AND CB.PMT_TERM_CD              = PT.PMT_TERM_CD (+) 
            AND BTC.GLBL_CMPY_CD            = RT.GLBL_CMPY_CD (+) 
            AND BTC.REM_ID                  = RT.REM_ID (+) 
            AND IPC.GLBL_CMPY_CD            = E.GLBL_CMPY_CD 
            AND IPC.GLBL_CMPY_CD            = I.GLBL_CMPY_CD 
            AND IPC.INV_NUM                 = I.INV_NUM 
            AND IPC.GLBL_CMPY_CD            = SI.GLBL_CMPY_CD(+) 
            AND IPC.INV_NUM                 = SI.SVC_INV_NUM(+) 
            AND I.GLBL_CMPY_CD             = IR.GLBL_CMPY_CD(+)
            AND I.INV_PRT_BAT_TP_CD        = IR.INV_PRT_BAT_TP_CD(+)
            <!-- QC#58231 -->
            AND IPC.GLBL_CMPY_CD             = IRPC.GLBL_CMPY_CD(+)
            AND IPC.INV_PRT_BAT_TP_CD        = IRPC.INV_PRT_BAT_TP_CD(+)
            AND I.GLBL_CMPY_CD             = DIT.GLBL_CMPY_CD
            AND I.DS_INV_TP_CD             = DIT.DS_INV_TP_CD
            AND IPC.GLBL_CMPY_CD            = IPH.GLBL_CMPY_CD 
            AND IPC.INV_PRT_CTRL_PK         = IPH.INV_PRT_CTRL_PK 
            AND I.GLBL_CMPY_CD              = PTCD.GLBL_CMPY_CD 
            AND I.PMT_TERM_CASH_DISC_CD     = PTCD.PMT_TERM_CASH_DISC_CD 
            AND IPC.EZCANCELFLAG            = '0'
            AND CBL.EZCANCELFLAG            = '0'
            AND CB.EZCANCELFLAG             = '0'
            AND BTC.EZCANCELFLAG(+)         = '0'
            AND PT.EZCANCELFLAG(+)          = '0'
            AND RT.EZCANCELFLAG(+)          = '0'
            AND E.EZCANCELFLAG              = '0'
            AND I.EZCANCELFLAG              = '0'
            AND SI.EZCANCELFLAG(+)          = '0'
            AND DIT.EZCANCELFLAG            = '0'
            AND IR.EZCANCELFLAG(+)          = '0'
            <!-- QC#58231 -->
            AND IRPC.EZCANCELFLAG(+)          = '0'
            AND IPH.EZCANCELFLAG            = '0'
            AND PTCD.EZCANCELFLAG           = '0'
            AND I.GLBL_CMPY_CD             = LBT.GLBL_CMPY_CD(+)   
            AND I.LINE_BIZ_TP_CD           = LBT.LINE_BIZ_TP_CD(+)   
            AND LBT.EZCANCELFLAG(+)         = '0'
            AND I.DEAL_CCY_CD               = CCY.CCY_CD
            AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD
            AND CCY.EZCANCELFLAG(+)         = '0'
            AND DAC.EZCANCELFLAG(+)         = '0'
            AND CB.GLBL_CMPY_CD             = DAC.GLBL_CMPY_CD(+)   
            AND CB.BILL_TO_CUST_ACCT_CD     = DAC.SELL_TO_CUST_CD(+)   
            AND I.GLBL_CMPY_CD              = ATB.GLBL_CMPY_CD(+)  <!-- QC#21990 -->
            AND ATB.EZCANCELFLAG(+)         = '0'  <!-- QC#21990 -->
            AND I.INV_NUM                   = ATB.AR_TRX_NUM(+)  <!-- QC#21990 -->
            <isEqual property="procMode" compareValue="01">
            AND NOT EXISTS (SELECT '1' 
                        FROM    INV_PRT_CTRL    IPC
                        WHERE IPC.GLBL_CMPY_CD = CB.GLBL_CMPY_CD
                          AND IPC.CONSL_BILL_NUM = TO_CHAR(CB.CONSL_BILL_PK)
                          AND IPC.INV_NUM IS NULL
                          AND IPC.EZCANCELFLAG = '0')
            </isEqual>
            <isEqual property="procMode" compareValue="02">
            AND EXISTS (SELECT '1' 
                        FROM    INV_PRT_CTRL    IPC
                        WHERE IPC.GLBL_CMPY_CD = CB.GLBL_CMPY_CD
                          AND IPC.CONSL_BILL_NUM = TO_CHAR(CB.CONSL_BILL_PK)
                          AND IPC.INV_NUM IS NULL
                          AND IPC.EZCANCELFLAG = '0')
            </isEqual>
         ORDER BY 
             CB.CONSL_BILL_PK
            ,CBL.CONSL_BILL_TRX_ID
            ,IPC.INV_NUM
    </statement>
    
    <statement id="isInConsolidated" parameterClass="Map" resultClass="Integer">
        SELECT
            COUNT(1) 
        FROM 
            CONSL_BILL_LINE     CBL
        WHERE
                CBL.GLBL_CMPY_CD = #glblCmpyCd#
            AND CBL.CONSL_BILL_TRX_ID   = 
                    (SELECT INV.ORIG_INV_NUM
                     FROM   INV
                     WHERE  INV.GLBL_CMPY_CD = #glblCmpyCd#
                        AND INV.INV_NUM      = #invNum#
                        AND INV.EZCANCELFLAG = '0'      )
            AND CBL.EZCANCELFLAG  = '0'
    </statement>
    <statement id="isCrRebillCollectedInSameBill" parameterClass="Map" resultClass="Integer">
        SELECT 
            COUNT(1)
        FROM 
            AR_CASH_APP A
           ,AR_CASH_APP B
           ,AR_TRX_BAL C
           ,AR_TRX_BAL D
        WHERE 1=1
        AND A.GLBL_CMPY_CD = 'ADB'
        AND A.EZCANCELFLAG = '0'
        AND B.GLBL_CMPY_CD = 'ADB'
        AND B.EZCANCELFLAG = '0'
        AND A.RCPT_NUM = B.RCPT_NUM    <!-- same receipt# -->
        AND B.AR_TRX_NUM = #arTrxNum# 
        AND A.AR_TRX_NUM != #arTrxNum# <!-- not my self -->
        AND C.GLBL_CMPY_CD = 'ADB'
        AND C.EZCANCELFLAG = '0'
        AND A.AR_TRX_BAL_PK = C.AR_TRX_BAL_PK
        AND C.DEAL_RMNG_BAL_GRS_AMT = 0  <!-- Applied invoice AR balance is ZERO -->
        AND D.GLBL_CMPY_CD = 'ADB'
        AND D.EZCANCELFLAG = '0'
        AND B.AR_TRX_BAL_PK = D.AR_TRX_BAL_PK
        AND D.DEAL_RMNG_BAL_GRS_AMT = 0  <!-- My AR balance is ZERO -->
        AND (C.ORIG_INV_NUM = D.ORIG_INV_NUM  <!-- Applied btw Credit Memo and Rebill -->
        OR B.AR_TRX_NUM = C.ORIG_INV_NUM      <!-- Applied from Original to Credit Memo -->
        OR D.ORIG_INV_NUM = A.AR_TRX_NUM)     <!-- Applied from Credit Memo to Original -->
        AND A.DEAL_APPLY_AMT + B.DEAL_APPLY_AMT = 0
        <!-- Same Consolidated Bill# -->
        AND EXISTS (SELECT '1' FROM CONSL_BILL_LINE CBL
                    WHERE CBL.GLBL_CMPY_CD = 'ADB'
                    AND CBL.EZCANCELFLAG = '0'
                    AND TO_CHAR(CBL.CONSL_BILL_PK) = #conslBillNum#
                    AND CBL.CONSL_BILL_TRX_ID = A.AR_TRX_NUM)
    </statement>
    <statement id="isOrigOrCreditInvoice" parameterClass="Map" resultClass="Integer">
        SELECT COUNT(1) 
        FROM  CONSL_BILL_LINE CBL
        WHERE CBL.GLBL_CMPY_CD           = #glblCmpyCd#
        AND   CBL.EZCANCELFLAG           = '0'
        AND   TO_CHAR(CBL.CONSL_BILL_PK) = #conslBillNum#
        AND   CBL.CONSL_BILL_TRX_ID      = #invNum#
        AND(
            EXISTS ( 
              SELECT
                1 
              FROM
                INV I 
              WHERE
                I.GLBL_CMPY_CD     = CBL.GLBL_CMPY_CD 
                AND I.EZCANCELFLAG = CBL.EZCANCELFLAG 
                AND I.INV_NUM      = CBL.CONSL_BILL_TRX_ID 
                AND I.ORIG_INV_NUM IS NOT NULL 
                AND I.INV_TP_CD    = #invTpCd#
            ) 
            OR EXISTS ( 
              SELECT
                1 
              FROM
                INV I 
              WHERE
                I.GLBL_CMPY_CD     = CBL.GLBL_CMPY_CD 
                AND I.EZCANCELFLAG = CBL.EZCANCELFLAG 
                AND I.ORIG_INV_NUM = CBL.CONSL_BILL_TRX_ID
            )
        )
    </statement>
    <statement id="getSpecialBillFlg" parameterClass="Map" resultClass="String">
        SELECT
            CB.INV_SPCL_BILL_FLG
        FROM 
            CUST_BLLG_VCLE  CB
        WHERE
                CB.CUST_BLLG_VCLE_CD    = #vehicle#
            AND CB.GLBL_CMPY_CD         = #glblCmpyCd#
            AND CB.EZCANCELFLAG         = '0'  
    </statement>
    <statement id="getFleetPkForUpdate" parameterClass="Map" resultClass="Map">
        SELECT
             IRF.INV_PRT_FLEET_SUB_TOT_PK
            ,INV.INV_TP_CD
            ,TO_CHAR(IRF.DS_CONTR_PK) DS_CONTR_PK
            ,INITCAP(IRF.SVC_PGM_NM) SVC_PGM_NM
            ,IRF.CUST_ISS_PO_NUM
        FROM
            INV_PRT_FLEET_SUB_TOT       IRF
            ,INV                        INV
        WHERE
                IRF.CONSL_BILL_NUM  = #consBillNum#
            AND IRF.INV_NUM         = INV.INV_NUM
            AND IRF.GLBL_CMPY_CD    = #glblCmpyCd#
            AND IRF.GLBL_CMPY_CD    = INV.GLBL_CMPY_CD
            AND IRF.EZCANCELFLAG    = '0'
            AND INV.EZCANCELFLAG    = '0'
        ORDER BY 
             INV.INV_TP_CD
            ,TO_CHAR(IRF.DS_CONTR_PK)
            ,INITCAP(IRF.SVC_PGM_NM)
            ,IRF.CUST_ISS_PO_NUM
    </statement>


    <statement id="getMaintPkForUpdate" parameterClass="Map" resultClass="Map">
        SELECT
             IRM.INV_PRT_MAINT_SUB_TOT_PK
            ,INV.INV_TP_CD
            ,IRM.SHIP_TO_CUST_CD
            ,IRM.CUST_ISS_PO_NUM
            ,IRM.FIRST_BLLG_ATTRB_VAL_TXT
            ,IRM.SCD_BLLG_ATTRB_VAL_TXT
            ,IRM.THIRD_BLLG_ATTRB_VAL_TXT
            ,IRM.FRTH_BLLG_ATTRB_VAL_TXT
            ,IRM.FIFTH_BLLG_ATTRB_VAL_TXT
            ,IRM.SIXTH_BLLG_ATTRB_VAL_TXT
        FROM
             INV_PRT_MAINT_SUB_TOT      IRM
            ,INV                        INV
        WHERE
                IRM.CONSL_BILL_NUM  = #consBillNum#
            AND IRM.INV_NUM         = INV.INV_NUM
            AND IRM.GLBL_CMPY_CD    = #glblCmpyCd#
            AND IRM.EZCANCELFLAG    = '0'
            AND IRM.GLBL_CMPY_CD    = INV.GLBL_CMPY_CD
            AND INV.EZCANCELFLAG    = '0'
        ORDER BY 
             INV.INV_TP_CD
            ,IRM.SHIP_TO_CUST_CD
            ,IRM.CUST_ISS_PO_NUM
            ,IRM.FIRST_BLLG_ATTRB_VAL_TXT
            ,IRM.SCD_BLLG_ATTRB_VAL_TXT
            ,IRM.THIRD_BLLG_ATTRB_VAL_TXT
            ,IRM.FRTH_BLLG_ATTRB_VAL_TXT
            ,IRM.FIFTH_BLLG_ATTRB_VAL_TXT
            ,IRM.SIXTH_BLLG_ATTRB_VAL_TXT
    </statement>

    <statement id="getInvPrtCtrlPk" parameterClass="Map" resultClass="Map">
        SELECT
            IPC.INV_PRT_CTRL_PK
           ,IPC.CONSL_BILL_NUM
           ,IPC.CONSL_BILL_INV_DT
           ,IPC.CONSL_BILL_TOT_AMT
           ,IPC.CONSL_BILL_INV_CRAT_PSN_CD
           ,IPC.ORIG_CONSL_BILL_NUM
        FROM
            INV_PRT_CTRL IPC
        WHERE
            IPC.GLBL_CMPY_CD    = #glblCmpyCd#
        AND IPC.EZCANCELFLAG    = '0'
        AND IPC.INV_NUM         = #invNum#
    </statement>
    <statement id="getInvPrtCtrlPkForCons" parameterClass="Map" resultClass="Map">
        SELECT
            IPC.INV_PRT_CTRL_PK
        FROM
            INV_PRT_CTRL IPC
        WHERE
            IPC.GLBL_CMPY_CD    = #glblCmpyCd#
        AND IPC.EZCANCELFLAG    = '0'
        AND IPC.INV_NUM         IS NULL
        AND IPC.CONSL_BILL_NUM  = #conslBillNum#
    </statement>

    <statement id="getConslLine" parameterClass="Map" resultClass="String">
        SELECT
            CBL.CONSL_BILL_TRX_ID INV_NUM
        FROM
            CONSL_BILL_LINE CBL
        WHERE
            CBL.GLBL_CMPY_CD    = #glblCmpyCd#
        AND CBL.EZCANCELFLAG    = '0'
        AND CBL.CONSL_BILL_PK   = #conslBillPk#
    </statement>

    <statement id="getArTrxBalPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            ATB.AR_TRX_BAL_PK
        FROM
            AR_TRX_BAL ATB
        WHERE
            ATB.GLBL_CMPY_CD    = #glblCmpyCd#
        AND ATB.AR_TRX_NUM      = #invNum#
        AND ATB.EZCANCELFLAG    = '0'
    </statement>

    <statement id="getSummaryForConsol" parameterClass="Map" resultClass="Map">
        WITH PARTS_LABOR AS(
        SELECT
            '4' SORT_TYPE,  <!-- QC#26826 -->
            CASE WHEN M_H.COA_PROD_CD LIKE #prodCd# THEN #invSmryLineTpNmNC#
                WHEN M_H.COA_MDSE_TP_CD = #coaMdseTpCd# THEN #invSmryLineTpNmNC#
                ELSE #invSmryLineTpNmC#  END          PRODUCT_TYPE
           ,CASE WHEN I.INV_TP_CD = '2' THEN IL.INV_DPLY_QTY * -1 ELSE IL.INV_DPLY_QTY END QTY
           ,NULL                               BASE_CHARGE 
           ,NULL                               ATTACHMENT_CHARGE 
           ,NULL                               USAGE_CHARGE 
           ,CASE WHEN I.INV_TP_CD = '2' THEN IL.INV_LINE_DEAL_NET_AMT * -1 ELSE IL.INV_LINE_DEAL_NET_AMT END AMOUNT
           <isEqual property="taxDtlFlg" compareValue="N">
           ,NULL                               STATE_TAX 
           ,NULL                               COUNTY_TAX 
           ,NULL                               CITY_TAX 
           </isEqual>
           <isNotEqual property="taxDtlFlg" compareValue="N"> 
           ,CASE WHEN I.INV_TP_CD = '2' THEN DILTD1.DEAL_SLS_TAX_AMT * -1 ELSE DILTD1.DEAL_SLS_TAX_AMT END STATE_TAX 
           <!-- QC#50882 2019/06/20 Mod -->
           <!-- ,CASE WHEN I.INV_TP_CD = '2' THEN DILTD1.DEAL_SLS_TAX_AMT * -1 ELSE DILTD1.DEAL_SLS_TAX_AMT END COUNTY_TAX -->
           <!-- ,CASE WHEN I.INV_TP_CD = '2' THEN DILTD1.DEAL_SLS_TAX_AMT * -1 ELSE DILTD1.DEAL_SLS_TAX_AMT END CITY_TAX -->
           ,CASE WHEN I.INV_TP_CD = '2' THEN DILTD2.DEAL_SLS_TAX_AMT * -1 ELSE DILTD2.DEAL_SLS_TAX_AMT END COUNTY_TAX 
           ,CASE WHEN I.INV_TP_CD = '2' THEN DILTD3.DEAL_SLS_TAX_AMT * -1 ELSE DILTD3.DEAL_SLS_TAX_AMT END CITY_TAX 
           </isNotEqual>
           ,CASE WHEN I.INV_TP_CD = '2' THEN IL.INV_LINE_DEAL_TAX_AMT * -1 ELSE IL.INV_LINE_DEAL_TAX_AMT END TOTAL_TAX 
           ,CASE WHEN I.INV_TP_CD = '2' THEN (IL.INV_LINE_DEAL_NET_AMT + IL.INV_LINE_DEAL_TAX_AMT) * -1 ELSE (IL.INV_LINE_DEAL_NET_AMT + IL.INV_LINE_DEAL_TAX_AMT) END SUBTOTALS 
           ,CCY.CCY_SGN_TXT
        FROM
            CONSL_BILL_LINE        CBL
           <!-- 2018/08/21 QC#27684 Mod Start -->
           <!-- ,INV                    I -->
           ,(
                SELECT
                      INV_NUM,
                      CASE SYS_SRC_CD
                         WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                         ELSE INV_NUM
                      END  AS SVC_INV_NUM,
                      GLBL_CMPY_CD,
                      EZCANCELFLAG,
                      DEAL_CCY_CD,
                      INV_TP_CD
                FROM
                      INV
           ) I
           <!-- 2018/08/21 QC#27684 Mod End -->
           ,SVC_INV                SI
           ,INV_LINE               IL
           <!-- ,SVC_INV_LINE           SIL  --> <!-- 2020/03/18 QC#56281 Del -->
           ,ALL_MDSE_V             M_H
           ,DS_INV_LINE_TAX_DTL    DILTD1
           ,DS_INV_LINE_TAX_DTL    DILTD2
           ,DS_INV_LINE_TAX_DTL    DILTD3
           ,CCY
        WHERE
            CBL.CONSL_BILL_PK           = #conslBillPk#
        AND CBL.GLBL_CMPY_CD            = #glblCmpyCd#
        AND CBL.EZCANCELFLAG            = '0'
        AND CBL.CONSL_BILL_TRX_ID       = I.INV_NUM
        AND CBL.GLBL_CMPY_CD            = I.GLBL_CMPY_CD
        AND CBL.EZCANCELFLAG            = I.EZCANCELFLAG
        AND I.GLBL_CMPY_CD              = SI.GLBL_CMPY_CD
        <!-- 2018/08/21 QC#27684 Mod Start -->
        <!--
        AND ((     I.SYS_SRC_CD    &lt;&gt; #sysSrcCdNFC#    
               AND I.INV_NUM       = SI.SVC_INV_NUM )
           OR  (I.SYS_SRC_CD        = #sysSrcCdNFC# 
               AND I.ORIG_INV_NUM    = SI.SVC_INV_NUM )
           )
        -->
        AND I.SVC_INV_NUM               = SI.SVC_INV_NUM
        <!-- 2018/08/21 QC#27684 Mod End -->
        AND SI.EZCANCELFLAG             = '0' 
        AND I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD
        AND I.INV_NUM                   = IL.INV_NUM
        AND IL.EZCANCELFLAG             = '0' 
        <!-- 2020/03/18 QC#56281 Mod Start -->
        <!-- AND IL.GLBL_CMPY_CD             = SIL.GLBL_CMPY_CD  -->
        <!-- AND IL.INV_NUM                  = SIL.SVC_INV_NUM  -->
        <!-- AND IL.SVC_INV_LINE_PK          = SIL.SVC_INV_LINE_PK  -->
        <!-- AND SIL.EZCANCELFLAG            = '0'   -->
        <!-- 2020/03/18 QC#56281 Mod End -->
        AND SI.SVC_INV_SRC_TP_CD        = #siSrcTpCdDSPT#
        AND SI.GLBL_CMPY_CD             = M_H.GLBL_CMPY_CD (+)
        AND SI.MDSE_CD                  = M_H.MDSE_CD (+)
        AND M_H.EZCANCELFLAG(+)         = '0' 
        AND IL.GLBL_CMPY_CD            = DILTD1.GLBL_CMPY_CD(+)
        AND IL.INV_NUM                 = DILTD1.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM        = DILTD1.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM            = DILTD1.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM        = DILTD1.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM    = DILTD1.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD1.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd01#
        AND DILTD1.EZCANCELFLAG(+)      = '0' 
        AND IL.GLBL_CMPY_CD            = DILTD2.GLBL_CMPY_CD(+)
        AND IL.INV_NUM                 = DILTD2.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM        = DILTD2.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM            = DILTD2.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM        = DILTD2.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM    = DILTD2.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD2.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd02#
        AND DILTD2.EZCANCELFLAG(+)      = '0' 
        AND IL.GLBL_CMPY_CD            = DILTD3.GLBL_CMPY_CD(+)
        AND IL.INV_NUM                 = DILTD3.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM        = DILTD3.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM            = DILTD3.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM        = DILTD3.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM    = DILTD3.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD3.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd03#
        AND DILTD3.EZCANCELFLAG(+)      = '0' 
        AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
        AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
        AND CCY.EZCANCELFLAG(+)         = '0' 
        AND EXISTS (
                SELECT
                    '1'
                FROM
                    INV_PRT_CTRL IPC
                    , INV_PRT_HDR IPH <!-- QC#53014 2019/09/17 Add -->
                WHERE
                        IPC.GLBL_CMPY_CD    = CBL.GLBL_CMPY_CD
                    AND IPC.INV_NUM         = CBL.CONSL_BILL_TRX_NUM
                    AND IPC.CONSL_BILL_NUM  = CBL.CONSL_BILL_PK
                    AND IPC.CONSL_BILL_FLG  = 'Y'
                    AND IPC.EZCANCELFLAG    = '0' 
                    <!-- QC#53014 2019/09/17 Add -->
                    AND IPC.GLBL_CMPY_CD = IPH.GLBL_CMPY_CD
                    AND IPC.INV_PRT_CTRL_PK = IPH.INV_PRT_CTRL_PK
                    AND (IPH.EXCL_BILL_TXT = 'NO' OR IPH.EXCL_BILL_TXT IS NULL)
            )
        )
       ,SALES_SUPPLY AS (
           SELECT
               <!-- QC#26826 -->
               CASE WHEN M_B.MDSE_CD IS NOT NULL THEN 
                   CASE WHEN M_B.COA_PROD_CD LIKE #prodCd# THEN 
                       '3-2'
                   WHEN M_B.COA_MDSE_TP_CD = #coaMdseTpCd# THEN 
                       '3-2'
                   ELSE 
                       CASE WHEN IL.BASE_CMPT_FLG = 'Y' THEN 
                           CASE WHEN IL.MDL_NM IS NOT NULL AND INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) = 0 THEN
                               '3-1'
                           WHEN IL.MDL_NM IS NOT NULL THEN
                               '3-1'
                           ELSE
                               '3-2'
                           END
                       ELSE
              CASE WHEN EXISTS(SELECT '1' FROM ORD_CATG_BIZ_CTX OCB
                          WHERE OCB.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                          <!-- QC#26846 -->
                          AND   OCB.ORD_CATG_CTX_TP_CD= #ordCatgCtxTpParts# 
                          AND   OCB.DS_ORD_CATG_CD    = I.DS_ORD_CATG_CD
                          AND  (OCB.DS_ORD_TP_CD      is null
                          OR    OCB.DS_ORD_TP_CD      = I.DS_ORD_TP_CD)
                          AND  (OCB.DS_ORD_RSN_CD     is null
                          OR    OCB.DS_ORD_RSN_CD     = I.DS_ORD_RSN_CD)
                              AND   OCB.EZCANCELFLAG      = '0') THEN 
                              '3-3-3'
                   WHEN EXISTS(SELECT '1' FROM ORD_CATG_BIZ_CTX OCB
                          WHERE OCB.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                          <!-- 2018/09/05 QC#28048 Mod Start -->
                          <!-- AND   OCB.ORD_CATG_CTX_TP_CD= #ordCatgCtxTp# -->
                          AND   OCB.ORD_CATG_CTX_TP_CD IN (#ordCatgCtxTp#, #easyPac1#)
                          <!-- 2018/09/05 QC#28048 Mod End -->
                          AND   OCB.DS_ORD_CATG_CD    = I.DS_ORD_CATG_CD
                          AND  (OCB.DS_ORD_TP_CD      is null
                          OR    OCB.DS_ORD_TP_CD      = I.DS_ORD_TP_CD)
                          AND  (OCB.DS_ORD_RSN_CD     is null
                          OR    OCB.DS_ORD_RSN_CD     = I.DS_ORD_RSN_CD)
                              AND   OCB.EZCANCELFLAG      = '0') THEN 
                              '3-3-2'
                          ELSE
                              '3-3' 
                          END
                       END 
                   END
               ELSE  
                   CASE WHEN M.COA_PROD_CD LIKE #prodCd# THEN 
                       '3-2'
                   WHEN M.COA_MDSE_TP_CD = #coaMdseTpCd# THEN 
                       '3-2'
                   ELSE 
                       CASE WHEN IL.BASE_CMPT_FLG = 'Y' THEN 
                           CASE WHEN IL.MDL_NM IS NOT NULL AND INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) = 0 THEN
                               '3-1'
                           WHEN IL.MDL_NM IS NOT NULL THEN
                               '3-1'
                           ELSE
                               '3-2'
                           END
                       ELSE
              CASE WHEN EXISTS(SELECT '1' FROM ORD_CATG_BIZ_CTX OCB
                          WHERE OCB.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                          <!-- QC#26846 -->
                          AND   OCB.ORD_CATG_CTX_TP_CD= #ordCatgCtxTpParts# 
                          AND   OCB.DS_ORD_CATG_CD    = I.DS_ORD_CATG_CD
                          AND  (OCB.DS_ORD_TP_CD      is null
                          OR    OCB.DS_ORD_TP_CD      = I.DS_ORD_TP_CD)
                          AND  (OCB.DS_ORD_RSN_CD     is null
                          OR    OCB.DS_ORD_RSN_CD     = I.DS_ORD_RSN_CD)
                               AND   OCB.EZCANCELFLAG      = '0') THEN 
                               '3-3-3'
                   WHEN EXISTS(SELECT '1' FROM ORD_CATG_BIZ_CTX OCB
                          WHERE OCB.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                          <!-- 2018/09/05 QC#28048 Mod Start -->
                          <!-- AND   OCB.ORD_CATG_CTX_TP_CD= #ordCatgCtxTp# -->
                          AND   OCB.ORD_CATG_CTX_TP_CD IN (#ordCatgCtxTp#, #easyPac1#)
                          <!-- 2018/09/05 QC#28048 Mod End -->
                          AND   OCB.DS_ORD_CATG_CD    = I.DS_ORD_CATG_CD
                          AND  (OCB.DS_ORD_TP_CD      is null
                          OR    OCB.DS_ORD_TP_CD      = I.DS_ORD_TP_CD)
                          AND  (OCB.DS_ORD_RSN_CD     is null
                          OR    OCB.DS_ORD_RSN_CD     = I.DS_ORD_RSN_CD)
                               AND   OCB.EZCANCELFLAG      = '0') THEN 
                               '3-3-2'
                           ELSE 
                               '3-3' 
                           END
                       END
                   END 
               END
               SORT_TYPE,
           
               CASE WHEN EXISTS(SELECT '1' FROM ORD_CATG_BIZ_CTX OCB
                          WHERE OCB.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                          <!-- QC#26846 -->
                          AND   OCB.ORD_CATG_CTX_TP_CD= #ordCatgCtxTpParts# 
                          AND   OCB.DS_ORD_CATG_CD    = I.DS_ORD_CATG_CD
                          AND  (OCB.DS_ORD_TP_CD      is null
                          OR    OCB.DS_ORD_TP_CD      = I.DS_ORD_TP_CD)
                          AND  (OCB.DS_ORD_RSN_CD     is null
                          OR    OCB.DS_ORD_RSN_CD     = I.DS_ORD_RSN_CD)
                          AND   OCB.EZCANCELFLAG      = '0')
                   THEN #ordClsPARTS# 
                   WHEN EXISTS(SELECT '1' FROM ORD_CATG_BIZ_CTX OCB
                          WHERE OCB.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                          <!-- 2018/09/05 QC#28048 Mod Start -->
                          <!-- AND   OCB.ORD_CATG_CTX_TP_CD= #ordCatgCtxTp# -->
                          AND   OCB.ORD_CATG_CTX_TP_CD IN (#ordCatgCtxTp#, #easyPac1#)
                          <!-- 2018/09/05 QC#28048 Mod End -->
                          AND   OCB.DS_ORD_CATG_CD    = I.DS_ORD_CATG_CD
                          AND  (OCB.DS_ORD_TP_CD      is null
                          OR    OCB.DS_ORD_TP_CD      = I.DS_ORD_TP_CD)
                          AND  (OCB.DS_ORD_RSN_CD     is null
                          OR    OCB.DS_ORD_RSN_CD     = I.DS_ORD_RSN_CD)
                          AND   OCB.EZCANCELFLAG      = '0')
                   THEN #ordClsSUPL# 
               ELSE #ordClsSL# END                               SOURCE 
              <!--  ,CASE WHEN I.CR_REBIL_RSN_CATG_CD IS NOT NULL THEN 
                  #creditAndOdRebill#-->
              ,CASE WHEN M.MDSE_CD = #varCharConst2# AND EXISTS(SELECT '1' FROM ORD_CATG_BIZ_CTX OCB
                          WHERE OCB.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                          AND   OCB.ORD_CATG_CTX_TP_CD IN (#easyPac1#, #easyPac1Return#) 
                          AND   OCB.DS_ORD_CATG_CD    = I.DS_ORD_CATG_CD
                          AND  (OCB.DS_ORD_TP_CD      is null
                          OR    OCB.DS_ORD_TP_CD      = I.DS_ORD_TP_CD)
                          AND  (OCB.DS_ORD_RSN_CD     is null
                          OR    OCB.DS_ORD_RSN_CD     = I.DS_ORD_RSN_CD)
                          AND   OCB.EZCANCELFLAG      = '0') THEN 
                  NVL(#varCharConst1#, #shortFall#)
               WHEN M_B.MDSE_CD IS NOT NULL THEN 
                   CASE WHEN M_B.COA_PROD_CD LIKE #prodCd# THEN #invSmryLineTpNmNC#
                   WHEN M_B.COA_MDSE_TP_CD = #coaMdseTpCd# THEN #invSmryLineTpNmNC#
                   ELSE 
                       CASE WHEN IL.BASE_CMPT_FLG = 'Y' THEN 
                           CASE WHEN IL.MDL_NM IS NOT NULL AND INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) = 0 THEN
                               #invSmryLineTpNmC# || '-' || IL.MDL_NM  
                           WHEN IL.MDL_NM IS NOT NULL THEN
                               IL.MDL_NM  
                           ELSE
                               #invSmryLineTpNmC#
                           END
                       ELSE
                           CASE WHEN NOT EXISTS(SELECT '1' FROM ORD_CATG_BIZ_CTX OCB
                               WHERE OCB.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                               <!-- 2018/09/05 QC#28048 Mod Start -->
                               <!-- AND   OCB.ORD_CATG_CTX_TP_CD= #ordCatgCtxTp# -->
                               AND   OCB.ORD_CATG_CTX_TP_CD IN (#ordCatgCtxTpNoConfig#, #easyPac1#)
                               <!-- 2018/09/05 QC#28048 Mod End -->
                               AND   OCB.DS_ORD_CATG_CD    = I.DS_ORD_CATG_CD
                               AND  (OCB.DS_ORD_TP_CD      is null
                               OR    OCB.DS_ORD_TP_CD      = I.DS_ORD_TP_CD)
                               AND  (OCB.DS_ORD_RSN_CD     is null
                               OR    OCB.DS_ORD_RSN_CD     = I.DS_ORD_RSN_CD)
                               AND   OCB.EZCANCELFLAG      = '0') AND INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) = 0 THEN
                               #invSmryLineTpNmC# || '-ATTACHMENT'
                           WHEN NOT EXISTS(SELECT '1' FROM ORD_CATG_BIZ_CTX OCB
                               WHERE OCB.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                               <!-- 2018/09/05 QC#28048 Mod Start -->
                               <!-- AND   OCB.ORD_CATG_CTX_TP_CD= #ordCatgCtxTp# -->
                               AND   OCB.ORD_CATG_CTX_TP_CD IN (#ordCatgCtxTpNoConfig#, #easyPac1#)
                               <!-- 2018/09/05 QC#28048 Mod End -->
                               AND   OCB.DS_ORD_CATG_CD    = I.DS_ORD_CATG_CD
                               AND  (OCB.DS_ORD_TP_CD      is null
                               OR    OCB.DS_ORD_TP_CD      = I.DS_ORD_TP_CD)
                               AND  (OCB.DS_ORD_RSN_CD     is null
                               OR    OCB.DS_ORD_RSN_CD     = I.DS_ORD_RSN_CD)
                               AND   OCB.EZCANCELFLAG      = '0') THEN
                               'ATTACHMENT'
                           WHEN 
                           EXISTS (SELECT '1' FROM ORD_CATG_BIZ_CTX OCB
                          WHERE OCB.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                          AND   OCB.ORD_CATG_CTX_TP_CD IN (#easyPac1#, #easyPac1Return#) 
                          AND   OCB.DS_ORD_CATG_CD    = I.DS_ORD_CATG_CD
                          AND  (OCB.DS_ORD_TP_CD      is null
                          OR    OCB.DS_ORD_TP_CD      = I.DS_ORD_TP_CD)
                          AND  (OCB.DS_ORD_RSN_CD     is null
                          OR    OCB.DS_ORD_RSN_CD     = I.DS_ORD_RSN_CD)
                          AND   OCB.EZCANCELFLAG      = '0') OR
                          INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) = 0 AND
                           (select count(ORD_CATG_BIZ_CTX_PK) from ORD_CATG_BIZ_CTX 
            WHERE EZCANCELFLAG = '0' 
            AND GLBL_CMPY_CD = I.GLBL_CMPY_CD AND ORD_CATG_CTX_TP_CD = 'INV_PRT_SUPPLIES_ORDER'
            AND DS_ORD_CATG_CD = I.DS_ORD_CATG_CD
            AND (DS_ORD_TP_CD = I.DS_ORD_TP_CD OR DS_ORD_TP_CD IS NULL)) &lt;= 0 THEN
                               #invSmryLineTpNmC#
                           ELSE
                               ''
                           END
                       END 
                   END
               ELSE  
                   CASE WHEN M.COA_PROD_CD LIKE #prodCd# THEN #invSmryLineTpNmNC#
                   WHEN M.COA_MDSE_TP_CD = #coaMdseTpCd# THEN #invSmryLineTpNmNC#
                   ELSE 
                       CASE WHEN IL.BASE_CMPT_FLG = 'Y' THEN 
                           CASE WHEN IL.MDL_NM IS NOT NULL AND INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) = 0 THEN
                               #invSmryLineTpNmC# || '-' || IL.MDL_NM
                           WHEN IL.MDL_NM IS NOT NULL THEN
                               IL.MDL_NM
                           ELSE
                               #invSmryLineTpNmC#
                           END
                       ELSE
                           CASE WHEN NOT EXISTS(SELECT '1' FROM ORD_CATG_BIZ_CTX OCB
                               WHERE OCB.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                               <!-- 2018/09/05 QC#28048 Mod Start -->
                               <!-- AND   OCB.ORD_CATG_CTX_TP_CD= #ordCatgCtxTp# -->
                               AND   OCB.ORD_CATG_CTX_TP_CD IN (#ordCatgCtxTpNoConfig#, #easyPac1#)
                               <!-- 2018/09/05 QC#28048 Mod End -->
                               AND   OCB.DS_ORD_CATG_CD    = I.DS_ORD_CATG_CD
                               AND  (OCB.DS_ORD_TP_CD      is null
                               OR    OCB.DS_ORD_TP_CD      = I.DS_ORD_TP_CD)
                               AND  (OCB.DS_ORD_RSN_CD     is null
                               OR    OCB.DS_ORD_RSN_CD     = I.DS_ORD_RSN_CD)
                               AND   OCB.EZCANCELFLAG      = '0') AND INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) = 0 
                             THEN 
                               #invSmryLineTpNmC# || '-ATTACHMENT'
                           WHEN NOT EXISTS(SELECT '1' FROM ORD_CATG_BIZ_CTX OCB
                               WHERE OCB.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                               <!-- 2018/09/05 QC#28048 Mod Start -->
                               <!-- AND   OCB.ORD_CATG_CTX_TP_CD= #ordCatgCtxTp# -->
                               AND   OCB.ORD_CATG_CTX_TP_CD IN (#ordCatgCtxTpNoConfig#, #easyPac1#)
                               <!-- 2018/09/05 QC#28048 Mod End -->
                               AND   OCB.DS_ORD_CATG_CD    = I.DS_ORD_CATG_CD
                               AND  (OCB.DS_ORD_TP_CD      is null
                               OR    OCB.DS_ORD_TP_CD      = I.DS_ORD_TP_CD)
                               AND  (OCB.DS_ORD_RSN_CD     is null
                               OR    OCB.DS_ORD_RSN_CD     = I.DS_ORD_RSN_CD)
                               AND   OCB.EZCANCELFLAG      = '0') 
                             THEN
                               'ATTACHMENT'
                           WHEN 
                             EXISTS (
                               SELECT '1' FROM ORD_CATG_BIZ_CTX OCB
                               WHERE OCB.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                               AND   OCB.ORD_CATG_CTX_TP_CD IN (#easyPac1#, #easyPac1Return#) 
                               AND   OCB.DS_ORD_CATG_CD    = I.DS_ORD_CATG_CD
                               AND  (OCB.DS_ORD_TP_CD      IS NULL
                                OR    OCB.DS_ORD_TP_CD      = I.DS_ORD_TP_CD)
                               AND  (OCB.DS_ORD_RSN_CD     IS NULL
                                OR    OCB.DS_ORD_RSN_CD     = I.DS_ORD_RSN_CD)
                               AND   OCB.EZCANCELFLAG      = '0') 
                                OR  INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) = 0
                               AND
                                 ( SELECT COUNT(ORD_CATG_BIZ_CTX_PK) FROM ORD_CATG_BIZ_CTX 
                                    WHERE EZCANCELFLAG = '0' 
                                    AND GLBL_CMPY_CD = I.GLBL_CMPY_CD 
                                    AND ORD_CATG_CTX_TP_CD = 'INV_PRT_SUPPLIES_ORDER'
                                    AND DS_ORD_CATG_CD = I.DS_ORD_CATG_CD
                                    AND (DS_ORD_TP_CD = I.DS_ORD_TP_CD OR DS_ORD_TP_CD IS NULL)
                                  ) &lt;= 0 
                             THEN
                               #invSmryLineTpNmC#
                             ELSE
                               ''
                           END
                       END
                   END 
               END                                                  PRODUCT_TYPE
               <isEqual property="isEasyPac1Flg" compareValue="true">
              ,CASE WHEN IL.INV_LINE_CATG_CD = #invLineCatgFreight# THEN 0  <!-- QC#29371 -->
                    WHEN I.INV_TP_CD = '2' THEN NVL(IL.SPLY_PGM_SHIP_QTY, IL.SHIP_QTY) * -1 ELSE NVL(IL.SPLY_PGM_SHIP_QTY, IL.SHIP_QTY) END QTY
               </isEqual>
               <isNotEqual property="isEasyPac1Flg" compareValue="true"> 
              ,CASE WHEN IL.INV_LINE_CATG_CD = #invLineCatgFreight# THEN 0  <!-- QC#29371 -->
                    WHEN I.INV_TP_CD = '2' THEN NVL(IL.INV_DPLY_QTY, IL.SHIP_QTY) * -1 ELSE NVL(IL.INV_DPLY_QTY, IL.SHIP_QTY) END QTY 
               </isNotEqual>
               <isEqual property="dtlDplyFlg" compareValue="Y">
              ,CASE WHEN I.INV_TP_CD = '2' THEN IL.INV_LINE_DEAL_NET_AMT * -1 ELSE IL.INV_LINE_DEAL_NET_AMT END AMOUNT 
               </isEqual>
               <isNotEqual property="dtlDplyFlg" compareValue="Y"> 
              ,NULL                                                       AMOUNT
               </isNotEqual>
               <isEqual property="taxDtlFlg" compareValue="N">
              ,NULL                           STATE_TAX 
              ,NULL                           COUNTY_TAX 
              ,NULL                           CITY_TAX 
               </isEqual>
               <isNotEqual property="taxDtlFlg" compareValue="N"> 
              ,CASE WHEN I.INV_TP_CD = '2' THEN DILTD1.DEAL_SLS_TAX_AMT * -1 ELSE DILTD1.DEAL_SLS_TAX_AMT END STATE_TAX 
              ,CASE WHEN I.INV_TP_CD = '2' THEN DILTD2.DEAL_SLS_TAX_AMT * -1 ELSE DILTD2.DEAL_SLS_TAX_AMT END COUNTY_TAX 
              ,CASE WHEN I.INV_TP_CD = '2' THEN DILTD3.DEAL_SLS_TAX_AMT * -1 ELSE DILTD3.DEAL_SLS_TAX_AMT END CITY_TAX 
               </isNotEqual>
              <!--2018/10/03 QC#53599 Mod Start -->
              ,CASE WHEN TAI.MDSE_CD IS NULL THEN
                  CASE WHEN NVL(IL.INV_LINE_CATG_CD, #invLineCatgItem#) &lt;&gt; #invLineCatgFreight# THEN
                     CASE WHEN I.INV_TP_CD = '2' THEN
                        IL.INV_LINE_DEAL_TAX_AMT * -1
                     ELSE
                        IL.INV_LINE_DEAL_TAX_AMT
                     END
                  ELSE
                     0
                  END
               ELSE
                  IL.INV_LINE_DEAL_NET_AMT
               END TOTAL_TAX
              <!-- ,CASE WHEN I.INV_TP_CD = '2' THEN IL.INV_LINE_DEAL_TAX_AMT * -1 ELSE IL.INV_LINE_DEAL_TAX_AMT END TOTAL_TAX  -->
              <!--2018/10/03 QC#53599 Mod End -->

              <!-- QC#53026 Mod Start -->
              ,CASE WHEN NVL(IL.INV_LINE_CATG_CD, #invLineCatgItem#) &lt;&gt; #invLineCatgFreight# THEN
                  CASE WHEN I.INV_TP_CD = '2' THEN 
                     (IL.INV_LINE_DEAL_NET_AMT + IL.INV_LINE_DEAL_TAX_AMT) * -1 
                  ELSE 
                     (IL.INV_LINE_DEAL_NET_AMT + IL.INV_LINE_DEAL_TAX_AMT) 
                  END
               ELSE 
                  0 
               END  SUBTOTALS
              <!-- ,CASE WHEN I.INV_TP_CD = '2' THEN (IL.INV_LINE_DEAL_NET_AMT + IL.INV_LINE_DEAL_TAX_AMT) * -1 ELSE (IL.INV_LINE_DEAL_NET_AMT + IL.INV_LINE_DEAL_TAX_AMT) END SUBTOTALS  -->
              <!-- QC#53026 Mod End -->
              ,CCY.CCY_SGN_TXT

            FROM
                CONSL_BILL_LINE        CBL
               ,INV                    I 
               ,INV_LINE               IL 
               ,DS_INV_LINE_TAX_DTL    DILTD1 
               ,DS_INV_LINE_TAX_DTL    DILTD2 
               ,DS_INV_LINE_TAX_DTL    DILTD3 
               ,INV_LINE               IL_B 
               ,ALL_MDSE_V             M 
               ,ALL_MDSE_V             M_B 
               <!--,ORD_CATG_BIZ_CTX       OCBC -->
               <!--,ORD_CATG_BIZ_CTX       OCBC_E-->
               <!-- QC#53598 2019/12/02 Add Start -->
               ,LINE_BIZ_TP LOB
               ,MDSE_TP_VAL_SET MTVS
               <!-- QC#53598 2019/12/02 Add End -->
               ,CCY
               ,VAR_CHAR_CONST        VCC
               <!-- 2019/10/03 QC#53599 ADD START  -->
               ,TAX_ADJ_ITEM       TAI
               <!-- 2019/10/03 QC#53599 ADD END  -->
            WHERE
                CBL.CONSL_BILL_PK           = #conslBillPk#
            AND CBL.GLBL_CMPY_CD            = #glblCmpyCd#
            AND CBL.EZCANCELFLAG            = '0'
            AND CBL.CONSL_BILL_TRX_ID       = I.INV_NUM
            AND CBL.GLBL_CMPY_CD            = I.GLBL_CMPY_CD
            AND CBL.EZCANCELFLAG            = I.EZCANCELFLAG
            AND I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD
            AND I.INV_NUM                   = IL.INV_NUM 
            AND IL.SET_MDSE_CD              IS NULL
            AND IL.EZCANCELFLAG             =  '0'

            <!-- QC#53026 Add Start -->
            AND (IL.INV_LINE_CATG_CD IS NULL
            OR IL.INV_LINE_CATG_CD  = #invLineCatgFreight#
            OR IL.INV_LINE_CATG_CD  = #invLineCatgItem#)
            <!-- QC#53026 Add End -->

            AND NOT EXISTS (SELECT 1 FROM SVC_INV S
                        WHERE S.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                          AND S.SVC_INV_NUM  = I.INV_NUM
                          AND S.EZCANCELFLAG = '0')
            AND IL.GLBL_CMPY_CD            = DILTD1.GLBL_CMPY_CD(+)
            AND IL.INV_NUM                 = DILTD1.INV_NUM(+)
            AND IL.INV_BOL_LINE_NUM        = DILTD1.INV_BOL_LINE_NUM(+)
            AND IL.INV_LINE_NUM            = DILTD1.INV_LINE_NUM(+)
            AND IL.INV_LINE_SUB_NUM        = DILTD1.INV_LINE_SUB_NUM(+)
            AND IL.INV_LINE_SUB_TRX_NUM    = DILTD1.INV_TRX_LINE_SUB_NUM(+)
            AND DILTD1.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd01#
            AND DILTD1.EZCANCELFLAG(+)      =  '0'
            AND IL.GLBL_CMPY_CD            = DILTD2.GLBL_CMPY_CD(+)
            AND IL.INV_NUM                 = DILTD2.INV_NUM(+)
            AND IL.INV_BOL_LINE_NUM        = DILTD2.INV_BOL_LINE_NUM(+)
            AND IL.INV_LINE_NUM            = DILTD2.INV_LINE_NUM(+)
            AND IL.INV_LINE_SUB_NUM        = DILTD2.INV_LINE_SUB_NUM(+)
            AND IL.INV_LINE_SUB_TRX_NUM    = DILTD2.INV_TRX_LINE_SUB_NUM(+)
            AND DILTD2.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd02#
            AND DILTD2.EZCANCELFLAG(+)      =  '0'
            AND IL.GLBL_CMPY_CD            = DILTD3.GLBL_CMPY_CD(+)
            AND IL.INV_NUM                 = DILTD3.INV_NUM(+)
            AND IL.INV_BOL_LINE_NUM        = DILTD3.INV_BOL_LINE_NUM(+)
            AND IL.INV_LINE_NUM            = DILTD3.INV_LINE_NUM(+)
            AND IL.INV_LINE_SUB_NUM        = DILTD3.INV_LINE_SUB_NUM(+)
            AND IL.INV_LINE_SUB_TRX_NUM    = DILTD3.INV_TRX_LINE_SUB_NUM(+)
            AND DILTD3.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd03#
            AND DILTD3.EZCANCELFLAG(+)      =  '0'
            AND IL.GLBL_CMPY_CD            = IL_B.GLBL_CMPY_CD (+) 
            AND IL.INV_NUM                 = IL_B.INV_NUM (+) 
            AND IL.DS_ORD_POSN_NUM         = IL_B.DS_ORD_POSN_NUM (+) 
            AND IL_B.BASE_CMPT_FLG (+)     = 'Y'
            AND IL_B.DS_CONTR_DTL_PK IS NULL
            AND Il_B.EZCANCELFLAG(+)       =  '0'
            AND IL.GLBL_CMPY_CD             = M.GLBL_CMPY_CD 
            AND IL.MDSE_CD                  = M.MDSE_CD 
            AND M.EZCANCELFLAG              =  '0'
            AND IL_B.GLBL_CMPY_CD           = M_B.GLBL_CMPY_CD (+) 
            AND IL_B.MDSE_CD                = M_B.MDSE_CD (+) 
            AND M_B.EZCANCELFLAG(+)         =  '0'
            AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
            AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
            AND CCY.EZCANCELFLAG(+)         = '0' 
            AND EXISTS (
                SELECT
                    '1'
                FROM
                    INV_PRT_CTRL IPC
                    , INV_PRT_HDR IPH <!-- QC#53014 2019/09/17 Add -->
                WHERE
                        IPC.GLBL_CMPY_CD    = CBL.GLBL_CMPY_CD
                    AND IPC.INV_NUM         = CBL.CONSL_BILL_TRX_NUM
                    AND IPC.CONSL_BILL_NUM  = CBL.CONSL_BILL_PK
                    AND IPC.CONSL_BILL_FLG  = 'Y'
                    AND IPC.EZCANCELFLAG    = '0'
                    <!-- QC#53014 2019/09/17 Add -->
                    AND IPC.GLBL_CMPY_CD    = IPH.GLBL_CMPY_CD
                    AND IPC.INV_PRT_CTRL_PK = IPH.INV_PRT_CTRL_PK
                    AND (IPH.EXCL_BILL_TXT  = 'NO' OR IPH.EXCL_BILL_TXT IS NULL)
            )
            AND VCC.GLBL_CMPY_CD            = #glblCmpyCd#
            AND VCC.EZCANCELFLAG            = '0' 
            AND VCC.VAR_CHAR_CONST_NM       = 'NWCB0100_SAP_LINE_BIZ_TP' 
            AND (CASE
                WHEN IL.INV_LINE_DEAL_NET_AMT = 0
                 AND IL.INV_LINE_DEAL_TAX_AMT = 0 <!-- QC#54143 2019/10/31 Add -->
                 AND EXISTS (
                        SELECT
                            'X'
                        FROM
                            ORD_LINE_VAL_SET    OLVS
                        WHERE
                                OLVS.GLBL_CMPY_CD           = IL.GLBL_CMPY_CD
                            AND OLVS.DS_ORD_LINE_CATG_CD    = IL.DS_ORD_LINE_CATG_CD
                            AND OLVS.ORD_LINE_CTX_TP_CD     = #zdInvPrtExcl#
                            AND OLVS.EZCANCELFLAG           = '0'
                    )
                THEN 'X'
                ELSE NULL
                END
            )  IS NULL
            <!-- QC#53598 2019/12/02 Add Start -->
            AND I.GLBL_CMPY_CD = LOB.GLBL_CMPY_CD
            AND I.EZCANCELFLAG = LOB.EZCANCELFLAG
            AND I.LINE_BIZ_TP_CD = LOB.LINE_BIZ_TP_CD
            AND M.GLBL_CMPY_CD = MTVS.GLBL_CMPY_CD(+)
            AND M.COA_MDSE_TP_CD = MTVS.COA_MDSE_TP_CD(+)
            AND M.EZCANCELFLAG = MTVS.EZCANCELFLAG(+)
            AND MTVS.MDSE_TP_CTX_TP_CD(+) = #invPrtPrmoItems#
            AND NOT (LOB.PRMO_ITEM_PRINT_FLG = #prmoItemPrintFlg#
                AND MTVS.COA_MDSE_TP_CD IS NOT NULL)
            <!-- QC#53598 2019/12/02 Add End -->
            <!-- 2019/10/03 QC#53599 ADD START  -->
            AND IL.GLBL_CMPY_CD = TAI.GLBL_CMPY_CD(+)
            AND IL.EZCANCELFLAG = TAI.EZCANCELFLAG(+)
            AND IL.MDSE_CD = TAI.MDSE_CD(+)
            <!-- 2019/10/03 QC#53599 ADD END  -->
            
            <!-- QC#53026 Add Start -->
            UNION ALL
            SELECT
                 SORT_TYPE,
                 SOURCE
                ,PRODUCT_TYPE
                <isEqual property="isEasyPac1Flg" compareValue="true">
                ,0                               QTY
                </isEqual>
                <isNotEqual property="isEasyPac1Flg" compareValue="true">
                <!-- QC#53581 2019/10/17 Mod -->
                <!-- ,1                               QTY -->
                ,COUNT(DISTINCT INV_NUM)         QTY
                </isNotEqual>
                ,SUM(AMOUNT)                     AMOUNT
                ,SUM(STATE_TAX)                  STATE_TAX 
                ,SUM(COUNTY_TAX)                 COUNTY_TAX 
                ,SUM(CITY_TAX)                   CITY_TAX 
                ,SUM(TOTAL_TAX)                  TOTAL_TAX
                ,SUM(SUBTOTALS)                  SUBTOTALS
                ,CCY_SGN_TXT
            FROM (
                  SELECT
                      <!-- QC#26826 -->
                      CASE WHEN M_B.MDSE_CD IS NOT NULL THEN 
                          CASE WHEN M_B.COA_PROD_CD LIKE #prodCd# THEN 
                              '3-2'
                          WHEN M_B.COA_MDSE_TP_CD = #coaMdseTpCd# THEN 
                              '3-2'
                          ELSE 
                              CASE WHEN IL.BASE_CMPT_FLG = 'Y' THEN 
                                  CASE WHEN IL.MDL_NM IS NOT NULL AND INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) = 0 THEN
                                      '3-1'
                                  WHEN IL.MDL_NM IS NOT NULL THEN
                                      '3-1'
                                  ELSE
                                      '3-3'
                                  END
                              ELSE
                                 CASE WHEN EXISTS(SELECT '1' FROM ORD_CATG_BIZ_CTX OCB
                                     WHERE OCB.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                                     <!-- QC#26846 -->
                                     AND   OCB.ORD_CATG_CTX_TP_CD= #ordCatgCtxTpParts# 
                                     AND   OCB.DS_ORD_CATG_CD    = I.DS_ORD_CATG_CD
                                     AND  (OCB.DS_ORD_TP_CD      is null
                                     OR    OCB.DS_ORD_TP_CD      = I.DS_ORD_TP_CD)
                                     AND  (OCB.DS_ORD_RSN_CD     is null
                                     OR    OCB.DS_ORD_RSN_CD     = I.DS_ORD_RSN_CD)
                                     AND   OCB.EZCANCELFLAG      = '0') THEN 
                                     '3-4-3'
                                 WHEN EXISTS(SELECT '1' FROM ORD_CATG_BIZ_CTX OCB
                                     WHERE OCB.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                                     <!-- 2018/09/05 QC#28048 Mod Start -->
                                     <!-- AND   OCB.ORD_CATG_CTX_TP_CD= #ordCatgCtxTp# -->
                                     AND   OCB.ORD_CATG_CTX_TP_CD IN (#ordCatgCtxTp#, #easyPac1#)
                                     <!-- 2018/09/05 QC#28048 Mod End -->
                                     AND   OCB.DS_ORD_CATG_CD    = I.DS_ORD_CATG_CD
                                     AND  (OCB.DS_ORD_TP_CD      is null
                                     OR    OCB.DS_ORD_TP_CD      = I.DS_ORD_TP_CD)
                                     AND  (OCB.DS_ORD_RSN_CD     is null
                                     OR    OCB.DS_ORD_RSN_CD     = I.DS_ORD_RSN_CD)
                                     AND   OCB.EZCANCELFLAG      = '0') THEN 
                                     '3-4-2'
                                 ELSE
                                     '3-4' 
                                 END
                              END 
                          END
                      ELSE  
                          CASE WHEN M.COA_PROD_CD LIKE #prodCd# THEN 
                              '3-2'
                          WHEN M.COA_MDSE_TP_CD = #coaMdseTpCd# THEN 
                              '3-2'
                          ELSE 
                              CASE WHEN IL.BASE_CMPT_FLG = 'Y' THEN 
                                  CASE WHEN IL.MDL_NM IS NOT NULL AND INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) = 0 THEN
                                      '3-1'
                                  WHEN IL.MDL_NM IS NOT NULL THEN
                                      '3-1'
                                  ELSE
                                      '3-3'
                                  END
                              ELSE
                                  CASE WHEN EXISTS(SELECT '1' FROM ORD_CATG_BIZ_CTX OCB
                                      WHERE OCB.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                                      AND   OCB.ORD_CATG_CTX_TP_CD= #ordCatgCtxTpParts# 
                                      AND   OCB.DS_ORD_CATG_CD    = I.DS_ORD_CATG_CD
                                      AND  (OCB.DS_ORD_TP_CD      is null
                                      OR    OCB.DS_ORD_TP_CD      = I.DS_ORD_TP_CD)
                                      AND  (OCB.DS_ORD_RSN_CD     is null
                                      OR    OCB.DS_ORD_RSN_CD     = I.DS_ORD_RSN_CD)
                                      AND   OCB.EZCANCELFLAG      = '0') THEN 
                                      '3-4-3'
                                  WHEN EXISTS(SELECT '1' FROM ORD_CATG_BIZ_CTX OCB
                                      WHERE OCB.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                                      AND   OCB.ORD_CATG_CTX_TP_CD IN (#ordCatgCtxTp#, #easyPac1#)
                                      AND   OCB.DS_ORD_CATG_CD    = I.DS_ORD_CATG_CD
                                      AND  (OCB.DS_ORD_TP_CD      is null
                                      OR    OCB.DS_ORD_TP_CD      = I.DS_ORD_TP_CD)
                                      AND  (OCB.DS_ORD_RSN_CD     is null
                                      OR    OCB.DS_ORD_RSN_CD     = I.DS_ORD_RSN_CD)
                                      AND   OCB.EZCANCELFLAG      = '0') THEN 
                                      '3-4-2'
                                  ELSE 
                                      '3-4' 
                                  END
                              END
                          END 
                      END
                      SORT_TYPE,
                  
                      CASE WHEN EXISTS(SELECT '1' FROM ORD_CATG_BIZ_CTX OCB
                                 WHERE OCB.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                                 <!-- QC#26846 -->
                                 AND   OCB.ORD_CATG_CTX_TP_CD= #ordCatgCtxTpParts# 
                                 AND   OCB.DS_ORD_CATG_CD    = I.DS_ORD_CATG_CD
                                 AND  (OCB.DS_ORD_TP_CD      is null
                                 OR    OCB.DS_ORD_TP_CD      = I.DS_ORD_TP_CD)
                                 AND  (OCB.DS_ORD_RSN_CD     is null
                                 OR    OCB.DS_ORD_RSN_CD     = I.DS_ORD_RSN_CD)
                                 AND   OCB.EZCANCELFLAG      = '0')
                          THEN #ordClsPARTS# 
                          WHEN EXISTS(SELECT '1' FROM ORD_CATG_BIZ_CTX OCB
                                 WHERE OCB.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                                 <!-- 2018/09/05 QC#28048 Mod Start -->
                                 <!-- AND   OCB.ORD_CATG_CTX_TP_CD= #ordCatgCtxTp# -->
                                 AND   OCB.ORD_CATG_CTX_TP_CD IN (#ordCatgCtxTp#, #easyPac1#)
                                 <!-- 2018/09/05 QC#28048 Mod End -->
                                 AND   OCB.DS_ORD_CATG_CD    = I.DS_ORD_CATG_CD
                                 AND  (OCB.DS_ORD_TP_CD      is null
                                 OR    OCB.DS_ORD_TP_CD      = I.DS_ORD_TP_CD)
                                 AND  (OCB.DS_ORD_RSN_CD     is null
                                 OR    OCB.DS_ORD_RSN_CD     = I.DS_ORD_RSN_CD)
                                 AND   OCB.EZCANCELFLAG      = '0')
                          THEN #ordClsSUPL# 
                      ELSE #ordClsSL# END                               SOURCE 
                     <!--  ,CASE WHEN I.CR_REBIL_RSN_CATG_CD IS NOT NULL THEN 
                         #creditAndOdRebill#-->
                     ,CASE WHEN M.MDSE_CD = #varCharConst2# AND EXISTS(SELECT '1' FROM ORD_CATG_BIZ_CTX OCB
                                 WHERE OCB.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                                 AND   OCB.ORD_CATG_CTX_TP_CD IN (#easyPac1#, #easyPac1Return#) 
                                 AND   OCB.DS_ORD_CATG_CD    = I.DS_ORD_CATG_CD
                                 AND  (OCB.DS_ORD_TP_CD      is null
                                 OR    OCB.DS_ORD_TP_CD      = I.DS_ORD_TP_CD)
                                 AND  (OCB.DS_ORD_RSN_CD     is null
                                 OR    OCB.DS_ORD_RSN_CD     = I.DS_ORD_RSN_CD)
                                 AND   OCB.EZCANCELFLAG      = '0') THEN 
                         NVL(#varCharConst1#, #shortFall#)
                      WHEN M_B.MDSE_CD IS NOT NULL THEN 
                          CASE WHEN M_B.COA_PROD_CD LIKE #prodCd# THEN #invSmryLineTpNmNC#
                          WHEN M_B.COA_MDSE_TP_CD = #coaMdseTpCd# THEN #invSmryLineTpNmNC#
                          ELSE 
                              CASE WHEN IL.BASE_CMPT_FLG = 'Y' THEN 
                                  CASE WHEN IL.MDL_NM IS NOT NULL AND INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) = 0 THEN
                                      #invSmryLineTpNmC# || '-' || IL.MDL_NM  
                                  WHEN IL.MDL_NM IS NOT NULL THEN
                                      IL.MDL_NM  
                                  ELSE
                                      #invSmryLineTpNmC#
                                  END
                              ELSE
                                  CASE WHEN NOT EXISTS(SELECT '1' FROM ORD_CATG_BIZ_CTX OCB
                                      WHERE OCB.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                                      <!-- 2018/09/05 QC#28048 Mod Start -->
                                      <!-- AND   OCB.ORD_CATG_CTX_TP_CD= #ordCatgCtxTp# -->
                                      AND   OCB.ORD_CATG_CTX_TP_CD IN (#ordCatgCtxTpNoConfig#, #easyPac1#)
                                      <!-- 2018/09/05 QC#28048 Mod End -->
                                      AND   OCB.DS_ORD_CATG_CD    = I.DS_ORD_CATG_CD
                                      AND  (OCB.DS_ORD_TP_CD      is null
                                      OR    OCB.DS_ORD_TP_CD      = I.DS_ORD_TP_CD)
                                      AND  (OCB.DS_ORD_RSN_CD     is null
                                      OR    OCB.DS_ORD_RSN_CD     = I.DS_ORD_RSN_CD)
                                      AND   OCB.EZCANCELFLAG      = '0') AND INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) = 0 THEN
                                      #invSmryLineTpNmC# || '-ATTACHMENT'
                                  WHEN NOT EXISTS(SELECT '1' FROM ORD_CATG_BIZ_CTX OCB
                                      WHERE OCB.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                                      <!-- 2018/09/05 QC#28048 Mod Start -->
                                      <!-- AND   OCB.ORD_CATG_CTX_TP_CD= #ordCatgCtxTp# -->
                                      AND   OCB.ORD_CATG_CTX_TP_CD IN (#ordCatgCtxTpNoConfig#, #easyPac1#)
                                      <!-- 2018/09/05 QC#28048 Mod End -->
                                      AND   OCB.DS_ORD_CATG_CD    = I.DS_ORD_CATG_CD
                                      AND  (OCB.DS_ORD_TP_CD      is null
                                      OR    OCB.DS_ORD_TP_CD      = I.DS_ORD_TP_CD)
                                      AND  (OCB.DS_ORD_RSN_CD     is null
                                      OR    OCB.DS_ORD_RSN_CD     = I.DS_ORD_RSN_CD)
                                      AND   OCB.EZCANCELFLAG      = '0') THEN
                                      'ATTACHMENT'
                                  WHEN 
                                  EXISTS (SELECT '1' FROM ORD_CATG_BIZ_CTX OCB
                                 WHERE OCB.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                                 AND   OCB.ORD_CATG_CTX_TP_CD IN (#easyPac1#, #easyPac1Return#) 
                                 AND   OCB.DS_ORD_CATG_CD    = I.DS_ORD_CATG_CD
                                 AND  (OCB.DS_ORD_TP_CD      is null
                                 OR    OCB.DS_ORD_TP_CD      = I.DS_ORD_TP_CD)
                                 AND  (OCB.DS_ORD_RSN_CD     is null
                                 OR    OCB.DS_ORD_RSN_CD     = I.DS_ORD_RSN_CD)
                                 AND   OCB.EZCANCELFLAG      = '0') OR
                                 INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) = 0 AND
                                  (select count(ORD_CATG_BIZ_CTX_PK) from ORD_CATG_BIZ_CTX 
                   where EZCANCELFLAG = '0' 
                   AND GLBL_CMPY_CD = I.GLBL_CMPY_CD AND ORD_CATG_CTX_TP_CD = 'INV_PRT_SUPPLIES_ORDER'
                   AND DS_ORD_CATG_CD = I.DS_ORD_CATG_CD
                   AND (DS_ORD_TP_CD = I.DS_ORD_TP_CD OR DS_ORD_TP_CD IS NULL)) &lt;= 0 THEN
                                      #invSmryLineTpNmC#
                                  ELSE
                                      ''
                                  END
                              END 
                          END
                      ELSE  
                          CASE WHEN M.COA_PROD_CD LIKE #prodCd# THEN #invSmryLineTpNmNC#
                          WHEN M.COA_MDSE_TP_CD = #coaMdseTpCd# THEN #invSmryLineTpNmNC#
                          ELSE 
                              CASE WHEN IL.BASE_CMPT_FLG = 'Y' THEN 
                                  CASE WHEN IL.MDL_NM IS NOT NULL AND INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) = 0 THEN
                                      #invSmryLineTpNmC# || '-' || IL.MDL_NM
                                  WHEN IL.MDL_NM IS NOT NULL THEN
                                      IL.MDL_NM
                                  ELSE
                                      #invSmryLineTpNmC#
                                  END
                              ELSE
                                  CASE WHEN NOT EXISTS(SELECT '1' FROM ORD_CATG_BIZ_CTX OCB
                                      WHERE OCB.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                                      <!-- 2018/09/05 QC#28048 Mod Start -->
                                      <!-- AND   OCB.ORD_CATG_CTX_TP_CD= #ordCatgCtxTp# -->
                                      AND   OCB.ORD_CATG_CTX_TP_CD IN (#ordCatgCtxTpNoConfig#, #easyPac1#)
                                      <!-- 2018/09/05 QC#28048 Mod End -->
                                      AND   OCB.DS_ORD_CATG_CD    = I.DS_ORD_CATG_CD
                                      AND  (OCB.DS_ORD_TP_CD      is null
                                      OR    OCB.DS_ORD_TP_CD      = I.DS_ORD_TP_CD)
                                      AND  (OCB.DS_ORD_RSN_CD     is null
                                      OR    OCB.DS_ORD_RSN_CD     = I.DS_ORD_RSN_CD)
                                      AND   OCB.EZCANCELFLAG      = '0') AND INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) = 0 THEN
                                      #invSmryLineTpNmC# || '-ATTACHMENT'
                                  WHEN NOT EXISTS(SELECT '1' FROM ORD_CATG_BIZ_CTX OCB
                                      WHERE OCB.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                                      <!-- 2018/09/05 QC#28048 Mod Start -->
                                      <!-- AND   OCB.ORD_CATG_CTX_TP_CD= #ordCatgCtxTp# -->
                                      AND   OCB.ORD_CATG_CTX_TP_CD IN (#ordCatgCtxTpNoConfig#, #easyPac1#)
                                      <!-- 2018/09/05 QC#28048 Mod End -->
                                      AND   OCB.DS_ORD_CATG_CD    = I.DS_ORD_CATG_CD
                                      AND  (OCB.DS_ORD_TP_CD      is null
                                      OR    OCB.DS_ORD_TP_CD      = I.DS_ORD_TP_CD)
                                      AND  (OCB.DS_ORD_RSN_CD     is null
                                      OR    OCB.DS_ORD_RSN_CD     = I.DS_ORD_RSN_CD)
                                      AND   OCB.EZCANCELFLAG      = '0') THEN
                                      'ATTACHMENT'
                                  WHEN 
                                  EXISTS (SELECT '1' FROM ORD_CATG_BIZ_CTX OCB
                                 WHERE OCB.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                                 AND   OCB.ORD_CATG_CTX_TP_CD IN (#easyPac1#, #easyPac1Return#) 
                                 AND   OCB.DS_ORD_CATG_CD    = I.DS_ORD_CATG_CD
                                 AND  (OCB.DS_ORD_TP_CD      is null
                                 OR    OCB.DS_ORD_TP_CD      = I.DS_ORD_TP_CD)
                                 AND  (OCB.DS_ORD_RSN_CD     is null
                                 OR    OCB.DS_ORD_RSN_CD     = I.DS_ORD_RSN_CD)
                                 AND   OCB.EZCANCELFLAG      = '0') OR
                                 INSTR(VCC.VAR_CHAR_CONST_VAL, I.LINE_BIZ_TP_CD) = 0 AND
                                  (select count(ORD_CATG_BIZ_CTX_PK) from ORD_CATG_BIZ_CTX 
                   where EZCANCELFLAG = '0' 
                   AND GLBL_CMPY_CD = I.GLBL_CMPY_CD AND ORD_CATG_CTX_TP_CD = 'INV_PRT_SUPPLIES_ORDER'
                   AND DS_ORD_CATG_CD = I.DS_ORD_CATG_CD
                   AND (DS_ORD_TP_CD = I.DS_ORD_TP_CD OR DS_ORD_TP_CD IS NULL)) &lt;= 0 THEN
                                      #invSmryLineTpNmC#
                                  ELSE
                                      ''
                                  END
                              END
                          END 
                      END                                                  PRODUCT_TYPE
                      <isEqual property="isEasyPac1Flg" compareValue="true">
                     ,CASE WHEN IL.INV_LINE_CATG_CD = #invLineCatgFreight# THEN 0  <!-- QC#29371 -->
                           WHEN I.INV_TP_CD = '2' THEN NVL(IL.SPLY_PGM_SHIP_QTY, IL.SHIP_QTY) * -1 ELSE NVL(IL.SPLY_PGM_SHIP_QTY, IL.SHIP_QTY) END QTY
                      </isEqual>
                      <isNotEqual property="isEasyPac1Flg" compareValue="true"> 
                     ,CASE WHEN IL.INV_LINE_CATG_CD = #invLineCatgFreight# THEN 0  <!-- QC#29371 -->
                           WHEN I.INV_TP_CD = '2' THEN NVL(IL.INV_DPLY_QTY, IL.SHIP_QTY) * -1 ELSE NVL(IL.INV_DPLY_QTY, IL.SHIP_QTY) END QTY 
                      </isNotEqual>
                      <isEqual property="dtlDplyFlg" compareValue="Y">
                     ,CASE WHEN I.INV_TP_CD = '2' THEN IL.INV_LINE_DEAL_NET_AMT * -1 ELSE IL.INV_LINE_DEAL_NET_AMT END AMOUNT 
                      </isEqual>
                      <isNotEqual property="dtlDplyFlg" compareValue="Y"> 
                     ,NULL                                                       AMOUNT
                      </isNotEqual>
                      <isEqual property="taxDtlFlg" compareValue="N">
                     ,NULL                           STATE_TAX 
                     ,NULL                           COUNTY_TAX 
                     ,NULL                           CITY_TAX 
                      </isEqual>
                      <isNotEqual property="taxDtlFlg" compareValue="N"> 
                     ,CASE WHEN I.INV_TP_CD = '2' THEN DILTD1.DEAL_SLS_TAX_AMT * -1 ELSE DILTD1.DEAL_SLS_TAX_AMT END STATE_TAX 
                     ,CASE WHEN I.INV_TP_CD = '2' THEN DILTD2.DEAL_SLS_TAX_AMT * -1 ELSE DILTD2.DEAL_SLS_TAX_AMT END COUNTY_TAX 
                     ,CASE WHEN I.INV_TP_CD = '2' THEN DILTD3.DEAL_SLS_TAX_AMT * -1 ELSE DILTD3.DEAL_SLS_TAX_AMT END CITY_TAX 
                      </isNotEqual>
                     ,CASE WHEN I.INV_TP_CD = '2' THEN IL.INV_LINE_DEAL_TAX_AMT * -1 ELSE IL.INV_LINE_DEAL_TAX_AMT END TOTAL_TAX 
                     ,CASE WHEN I.INV_TP_CD = '2' THEN (IL.INV_LINE_DEAL_NET_AMT + IL.INV_LINE_DEAL_TAX_AMT) * -1 ELSE (IL.INV_LINE_DEAL_NET_AMT + IL.INV_LINE_DEAL_TAX_AMT) END SUBTOTALS 
                     ,CCY.CCY_SGN_TXT
                     ,IL.MDSE_CD
                     ,IL.DS_ORD_POSN_NUM
                     ,I.INV_NUM <!-- QC#53581 2019/10/17 Add -->
                   FROM
                       CONSL_BILL_LINE        CBL
                      ,INV                    I 
                      ,INV_LINE               IL 
                      ,DS_INV_LINE_TAX_DTL    DILTD1 
                      ,DS_INV_LINE_TAX_DTL    DILTD2 
                      ,DS_INV_LINE_TAX_DTL    DILTD3 
                      ,INV_LINE               IL_B 
                      ,ALL_MDSE_V             M 
                      ,ALL_MDSE_V             M_B 
                      <!--,ORD_CATG_BIZ_CTX       OCBC -->
                      <!--,ORD_CATG_BIZ_CTX       OCBC_E-->
                      ,CCY
                      ,VAR_CHAR_CONST        VCC
                   WHERE
                       CBL.CONSL_BILL_PK           = #conslBillPk#
                   AND CBL.GLBL_CMPY_CD            = #glblCmpyCd#
                   AND CBL.EZCANCELFLAG            = '0'
                   AND CBL.CONSL_BILL_TRX_ID       = I.INV_NUM
                   AND CBL.GLBL_CMPY_CD            = I.GLBL_CMPY_CD
                   AND CBL.EZCANCELFLAG            = I.EZCANCELFLAG
                   AND I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD
                   AND I.INV_NUM                   = IL.INV_NUM 
                   AND IL.SET_MDSE_CD              IS NULL
                   AND IL.EZCANCELFLAG             =  '0'
                   AND IL.INV_LINE_CATG_CD         = #invLineCatgChg#
                   AND NOT EXISTS (SELECT 1 FROM SVC_INV S
                               WHERE S.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                                 AND S.SVC_INV_NUM  = I.INV_NUM
                                 AND S.EZCANCELFLAG = '0')
                   AND IL.GLBL_CMPY_CD            = DILTD1.GLBL_CMPY_CD(+)
                   AND IL.INV_NUM                 = DILTD1.INV_NUM(+)
                   AND IL.INV_BOL_LINE_NUM        = DILTD1.INV_BOL_LINE_NUM(+)
                   AND IL.INV_LINE_NUM            = DILTD1.INV_LINE_NUM(+)
                   AND IL.INV_LINE_SUB_NUM        = DILTD1.INV_LINE_SUB_NUM(+)
                   AND IL.INV_LINE_SUB_TRX_NUM    = DILTD1.INV_TRX_LINE_SUB_NUM(+)
                   AND DILTD1.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd01#
                   AND DILTD1.EZCANCELFLAG(+)      =  '0'
                   AND IL.GLBL_CMPY_CD            = DILTD2.GLBL_CMPY_CD(+)
                   AND IL.INV_NUM                 = DILTD2.INV_NUM(+)
                   AND IL.INV_BOL_LINE_NUM        = DILTD2.INV_BOL_LINE_NUM(+)
                   AND IL.INV_LINE_NUM            = DILTD2.INV_LINE_NUM(+)
                   AND IL.INV_LINE_SUB_NUM        = DILTD2.INV_LINE_SUB_NUM(+)
                   AND IL.INV_LINE_SUB_TRX_NUM    = DILTD2.INV_TRX_LINE_SUB_NUM(+)
                   AND DILTD2.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd02#
                   AND DILTD2.EZCANCELFLAG(+)      =  '0'
                   AND IL.GLBL_CMPY_CD            = DILTD3.GLBL_CMPY_CD(+)
                   AND IL.INV_NUM                 = DILTD3.INV_NUM(+)
                   AND IL.INV_BOL_LINE_NUM        = DILTD3.INV_BOL_LINE_NUM(+)
                   AND IL.INV_LINE_NUM            = DILTD3.INV_LINE_NUM(+)
                   AND IL.INV_LINE_SUB_NUM        = DILTD3.INV_LINE_SUB_NUM(+)
                   AND IL.INV_LINE_SUB_TRX_NUM    = DILTD3.INV_TRX_LINE_SUB_NUM(+)
                   AND DILTD3.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd03#
                   AND DILTD3.EZCANCELFLAG(+)      =  '0'
                   AND IL.GLBL_CMPY_CD            = IL_B.GLBL_CMPY_CD (+) 
                   AND IL.INV_NUM                 = IL_B.INV_NUM (+) 
                   AND IL.DS_ORD_POSN_NUM         = IL_B.DS_ORD_POSN_NUM (+) 
                   AND IL_B.BASE_CMPT_FLG (+)     = 'Y'
                   AND IL_B.DS_CONTR_DTL_PK IS NULL
                   AND Il_B.EZCANCELFLAG(+)       =  '0'
                   AND IL.GLBL_CMPY_CD             = M.GLBL_CMPY_CD 
                   AND IL.MDSE_CD                  = M.MDSE_CD 
                   AND M.EZCANCELFLAG              =  '0'
                   AND IL_B.GLBL_CMPY_CD           = M_B.GLBL_CMPY_CD (+) 
                   AND IL_B.MDSE_CD                = M_B.MDSE_CD (+) 
                   AND M_B.EZCANCELFLAG(+)         =  '0'
                   AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
                   AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
                   AND CCY.EZCANCELFLAG(+)         = '0' 
                   AND EXISTS (
                       SELECT
                           '1'
                       FROM
                           INV_PRT_CTRL IPC
                           , INV_PRT_HDR IPH <!-- QC#53014 2019/09/17 Add -->
                       WHERE
                               IPC.GLBL_CMPY_CD    = CBL.GLBL_CMPY_CD
                           AND IPC.INV_NUM         = CBL.CONSL_BILL_TRX_NUM
                           AND IPC.CONSL_BILL_NUM  = CBL.CONSL_BILL_PK
                           AND IPC.CONSL_BILL_FLG  = 'Y'
                           AND IPC.EZCANCELFLAG    = '0'
                           <!-- QC#53014 2019/09/17 Add -->
                           AND IPC.GLBL_CMPY_CD    = IPH.GLBL_CMPY_CD
                           AND IPC.INV_PRT_CTRL_PK = IPH.INV_PRT_CTRL_PK
                           AND (IPH.EXCL_BILL_TXT  = 'NO' OR IPH.EXCL_BILL_TXT IS NULL)
                   )
                   AND VCC.GLBL_CMPY_CD            = #glblCmpyCd#
                   AND VCC.EZCANCELFLAG            = '0' 
                   AND VCC.VAR_CHAR_CONST_NM       = 'NWCB0100_SAP_LINE_BIZ_TP' 
                   AND (CASE
                       WHEN IL.INV_LINE_DEAL_NET_AMT = 0
                        AND IL.INV_LINE_DEAL_TAX_AMT = 0 <!-- QC#54143 2019/10/31 Add -->
                        AND EXISTS (
                               SELECT
                                   'X'
                               FROM
                                   ORD_LINE_VAL_SET    OLVS
                               WHERE
                                       OLVS.GLBL_CMPY_CD           = IL.GLBL_CMPY_CD
                                   AND OLVS.DS_ORD_LINE_CATG_CD    = IL.DS_ORD_LINE_CATG_CD
                                   AND OLVS.ORD_LINE_CTX_TP_CD     = #zdInvPrtExcl#
                                   AND OLVS.EZCANCELFLAG           = '0'
                           )
                       THEN 'X'
                       ELSE NULL
                       END
                   )  IS NULL
                 )
            GROUP BY
                 SORT_TYPE
                 , CCY_SGN_TXT
                 , SOURCE     
                 , PRODUCT_TYPE
                 , DS_ORD_POSN_NUM
                 , MDSE_CD
            
        )
        <!-- Fleet -->
        SELECT
             SORT_TYPE,  <!-- QC#26826 -->
             FLT_SMRY.SOURCE
            ,FLT_SMRY.PRODUCT_TYPE
            ,TO_CHAR(COUNT(DISTINCT CASE WHEN FLT_SMRY.INV_TP_CD = '2' THEN NULL ELSE FLT_SMRY.INV_NUM END) - COUNT(DISTINCT CASE WHEN FLT_SMRY.INV_TP_CD = '2' THEN FLT_SMRY.INV_NUM ELSE NULL END), 'FM9G999G999G999') QTY
            ,CASE WHEN SUM(CASE WHEN FLT_SMRY.INV_TP_CD = '2' THEN FLT_SMRY.BASE_CHARGE * -1 ELSE FLT_SMRY.BASE_CHARGE END) &lt; 0 THEN
                 '-' || FLT_SMRY.CCY_SGN_TXT || TO_CHAR(ABS(SUM(FLT_SMRY.BASE_CHARGE)), #amtFormat# )
             ELSE
                 FLT_SMRY.CCY_SGN_TXT || TO_CHAR(SUM(FLT_SMRY.BASE_CHARGE), #amtFormat# )
             END    BASE_CHARGE
            ,FLT_SMRY.CCY_SGN_TXT || TO_CHAR(0  , #amtFormat# )               ATTACHMENT_CHARGE
            ,CASE WHEN SUM(CASE WHEN FLT_SMRY.INV_TP_CD = '2' THEN FLT_SMRY.USAGE_CHARGE * -1 ELSE FLT_SMRY.USAGE_CHARGE END) &lt; 0 THEN
                '-' || FLT_SMRY.CCY_SGN_TXT || TO_CHAR(ABS(SUM(FLT_SMRY.USAGE_CHARGE)), #amtFormat# )
             ELSE
                FLT_SMRY.CCY_SGN_TXT || TO_CHAR(SUM(FLT_SMRY.USAGE_CHARGE), #amtFormat# )
             END    USAGE_CHARGE
            
            ,CASE WHEN SUM(CASE WHEN FLT_SMRY.INV_TP_CD = '2' THEN FLT_SMRY.AMOUNT * -1 ELSE FLT_SMRY.AMOUNT END) &lt; 0 THEN
                '-' || FLT_SMRY.CCY_SGN_TXT || TO_CHAR(ABS(SUM(FLT_SMRY.AMOUNT)), #amtFormat# )
             ELSE
                FLT_SMRY.CCY_SGN_TXT || TO_CHAR(SUM(FLT_SMRY.AMOUNT), #amtFormat# )
             END    AMOUNT
        <isEqual property="taxDtlFlg" compareValue="N">
            ,NULL                STATE_TAX
            ,NULL                COUNTY_TAX
            ,NULL                CITY_TAX
        </isEqual>
        <isNotEqual property="taxDtlFlg" compareValue="N">
            ,SUM(CASE WHEN FLT_SMRY.INV_TP_CD = '2' THEN FLT_SMRY.STATE_TAX * -1 ELSE FLT_SMRY.STATE_TAX END)               STATE_TAX
            ,SUM(CASE WHEN FLT_SMRY.INV_TP_CD = '2' THEN FLT_SMRY.COUNTY_TAX * -1 ELSE FLT_SMRY.COUNTY_TAX END)              COUNTY_TAX
            ,SUM(CASE WHEN FLT_SMRY.INV_TP_CD = '2' THEN FLT_SMRY.CITY_TAX * -1 ELSE FLT_SMRY.CITY_TAX END)                CITY_TAX
        </isNotEqual>
            ,SUM(CASE WHEN FLT_SMRY.INV_TP_CD = '2' THEN FLT_SMRY.TOTAL_TAX * -1 ELSE FLT_SMRY.TOTAL_TAX END)             TOTAL_TAX
            ,SUM(CASE WHEN FLT_SMRY.INV_TP_CD = '2' THEN (FLT_SMRY.AMOUNT + FLT_SMRY.TOTAL_TAX) * -1 ELSE (FLT_SMRY.AMOUNT + FLT_SMRY.TOTAL_TAX) END)          SUBTOTALS
            ,FLT_SMRY.CCY_SGN_TXT        
            <!-- 2019/07/16 QC#50885 Add Start-->
            , '0' IS_MANTE
            <!-- 2019/07/16 QC#50885 Add End-->
        FROM
            (
        <!-- Contract Charge(Base, Usage) -->
        SELECT
             '1' SORT_TYPE,  <!-- QC#26826 -->
             IPSP.INV_PRINT_SVC_PGM_SRC_NM                      SOURCE
            ,IPSP.INV_PRINT_SVC_PGM_PROD_NM                     PRODUCT_TYPE
            ,'1'                                                QTY
            ,CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC#
             THEN IL.INV_LINE_DEAL_NET_AMT 
             ELSE 0 END  BASE_CHARGE
            ,0 ATTACHMENT_CHARGE
            ,CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdMC#
                     THEN IL.INV_LINE_DEAL_NET_AMT               
                ELSE 0  END USAGE_CHARGE
            ,IL.INV_LINE_DEAL_NET_AMT AMOUNT
        <isEqual property="taxDtlFlg" compareValue="N">
            ,NULL                STATE_TAX
            ,NULL                COUNTY_TAX
            ,NULL                CITY_TAX
        </isEqual>
        <isNotEqual property="taxDtlFlg" compareValue="N">
            ,DILTD1.DEAL_SLS_TAX_AMT               STATE_TAX
            ,DILTD2.DEAL_SLS_TAX_AMT               COUNTY_TAX
            ,DILTD3.DEAL_SLS_TAX_AMT               CITY_TAX
        </isNotEqual>
            ,SIL.INV_LINE_DEAL_TAX_AMT             TOTAL_TAX
            ,(SIL.INV_LINE_DEAL_NET_AMT + SIL.INV_LINE_DEAL_TAX_AMT)          SUBTOTALS
            ,CCY.CCY_SGN_TXT
            ,I.INV_TP_CD
            ,I.INV_NUM
        FROM
             CONSL_BILL_LINE                CBL
            <!-- 2018/08/21 QC#27684 Mod Start -->
            <!-- ,INV                            I -->
            ,(
                 SELECT
                       INV_NUM,
                       CASE SYS_SRC_CD
                          WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                          ELSE INV_NUM
                       END  AS SVC_INV_NUM,
                       GLBL_CMPY_CD,
                       EZCANCELFLAG,
                       DEAL_CCY_CD,
                       INV_TP_CD
                 FROM
                       INV
            ) I
            <!-- 2018/08/21 QC#27684 Mod End -->
            ,SVC_INV                        SI
            ,INV_LINE                       IL
            <!-- QC#52209 2019/07/31 Mod -->
            <!-- ,SVC_INV_LINE                   SIL -->
            ,INV_PRT_SVC_INV_LINE_WRK         SIL
            ,DS_INV_LINE_TAX_DTL            DILTD1
            ,DS_INV_LINE_TAX_DTL            DILTD2
            ,DS_INV_LINE_TAX_DTL            DILTD3
            ,INV_PRINT_SVC_PGM              IPSP
            ,SVC_INV_LINE_TP                SILT
            ,CCY                            CCY
        WHERE
                CBL.CONSL_BILL_PK           = #conslBillPk#
            AND CBL.GLBL_CMPY_CD            = #glblCmpyCd#
            AND CBL.EZCANCELFLAG            = '0'
            AND CBL.CONSL_BILL_TRX_ID       = I.INV_NUM
            AND CBL.GLBL_CMPY_CD            = I.GLBL_CMPY_CD
            AND CBL.EZCANCELFLAG            = I.EZCANCELFLAG
            <!-- 2018/08/21 QC#27684 Mod Start -->
            <!--
            AND ((      I.SYS_SRC_CD    &lt;&gt; #sysSrcCdNFC#    
                    AND I.INV_NUM       = SI.SVC_INV_NUM )
                OR  (I.SYS_SRC_CD       = #sysSrcCdNFC# 
                    AND I.ORIG_INV_NUM    = SI.SVC_INV_NUM )
                )
            -->
            AND I.SVC_INV_NUM               = SI.SVC_INV_NUM
            <!-- 2018/08/21 QC#27684 Mod End -->
            AND I.GLBL_CMPY_CD              = SI.GLBL_CMPY_CD 
            AND SI.SVC_INV_SRC_TP_CD        = #siSrcTpCdCONTR#
            AND SI.DS_CONTR_CATG_CD         = #dsContrCatgCd#
            AND SI.EZCANCELFLAG             = '0'
            AND I.INV_NUM                   = IL.INV_NUM 
            AND I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD 
            AND IL.EZCANCELFLAG             = '0'
            AND IL.SVC_INV_LINE_PK          = SIL.SVC_INV_LINE_PK 
            AND IL.GLBL_CMPY_CD             = SIL.GLBL_CMPY_CD 
            AND SIL.EZCANCELFLAG            = '0'
            AND SILT.FLEET_LINE_FLG         = 'Y'
            AND SIL.SVC_INV_LINE_TP_CD      = SILT.SVC_INV_LINE_TP_CD 
            AND SIL.GLBL_CMPY_CD            = SILT.GLBL_CMPY_CD 
            AND SILT.EZCANCELFLAG           = '0'
            AND IL.INV_NUM                 = DILTD1.INV_NUM(+) 
            AND IL.INV_BOL_LINE_NUM        = DILTD1.INV_BOL_LINE_NUM(+)
            AND IL.INV_LINE_NUM            = DILTD1.INV_LINE_NUM(+)
            AND IL.INV_LINE_SUB_NUM        = DILTD1.INV_LINE_SUB_NUM(+)
            AND IL.INV_LINE_SUB_TRX_NUM    = DILTD1.INV_TRX_LINE_SUB_NUM(+)
            AND DILTD1.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd01#
            AND IL.GLBL_CMPY_CD            = DILTD1.GLBL_CMPY_CD(+)
            AND DILTD1.EZCANCELFLAG(+)      = '0'
            AND IL.INV_NUM                 = DILTD2.INV_NUM(+)
            AND IL.INV_BOL_LINE_NUM        = DILTD2.INV_BOL_LINE_NUM(+)
            AND IL.INV_LINE_NUM            = DILTD2.INV_LINE_NUM(+)
            AND IL.INV_LINE_SUB_NUM        = DILTD2.INV_LINE_SUB_NUM(+)
            AND IL.INV_LINE_SUB_TRX_NUM    = DILTD2.INV_TRX_LINE_SUB_NUM(+)
            AND DILTD2.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd02#
            AND IL.GLBL_CMPY_CD            = DILTD2.GLBL_CMPY_CD(+)
            AND DILTD2.EZCANCELFLAG(+)      = '0'
            AND IL.INV_NUM                 = DILTD3.INV_NUM(+) 
            AND IL.INV_BOL_LINE_NUM        = DILTD3.INV_BOL_LINE_NUM(+) 
            AND IL.INV_LINE_NUM            = DILTD3.INV_LINE_NUM(+) 
            AND IL.INV_LINE_SUB_NUM        = DILTD3.INV_LINE_SUB_NUM(+) 
            AND IL.INV_LINE_SUB_TRX_NUM    = DILTD3.INV_TRX_LINE_SUB_NUM(+) 
            AND DILTD3.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd03#
            AND IL.GLBL_CMPY_CD            = DILTD3.GLBL_CMPY_CD(+)
            AND DILTD3.EZCANCELFLAG(+)      = '0'
            AND SIL.SVC_PGM_MDSE_CD         = IPSP.INV_PRINT_SVC_PGM_CD (+) 
            AND SIL.GLBL_CMPY_CD            = IPSP.GLBL_CMPY_CD (+) 
            AND IPSP.EZCANCELFLAG(+)        = '0'
            AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
            AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
            AND CCY.EZCANCELFLAG(+)         = '0'
            AND EXISTS (
                    SELECT
                        '1'
                    FROM
                        INV_PRT_CTRL IPC
                        , INV_PRT_HDR IPH <!-- QC#53014 2019/09/17 Add -->
                    WHERE
                            IPC.GLBL_CMPY_CD    = CBL.GLBL_CMPY_CD
                        AND IPC.INV_NUM         = CBL.CONSL_BILL_TRX_NUM
                        AND IPC.CONSL_BILL_NUM  = CBL.CONSL_BILL_PK
                        AND IPC.CONSL_BILL_FLG  = 'Y'
                        AND IPC.EZCANCELFLAG    = '0'
                        <!-- QC#53014 2019/09/17 Add -->
                        AND IPC.GLBL_CMPY_CD    = IPH.GLBL_CMPY_CD
                        AND IPC.INV_PRT_CTRL_PK = IPH.INV_PRT_CTRL_PK
                        AND (IPH.EXCL_BILL_TXT  = 'NO' OR IPH.EXCL_BILL_TXT IS NULL)
                )
        UNION ALL
        <!-- Additional Charge(Base, Usage) -->
        SELECT
             '1' SORT_TYPE,  <!-- QC#26826 -->
             IPSP.INV_PRINT_SVC_PGM_SRC_NM                      SOURCE
            ,IPSP.INV_PRINT_SVC_PGM_PROD_NM                     PRODUCT_TYPE
            ,'1'                                                QTY
            ,CASE WHEN SILAC.ADDL_CHRG_INV_TP_CD = 'BASE'
            <!--   THEN SILAC.ADDL_CHRG_FLAT_DEAL_PRC_AMT -->
             THEN SIL_B.INV_LINE_DEAL_NET_AMT 
             ELSE 0 END  BASE_CHARGE
            ,0 ATTACHMENT_CHARGE
            ,CASE WHEN SILAC.ADDL_CHRG_INV_TP_CD = 'USGE'
            <!--           THEN SILAC.ADDL_CHRG_FLAT_DEAL_PRC_AMT -->
                     THEN SIL_B.INV_LINE_DEAL_NET_AMT               
                ELSE 0  END USAGE_CHARGE
            <!--  ,SILAC.ADDL_CHRG_FLAT_DEAL_PRC_AMT AMOUNT-->
            ,SIL_B.INV_LINE_DEAL_NET_AMT AMOUNT
        <isEqual property="taxDtlFlg" compareValue="N">
            ,NULL                STATE_TAX
            ,NULL                COUNTY_TAX
            ,NULL                CITY_TAX
        </isEqual>
        <isNotEqual property="taxDtlFlg" compareValue="N">
            ,DILTD1.DEAL_SLS_TAX_AMT               STATE_TAX
            ,DILTD2.DEAL_SLS_TAX_AMT               COUNTY_TAX
            ,DILTD3.DEAL_SLS_TAX_AMT               CITY_TAX
        </isNotEqual>
            ,SIL_B.INV_LINE_DEAL_TAX_AMT             TOTAL_TAX
            <!--  ,(SILAC.ADDL_CHRG_FLAT_DEAL_PRC_AMT + SIL_B.INV_LINE_DEAL_TAX_AMT)          SUBTOTALS-->
            ,(SIL_B.INV_LINE_DEAL_NET_AMT + SIL_B.INV_LINE_DEAL_TAX_AMT)          SUBTOTALS
            ,CCY.CCY_SGN_TXT
            ,I.INV_TP_CD
            ,I.INV_NUM
        FROM
             CONSL_BILL_LINE                CBL
            <!-- 2018/08/21 QC#27684 Mod Start -->
            <!-- ,INV                            I -->
            ,(
                 SELECT
                       INV_NUM,
                       CASE SYS_SRC_CD
                          WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                          ELSE INV_NUM
                       END  AS SVC_INV_NUM,
                       GLBL_CMPY_CD,
                       EZCANCELFLAG,
                       DEAL_CCY_CD,
                       INV_TP_CD
                 FROM
                       INV
            ) I
            <!-- 2018/08/21 QC#27684 Mod End -->
            ,SVC_INV                        SI
            ,INV_LINE                       IL
            <!-- QC#52209 2019/07/31 Mod -->
            <!-- ,SVC_INV_LINE              SIL -->
            <!-- ,SVC_INV_LINE              SIL_B -->
            ,INV_PRT_SVC_INV_LINE_WRK         SIL
            ,INV_PRT_SVC_INV_LINE_WRK         SIL_B
            ,DS_INV_LINE_TAX_DTL            DILTD1
            ,DS_INV_LINE_TAX_DTL            DILTD2
            ,DS_INV_LINE_TAX_DTL            DILTD3
            ,INV_PRINT_SVC_PGM              IPSP
            ,SVC_INV_LINE_TP                SILT
            ,CCY                            CCY
            ,SVC_INV_LINE_ADDL_CHRG         SILAC
        WHERE
                CBL.CONSL_BILL_PK           = #conslBillPk#
            AND CBL.GLBL_CMPY_CD            = #glblCmpyCd#
            AND CBL.EZCANCELFLAG            = '0'
            AND CBL.CONSL_BILL_TRX_ID       = I.INV_NUM
            AND CBL.GLBL_CMPY_CD            = I.GLBL_CMPY_CD
            AND CBL.EZCANCELFLAG            = I.EZCANCELFLAG
            <!-- 2018/08/21 QC#27684 Mod Start -->
            <!--
            AND ((      I.SYS_SRC_CD    &lt;&gt; #sysSrcCdNFC#    
                    AND I.INV_NUM       = SI.SVC_INV_NUM )
                OR  (I.SYS_SRC_CD       = #sysSrcCdNFC# 
                    AND I.ORIG_INV_NUM    = SI.SVC_INV_NUM )
                )
            -->
            AND I.SVC_INV_NUM               = SI.SVC_INV_NUM
            <!-- 2018/08/21 QC#27684 Mod End -->
            AND I.GLBL_CMPY_CD              = SI.GLBL_CMPY_CD 
            AND SI.SVC_INV_SRC_TP_CD        = #siSrcTpCdCONTR#
            AND SI.DS_CONTR_CATG_CD         = #dsContrCatgCd#
            AND SI.EZCANCELFLAG             = '0'
            AND I.INV_NUM                   = IL.INV_NUM 
            AND I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD 
            AND IL.EZCANCELFLAG             = '0'
            AND IL.INV_NUM                  = SIL.SVC_INV_NUM 
            AND IL.SVC_INV_LINE_PK         = SIL.SVC_INV_LINE_PK 
            AND IL.GLBL_CMPY_CD            = SIL.GLBL_CMPY_CD 
            AND SIL.EZCANCELFLAG            = '0'
            AND SILT.FLEET_LINE_FLG         = 'Y'
            AND SIL.SVC_INV_LINE_TP_CD      = SILT.SVC_INV_LINE_TP_CD 
            AND SIL.GLBL_CMPY_CD            = SILT.GLBL_CMPY_CD 
            AND SILT.EZCANCELFLAG           = '0'
            AND IL.INV_NUM                 = DILTD1.INV_NUM(+) 
            AND IL.INV_BOL_LINE_NUM        = DILTD1.INV_BOL_LINE_NUM(+)
            AND IL.INV_LINE_NUM            = DILTD1.INV_LINE_NUM(+)
            AND IL.INV_LINE_SUB_NUM        = DILTD1.INV_LINE_SUB_NUM(+)
            AND IL.INV_LINE_SUB_TRX_NUM    = DILTD1.INV_TRX_LINE_SUB_NUM(+)
            AND DILTD1.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd01#
            AND IL.GLBL_CMPY_CD            = DILTD1.GLBL_CMPY_CD(+)
            AND DILTD1.EZCANCELFLAG(+)      = '0'
            AND IL.INV_NUM                 = DILTD2.INV_NUM(+)
            AND IL.INV_BOL_LINE_NUM        = DILTD2.INV_BOL_LINE_NUM(+)
            AND IL.INV_LINE_NUM            = DILTD2.INV_LINE_NUM(+)
            AND IL.INV_LINE_SUB_NUM        = DILTD2.INV_LINE_SUB_NUM(+)
            AND IL.INV_LINE_SUB_TRX_NUM    = DILTD2.INV_TRX_LINE_SUB_NUM(+)
            AND DILTD2.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd02#
            AND IL.GLBL_CMPY_CD            = DILTD2.GLBL_CMPY_CD(+)
            AND DILTD2.EZCANCELFLAG(+)      = '0'
            AND IL.INV_NUM                 = DILTD3.INV_NUM(+) 
            AND IL.INV_BOL_LINE_NUM        = DILTD3.INV_BOL_LINE_NUM(+) 
            AND IL.INV_LINE_NUM            = DILTD3.INV_LINE_NUM(+) 
            AND IL.INV_LINE_SUB_NUM        = DILTD3.INV_LINE_SUB_NUM(+) 
            AND IL.INV_LINE_SUB_TRX_NUM    = DILTD3.INV_TRX_LINE_SUB_NUM(+) 
            AND DILTD3.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd03#
            AND IL.GLBL_CMPY_CD            = DILTD3.GLBL_CMPY_CD(+)
            AND DILTD3.EZCANCELFLAG(+)      = '0'
            AND SIL.SVC_PGM_MDSE_CD         = IPSP.INV_PRINT_SVC_PGM_CD (+) 
            AND SIL.GLBL_CMPY_CD            = IPSP.GLBL_CMPY_CD (+) 
            AND IPSP.EZCANCELFLAG(+)        = '0'
            AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
            AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
            AND CCY.EZCANCELFLAG(+)         = '0'
            AND SIL.SVC_INV_NUM             = SIL_B.SVC_INV_NUM
            AND SIL.SVC_INV_LINE_PK         = SIL_B.PRNT_SVC_INV_LINE_PK
            AND SIL.GLBL_CMPY_CD            = SIL_B.GLBL_CMPY_CD
            AND SIL_B.EZCANCELFLAG          = '0'
            AND SIL_B.SVC_INV_LINE_PK       = SILAC.SVC_INV_LINE_PK
            AND SIL_B.GLBL_CMPY_CD          = SILAC.GLBL_CMPY_CD
            AND SIL_B.EZCANCELFLAG          = '0'
            AND EXISTS (
                    SELECT
                        '1'
                    FROM
                        INV_PRT_CTRL IPC
                        , INV_PRT_HDR IPH <!-- QC#53014 2019/09/17 Add -->
                    WHERE
                            IPC.GLBL_CMPY_CD    = CBL.GLBL_CMPY_CD
                        AND IPC.INV_NUM         = CBL.CONSL_BILL_TRX_NUM
                        AND IPC.CONSL_BILL_NUM  = CBL.CONSL_BILL_PK
                        AND IPC.CONSL_BILL_FLG  = 'Y'
                        AND IPC.EZCANCELFLAG    = '0'
                        <!-- QC#53014 2019/09/17 Add -->
                        AND IPC.GLBL_CMPY_CD    = IPH.GLBL_CMPY_CD
                        AND IPC.INV_PRT_CTRL_PK = IPH.INV_PRT_CTRL_PK
                        AND (IPH.EXCL_BILL_TXT  = 'NO' OR IPH.EXCL_BILL_TXT IS NULL)
                )
        ) FLT_SMRY
        GROUP BY
             SORT_TYPE,  <!-- QC#26826 -->
             FLT_SMRY.CCY_SGN_TXT
            ,FLT_SMRY.SOURCE
            ,FLT_SMRY.PRODUCT_TYPE        
    
        <!-- Maintenance -->
        UNION ALL

        SELECT
            '2' SORT_TYPE,  <!-- QC#26826 -->
            NVL(IPSP_B.INV_PRINT_SVC_PGM_SRC_NM, IPSP.INV_PRINT_SVC_PGM_SRC_NM)        SOURCE 
           ,NVL(IPSP_B.INV_PRINT_SVC_PGM_PROD_NM, IPSP.INV_PRINT_SVC_PGM_PROD_NM)      PRODUCT_TYPE 
           ,TO_CHAR(COUNT(CASE WHEN I.INV_TP_CD = '2' THEN NULL ELSE SIL.SVC_MACH_MSTR_PK END) - COUNT(CASE WHEN I.INV_TP_CD = '2' THEN SIL.SVC_MACH_MSTR_PK ELSE NULL END), #qtyFormat# )                QTY 
           <!-- QC#25910 -->
           <!--  
           ,CASE WHEN SUM(
                CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC#
                 THEN CASE WHEN I.INV_TP_CD = '2' THEN IL.INV_LINE_DEAL_NET_AMT * -1 ELSE IL.INV_LINE_DEAL_NET_AMT END
                 ELSE  0   END) &lt; 0 THEN
                 
               '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(SUM(
                CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC#
                 THEN CASE WHEN I.INV_TP_CD = '2' THEN IL.INV_LINE_DEAL_NET_AMT * -1 ELSE IL.INV_LINE_DEAL_NET_AMT END
                 ELSE  0   END)), #amtFormat# )
            ELSE
               CCY.CCY_SGN_TXT || TO_CHAR(SUM(
                CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC#
                 THEN CASE WHEN I.INV_TP_CD = '2' THEN IL.INV_LINE_DEAL_NET_AMT * -1 ELSE IL.INV_LINE_DEAL_NET_AMT END
                 ELSE  0   END), #amtFormat# )
            END    BASE_CHARGE 
           ,CASE WHEN SUM(
                CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC#  
                 THEN CASE WHEN I.INV_TP_CD = '2' THEN IL.INV_LINE_DEAL_NET_AMT * -1 ELSE IL.INV_LINE_DEAL_NET_AMT END
                 ELSE 0   END) &lt; 0 THEN

               '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(SUM(
                CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC#  
                 THEN CASE WHEN I.INV_TP_CD = '2' THEN IL.INV_LINE_DEAL_NET_AMT * -1 ELSE IL.INV_LINE_DEAL_NET_AMT END
                 ELSE 0   END)), #amtFormat# )
            ELSE
               CCY.CCY_SGN_TXT || TO_CHAR(SUM(
                CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC#  
                 THEN CASE WHEN I.INV_TP_CD = '2' THEN IL.INV_LINE_DEAL_NET_AMT * -1 ELSE IL.INV_LINE_DEAL_NET_AMT END
                 ELSE 0   END), #amtFormat# )
            END    ATTACHMENT_CHARGE 
            -->
           ,CASE WHEN SUM(
                CASE WHEN (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD = 'MACH') OR (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD &lt;&gt; 'MACH' AND NVL(DCD.SVC_INV_MERGE_TP_CD, '0') = '1') OR (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC# AND SILAC.ADDL_CHRG_INV_TP_CD = 'BASE')
                 THEN CASE WHEN I.INV_TP_CD = '2' THEN SIL.INV_LINE_DEAL_NET_AMT * -1 ELSE SIL.INV_LINE_DEAL_NET_AMT END
                 ELSE  0   END) &lt; 0 THEN
                 
               '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(SUM(
                CASE WHEN (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD = 'MACH') OR (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD &lt;&gt; 'MACH' AND NVL(DCD.SVC_INV_MERGE_TP_CD, '0') = '1') OR (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC# AND SILAC.ADDL_CHRG_INV_TP_CD = 'BASE')
                 THEN CASE WHEN I.INV_TP_CD = '2' THEN SIL.INV_LINE_DEAL_NET_AMT * -1 ELSE SIL.INV_LINE_DEAL_NET_AMT END
                 ELSE  0   END)), #amtFormat# )
            ELSE
               CCY.CCY_SGN_TXT || TO_CHAR(SUM(
                CASE WHEN (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD = 'MACH') OR (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD &lt;&gt; 'MACH' AND NVL(DCD.SVC_INV_MERGE_TP_CD, '0') = '1') OR (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC# AND SILAC.ADDL_CHRG_INV_TP_CD = 'BASE')
                 THEN CASE WHEN I.INV_TP_CD = '2' THEN SIL.INV_LINE_DEAL_NET_AMT * -1 ELSE SIL.INV_LINE_DEAL_NET_AMT END
                 ELSE  0   END), #amtFormat# )
            END    BASE_CHARGE 
           ,CASE WHEN SUM(
                CASE WHEN (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD &lt;&gt; 'MACH' AND NVL(DCD.SVC_INV_MERGE_TP_CD, '0') &lt;&gt; '1') <!-- OR (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC# AND SILAC.ADDL_CHRG_INV_TP_CD = 'BASE') -->
                 THEN CASE WHEN I.INV_TP_CD = '2' THEN SIL.INV_LINE_DEAL_NET_AMT * -1 ELSE SIL.INV_LINE_DEAL_NET_AMT END
                 ELSE  0   END) &lt; 0 THEN
                 
               '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(SUM(
                CASE WHEN (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD &lt;&gt; 'MACH' AND NVL(DCD.SVC_INV_MERGE_TP_CD, '0') &lt;&gt; '1') <!-- OR (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC# AND SILAC.ADDL_CHRG_INV_TP_CD = 'BASE') -->
                 THEN CASE WHEN I.INV_TP_CD = '2' THEN SIL.INV_LINE_DEAL_NET_AMT * -1 ELSE SIL.INV_LINE_DEAL_NET_AMT END
                 ELSE  0   END)), #amtFormat# )
            ELSE
               CCY.CCY_SGN_TXT || TO_CHAR(SUM(
                CASE WHEN (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdBC# AND SIL.SVC_INV_LINE_TP_CD &lt;&gt; 'MACH' AND NVL(DCD.SVC_INV_MERGE_TP_CD, '0') &lt;&gt; '1') <!--OR (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC# AND SILAC.ADDL_CHRG_INV_TP_CD = 'BASE') -->
                 THEN CASE WHEN I.INV_TP_CD = '2' THEN SIL.INV_LINE_DEAL_NET_AMT * -1 ELSE SIL.INV_LINE_DEAL_NET_AMT END
                 ELSE  0   END), #amtFormat# )
            END    ATTACHMENT_CHARGE
           ,CASE WHEN SUM(
                CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdMC# OR (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC# AND SILAC.ADDL_CHRG_INV_TP_CD = 'USGE')
                 THEN CASE WHEN I.INV_TP_CD = '2' THEN SIL.INV_LINE_DEAL_NET_AMT * -1 ELSE SIL.INV_LINE_DEAL_NET_AMT END
                 ELSE 0    END) &lt; 0 THEN
               '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(SUM(
                CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdMC# OR (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC# AND SILAC.ADDL_CHRG_INV_TP_CD = 'USGE')
                 THEN CASE WHEN I.INV_TP_CD = '2' THEN SIL.INV_LINE_DEAL_NET_AMT * -1 ELSE SIL.INV_LINE_DEAL_NET_AMT END
                 ELSE 0    END)), #amtFormat# )
            ELSE
               CCY.CCY_SGN_TXT || TO_CHAR(SUM(
                CASE WHEN SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdMC# OR (SIL.SVC_INV_CHRG_TP_CD = #siChrgTpCdAC# AND SILAC.ADDL_CHRG_INV_TP_CD = 'USGE')
                 THEN CASE WHEN I.INV_TP_CD = '2' THEN SIL.INV_LINE_DEAL_NET_AMT * -1 ELSE SIL.INV_LINE_DEAL_NET_AMT END
                 ELSE 0    END), #amtFormat# )
            END    USAGE_CHARGE 
           ,CASE WHEN SUM(CASE WHEN I.INV_TP_CD = '2' THEN SIL.INV_LINE_DEAL_NET_AMT * -1 ELSE SIL.INV_LINE_DEAL_NET_AMT END) &lt; 0 THEN
               '-' || CCY.CCY_SGN_TXT || TO_CHAR(ABS(SUM(CASE WHEN I.INV_TP_CD = '2' THEN SIL.INV_LINE_DEAL_NET_AMT * -1 ELSE SIL.INV_LINE_DEAL_NET_AMT END)), #amtFormat# )
            ELSE
               CCY.CCY_SGN_TXT || TO_CHAR(SUM(CASE WHEN I.INV_TP_CD = '2' THEN SIL.INV_LINE_DEAL_NET_AMT * -1 ELSE SIL.INV_LINE_DEAL_NET_AMT END), #amtFormat# )
            END    AMOUNT 
           <isEqual property="taxDtlFlg" compareValue="N">
           ,NULL                           STATE_TAX 
           ,NULL                           COUNTY_TAX 
           ,NULL                           CITY_TAX 
           </isEqual>
           <isNotEqual property="taxDtlFlg" compareValue="N">
           ,SUM(CASE WHEN I.INV_TP_CD = '2' THEN DILTD1.DEAL_SLS_TAX_AMT * -1 ELSE DILTD1.DEAL_SLS_TAX_AMT END)             STATE_TAX 
           ,SUM(CASE WHEN I.INV_TP_CD = '2' THEN DILTD2.DEAL_SLS_TAX_AMT * -1 ELSE DILTD2.DEAL_SLS_TAX_AMT END)             COUNTY_TAX 
           ,SUM(CASE WHEN I.INV_TP_CD = '2' THEN DILTD3.DEAL_SLS_TAX_AMT * -1 ELSE DILTD3.DEAL_SLS_TAX_AMT END)             CITY_TAX 
           </isNotEqual>
           ,SUM(CASE WHEN I.INV_TP_CD = '2' THEN IL.INV_LINE_DEAL_TAX_AMT * -1 ELSE IL.INV_LINE_DEAL_TAX_AMT END)            TOTAL_TAX 
           ,SUM(CASE WHEN I.INV_TP_CD = '2' THEN (IL.INV_LINE_DEAL_NET_AMT + IL.INV_LINE_DEAL_TAX_AMT) * -1 ELSE (IL.INV_LINE_DEAL_NET_AMT + IL.INV_LINE_DEAL_TAX_AMT) END)          SUBTOTALS 
           ,CCY.CCY_SGN_TXT
            <!-- 2019/07/16 QC#50885 Add Start-->
            , '1' IS_MANTE
            <!-- 2019/07/16 QC#50885 Add End-->
        FROM 
            CONSL_BILL_LINE                    CBL
           <!-- 2018/08/21 QC#27684 Mod Start -->
           <!-- ,INV                                I -->
           ,(
               SELECT
                      INV_NUM,
                      CASE SYS_SRC_CD
                          WHEN #sysSrcCdNFC# THEN ORIG_INV_NUM
                          ELSE INV_NUM
                      END  AS SVC_INV_NUM,
                      GLBL_CMPY_CD,
                      EZCANCELFLAG,
                      DEAL_CCY_CD,
                      INV_TP_CD,
                      BILL_TO_CUST_ACCT_CD
                 FROM
                      INV
            ) I
           <!-- 2018/08/21 QC#27684 Mod End -->
           ,SVC_INV                            SI
           ,INV_LINE                           IL
            <!-- QC#52209 2019/07/31 Mod -->
           <!-- ,SVC_INV_LINE                       SIL -->
           <!-- ,SVC_INV_LINE                       SIL_B  -->
           ,INV_PRT_SVC_INV_LINE_WRK             SIL
           ,INV_PRT_SVC_INV_LINE_WRK             SIL_B
           ,DS_INV_LINE_TAX_DTL                DILTD1
           ,DS_INV_LINE_TAX_DTL                DILTD2
           ,DS_INV_LINE_TAX_DTL                DILTD3
           ,INV_PRINT_SVC_PGM                  IPSP
           ,INV_PRINT_SVC_PGM                  IPSP_B
           ,INV_PRINT_EX                       IPE
           ,INV_PRINT_EX                       IPE_B
           ,CCY                                CCY
           ,SVC_INV_LINE_ADDL_CHRG             SILAC
           ,DS_CONTR_DTL                       DCD
        WHERE
            CBL.CONSL_BILL_PK           = #conslBillPk#
        AND CBL.GLBL_CMPY_CD            = #glblCmpyCd#
        AND CBL.EZCANCELFLAG            = '0'
        AND CBL.CONSL_BILL_TRX_ID       = I.INV_NUM
        AND CBL.GLBL_CMPY_CD            = I.GLBL_CMPY_CD
        AND CBL.EZCANCELFLAG            = I.EZCANCELFLAG
        <!-- 2018/08/21 QC#27684 Mod Start -->
        <!--
        AND ((      I.SYS_SRC_CD    &lt;&gt; #sysSrcCdNFC#    
                AND I.INV_NUM       = SI.SVC_INV_NUM )
           OR  (I.SYS_SRC_CD           = #sysSrcCdNFC# 
                 AND I.ORIG_INV_NUM    = SI.SVC_INV_NUM )
                )
        -->
        AND I.SVC_INV_NUM               = SI.SVC_INV_NUM
        <!-- 2018/08/21 QC#27684 Mod End -->
        AND SI.SVC_INV_SRC_TP_CD        = #siSrcTpCdCONTR# 
        AND SI.DS_CONTR_CATG_CD         IN (#dsContrCatgCdREG#, #dsContrCatgCdAGG#)
        AND I.GLBL_CMPY_CD              = SI.GLBL_CMPY_CD 
        AND SI.EZCANCELFLAG             = '0'
        AND I.INV_NUM                   = IL.INV_NUM
        AND I.GLBL_CMPY_CD              = IL.GLBL_CMPY_CD 
        AND IL.EZCANCELFLAG             = '0'
        AND IL.SVC_INV_LINE_PK         = SIL.SVC_INV_LINE_PK 
        AND IL.INV_NUM                 = SIL.SVC_INV_NUM 
        AND IL.GLBL_CMPY_CD            = SIL.GLBL_CMPY_CD 
        AND IL.EZCANCELFLAG            = '0'
        AND IL.INV_NUM                 = DILTD1.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM        = DILTD1.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM            = DILTD1.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM        = DILTD1.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM    = DILTD1.INV_TRX_LINE_SUB_NUM(+)
        AND IL.GLBL_CMPY_CD            = DILTD1.GLBL_CMPY_CD(+)
        AND DILTD1.EZCANCELFLAG(+)      = '0'
        AND DILTD1.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd01#
        AND IL.INV_NUM                 = DILTD2.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM        = DILTD2.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM            = DILTD2.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM        = DILTD2.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM    = DILTD2.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD2.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd02#
        AND IL.GLBL_CMPY_CD            = DILTD2.GLBL_CMPY_CD(+)
        AND DILTD2.EZCANCELFLAG(+)      = '0'
        AND IL.INV_NUM                 = DILTD3.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM        = DILTD3.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM            = DILTD3.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM        = DILTD3.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM    = DILTD3.INV_TRX_LINE_SUB_NUM(+)
        AND DILTD3.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd03#
        AND IL.GLBL_CMPY_CD            = DILTD3.GLBL_CMPY_CD(+)
        AND DILTD3.EZCANCELFLAG(+)      = '0'
        
        AND SIL.SVC_PGM_MDSE_CD         = IPSP.INV_PRINT_SVC_PGM_CD (+) 
        AND SIL.GLBL_CMPY_CD            = IPSP.GLBL_CMPY_CD (+) 
        AND IPSP.EZCANCELFLAG(+)        = '0'
        AND SIL.PRNT_SVC_INV_LINE_PK    = SIL_B.SVC_INV_LINE_PK (+) 
        AND SIL.SVC_INV_NUM             = SIL_B.SVC_INV_NUM (+)
        AND SIL.GLBL_CMPY_CD            = SIL_B.GLBL_CMPY_CD (+) 
        AND SIL_B.EZCANCELFLAG(+)       = '0'
        AND SIL_B.SVC_PGM_MDSE_CD       = IPSP_B.INV_PRINT_SVC_PGM_CD (+) 
        AND SIL.GLBL_CMPY_CD            = IPSP_B.GLBL_CMPY_CD (+) 
        AND IPSP_B.EZCANCELFLAG(+)      = '0'
        AND I.BILL_TO_CUST_ACCT_CD     = IPE.DS_ACCT_NUM (+) 
        AND SIL.MDL_ID                  = IPE.MDL_ID (+) 
        AND I.GLBL_CMPY_CD             = IPE.GLBL_CMPY_CD (+) 
        AND IPE.EZCANCELFLAG(+)         = '0'
        AND I.BILL_TO_CUST_ACCT_CD     = IPE_B.DS_ACCT_NUM (+)    
        AND SIL_B.MDL_ID                = IPE_B.MDL_ID (+)
        AND I.GLBL_CMPY_CD             = IPE_B.GLBL_CMPY_CD (+)    
        AND IPE_B.EZCANCELFLAG(+)       = '0'
        AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
        AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
        AND CCY.EZCANCELFLAG(+)         = '0'
        AND SIL.SVC_INV_LINE_PK         = SILAC.SVC_INV_LINE_PK (+)
        AND SIL.GLBL_CMPY_CD            = SILAC.GLBL_CMPY_CD (+)
        AND SILAC.EZCANCELFLAG(+)       = '0'
        AND IL.DS_CONTR_DTL_PK         = DCD.DS_CONTR_DTL_PK (+)
        AND IL.GLBL_CMPY_CD            = DCD.GLBL_CMPY_CD (+)
        AND DCD.EZCANCELFLAG(+)       = '0'
        AND EXISTS (
                SELECT
                    '1'
                FROM
                    INV_PRT_CTRL IPC
                    , INV_PRT_HDR IPH <!-- QC#53014 2019/09/17 Add -->
                WHERE
                        IPC.GLBL_CMPY_CD    = CBL.GLBL_CMPY_CD
                    AND IPC.INV_NUM         = CBL.CONSL_BILL_TRX_NUM
                    AND IPC.CONSL_BILL_NUM  = CBL.CONSL_BILL_PK
                    AND IPC.CONSL_BILL_FLG  = 'Y'
                    AND IPC.EZCANCELFLAG    = '0'
                    <!-- QC#53014 2019/09/17 Add -->
                    AND IPC.GLBL_CMPY_CD    = IPH.GLBL_CMPY_CD
                    AND IPC.INV_PRT_CTRL_PK = IPH.INV_PRT_CTRL_PK
                    AND (IPH.EXCL_BILL_TXT  = 'NO' OR IPH.EXCL_BILL_TXT IS NULL)
            )
        GROUP BY
            CCY.CCY_SGN_TXT
           ,NVL(IPSP_B.INV_PRINT_SVC_PGM_SRC_NM, IPSP.INV_PRINT_SVC_PGM_SRC_NM)
           ,NVL(IPSP_B.INV_PRINT_SVC_PGM_PROD_NM, IPSP.INV_PRINT_SVC_PGM_PROD_NM)  
    
        <!-- Parts Labor -->
        UNION ALL

        SELECT
            SORT_TYPE,  <!-- QC#26826 -->
            #ordClsPL#        SOURCE
           ,PRODUCT_TYPE
           <!-- QC#17491 -->
           <!--  ,TO_CHAR(SUM(QTY), #qtyFormat# )              QTY-->
           ,RTRIM(TO_CHAR(SUM(QTY), #qtyFormat4# ),'.')        QTY
           
           ,NULL                                               BASE_CHARGE 
           ,NULL                                               ATTACHMENT_CHARGE 
           ,NULL                                               USAGE_CHARGE 
           ,CASE WHEN SUM(AMOUNT) &lt; 0 THEN
               '-' || CCY_SGN_TXT || TO_CHAR(ABS(SUM(AMOUNT)), #amtFormat# )
            ELSE
               CCY_SGN_TXT || TO_CHAR(SUM(AMOUNT), #amtFormat# )
            END    AMOUNT
           ,SUM(STATE_TAX)    STATE_TAX 
           ,SUM(COUNTY_TAX)   COUNTY_TAX 
           ,SUM(CITY_TAX)     CITY_TAX 
           ,SUM(TOTAL_TAX)    TOTAL_TAX 
           ,SUM(SUBTOTALS)    SUBTOTALS 
           ,CCY_SGN_TXT
           <!-- 2019/07/16 QC#50885 Add Start-->
           , '0' IS_MANTE
           <!-- 2019/07/16 QC#50885 Add End-->
       FROM
           PARTS_LABOR
       GROUP BY
           SORT_TYPE, PRODUCT_TYPE, CCY_SGN_TXT  <!-- QC#26826 -->
           
        <!-- Sales Supply -->
        UNION ALL

        SELECT
            MIN(SORT_TYPE) SORT_TYPE,  <!-- QC#26826 -->
            SOURCE     
           ,PRODUCT_TYPE
           ,TO_CHAR(SUM(QTY), #qtyFormat#)                         QTY 
           ,NULL                                                   BASE_CHARGE 
           ,NULL                                                   ATTACHMENT_CHARGE 
           ,NULL                                                   USAGE_CHARGE 
           ,CASE WHEN SUM(AMOUNT) IS NOT NULL THEN
                CASE WHEN SUM(AMOUNT) &lt; 0 THEN
                    '-' || CCY_SGN_TXT || TO_CHAR(ABS(SUM(AMOUNT)), #amtFormat# )
                ELSE
                    CCY_SGN_TXT || TO_CHAR(SUM(AMOUNT), #amtFormat# )
                END
            ELSE
                ''
            END    AMOUNT
           ,SUM(STATE_TAX)        STATE_TAX 
           ,SUM(COUNTY_TAX)       COUNTY_TAX 
           ,SUM(CITY_TAX)         CITY_TAX 
           ,SUM(TOTAL_TAX)        TOTAL_TAX 
           ,SUM(SUBTOTALS)        SUBTOTALS 
           ,CCY_SGN_TXT
           <!-- 2019/07/16 QC#50885 Add Start-->
           , '0' IS_MANTE
           <!-- 2019/07/16 QC#50885 Add End-->
        FROM
            SALES_SUPPLY
        GROUP BY 
            SOURCE     
           ,PRODUCT_TYPE
           ,CCY_SGN_TXT
        ORDER BY 1,2  <!-- QC#26826 -->
    </statement>

    <statement id="getConslInvPrtHdr" parameterClass="Map" resultClass="Map">
        SELECT
            IPH.INV_TOT_AMT_TXT
           ,IPH.INV_BAL_AMT_TXT
           ,IPH.INV_TOT_CHRG_AMT_TXT
           ,IPH.INV_FRT_AMT_TXT
           ,IPH.INV_FRT_TAX_AMT_TXT
           ,IPH.INV_PRE_PMT_AMT_TXT
        FROM
            INV_PRT_HDR IPH
        WHERE
            IPH.GLBL_CMPY_CD    = #glblCmpyCd#
        AND IPH.EZCANCELFLAG    = '0'
        AND IPH.INV_BILL_NUM    = #invBillNum#
    </statement>

    <statement id="getInvPrtFleetLocList" parameterClass="Map" resultClass="Map">
        SELECT
            INV_PRT_FLEET_LOC_PK
        FROM
            INV_PRT_FLEET_LOC IPFL
        WHERE
            IPFL.GLBL_CMPY_CD    = #glblCmpyCd#
        AND IPFL.EZCANCELFLAG    = '0'
        AND IPFL.INV_NUM         = #invNum#
    </statement>

    <statement id="getCreditCardLastDigitForINV" parameterClass="Map" resultClass="Map">
        SELECT
            CR_CARD_LAST_DIGIT
        FROM (
            SELECT
                '1' SORT_TP_CD
               ,DCC.CR_CARD_LAST_DIGIT_NUM CR_CARD_LAST_DIGIT
            FROM
                CR_CARD_TRX CCT
               ,DS_CR_CARD DCC
            WHERE
                CCT.GLBL_CMPY_CD         = #glblCmpyCd#
            AND CCT.EZCANCELFLAG         = '0'
            AND CCT.CR_CARD_TRX_TP_CD    = 'INV'
            AND CCT.FIRST_TRX_INFO_TXT   = #invNum#
            AND CCT.CR_CARD_AUTH_STS_CD  = '2'
            AND CCT.GLBL_CMPY_CD         = DCC.GLBL_CMPY_CD
            AND CCT.CR_CARD_CUST_REF_NUM = DCC.CR_CARD_CUST_REF_NUM
            AND DCC.EZCANCELFLAG         = '0'
            UNION ALL
            SELECT
                '2' SORT_TP_CD
               ,DCC.CR_CARD_LAST_DIGIT_NUM CR_CARD_LAST_DIGIT
            FROM
                CR_CARD_TRX CCT
               ,DS_CR_CARD DCC
            WHERE
                CCT.GLBL_CMPY_CD         = #glblCmpyCd#
            AND CCT.EZCANCELFLAG         = '0'
            AND CCT.CR_CARD_TRX_TP_CD    = 'INV'
            AND CCT.CR_CARD_AUTH_STS_CD  = '1'
            AND CCT.FIRST_TRX_INFO_TXT   = #invNum#
            AND CCT.GLBL_CMPY_CD         = DCC.GLBL_CMPY_CD
            AND CCT.CR_CARD_CUST_REF_NUM = DCC.CR_CARD_CUST_REF_NUM
            AND DCC.EZCANCELFLAG         = '0'
            ORDER BY 1
        )
        WHERE
            ROWNUM = 1
    </statement>
    <statement id="getCreditCardLastDigitForOM" parameterClass="Map" resultClass="Map">
        SELECT
            CR_CARD_LAST_DIGIT
        FROM (
            SELECT
                '1' SORT_TP_CD
               ,CCT.SETL_CPLT_FLG
               ,DCC.CR_CARD_LAST_DIGIT_NUM CR_CARD_LAST_DIGIT
            FROM
                CR_CARD_TRX CCT
               ,DS_CR_CARD DCC
            WHERE
                CCT.GLBL_CMPY_CD         = #glblCmpyCd#
            AND CCT.EZCANCELFLAG         = '0'
            AND CCT.CR_CARD_TRX_TP_CD    = 'CPO'
            AND CCT.FIRST_TRX_INFO_TXT   = #cpoOrdNum#
            AND CCT.CR_CARD_AUTH_STS_CD  = '9'
            AND CCT.SETL_CPLT_FLG        = 'Y'
            AND CCT.GLBL_CMPY_CD         = DCC.GLBL_CMPY_CD
            AND CCT.CR_CARD_CUST_REF_NUM = DCC.CR_CARD_CUST_REF_NUM
            AND DCC.EZCANCELFLAG         = '0'
            UNION ALL
            SELECT
                '2' SORT_TP_CD
               ,CCT.SETL_CPLT_FLG
               ,DCC.CR_CARD_LAST_DIGIT_NUM CR_CARD_LAST_DIGIT
            FROM
                CR_CARD_TRX CCT
               ,DS_CR_CARD DCC
            WHERE
                CCT.GLBL_CMPY_CD         = #glblCmpyCd#
            AND CCT.EZCANCELFLAG         = '0'
            AND CCT.CR_CARD_TRX_TP_CD    = 'CPO'
            AND CCT.FIRST_TRX_INFO_TXT   = #cpoOrdNum#
            AND CCT.CR_CARD_AUTH_STS_CD  = '1'
            AND CCT.GLBL_CMPY_CD         = DCC.GLBL_CMPY_CD
            AND CCT.CR_CARD_CUST_REF_NUM = DCC.CR_CARD_CUST_REF_NUM
            AND DCC.EZCANCELFLAG         = '0'
            <!-- QC#21101 Add Start-->
            UNION ALL
            SELECT
                '3' SORT_TP_CD
               ,CCT.SETL_CPLT_FLG
               ,DCC.CR_CARD_LAST_DIGIT_NUM CR_CARD_LAST_DIGIT
            FROM
                CR_CARD_TRX CCT
               ,DS_CR_CARD  DCC
               ,CPO         C
            WHERE
                CCT.GLBL_CMPY_CD         = #glblCmpyCd#
            AND CCT.EZCANCELFLAG         = '0'
            AND CCT.CR_CARD_TRX_TP_CD    = 'CPO'
            AND CCT.FIRST_TRX_INFO_TXT   = C.ORD_SRC_REF_NUM
            AND CCT.CR_CARD_AUTH_STS_CD  = '1'
            AND CCT.GLBL_CMPY_CD         = DCC.GLBL_CMPY_CD
            AND CCT.CR_CARD_CUST_REF_NUM = DCC.CR_CARD_CUST_REF_NUM
            AND DCC.EZCANCELFLAG         = '0'
            AND CCT.GLBL_CMPY_CD         = C.GLBL_CMPY_CD
            AND C.CPO_ORD_NUM            = #cpoOrdNum#
            AND C.EZCANCELFLAG           = '0'
            <!-- QC#21101 Add End-->
            ORDER BY 1
        )
        WHERE
            ROWNUM = 1
    </statement>
    <statement id="getCreditCardLastDigitForSC" parameterClass="Map" resultClass="Map">
        SELECT
            CR_CARD_LAST_DIGIT
        FROM (
            SELECT
                '1' SORT_TP_CD
               ,CCT.SETL_CPLT_FLG
               ,DCC.CR_CARD_LAST_DIGIT_NUM CR_CARD_LAST_DIGIT
            FROM
                CR_CARD_TRX CCT
               ,DS_CR_CARD DCC
            WHERE
                CCT.GLBL_CMPY_CD         = #glblCmpyCd#
            AND CCT.EZCANCELFLAG         = '0'
            AND CCT.CR_CARD_TRX_TP_CD    = 'SVC_REQ'
            AND CCT.FIRST_TRX_INFO_TXT   = #fsrNum#
            AND CCT.CR_CARD_CUST_REF_NUM = #crCardCustRefNum#
            AND CCT.CR_CARD_AUTH_STS_CD  = '2'
            AND CCT.GLBL_CMPY_CD         = DCC.GLBL_CMPY_CD
            AND CCT.CR_CARD_CUST_REF_NUM = DCC.CR_CARD_CUST_REF_NUM
            AND DCC.EZCANCELFLAG         = '0'
            UNION ALL
            SELECT
                '2' SORT_TP_CD
               ,CCT.SETL_CPLT_FLG
               ,DCC.CR_CARD_LAST_DIGIT_NUM CR_CARD_LAST_DIGIT
            FROM
                CR_CARD_TRX CCT
               ,DS_CR_CARD DCC
            WHERE
                CCT.GLBL_CMPY_CD         = #glblCmpyCd#
            AND CCT.EZCANCELFLAG         = '0'
            AND CCT.CR_CARD_TRX_TP_CD    = 'SVC_REQ'
            AND CCT.CR_CARD_AUTH_STS_CD  = '1'
            AND CCT.FIRST_TRX_INFO_TXT   = #fsrNum#
            AND CCT.CR_CARD_CUST_REF_NUM = #crCardCustRefNum#
            AND CCT.GLBL_CMPY_CD         = DCC.GLBL_CMPY_CD
            AND CCT.CR_CARD_CUST_REF_NUM = DCC.CR_CARD_CUST_REF_NUM
            AND DCC.EZCANCELFLAG         = '0'
            ORDER BY 1,2
        )
        WHERE
            ROWNUM = 1
    </statement>
    <statement id="getOrdCatgBizCtxExistsFlg" parameterClass="Map" resultClass="Map">
        SELECT '1' EXISTS_FLG
        FROM
            ORD_CATG_BIZ_CTX OCB
        WHERE
            OCB.GLBL_CMPY_CD = #glblCmpyCd#
        AND OCB.ORD_CATG_CTX_TP_CD   IN
        <iterate property="ordCatgCtxTpList" var="ordCatgCtxTp[]" open=" (" close=")" conjunction=",">
            #ordCatgCtxTp[]#
        </iterate>
        AND OCB.DS_ORD_CATG_CD = #dsOrdCatgCd#
        <isNotNull property="dsOrdTpCd">
        AND (OCB.DS_ORD_TP_CD is null OR OCB.DS_ORD_TP_CD = #dsOrdTpCd#)
        </isNotNull>
        <isNull property="dsOrdTpCd">
        AND OCB.DS_ORD_TP_CD is null
        </isNull>
        <isNotNull property="dsOrdRsnCd">
        AND (OCB.DS_ORD_RSN_CD is null OR OCB.DS_ORD_RSN_CD = #dsOrdRsnCd#)
        </isNotNull>
        <isNull property="dsOrdRsnCd">
        AND OCB.DS_ORD_RSN_CD is null
        </isNull>
        AND OCB.EZCANCELFLAG = '0'
    </statement>
    <statement id="getOrdCatgCtxForInvPrtBr" parameterClass="Map" resultClass="Map">
        SELECT 
            OCB.FIRST_BIZ_CTX_ATTRB_TXT
        FROM 
            ORD_CATG_BIZ_CTX OCB
        WHERE 
            OCB.GLBL_CMPY_CD = #glblCmpyCd#
        AND   OCB.ORD_CATG_CTX_TP_CD= #ordCatgCtxTp# 
        AND   OCB.DS_ORD_CATG_CD    = #dsOrdCatgCd#
        AND  (OCB.DS_ORD_TP_CD      is null
        OR    OCB.DS_ORD_TP_CD      = #dsOrdTpCd#)
        <isNotNull property="dsOrdRsnCd">
        AND  (OCB.DS_ORD_RSN_CD     is null
        OR    OCB.DS_ORD_RSN_CD     = #dsOrdRsnCd#)
        </isNotNull>
        AND   OCB.EZCANCELFLAG      = '0'
    </statement>
    <statement id="getCoaBrPrintCd" parameterClass="Map" resultClass="Map">
        SELECT
            IPB.INV_PRT_BR_CD
           ,IPB.INV_RPT_BR_PRINT_NUM
           ,CB.COA_BR_PRINT_NUM
        FROM
            TOC T
           ,COA_BR CB
           ,INV_PRT_BR IPB
        WHERE
            T.GLBL_CMPY_CD = #glblCmpyCd#
        AND T.EZCANCELFLAG = '0' 
        AND T.TOC_CD = #slsRepTocCd#
        AND T.GLBL_CMPY_CD = CB.GLBL_CMPY_CD
        AND T.COA_BR_CD = CB.COA_BR_CD
        AND CB.EZCANCELFLAG = '0' 
        AND CB.GLBL_CMPY_CD = IPB.GLBL_CMPY_CD
        AND CB.COA_BR_PRINT_CD = IPB.COA_BR_PRINT_CD
        AND IPB.EZCANCELFLAG = '0' 
    </statement>

    <statement id="getSaleSummaryTaxConsl" parameterClass="Map" resultClass="Map">
    SELECT
        SUM(CASE WHEN I.INV_TP_CD = '2' THEN IL.INV_LINE_DEAL_NET_AMT * -1 ELSE IL.INV_LINE_DEAL_NET_AMT END)                           ITEM_AMT
       ,SUM(CASE WHEN I.INV_TP_CD = '2' THEN IL.INV_LINE_DEAL_TAX_AMT * -1 ELSE IL.INV_LINE_DEAL_TAX_AMT END)                           ITEM_TAX_AMT
       <isEqual property="taxDtlFlg" compareValue="N">
       ,NULL                                                    STATE_TAX
       ,NULL                                                    COUNTY_TAX
       ,NULL                                                    CITY_TAX
       </isEqual>
       <isNotEqual property="taxDtlFlg" compareValue="N"> 
       ,SUM(CASE WHEN I.INV_TP_CD = '2' THEN DILTDF1.DEAL_SLS_TAX_AMT * -1 ELSE DILTDF1.DEAL_SLS_TAX_AMT END)                           STATE_TAX
       ,SUM(CASE WHEN I.INV_TP_CD = '2' THEN DILTDF2.DEAL_SLS_TAX_AMT * -1 ELSE DILTDF2.DEAL_SLS_TAX_AMT END)                           COUNTY_TAX
       ,SUM(CASE WHEN I.INV_TP_CD = '2' THEN DILTDF3.DEAL_SLS_TAX_AMT * -1 ELSE DILTDF3.DEAL_SLS_TAX_AMT END)                           CITY_TAX
       </isNotEqual>
    FROM
         INV                    I 
        ,INV_LINE               IL 
        ,CCY
        ,DS_INV_LINE_TAX_DTL    DILTDF1
        ,DS_INV_LINE_TAX_DTL    DILTDF2
        ,DS_INV_LINE_TAX_DTL    DILTDF3
    WHERE
            I.GLBL_CMPY_CD                 = #glblCmpyCd#
        AND I.GRP_INV_NUM                  = #conslBillNum#
        AND I.EZCANCELFLAG                 =  '0'
        AND I.GLBL_CMPY_CD                 = IL.GLBL_CMPY_CD 
        AND I.INV_NUM                      = IL.INV_NUM
        <!-- QC#59356 Add -->
        AND IL.INV_LINE_CATG_CD           != #invLineCatgCd#
        AND IL.EZCANCELFLAG                =  '0'
        AND I.GLBL_CMPY_CD = CCY.GLBL_CMPY_CD (+)  
        AND I.DEAL_CCY_CD = CCY.CCY_CD (+)  
        AND CCY.EZCANCELFLAG(+)      =  '0'

        AND I.GLBL_CMPY_CD                 = DILTDF1.GLBL_CMPY_CD(+)
        AND IL.INV_NUM                     = DILTDF1.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM            = DILTDF1.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM                = DILTDF1.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM            = DILTDF1.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM        = DILTDF1.INV_TRX_LINE_SUB_NUM(+)
        AND DILTDF1.DS_SLS_TAX_TP_CD(+)    = #dsSlsTaxTpCd11#
        AND DILTDF1.EZCANCELFLAG(+)        =  '0'  

        AND I.GLBL_CMPY_CD                 = DILTDF2.GLBL_CMPY_CD(+)
        AND IL.INV_NUM                     = DILTDF2.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM            = DILTDF2.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM                = DILTDF2.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM            = DILTDF2.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM        = DILTDF2.INV_TRX_LINE_SUB_NUM(+)
        AND DILTDF2.DS_SLS_TAX_TP_CD(+)    = #dsSlsTaxTpCd12#
        AND DILTDF2.EZCANCELFLAG(+)        =  '0'  

        AND I.GLBL_CMPY_CD                 = DILTDF3.GLBL_CMPY_CD(+)
        AND IL.INV_NUM                     = DILTDF3.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM            = DILTDF3.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM                = DILTDF3.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM            = DILTDF3.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM        = DILTDF3.INV_TRX_LINE_SUB_NUM(+)
        AND DILTDF3.DS_SLS_TAX_TP_CD(+)    = #dsSlsTaxTpCd13#
        AND DILTDF3.EZCANCELFLAG(+)        =  '0'  
    </statement>

    <statement id="getSaleSummaryFreightInfoConsl" parameterClass="Map" resultClass="Map">
    SELECT
       <!-- 2018/05/25 QC#21841 Mod Start -->
       <!--
        SUM(IB.FRT_DEAL_TAX_AMT)                                FRT_TAX
       ,SUM(IB.SHIP_DEAL_FRT_AMT)                               FRT_AMT
       ,SUM(IB.SHIP_DEAL_FRT_AMT + IB.FRT_DEAL_TAX_AMT)         FRT_CHRG_AMT
       -->
        SUM(IL.INV_LINE_DEAL_TAX_AMT)                              FRT_TAX
       ,SUM(IL.INV_LINE_DEAL_NET_AMT)                              FRT_AMT
       ,SUM(IL.INV_LINE_DEAL_NET_AMT + IL.INV_LINE_DEAL_TAX_AMT)   FRT_CHRG_AMT
       <!-- 2018/05/25 QC#21841 Mod End -->
       <isEqual property="taxDtlFlg" compareValue="N">
       ,NULL                                                    FRT_STATE_TAX
       ,NULL                                                    FRT_COUNTY_TAX
       ,NULL                                                    FRT_CITY_TAX
       </isEqual>
       <isNotEqual property="taxDtlFlg" compareValue="N"> 
       ,SUM(DILTDF1.DEAL_SLS_TAX_AMT)                           FRT_STATE_TAX
       ,SUM(DILTDF2.DEAL_SLS_TAX_AMT)                           FRT_COUNTY_TAX
       ,SUM(DILTDF3.DEAL_SLS_TAX_AMT)                           FRT_CITY_TAX
       </isNotEqual>
    FROM
         INV                    I 
        ,CCY
        ,DS_INV_LINE_TAX_DTL    DILTDF1
        ,DS_INV_LINE_TAX_DTL    DILTDF2
        ,DS_INV_LINE_TAX_DTL    DILTDF3
        <!-- 2018/05/25 QC#21841 Mod Start -->
        <!-- ,INV_BOL                IB -->
        ,INV_LINE               IL
        <!-- 2018/05/25 QC#21841 Mod End -->
    WHERE
            I.GLBL_CMPY_CD              = #glblCmpyCd#
        AND I.GRP_INV_NUM               = #conslBillNum#
        AND I.EZCANCELFLAG              =  '0'
        AND I.GLBL_CMPY_CD = CCY.GLBL_CMPY_CD (+)  
        AND I.DEAL_CCY_CD = CCY.CCY_CD (+)  
        AND CCY.EZCANCELFLAG(+)      =  '0'
        <!-- 2018/05/25 QC#21841 Mod Start -->
        <!--
        AND I.GLBL_CMPY_CD = IB.GLBL_CMPY_CD
        AND I.INV_NUM = IB.INV_NUM
        AND IB.EZCANCELFLAG = '0'

        AND I.GLBL_CMPY_CD                = DILTDF1.GLBL_CMPY_CD(+)
        AND I.INV_NUM                     = DILTDF1.INV_NUM(+)
        AND DILTDF1.INV_LINE_NUM(+)        = '*'  
        AND DILTDF1.INV_LINE_SUB_NUM(+)    = '*'  
        AND DILTDF1.INV_TRX_LINE_SUB_NUM(+)= '*'  
        AND DILTDF1.DS_SLS_TAX_TP_CD(+)    = #dsSlsTaxTpCd11#
        AND DILTDF1.EZCANCELFLAG(+)        =  '0'  

        AND I.GLBL_CMPY_CD                = DILTDF2.GLBL_CMPY_CD(+)
        AND I.INV_NUM                     = DILTDF2.INV_NUM(+)
        AND DILTDF2.INV_LINE_NUM(+)        = '*'  
        AND DILTDF2.INV_LINE_SUB_NUM(+)    = '*'  
        AND DILTDF2.INV_TRX_LINE_SUB_NUM(+)= '*'  
        AND DILTDF2.DS_SLS_TAX_TP_CD(+)    = #dsSlsTaxTpCd12#
        AND DILTDF2.EZCANCELFLAG(+)        =  '0'  

        AND I.GLBL_CMPY_CD                = DILTDF3.GLBL_CMPY_CD(+)  
        AND I.INV_NUM                     = DILTDF3.INV_NUM(+)  
        AND DILTDF3.INV_LINE_NUM(+)        = '*'  
        AND DILTDF3.INV_LINE_SUB_NUM(+)    = '*'  
        AND DILTDF3.INV_TRX_LINE_SUB_NUM(+)= '*'  
        AND DILTDF3.DS_SLS_TAX_TP_CD(+)    = #dsSlsTaxTpCd13#
        AND DILTDF3.EZCANCELFLAG(+)        =  '0'
        -->
        AND I.GLBL_CMPY_CD               = IL.GLBL_CMPY_CD
        AND I.INV_NUM                    = IL.INV_NUM
        AND IL.INV_LINE_CATG_CD          = #invLineCatgFrt#
        AND IL.EZCANCELFLAG              = '0'

        AND IL.GLBL_CMPY_CD              = DILTDF1.GLBL_CMPY_CD(+)
        AND IL.INV_NUM                   = DILTDF1.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM          = DILTDF1.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM              = DILTDF1.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM          = DILTDF1.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM      = DILTDF1.INV_TRX_LINE_SUB_NUM(+)
        AND DILTDF1.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd11#
        AND DILTDF1.EZCANCELFLAG(+)      =  '0'

        AND IL.GLBL_CMPY_CD              = DILTDF2.GLBL_CMPY_CD(+)
        AND IL.INV_NUM                   = DILTDF2.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM          = DILTDF2.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM              = DILTDF2.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM          = DILTDF2.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM      = DILTDF2.INV_TRX_LINE_SUB_NUM(+)
        AND DILTDF2.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd12#
        AND DILTDF2.EZCANCELFLAG(+)      =  '0'

        AND IL.GLBL_CMPY_CD              = DILTDF3.GLBL_CMPY_CD(+)
        AND IL.INV_NUM                   = DILTDF3.INV_NUM(+)
        AND IL.INV_BOL_LINE_NUM          = DILTDF3.INV_BOL_LINE_NUM(+)
        AND IL.INV_LINE_NUM              = DILTDF3.INV_LINE_NUM(+)
        AND IL.INV_LINE_SUB_NUM          = DILTDF3.INV_LINE_SUB_NUM(+)
        AND IL.INV_LINE_SUB_TRX_NUM      = DILTDF3.INV_TRX_LINE_SUB_NUM(+)
        AND DILTDF3.DS_SLS_TAX_TP_CD(+)  = #dsSlsTaxTpCd13#
        AND DILTDF3.EZCANCELFLAG(+)      =  '0'
        <!-- 2018/-5/25 QC#21841 Mod End -->
    </statement>
<!-- START 2018/08/20 M.Naito [QC#13309, ADD] -->
    <statement id="isTempEttl" parameterClass="Map" resultClass="Integer">
    SELECT
         COUNT(1) 
    FROM 
         INV      INV
        ,SVC_INV  SI
    WHERE
            INV.GLBL_CMPY_CD = #glblCmpyCd#
        AND INV.INV_NUM      = #invNum#
        AND INV.EZCANCELFLAG = '0'
        AND INV.GLBL_CMPY_CD = SI.GLBL_CMPY_CD
        AND INV.INV_NUM      = SI.SVC_INV_NUM
        AND SI.TEMP_ETTL_NUM IS NOT NULL
        AND SI.EZCANCELFLAG  = '0'
    </statement>
<!-- END 2018/08/20 M.Naito [QC#13309, ADD] -->

<!-- START 2018/09/10 T.Ogura [QC#27999,ADD] -->
    <statement id="getFreightInvoiceOnly" parameterClass="Map" resultClass="Integer">
    SELECT
        COUNT(1)
    FROM
        (
            SELECT
                 IB.GLBL_CMPY_CD
                ,IB.INV_NUM
                ,IB.INV_BOL_LINE_NUM
            FROM
                 INV        I
                ,INV_BOL    IB
            WHERE
                    I.INV_NUM              = #invNum#
                AND I.GLBL_CMPY_CD         = #glblCmpyCd#
                AND I.EZCANCELFLAG         = '0'
                AND I.INV_NUM              = IB.INV_NUM
                AND I.GLBL_CMPY_CD         = IB.GLBL_CMPY_CD
                AND IB.EZCANCELFLAG        = '0'
        ) A
    WHERE
        EXISTS (
            SELECT
                  1
            FROM
                 INV_LINE    IL
                ,MDSE        M
            WHERE
                    A.GLBL_CMPY_CD         = IL.GLBL_CMPY_CD
                AND A.INV_NUM              = IL.INV_NUM
                AND A.INV_BOL_LINE_NUM     = IL.INV_BOL_LINE_NUM
                AND IL.EZCANCELFLAG        = '0'
                AND IL.MDSE_CD             = M.MDSE_CD
                AND IL.GLBL_CMPY_CD        = M.GLBL_CMPY_CD
                AND M.EZCANCELFLAG         = '0'
                AND IL.INV_LINE_CATG_CD    = #invLineCatgFrt#
        ) 
        AND NOT EXISTS (
            SELECT
                  1
            FROM
                INV_LINE    IL
            WHERE
                    A.GLBL_CMPY_CD        = IL.GLBL_CMPY_CD
                AND A.INV_NUM             = IL.INV_NUM
                AND A.INV_BOL_LINE_NUM    = IL.INV_BOL_LINE_NUM
                AND IL.EZCANCELFLAG       = '0'
                AND NVL(IL.INV_LINE_CATG_CD, '00') NOT IN (#invLineCatgFrt#)
        )
    </statement>
<!-- END   2018/09/10 T.Ogura [QC#27999,ADD] -->

<!-- START 2018/11/14 K.Fujimoto [QC#28627, ADD] -->
    <statement id="isContrLinkNum" parameterClass="Map" resultClass="Integer">
    SELECT
         COUNT(1) 
    FROM 
         SVC_INV  SI
    WHERE
            SI.GLBL_CMPY_CD = #glblCmpyCd#
        AND SI.SVC_INV_NUM   = #invNum#
        AND SI.EZCANCELFLAG  = '0'
        AND EXISTS(
            SELECT
                  1
            FROM 
                DS_CONTR DC
            WHERE    
                     SI.DS_CONTR_PK  = DC.DS_CONTR_PK
                 AND SI.GLBL_CMPY_CD = DC.GLBL_CMPY_CD
                 AND DC.EZCANCELFLAG = '0'
                 <!-- START 2022/03/22 [QC#59683, MOD] -->
                 <!-- AND DC.CONTR_LINK_NUM IS NOT NULL -->
                 AND SI.CONTR_LINK_NUM IS NOT NULL
                 <!-- END   2022/03/22 [QC#59683, MOD] -->
        )
    </statement>
<!-- END   2018/11/14 K.Fujimoto [QC#28627, ADD] -->
<!-- 02/07/2019 QC#29371 K.Fujimoto Add Start-->
    <statement id="getInvPrtFleetLocPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            INV_PRT_FLEET_LOC_PK
        FROM
            INV_PRT_FLEET_LOC IPFL
        WHERE
            IPFL.GLBL_CMPY_CD    = #glblCmpyCd#
        AND IPFL.EZCANCELFLAG    = '0'
        AND IPFL.INV_NUM         = #invNum#
        AND IPFL.SHIP_TO_CUST_CD = #shipToCustCd#
        AND IPFL.INV_PRT_FLEET_SUB_TOT_PK = #invPrtFleetSubTotPk#
    </statement>
    <statement id="isInvPrtFleetChrgDtl" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(INV_PRT_FLEET_CHRG_DTL_PK)
        FROM
            INV_PRT_FLEET_CHRG_DTL IPFCD
        WHERE
            IPFCD.GLBL_CMPY_CD         = #glblCmpyCd#
        AND IPFCD.EZCANCELFLAG         = '0'
        AND IPFCD.INV_NUM              = #invNum#
        AND IPFCD.BILL_FEET_SUB_TOT_SQ = #svcMachMstrPk#
    </statement>
<!-- 02/07/2019 QC#29371 K.Fujimoto Add Start-->
    <statement id="getFleetInvLine" parameterClass="Map" resultClass="Map">
        SELECT
             IL.GLBL_CMPY_CD
            ,IL.INV_NUM
            ,IL.INV_BOL_LINE_NUM
            ,IL.INV_LINE_NUM
            ,IL.INV_LINE_SUB_NUM
            ,IL.INV_LINE_SUB_TRX_NUM
            ,IL.SVC_INV_LINE_PK
            ,SIL.SVC_INV_NUM
            ,SIL.SVC_INV_LINE_NUM
            ,IL.INV_LINE_DEAL_TAX_AMT
            ,IL.INV_LINE_DEAL_NET_AMT
            ,SIL.SVC_INV_CHRG_TP_CD
            ,SIL.SHIP_TO_CUST_CD
            ,SIL.MDL_NM
            ,SIL.BLLG_PER_FROM_DT
            ,SIL.BLLG_PER_THRU_DT
            ,SIL.DS_CONTR_PK
            ,SIL.DS_CONTR_DTL_PK
            ,SIL.SVC_PGM_MDSE_CD
            ,SIL.SVC_MACH_MSTR_PK
            ,SIL.SER_NUM
            ,SIL.CUST_ISS_PO_NUM
            ,SIL.PRNT_SVC_INV_LINE_PK
            ,SIL.FIRST_BLLG_ATTRB_VAL_TXT
            ,SIL.SCD_BLLG_ATTRB_VAL_TXT
            ,SIL.THIRD_BLLG_ATTRB_VAL_TXT
            ,SIL.FRTH_BLLG_ATTRB_VAL_TXT
            ,SIL.FIFTH_BLLG_ATTRB_VAL_TXT
            ,SIL.SIXTH_BLLG_ATTRB_VAL_TXT
            ,SIL.SVC_INV_LINE_TP_CD
            ,SIL.COPY_INCL_QTY
            ,SIL.DS_CONTR_BLLG_SCHD_PK
            ,SIL.INV_PRINT_COV_TXT
            ,M.SVC_PGM_TP_CD
            ,DS_CONTR_CRAT_TP_CD
        FROM
            INV_LINE            IL
           ,SVC_INV_LINE        SIL
           ,DS_CONTR_DTL        DCD
           ,MDSE                M
        WHERE
            IL.GLBL_CMPY_CD             = #glblCmpyCd#
        AND IL.INV_NUM                  = #invNum#
        AND IL.EZCANCELFLAG             = '0' 
        AND IL.GLBL_CMPY_CD             = SIL.GLBL_CMPY_CD
        AND IL.SVC_INV_LINE_PK          = SIL.SVC_INV_LINE_PK
        AND SIL.EZCANCELFLAG            = '0' 
        AND IL.GLBL_CMPY_CD             = DCD.GLBL_CMPY_CD (+)
        AND IL.DS_CONTR_DTL_PK          = DCD.DS_CONTR_DTL_PK (+)
        AND DCD.EZCANCELFLAG(+)         = '0'
        AND SIL.GLBL_CMPY_CD            = M.GLBL_CMPY_CD(+)
        AND SIL.EZCANCELFLAG            = M.EZCANCELFLAG(+)
        AND SIL.SVC_PGM_MDSE_CD         = M.MDSE_CD(+)
        ORDER BY
             IL.INV_BOL_LINE_NUM
            ,IL.INV_LINE_NUM
            ,IL.INV_LINE_SUB_NUM
            ,IL.INV_LINE_SUB_TRX_NUM
             
    </statement>

    <!-- 2019/06/13 QC#50817 Add Start-->
    <!-- START 2022/08/03 [QC#60129, MOD] -->
    <!-- <statement id="getPmtCCCount" parameterClass="Map" resultClass="BigDecimal"> -->
    <statement id="getPmtCCInfo" parameterClass="Map" resultClass="Map">
    <!-- END   2022/08/03 [QC#60129, MOD] -->
        SELECT
            <!-- START 2022/08/03 [QC#60129, MOD] -->
            <!-- COUNT(1) CNT -->
            I.CR_CARD_CUST_REF_NUM
           ,I.CR_CARD_CHRG_CPLT_CD
           ,DCC.CR_CARD_LAST_DIGIT_NUM
            <!-- START 2022/08/03 [QC#60129, MOD] -->
        FROM
          INV_PRT_CTRL IPC
          , CONSL_BILL_LINE CBL
          , INV I
          , PMT_TERM_CASH_DISC PTCD 
          <!-- START 2022/08/03 [QC#60129, ADD] -->
          , DS_CR_CARD DCC
          <!-- END   2022/08/03 [QC#60129, ADD] -->
        WHERE
          IPC.GLBL_CMPY_CD = #glblCmpyCd#
          AND IPC.CONSL_BILL_FLG = 'Y' 
          AND IPC.INV_OTPT_REQ_FLG = 'N' 
          AND IPC.GLBL_CMPY_CD = CBL.GLBL_CMPY_CD 
          AND IPC.INV_NUM = CBL.CONSL_BILL_TRX_ID 
          AND CBL.CONSL_BILL_PK =  #conslBillPk#
          AND IPC.GLBL_CMPY_CD = I.GLBL_CMPY_CD 
          AND IPC.INV_NUM = I.INV_NUM 
          AND I.GLBL_CMPY_CD = PTCD.GLBL_CMPY_CD 
          AND I.PMT_TERM_CASH_DISC_CD = PTCD.PMT_TERM_CASH_DISC_CD 
          AND PTCD.PMT_CC_FLG = 'Y'
          AND IPC.EZCANCELFLAG = '0' 
          AND CBL.EZCANCELFLAG = '0' 
          AND I.EZCANCELFLAG = '0' 
          AND PTCD.EZCANCELFLAG = '0'
        <!-- START 2022/08/03 [QC#60129, ADD] -->
          AND I.GLBL_CMPY_CD = DCC.GLBL_CMPY_CD
          AND DCC.EZCANCELFLAG = '0'
          AND I.CR_CARD_CUST_REF_NUM = DCC.CR_CARD_CUST_REF_NUM
        GROUP BY
           I.CR_CARD_CUST_REF_NUM
          ,I.CR_CARD_CHRG_CPLT_CD
          ,DCC.CR_CARD_LAST_DIGIT_NUM
        ORDER BY
          DCC.CR_CARD_LAST_DIGIT_NUM
        <!-- START 2022/08/03 [QC#60129, ADD] -->
    </statement>
    <!-- 2019/06/13 QC#50817 Add End-->

    <!-- 2019/10/10 QC#53888 Add Start -->
    <statement id="truncateWrkTbl" parameterClass="Map">
        TRUNCATE TABLE INV_PRT_SVC_INV_LINE_WRK
    </statement>
    <!-- 2019/10/10 QC#53888 Add End -->

    <!-- 2019/10/11 QC#53888 Add Start-->
    <statement id="insertInvPrtSvcInvLineWrk" parameterClass="Map" resultClass="BigDecimal">
        DECLARE
          TYPE TYPE_INV_PRT_SVC_INV_LINE_WRK IS TABLE OF INV_PRT_SVC_INV_LINE_WRK%ROWTYPE;
          workList TYPE_INV_PRT_SVC_INV_LINE_WRK;
          cur SYS_REFCURSOR;
        BEGIN

           OPEN cur FOR
            SELECT
                EZTABLEID
                , EZCANCELFLAG
                , EZINTIME
                , EZINTIMEZONE
                , EZINCOMPANYCODE
                , EZINUSERID
                , EZINAPLID
                , EZUPTIME
                , EZUPTIMEZONE
                , EZUPCOMPANYCODE
                , EZUPUSERID
                , EZUPAPLID
                , GLBL_CMPY_CD
                , INV_PRT_SVC_INV_LINE_WRK_SQ.NEXTVAL INV_PRT_SVC_INV_LINE_WRK_PK
                , SVC_INV_LINE_PK
                , SVC_INV_NUM
                , SVC_INV_LINE_NUM
                , INV_NUM
                , INV_BOL_LINE_NUM
                , INV_LINE_NUM
                , INV_LINE_SUB_NUM
                , INV_LINE_SUB_TRX_NUM
                , SVC_INV_CHRG_TP_CD
                , MDSE_CD
                , MDSE_NM
                , TRX_CD
                , TRX_RSN_CD
                , SLS_REP_TOC_CD
                , SVC_INV_QTY
                , SVC_INV_UNIT_HRS_AOT
                , DEAL_UNIT_PRC_AMT
                , FUNC_UNIT_PRC_AMT
                , SVC_INV_MN_AOT
                , INV_LINE_DEAL_SLS_AMT
                , INV_LINE_FUNC_SLS_AMT
                , SVC_LBOR_DEAL_AMT
                , SVC_LBOR_FUNC_AMT
                , INV_LINE_DEAL_NET_AMT
                , INV_LINE_FUNC_NET_AMT
                , SLS_TAX_RATE
                , INV_LINE_DEAL_TAX_AMT
                , INV_LINE_FUNC_TAX_AMT
                , INV_LINE_DISC_RATE
                , INV_LINE_DEAL_DISC_AMT
                , INV_LINE_FUNC_DISC_AMT
                , DEAL_DISC_UNIT_PRC_AMT
                , FUNC_DISC_UNIT_PRC_AMT
                , COA_CMPY_CD
                , COA_AFFL_CD
                , COA_BR_CD
                , COA_CH_CD
                , COA_CC_CD
                , COA_ACCT_CD
                , COA_PROD_CD
                , COA_PROJ_CD
                , COA_EXTN_CD
                , SHIP_TO_CUST_CD
                , MDL_NM
                , MDL_ID
                , SVC_INIT_CHRG_PCT
                , SVC_TASK_NUM
                , SVC_INV_TZ
                , SVC_TASK_CPLT_DT
                , SVC_TASK_CPLT_TM
                , CR_DR_SUB_RSN_CD
                , BLLG_PER_FROM_DT
                , BLLG_PER_THRU_DT
                , SVC_CONTR_BLLG_PK
                , DS_CONTR_PK
                , DS_CONTR_DTL_PK
                , SVC_CONTR_BASE_BLLG_PK
                , TAX_CALC_GEO_CD
                , SVC_PGM_MDSE_CD
                , INTG_MDSE_CD
                , SVC_MACH_MSTR_PK
                , SER_NUM
                , CUST_ISS_PO_NUM
                , CUST_ISS_PO_DT
                , PRNT_SVC_INV_LINE_PK
                , FIRST_BLLG_ATTRB_VAL_TXT
                , SCD_BLLG_ATTRB_VAL_TXT
                , THIRD_BLLG_ATTRB_VAL_TXT
                , FRTH_BLLG_ATTRB_VAL_TXT
                , FIFTH_BLLG_ATTRB_VAL_TXT
                , SIXTH_BLLG_ATTRB_VAL_TXT
                , BLLG_CYCLE_CD
                , BLLG_PER_MTH_AOT
                , SVC_INV_LINE_TP_CD
                , COPY_INCL_QTY
                , INV_DISP_UNIT_PRC_AMT
                , UOM_CD
                , INV_DISP_QTY
                , DS_CONTR_BLLG_SCHD_PK
                , BASE_PRC_ADJ_DEAL_AMT
                , BASE_PRC_ADJ_FUNC_AMT
                , SVC_PGM_MDSE_NM
                , PRNT_SER_NUM
                , PRNT_MACH_MSTR_ID
                , SVC_INV_ELIG_FLG
                , DS_CONTR_ADDL_CHRG_PK
                , INV_PRINT_COV_TXT
                , MTR_ROLL_OVER_FLG
                , MTR_EXCH_FLG
                , INV_PRT_FLG 
            FROM (
                WITH INV_LIST AS (
                SELECT
                     I.INV_NUM                                              INV_NUM
                FROM 
                     SVC_INV            SI
                    ,BILL_TO_CUST       BTC
                    ,PMT_TERM           PT
                    ,INV                I
                    ,REM_TO             RT
                    ,DS_INV_TP          DIT
                    ,SELL_TO_CUST       DAC
                    ,PMT_TERM_CASH_DISC PTCD
                    ,EIN                E
                    ,DS_CR_CARD         DCC
                    ,CCY                CCY
                    ,LINE_BIZ_TP        LBT
                WHERE
                        I.INV_PRINT_STS_CD      IN (#invPrintStsCd1#, #invPrintStsCd3#)
                    AND I.INV_DT            &lt;= #slsDt#
                    AND I.GLBL_CMPY_CD          = #glblCmpyCd#
                    AND I.FNLZ_INV_FLG          = 'Y'
                    AND I.EZCANCELFLAG          = '0'
                    AND I.BILL_TO_CUST_CD       = BTC.BILL_TO_CUST_CD
                    AND I.GLBL_CMPY_CD          = BTC.GLBL_CMPY_CD
                    AND BTC.EZCANCELFLAG        = '0'
                    AND I.PMT_TERM_CD           = PT.PMT_TERM_CD
                    AND I.GLBL_CMPY_CD          = PT.GLBL_CMPY_CD
                    AND PT.EZCANCELFLAG         = '0'
                    AND I.SYS_SRC_CD         &lt;&gt; #sysSrcCdNFC#
                    AND I.INV_NUM               = SI.SVC_INV_NUM 
                    AND I.GLBL_CMPY_CD          = SI.GLBL_CMPY_CD
                    AND SI.EZCANCELFLAG         = '0'
                    AND BTC.REM_ID              = RT.REM_ID
                    AND BTC.GLBL_CMPY_CD        = RT.GLBL_CMPY_CD
                    AND RT.EZCANCELFLAG         = '0'
                    AND I.DS_INV_TP_CD         = DIT.DS_INV_TP_CD
                    AND I.GLBL_CMPY_CD         = DIT.GLBL_CMPY_CD
                    AND DIT.EZCANCELFLAG        = '0'
                    AND I.BILL_TO_CUST_ACCT_CD = DAC.SELL_TO_CUST_CD
                    AND I.GLBL_CMPY_CD         = DAC.GLBL_CMPY_CD
                    AND DAC.EZCANCELFLAG        = '0'
                    <isEqual property="procMode" compareValue="01">
                    AND NOT EXISTS (SELECT '1' 
                                    FROM    INV_PRT_CTRL    IPC
                                    WHERE IPC.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                                      AND IPC.INV_NUM      = I.INV_NUM
                                      AND IPC.EZCANCELFLAG = '0')
                    </isEqual>
                    <isEqual property="procMode" compareValue="02">
                    AND EXISTS (SELECT '1' 
                                    FROM    INV_PRT_CTRL    IPC
                                    WHERE IPC.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                                      AND IPC.INV_NUM      = I.INV_NUM
                                      AND IPC.EZCANCELFLAG = '0')
                    </isEqual>
                    AND I.PMT_TERM_CASH_DISC_CD     = PTCD.PMT_TERM_CASH_DISC_CD
                    AND I.GLBL_CMPY_CD              = PTCD.GLBL_CMPY_CD
                    AND PTCD.EZCANCELFLAG           = '0'
                    AND E.GLBL_CMPY_CD              = #glblCmpyCd#
                    AND E.EZCANCELFLAG              = '0'
                    AND SI.CR_CARD_CUST_REF_NUM     = DCC.CR_CARD_CUST_REF_NUM(+)
                    AND SI.GLBL_CMPY_CD             = DCC.GLBL_CMPY_CD(+)
                    AND DCC.EZCANCELFLAG(+)         = '0'
                    AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
                    AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
                    AND CCY.EZCANCELFLAG(+)         = '0'
                    AND I.GLBL_CMPY_CD             = LBT.GLBL_CMPY_CD(+)   
                    AND I.LINE_BIZ_TP_CD           = LBT.LINE_BIZ_TP_CD(+)   
                    AND LBT.EZCANCELFLAG(+)         = '0'
               UNION
                SELECT
                     I.INV_NUM                                              INV_NUM
                FROM 
                     SVC_INV            SI
                    ,BILL_TO_CUST       BTC
                    ,PMT_TERM           PT
                    ,INV                I
                    ,REM_TO             RT
                    ,DS_INV_TP          DIT
                    ,SELL_TO_CUST       DAC
                    ,PMT_TERM_CASH_DISC PTCD
                    ,EIN                E
                    ,DS_CR_CARD         DCC
                    ,CCY                CCY
                    ,LINE_BIZ_TP        LBT
                    <!-- 2019/06/05 QC#50731 ADD START  -->
                    ,(SELECT IL.INV_NUM FROM INV_LINE IL, TAX_ADJ_ITEM TAI WHERE IL.GLBL_CMPY_CD = #glblCmpyCd# AND IL.EZCANCELFLAG = '0' AND IL.GLBL_CMPY_CD = TAI.GLBL_CMPY_CD AND IL.EZCANCELFLAG = TAI.EZCANCELFLAG AND IL.MDSE_CD = TAI.MDSE_CD GROUP BY IL.INV_NUM) IL
                    <!-- 2019/06/05 QC#50731 ADD END  -->
                WHERE
                        I.INV_PRINT_STS_CD      IN (#invPrintStsCd1#, #invPrintStsCd3#)
                    AND I.INV_DT            &lt;= #slsDt#
                    AND I.GLBL_CMPY_CD          = #glblCmpyCd#
                    AND I.FNLZ_INV_FLG          = 'Y'
                    AND I.EZCANCELFLAG          = '0'
                    AND I.BILL_TO_CUST_CD       = BTC.BILL_TO_CUST_CD
                    AND I.GLBL_CMPY_CD          = BTC.GLBL_CMPY_CD
                    AND BTC.EZCANCELFLAG        = '0'
                    AND I.PMT_TERM_CD           = PT.PMT_TERM_CD
                    AND I.GLBL_CMPY_CD          = PT.GLBL_CMPY_CD
                    AND PT.EZCANCELFLAG         = '0'
                    AND I.SYS_SRC_CD            = #sysSrcCdNFC#
                    AND I.ORIG_INV_NUM          = SI.SVC_INV_NUM 
                    AND I.GLBL_CMPY_CD          = SI.GLBL_CMPY_CD
                    AND SI.EZCANCELFLAG         = '0'
                    AND BTC.REM_ID              = RT.REM_ID
                    AND BTC.GLBL_CMPY_CD        = RT.GLBL_CMPY_CD
                    AND RT.EZCANCELFLAG         = '0'
                    AND I.DS_INV_TP_CD         = DIT.DS_INV_TP_CD
                    AND I.GLBL_CMPY_CD         = DIT.GLBL_CMPY_CD
                    AND DIT.EZCANCELFLAG        = '0'
                    AND I.BILL_TO_CUST_ACCT_CD = DAC.SELL_TO_CUST_CD
                    AND I.GLBL_CMPY_CD         = DAC.GLBL_CMPY_CD
                    AND DAC.EZCANCELFLAG        = '0'
                    <isEqual property="procMode" compareValue="01">
                    AND NOT EXISTS (SELECT '1' 
                                    FROM    INV_PRT_CTRL    IPC
                                    WHERE IPC.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                                      AND IPC.INV_NUM      = I.INV_NUM
                                      AND IPC.EZCANCELFLAG = '0')
                    </isEqual>
                    <isEqual property="procMode" compareValue="02">
                    AND EXISTS (SELECT '1' 
                                    FROM    INV_PRT_CTRL    IPC
                                    WHERE IPC.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                                      AND IPC.INV_NUM      = I.INV_NUM
                                      AND IPC.EZCANCELFLAG = '0')
                    </isEqual>
                    AND I.PMT_TERM_CASH_DISC_CD     = PTCD.PMT_TERM_CASH_DISC_CD
                    AND I.GLBL_CMPY_CD              = PTCD.GLBL_CMPY_CD
                    AND PTCD.EZCANCELFLAG           = '0'
                    AND E.GLBL_CMPY_CD              = #glblCmpyCd#
                    AND E.EZCANCELFLAG              = '0'
                    AND SI.CR_CARD_CUST_REF_NUM     = DCC.CR_CARD_CUST_REF_NUM(+)
                    AND SI.GLBL_CMPY_CD             = DCC.GLBL_CMPY_CD(+)
                    AND DCC.EZCANCELFLAG(+)         = '0'
                    AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD(+)
                    AND I.DEAL_CCY_CD               = CCY.CCY_CD(+)
                    AND CCY.EZCANCELFLAG(+)         = '0'
                    AND I.GLBL_CMPY_CD             = LBT.GLBL_CMPY_CD(+)   
                    AND I.LINE_BIZ_TP_CD           = LBT.LINE_BIZ_TP_CD(+)   
                    AND LBT.EZCANCELFLAG(+)         = '0'
                    <!-- 2019/06/05 QC#50731 ADD START -->
                    AND I.INV_NUM                   = IL.INV_NUM(+)
                    <!-- 2019/06/05 QC#50731 ADD END  -->
               UNION
                SELECT 
                     I.INV_NUM                                              INV_NUM
                FROM 
                     INV                I
                    ,BILL_TO_CUST       BTC
                    ,PMT_TERM           PT
                    ,CPO                DC
                    ,REM_TO             RT
                    ,DS_INV_TP          DIT
                    ,SELL_TO_CUST       DAC
                    ,PMT_TERM_CASH_DISC PTCD
                    ,EIN                E
                    ,CCY                CCY
                    ,LINE_BIZ_TP        LBT
                    ,DS_ORD_TP_PROC_DFN DOTPD
                WHERE
                        I.INV_PRINT_STS_CD      IN (#invPrintStsCd1#, #invPrintStsCd3#)
                    AND I.INV_DT            &lt;= #slsDt#
                    AND I.GLBL_CMPY_CD          = #glblCmpyCd#
                    AND I.FNLZ_INV_FLG          = 'Y'
                    AND I.EZCANCELFLAG          = '0'
                    AND NOT EXISTS (
                            SELECT
                                1
                            FROM
                                SVC_INV
                            WHERE
                                GLBL_CMPY_CD                    = #glblCmpyCd#
                            <!-- QC#27069 Del Start -->
                            <!--
                            AND
                                I.SYS_SRC_CD                    &lt;&gt; #sysSrcCdNFC#
                            -->
                            <!-- QC#27069 Del End -->
                            AND
                                SVC_INV_NUM                     = I.INV_NUM
                            AND
                                EZCANCELFLAG                    = '0'
                        )
                   <!-- QC#27069 Del Start -->
                   <!--
                    AND NOT EXISTS (
                            SELECT
                                1
                            FROM
                                SVC_INV
                            WHERE
                                GLBL_CMPY_CD                    = #glblCmpyCd#
                            AND
                                I.SYS_SRC_CD                    = #sysSrcCdNFC#
                            AND
                                SVC_INV_NUM                     = I.ORIG_INV_NUM
                            AND
                                EZCANCELFLAG                    = '0'
                        )
                    -->
                    <!-- QC#27069 Del End -->
                    AND I.BILL_TO_CUST_CD       = BTC.BILL_TO_CUST_CD
                    AND I.GLBL_CMPY_CD          = BTC.GLBL_CMPY_CD
                    AND BTC.EZCANCELFLAG        = '0'
                    AND I.PMT_TERM_CD           = PT.PMT_TERM_CD
                    AND I.GLBL_CMPY_CD          = PT.GLBL_CMPY_CD
                    AND PT.EZCANCELFLAG         = '0'
                    AND I.CPO_ORD_NUM           = DC.CPO_ORD_NUM(+)
                    AND I.GLBL_CMPY_CD          = DC.GLBL_CMPY_CD(+)
                    AND DC.EZCANCELFLAG(+)      = '0'
                    AND BTC.REM_ID              = RT.REM_ID(+)
                    AND BTC.GLBL_CMPY_CD        = RT.GLBL_CMPY_CD(+)
                    AND RT.EZCANCELFLAG(+)      = '0'
                    AND I.DS_INV_TP_CD         = DIT.DS_INV_TP_CD
                    AND I.GLBL_CMPY_CD         = DIT.GLBL_CMPY_CD
                    AND DIT.EZCANCELFLAG        = '0'
                    AND I.BILL_TO_CUST_ACCT_CD = DAC.SELL_TO_CUST_CD
                    AND I.GLBL_CMPY_CD         = DAC.GLBL_CMPY_CD
                    AND DAC.EZCANCELFLAG        = '0'
                    <isEqual property="procMode" compareValue="01">
                    AND NOT EXISTS (SELECT '1'
                                    FROM INV_PRT_CTRL       IPC
                                    WHERE IPC.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                                      AND IPC.INV_NUM      = I.INV_NUM
                                      AND IPC.EZCANCELFLAG = '0')
                    </isEqual>
                    <isEqual property="procMode" compareValue="02">
                    AND EXISTS (SELECT '1'
                                FROM INV_PRT_CTRL       IPC
                                WHERE IPC.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                                  AND IPC.INV_NUM      = I.INV_NUM
                                  AND IPC.EZCANCELFLAG = '0')
                    </isEqual>
                    AND I.PMT_TERM_CASH_DISC_CD = PTCD.PMT_TERM_CASH_DISC_CD
                    AND I.GLBL_CMPY_CD          = PTCD.GLBL_CMPY_CD
                    AND PTCD.EZCANCELFLAG       = '0'
                    AND E.GLBL_CMPY_CD          = #glblCmpyCd#
                    AND E.EZCANCELFLAG          = '0'
                    AND I.GLBL_CMPY_CD          = CCY.GLBL_CMPY_CD(+)
                    AND I.DEAL_CCY_CD           = CCY.CCY_CD(+)
                    AND CCY.EZCANCELFLAG(+)     = '0'
                    AND I.GLBL_CMPY_CD          = LBT.GLBL_CMPY_CD(+)
                    AND I.LINE_BIZ_TP_CD        = LBT.LINE_BIZ_TP_CD(+)
                    AND LBT.EZCANCELFLAG(+)     = '0'
                    AND I.GLBL_CMPY_CD          = DOTPD.GLBL_CMPY_CD(+)
                    AND I.EZCANCELFLAG          = DOTPD.EZCANCELFLAG(+)
                    AND I.DS_ORD_TP_CD          = DOTPD.DS_ORD_TP_CD(+)
                    <!-- QC#27069 Add Start -->
                    AND I.SYS_SRC_CD            &lt;&gt; #sysSrcCdNFC#
                    <!-- QC#27069 Add End -->
               UNION
                SELECT 
                     I.INV_NUM                                              INV_NUM
                FROM 
                     INV                I
                    ,BILL_TO_CUST       BTC
                    ,PMT_TERM           PT
                    ,CPO                DC
                    ,REM_TO             RT
                    ,DS_INV_TP          DIT
                    ,SELL_TO_CUST       DAC
                    ,PMT_TERM_CASH_DISC PTCD
                    ,EIN                E
                    ,CCY                CCY
                    ,LINE_BIZ_TP        LBT
                    ,DS_ORD_TP_PROC_DFN DOTPD
                    <!-- 2019/06/05 QC#50731 ADD START  -->
                    ,(SELECT IL.INV_NUM FROM INV_LINE IL, TAX_ADJ_ITEM TAI WHERE IL.GLBL_CMPY_CD = #glblCmpyCd# AND IL.EZCANCELFLAG = '0' AND IL.GLBL_CMPY_CD = TAI.GLBL_CMPY_CD AND IL.EZCANCELFLAG = TAI.EZCANCELFLAG AND IL.MDSE_CD = TAI.MDSE_CD GROUP BY IL.INV_NUM) IL
                    <!-- 2019/06/05 QC#50731 ADD END  -->
                WHERE
                        I.INV_PRINT_STS_CD      IN (#invPrintStsCd1#, #invPrintStsCd3#)
                    AND I.INV_DT            &lt;= #slsDt#
                    AND I.GLBL_CMPY_CD          = #glblCmpyCd#
                    AND I.FNLZ_INV_FLG          = 'Y'
                    AND I.EZCANCELFLAG          = '0'
                    AND NOT EXISTS (
                            SELECT
                                1
                            FROM
                                SVC_INV
                            WHERE
                                GLBL_CMPY_CD                    = #glblCmpyCd#
                            AND
                                SVC_INV_NUM                     = I.ORIG_INV_NUM
                            AND
                                EZCANCELFLAG                    = '0'
                        )
                    AND I.BILL_TO_CUST_CD       = BTC.BILL_TO_CUST_CD
                    AND I.GLBL_CMPY_CD          = BTC.GLBL_CMPY_CD
                    AND BTC.EZCANCELFLAG        = '0'
                    AND I.PMT_TERM_CD           = PT.PMT_TERM_CD
                    AND I.GLBL_CMPY_CD          = PT.GLBL_CMPY_CD
                    AND PT.EZCANCELFLAG         = '0'
                    AND I.CPO_ORD_NUM           = DC.CPO_ORD_NUM(+)
                    AND I.GLBL_CMPY_CD          = DC.GLBL_CMPY_CD(+)
                    AND DC.EZCANCELFLAG(+)      = '0'
                    AND BTC.REM_ID              = RT.REM_ID(+)
                    AND BTC.GLBL_CMPY_CD        = RT.GLBL_CMPY_CD(+)
                    AND RT.EZCANCELFLAG(+)      = '0'
                    AND I.DS_INV_TP_CD         = DIT.DS_INV_TP_CD
                    AND I.GLBL_CMPY_CD         = DIT.GLBL_CMPY_CD
                    AND DIT.EZCANCELFLAG        = '0'
                    AND I.BILL_TO_CUST_ACCT_CD = DAC.SELL_TO_CUST_CD
                    AND I.GLBL_CMPY_CD         = DAC.GLBL_CMPY_CD
                    AND DAC.EZCANCELFLAG        = '0'
                    <isEqual property="procMode" compareValue="01">
                    AND NOT EXISTS (SELECT '1'
                                    FROM INV_PRT_CTRL       IPC
                                    WHERE IPC.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                                      AND IPC.INV_NUM      = I.INV_NUM
                                      AND IPC.EZCANCELFLAG = '0')
                    </isEqual>
                    <isEqual property="procMode" compareValue="02">
                    AND EXISTS (SELECT '1'
                                FROM INV_PRT_CTRL       IPC
                                WHERE IPC.GLBL_CMPY_CD = I.GLBL_CMPY_CD
                                  AND IPC.INV_NUM      = I.INV_NUM
                                  AND IPC.EZCANCELFLAG = '0')
                    </isEqual>
                    AND I.PMT_TERM_CASH_DISC_CD = PTCD.PMT_TERM_CASH_DISC_CD
                    AND I.GLBL_CMPY_CD          = PTCD.GLBL_CMPY_CD
                    AND PTCD.EZCANCELFLAG       = '0'
                    AND E.GLBL_CMPY_CD          = #glblCmpyCd#
                    AND E.EZCANCELFLAG          = '0'
                    AND I.GLBL_CMPY_CD          = CCY.GLBL_CMPY_CD(+)
                    AND I.DEAL_CCY_CD           = CCY.CCY_CD(+)
                    AND CCY.EZCANCELFLAG(+)     = '0'
                    AND I.GLBL_CMPY_CD          = LBT.GLBL_CMPY_CD(+)   
                    AND I.LINE_BIZ_TP_CD        = LBT.LINE_BIZ_TP_CD(+)   
                    AND LBT.EZCANCELFLAG(+)     = '0'
                    AND I.GLBL_CMPY_CD          = DOTPD.GLBL_CMPY_CD(+)
                    AND I.EZCANCELFLAG          = DOTPD.EZCANCELFLAG(+)
                    AND I.DS_ORD_TP_CD          = DOTPD.DS_ORD_TP_CD(+)
                    AND I.SYS_SRC_CD            = #sysSrcCdNFC#
                    <!-- 2019/06/05 QC#50731 ADD START  -->
                    AND I.INV_NUM               = IL.INV_NUM(+)
                    <!-- 2019/06/05 QC#50731 ADD END  -->
               UNION
                SELECT
                     CBL.CONSL_BILL_TRX_NUM    INV_NUM
                FROM 
                     INV_PRT_CTRL           IPC
                    ,CONSL_BILL_LINE        CBL
                    ,CONSL_BILL             CB
                    ,BILL_TO_CUST           BTC
                    ,PMT_TERM               PT
                    ,REM_TO                 RT
                    ,EIN                    E
                    ,INV                    I
                    ,DS_INV_TP              DIT
                    ,INV_PRT_HDR            IPH
                    ,PMT_TERM_CASH_DISC     PTCD
                    ,INV_PRT_BAT_TP         IR
                    ,LINE_BIZ_TP            LBT
                    ,CCY
                    ,SELL_TO_CUST           DAC
                    ,SVC_INV                SI
                    ,AR_TRX_BAL             ATB  <!-- QC#21990 -->
                WHERE
                        IPC.GLBL_CMPY_CD            = #glblCmpyCd# 
                    AND IPC.CONSL_BILL_FLG          = 'Y' 
                    AND IPC.INV_OTPT_REQ_FLG        = 'N' 
                    AND IPC.GLBL_CMPY_CD            = CBL.GLBL_CMPY_CD
                    AND IPC.INV_NUM                 = CBL.CONSL_BILL_TRX_ID
                    AND CBL.GLBL_CMPY_CD            = CB.GLBL_CMPY_CD
                    AND CBL.CONSL_BILL_PK           = CB.CONSL_BILL_PK
                    AND CB.CONSL_PRINT_STS_CD       = #conslPrintStsN# 
                    AND CB.CONSL_STS_CD             = #conslStsCd10# 
                    AND CB.GLBL_CMPY_CD             = BTC.GLBL_CMPY_CD (+) 
                    AND CB.BILL_TO_CUST_CD          = BTC.BILL_TO_CUST_CD (+) 
                    AND CB.GLBL_CMPY_CD             = PT.GLBL_CMPY_CD (+) 
                    AND CB.PMT_TERM_CD              = PT.PMT_TERM_CD (+) 
                    AND BTC.GLBL_CMPY_CD            = RT.GLBL_CMPY_CD (+) 
                    AND BTC.REM_ID                  = RT.REM_ID (+) 
                    AND IPC.GLBL_CMPY_CD            = E.GLBL_CMPY_CD 
                    AND IPC.GLBL_CMPY_CD            = I.GLBL_CMPY_CD 
                    AND IPC.INV_NUM                 = I.INV_NUM 
                    AND IPC.GLBL_CMPY_CD            = SI.GLBL_CMPY_CD(+) 
                    AND IPC.INV_NUM                 = SI.SVC_INV_NUM(+) 
                    AND I.GLBL_CMPY_CD              = IR.GLBL_CMPY_CD(+)
                    AND I.INV_PRT_BAT_TP_CD         = IR.INV_PRT_BAT_TP_CD(+)
                    AND I.GLBL_CMPY_CD              = DIT.GLBL_CMPY_CD
                    AND I.DS_INV_TP_CD              = DIT.DS_INV_TP_CD
                    AND IPC.GLBL_CMPY_CD            = IPH.GLBL_CMPY_CD 
                    AND IPC.INV_PRT_CTRL_PK         = IPH.INV_PRT_CTRL_PK 
                    AND I.GLBL_CMPY_CD              = PTCD.GLBL_CMPY_CD 
                    AND I.PMT_TERM_CASH_DISC_CD     = PTCD.PMT_TERM_CASH_DISC_CD 
                    AND IPC.EZCANCELFLAG            = '0'
                    AND CBL.EZCANCELFLAG            = '0'
                    AND CB.EZCANCELFLAG             = '0'
                    AND BTC.EZCANCELFLAG(+)         = '0'
                    AND PT.EZCANCELFLAG(+)          = '0'
                    AND RT.EZCANCELFLAG(+)          = '0'
                    AND E.EZCANCELFLAG              = '0'
                    AND I.EZCANCELFLAG              = '0'
                    AND SI.EZCANCELFLAG(+)          = '0'
                    AND DIT.EZCANCELFLAG            = '0'
                    AND IR.EZCANCELFLAG(+)          = '0'
                    AND IPH.EZCANCELFLAG            = '0'
                    AND PTCD.EZCANCELFLAG           = '0'
                    AND I.GLBL_CMPY_CD             = LBT.GLBL_CMPY_CD(+)   
                    AND I.LINE_BIZ_TP_CD           = LBT.LINE_BIZ_TP_CD(+)   
                    AND LBT.EZCANCELFLAG(+)         = '0'
                    AND I.DEAL_CCY_CD               = CCY.CCY_CD
                    AND I.GLBL_CMPY_CD              = CCY.GLBL_CMPY_CD
                    AND CCY.EZCANCELFLAG(+)         = '0'
                    AND DAC.EZCANCELFLAG(+)         = '0'
                    AND CB.GLBL_CMPY_CD             = DAC.GLBL_CMPY_CD(+)   
                    AND CB.BILL_TO_CUST_ACCT_CD     = DAC.SELL_TO_CUST_CD(+)   
                    AND I.GLBL_CMPY_CD              = ATB.GLBL_CMPY_CD(+)  <!-- QC#21990 -->
                    AND ATB.EZCANCELFLAG(+)         = '0'  <!-- QC#21990 -->
                    AND I.INV_NUM                   = ATB.AR_TRX_NUM(+)  <!-- QC#21990 -->
                    <isEqual property="procMode" compareValue="01">
                    AND NOT EXISTS (SELECT '1' 
                                FROM    INV_PRT_CTRL    IPC
                                WHERE IPC.GLBL_CMPY_CD = CB.GLBL_CMPY_CD
                                  AND IPC.CONSL_BILL_NUM = TO_CHAR(CB.CONSL_BILL_PK)
                                  AND IPC.INV_NUM IS NULL
                                  AND IPC.EZCANCELFLAG = '0')
                    </isEqual>
                    <isEqual property="procMode" compareValue="02">
                    AND EXISTS (SELECT '1' 
                                FROM    INV_PRT_CTRL    IPC
                                WHERE IPC.GLBL_CMPY_CD = CB.GLBL_CMPY_CD
                                  AND IPC.CONSL_BILL_NUM = TO_CHAR(CB.CONSL_BILL_PK)
                                  AND IPC.INV_NUM IS NULL
                                  AND IPC.EZCANCELFLAG = '0')
                    </isEqual>
                ) 
                , INV_LIST_EX AS (
                  SELECT DISTINCT INV_NUM INV_NUM FROM (
                      SELECT LIST.INV_NUM 
                      FROM INV_LIST LIST
                      UNION ALL
                      SELECT ORIG_INV_NUM 
                      FROM INV I, INV_LIST LIST
                      WHERE I.INV_NUM = LIST.INV_NUM
                      AND   I.ORIG_INV_NUM IS NOT NULL
                  )
                )
                SELECT
                    'INV_PRT_SVC_INV_LINE_WRK' EZTABLEID
                  , ORIG.EZCANCELFLAG
                  , ORIG.EZINTIME
                  , ORIG.EZINTIMEZONE
                  , ORIG.EZINCOMPANYCODE
                  , ORIG.EZINUSERID
                  , ORIG.EZINAPLID
                  , ORIG.EZUPTIME
                  , ORIG.EZUPTIMEZONE
                  , ORIG.EZUPCOMPANYCODE
                  , ORIG.EZUPUSERID
                  , ORIG.EZUPAPLID
                  , ORIG.GLBL_CMPY_CD
                  , ORIG.SVC_INV_LINE_PK
                  , ORIG.SVC_INV_NUM
                  , ORIG.SVC_INV_LINE_NUM
                  , ORIG.INV_NUM
                  , ORIG.INV_BOL_LINE_NUM
                  , ORIG.INV_LINE_NUM
                  , ORIG.INV_LINE_SUB_NUM
                  , ORIG.INV_LINE_SUB_TRX_NUM
                  , ORIG.SVC_INV_CHRG_TP_CD
                  , ORIG.MDSE_CD
                  , ORIG.MDSE_NM
                  , ORIG.TRX_CD
                  , ORIG.TRX_RSN_CD
                  , ORIG.SLS_REP_TOC_CD
                  , ORIG.SVC_INV_QTY
                  , ORIG.SVC_INV_UNIT_HRS_AOT
                  , ORIG.DEAL_UNIT_PRC_AMT
                  , ORIG.FUNC_UNIT_PRC_AMT
                  , ORIG.SVC_INV_MN_AOT
                  , ORIG.INV_LINE_DEAL_SLS_AMT
                  , ORIG.INV_LINE_FUNC_SLS_AMT
                  , ORIG.SVC_LBOR_DEAL_AMT
                  , ORIG.SVC_LBOR_FUNC_AMT
                  , ORIG.INV_LINE_DEAL_NET_AMT + NVL(RENTAL.INV_LINE_DEAL_NET_AMT, 0) INV_LINE_DEAL_NET_AMT
                  , ORIG.INV_LINE_FUNC_NET_AMT + NVL(RENTAL.INV_LINE_FUNC_NET_AMT, 0) INV_LINE_FUNC_NET_AMT
                  , ORIG.SLS_TAX_RATE
                  , ORIG.INV_LINE_DEAL_TAX_AMT + NVL(RENTAL.INV_LINE_DEAL_TAX_AMT, 0) INV_LINE_DEAL_TAX_AMT
                  , ORIG.INV_LINE_FUNC_TAX_AMT + NVL(RENTAL.INV_LINE_FUNC_TAX_AMT, 0) INV_LINE_FUNC_TAX_AMT
                  , ORIG.INV_LINE_DISC_RATE
                  , ORIG.INV_LINE_DEAL_DISC_AMT
                  , ORIG.INV_LINE_FUNC_DISC_AMT
                  , ORIG.DEAL_DISC_UNIT_PRC_AMT
                  , ORIG.FUNC_DISC_UNIT_PRC_AMT
                  , ORIG.COA_CMPY_CD
                  , ORIG.COA_AFFL_CD
                  , ORIG.COA_BR_CD
                  , ORIG.COA_CH_CD
                  , ORIG.COA_CC_CD
                  , ORIG.COA_ACCT_CD
                  , ORIG.COA_PROD_CD
                  , ORIG.COA_PROJ_CD
                  , ORIG.COA_EXTN_CD
                  , ORIG.SHIP_TO_CUST_CD
                  , ORIG.MDL_NM
                  , ORIG.MDL_ID
                  , ORIG.SVC_INIT_CHRG_PCT
                  , ORIG.SVC_TASK_NUM
                  , ORIG.SVC_INV_TZ
                  , ORIG.SVC_TASK_CPLT_DT
                  , ORIG.SVC_TASK_CPLT_TM
                  , ORIG.CR_DR_SUB_RSN_CD
                  , ORIG.BLLG_PER_FROM_DT
                  , ORIG.BLLG_PER_THRU_DT
                  , ORIG.SVC_CONTR_BLLG_PK
                  , ORIG.DS_CONTR_PK
                  , ORIG.DS_CONTR_DTL_PK
                  , ORIG.SVC_CONTR_BASE_BLLG_PK
                  , ORIG.TAX_CALC_GEO_CD
                  , ORIG.SVC_PGM_MDSE_CD
                  , ORIG.INTG_MDSE_CD
                  , ORIG.SVC_MACH_MSTR_PK
                  , ORIG.SER_NUM
                  , ORIG.CUST_ISS_PO_NUM
                  , ORIG.CUST_ISS_PO_DT
                  , ORIG.PRNT_SVC_INV_LINE_PK
                  , ORIG.FIRST_BLLG_ATTRB_VAL_TXT
                  , ORIG.SCD_BLLG_ATTRB_VAL_TXT
                  , ORIG.THIRD_BLLG_ATTRB_VAL_TXT
                  , ORIG.FRTH_BLLG_ATTRB_VAL_TXT
                  , ORIG.FIFTH_BLLG_ATTRB_VAL_TXT
                  , ORIG.SIXTH_BLLG_ATTRB_VAL_TXT
                  , ORIG.BLLG_CYCLE_CD
                  , ORIG.BLLG_PER_MTH_AOT
                  , ORIG.SVC_INV_LINE_TP_CD
                  , ORIG.COPY_INCL_QTY
                  , ORIG.INV_DISP_UNIT_PRC_AMT
                  , ORIG.UOM_CD
                  , ORIG.INV_DISP_QTY
                  , ORIG.DS_CONTR_BLLG_SCHD_PK
                  , ORIG.BASE_PRC_ADJ_DEAL_AMT
                  , ORIG.BASE_PRC_ADJ_FUNC_AMT
                  , ORIG.SVC_PGM_MDSE_NM
                  , ORIG.PRNT_SER_NUM
                  , ORIG.PRNT_MACH_MSTR_ID
                  , ORIG.SVC_INV_ELIG_FLG
                  , ORIG.DS_CONTR_ADDL_CHRG_PK
                  , ORIG.INV_PRINT_COV_TXT
                  , ORIG.MTR_ROLL_OVER_FLG
                  , ORIG.MTR_EXCH_FLG
                  , 'Y' INV_PRT_FLG 
                FROM
                  ( 
                    SELECT
                        'INV_PRT_SVC_INV_LINE_WRK' EZTABLEID
                      , SIL.EZCANCELFLAG
                      , SIL.EZINTIME
                      , SIL.EZINTIMEZONE
                      , SIL.EZINCOMPANYCODE
                      , SIL.EZINUSERID
                      , SIL.EZINAPLID
                      , SIL.EZUPTIME
                      , SIL.EZUPTIMEZONE
                      , SIL.EZUPCOMPANYCODE
                      , SIL.EZUPUSERID
                      , SIL.EZUPAPLID
                      , SIL.GLBL_CMPY_CD
                      , SIL.SVC_INV_LINE_PK
                      , IL.INV_NUM SVC_INV_NUM
                      , SIL.SVC_INV_LINE_NUM
                      , IL.INV_NUM
                      , IL.INV_BOL_LINE_NUM
                      , IL.INV_LINE_NUM
                      , IL.INV_LINE_SUB_NUM
                      , IL.INV_LINE_SUB_TRX_NUM
                      , SIL.SVC_INV_CHRG_TP_CD
                      , SIL.MDSE_CD
                      , SIL.MDSE_NM
                      , SIL.TRX_CD
                      , SIL.TRX_RSN_CD
                      , SIL.SLS_REP_TOC_CD
                      , SIL.SVC_INV_QTY
                      , SIL.SVC_INV_UNIT_HRS_AOT
                      , SIL.DEAL_UNIT_PRC_AMT
                      , SIL.FUNC_UNIT_PRC_AMT
                      , SIL.SVC_INV_MN_AOT
                      , SIL.INV_LINE_DEAL_SLS_AMT
                      , SIL.INV_LINE_FUNC_SLS_AMT
                      , SIL.SVC_LBOR_DEAL_AMT
                      , SIL.SVC_LBOR_FUNC_AMT
                      , IL.INV_LINE_DEAL_NET_AMT
                      , IL.INV_LINE_FUNC_NET_AMT
                      , SIL.SLS_TAX_RATE
                      , IL.INV_LINE_DEAL_TAX_AMT
                      , IL.INV_LINE_FUNC_TAX_AMT
                      , SIL.INV_LINE_DISC_RATE
                      , SIL.INV_LINE_DEAL_DISC_AMT
                      , SIL.INV_LINE_FUNC_DISC_AMT
                      , SIL.DEAL_DISC_UNIT_PRC_AMT
                      , SIL.FUNC_DISC_UNIT_PRC_AMT
                      , SIL.COA_CMPY_CD
                      , SIL.COA_AFFL_CD
                      , SIL.COA_BR_CD
                      , SIL.COA_CH_CD
                      , SIL.COA_CC_CD
                      , SIL.COA_ACCT_CD
                      , SIL.COA_PROD_CD
                      , SIL.COA_PROJ_CD
                      , SIL.COA_EXTN_CD
                      , SIL.SHIP_TO_CUST_CD
                      , SIL.MDL_NM
                      , SIL.MDL_ID
                      , SIL.SVC_INIT_CHRG_PCT
                      , SIL.SVC_TASK_NUM
                      , SIL.SVC_INV_TZ
                      , SIL.SVC_TASK_CPLT_DT
                      , SIL.SVC_TASK_CPLT_TM
                      , SIL.CR_DR_SUB_RSN_CD
                      , SIL.BLLG_PER_FROM_DT
                      , SIL.BLLG_PER_THRU_DT
                      , SIL.SVC_CONTR_BLLG_PK
                      , SIL.DS_CONTR_PK
                      , SIL.DS_CONTR_DTL_PK
                      , SIL.SVC_CONTR_BASE_BLLG_PK
                      , SIL.TAX_CALC_GEO_CD
                      , SIL.SVC_PGM_MDSE_CD
                      , SIL.INTG_MDSE_CD
                      , SIL.SVC_MACH_MSTR_PK
                      , SIL.SER_NUM
                      , SIL.CUST_ISS_PO_NUM
                      , SIL.CUST_ISS_PO_DT
                      , SIL.PRNT_SVC_INV_LINE_PK
                      , SIL.FIRST_BLLG_ATTRB_VAL_TXT
                      , SIL.SCD_BLLG_ATTRB_VAL_TXT
                      , SIL.THIRD_BLLG_ATTRB_VAL_TXT
                      , SIL.FRTH_BLLG_ATTRB_VAL_TXT
                      , SIL.FIFTH_BLLG_ATTRB_VAL_TXT
                      , SIL.SIXTH_BLLG_ATTRB_VAL_TXT
                      , SIL.BLLG_CYCLE_CD
                      , SIL.BLLG_PER_MTH_AOT
                      , SIL.SVC_INV_LINE_TP_CD
                      , SIL.COPY_INCL_QTY
                      , SIL.INV_DISP_UNIT_PRC_AMT
                      , SIL.UOM_CD
                      , SIL.INV_DISP_QTY
                      , SIL.DS_CONTR_BLLG_SCHD_PK
                      , SIL.BASE_PRC_ADJ_DEAL_AMT
                      , SIL.BASE_PRC_ADJ_FUNC_AMT
                      , SIL.SVC_PGM_MDSE_NM
                      , SIL.PRNT_SER_NUM
                      , SIL.PRNT_MACH_MSTR_ID
                      , SIL.SVC_INV_ELIG_FLG
                      , SIL.DS_CONTR_ADDL_CHRG_PK
                      , SIL.INV_PRINT_COV_TXT
                      , SIL.MTR_ROLL_OVER_FLG
                      , SIL.MTR_EXCH_FLG 
                    FROM
                      INV_LINE IL
                      , SVC_INV_LINE SIL 
                      <!-- QC#56119 020/03/08 Mod Start-->
                      <!-- , INV_LIST ILST -->
                      , INV_LIST_EX ILST
                      <!-- QC#56119 020/03/08 Mod End-->
                    WHERE
                      IL.EZCANCELFLAG = '0' 
                      AND IL.GLBL_CMPY_CD = SIL.GLBL_CMPY_CD 
                      AND IL.INV_NUM= ILST.INV_NUM
                      AND IL.SVC_INV_LINE_PK = SIL.SVC_INV_LINE_PK 
                      AND SIL.EZCANCELFLAG = '0' 
                      <!-- 2024/01/11 QC#61468 Add Start -->
                      AND SIL.SVC_INV_CHRG_TP_CD &lt;&gt; #siChrgTpCdFC#
                      <!-- 2024/01/11 QC#61468 Add End -->
                      AND NOT EXISTS ( 
                        SELECT
                            1 
                        FROM
                          MDSE M 
                        WHERE
                          SIL.GLBL_CMPY_CD = M.GLBL_CMPY_CD 
                          AND SIL.EZCANCELFLAG = M.EZCANCELFLAG 
                          AND SIL.SVC_PGM_MDSE_CD = M.MDSE_CD 
                          <!-- 2024/01/11 QC#61468 Add Start -->
                          AND SIL.SVC_INV_CHRG_TP_CD &lt;&gt; #siChrgTpCdFC#
                          <!-- 2024/01/11 QC#61468 Add End -->
                          AND M.SVC_PGM_TP_CD = '14'
                      )
                  ) ORIG
                  , ( 
                    SELECT
                        SIL.SVC_INV_LINE_PK
                      , IL.INV_NUM SVC_INV_NUM
                      , SIL.SVC_INV_CHRG_TP_CD
                      , SIL.BLLG_PER_FROM_DT
                      , SIL.SVC_MACH_MSTR_PK
                      , IL.INV_LINE_DEAL_NET_AMT
                      , IL.INV_LINE_FUNC_NET_AMT
                      , IL.INV_LINE_DEAL_TAX_AMT
                      , IL.INV_LINE_FUNC_TAX_AMT 
                    FROM
                      INV_LINE IL
                      , SVC_INV_LINE SIL
                      , MDSE M 
                      <!-- QC#56119 020/03/08 Mod Start-->
                      <!-- , INV_LIST ILST -->
                      , INV_LIST_EX ILST
                      <!-- QC#56119 020/03/08 Mod End-->
                    WHERE
                      IL.EZCANCELFLAG = '0' 
                      AND IL.GLBL_CMPY_CD = SIL.GLBL_CMPY_CD 
                      AND IL.SVC_INV_LINE_PK = SIL.SVC_INV_LINE_PK 
                      AND IL.INV_NUM = ILST.INV_NUM
                      AND SIL.EZCANCELFLAG = '0' 
                      AND SIL.GLBL_CMPY_CD = M.GLBL_CMPY_CD 
                      AND SIL.EZCANCELFLAG = M.EZCANCELFLAG 
                      AND SIL.SVC_PGM_MDSE_CD = M.MDSE_CD 
                      <!-- 2024/01/11 QC#61468 Add Start -->
                      AND SIL.SVC_INV_CHRG_TP_CD &lt;&gt; #siChrgTpCdFC#
                      <!-- 2024/01/11 QC#61468 Add End -->
                      AND M.SVC_PGM_TP_CD = '14'
                  ) RENTAL 
                WHERE
                  ORIG.SVC_INV_NUM = RENTAL.SVC_INV_NUM(+) 
                  AND ORIG.SVC_INV_CHRG_TP_CD = RENTAL.SVC_INV_CHRG_TP_CD(+) 
                  AND ORIG.BLLG_PER_FROM_DT = RENTAL.BLLG_PER_FROM_DT(+) 
                  AND ORIG.SVC_MACH_MSTR_PK = RENTAL.SVC_MACH_MSTR_PK(+) 
                UNION ALL 
                SELECT
                    'INV_PRT_SVC_INV_LINE_WRK' EZTABLEID
                  , RENTAL.EZCANCELFLAG
                  , RENTAL.EZINTIME
                  , RENTAL.EZINTIMEZONE
                  , RENTAL.EZINCOMPANYCODE
                  , RENTAL.EZINUSERID
                  , RENTAL.EZINAPLID
                  , RENTAL.EZUPTIME
                  , RENTAL.EZUPTIMEZONE
                  , RENTAL.EZUPCOMPANYCODE
                  , RENTAL.EZUPUSERID
                  , RENTAL.EZUPAPLID
                  , RENTAL.GLBL_CMPY_CD
                  , RENTAL.SVC_INV_LINE_PK
                  , RENTAL.SVC_INV_NUM
                  , RENTAL.SVC_INV_LINE_NUM
                  , RENTAL.INV_NUM
                  , RENTAL.INV_BOL_LINE_NUM
                  , RENTAL.INV_LINE_NUM
                  , RENTAL.INV_LINE_SUB_NUM
                  , RENTAL.INV_LINE_SUB_TRX_NUM
                  , RENTAL.SVC_INV_CHRG_TP_CD
                  , RENTAL.MDSE_CD
                  , RENTAL.MDSE_NM
                  , RENTAL.TRX_CD
                  , RENTAL.TRX_RSN_CD
                  , RENTAL.SLS_REP_TOC_CD
                  , RENTAL.SVC_INV_QTY
                  , RENTAL.SVC_INV_UNIT_HRS_AOT
                  , RENTAL.DEAL_UNIT_PRC_AMT
                  , RENTAL.FUNC_UNIT_PRC_AMT
                  , RENTAL.SVC_INV_MN_AOT
                  , RENTAL.INV_LINE_DEAL_SLS_AMT
                  , RENTAL.INV_LINE_FUNC_SLS_AMT
                  , RENTAL.SVC_LBOR_DEAL_AMT
                  , RENTAL.SVC_LBOR_FUNC_AMT
                  , CASE 
                    WHEN ORIG.SVC_INV_LINE_PK IS NULL 
                    THEN RENTAL.INV_LINE_DEAL_NET_AMT 
                    ELSE 0 
                    END INV_LINE_DEAL_NET_AMT
                  , CASE 
                    WHEN ORIG.SVC_INV_LINE_PK IS NULL 
                    THEN RENTAL.INV_LINE_FUNC_NET_AMT 
                    ELSE 0 
                    END INV_LINE_FUNC_NET_AMT
                  , RENTAL.SLS_TAX_RATE
                  , CASE 
                    WHEN ORIG.SVC_INV_LINE_PK IS NULL 
                    THEN RENTAL.INV_LINE_DEAL_TAX_AMT 
                    ELSE 0 
                    END INV_LINE_DEAL_TAX_AMT
                  , CASE 
                    WHEN ORIG.SVC_INV_LINE_PK IS NULL 
                    THEN RENTAL.INV_LINE_FUNC_TAX_AMT 
                    ELSE 0 
                    END INV_LINE_FUNC_TAX_AMT
                  , RENTAL.INV_LINE_DISC_RATE
                  , RENTAL.INV_LINE_DEAL_DISC_AMT
                  , RENTAL.INV_LINE_FUNC_DISC_AMT
                  , RENTAL.DEAL_DISC_UNIT_PRC_AMT
                  , RENTAL.FUNC_DISC_UNIT_PRC_AMT
                  , RENTAL.COA_CMPY_CD
                  , RENTAL.COA_AFFL_CD
                  , RENTAL.COA_BR_CD
                  , RENTAL.COA_CH_CD
                  , RENTAL.COA_CC_CD
                  , RENTAL.COA_ACCT_CD
                  , RENTAL.COA_PROD_CD
                  , RENTAL.COA_PROJ_CD
                  , RENTAL.COA_EXTN_CD
                  , RENTAL.SHIP_TO_CUST_CD
                  , CASE 
                    WHEN ORIG.SVC_INV_LINE_PK IS NULL 
                    THEN RENTAL.MDL_NM 
                    ELSE ORIG.MDL_NM 
                    END MDL_NM
                  , CASE 
                    WHEN ORIG.SVC_INV_LINE_PK IS NULL 
                    THEN RENTAL.MDL_ID 
                    ELSE ORIG.MDL_ID 
                    END MDL_ID
                  , RENTAL.SVC_INIT_CHRG_PCT
                  , RENTAL.SVC_TASK_NUM
                  , RENTAL.SVC_INV_TZ
                  , RENTAL.SVC_TASK_CPLT_DT
                  , RENTAL.SVC_TASK_CPLT_TM
                  , RENTAL.CR_DR_SUB_RSN_CD
                  , RENTAL.BLLG_PER_FROM_DT
                  , RENTAL.BLLG_PER_THRU_DT
                  , RENTAL.SVC_CONTR_BLLG_PK
                  , RENTAL.DS_CONTR_PK
                  , RENTAL.DS_CONTR_DTL_PK
                  , RENTAL.SVC_CONTR_BASE_BLLG_PK
                  , RENTAL.TAX_CALC_GEO_CD
                  , CASE 
                    WHEN ORIG.SVC_INV_LINE_PK IS NULL 
                    THEN RENTAL.SVC_PGM_MDSE_CD 
                    ELSE ORIG.SVC_PGM_MDSE_CD 
                    END SVC_PGM_MDSE_CD
                  , RENTAL.INTG_MDSE_CD
                  , RENTAL.SVC_MACH_MSTR_PK
                  , CASE 
                    WHEN ORIG.SVC_INV_LINE_PK IS NULL 
                    THEN RENTAL.SER_NUM 
                    ELSE ORIG.SER_NUM 
                    END SER_NUM
                  , CASE 
                    WHEN ORIG.SVC_INV_LINE_PK IS NULL 
                    THEN RENTAL.CUST_ISS_PO_NUM 
                    ELSE ORIG.CUST_ISS_PO_NUM 
                    END CUST_ISS_PO_NUM
                  , CASE 
                    WHEN ORIG.SVC_INV_LINE_PK IS NULL 
                    THEN RENTAL.CUST_ISS_PO_DT 
                    ELSE ORIG.CUST_ISS_PO_DT 
                    END CUST_ISS_PO_DT
                  , RENTAL.PRNT_SVC_INV_LINE_PK
                  , CASE 
                    WHEN ORIG.SVC_INV_LINE_PK IS NULL 
                    THEN RENTAL.FIRST_BLLG_ATTRB_VAL_TXT 
                    ELSE ORIG.FIRST_BLLG_ATTRB_VAL_TXT 
                    END FIRST_BLLG_ATTRB_VAL_TXT
                  , CASE 
                    WHEN ORIG.SVC_INV_LINE_PK IS NULL 
                    THEN RENTAL.SCD_BLLG_ATTRB_VAL_TXT 
                    ELSE ORIG.SCD_BLLG_ATTRB_VAL_TXT 
                    END SCD_BLLG_ATTRB_VAL_TXT
                  , CASE 
                    WHEN ORIG.SVC_INV_LINE_PK IS NULL 
                    THEN RENTAL.THIRD_BLLG_ATTRB_VAL_TXT 
                    ELSE ORIG.THIRD_BLLG_ATTRB_VAL_TXT 
                    END THIRD_BLLG_ATTRB_VAL_TXT
                  , CASE 
                    WHEN ORIG.SVC_INV_LINE_PK IS NULL 
                    THEN RENTAL.FRTH_BLLG_ATTRB_VAL_TXT 
                    ELSE ORIG.FRTH_BLLG_ATTRB_VAL_TXT 
                    END FRTH_BLLG_ATTRB_VAL_TXT
                  , CASE 
                    WHEN ORIG.SVC_INV_LINE_PK IS NULL 
                    THEN RENTAL.FIFTH_BLLG_ATTRB_VAL_TXT 
                    ELSE ORIG.FIFTH_BLLG_ATTRB_VAL_TXT 
                    END FIFTH_BLLG_ATTRB_VAL_TXT
                  , CASE 
                    WHEN ORIG.SVC_INV_LINE_PK IS NULL 
                    THEN RENTAL.SIXTH_BLLG_ATTRB_VAL_TXT 
                    ELSE ORIG.SIXTH_BLLG_ATTRB_VAL_TXT 
                    END SIXTH_BLLG_ATTRB_VAL_TXT
                  , RENTAL.BLLG_CYCLE_CD
                  , RENTAL.BLLG_PER_MTH_AOT
                  , RENTAL.SVC_INV_LINE_TP_CD
                  , RENTAL.COPY_INCL_QTY
                  , RENTAL.INV_DISP_UNIT_PRC_AMT
                  , RENTAL.UOM_CD
                  , RENTAL.INV_DISP_QTY
                  , RENTAL.DS_CONTR_BLLG_SCHD_PK
                  , RENTAL.BASE_PRC_ADJ_DEAL_AMT
                  , RENTAL.BASE_PRC_ADJ_FUNC_AMT
                  , RENTAL.SVC_PGM_MDSE_NM
                  , RENTAL.PRNT_SER_NUM
                  , RENTAL.PRNT_MACH_MSTR_ID
                  , RENTAL.SVC_INV_ELIG_FLG
                  , RENTAL.DS_CONTR_ADDL_CHRG_PK
                  , CASE 
                    WHEN ORIG.SVC_INV_LINE_PK IS NULL 
                    THEN RENTAL.INV_PRINT_COV_TXT 
                    ELSE ORIG.INV_PRINT_COV_TXT 
                    END INV_PRINT_COV_TXT
                  , RENTAL.MTR_ROLL_OVER_FLG
                  , RENTAL.MTR_EXCH_FLG
                  , CASE 
                    WHEN ORIG.SVC_INV_LINE_PK IS NULL 
                    THEN 'Y' 
                    ELSE 'N' 
                    END INV_PRT_FLG 
                FROM
                  ( 
                    SELECT
                        'INV_PRT_SVC_INV_LINE_WRK' EZTABLEID
                      , SIL.EZCANCELFLAG
                      , SIL.EZINTIME
                      , SIL.EZINTIMEZONE
                      , SIL.EZINCOMPANYCODE
                      , SIL.EZINUSERID
                      , SIL.EZINAPLID
                      , SIL.EZUPTIME
                      , SIL.EZUPTIMEZONE
                      , SIL.EZUPCOMPANYCODE
                      , SIL.EZUPUSERID
                      , SIL.EZUPAPLID
                      , SIL.GLBL_CMPY_CD
                      , SIL.SVC_INV_LINE_PK
                      , IL.INV_NUM SVC_INV_NUM
                      , SIL.SVC_INV_LINE_NUM
                      , IL.INV_NUM
                      , IL.INV_BOL_LINE_NUM
                      , IL.INV_LINE_NUM
                      , IL.INV_LINE_SUB_NUM
                      , IL.INV_LINE_SUB_TRX_NUM
                      , SIL.SVC_INV_CHRG_TP_CD
                      , SIL.MDSE_CD
                      , SIL.MDSE_NM
                      , SIL.TRX_CD
                      , SIL.TRX_RSN_CD
                      , SIL.SLS_REP_TOC_CD
                      , SIL.SVC_INV_QTY
                      , SIL.SVC_INV_UNIT_HRS_AOT
                      , SIL.DEAL_UNIT_PRC_AMT
                      , SIL.FUNC_UNIT_PRC_AMT
                      , SIL.SVC_INV_MN_AOT
                      , SIL.INV_LINE_DEAL_SLS_AMT
                      , SIL.INV_LINE_FUNC_SLS_AMT
                      , SIL.SVC_LBOR_DEAL_AMT
                      , SIL.SVC_LBOR_FUNC_AMT
                      , IL.INV_LINE_DEAL_NET_AMT
                      , IL.INV_LINE_FUNC_NET_AMT
                      , SIL.SLS_TAX_RATE
                      , IL.INV_LINE_DEAL_TAX_AMT
                      , IL.INV_LINE_FUNC_TAX_AMT
                      , SIL.INV_LINE_DISC_RATE
                      , SIL.INV_LINE_DEAL_DISC_AMT
                      , SIL.INV_LINE_FUNC_DISC_AMT
                      , SIL.DEAL_DISC_UNIT_PRC_AMT
                      , SIL.FUNC_DISC_UNIT_PRC_AMT
                      , SIL.COA_CMPY_CD
                      , SIL.COA_AFFL_CD
                      , SIL.COA_BR_CD
                      , SIL.COA_CH_CD
                      , SIL.COA_CC_CD
                      , SIL.COA_ACCT_CD
                      , SIL.COA_PROD_CD
                      , SIL.COA_PROJ_CD
                      , SIL.COA_EXTN_CD
                      , SIL.SHIP_TO_CUST_CD
                      , SIL.MDL_NM
                      , SIL.MDL_ID
                      , SIL.SVC_INIT_CHRG_PCT
                      , SIL.SVC_TASK_NUM
                      , SIL.SVC_INV_TZ
                      , SIL.SVC_TASK_CPLT_DT
                      , SIL.SVC_TASK_CPLT_TM
                      , SIL.CR_DR_SUB_RSN_CD
                      , SIL.BLLG_PER_FROM_DT
                      , SIL.BLLG_PER_THRU_DT
                      , SIL.SVC_CONTR_BLLG_PK
                      , SIL.DS_CONTR_PK
                      , SIL.DS_CONTR_DTL_PK
                      , SIL.SVC_CONTR_BASE_BLLG_PK
                      , SIL.TAX_CALC_GEO_CD
                      , SIL.SVC_PGM_MDSE_CD
                      , SIL.INTG_MDSE_CD
                      , SIL.SVC_MACH_MSTR_PK
                      , SIL.SER_NUM
                      , SIL.CUST_ISS_PO_NUM
                      , SIL.CUST_ISS_PO_DT
                      , SIL.PRNT_SVC_INV_LINE_PK
                      , SIL.FIRST_BLLG_ATTRB_VAL_TXT
                      , SIL.SCD_BLLG_ATTRB_VAL_TXT
                      , SIL.THIRD_BLLG_ATTRB_VAL_TXT
                      , SIL.FRTH_BLLG_ATTRB_VAL_TXT
                      , SIL.FIFTH_BLLG_ATTRB_VAL_TXT
                      , SIL.SIXTH_BLLG_ATTRB_VAL_TXT
                      , SIL.BLLG_CYCLE_CD
                      , SIL.BLLG_PER_MTH_AOT
                      , SIL.SVC_INV_LINE_TP_CD
                      , SIL.COPY_INCL_QTY
                      , SIL.INV_DISP_UNIT_PRC_AMT
                      , SIL.UOM_CD
                      , SIL.INV_DISP_QTY
                      , SIL.DS_CONTR_BLLG_SCHD_PK
                      , SIL.BASE_PRC_ADJ_DEAL_AMT
                      , SIL.BASE_PRC_ADJ_FUNC_AMT
                      , SIL.SVC_PGM_MDSE_NM
                      , SIL.PRNT_SER_NUM
                      , SIL.PRNT_MACH_MSTR_ID
                      , SIL.SVC_INV_ELIG_FLG
                      , SIL.DS_CONTR_ADDL_CHRG_PK
                      , SIL.INV_PRINT_COV_TXT
                      , SIL.MTR_ROLL_OVER_FLG
                      , SIL.MTR_EXCH_FLG 
                    FROM
                      INV_LINE IL
                      , SVC_INV_LINE SIL
                      , MDSE M 
                      <!-- QC#56119 020/03/08 Mod Start-->
                      <!-- , INV_LIST ILST -->
                      , INV_LIST_EX ILST
                      <!-- QC#56119 020/03/08 Mod End-->
                    WHERE
                      IL.EZCANCELFLAG = '0' 
                      AND IL.INV_NUM = ILST.INV_NUM
                      AND IL.GLBL_CMPY_CD = SIL.GLBL_CMPY_CD 
                      AND IL.SVC_INV_LINE_PK = SIL.SVC_INV_LINE_PK 
                      AND SIL.EZCANCELFLAG = '0' 
                      AND SIL.GLBL_CMPY_CD = M.GLBL_CMPY_CD 
                      AND SIL.EZCANCELFLAG = M.EZCANCELFLAG 
                      AND SIL.SVC_PGM_MDSE_CD = M.MDSE_CD 
                      <!-- 2024/01/11 QC#61468 Add Start -->
                      AND SIL.SVC_INV_CHRG_TP_CD &lt;&gt; #siChrgTpCdFC#
                      <!-- 2024/01/11 QC#61468 Add End -->
                      AND M.SVC_PGM_TP_CD = '14'
                  ) RENTAL
                  , ( 
                    SELECT
                        SIL.SVC_INV_LINE_PK
                      , IL.INV_NUM SVC_INV_NUM
                      , SIL.SVC_INV_CHRG_TP_CD
                      , IL.INV_LINE_DEAL_NET_AMT
                      , IL.INV_LINE_FUNC_NET_AMT
                      , IL.INV_LINE_DEAL_TAX_AMT
                      , IL.INV_LINE_FUNC_TAX_AMT
                      , SIL.BLLG_PER_FROM_DT
                      , SIL.BLLG_PER_THRU_DT
                      , SIL.MDL_NM
                      , SIL.MDL_ID
                      , SIL.SVC_PGM_MDSE_CD
                      , SIL.SVC_MACH_MSTR_PK
                      , SIL.SER_NUM
                      , SIL.CUST_ISS_PO_NUM
                      , SIL.CUST_ISS_PO_DT
                      , SIL.FIRST_BLLG_ATTRB_VAL_TXT
                      , SIL.SCD_BLLG_ATTRB_VAL_TXT
                      , SIL.THIRD_BLLG_ATTRB_VAL_TXT
                      , SIL.FRTH_BLLG_ATTRB_VAL_TXT
                      , SIL.FIFTH_BLLG_ATTRB_VAL_TXT
                      , SIL.SIXTH_BLLG_ATTRB_VAL_TXT
                      , SIL.INV_PRINT_COV_TXT 
                    FROM
                      INV_LINE IL
                      , SVC_INV_LINE SIL
                      , MDSE M 
                      <!-- QC#56119 020/03/08 Mod Start-->
                      <!-- , INV_LIST ILST -->
                      , INV_LIST_EX ILST
                      <!-- QC#56119 020/03/08 Mod End-->
                    WHERE
                      IL.EZCANCELFLAG = '0' 
                      AND IL.INV_NUM = ILST.INV_NUM
                      AND IL.GLBL_CMPY_CD = SIL.GLBL_CMPY_CD 
                      AND IL.SVC_INV_LINE_PK = SIL.SVC_INV_LINE_PK 
                      AND SIL.EZCANCELFLAG = '0' 
                      AND SIL.GLBL_CMPY_CD = M.GLBL_CMPY_CD 
                      AND SIL.EZCANCELFLAG = M.EZCANCELFLAG 
                      AND SIL.SVC_PGM_MDSE_CD = M.MDSE_CD 
                      <!-- 2024/01/11 QC#61468 Add Start -->
                      AND SIL.SVC_INV_CHRG_TP_CD &lt;&gt; #siChrgTpCdFC#
                      <!-- 2024/01/11 QC#61468 Add End -->
                      AND M.SVC_PGM_TP_CD &lt;&gt; '14'
                  ) ORIG 
                WHERE
                  RENTAL.SVC_INV_NUM = ORIG.SVC_INV_NUM(+) 
                  AND RENTAL.SVC_INV_CHRG_TP_CD = ORIG.SVC_INV_CHRG_TP_CD(+) 
                  AND RENTAL.BLLG_PER_FROM_DT = ORIG.BLLG_PER_FROM_DT(+) 
                  AND RENTAL.SVC_MACH_MSTR_PK = ORIG.SVC_MACH_MSTR_PK(+) 
            );

            FETCH cur BULK COLLECT INTO workList; 
            CLOSE cur;

            FORALL i in 1..workList.COUNT 
              INSERT INTO INV_PRT_SVC_INV_LINE_WRK VALUES workList(i);

        END;
    </statement>
    <!-- 2019/10/10 QC#53888 Add End-->
    <!-- 2019/11/02 QC#53873 ADD START -->
    <statement id="isCreditRebill" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
             INV                INV
            ,SVC_INV            SINV
        WHERE
                INV.GLBL_CMPY_CD            = #glblCmpyCd#
            AND INV.INV_NUM                 = #invNum#
            AND INV.EZCANCELFLAG            = '0'
            AND INV.SYS_SRC_CD             &lt;&gt; #excludeSysSrcCd#
            AND (
                INV.CR_REBIL_RSN_CATG_CD    IS NOT NULL
            OR 
                SINV.SVC_CR_REBIL_PK        IS NOT NULL
            OR 
                EXISTS (SELECT '1' FROM AR_CR_REBIL ACR WHERE ACR.EZCANCELFLAG = '0' 
                AND ACR.GLBL_CMPY_CD = INV.GLBL_CMPY_CD AND ACR.INV_NUM = INV.INV_NUM)
            )
            AND INV.GLBL_CMPY_CD            = SINV.GLBL_CMPY_CD(+)
            AND INV.INV_NUM                 = SINV.SVC_INV_NUM(+)
            AND SINV.EZCANCELFLAG(+)        = '0'
    </statement>
    <!-- 2019/11/02 QC#53873 ADD End -->
    <!-- QC#55210 2020/01/09 Add Start -->
    <statement id="getOriginalInvForComment" parameterClass="Map" resultClass="Map">
        SELECT
            I.ORIG_INV_NUM
            , I.CUST_CARE_TKT_NUM
        FROM 
            CONSL_BILL           CB
            , CONSL_BILL_LINE    CBL
            , INV                I
        WHERE
            CB.GLBL_CMPY_CD       = #glblCmpyCd#
        AND CB.EZCANCELFLAG       = '0'
        AND CB.CONSL_BILL_PK      = #consBillNum#
        AND CB.GLBL_CMPY_CD       = CBL.GLBL_CMPY_CD
        AND CB.EZCANCELFLAG       =  CBL.EZCANCELFLAG
        AND CB.CONSL_BILL_PK      = CBL.CONSL_BILL_PK
        AND CBL.GLBL_CMPY_CD      = I.GLBL_CMPY_CD
        AND CBL.EZCANCELFLAG      = I.EZCANCELFLAG
        AND CBL.CONSL_BILL_TRX_ID = I.INV_NUM
        AND EXISTS (
            SELECT
                '1'
            FROM
                INV_PRT_CTRL IPC
                , INV_PRT_HDR IPH
            WHERE
                    IPC.GLBL_CMPY_CD    = CBL.GLBL_CMPY_CD
                AND IPC.INV_NUM         = CBL.CONSL_BILL_TRX_NUM
                AND IPC.CONSL_BILL_NUM  = CBL.CONSL_BILL_PK
                AND IPC.CONSL_BILL_FLG  = 'Y'
                AND IPC.EZCANCELFLAG    = '0'
                AND IPC.GLBL_CMPY_CD    = IPH.GLBL_CMPY_CD
                AND IPC.INV_PRT_CTRL_PK = IPH.INV_PRT_CTRL_PK
                AND (IPH.EXCL_BILL_TXT  = 'NO' OR IPH.EXCL_BILL_TXT IS NULL)
        )
    </statement>
    <!-- QC#55210 2020/01/09 Add End -->
    <!-- QC#58231 -->
    <statement id="getLineAmt" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            IL.INV_LINE_DEAL_NET_AMT AS AMT
        FROM
            INV_PRT_SLS_PART_DTL IPSPD
           ,INV_LINE IL
           ,ALL_MDSE_V AMV
        WHERE
            IPSPD.GLBL_CMPY_CD = #glblCmpyCd#
        AND IPSPD.INV_NUM      = #invNum#
        AND IPSPD.GLBL_CMPY_CD = IL.GLBL_CMPY_CD
        AND IPSPD.INV_NUM      = IL.INV_NUM
        AND IPSPD.INV_LINE_NUM = IL.INV_LINE_NUM
        AND IPSPD.INV_BOL_LINE_NUM = IL.INV_BOL_LINE_NUM
        AND IPSPD.GLBL_CMPY_CD = AMV.GLBL_CMPY_CD
        AND IPSPD.MDSE_CD      = AMV.MDSE_CD
        <isNotNull property="coaProjCds">
            <iterate property="coaProjCds" var="coaProjCds[]" open="AND AMV.COA_MDSE_TP_CD IN (" close=")" conjunction=",">
                #coaProjCds[]#
            </iterate>
        </isNotNull>
        AND IPSPD.EZCANCELFLAG = '0'
        AND AMV.EZCANCELFLAG   = '0'
        AND IL.EZCANCELFLAG    = '0'
        UNION ALL
        SELECT
            TO_NUMBER(REGEXP_REPLACE(IPMCD.LINE_TOT_AMT_TXT, '[^0-9.]')) AS AMT
        FROM
            INV_PRT_MAINT_CHRG_DTL IPMCD
        WHERE
            IPMCD.GLBL_CMPY_CD = #glblCmpyCd#
        AND IPMCD.INV_NUM      = #invNum#
        AND IPMCD.EZCANCELFLAG = '0'
        UNION ALL
        SELECT
            TO_NUMBER(REGEXP_REPLACE(IPMM.LINE_TOT_AMT_TXT,'[^0-9.]')) AS AMT
        FROM
            INV_PRT_MAINT_MTR IPMM
        WHERE
            IPMM.GLBL_CMPY_CD = #glblCmpyCd#
        AND IPMM.INV_NUM      = #invNum#
        AND IPMM.EZCANCELFLAG = '0'
        UNION ALL
        SELECT
            TO_NUMBER(REGEXP_REPLACE(IPFCD.LINE_TOT_AMT_TXT, '[^0-9.]')) AS AMT
        FROM
            INV_PRT_FLEET_CHRG_DTL IPFCD
        WHERE
            IPFCD.GLBL_CMPY_CD = #glblCmpyCd#
        AND IPFCD.INV_NUM      = #invNum#
        AND IPFCD.EZCANCELFLAG = '0'
        UNION ALL
        SELECT
            TO_NUMBER(REGEXP_REPLACE(IPFSM.CONTR_MTR_TOT_AMT,'[^0-9.]')) AS AMT
        FROM
            INV_PRT_FLEET_SMRY_MTR IPFSM
        WHERE
            IPFSM.GLBL_CMPY_CD = #glblCmpyCd#
        AND IPFSM.INV_NUM      = #invNum#
        AND IPFSM.EZCANCELFLAG = '0'
    </statement>

    <!--  START 2021/04/23 L.Mandanas [QC#58350, ADD] -->
    <statement id="getNonFleetNextRolloverCount" parameterClass="Map" resultClass="Map">
        SELECT
            A.ROLL_OVER_CNT
            , A.DS_CONTR_BLLG_SCHD_PK
<!--  START 2021/09/23 L.Mandanas [QC#58350, ADD] -->
            , A.FREE_COPY_CNT
            , A.USG_FREE_COPY_CNT
<!--  END 2021/09/23 L.Mandanas [QC#58350, ADD] -->
        FROM
            DS_CONTR_BLLG_MTR_USED A
            , SVC_INV_LINE_MTR B
            ,(
<!--  START 2021/09/23 L.Mandanas [QC#58350, MOD] -->
<!--                     SELECT CASE SYS_SRC_CD WHEN 'NFC' THEN 
                        ORIG_INV_NUM
                    ELSE 
                        INV_NUM
                    END AS SVC_INV_NUM
                FROM
                    INV
                WHERE
                        INV_NUM = #invNum#
                    AND GLBL_CMPY_CD = #glblCmpyCd#
                    AND EZCANCELFLAG = '0'    -->
                SELECT CASE I.INV_TP_CD WHEN #invTpCd# THEN
                    I.ORIG_INV_NUM
                ELSE
                    I.INV_NUM
                END AS SVC_INV_NUM
                FROM
                    INV I
                WHERE
                        I.INV_NUM = #invNum#
                    AND I.GLBL_CMPY_CD = #glblCmpyCd#
                    AND I.EZCANCELFLAG = '0'
<!--  END 2021/09/23 L.Mandanas [QC#58350, MOD] -->
            ) C
        WHERE
                A.GLBL_CMPY_CD = #glblCmpyCd#
            AND A.EZCANCELFLAG = '0'
            AND EXISTS (
                SELECT
<!--  START 2021/09/23 L.Mandanas [QC#58350, MOD] -->
<!--                    *  -->
                    1
<!--  END 2021/09/23 L.Mandanas [QC#58350, MOD] -->
                FROM
                    DS_CONTR_BLLG_MTR X
                   , DS_CONTR_DTL Y
                WHERE
                        X.GLBL_CMPY_CD = #glblCmpyCd#
                    AND X.EZCANCELFLAG = '0'
<!--  START 2021/09/23 L.Mandanas [QC#58350, ADD] -->
                    AND X.GLBL_CMPY_CD = Y.GLBL_CMPY_CD(+)
                    AND X.EZCANCELFLAG = Y.EZCANCELFLAG(+)
<!--  END 2021/09/23 L.Mandanas [QC#58350, ADD] -->
                    AND X.DS_CONTR_DTL_PK = Y.DS_CONTR_DTL_PK
                    AND X.DS_CONTR_BLLG_MTR_PK = A.DS_CONTR_BLLG_MTR_PK
                    AND Y.DS_CONTR_PK = #dsContrPk#
            )
<!--  START 2021/09/23 L.Mandanas [QC#58350, MOD] -->
            AND A.GLBL_CMPY_CD = B.GLBL_CMPY_CD(+)
            <!-- AND B.EZCANCELFLAG = '0' -->
            AND A.EZCANCELFLAG = B.EZCANCELFLAG(+)
<!--  END 2021/09/23 L.Mandanas [QC#58350, MOD] -->
            AND A.SVC_INV_LINE_MTR_PK = B.SVC_INV_LINE_MTR_PK
            AND B.SVC_CONTR_MTR_BLLG_PK = #svcContrMtrBllgPk#
            AND B.SVC_INV_NUM = C.SVC_INV_NUM
            AND B.DS_CONTR_BLLG_MTR_PK             = #contrBllgPk#
    </statement>

    <statement id="getCurrentRolloverCount" parameterClass="Map" resultClass="Map">
       SELECT 
           A.ROLL_OVER_CNT
       FROM
           DS_CONTR_BLLG_MTR_USED A
           , (
               SELECT
                   PRV_DS_CONTR_BLLG_SCHD_PK
               FROM (
                   SELECT
                       B.DS_CONTR_BLLG_SCHD_PK AS PRV_DS_CONTR_BLLG_SCHD_PK
                       , B.DS_CONTR_DTL_PK AS PRV_DS_CONTR_DTL_PK
                       , B.DS_CONTR_BLLG_MTR_PK AS PRV_DS_CONTR_BLLG_MTR_PK
                       , B.SVC_INV_NUM AS PRV_SVC_INV_NUM
                       , B.INV_DT AS PRV_INV_DT
                       , B.BLLG_SCHD_THRU_DT AS PRV_BLLG_SCHD_THRU_DT
                       , ROW_NUMBER() OVER (
                           PARTITION BY 
                               A.DS_CONTR_BLLG_SCHD_PK
                           ORDER BY
                               B.INV_DT DESC
                           <!-- START 2022/09/01 L.Mandanas [QC#58350, MOD] -->
                           <!-- START 2021/12/14 L.Mandanas [QC#58350, ADD] -->
                           <!-- , B.SVC_INV_NUM DESC -->
                           <!-- END 2021/12/14 L.Mandanas [QC#58350, ADD] -->
                           , B.BLLG_SCHD_THRU_DT DESC
                           , B.SVC_INV_NUM DESC
                           <!-- END 2022/09/01 L.Mandanas [QC#58350, MOD] -->
                       ) ROW_NUM
                   FROM
                       DS_CONTR_BLLG_SCHD A
                       , DS_CONTR_BLLG_SCHD B
                       , DS_CONTR_DTL C
                       , DS_CONTR D
                   WHERE
                           A.GLBL_CMPY_CD = #glblCmpyCd#
                       AND A.EZCANCELFLAG = '0'
<!--  START 2021/06/04 L.Mandanas [QC#58350, MOD] -->
                       AND A.GLBL_CMPY_CD = B.GLBL_CMPY_CD(+)
                           <!-- AND B.EZCANCELFLAG = '0' -->
                       AND A.EZCANCELFLAG = B.EZCANCELFLAG(+)
<!--  END 2021/06/04 L.Mandanas [QC#58350, MOD] -->
                       AND A.DS_CONTR_BLLG_SCHD_PK  = #contrBllgSchdPk#
                       AND A.DS_CONTR_DTL_PK = B.DS_CONTR_DTL_PK
                       AND A.DS_CONTR_BLLG_MTR_PK = B.DS_CONTR_BLLG_MTR_PK
                       AND A.DS_CONTR_BLLG_SCHD_PK &lt;&gt; B.DS_CONTR_BLLG_SCHD_PK
                       AND A.INV_DT &gt;= B.INV_DT
                       AND A.SVC_INV_NUM IS NOT NULL
                       AND B.SVC_INV_NUM IS NOT NULL
<!--  START 2021/06/04 L.Mandanas [QC#58350, MOD] -->
               <!--    AND A.ORIG_DS_CONTR_BLLG_SCHD_PK IS NULL  -->
               <!--         AND (
                       (A.ORIG_DS_CONTR_BLLG_SCHD_PK IS NULL AND A.DS_BLLG_SCHD_TP_CD = 10)
                       OR (A.ORIG_DS_CONTR_BLLG_SCHD_PK IS NOT NULL AND A.DS_BLLG_SCHD_TP_CD &lt;&gt; 10)
                       ) -->
                       AND (
                       (A.ORIG_DS_CONTR_BLLG_SCHD_PK IS NULL AND A.DS_BLLG_SCHD_TP_CD = #dsBllgSchdTp#)
                       OR (A.ORIG_DS_CONTR_BLLG_SCHD_PK IS NOT NULL AND A.DS_BLLG_SCHD_TP_CD &lt;&gt; #dsBllgSchdTp#)
                       )
<!--  END 2021/06/04 L.Mandanas [QC#58350, MOD] -->
                       AND A.BLLG_SCHD_THRU_DT &gt; B.BLLG_SCHD_THRU_DT
                       AND A.INV_FLG = 'Y'
                       AND B.INV_FLG = 'Y'
<!--  START 2021/06/04 L.Mandanas [QC#58350, ADD] -->
                       AND B.GLBL_CMPY_CD = C.GLBL_CMPY_CD(+)
                       AND B.EZCANCELFLAG = C.EZCANCELFLAG(+)
                       AND C.GLBL_CMPY_CD = D.GLBL_CMPY_CD(+)
                       AND C.EZCANCELFLAG = D.EZCANCELFLAG(+)
<!--  END 2021/06/04 L.Mandanas [QC#58350, ADD] -->
                       AND A.DS_CONTR_DTL_PK = C.DS_CONTR_DTL_PK
                       AND C.DS_CONTR_PK = D.DS_CONTR_PK
                       AND EXISTS (
                           SELECT
                               1
                           FROM
                               DS_CONTR_BLLG_MTR_USED X
                           WHERE
                                   X.GLBL_CMPY_CD = #glblCmpyCd#
                               AND X.EZCANCELFLAG  = '0'
                               AND X.DS_CONTR_BLLG_SCHD_PK = A.DS_CONTR_BLLG_SCHD_PK
                               AND X.DS_CONTR_BLLG_MTR_PK = A.DS_CONTR_BLLG_MTR_PK
                               AND X.ROLL_OVER_RATIO &gt; 0
                       )
                       <!-- START 2022/09/01 L.Mandanas [QC#58350, ADD] -->
                       AND B.INV_TP_CD = #invTpCd#
                       AND B.SVC_INV_NUM &lt; A.SVC_INV_NUM
                       <!-- END 2022/09/01 L.Mandanas [QC#58350, ADD] -->
               )
               WHERE ROW_NUM = 1
           ) PREV_SCHEDULE_PK
       WHERE
               A.DS_CONTR_BLLG_SCHD_PK = PREV_SCHEDULE_PK.PRV_DS_CONTR_BLLG_SCHD_PK
           AND A.EZCANCELFLAG = '0'
<!--  START 2021/06/04 L.Mandanas [QC#58350, ADD] -->
           AND A.GLBL_CMPY_CD = #glblCmpyCd#
<!--  END 2021/06/04 L.Mandanas [QC#58350, ADD] -->
    </statement>

    <statement id="getAggRolloverRemaining" parameterClass="Map" resultClass="Map">
        SELECT
            A.ROLL_OVER_CNT
            , B.DS_CONTR_BLLG_SCHD_PK
<!--  START 2021/09/23 L.Mandanas [QC#58350, ADD] -->
            , A.FREE_COPY_CNT
            , A.USG_FREE_COPY_CNT
<!--  end 2021/09/23 L.Mandanas [QC#58350, ADD] -->
        FROM
            DS_CONTR_BLLG_MTR_USED A
            , DS_CONTR_BLLG_SCHD B
            ,(
<!--  START 2021/06/04 L.Mandanas [QC#58350, MOD] -->
<!--                     SELECT CASE SYS_SRC_CD WHEN 'NFC' THEN 
                        ORIG_INV_NUM
                    ELSE 
                        INV_NUM
                    END AS SVC_INV_NUM
                FROM
                    INV
                WHERE
                        INV_NUM = #invNum#
                    AND GLBL_CMPY_CD = #glblCmpyCd#
                    AND EZCANCELFLAG = '0'    -->
                SELECT CASE I.INV_TP_CD WHEN #invTpCd# THEN
                    I.ORIG_INV_NUM
                ELSE
                    I.INV_NUM
                END AS SVC_INV_NUM
                FROM
                    INV I
                WHERE
                        I.INV_NUM = #invNum#
                    AND I.GLBL_CMPY_CD = #glblCmpyCd#
                    AND I.EZCANCELFLAG = '0'
<!--  END 2021/06/04 L.Mandanas [QC#58350, MOD] -->
                ) C
            , DS_CONTR_DTL D
            , DS_CONTR_BLLG_MTR E
        WHERE
                A.GLBL_CMPY_CD = #glblCmpyCd#
            AND A.EZCANCELFLAG = '0'
            AND A.DS_CONTR_BLLG_SCHD_PK = B.DS_CONTR_BLLG_SCHD_PK
            AND B.SVC_INV_NUM = C.SVC_INV_NUM
            AND B.DS_CONTR_DTL_PK = D.DS_CONTR_DTL_PK
<!--  START 2021/06/04 L.Mandanas [QC#58350, MOD] -->
         <!--    AND D.DS_CONTR_DTL_TP_CD = 'AGG'  -->
            AND D.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCd#
            <!-- AND B.EZCANCELFLAG = '0' -->
            <!-- AND D.EZCANCELFLAG = '0' -->
            AND B.EZCANCELFLAG = D.EZCANCELFLAG(+)
            AND D.EZCANCELFLAG = E.EZCANCELFLAG(+)
<!--  END 2021/06/04 L.Mandanas [QC#58350, MOD] -->
<!--  START 2021/06/04 L.Mandanas [QC#58350, ADD] -->
            AND A.GLBL_CMPY_CD = B.GLBL_CMPY_CD(+)
            AND B.GLBL_CMPY_CD = D.GLBL_CMPY_CD(+)
            AND D.GLBL_CMPY_CD = E.GLBL_CMPY_CD(+)
<!--  END 2021/06/04 L.Mandanas [QC#58350, ADD] -->
            AND B.DS_CONTR_BLLG_MTR_PK = E.DS_CONTR_BLLG_MTR_PK
            AND E.BLLG_MTR_LB_CD = #bllgMtrLbCd#
    </statement>
    <!--  END 2021/04/23 L.Mandanas [QC#58350, ADD] -->

</sqlMap>
