//This file was automatically generated by Business Component Interface Definition Document (Define Business Application Global Area) and XLA200710010.
// Generated on    :20190626131905000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0380_CSMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NSAL0380;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL0380 Business Application Global Area Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL0380_CSMsg extends EZDSMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_DPLY_CTRL_FLG_C*/
	public final EZDSStringItem              xxDplyCtrlFlg_C;

    /** XX_SMRY_LINE_FLG_C*/
	public final EZDSStringItem              xxSmryLineFlg_C;

    /** XX_NUM_C*/
	public final EZDSBigDecimalItem              xxNum_C;

    /** DS_CONTR_PK_C*/
	public final EZDSBigDecimalItem              dsContrPk_C;

    /** PRNT_DS_CONTR_DTL_PK_C*/
	public final EZDSBigDecimalItem              prntDsContrDtlPk_C;

    /** XX_DPLY_BY_CTRL_ANCR_LVL_CD_C*/
	public final EZDSStringItem              xxDplyByCtrlAncrLvlCd_C;

    /** DS_CONTR_NUM_C*/
	public final EZDSStringItem              dsContrNum_C;

    /** XX_CHK_BOX_C1*/
	public final EZDSStringItem              xxChkBox_C1;

    /** SER_NUM_C*/
	public final EZDSStringItem              serNum_C;

    /** SVC_MACH_MSTR_PK_C1*/
	public final EZDSBigDecimalItem              svcMachMstrPk_C1;

    /** MDSE_DESC_SHORT_TXT_C*/
	public final EZDSStringItem              mdseDescShortTxt_C;

    /** XX_CHK_BOX_C2*/
	public final EZDSStringItem              xxChkBox_C2;

    /** DS_CONTR_BASE_USG_NM_C*/
	public final EZDSStringItem              dsContrBaseUsgNm_C;

    /** CONTR_EFF_FROM_DT_C*/
	public final EZDSDateItem              contrEffFromDt_C;

    /** CONTR_EFF_THRU_DT_C*/
	public final EZDSDateItem              contrEffThruDt_C;

    /** CONTR_AUTO_RNW_TP_CD_C*/
	public final EZDSStringItem              contrAutoRnwTpCd_C;

    /** RNW_BASE_FLG_C*/
	public final EZDSStringItem              rnwBaseFlg_C;

    /** RNW_USG_FLG_C*/
	public final EZDSStringItem              rnwUsgFlg_C;

    /** AUTO_RNW_FLG_C*/
	public final EZDSStringItem              autoRnwFlg_C;

    /** RNW_PRC_METH_CD_C*/
	public final EZDSStringItem              rnwPrcMethCd_C;

    /** BEF_END_RNW_DAYS_AOT_C*/
	public final EZDSBigDecimalItem              befEndRnwDaysAot_C;

    /** MAX_CONTR_RNW_CNT_C*/
	public final EZDSBigDecimalItem              maxContrRnwCnt_C;

    /** MAX_PRC_UP_RATIO_C*/
	public final EZDSBigDecimalItem              maxPrcUpRatio_C;

    /** BASE_PRC_UP_RATIO_C*/
	public final EZDSBigDecimalItem              basePrcUpRatio_C;

    /** MTR_PRC_UP_RATIO_C*/
	public final EZDSBigDecimalItem              mtrPrcUpRatio_C;

    /** CONTR_RNW_TOT_CNT_C*/
	public final EZDSBigDecimalItem              contrRnwTotCnt_C;

    /** XX_CNT_DPLY_FLG_C*/
	public final EZDSStringItem              xxCntDplyFlg_C;

    /** XX_DS_MSG_ENTRY_TXT_C*/
	public final EZDSStringItem              xxDsMsgEntryTxt_C;

    /** DS_CONTR_RNW_ESCL_PK_C*/
	public final EZDSBigDecimalItem              dsContrRnwEsclPk_C;

    /** DS_CONTR_DTL_PK_C*/
	public final EZDSBigDecimalItem              dsContrDtlPk_C;

    /** SVC_MACH_MSTR_PK_C*/
	public final EZDSBigDecimalItem              svcMachMstrPk_C;

    /** DS_CONTR_CATG_CD_C*/
	public final EZDSStringItem              dsContrCatgCd_C;

    /** DS_CONTR_DTL_TP_CD_C*/
	public final EZDSStringItem              dsContrDtlTpCd_C;

    /** DS_CONTR_CTRL_STS_CD_C1*/
	public final EZDSStringItem              dsContrCtrlStsCd_C1;

    /** DS_CONTR_CTRL_STS_CD_C2*/
	public final EZDSStringItem              dsContrCtrlStsCd_C2;

    /** _EZUpTimeZone_C1*/
	public final EZDSStringItem              ezUpTimeZone_C1;

    /** _EZUpdateDateTime_C1*/
	public final EZDSStringItem              ezUpTime_C1;

    /** _EZUpTimeZone_C2*/
	public final EZDSStringItem              ezUpTimeZone_C2;

    /** _EZUpdateDateTime_C2*/
	public final EZDSStringItem              ezUpTime_C2;

    /** _EZUpTimeZone_C3*/
	public final EZDSStringItem              ezUpTimeZone_C3;

    /** _EZUpdateDateTime_C3*/
	public final EZDSStringItem              ezUpTime_C3;

    /** XX_REC_HIST_CRAT_TS_C*/
	public final EZDSStringItem              xxRecHistCratTs_C;

    /** XX_REC_HIST_CRAT_BY_NM_C*/
	public final EZDSStringItem              xxRecHistCratByNm_C;

    /** XX_REC_HIST_UPD_TS_C*/
	public final EZDSStringItem              xxRecHistUpdTs_C;

    /** XX_REC_HIST_UPD_BY_NM_C*/
	public final EZDSStringItem              xxRecHistUpdByNm_C;

    /** XX_REC_HIST_TBL_NM_C*/
	public final EZDSStringItem              xxRecHistTblNm_C;


	/**
	 * NSAL0380_CSMsg is constructor.
	 * The initialization when the instance of NSAL0380_CSMsg is generated.
	 */
	public NSAL0380_CSMsg() {
		this(false, -1);
	}

	/**
	 * NSAL0380_CSMsg is constructor.
	 * The initialization when the instance of NSAL0380_CSMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL0380_CSMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxDplyCtrlFlg_C = (EZDSStringItem)newItem("xxDplyCtrlFlg_C");
		xxSmryLineFlg_C = (EZDSStringItem)newItem("xxSmryLineFlg_C");
		xxNum_C = (EZDSBigDecimalItem)newItem("xxNum_C");
		dsContrPk_C = (EZDSBigDecimalItem)newItem("dsContrPk_C");
		prntDsContrDtlPk_C = (EZDSBigDecimalItem)newItem("prntDsContrDtlPk_C");
		xxDplyByCtrlAncrLvlCd_C = (EZDSStringItem)newItem("xxDplyByCtrlAncrLvlCd_C");
		dsContrNum_C = (EZDSStringItem)newItem("dsContrNum_C");
		xxChkBox_C1 = (EZDSStringItem)newItem("xxChkBox_C1");
		serNum_C = (EZDSStringItem)newItem("serNum_C");
		svcMachMstrPk_C1 = (EZDSBigDecimalItem)newItem("svcMachMstrPk_C1");
		mdseDescShortTxt_C = (EZDSStringItem)newItem("mdseDescShortTxt_C");
		xxChkBox_C2 = (EZDSStringItem)newItem("xxChkBox_C2");
		dsContrBaseUsgNm_C = (EZDSStringItem)newItem("dsContrBaseUsgNm_C");
		contrEffFromDt_C = (EZDSDateItem)newItem("contrEffFromDt_C");
		contrEffThruDt_C = (EZDSDateItem)newItem("contrEffThruDt_C");
		contrAutoRnwTpCd_C = (EZDSStringItem)newItem("contrAutoRnwTpCd_C");
		rnwBaseFlg_C = (EZDSStringItem)newItem("rnwBaseFlg_C");
		rnwUsgFlg_C = (EZDSStringItem)newItem("rnwUsgFlg_C");
		autoRnwFlg_C = (EZDSStringItem)newItem("autoRnwFlg_C");
		rnwPrcMethCd_C = (EZDSStringItem)newItem("rnwPrcMethCd_C");
		befEndRnwDaysAot_C = (EZDSBigDecimalItem)newItem("befEndRnwDaysAot_C");
		maxContrRnwCnt_C = (EZDSBigDecimalItem)newItem("maxContrRnwCnt_C");
		maxPrcUpRatio_C = (EZDSBigDecimalItem)newItem("maxPrcUpRatio_C");
		basePrcUpRatio_C = (EZDSBigDecimalItem)newItem("basePrcUpRatio_C");
		mtrPrcUpRatio_C = (EZDSBigDecimalItem)newItem("mtrPrcUpRatio_C");
		contrRnwTotCnt_C = (EZDSBigDecimalItem)newItem("contrRnwTotCnt_C");
		xxCntDplyFlg_C = (EZDSStringItem)newItem("xxCntDplyFlg_C");
		xxDsMsgEntryTxt_C = (EZDSStringItem)newItem("xxDsMsgEntryTxt_C");
		dsContrRnwEsclPk_C = (EZDSBigDecimalItem)newItem("dsContrRnwEsclPk_C");
		dsContrDtlPk_C = (EZDSBigDecimalItem)newItem("dsContrDtlPk_C");
		svcMachMstrPk_C = (EZDSBigDecimalItem)newItem("svcMachMstrPk_C");
		dsContrCatgCd_C = (EZDSStringItem)newItem("dsContrCatgCd_C");
		dsContrDtlTpCd_C = (EZDSStringItem)newItem("dsContrDtlTpCd_C");
		dsContrCtrlStsCd_C1 = (EZDSStringItem)newItem("dsContrCtrlStsCd_C1");
		dsContrCtrlStsCd_C2 = (EZDSStringItem)newItem("dsContrCtrlStsCd_C2");
		ezUpTimeZone_C1 = (EZDSStringItem)newItem("ezUpTimeZone_C1");
		ezUpTime_C1 = (EZDSStringItem)newItem("ezUpTime_C1");
		ezUpTimeZone_C2 = (EZDSStringItem)newItem("ezUpTimeZone_C2");
		ezUpTime_C2 = (EZDSStringItem)newItem("ezUpTime_C2");
		ezUpTimeZone_C3 = (EZDSStringItem)newItem("ezUpTimeZone_C3");
		ezUpTime_C3 = (EZDSStringItem)newItem("ezUpTime_C3");
		xxRecHistCratTs_C = (EZDSStringItem)newItem("xxRecHistCratTs_C");
		xxRecHistCratByNm_C = (EZDSStringItem)newItem("xxRecHistCratByNm_C");
		xxRecHistUpdTs_C = (EZDSStringItem)newItem("xxRecHistUpdTs_C");
		xxRecHistUpdByNm_C = (EZDSStringItem)newItem("xxRecHistUpdByNm_C");
		xxRecHistTblNm_C = (EZDSStringItem)newItem("xxRecHistTblNm_C");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL0380_CSMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL0380_CSMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxDplyCtrlFlg_C", "xxDplyCtrlFlg_C", "C", null, TYPE_HANKAKUEISU, "1", null},
	{"xxSmryLineFlg_C", "xxSmryLineFlg_C", "C", null, TYPE_HANKAKUEISU, "1", null},
	{"xxNum_C", "xxNum_C", "C", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"dsContrPk_C", "dsContrPk_C", "C", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"prntDsContrDtlPk_C", "prntDsContrDtlPk_C", "C", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"xxDplyByCtrlAncrLvlCd_C", "xxDplyByCtrlAncrLvlCd_C", "C", null, TYPE_HANKAKUEISU, "1", null},
	{"dsContrNum_C", "dsContrNum_C", "C", null, TYPE_HANKAKUEISU, "30", null},
	{"xxChkBox_C1", "xxChkBox_C1", "C1", null, TYPE_HANKAKUEIJI, "1", null},
	{"serNum_C", "serNum_C", "C", null, TYPE_HANKAKUEISU, "30", null},
	{"svcMachMstrPk_C1", "svcMachMstrPk_C1", "C1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"mdseDescShortTxt_C", "mdseDescShortTxt_C", "C", null, TYPE_HANKAKUEISU, "250", null},
	{"xxChkBox_C2", "xxChkBox_C2", "C2", null, TYPE_HANKAKUEIJI, "1", null},
	{"dsContrBaseUsgNm_C", "dsContrBaseUsgNm_C", "C", null, TYPE_HANKAKUEISU, "30", null},
	{"contrEffFromDt_C", "contrEffFromDt_C", "C", null, TYPE_NENTSUKIHI, "8", null},
	{"contrEffThruDt_C", "contrEffThruDt_C", "C", null, TYPE_NENTSUKIHI, "8", null},
	{"contrAutoRnwTpCd_C", "contrAutoRnwTpCd_C", "C", null, TYPE_HANKAKUEISU, "2", null},
	{"rnwBaseFlg_C", "rnwBaseFlg_C", "C", null, TYPE_HANKAKUEISU, "1", null},
	{"rnwUsgFlg_C", "rnwUsgFlg_C", "C", null, TYPE_HANKAKUEISU, "1", null},
	{"autoRnwFlg_C", "autoRnwFlg_C", "C", null, TYPE_HANKAKUEISU, "1", null},
	{"rnwPrcMethCd_C", "rnwPrcMethCd_C", "C", null, TYPE_HANKAKUEISU, "2", null},
	{"befEndRnwDaysAot_C", "befEndRnwDaysAot_C", "C", null, TYPE_SEISU_SYOSU, "3", "0"},
	{"maxContrRnwCnt_C", "maxContrRnwCnt_C", "C", null, TYPE_SEISU_SYOSU, "3", "0"},
	{"maxPrcUpRatio_C", "maxPrcUpRatio_C", "C", null, TYPE_SEISU_SYOSU, "9", "5"},
	{"basePrcUpRatio_C", "basePrcUpRatio_C", "C", null, TYPE_SEISU_SYOSU, "9", "5"},
	{"mtrPrcUpRatio_C", "mtrPrcUpRatio_C", "C", null, TYPE_SEISU_SYOSU, "9", "5"},
	{"contrRnwTotCnt_C", "contrRnwTotCnt_C", "C", null, TYPE_SEISU_SYOSU, "3", "0"},
	{"xxCntDplyFlg_C", "xxCntDplyFlg_C", "C", null, TYPE_HANKAKUEISU, "1", null},
	{"xxDsMsgEntryTxt_C", "xxDsMsgEntryTxt_C", "C", null, TYPE_HANKAKUEISU, "1000", null},
	{"dsContrRnwEsclPk_C", "dsContrRnwEsclPk_C", "C", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrDtlPk_C", "dsContrDtlPk_C", "C", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"svcMachMstrPk_C", "svcMachMstrPk_C", "C", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrCatgCd_C", "dsContrCatgCd_C", "C", null, TYPE_HANKAKUEISU, "3", null},
	{"dsContrDtlTpCd_C", "dsContrDtlTpCd_C", "C", null, TYPE_HANKAKUEISU, "6", null},
	{"dsContrCtrlStsCd_C1", "dsContrCtrlStsCd_C1", "C1", null, TYPE_HANKAKUEISU, "4", null},
	{"dsContrCtrlStsCd_C2", "dsContrCtrlStsCd_C2", "C2", null, TYPE_HANKAKUEISU, "4", null},
	{"ezUpTimeZone_C1", "ezUpTimeZone_C1", "C1", null, TYPE_HANKAKUEISU, "5", null},
	{"ezUpTime_C1", "ezUpTime_C1", "C1", null, TYPE_HANKAKUEISU, "17", null},
	{"ezUpTimeZone_C2", "ezUpTimeZone_C2", "C2", null, TYPE_HANKAKUEISU, "5", null},
	{"ezUpTime_C2", "ezUpTime_C2", "C2", null, TYPE_HANKAKUEISU, "17", null},
	{"ezUpTimeZone_C3", "ezUpTimeZone_C3", "C3", null, TYPE_HANKAKUEISU, "5", null},
	{"ezUpTime_C3", "ezUpTime_C3", "C3", null, TYPE_HANKAKUEISU, "17", null},
	{"xxRecHistCratTs_C", "xxRecHistCratTs_C", "C", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistCratByNm_C", "xxRecHistCratByNm_C", "C", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistUpdTs_C", "xxRecHistUpdTs_C", "C", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistUpdByNm_C", "xxRecHistUpdByNm_C", "C", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistTblNm_C", "xxRecHistTblNm_C", "C", null, TYPE_HANKAKUEISU, "60", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_DPLY_CTRL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDplyCtrlFlg_C
        {"XX_SMRY_LINE_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxSmryLineFlg_C
        {"XX_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxNum_C
        {"DS_CONTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrPk_C
        {"PRNT_DS_CONTR_DTL_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prntDsContrDtlPk_C
        {"XX_DPLY_BY_CTRL_ANCR_LVL_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDplyByCtrlAncrLvlCd_C
        {"DS_CONTR_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrNum_C
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_C1
        {"SER_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNum_C
        {"SVC_MACH_MSTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachMstrPk_C1
        {"MDSE_DESC_SHORT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseDescShortTxt_C
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_C2
        {"DS_CONTR_BASE_USG_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBaseUsgNm_C
        {"CONTR_EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrEffFromDt_C
        {"CONTR_EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrEffThruDt_C
        {"CONTR_AUTO_RNW_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrAutoRnwTpCd_C
        {"RNW_BASE_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rnwBaseFlg_C
        {"RNW_USG_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rnwUsgFlg_C
        {"AUTO_RNW_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//autoRnwFlg_C
        {"RNW_PRC_METH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rnwPrcMethCd_C
        {"BEF_END_RNW_DAYS_AOT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//befEndRnwDaysAot_C
        {"MAX_CONTR_RNW_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//maxContrRnwCnt_C
        {"MAX_PRC_UP_RATIO",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//maxPrcUpRatio_C
        {"BASE_PRC_UP_RATIO",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//basePrcUpRatio_C
        {"MTR_PRC_UP_RATIO",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrPrcUpRatio_C
        {"CONTR_RNW_TOT_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrRnwTotCnt_C
        {"XX_CNT_DPLY_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxCntDplyFlg_C
        {"XX_DS_MSG_ENTRY_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDsMsgEntryTxt_C
        {"DS_CONTR_RNW_ESCL_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrRnwEsclPk_C
        {"DS_CONTR_DTL_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrDtlPk_C
        {"SVC_MACH_MSTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachMstrPk_C
        {"DS_CONTR_CATG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrCatgCd_C
        {"DS_CONTR_DTL_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrDtlTpCd_C
        {"DS_CONTR_CTRL_STS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrCtrlStsCd_C1
        {"DS_CONTR_CTRL_STS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrCtrlStsCd_C2
        {"_EZUpTimeZone",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTimeZone_C1
        {"_EZUpdateDateTime",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTime_C1
        {"_EZUpTimeZone",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTimeZone_C2
        {"_EZUpdateDateTime",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTime_C2
        {"_EZUpTimeZone",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTimeZone_C3
        {"_EZUpdateDateTime",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTime_C3
        {"XX_REC_HIST_CRAT_TS",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratTs_C
        {"XX_REC_HIST_CRAT_BY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratByNm_C
        {"XX_REC_HIST_UPD_TS",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdTs_C
        {"XX_REC_HIST_UPD_BY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdByNm_C
        {"XX_REC_HIST_TBL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistTblNm_C
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

