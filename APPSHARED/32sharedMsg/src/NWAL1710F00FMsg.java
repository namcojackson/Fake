//This file was automatically generated by Text File Layout Definition Document and XLA200710010.
// Generated on    :20160309162932000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :TextFileLayoutDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NWAL1710F00FMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.file;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NWAL1710F00 File Layout Message class.
 * @author
 * @version XLA200710010
 */
public class NWAL1710F00FMsg extends EZDFMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** DS_ORD_CATG_CD*/
	public final EZDFStringItem              dsOrdCatgCd;

    /** DS_ORD_CATG_NM*/
	public final EZDFStringItem              dsOrdCatgNm;

    /** DS_ORD_TP_NM*/
	public final EZDFStringItem              dsOrdTpNm;

    /** ORD_PROC_TP_NM*/
	public final EZDFStringItem              ordProcTpNm;

    /** DS_ORD_RSN_GRP_NM*/
	public final EZDFStringItem              dsOrdRsnGrpNm;

    /** DS_ORD_TP_DESC_TXT*/
	public final EZDFStringItem              dsOrdTpDescTxt;

    /** LINE_BIZ_TP_NM*/
	public final EZDFStringItem              lineBizTpNm;

    /** XX_DT_TXT_F*/
	public final EZDFStringItem              xxDtTxt_F;

    /** XX_DT_TXT_T*/
	public final EZDFStringItem              xxDtTxt_T;

    /** XX_YES_NO_NM*/
	public final EZDFStringItem              xxYesNoNm;


	/**
	 * NWAL1710F00FMsg is constructor.
	 * The initialization when the instance of NWAL1710F00FMsg is generated.
	 */
	public NWAL1710F00FMsg() {
		this(false, -1);
	}

	/**
	 * NWAL1710F00FMsg is constructor.
	 * The initialization when the instance of NWAL1710F00FMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NWAL1710F00FMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		dsOrdCatgCd = (EZDFStringItem)newItem("dsOrdCatgCd");
		dsOrdCatgNm = (EZDFStringItem)newItem("dsOrdCatgNm");
		dsOrdTpNm = (EZDFStringItem)newItem("dsOrdTpNm");
		ordProcTpNm = (EZDFStringItem)newItem("ordProcTpNm");
		dsOrdRsnGrpNm = (EZDFStringItem)newItem("dsOrdRsnGrpNm");
		dsOrdTpDescTxt = (EZDFStringItem)newItem("dsOrdTpDescTxt");
		lineBizTpNm = (EZDFStringItem)newItem("lineBizTpNm");
		xxDtTxt_F = (EZDFStringItem)newItem("xxDtTxt_F");
		xxDtTxt_T = (EZDFStringItem)newItem("xxDtTxt_T");
		xxYesNoNm = (EZDFStringItem)newItem("xxYesNoNm");
	}

	/**
	 * get the type of array which is stored
	 * @return NWAL1710F00FMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NWAL1710F00FMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"dsOrdCatgCd", "dsOrdCatgCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"dsOrdCatgNm", "dsOrdCatgNm", null, null, TYPE_HANKAKUEISU, "50", null},
	{"dsOrdTpNm", "dsOrdTpNm", null, null, TYPE_HANKAKUEISU, "30", null},
	{"ordProcTpNm", "ordProcTpNm", null, null, TYPE_HANKAKUEISU, "30", null},
	{"dsOrdRsnGrpNm", "dsOrdRsnGrpNm", null, null, TYPE_HANKAKUEISU, "50", null},
	{"dsOrdTpDescTxt", "dsOrdTpDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"lineBizTpNm", "lineBizTpNm", null, null, TYPE_HANKAKUEISU, "70", null},
	{"xxDtTxt_F", "xxDtTxt_F", "F", null, TYPE_HANKAKUEISU, "10", null},
	{"xxDtTxt_T", "xxDtTxt_T", "T", null, TYPE_HANKAKUEISU, "10", null},
	{"xxYesNoNm", "xxYesNoNm", null, null, TYPE_HANKAKUEISU, "3", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"DS_ORD_CATG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdCatgCd
        {"DS_ORD_CATG_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdCatgNm
        {"DS_ORD_TP_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdTpNm
        {"ORD_PROC_TP_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordProcTpNm
        {"DS_ORD_RSN_GRP_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdRsnGrpNm
        {"DS_ORD_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdTpDescTxt
        {"LINE_BIZ_TP_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//lineBizTpNm
        {"XX_DT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDtTxt_F
        {"XX_DT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDtTxt_T
        {"XX_YES_NO_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxYesNoNm
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

