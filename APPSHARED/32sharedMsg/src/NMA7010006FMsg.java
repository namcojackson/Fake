//This file was automatically generated by Text File Layout Definition Document and XLA200710010.
// Generated on    :20160428181910000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :TextFileLayoutDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NMA7010006FMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.file;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NMA7010006 File Layout Message class.
 * @author
 * @version XLA200710010
 */
public class NMA7010006FMsg extends EZDFMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** PRC_CATG_NM*/
	public final EZDFStringItem              prcCatgNm;

    /** PRC_LIST_TP_DESC_TXT*/
	public final EZDFStringItem              prcListTpDescTxt;

    /** PRC_LEASE_CMPY_ABBR_NM*/
	public final EZDFStringItem              prcLeaseCmpyAbbrNm;

    /** DS_ACCT_NM*/
	public final EZDFStringItem              dsAcctNm;

    /** PRC_PGM_TP_DESC_TXT*/
	public final EZDFStringItem              prcPgmTpDescTxt;

    /** PRC_EQUIP_TP_DESC_TXT*/
	public final EZDFStringItem              prcEquipTpDescTxt;

    /** MDL_NM*/
	public final EZDFStringItem              mdlNm;

    /** MIN_TOT_FIN_AMT*/
	public final EZDFBigDecimalItem              minTotFinAmt;

    /** MAX_TOT_FIN_AMT*/
	public final EZDFBigDecimalItem              maxTotFinAmt;

    /** TERM_FROM_MTH_AOT*/
	public final EZDFBigDecimalItem              termFromMthAot;

    /** TERM_THRU_MTH_AOT*/
	public final EZDFBigDecimalItem              termThruMthAot;

    /** LEASE_RATE*/
	public final EZDFBigDecimalItem              leaseRate;

    /** EFF_FROM_DT*/
	public final EZDFDateItem              effFromDt;

    /** EFF_THRU_DT*/
	public final EZDFDateItem              effThruDt;


	/**
	 * NMA7010006FMsg is constructor.
	 * The initialization when the instance of NMA7010006FMsg is generated.
	 */
	public NMA7010006FMsg() {
		this(false, -1);
	}

	/**
	 * NMA7010006FMsg is constructor.
	 * The initialization when the instance of NMA7010006FMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NMA7010006FMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		prcCatgNm = (EZDFStringItem)newItem("prcCatgNm");
		prcListTpDescTxt = (EZDFStringItem)newItem("prcListTpDescTxt");
		prcLeaseCmpyAbbrNm = (EZDFStringItem)newItem("prcLeaseCmpyAbbrNm");
		dsAcctNm = (EZDFStringItem)newItem("dsAcctNm");
		prcPgmTpDescTxt = (EZDFStringItem)newItem("prcPgmTpDescTxt");
		prcEquipTpDescTxt = (EZDFStringItem)newItem("prcEquipTpDescTxt");
		mdlNm = (EZDFStringItem)newItem("mdlNm");
		minTotFinAmt = (EZDFBigDecimalItem)newItem("minTotFinAmt");
		maxTotFinAmt = (EZDFBigDecimalItem)newItem("maxTotFinAmt");
		termFromMthAot = (EZDFBigDecimalItem)newItem("termFromMthAot");
		termThruMthAot = (EZDFBigDecimalItem)newItem("termThruMthAot");
		leaseRate = (EZDFBigDecimalItem)newItem("leaseRate");
		effFromDt = (EZDFDateItem)newItem("effFromDt");
		effThruDt = (EZDFDateItem)newItem("effThruDt");
	}

	/**
	 * get the type of array which is stored
	 * @return NMA7010006FMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NMA7010006FMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"prcCatgNm", "prcCatgNm", null, null, TYPE_HANKAKUEISU, "75", null},
	{"prcListTpDescTxt", "prcListTpDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"prcLeaseCmpyAbbrNm", "prcLeaseCmpyAbbrNm", null, null, TYPE_HANKAKUEISU, "10", null},
	{"dsAcctNm", "dsAcctNm", null, null, TYPE_HANKAKUEISU, "360", null},
	{"prcPgmTpDescTxt", "prcPgmTpDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"prcEquipTpDescTxt", "prcEquipTpDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"mdlNm", "mdlNm", null, null, TYPE_HANKAKUEISU, "50", null},
	{"minTotFinAmt", "minTotFinAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"maxTotFinAmt", "maxTotFinAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"termFromMthAot", "termFromMthAot", null, null, TYPE_SEISU_SYOSU, "3", "0"},
	{"termThruMthAot", "termThruMthAot", null, null, TYPE_SEISU_SYOSU, "3", "0"},
	{"leaseRate", "leaseRate", null, null, TYPE_SEISU_SYOSU, "9", "5"},
	{"effFromDt", "effFromDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt", "effThruDt", null, null, TYPE_NENTSUKIHI, "8", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"PRC_CATG_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCatgNm
        {"PRC_LIST_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcListTpDescTxt
        {"PRC_LEASE_CMPY_ABBR_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcLeaseCmpyAbbrNm
        {"DS_ACCT_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctNm
        {"PRC_PGM_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcPgmTpDescTxt
        {"PRC_EQUIP_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcEquipTpDescTxt
        {"MDL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdlNm
        {"MIN_TOT_FIN_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//minTotFinAmt
        {"MAX_TOT_FIN_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//maxTotFinAmt
        {"TERM_FROM_MTH_AOT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//termFromMthAot
        {"TERM_THRU_MTH_AOT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//termThruMthAot
        {"LEASE_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//leaseRate
        {"EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effFromDt
        {"EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effThruDt
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

