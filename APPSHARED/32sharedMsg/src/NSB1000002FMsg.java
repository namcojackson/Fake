//This file was automatically generated by Text File Layout Definition Document and XLA200710010.
// Generated on    :20230310154943000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :TextFileLayoutDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSB1000002FMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.file;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSB1000002 File Layout Message class.
 * @author
 * @version XLA200710010
 */
public class NSB1000002FMsg extends EZDFMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** SVC_MOD_PLN_ID*/
	public final EZDFStringItem              svcModPlnId;

    /** SER_NUM*/
	public final EZDFStringItem              serNum;

    /** SVC_MOD_OPT_DESC_TXT*/
	public final EZDFStringItem              svcModOptDescTxt;

    /** SVC_MOD_OPT_DT*/
	public final EZDFDateItem              svcModOptDt;

    /** SVC_MOD_NOTE_TXT*/
	public final EZDFStringItem              svcModNoteTxt;


	/**
	 * NSB1000002FMsg is constructor.
	 * The initialization when the instance of NSB1000002FMsg is generated.
	 */
	public NSB1000002FMsg() {
		this(false, -1);
	}

	/**
	 * NSB1000002FMsg is constructor.
	 * The initialization when the instance of NSB1000002FMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSB1000002FMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		svcModPlnId = (EZDFStringItem)newItem("svcModPlnId");
		serNum = (EZDFStringItem)newItem("serNum");
		svcModOptDescTxt = (EZDFStringItem)newItem("svcModOptDescTxt");
		svcModOptDt = (EZDFDateItem)newItem("svcModOptDt");
		svcModNoteTxt = (EZDFStringItem)newItem("svcModNoteTxt");
	}

	/**
	 * get the type of array which is stored
	 * @return NSB1000002FMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSB1000002FMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"svcModPlnId", "svcModPlnId", null, null, TYPE_HANKAKUEISU, "16", null},
	{"serNum", "serNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"svcModOptDescTxt", "svcModOptDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"svcModOptDt", "svcModOptDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"svcModNoteTxt", "svcModNoteTxt", null, null, TYPE_HANKAKUEISU, "200", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"SVC_MOD_PLN_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcModPlnId
        {"SER_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNum
        {"SVC_MOD_OPT_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcModOptDescTxt
        {"SVC_MOD_OPT_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcModOptDt
        {"SVC_MOD_NOTE_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcModNoteTxt
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

