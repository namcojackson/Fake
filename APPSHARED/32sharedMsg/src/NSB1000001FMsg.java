//This file was automatically generated by Text File Layout Definition Document and XLA200710010.
// Generated on    :20230920101742000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :TextFileLayoutDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSB1000001FMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.file;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSB1000001 File Layout Message class.
 * @author
 * @version XLA200710010
 */
public class NSB1000001FMsg extends EZDFMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** PROC_MODE_CD*/
	public final EZDFStringItem              procModeCd;

    /** SER_NUM*/
	public final EZDFStringItem              serNum;

    /** SVC_MACH_MSTR_PK*/
	public final EZDFBigDecimalItem              svcMachMstrPk;

    /** SVC_PHYS_MTR_READ_GRP_SQ*/
	public final EZDFBigDecimalItem              svcPhysMtrReadGrpSq;

    /** MTR_LB_DESC_TXT*/
	public final EZDFStringItem              mtrLbDescTxt;

    /** DS_MTR_READ_TP_GRP_CD*/
	public final EZDFStringItem              dsMtrReadTpGrpCd;

    /** DS_MTR_READ_TP_DESC_TXT*/
	public final EZDFStringItem              dsMtrReadTpDescTxt;

    /** VLD_MTR_TXT*/
	public final EZDFStringItem              vldMtrTxt;

    /** MTR_READ_DT*/
	public final EZDFDateItem              mtrReadDt;

    /** SVC_TASK_NUM*/
	public final EZDFStringItem              svcTaskNum;

    /** DS_TEST_COPY_CLS_DESC_TXT*/
	public final EZDFStringItem              dsTestCopyClsDescTxt;

    /** READ_MTR_CNT*/
	public final EZDFBigDecimalItem              readMtrCnt;

    /** MTR_ENTRY_CMNT_TXT*/
	public final EZDFStringItem              mtrEntryCmntTxt;


	/**
	 * NSB1000001FMsg is constructor.
	 * The initialization when the instance of NSB1000001FMsg is generated.
	 */
	public NSB1000001FMsg() {
		this(false, -1);
	}

	/**
	 * NSB1000001FMsg is constructor.
	 * The initialization when the instance of NSB1000001FMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSB1000001FMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		procModeCd = (EZDFStringItem)newItem("procModeCd");
		serNum = (EZDFStringItem)newItem("serNum");
		svcMachMstrPk = (EZDFBigDecimalItem)newItem("svcMachMstrPk");
		svcPhysMtrReadGrpSq = (EZDFBigDecimalItem)newItem("svcPhysMtrReadGrpSq");
		mtrLbDescTxt = (EZDFStringItem)newItem("mtrLbDescTxt");
		dsMtrReadTpGrpCd = (EZDFStringItem)newItem("dsMtrReadTpGrpCd");
		dsMtrReadTpDescTxt = (EZDFStringItem)newItem("dsMtrReadTpDescTxt");
		vldMtrTxt = (EZDFStringItem)newItem("vldMtrTxt");
		mtrReadDt = (EZDFDateItem)newItem("mtrReadDt");
		svcTaskNum = (EZDFStringItem)newItem("svcTaskNum");
		dsTestCopyClsDescTxt = (EZDFStringItem)newItem("dsTestCopyClsDescTxt");
		readMtrCnt = (EZDFBigDecimalItem)newItem("readMtrCnt");
		mtrEntryCmntTxt = (EZDFStringItem)newItem("mtrEntryCmntTxt");
	}

	/**
	 * get the type of array which is stored
	 * @return NSB1000001FMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSB1000001FMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"procModeCd", "procModeCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"serNum", "serNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"svcMachMstrPk", "svcMachMstrPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"svcPhysMtrReadGrpSq", "svcPhysMtrReadGrpSq", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"mtrLbDescTxt", "mtrLbDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"dsMtrReadTpGrpCd", "dsMtrReadTpGrpCd", null, null, TYPE_HANKAKUEISU, "10", null},
	{"dsMtrReadTpDescTxt", "dsMtrReadTpDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"vldMtrTxt", "vldMtrTxt", null, null, TYPE_HANKAKUEISU, "1", null},
	{"mtrReadDt", "mtrReadDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"svcTaskNum", "svcTaskNum", null, null, TYPE_HANKAKUEISU, "10", null},
	{"dsTestCopyClsDescTxt", "dsTestCopyClsDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"readMtrCnt", "readMtrCnt", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"mtrEntryCmntTxt", "mtrEntryCmntTxt", null, null, TYPE_HANKAKUEISU, "400", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"PROC_MODE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//procModeCd
        {"SER_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNum
        {"SVC_MACH_MSTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachMstrPk
        {"SVC_PHYS_MTR_READ_GRP_SQ",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcPhysMtrReadGrpSq
        {"MTR_LB_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrLbDescTxt
        {"DS_MTR_READ_TP_GRP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsMtrReadTpGrpCd
        {"DS_MTR_READ_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsMtrReadTpDescTxt
        {"VLD_MTR_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//vldMtrTxt
        {"MTR_READ_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrReadDt
        {"SVC_TASK_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTaskNum
        {"DS_TEST_COPY_CLS_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsTestCopyClsDescTxt
        {"READ_MTR_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//readMtrCnt
        {"MTR_ENTRY_CMNT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrEntryCmntTxt
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

