//This file was automatically generated by Logical Database Layout Definition Document and XLA200710010c.
// Generated on    :20231215164759000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :LogicalDatabaseLayoutDefinition Document_AddIn_XLS200710010.xla XLA200710010c
/*
 *SVC_MACH_UPLD_WRKFMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.db;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is SVC_MACH_UPLD_WRK Table Layout Message class.
 * @author
 * @version XLA200710010c
 */
public class SVC_MACH_UPLD_WRKFMsg extends EZDFMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** _EZTableID*/
	public final EZDFStringItem              ezTableID;

    /** _EZCancelFlag*/
	public final EZDFStringItem              ezCancelFlag;

    /** _EZRegistrationDateTime*/
	public final EZDFStringItem              ezInTime;

    /** _EZInTimeZone*/
	public final EZDFStringItem              ezInTimeZone;

    /** _EZInCompanyCode*/
	public final EZDFStringItem              ezInCompanyCode;

    /** _EZInUserID*/
	public final EZDFStringItem              ezInUserID;

    /** _EZInAplID*/
	public final EZDFStringItem              ezInAplID;

    /** _EZUpdateDateTime*/
	public final EZDFStringItem              ezUpTime;

    /** _EZUpTimeZone*/
	public final EZDFStringItem              ezUpTimeZone;

    /** _EZUpCompanyCode*/
	public final EZDFStringItem              ezUpCompanyCode;

    /** _EZUpdateUserID*/
	public final EZDFStringItem              ezUpUserID;

    /** _EZUpdateApplicationID*/
	public final EZDFStringItem              ezUpAplID;

    /** GLBL_CMPY_CD*/
	public final EZDFStringItem              glblCmpyCd;

    /** UPLD_CSV_RQST_PK*/
	public final EZDFBigDecimalItem              upldCsvRqstPk;

    /** UPLD_CSV_RQST_ROW_NUM*/
	public final EZDFBigDecimalItem              upldCsvRqstRowNum;

    /** PROC_MODE_CD*/
	public final EZDFStringItem              procModeCd;

    /** SVC_MACH_MSTR_PK*/
	public final EZDFBigDecimalItem              svcMachMstrPk;

    /** SER_NUM*/
	public final EZDFStringItem              serNum;

    /** MDSE_CD*/
	public final EZDFStringItem              mdseCd;

    /** SVC_CONFIG_MSTR_PK*/
	public final EZDFBigDecimalItem              svcConfigMstrPk;

    /** PRNT_SER_NUM*/
	public final EZDFStringItem              prntSerNum;

    /** PRNT_MDSE_CD*/
	public final EZDFStringItem              prntMdseCd;

    /** OWNR_ACCT_NUM*/
	public final EZDFStringItem              ownrAcctNum;

    /** BILL_TO_ACCT_NUM*/
	public final EZDFStringItem              billToAcctNum;

    /** CUR_LOC_ACCT_NUM*/
	public final EZDFStringItem              curLocAcctNum;

    /** IND_BILL_TO_LOC_NUM*/
	public final EZDFStringItem              indBillToLocNum;

    /** IND_CUR_LOC_NUM*/
	public final EZDFStringItem              indCurLocNum;

    /** SVC_MACH_MSTR_STS_CD*/
	public final EZDFStringItem              svcMachMstrStsCd;

    /** SVC_MACH_USG_STS_CD*/
	public final EZDFStringItem              svcMachUsgStsCd;

    /** SVC_MACH_TRX_TP_CD*/
	public final EZDFStringItem              svcMachTrxTpCd;

    /** ISTL_DT*/
	public final EZDFDateItem              istlDt;

    /** EFF_FROM_DT*/
	public final EZDFDateItem              effFromDt;

    /** EFF_THRU_DT*/
	public final EZDFDateItem              effThruDt;

    /** SVC_MACH_RMV_DT*/
	public final EZDFDateItem              svcMachRmvDt;

    /** CUST_MACH_CTRL_NUM*/
	public final EZDFStringItem              custMachCtrlNum;

    /** SW_LIC_ID*/
	public final EZDFStringItem              swLicId;

    /** SVC_PRVD_PTY_DESC_TXT_01*/
	public final EZDFStringItem              svcPrvdPtyDescTxt_01;

    /** SVC_PRVD_PTY_DESC_TXT_02*/
	public final EZDFStringItem              svcPrvdPtyDescTxt_02;

    /** SLD_BY_LINE_BIZ_TP_CD*/
	public final EZDFStringItem              sldByLineBizTpCd;

    /** REQ_TECH_CD*/
	public final EZDFStringItem              reqTechCd;

    /** SVC_CMNT_TXT*/
	public final EZDFStringItem              svcCmntTxt;

    /** UPLD_CSV_RQST_CMNT_TXT*/
	public final EZDFStringItem              upldCsvRqstCmntTxt;


	/**
	 * SVC_MACH_UPLD_WRKFMsg is constructor.
	 * The initialization when the instance of SVC_MACH_UPLD_WRKFMsg is generated.
	 */
	public SVC_MACH_UPLD_WRKFMsg() {
		this(false, -1);
	}

	/**
	 * SVC_MACH_UPLD_WRKFMsg is constructor.
	 * The initialization when the instance of SVC_MACH_UPLD_WRKFMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public SVC_MACH_UPLD_WRKFMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		ezTableID = (EZDFStringItem)newItem("ezTableID");
		ezCancelFlag = (EZDFStringItem)newItem("ezCancelFlag");
		ezInTime = (EZDFStringItem)newItem("ezInTime");
		ezInTimeZone = (EZDFStringItem)newItem("ezInTimeZone");
		ezInCompanyCode = (EZDFStringItem)newItem("ezInCompanyCode");
		ezInUserID = (EZDFStringItem)newItem("ezInUserID");
		ezInAplID = (EZDFStringItem)newItem("ezInAplID");
		ezUpTime = (EZDFStringItem)newItem("ezUpTime");
		ezUpTimeZone = (EZDFStringItem)newItem("ezUpTimeZone");
		ezUpCompanyCode = (EZDFStringItem)newItem("ezUpCompanyCode");
		ezUpUserID = (EZDFStringItem)newItem("ezUpUserID");
		ezUpAplID = (EZDFStringItem)newItem("ezUpAplID");
		glblCmpyCd = (EZDFStringItem)newItem("glblCmpyCd");
		upldCsvRqstPk = (EZDFBigDecimalItem)newItem("upldCsvRqstPk");
		upldCsvRqstRowNum = (EZDFBigDecimalItem)newItem("upldCsvRqstRowNum");
		procModeCd = (EZDFStringItem)newItem("procModeCd");
		svcMachMstrPk = (EZDFBigDecimalItem)newItem("svcMachMstrPk");
		serNum = (EZDFStringItem)newItem("serNum");
		mdseCd = (EZDFStringItem)newItem("mdseCd");
		svcConfigMstrPk = (EZDFBigDecimalItem)newItem("svcConfigMstrPk");
		prntSerNum = (EZDFStringItem)newItem("prntSerNum");
		prntMdseCd = (EZDFStringItem)newItem("prntMdseCd");
		ownrAcctNum = (EZDFStringItem)newItem("ownrAcctNum");
		billToAcctNum = (EZDFStringItem)newItem("billToAcctNum");
		curLocAcctNum = (EZDFStringItem)newItem("curLocAcctNum");
		indBillToLocNum = (EZDFStringItem)newItem("indBillToLocNum");
		indCurLocNum = (EZDFStringItem)newItem("indCurLocNum");
		svcMachMstrStsCd = (EZDFStringItem)newItem("svcMachMstrStsCd");
		svcMachUsgStsCd = (EZDFStringItem)newItem("svcMachUsgStsCd");
		svcMachTrxTpCd = (EZDFStringItem)newItem("svcMachTrxTpCd");
		istlDt = (EZDFDateItem)newItem("istlDt");
		effFromDt = (EZDFDateItem)newItem("effFromDt");
		effThruDt = (EZDFDateItem)newItem("effThruDt");
		svcMachRmvDt = (EZDFDateItem)newItem("svcMachRmvDt");
		custMachCtrlNum = (EZDFStringItem)newItem("custMachCtrlNum");
		swLicId = (EZDFStringItem)newItem("swLicId");
		svcPrvdPtyDescTxt_01 = (EZDFStringItem)newItem("svcPrvdPtyDescTxt_01");
		svcPrvdPtyDescTxt_02 = (EZDFStringItem)newItem("svcPrvdPtyDescTxt_02");
		sldByLineBizTpCd = (EZDFStringItem)newItem("sldByLineBizTpCd");
		reqTechCd = (EZDFStringItem)newItem("reqTechCd");
		svcCmntTxt = (EZDFStringItem)newItem("svcCmntTxt");
		upldCsvRqstCmntTxt = (EZDFStringItem)newItem("upldCsvRqstCmntTxt");
	}

	/**
	 * get the type of array which is stored
	 * @return SVC_MACH_UPLD_WRKFMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new SVC_MACH_UPLD_WRKFMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"ezTableID", "ezTableID", null, null, TYPE_HANKAKUEISU, "28", null},
	{"ezCancelFlag", "ezCancelFlag", null, null, TYPE_HANKAKUEISU, "1", null},
	{"ezInTime", "ezInTime", null, null, TYPE_HANKAKUEISU, "17", null},
	{"ezInTimeZone", "ezInTimeZone", null, null, TYPE_HANKAKUEISU, "5", null},
	{"ezInCompanyCode", "ezInCompanyCode", null, null, TYPE_HANKAKUEISU, "4", null},
	{"ezInUserID", "ezInUserID", null, null, TYPE_HANKAKUEISU, "16", null},
	{"ezInAplID", "ezInAplID", null, null, TYPE_HANKAKUEISU, "64", null},
	{"ezUpTime", "ezUpTime", null, null, TYPE_HANKAKUEISU, "17", null},
	{"ezUpTimeZone", "ezUpTimeZone", null, null, TYPE_HANKAKUEISU, "5", null},
	{"ezUpCompanyCode", "ezUpCompanyCode", null, null, TYPE_HANKAKUEISU, "4", null},
	{"ezUpUserID", "ezUpUserID", null, null, TYPE_HANKAKUEISU, "16", null},
	{"ezUpAplID", "ezUpAplID", null, null, TYPE_KONZAI, "64", null},
	{"glblCmpyCd", "glblCmpyCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"upldCsvRqstPk", "upldCsvRqstPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"upldCsvRqstRowNum", "upldCsvRqstRowNum", null, null, TYPE_SEISU_SYOSU, "9", "0"},
	{"procModeCd", "procModeCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"svcMachMstrPk", "svcMachMstrPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"serNum", "serNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"mdseCd", "mdseCd", null, null, TYPE_HANKAKUEISU, "16", null},
	{"svcConfigMstrPk", "svcConfigMstrPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"prntSerNum", "prntSerNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"prntMdseCd", "prntMdseCd", null, null, TYPE_HANKAKUEISU, "16", null},
	{"ownrAcctNum", "ownrAcctNum", null, null, TYPE_HANKAKUEISU, "20", null},
	{"billToAcctNum", "billToAcctNum", null, null, TYPE_HANKAKUEISU, "20", null},
	{"curLocAcctNum", "curLocAcctNum", null, null, TYPE_HANKAKUEISU, "20", null},
	{"indBillToLocNum", "indBillToLocNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"indCurLocNum", "indCurLocNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"svcMachMstrStsCd", "svcMachMstrStsCd", null, null, TYPE_HANKAKUEISU, "5", null},
	{"svcMachUsgStsCd", "svcMachUsgStsCd", null, null, TYPE_HANKAKUEISU, "3", null},
	{"svcMachTrxTpCd", "svcMachTrxTpCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"istlDt", "istlDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"effFromDt", "effFromDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt", "effThruDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"svcMachRmvDt", "svcMachRmvDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"custMachCtrlNum", "custMachCtrlNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"swLicId", "swLicId", null, null, TYPE_HANKAKUEISU, "40", null},
	{"svcPrvdPtyDescTxt_01", "svcPrvdPtyDescTxt_01", "01", null, TYPE_HANKAKUEISU, "50", null},
	{"svcPrvdPtyDescTxt_02", "svcPrvdPtyDescTxt_02", "02", null, TYPE_HANKAKUEISU, "50", null},
	{"sldByLineBizTpCd", "sldByLineBizTpCd", null, null, TYPE_HANKAKUEISU, "8", null},
	{"reqTechCd", "reqTechCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"svcCmntTxt", "svcCmntTxt", null, null, TYPE_HANKAKUEISU, "4000", null},
	{"upldCsvRqstCmntTxt", "upldCsvRqstCmntTxt", null, null, TYPE_HANKAKUEISU, "4000", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"_EZTableID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezTableID
        {"_EZCancelFlag",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezCancelFlag
        {"_EZRegistrationDateTime",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezInTime
        {"_EZInTimeZone",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezInTimeZone
        {"_EZInCompanyCode",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezInCompanyCode
        {"_EZInUserID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezInUserID
        {"_EZInAplID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezInAplID
        {"_EZUpdateDateTime",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTime
        {"_EZUpTimeZone",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTimeZone
        {"_EZUpCompanyCode",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpCompanyCode
        {"_EZUpdateUserID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpUserID
        {"_EZUpdateApplicationID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpAplID
        {"GLBL_CMPY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//glblCmpyCd
        {"UPLD_CSV_RQST_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//upldCsvRqstPk
        {"UPLD_CSV_RQST_ROW_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//upldCsvRqstRowNum
        {"PROC_MODE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//procModeCd
        {"SVC_MACH_MSTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachMstrPk
        {"SER_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNum
        {"MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd
        {"SVC_CONFIG_MSTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcConfigMstrPk
        {"PRNT_SER_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prntSerNum
        {"PRNT_MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prntMdseCd
        {"OWNR_ACCT_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ownrAcctNum
        {"BILL_TO_ACCT_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//billToAcctNum
        {"CUR_LOC_ACCT_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//curLocAcctNum
        {"IND_BILL_TO_LOC_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//indBillToLocNum
        {"IND_CUR_LOC_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//indCurLocNum
        {"SVC_MACH_MSTR_STS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachMstrStsCd
        {"SVC_MACH_USG_STS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachUsgStsCd
        {"SVC_MACH_TRX_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachTrxTpCd
        {"ISTL_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//istlDt
        {"EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effFromDt
        {"EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effThruDt
        {"SVC_MACH_RMV_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachRmvDt
        {"CUST_MACH_CTRL_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//custMachCtrlNum
        {"SW_LIC_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//swLicId
        {"SVC_PRVD_PTY_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcPrvdPtyDescTxt_01
        {"SVC_PRVD_PTY_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcPrvdPtyDescTxt_02
        {"SLD_BY_LINE_BIZ_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//sldByLineBizTpCd
        {"REQ_TECH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//reqTechCd
        {"SVC_CMNT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcCmntTxt
        {"UPLD_CSV_RQST_CMNT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//upldCsvRqstCmntTxt
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

	
	/**
	 * Array of schema data(Database data)
	 */
	private static final String[][] DB_CONTENTS = {

		//It is defined as {"Database column name", "Database column type flag", and "Primary key" } etc.
		{"EZTABLEID",  NO, null},  // ezTableID
		{"EZCANCELFLAG",  NO, null},  // ezCancelFlag
		{"EZINTIME",  NO, null},  // ezInTime
		{"EZINTIMEZONE",  NO, null},  // ezInTimeZone
		{"EZINCOMPANYCODE",  NO, null},  // ezInCompanyCode
		{"EZINUSERID",  NO, null},  // ezInUserID
		{"EZINAPLID",  NO, null},  // ezInAplID
		{"EZUPTIME",  NO, null},  // ezUpTime
		{"EZUPTIMEZONE",  NO, null},  // ezUpTimeZone
		{"EZUPCOMPANYCODE",  NO, null},  // ezUpCompanyCode
		{"EZUPUSERID",  NO, null},  // ezUpUserID
		{"EZUPAPLID",  NO, null},  // ezUpAplID
		{"GLBL_CMPY_CD",  NO, DB_PRIMARYKEY},  // glblCmpyCd
		{"UPLD_CSV_RQST_PK",  NO, DB_PRIMARYKEY},  // upldCsvRqstPk
		{"UPLD_CSV_RQST_ROW_NUM",  NO, DB_PRIMARYKEY},  // upldCsvRqstRowNum
		{"PROC_MODE_CD",  NO, null},  // procModeCd
		{"SVC_MACH_MSTR_PK",  NO, null},  // svcMachMstrPk
		{"SER_NUM",  NO, null},  // serNum
		{"MDSE_CD",  NO, null},  // mdseCd
		{"SVC_CONFIG_MSTR_PK",  NO, null},  // svcConfigMstrPk
		{"PRNT_SER_NUM",  NO, null},  // prntSerNum
		{"PRNT_MDSE_CD",  NO, null},  // prntMdseCd
		{"OWNR_ACCT_NUM",  NO, null},  // ownrAcctNum
		{"BILL_TO_ACCT_NUM",  NO, null},  // billToAcctNum
		{"CUR_LOC_ACCT_NUM",  NO, null},  // curLocAcctNum
		{"IND_BILL_TO_LOC_NUM",  NO, null},  // indBillToLocNum
		{"IND_CUR_LOC_NUM",  NO, null},  // indCurLocNum
		{"SVC_MACH_MSTR_STS_CD",  NO, null},  // svcMachMstrStsCd
		{"SVC_MACH_USG_STS_CD",  NO, null},  // svcMachUsgStsCd
		{"SVC_MACH_TRX_TP_CD",  NO, null},  // svcMachTrxTpCd
		{"ISTL_DT",  NO, null},  // istlDt
		{"EFF_FROM_DT",  NO, null},  // effFromDt
		{"EFF_THRU_DT",  NO, null},  // effThruDt
		{"SVC_MACH_RMV_DT",  NO, null},  // svcMachRmvDt
		{"CUST_MACH_CTRL_NUM",  NO, null},  // custMachCtrlNum
		{"SW_LIC_ID",  NO, null},  // swLicId
		{"SVC_PRVD_PTY_DESC_TXT_01",  NO, null},  // svcPrvdPtyDescTxt_01
		{"SVC_PRVD_PTY_DESC_TXT_02",  NO, null},  // svcPrvdPtyDescTxt_02
		{"SLD_BY_LINE_BIZ_TP_CD",  NO, null},  // sldByLineBizTpCd
		{"REQ_TECH_CD",  NO, null},  // reqTechCd
		{"SVC_CMNT_TXT",  NO, null},  // svcCmntTxt
		{"UPLD_CSV_RQST_CMNT_TXT",  NO, null},  // upldCsvRqstCmntTxt
	};

	/**
	 * Database Table Name
	 */
	private static final String TABLE_NAME = "SVC_MACH_UPLD_WRK";

	/**
	 * get Array of Database Data.
	 * @return Array of Database Data
	 */
	protected String[][] getDBContents(){
		return DB_CONTENTS;
	}

	/**
	 * get Table Name.
	 * @return Table Name
	 */
	public String getTableName() {
		return TABLE_NAME;
	}

}

