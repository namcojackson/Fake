//This file was automatically generated by Text File Layout Definition Document and XLA200710010.
// Generated on    :20180816180452000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :TextFileLayoutDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *PRC_LIST_SVC_TIER_WRKFMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.db;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is PRC_LIST_SVC_TIER_WRK File Layout Message class.
 * @author
 * @version XLA200710010
 */
public class PRC_LIST_SVC_TIER_WRKFMsg extends EZDFMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** _EZTableID*/
	public final EZDFStringItem              ezTableID;

    /** _EZCancelFlag*/
	public final EZDFStringItem              ezCancelFlag;

    /** _EZRegistrationDateTime*/
	public final EZDFStringItem              ezInTime;

    /** _EZInTimeZone*/
	public final EZDFStringItem              ezInTimeZone;

    /** _EZInCompanyCode*/
	public final EZDFStringItem              ezInCompanyCode;

    /** _EZInUserID*/
	public final EZDFStringItem              ezInUserID;

    /** _EZInAplID*/
	public final EZDFStringItem              ezInAplID;

    /** _EZUpdateDateTime*/
	public final EZDFStringItem              ezUpTime;

    /** _EZUpTimeZone*/
	public final EZDFStringItem              ezUpTimeZone;

    /** _EZUpCompanyCode*/
	public final EZDFStringItem              ezUpCompanyCode;

    /** _EZUpdateUserID*/
	public final EZDFStringItem              ezUpUserID;

    /** _EZUpdateApplicationID*/
	public final EZDFStringItem              ezUpAplID;

    /** GLBL_CMPY_CD*/
	public final EZDFStringItem              glblCmpyCd;

    /** UPLD_CSV_RQST_PK*/
	public final EZDFBigDecimalItem              upldCsvRqstPk;

    /** UPLD_CSV_RQST_ROW_NUM*/
	public final EZDFBigDecimalItem              upldCsvRqstRowNum;

    /** PRC_CATG_NM*/
	public final EZDFStringItem              prcCatgNm;

    /** PRC_LIST_TP_DESC_TXT*/
	public final EZDFStringItem              prcListTpDescTxt;

    /** MDL_NM*/
	public final EZDFStringItem              mdlNm;

    /** PRC_SVC_TIER_TP_DESC_TXT*/
	public final EZDFStringItem              prcSvcTierTpDescTxt;

    /** PRC_MTR_PKG_NM*/
	public final EZDFStringItem              prcMtrPkgNm;

    /** PRC_SVC_PLN_TP_DESC_TXT*/
	public final EZDFStringItem              prcSvcPlnTpDescTxt;

    /** PRC_SVC_CONTR_TP_DESC_TXT*/
	public final EZDFStringItem              prcSvcContrTpDescTxt;

    /** MTR_LB_NM*/
	public final EZDFStringItem              mtrLbNm;

    /** AVG_COPY_VOL_CNT*/
	public final EZDFBigDecimalItem              avgCopyVolCnt;

    /** MIN_COPY_VOL_CNT*/
	public final EZDFBigDecimalItem              minCopyVolCnt;

    /** MAX_COPY_VOL_CNT*/
	public final EZDFBigDecimalItem              maxCopyVolCnt;

    /** PRC_LIST_BAND_DESC_TXT*/
	public final EZDFStringItem              prcListBandDescTxt;

    /** BASE_AMT*/
	public final EZDFBigDecimalItem              baseAmt;

    /** MIN_BASE_AMT*/
	public final EZDFBigDecimalItem              minBaseAmt;

    /** MAX_BASE_AMT*/
	public final EZDFBigDecimalItem              maxBaseAmt;

    /** CPC_AMT_RATE*/
	public final EZDFBigDecimalItem              cpcAmtRate;

    /** MIN_CPC_AMT_RATE*/
	public final EZDFBigDecimalItem              minCpcAmtRate;

    /** MAX_CPC_AMT_RATE*/
	public final EZDFBigDecimalItem              maxCpcAmtRate;

    /** TERM_FROM_MTH_AOT*/
	public final EZDFBigDecimalItem              termFromMthAot;

    /** TERM_THRU_MTH_AOT*/
	public final EZDFBigDecimalItem              termThruMthAot;

    /** MDSE_CD*/
	public final EZDFStringItem              mdseCd;

    /** EFF_FROM_DT*/
	public final EZDFDateItem              effFromDt;

    /** EFF_THRU_DT*/
	public final EZDFDateItem              effThruDt;

    /** UPLD_CSV_RQST_CMNT_TXT*/
	public final EZDFStringItem              upldCsvRqstCmntTxt;


	/**
	 * PRC_LIST_SVC_TIER_WRKFMsg is constructor.
	 * The initialization when the instance of PRC_LIST_SVC_TIER_WRKFMsg is generated.
	 */
	public PRC_LIST_SVC_TIER_WRKFMsg() {
		this(false, -1);
	}

	/**
	 * PRC_LIST_SVC_TIER_WRKFMsg is constructor.
	 * The initialization when the instance of PRC_LIST_SVC_TIER_WRKFMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public PRC_LIST_SVC_TIER_WRKFMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		ezTableID = (EZDFStringItem)newItem("ezTableID");
		ezCancelFlag = (EZDFStringItem)newItem("ezCancelFlag");
		ezInTime = (EZDFStringItem)newItem("ezInTime");
		ezInTimeZone = (EZDFStringItem)newItem("ezInTimeZone");
		ezInCompanyCode = (EZDFStringItem)newItem("ezInCompanyCode");
		ezInUserID = (EZDFStringItem)newItem("ezInUserID");
		ezInAplID = (EZDFStringItem)newItem("ezInAplID");
		ezUpTime = (EZDFStringItem)newItem("ezUpTime");
		ezUpTimeZone = (EZDFStringItem)newItem("ezUpTimeZone");
		ezUpCompanyCode = (EZDFStringItem)newItem("ezUpCompanyCode");
		ezUpUserID = (EZDFStringItem)newItem("ezUpUserID");
		ezUpAplID = (EZDFStringItem)newItem("ezUpAplID");
		glblCmpyCd = (EZDFStringItem)newItem("glblCmpyCd");
		upldCsvRqstPk = (EZDFBigDecimalItem)newItem("upldCsvRqstPk");
		upldCsvRqstRowNum = (EZDFBigDecimalItem)newItem("upldCsvRqstRowNum");
		prcCatgNm = (EZDFStringItem)newItem("prcCatgNm");
		prcListTpDescTxt = (EZDFStringItem)newItem("prcListTpDescTxt");
		mdlNm = (EZDFStringItem)newItem("mdlNm");
		prcSvcTierTpDescTxt = (EZDFStringItem)newItem("prcSvcTierTpDescTxt");
		prcMtrPkgNm = (EZDFStringItem)newItem("prcMtrPkgNm");
		prcSvcPlnTpDescTxt = (EZDFStringItem)newItem("prcSvcPlnTpDescTxt");
		prcSvcContrTpDescTxt = (EZDFStringItem)newItem("prcSvcContrTpDescTxt");
		mtrLbNm = (EZDFStringItem)newItem("mtrLbNm");
		avgCopyVolCnt = (EZDFBigDecimalItem)newItem("avgCopyVolCnt");
		minCopyVolCnt = (EZDFBigDecimalItem)newItem("minCopyVolCnt");
		maxCopyVolCnt = (EZDFBigDecimalItem)newItem("maxCopyVolCnt");
		prcListBandDescTxt = (EZDFStringItem)newItem("prcListBandDescTxt");
		baseAmt = (EZDFBigDecimalItem)newItem("baseAmt");
		minBaseAmt = (EZDFBigDecimalItem)newItem("minBaseAmt");
		maxBaseAmt = (EZDFBigDecimalItem)newItem("maxBaseAmt");
		cpcAmtRate = (EZDFBigDecimalItem)newItem("cpcAmtRate");
		minCpcAmtRate = (EZDFBigDecimalItem)newItem("minCpcAmtRate");
		maxCpcAmtRate = (EZDFBigDecimalItem)newItem("maxCpcAmtRate");
		termFromMthAot = (EZDFBigDecimalItem)newItem("termFromMthAot");
		termThruMthAot = (EZDFBigDecimalItem)newItem("termThruMthAot");
		mdseCd = (EZDFStringItem)newItem("mdseCd");
		effFromDt = (EZDFDateItem)newItem("effFromDt");
		effThruDt = (EZDFDateItem)newItem("effThruDt");
		upldCsvRqstCmntTxt = (EZDFStringItem)newItem("upldCsvRqstCmntTxt");
	}

	/**
	 * get the type of array which is stored
	 * @return PRC_LIST_SVC_TIER_WRKFMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new PRC_LIST_SVC_TIER_WRKFMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"ezTableID", "ezTableID", null, null, TYPE_HANKAKUEISU, "28", null},
	{"ezCancelFlag", "ezCancelFlag", null, null, TYPE_HANKAKUEISU, "1", null},
	{"ezInTime", "ezInTime", null, null, TYPE_HANKAKUEISU, "17", null},
	{"ezInTimeZone", "ezInTimeZone", null, null, TYPE_HANKAKUEISU, "5", null},
	{"ezInCompanyCode", "ezInCompanyCode", null, null, TYPE_HANKAKUEISU, "4", null},
	{"ezInUserID", "ezInUserID", null, null, TYPE_HANKAKUEISU, "16", null},
	{"ezInAplID", "ezInAplID", null, null, TYPE_HANKAKUEISU, "64", null},
	{"ezUpTime", "ezUpTime", null, null, TYPE_HANKAKUEISU, "17", null},
	{"ezUpTimeZone", "ezUpTimeZone", null, null, TYPE_HANKAKUEISU, "5", null},
	{"ezUpCompanyCode", "ezUpCompanyCode", null, null, TYPE_HANKAKUEISU, "4", null},
	{"ezUpUserID", "ezUpUserID", null, null, TYPE_HANKAKUEISU, "16", null},
	{"ezUpAplID", "ezUpAplID", null, null, TYPE_KONZAI, "64", null},
	{"glblCmpyCd", "glblCmpyCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"upldCsvRqstPk", "upldCsvRqstPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"upldCsvRqstRowNum", "upldCsvRqstRowNum", null, null, TYPE_SEISU_SYOSU, "9", "0"},
	{"prcCatgNm", "prcCatgNm", null, null, TYPE_HANKAKUEISU, "75", null},
	{"prcListTpDescTxt", "prcListTpDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"mdlNm", "mdlNm", null, null, TYPE_HANKAKUEISU, "50", null},
	{"prcSvcTierTpDescTxt", "prcSvcTierTpDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"prcMtrPkgNm", "prcMtrPkgNm", null, null, TYPE_HANKAKUEISU, "50", null},
	{"prcSvcPlnTpDescTxt", "prcSvcPlnTpDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"prcSvcContrTpDescTxt", "prcSvcContrTpDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"mtrLbNm", "mtrLbNm", null, null, TYPE_HANKAKUEISU, "30", null},
	{"avgCopyVolCnt", "avgCopyVolCnt", null, null, TYPE_SEISU_SYOSU, "12", "0"},
	{"minCopyVolCnt", "minCopyVolCnt", null, null, TYPE_SEISU_SYOSU, "12", "0"},
	{"maxCopyVolCnt", "maxCopyVolCnt", null, null, TYPE_SEISU_SYOSU, "12", "0"},
	{"prcListBandDescTxt", "prcListBandDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"baseAmt", "baseAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"minBaseAmt", "minBaseAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"maxBaseAmt", "maxBaseAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"cpcAmtRate", "cpcAmtRate", null, null, TYPE_SEISU_SYOSU, "9", "5"},
	{"minCpcAmtRate", "minCpcAmtRate", null, null, TYPE_SEISU_SYOSU, "9", "5"},
	{"maxCpcAmtRate", "maxCpcAmtRate", null, null, TYPE_SEISU_SYOSU, "9", "5"},
	{"termFromMthAot", "termFromMthAot", null, null, TYPE_SEISU_SYOSU, "3", "0"},
	{"termThruMthAot", "termThruMthAot", null, null, TYPE_SEISU_SYOSU, "3", "0"},
	{"mdseCd", "mdseCd", null, null, TYPE_HANKAKUEISU, "16", null},
	{"effFromDt", "effFromDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt", "effThruDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"upldCsvRqstCmntTxt", "upldCsvRqstCmntTxt", null, null, TYPE_HANKAKUEISU, "4000", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"_EZTableID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezTableID
        {"_EZCancelFlag",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezCancelFlag
        {"_EZRegistrationDateTime",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezInTime
        {"_EZInTimeZone",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezInTimeZone
        {"_EZInCompanyCode",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezInCompanyCode
        {"_EZInUserID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezInUserID
        {"_EZInAplID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezInAplID
        {"_EZUpdateDateTime",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTime
        {"_EZUpTimeZone",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTimeZone
        {"_EZUpCompanyCode",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpCompanyCode
        {"_EZUpdateUserID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpUserID
        {"_EZUpdateApplicationID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpAplID
        {"GLBL_CMPY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//glblCmpyCd
        {"UPLD_CSV_RQST_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//upldCsvRqstPk
        {"UPLD_CSV_RQST_ROW_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//upldCsvRqstRowNum
        {"PRC_CATG_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCatgNm
        {"PRC_LIST_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcListTpDescTxt
        {"MDL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdlNm
        {"PRC_SVC_TIER_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcSvcTierTpDescTxt
        {"PRC_MTR_PKG_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcMtrPkgNm
        {"PRC_SVC_PLN_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcSvcPlnTpDescTxt
        {"PRC_SVC_CONTR_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcSvcContrTpDescTxt
        {"MTR_LB_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrLbNm
        {"AVG_COPY_VOL_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//avgCopyVolCnt
        {"MIN_COPY_VOL_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//minCopyVolCnt
        {"MAX_COPY_VOL_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//maxCopyVolCnt
        {"PRC_LIST_BAND_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcListBandDescTxt
        {"BASE_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//baseAmt
        {"MIN_BASE_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//minBaseAmt
        {"MAX_BASE_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//maxBaseAmt
        {"CPC_AMT_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cpcAmtRate
        {"MIN_CPC_AMT_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//minCpcAmtRate
        {"MAX_CPC_AMT_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//maxCpcAmtRate
        {"TERM_FROM_MTH_AOT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//termFromMthAot
        {"TERM_THRU_MTH_AOT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//termThruMthAot
        {"MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd
        {"EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effFromDt
        {"EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effThruDt
        {"UPLD_CSV_RQST_CMNT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//upldCsvRqstCmntTxt
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

