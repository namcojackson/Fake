//This file was automatically generated by Common Business Component Interface Definition Document and XLA200710010.
// Generated on    :20130402213758000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :CommonBusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NWZC002001PMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.parts;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NWZC002001 Common Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NWZC002001PMsg extends EZDPMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** GLBL_CMPY_CD*/
	public final EZDPStringItem              glblCmpyCd;

    /** xxMsgIdList*/
	public final business.parts.NWZC002001_xxMsgIdListPMsgArray              xxMsgIdList;

    /** MDSE_CD*/
	public final EZDPStringItem              mdseCd;

    /** ORD_QTY*/
	public final EZDPBigDecimalItem              ordQty;

    /** SHPG_SVC_LVL_CD*/
	public final EZDPStringItem              shpgSvcLvlCd;

    /** FRT_CHRG_METH_CD*/
	public final EZDPStringItem              frtChrgMethCd;

    /** FRT_CHRG_TO_CD*/
	public final EZDPStringItem              frtChrgToCd;

    /** XX_RDD_DT*/
	public final EZDPDateItem              xxRddDt;

    /** XX_RSD_DT*/
	public final EZDPDateItem              xxRsdDt;

    /** XX_RWSD_DT*/
	public final EZDPDateItem              xxRwsdDt;

    /** INVTY_LOC_CD*/
	public final EZDPStringItem              invtyLocCd;

    /** SHIP_TO_POST_CD*/
	public final EZDPStringItem              shipToPostCd;

    /** SHIP_TO_CUST_CD*/
	public final EZDPStringItem              shipToCustCd;

    /** SELL_TO_CUST_CD*/
	public final EZDPStringItem              sellToCustCd;

    /** SHIP_TO_ST_CD*/
	public final EZDPStringItem              shipToStCd;

    /** UOM_CD*/
	public final EZDPStringItem              uomCd;

    /** SLS_DT*/
	public final EZDPDateItem              slsDt;

    /** CONFIG_FLG*/
	public final EZDPStringItem              configFlg;

    /** XX_PDD_DT*/
	public final EZDPDateItem              xxPddDt;

    /** XX_PSD_DT*/
	public final EZDPDateItem              xxPsdDt;

    /** XX_WSD_DT*/
	public final EZDPDateItem              xxWsdDt;


	/**
	 * NWZC002001PMsg is constructor.
	 * The initialization when the instance of NWZC002001PMsg is generated.
	 */
	public NWZC002001PMsg() {
		this(false, -1);
	}

	/**
	 * NWZC002001PMsg is constructor.
	 * The initialization when the instance of NWZC002001PMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NWZC002001PMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		glblCmpyCd = (EZDPStringItem)newItem("glblCmpyCd");
		xxMsgIdList = (business.parts.NWZC002001_xxMsgIdListPMsgArray)newMsgArray("xxMsgIdList");
		mdseCd = (EZDPStringItem)newItem("mdseCd");
		ordQty = (EZDPBigDecimalItem)newItem("ordQty");
		shpgSvcLvlCd = (EZDPStringItem)newItem("shpgSvcLvlCd");
		frtChrgMethCd = (EZDPStringItem)newItem("frtChrgMethCd");
		frtChrgToCd = (EZDPStringItem)newItem("frtChrgToCd");
		xxRddDt = (EZDPDateItem)newItem("xxRddDt");
		xxRsdDt = (EZDPDateItem)newItem("xxRsdDt");
		xxRwsdDt = (EZDPDateItem)newItem("xxRwsdDt");
		invtyLocCd = (EZDPStringItem)newItem("invtyLocCd");
		shipToPostCd = (EZDPStringItem)newItem("shipToPostCd");
		shipToCustCd = (EZDPStringItem)newItem("shipToCustCd");
		sellToCustCd = (EZDPStringItem)newItem("sellToCustCd");
		shipToStCd = (EZDPStringItem)newItem("shipToStCd");
		uomCd = (EZDPStringItem)newItem("uomCd");
		slsDt = (EZDPDateItem)newItem("slsDt");
		configFlg = (EZDPStringItem)newItem("configFlg");
		xxPddDt = (EZDPDateItem)newItem("xxPddDt");
		xxPsdDt = (EZDPDateItem)newItem("xxPsdDt");
		xxWsdDt = (EZDPDateItem)newItem("xxWsdDt");
	}

	/**
	 * get the type of array which is stored
	 * @return NWZC002001PMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NWZC002001PMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"glblCmpyCd", "glblCmpyCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"xxMsgIdList", "xxMsgIdList", null, "100", "business.parts.NWZC002001_xxMsgIdListPMsgArray", null, null},
	
	{"mdseCd", "mdseCd", null, null, TYPE_HANKAKUEISU, "16", null},
	{"ordQty", "ordQty", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"shpgSvcLvlCd", "shpgSvcLvlCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"frtChrgMethCd", "frtChrgMethCd", null, null, TYPE_HANKAKUEISU, "1", null},
	{"frtChrgToCd", "frtChrgToCd", null, null, TYPE_HANKAKUEISU, "1", null},
	{"xxRddDt", "xxRddDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"xxRsdDt", "xxRsdDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"xxRwsdDt", "xxRwsdDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"invtyLocCd", "invtyLocCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"shipToPostCd", "shipToPostCd", null, null, TYPE_HANKAKUEISU, "15", null},
	{"shipToCustCd", "shipToCustCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"sellToCustCd", "sellToCustCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"shipToStCd", "shipToStCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"uomCd", "uomCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"slsDt", "slsDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"configFlg", "configFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"xxPddDt", "xxPddDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"xxPsdDt", "xxPsdDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"xxWsdDt", "xxWsdDt", null, null, TYPE_NENTSUKIHI, "8", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"GLBL_CMPY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//glblCmpyCd
		null,	//xxMsgIdList
        {"MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd
        {"ORD_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordQty
        {"SHPG_SVC_LVL_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shpgSvcLvlCd
        {"FRT_CHRG_METH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//frtChrgMethCd
        {"FRT_CHRG_TO_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//frtChrgToCd
        {"XX_RDD_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRddDt
        {"XX_RSD_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRsdDt
        {"XX_RWSD_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRwsdDt
        {"INVTY_LOC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invtyLocCd
        {"SHIP_TO_POST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToPostCd
        {"SHIP_TO_CUST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToCustCd
        {"SELL_TO_CUST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//sellToCustCd
        {"SHIP_TO_ST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToStCd
        {"UOM_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//uomCd
        {"SLS_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//slsDt
        {"CONFIG_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//configFlg
        {"XX_PDD_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPddDt
        {"XX_PSD_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPsdDt
        {"XX_WSD_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxWsdDt
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

