// This file was automatically generated by Screen Field Definition Document and XLA200710010
// Generated on    :20091026144053000
// Velocity Macro:svltdatabean.vm V200604010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *ZZBL0020Bean.java Copyright FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */

package  business.servlet.ZZBL0020;

import parts.servletcommon.EZDCommonDataBean;

/*
 * ZZBL0020 is data bean class.
 */
public class ZZBL0020Bean extends EZDCommonDataBean {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	//Constant Definition Area
	/** _EZREQBusinessApplicationID*/
	public static final String ezReqBusinessID = "ezReqBusinessID";

	/** _EZREQExecutionControlNetID*/
	public static final String ezReqJobCtlNetID = "ezReqJobCtlNetID";

	/** A*/
	public static final String A = "A";

	/** XX_YES_NO_CD_A*/
	public static final String xxYesNoCd_A = "xxYesNoCd_A";

	/** XX_ROW_NUM_A*/
	public static final String xxRowNum_A = "xxRowNum_A";

	/** _EZREQBusinessApplicationID_A*/
	public static final String ezReqBusinessID_A = "ezReqBusinessID_A";

	/** _EZREQBusinessApplicationName_A*/
	public static final String ezReqBusinessName_A = "ezReqBusinessName_A";

	/** _EZREQExecutionControlNetID_A*/
	public static final String ezReqJobCtlNetID_A = "ezReqJobCtlNetID_A";

	/** _EZREQJobConcurrency_A*/
	public static final String ezReqJobConcurrency_A = "ezReqJobConcurrency_A";

	/** _EZREQJobBlockingFlag_A*/
	public static final String ezReqJobStopFlag_A = "ezReqJobStopFlag_A";

	/** XX_JOB_BLOCK_FLG_NM_A1*/
	public static final String xxJobBlockFlgNm_A1 = "xxJobBlockFlgNm_A1";

	/** _EZREQExecutionControlFlaginError_A*/
	public static final String ezReqJobErrorCtlFlag_A = "ezReqJobErrorCtlFlag_A";

	/** XX_JOB_ERR_CTRL_FLG_NM_A2*/
	public static final String xxJobErrCtrlFlgNm_A2 = "xxJobErrCtrlFlgNm_A2";

	/** _EZREQExtractionCount_A*/
	public static final String ezReqCountPerJob_A = "ezReqCountPerJob_A";

	/** ACTV_FLG_A*/
	public static final String actvFlg_A = "actvFlg_A";

	/** _EZUpdateDateTime*/
	public static final String ezUpTime = "ezUpTime";

	/** _EZUpTimeZone*/
	public static final String ezUpTimeZone = "ezUpTimeZone";

	/** XX_PAGE_SHOW_FROM_NUM*/
	public static final String xxPageShowFromNum = "xxPageShowFromNum";

	/** XX_PAGE_SHOW_TO_NUM*/
	public static final String xxPageShowToNum = "xxPageShowToNum";

	/** XX_PAGE_SHOW_OF_NUM*/
	public static final String xxPageShowOfNum = "xxPageShowOfNum";

	/** XX_SORT_TBL_NM*/
	public static final String xxSortTblNm = "xxSortTblNm";

	/** XX_SORT_ITEM_NM*/
	public static final String xxSortItemNm = "xxSortItemNm";

	/** XX_SORT_ORD_BY_TXT*/
	public static final String xxSortOrdByTxt = "xxSortOrdByTxt";

	/** _EZREQBusinessApplicationID_B*/
	public static final String ezReqBusinessID_B = "ezReqBusinessID_B";

	/** _EZREQBusinessApplicationName_B*/
	public static final String ezReqBusinessName_B = "ezReqBusinessName_B";

	/** _EZREQExecutionControlNetID_B*/
	public static final String ezReqJobCtlNetID_B = "ezReqJobCtlNetID_B";

	/** _EZREQJobConcurrency_B*/
	public static final String ezReqJobConcurrency_B = "ezReqJobConcurrency_B";

	/** _EZREQJobConcurrency_P1*/
	public static final String ezReqJobConcurrency_P1 = "ezReqJobConcurrency_P1";

	/** XX_JOB_CNCR_CD_P1*/
	public static final String xxJobCncrCd_P1 = "xxJobCncrCd_P1";

	/** _EZREQJobBlockingFlag_B*/
	public static final String ezReqJobStopFlag_B = "ezReqJobStopFlag_B";

	/** _EZREQJobBlockingFlag_P2*/
	public static final String ezReqJobStopFlag_P2 = "ezReqJobStopFlag_P2";

	/** XX_JOB_BLOCK_FLG_NM_P2*/
	public static final String xxJobBlockFlgNm_P2 = "xxJobBlockFlgNm_P2";

	/** _EZREQExecutionControlFlaginError_B*/
	public static final String ezReqJobErrorCtlFlag_B = "ezReqJobErrorCtlFlag_B";

	/** _EZREQExecutionControlFlaginError_P3*/
	public static final String ezReqJobErrorCtlFlag_P3 = "ezReqJobErrorCtlFlag_P3";

	/** XX_JOB_ERR_CTRL_FLG_NM_P3*/
	public static final String xxJobErrCtrlFlgNm_P3 = "xxJobErrCtrlFlgNm_P3";

	/** _EZREQExtractionCount_B*/
	public static final String ezReqCountPerJob_B = "ezReqCountPerJob_B";

	/** ACTV_FLG_B*/
	public static final String actvFlg_B = "actvFlg_B";

	/** XX_LAST_BTN_NM*/
	public static final String xxLastBtnNm = "xxLastBtnNm";

	/**
	 * Method name:ZZBL0020 is Bean's Constructor.
	 * <dd>method explanation:Initialization when instance of ZZBL0020Bean is generated
	 * <dd>Remarks:
	 */
	public ZZBL0020Bean() {
		super("business.servlet.ZZBL0020.ZZBL0020BMsg");
	}

	/**
	 * get  _EZREQBusinessApplicationID.
	 * @return _EZREQBusinessApplicationID
	 */
	public String getEzReqBusinessID() {
		return outputValue(ezReqBusinessID);
	}

	/**
	 * set  _EZREQBusinessApplicationID.
	 * @param data _EZREQBusinessApplicationID
	 */
	public void setEzReqBusinessID(String data) {
		inputValue(ezReqBusinessID,data);
	}

	/**
	 * get  _EZREQExecutionControlNetID.
	 * @return _EZREQExecutionControlNetID
	 */
	public String getEzReqJobCtlNetID() {
		return outputValue(ezReqJobCtlNetID);
	}

	/**
	 * set  _EZREQExecutionControlNetID.
	 * @param data _EZREQExecutionControlNetID
	 */
	public void setEzReqJobCtlNetID(String data) {
		inputValue(ezReqJobCtlNetID,data);
	}

	/**
	 * get  XX_YES_NO_CD_A.
	 * @param idx1 List Number
	 * @return XX_YES_NO_CD_A
	 */
	public String getXxYesNoCd_A(int idx1) {
		return outputValue(A, idx1, xxYesNoCd_A);
	}

	/**
	 * set  XX_YES_NO_CD_A.
	 * @param data XX_YES_NO_CD_AArray
	 */
	public void setXxYesNoCd_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxYesNoCd_A, data[j]);
		}
	}

	/**
	 * get  XX_ROW_NUM_A.
	 * @param idx1 List Number
	 * @return XX_ROW_NUM_A
	 */
	public String getXxRowNum_A(int idx1) {
		return outputValue(A, idx1, xxRowNum_A);
	}

	/**
	 * set  XX_ROW_NUM_A.
	 * @param data XX_ROW_NUM_AArray
	 */
	public void setXxRowNum_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRowNum_A, data[j]);
		}
	}

	/**
	 * get  _EZREQBusinessApplicationID_A.
	 * @param idx1 List Number
	 * @return _EZREQBusinessApplicationID_A
	 */
	public String getEzReqBusinessID_A(int idx1) {
		return outputValue(A, idx1, ezReqBusinessID_A);
	}

	/**
	 * set  _EZREQBusinessApplicationID_A.
	 * @param data _EZREQBusinessApplicationID_AArray
	 */
	public void setEzReqBusinessID_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, ezReqBusinessID_A, data[j]);
		}
	}

	/**
	 * get  _EZREQBusinessApplicationName_A.
	 * @param idx1 List Number
	 * @return _EZREQBusinessApplicationName_A
	 */
	public String getEzReqBusinessName_A(int idx1) {
		return outputValue(A, idx1, ezReqBusinessName_A);
	}

	/**
	 * set  _EZREQBusinessApplicationName_A.
	 * @param data _EZREQBusinessApplicationName_AArray
	 */
	public void setEzReqBusinessName_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, ezReqBusinessName_A, data[j]);
		}
	}

	/**
	 * get  _EZREQExecutionControlNetID_A.
	 * @param idx1 List Number
	 * @return _EZREQExecutionControlNetID_A
	 */
	public String getEzReqJobCtlNetID_A(int idx1) {
		return outputValue(A, idx1, ezReqJobCtlNetID_A);
	}

	/**
	 * set  _EZREQExecutionControlNetID_A.
	 * @param data _EZREQExecutionControlNetID_AArray
	 */
	public void setEzReqJobCtlNetID_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, ezReqJobCtlNetID_A, data[j]);
		}
	}

	/**
	 * get  _EZREQJobConcurrency_A.
	 * @param idx1 List Number
	 * @return _EZREQJobConcurrency_A
	 */
	public String getEzReqJobConcurrency_A(int idx1) {
		return outputValue(A, idx1, ezReqJobConcurrency_A);
	}

	/**
	 * set  _EZREQJobConcurrency_A.
	 * @param data _EZREQJobConcurrency_AArray
	 */
	public void setEzReqJobConcurrency_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, ezReqJobConcurrency_A, data[j]);
		}
	}

	/**
	 * get  _EZREQJobBlockingFlag_A.
	 * @param idx1 List Number
	 * @return _EZREQJobBlockingFlag_A
	 */
	public String getEzReqJobStopFlag_A(int idx1) {
		return outputValue(A, idx1, ezReqJobStopFlag_A);
	}

	/**
	 * set  _EZREQJobBlockingFlag_A.
	 * @param data _EZREQJobBlockingFlag_AArray
	 */
	public void setEzReqJobStopFlag_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, ezReqJobStopFlag_A, data[j]);
		}
	}

	/**
	 * get  XX_JOB_BLOCK_FLG_NM_A1.
	 * @param idx1 List Number
	 * @return XX_JOB_BLOCK_FLG_NM_A1
	 */
	public String getXxJobBlockFlgNm_A1(int idx1) {
		return outputValue(A, idx1, xxJobBlockFlgNm_A1);
	}

	/**
	 * set  XX_JOB_BLOCK_FLG_NM_A1.
	 * @param data XX_JOB_BLOCK_FLG_NM_A1Array
	 */
	public void setXxJobBlockFlgNm_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxJobBlockFlgNm_A1, data[j]);
		}
	}

	/**
	 * get  _EZREQExecutionControlFlaginError_A.
	 * @param idx1 List Number
	 * @return _EZREQExecutionControlFlaginError_A
	 */
	public String getEzReqJobErrorCtlFlag_A(int idx1) {
		return outputValue(A, idx1, ezReqJobErrorCtlFlag_A);
	}

	/**
	 * set  _EZREQExecutionControlFlaginError_A.
	 * @param data _EZREQExecutionControlFlaginError_AArray
	 */
	public void setEzReqJobErrorCtlFlag_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, ezReqJobErrorCtlFlag_A, data[j]);
		}
	}

	/**
	 * get  XX_JOB_ERR_CTRL_FLG_NM_A2.
	 * @param idx1 List Number
	 * @return XX_JOB_ERR_CTRL_FLG_NM_A2
	 */
	public String getXxJobErrCtrlFlgNm_A2(int idx1) {
		return outputValue(A, idx1, xxJobErrCtrlFlgNm_A2);
	}

	/**
	 * set  XX_JOB_ERR_CTRL_FLG_NM_A2.
	 * @param data XX_JOB_ERR_CTRL_FLG_NM_A2Array
	 */
	public void setXxJobErrCtrlFlgNm_A2(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxJobErrCtrlFlgNm_A2, data[j]);
		}
	}

	/**
	 * get  _EZREQExtractionCount_A.
	 * @param idx1 List Number
	 * @return _EZREQExtractionCount_A
	 */
	public String getEzReqCountPerJob_A(int idx1) {
		return outputValue(A, idx1, ezReqCountPerJob_A);
	}

	/**
	 * set  _EZREQExtractionCount_A.
	 * @param data _EZREQExtractionCount_AArray
	 */
	public void setEzReqCountPerJob_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, ezReqCountPerJob_A, data[j]);
		}
	}

	/**
	 * get  ACTV_FLG_A.
	 * @param idx1 List Number
	 * @return ACTV_FLG_A
	 */
	public String getActvFlg_A(int idx1) {
		return outputValue(A, idx1, actvFlg_A);
	}

	/**
	 * set  ACTV_FLG_A.
	 * @param data ACTV_FLG_AArray
	 */
	public void setActvFlg_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, actvFlg_A, data[j]);
		}
	}

	/**
	 * get  _EZUpdateDateTime.
	 * @param idx1 List Number
	 * @return _EZUpdateDateTime
	 */
	public String getEzUpTime(int idx1) {
		return outputValue(A, idx1, ezUpTime);
	}

	/**
	 * set  _EZUpdateDateTime.
	 * @param data _EZUpdateDateTimeArray
	 */
	public void setEzUpTime(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, ezUpTime, data[j]);
		}
	}

	/**
	 * get  _EZUpTimeZone.
	 * @param idx1 List Number
	 * @return _EZUpTimeZone
	 */
	public String getEzUpTimeZone(int idx1) {
		return outputValue(A, idx1, ezUpTimeZone);
	}

	/**
	 * set  _EZUpTimeZone.
	 * @param data _EZUpTimeZoneArray
	 */
	public void setEzUpTimeZone(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, ezUpTimeZone, data[j]);
		}
	}

	/**
	 * get  XX_PAGE_SHOW_FROM_NUM.
	 * @return XX_PAGE_SHOW_FROM_NUM
	 */
	public String getXxPageShowFromNum() {
		return outputValue(xxPageShowFromNum);
	}

	/**
	 * set  XX_PAGE_SHOW_FROM_NUM.
	 * @param data XX_PAGE_SHOW_FROM_NUM
	 */
	public void setXxPageShowFromNum(String data) {
		inputValue(xxPageShowFromNum,data);
	}

	/**
	 * get  XX_PAGE_SHOW_TO_NUM.
	 * @return XX_PAGE_SHOW_TO_NUM
	 */
	public String getXxPageShowToNum() {
		return outputValue(xxPageShowToNum);
	}

	/**
	 * set  XX_PAGE_SHOW_TO_NUM.
	 * @param data XX_PAGE_SHOW_TO_NUM
	 */
	public void setXxPageShowToNum(String data) {
		inputValue(xxPageShowToNum,data);
	}

	/**
	 * get  XX_PAGE_SHOW_OF_NUM.
	 * @return XX_PAGE_SHOW_OF_NUM
	 */
	public String getXxPageShowOfNum() {
		return outputValue(xxPageShowOfNum);
	}

	/**
	 * set  XX_PAGE_SHOW_OF_NUM.
	 * @param data XX_PAGE_SHOW_OF_NUM
	 */
	public void setXxPageShowOfNum(String data) {
		inputValue(xxPageShowOfNum,data);
	}

	/**
	 * get  XX_SORT_TBL_NM.
	 * @return XX_SORT_TBL_NM
	 */
	public String getXxSortTblNm() {
		return outputValue(xxSortTblNm);
	}

	/**
	 * set  XX_SORT_TBL_NM.
	 * @param data XX_SORT_TBL_NM
	 */
	public void setXxSortTblNm(String data) {
		inputValue(xxSortTblNm,data);
	}

	/**
	 * get  XX_SORT_ITEM_NM.
	 * @return XX_SORT_ITEM_NM
	 */
	public String getXxSortItemNm() {
		return outputValue(xxSortItemNm);
	}

	/**
	 * set  XX_SORT_ITEM_NM.
	 * @param data XX_SORT_ITEM_NM
	 */
	public void setXxSortItemNm(String data) {
		inputValue(xxSortItemNm,data);
	}

	/**
	 * get  XX_SORT_ORD_BY_TXT.
	 * @return XX_SORT_ORD_BY_TXT
	 */
	public String getXxSortOrdByTxt() {
		return outputValue(xxSortOrdByTxt);
	}

	/**
	 * set  XX_SORT_ORD_BY_TXT.
	 * @param data XX_SORT_ORD_BY_TXT
	 */
	public void setXxSortOrdByTxt(String data) {
		inputValue(xxSortOrdByTxt,data);
	}

	/**
	 * get  _EZREQBusinessApplicationID_B.
	 * @return _EZREQBusinessApplicationID_B
	 */
	public String getEzReqBusinessID_B() {
		return outputValue(ezReqBusinessID_B);
	}

	/**
	 * set  _EZREQBusinessApplicationID_B.
	 * @param data _EZREQBusinessApplicationID_B
	 */
	public void setEzReqBusinessID_B(String data) {
		inputValue(ezReqBusinessID_B,data);
	}

	/**
	 * get  _EZREQBusinessApplicationName_B.
	 * @return _EZREQBusinessApplicationName_B
	 */
	public String getEzReqBusinessName_B() {
		return outputValue(ezReqBusinessName_B);
	}

	/**
	 * set  _EZREQBusinessApplicationName_B.
	 * @param data _EZREQBusinessApplicationName_B
	 */
	public void setEzReqBusinessName_B(String data) {
		inputValue(ezReqBusinessName_B,data);
	}

	/**
	 * get  _EZREQExecutionControlNetID_B.
	 * @return _EZREQExecutionControlNetID_B
	 */
	public String getEzReqJobCtlNetID_B() {
		return outputValue(ezReqJobCtlNetID_B);
	}

	/**
	 * set  _EZREQExecutionControlNetID_B.
	 * @param data _EZREQExecutionControlNetID_B
	 */
	public void setEzReqJobCtlNetID_B(String data) {
		inputValue(ezReqJobCtlNetID_B,data);
	}

	/**
	 * get  _EZREQJobConcurrency_B.
	 * @return _EZREQJobConcurrency_B
	 */
	public String getEzReqJobConcurrency_B() {
		return outputValue(ezReqJobConcurrency_B);
	}

	/**
	 * set  _EZREQJobConcurrency_B.
	 * @param data _EZREQJobConcurrency_B
	 */
	public void setEzReqJobConcurrency_B(String data) {
		inputValue(ezReqJobConcurrency_B,data);
	}

	/**
	 * get  _EZREQJobConcurrency_P1.
	 * @param idx1 Index Number
	 * @return _EZREQJobConcurrency_P1
	 */
	public String getEzReqJobConcurrency_P1(int idx1) {
	 	 return outputValue(ezReqJobConcurrency_P1, idx1);
	}

	/**
	 * get  XX_JOB_CNCR_CD_P1.
	 * @param idx1 Index Number
	 * @return XX_JOB_CNCR_CD_P1
	 */
	public String getXxJobCncrCd_P1(int idx1) {
	 	 return outputValue(xxJobCncrCd_P1, idx1);
	}

	/**
	 * get  _EZREQJobBlockingFlag_B.
	 * @return _EZREQJobBlockingFlag_B
	 */
	public String getEzReqJobStopFlag_B() {
		return outputValue(ezReqJobStopFlag_B);
	}

	/**
	 * set  _EZREQJobBlockingFlag_B.
	 * @param data _EZREQJobBlockingFlag_B
	 */
	public void setEzReqJobStopFlag_B(String data) {
		inputValue(ezReqJobStopFlag_B,data);
	}

	/**
	 * get  _EZREQJobBlockingFlag_P2.
	 * @param idx1 Index Number
	 * @return _EZREQJobBlockingFlag_P2
	 */
	public String getEzReqJobStopFlag_P2(int idx1) {
	 	 return outputValue(ezReqJobStopFlag_P2, idx1);
	}

	/**
	 * get  XX_JOB_BLOCK_FLG_NM_P2.
	 * @param idx1 Index Number
	 * @return XX_JOB_BLOCK_FLG_NM_P2
	 */
	public String getXxJobBlockFlgNm_P2(int idx1) {
	 	 return outputValue(xxJobBlockFlgNm_P2, idx1);
	}

	/**
	 * get  _EZREQExecutionControlFlaginError_B.
	 * @return _EZREQExecutionControlFlaginError_B
	 */
	public String getEzReqJobErrorCtlFlag_B() {
		return outputValue(ezReqJobErrorCtlFlag_B);
	}

	/**
	 * set  _EZREQExecutionControlFlaginError_B.
	 * @param data _EZREQExecutionControlFlaginError_B
	 */
	public void setEzReqJobErrorCtlFlag_B(String data) {
		inputValue(ezReqJobErrorCtlFlag_B,data);
	}

	/**
	 * get  _EZREQExecutionControlFlaginError_P3.
	 * @param idx1 Index Number
	 * @return _EZREQExecutionControlFlaginError_P3
	 */
	public String getEzReqJobErrorCtlFlag_P3(int idx1) {
	 	 return outputValue(ezReqJobErrorCtlFlag_P3, idx1);
	}

	/**
	 * get  XX_JOB_ERR_CTRL_FLG_NM_P3.
	 * @param idx1 Index Number
	 * @return XX_JOB_ERR_CTRL_FLG_NM_P3
	 */
	public String getXxJobErrCtrlFlgNm_P3(int idx1) {
	 	 return outputValue(xxJobErrCtrlFlgNm_P3, idx1);
	}

	/**
	 * get  _EZREQExtractionCount_B.
	 * @return _EZREQExtractionCount_B
	 */
	public String getEzReqCountPerJob_B() {
		return outputValue(ezReqCountPerJob_B);
	}

	/**
	 * set  _EZREQExtractionCount_B.
	 * @param data _EZREQExtractionCount_B
	 */
	public void setEzReqCountPerJob_B(String data) {
		inputValue(ezReqCountPerJob_B,data);
	}

	/**
	 * get  ACTV_FLG_B.
	 * @return ACTV_FLG_B
	 */
	public String getActvFlg_B() {
		return outputValue(actvFlg_B);
	}

	/**
	 * set  ACTV_FLG_B.
	 * @param data ACTV_FLG_B
	 */
	public void setActvFlg_B(String data) {
		inputValue(actvFlg_B,data);
	}

	/**
	 * get  XX_LAST_BTN_NM.
	 * @return XX_LAST_BTN_NM
	 */
	public String getXxLastBtnNm() {
		return outputValue(xxLastBtnNm);
	}

	/**
	 * set  XX_LAST_BTN_NM.
	 * @param data XX_LAST_BTN_NM
	 */
	public void setXxLastBtnNm(String data) {
		inputValue(xxLastBtnNm,data);
	}

}

