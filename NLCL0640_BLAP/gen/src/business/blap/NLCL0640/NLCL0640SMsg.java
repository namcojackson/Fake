//This file was automatically generated by Business Component Interface Definition Document (Define Business Application Global Area) and XLA200710010.
// Generated on    :20230511170929000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NLCL0640SMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NLCL0640;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NLCL0640 Business Application Global Area Message class.
 * @author
 * @version XLA200710010
 */
public class NLCL0640SMsg extends EZDSMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** TECH_TOC_CD*/
	public final EZDSStringItem              techTocCd;

    /** TECH_NM*/
	public final EZDSStringItem              techNm;

    /** PHYS_INVTY_DT*/
	public final EZDSDateItem              physInvtyDt;

    /** PHYS_INVTY_CTRL_NM*/
	public final EZDSStringItem              physInvtyCtrlNm;

    /** PHYS_INVTY_NUM*/
	public final EZDSStringItem              physInvtyNum;

    /** PHYS_INVTY_CNT_STS_CD*/
	public final EZDSStringItem              physInvtyCntStsCd;

    /** PHYS_INVTY_STS_DESC_TXT_01*/
	public final EZDSStringItem              physInvtyStsDescTxt_01;

    /** RTL_WH_CD*/
	public final EZDSStringItem              rtlWhCd;

    /** RTL_WH_NM*/
	public final EZDSStringItem              rtlWhNm;

    /** TECH_LOC_CD_PD*/
	public final EZDSStringItemArray              techLocCd_PD;

    /** LOC_NM_PD*/
	public final EZDSStringItemArray              locNm_PD;

    /** TECH_LOC_CD_SL*/
	public final EZDSStringItem              techLocCd_SL;

    /** MDSE_CD*/
	public final EZDSStringItem              mdseCd;

    /** MDSE_DESC_SHORT_TXT*/
	public final EZDSStringItem              mdseDescShortTxt;

    /** CNT_INP_QTY*/
	public final EZDSBigDecimalItem              cntInpQty;

    /** SER_NUM*/
	public final EZDSStringItem              serNum;

    /** RCV_SER_TAKE_FLG*/
	public final EZDSStringItem              rcvSerTakeFlg;

    /** T*/
	public final business.blap.NLCL0640.NLCL0640_TSMsgArray              T;

    /** XX_ROW_NUM*/
	public final EZDSBigDecimalItem              xxRowNum;

    /** A*/
	public final business.blap.NLCL0640.NLCL0640_ASMsgArray              A;

    /** B*/
	public final business.blap.NLCL0640.NLCL0640_BSMsgArray              B;


	/**
	 * NLCL0640SMsg is constructor.
	 * The initialization when the instance of NLCL0640SMsg is generated.
	 */
	public NLCL0640SMsg() {
		this(false, -1);
	}

	/**
	 * NLCL0640SMsg is constructor.
	 * The initialization when the instance of NLCL0640SMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NLCL0640SMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		techTocCd = (EZDSStringItem)newItem("techTocCd");
		techNm = (EZDSStringItem)newItem("techNm");
		physInvtyDt = (EZDSDateItem)newItem("physInvtyDt");
		physInvtyCtrlNm = (EZDSStringItem)newItem("physInvtyCtrlNm");
		physInvtyNum = (EZDSStringItem)newItem("physInvtyNum");
		physInvtyCntStsCd = (EZDSStringItem)newItem("physInvtyCntStsCd");
		physInvtyStsDescTxt_01 = (EZDSStringItem)newItem("physInvtyStsDescTxt_01");
		rtlWhCd = (EZDSStringItem)newItem("rtlWhCd");
		rtlWhNm = (EZDSStringItem)newItem("rtlWhNm");
		techLocCd_PD = (EZDSStringItemArray)newItemArray("techLocCd_PD");
		locNm_PD = (EZDSStringItemArray)newItemArray("locNm_PD");
		techLocCd_SL = (EZDSStringItem)newItem("techLocCd_SL");
		mdseCd = (EZDSStringItem)newItem("mdseCd");
		mdseDescShortTxt = (EZDSStringItem)newItem("mdseDescShortTxt");
		cntInpQty = (EZDSBigDecimalItem)newItem("cntInpQty");
		serNum = (EZDSStringItem)newItem("serNum");
		rcvSerTakeFlg = (EZDSStringItem)newItem("rcvSerTakeFlg");
		T = (business.blap.NLCL0640.NLCL0640_TSMsgArray)newMsgArray("T");
		xxRowNum = (EZDSBigDecimalItem)newItem("xxRowNum");
		A = (business.blap.NLCL0640.NLCL0640_ASMsgArray)newMsgArray("A");
		B = (business.blap.NLCL0640.NLCL0640_BSMsgArray)newMsgArray("B");
	}

	/**
	 * get the type of array which is stored
	 * @return NLCL0640SMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NLCL0640SMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"techTocCd", "techTocCd", null, null, TYPE_HANKAKUEISU, "8", null},
	{"techNm", "techNm", null, null, TYPE_HANKAKUEISU, "45", null},
	{"physInvtyDt", "physInvtyDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"physInvtyCtrlNm", "physInvtyCtrlNm", null, null, TYPE_HANKAKUEISU, "100", null},
	{"physInvtyNum", "physInvtyNum", null, null, TYPE_HANKAKUEISU, "15", null},
	{"physInvtyCntStsCd", "physInvtyCntStsCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"physInvtyStsDescTxt_01", "physInvtyStsDescTxt_01", "01", null, TYPE_HANKAKUEISU, "50", null},
	{"rtlWhCd", "rtlWhCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"rtlWhNm", "rtlWhNm", null, null, TYPE_HANKAKUEISU, "30", null},
	{"techLocCd_PD", "techLocCd_PD", "PD", "99", TYPE_HANKAKUEISU, "20", null},
	{"locNm_PD", "locNm_PD", "PD", "99", TYPE_HANKAKUEISU, "60", null},
	{"techLocCd_SL", "techLocCd_SL", "SL", null, TYPE_HANKAKUEISU, "20", null},
	{"mdseCd", "mdseCd", null, null, TYPE_HANKAKUEISU, "16", null},
	{"mdseDescShortTxt", "mdseDescShortTxt", null, null, TYPE_HANKAKUEISU, "250", null},
	{"cntInpQty", "cntInpQty", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"serNum", "serNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"rcvSerTakeFlg", "rcvSerTakeFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"T", "T", null, "2000", "business.blap.NLCL0640.NLCL0640_TSMsgArray", null, null},
	
	{"xxRowNum", "xxRowNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"A", "A", null, "2000", "business.blap.NLCL0640.NLCL0640_ASMsgArray", null, null},
	
	{"B", "B", null, "2000", "business.blap.NLCL0640.NLCL0640_BSMsgArray", null, null},
	
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"TECH_TOC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//techTocCd
        {"TECH_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//techNm
        {"PHYS_INVTY_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//physInvtyDt
        {"PHYS_INVTY_CTRL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//physInvtyCtrlNm
        {"PHYS_INVTY_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//physInvtyNum
        {"PHYS_INVTY_CNT_STS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//physInvtyCntStsCd
        {"PHYS_INVTY_STS_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//physInvtyStsDescTxt_01
        {"RTL_WH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlWhCd
        {"RTL_WH_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlWhNm
        {"TECH_LOC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//techLocCd_PD
        {"LOC_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//locNm_PD
        {"TECH_LOC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//techLocCd_SL
        {"MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd
        {"MDSE_DESC_SHORT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseDescShortTxt
        {"CNT_INP_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cntInpQty
        {"SER_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNum
        {"RCV_SER_TAKE_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rcvSerTakeFlg
		null,	//T
        {"XX_ROW_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRowNum
		null,	//A
		null,	//B
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

