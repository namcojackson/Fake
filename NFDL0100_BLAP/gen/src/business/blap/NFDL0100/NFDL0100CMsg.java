//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20230920092007000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NFDL0100CMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NFDL0100;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NFDL0100 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NFDL0100CMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** SCR_INV_EML_TS*/
	public final EZDCStringItem              scrInvEmlTs;

    /** SCR_INV_EML_ADDR*/
	public final EZDCStringItem              scrInvEmlAddr;

    /** SCR_INV_EML_SUBJ_TXT*/
	public final EZDCStringItem              scrInvEmlSubjTxt;

    /** SCR_INV_EML_CMNT_TXT*/
	public final EZDCStringItem              scrInvEmlCmntTxt;

    /** XX_SFX_KEY_TXT*/
	public final EZDCStringItem              xxSfxKeyTxt;

    /** XX_DPLY_CTRL_FLG_EM*/
	public final EZDCStringItem              xxDplyCtrlFlg_EM;

    /** XX_FILE_DATA*/
	public final EZDCMimeSourceItem              xxFileData;

    /** XX_COMN_COL_ORD_TXT*/
	public final EZDCStringItem              xxComnColOrdTxt;

    /** BILL_TO_CUST_ACCT_CD_H*/
	public final EZDCStringItem              billToCustAcctCd_H;

    /** DS_ACCT_NM_H*/
	public final EZDCStringItem              dsAcctNm_H;

    /** BILL_TO_CUST_CD_H*/
	public final EZDCStringItem              billToCustCd_H;

    /** LOC_NM_H*/
	public final EZDCStringItem              locNm_H;

    /** CUST_ISS_PO_NUM_H1*/
	public final EZDCStringItem              custIssPoNum_H1;

    /** AR_CUST_REF_NUM_H1*/
	public final EZDCStringItem              arCustRefNum_H1;

    /** BILL_TO_CUST_CD_H1*/
	public final EZDCStringItem              billToCustCd_H1;

    /** AR_TRX_DT_H1*/
	public final EZDCDateItem              arTrxDt_H1;

    /** AR_TRX_DT_H2*/
	public final EZDCDateItem              arTrxDt_H2;

    /** XX_DPLY_TRX_NUM_TXT_H1*/
	public final EZDCStringItem              xxDplyTrxNumTxt_H1;

    /** XX_CHK_BOX_H1*/
	public final EZDCStringItem              xxChkBox_H1;

    /** XX_CHK_BOX_H2*/
	public final EZDCStringItem              xxChkBox_H2;

    /** XX_CHK_BOX_H3*/
	public final EZDCStringItem              xxChkBox_H3;

    /** SER_NUM_H1*/
	public final EZDCStringItem              serNum_H1;

    /** XX_PAGE_SHOW_FROM_NUM_A*/
	public final EZDCBigDecimalItem              xxPageShowFromNum_A;

    /** XX_PAGE_SHOW_TO_NUM_A*/
	public final EZDCBigDecimalItem              xxPageShowToNum_A;

    /** XX_PAGE_SHOW_OF_NUM_A*/
	public final EZDCBigDecimalItem              xxPageShowOfNum_A;

    /** XX_PAGE_SHOW_CUR_NUM_A*/
	public final EZDCBigDecimalItem              xxPageShowCurNum_A;

    /** XX_PAGE_SHOW_TOT_NUM_A*/
	public final EZDCBigDecimalItem              xxPageShowTotNum_A;

    /** XX_SORT_TBL_NM*/
	public final EZDCStringItem              xxSortTblNm;

    /** XX_SORT_ITEM_NM*/
	public final EZDCStringItem              xxSortItemNm;

    /** XX_SORT_ORD_BY_TXT*/
	public final EZDCStringItem              xxSortOrdByTxt;

    /** A*/
	public final business.blap.NFDL0100.NFDL0100_ACMsgArray              A;

    /** B*/
	public final business.blap.NFDL0100.NFDL0100_BCMsgArray              B;


	/**
	 * NFDL0100CMsg is constructor.
	 * The initialization when the instance of NFDL0100CMsg is generated.
	 */
	public NFDL0100CMsg() {
		this(false, -1);
	}

	/**
	 * NFDL0100CMsg is constructor.
	 * The initialization when the instance of NFDL0100CMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NFDL0100CMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		scrInvEmlTs = (EZDCStringItem)newItem("scrInvEmlTs");
		scrInvEmlAddr = (EZDCStringItem)newItem("scrInvEmlAddr");
		scrInvEmlSubjTxt = (EZDCStringItem)newItem("scrInvEmlSubjTxt");
		scrInvEmlCmntTxt = (EZDCStringItem)newItem("scrInvEmlCmntTxt");
		xxSfxKeyTxt = (EZDCStringItem)newItem("xxSfxKeyTxt");
		xxDplyCtrlFlg_EM = (EZDCStringItem)newItem("xxDplyCtrlFlg_EM");
		xxFileData = (EZDCMimeSourceItem)newItem("xxFileData");
		xxComnColOrdTxt = (EZDCStringItem)newItem("xxComnColOrdTxt");
		billToCustAcctCd_H = (EZDCStringItem)newItem("billToCustAcctCd_H");
		dsAcctNm_H = (EZDCStringItem)newItem("dsAcctNm_H");
		billToCustCd_H = (EZDCStringItem)newItem("billToCustCd_H");
		locNm_H = (EZDCStringItem)newItem("locNm_H");
		custIssPoNum_H1 = (EZDCStringItem)newItem("custIssPoNum_H1");
		arCustRefNum_H1 = (EZDCStringItem)newItem("arCustRefNum_H1");
		billToCustCd_H1 = (EZDCStringItem)newItem("billToCustCd_H1");
		arTrxDt_H1 = (EZDCDateItem)newItem("arTrxDt_H1");
		arTrxDt_H2 = (EZDCDateItem)newItem("arTrxDt_H2");
		xxDplyTrxNumTxt_H1 = (EZDCStringItem)newItem("xxDplyTrxNumTxt_H1");
		xxChkBox_H1 = (EZDCStringItem)newItem("xxChkBox_H1");
		xxChkBox_H2 = (EZDCStringItem)newItem("xxChkBox_H2");
		xxChkBox_H3 = (EZDCStringItem)newItem("xxChkBox_H3");
		serNum_H1 = (EZDCStringItem)newItem("serNum_H1");
		xxPageShowFromNum_A = (EZDCBigDecimalItem)newItem("xxPageShowFromNum_A");
		xxPageShowToNum_A = (EZDCBigDecimalItem)newItem("xxPageShowToNum_A");
		xxPageShowOfNum_A = (EZDCBigDecimalItem)newItem("xxPageShowOfNum_A");
		xxPageShowCurNum_A = (EZDCBigDecimalItem)newItem("xxPageShowCurNum_A");
		xxPageShowTotNum_A = (EZDCBigDecimalItem)newItem("xxPageShowTotNum_A");
		xxSortTblNm = (EZDCStringItem)newItem("xxSortTblNm");
		xxSortItemNm = (EZDCStringItem)newItem("xxSortItemNm");
		xxSortOrdByTxt = (EZDCStringItem)newItem("xxSortOrdByTxt");
		A = (business.blap.NFDL0100.NFDL0100_ACMsgArray)newMsgArray("A");
		B = (business.blap.NFDL0100.NFDL0100_BCMsgArray)newMsgArray("B");
	}

	/**
	 * get the type of array which is stored
	 * @return NFDL0100CMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NFDL0100CMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"scrInvEmlTs", "scrInvEmlTs", null, null, TYPE_HANKAKUSUJI, "17", null},
	{"scrInvEmlAddr", "scrInvEmlAddr", null, null, TYPE_HANKAKUEISU, "320", null},
	{"scrInvEmlSubjTxt", "scrInvEmlSubjTxt", null, null, TYPE_HANKAKUEISU, "240", null},
	{"scrInvEmlCmntTxt", "scrInvEmlCmntTxt", null, null, TYPE_HANKAKUEISU, "2000", null},
	{"xxSfxKeyTxt", "xxSfxKeyTxt", null, null, TYPE_HANKAKUEISU, "30", null},
	{"xxDplyCtrlFlg_EM", "xxDplyCtrlFlg_EM", "EM", null, TYPE_HANKAKUEISU, "1", null},
	{"xxFileData", "xxFileData", null, null, TYPE_UPLOAD, null, null},
	{"xxComnColOrdTxt", "xxComnColOrdTxt", null, null, TYPE_HANKAKUEISU, "2000", null},
	{"billToCustAcctCd_H", "billToCustAcctCd_H", "H", null, TYPE_HANKAKUEISU, "20", null},
	{"dsAcctNm_H", "dsAcctNm_H", "H", null, TYPE_HANKAKUEISU, "360", null},
	{"billToCustCd_H", "billToCustCd_H", "H", null, TYPE_HANKAKUEISU, "20", null},
	{"locNm_H", "locNm_H", "H", null, TYPE_HANKAKUEISU, "60", null},
	{"custIssPoNum_H1", "custIssPoNum_H1", "H1", null, TYPE_HANKAKUEISU, "35", null},
	{"arCustRefNum_H1", "arCustRefNum_H1", "H1", null, TYPE_HANKAKUEISU, "35", null},
	{"billToCustCd_H1", "billToCustCd_H1", "H1", null, TYPE_HANKAKUEISU, "20", null},
	{"arTrxDt_H1", "arTrxDt_H1", "H1", null, TYPE_NENTSUKIHI, "8", null},
	{"arTrxDt_H2", "arTrxDt_H2", "H2", null, TYPE_NENTSUKIHI, "8", null},
	{"xxDplyTrxNumTxt_H1", "xxDplyTrxNumTxt_H1", "H1", null, TYPE_HANKAKUEISU, "15", null},
	{"xxChkBox_H1", "xxChkBox_H1", "H1", null, TYPE_HANKAKUEIJI, "1", null},
	{"xxChkBox_H2", "xxChkBox_H2", "H2", null, TYPE_HANKAKUEIJI, "1", null},
	{"xxChkBox_H3", "xxChkBox_H3", "H3", null, TYPE_HANKAKUEIJI, "1", null},
	{"serNum_H1", "serNum_H1", "H1", null, TYPE_HANKAKUEISU, "30", null},
	{"xxPageShowFromNum_A", "xxPageShowFromNum_A", "A", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowToNum_A", "xxPageShowToNum_A", "A", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowOfNum_A", "xxPageShowOfNum_A", "A", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowCurNum_A", "xxPageShowCurNum_A", "A", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowTotNum_A", "xxPageShowTotNum_A", "A", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxSortTblNm", "xxSortTblNm", null, null, TYPE_HANKAKUEISU, "1", null},
	{"xxSortItemNm", "xxSortItemNm", null, null, TYPE_HANKAKUEISU, "50", null},
	{"xxSortOrdByTxt", "xxSortOrdByTxt", null, null, TYPE_HANKAKUEISU, "4", null},
	{"A", "A", null, "40", "business.blap.NFDL0100.NFDL0100_ACMsgArray", null, null},
	
	{"B", "B", null, "200", "business.blap.NFDL0100.NFDL0100_BCMsgArray", null, null},
	
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"SCR_INV_EML_TS",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//scrInvEmlTs
        {"SCR_INV_EML_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//scrInvEmlAddr
        {"SCR_INV_EML_SUBJ_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//scrInvEmlSubjTxt
        {"SCR_INV_EML_CMNT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//scrInvEmlCmntTxt
        {"XX_SFX_KEY_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxSfxKeyTxt
        {"XX_DPLY_CTRL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDplyCtrlFlg_EM
        {"XX_FILE_DATA",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxFileData
        {"XX_COMN_COL_ORD_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxComnColOrdTxt
        {"BILL_TO_CUST_ACCT_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//billToCustAcctCd_H
        {"DS_ACCT_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctNm_H
        {"BILL_TO_CUST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//billToCustCd_H
        {"LOC_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//locNm_H
        {"CUST_ISS_PO_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//custIssPoNum_H1
        {"AR_CUST_REF_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//arCustRefNum_H1
        {"BILL_TO_CUST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//billToCustCd_H1
        {"AR_TRX_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//arTrxDt_H1
        {"AR_TRX_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//arTrxDt_H2
        {"XX_DPLY_TRX_NUM_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDplyTrxNumTxt_H1
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_H1
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_H2
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_H3
        {"SER_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNum_H1
        {"XX_PAGE_SHOW_FROM_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowFromNum_A
        {"XX_PAGE_SHOW_TO_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowToNum_A
        {"XX_PAGE_SHOW_OF_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowOfNum_A
        {"XX_PAGE_SHOW_CUR_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowCurNum_A
        {"XX_PAGE_SHOW_TOT_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowTotNum_A
        {"XX_SORT_TBL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxSortTblNm
        {"XX_SORT_ITEM_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxSortItemNm
        {"XX_SORT_ORD_BY_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxSortOrdByTxt
		null,	//A
		null,	//B
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

