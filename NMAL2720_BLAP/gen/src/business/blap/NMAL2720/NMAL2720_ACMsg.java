//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20160706111939000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NMAL2720_ACMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NMAL2720;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NMAL2720 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NMAL2720_ACMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_CHK_BOX_A1*/
	public final EZDCStringItem              xxChkBox_A1;

    /** ORG_CD_A1*/
	public final EZDCStringItem              orgCd_A1;

    /** ORG_NM_A1*/
	public final EZDCStringItem              orgNm_A1;

    /** ORG_DESC_TXT_A1*/
	public final EZDCStringItem              orgDescTxt_A1;

    /** BIZ_AREA_ORG_CD_A1*/
	public final EZDCStringItem              bizAreaOrgCd_A1;

    /** BIZ_AREA_ORG_DESC_TXT_A1*/
	public final EZDCStringItem              bizAreaOrgDescTxt_A1;

    /** LINE_BIZ_TP_DESC_TXT_A1*/
	public final EZDCStringItem              lineBizTpDescTxt_A1;

    /** XX_PSN_NM_A1*/
	public final EZDCStringItem              xxPsnNm_A1;

    /** PSN_NUM_A1*/
	public final EZDCStringItem              psnNum_A1;

    /** ORG_FUNC_ROLE_TP_DESC_TXT_A1*/
	public final EZDCStringItem              orgFuncRoleTpDescTxt_A1;

    /** EFF_FROM_DT_A1*/
	public final EZDCDateItem              effFromDt_A1;

    /** EFF_THRU_DT_A1*/
	public final EZDCDateItem              effThruDt_A1;

    /** TOC_CD_A1*/
	public final EZDCStringItem              tocCd_A1;


	/**
	 * NMAL2720_ACMsg is constructor.
	 * The initialization when the instance of NMAL2720_ACMsg is generated.
	 */
	public NMAL2720_ACMsg() {
		this(false, -1);
	}

	/**
	 * NMAL2720_ACMsg is constructor.
	 * The initialization when the instance of NMAL2720_ACMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NMAL2720_ACMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxChkBox_A1 = (EZDCStringItem)newItem("xxChkBox_A1");
		orgCd_A1 = (EZDCStringItem)newItem("orgCd_A1");
		orgNm_A1 = (EZDCStringItem)newItem("orgNm_A1");
		orgDescTxt_A1 = (EZDCStringItem)newItem("orgDescTxt_A1");
		bizAreaOrgCd_A1 = (EZDCStringItem)newItem("bizAreaOrgCd_A1");
		bizAreaOrgDescTxt_A1 = (EZDCStringItem)newItem("bizAreaOrgDescTxt_A1");
		lineBizTpDescTxt_A1 = (EZDCStringItem)newItem("lineBizTpDescTxt_A1");
		xxPsnNm_A1 = (EZDCStringItem)newItem("xxPsnNm_A1");
		psnNum_A1 = (EZDCStringItem)newItem("psnNum_A1");
		orgFuncRoleTpDescTxt_A1 = (EZDCStringItem)newItem("orgFuncRoleTpDescTxt_A1");
		effFromDt_A1 = (EZDCDateItem)newItem("effFromDt_A1");
		effThruDt_A1 = (EZDCDateItem)newItem("effThruDt_A1");
		tocCd_A1 = (EZDCStringItem)newItem("tocCd_A1");
	}

	/**
	 * get the type of array which is stored
	 * @return NMAL2720_ACMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NMAL2720_ACMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxChkBox_A1", "xxChkBox_A1", "A1", null, TYPE_HANKAKUEIJI, "1", null},
	{"orgCd_A1", "orgCd_A1", "A1", null, TYPE_HANKAKUEISU, "8", null},
	{"orgNm_A1", "orgNm_A1", "A1", null, TYPE_HANKAKUEISU, "50", null},
	{"orgDescTxt_A1", "orgDescTxt_A1", "A1", null, TYPE_HANKAKUEISU, "50", null},
	{"bizAreaOrgCd_A1", "bizAreaOrgCd_A1", "A1", null, TYPE_HANKAKUEISU, "8", null},
	{"bizAreaOrgDescTxt_A1", "bizAreaOrgDescTxt_A1", "A1", null, TYPE_HANKAKUEISU, "50", null},
	{"lineBizTpDescTxt_A1", "lineBizTpDescTxt_A1", "A1", null, TYPE_HANKAKUEISU, "50", null},
	{"xxPsnNm_A1", "xxPsnNm_A1", "A1", null, TYPE_HANKAKUEISU, "62", null},
	{"psnNum_A1", "psnNum_A1", "A1", null, TYPE_HANKAKUEISU, "50", null},
	{"orgFuncRoleTpDescTxt_A1", "orgFuncRoleTpDescTxt_A1", "A1", null, TYPE_HANKAKUEISU, "50", null},
	{"effFromDt_A1", "effFromDt_A1", "A1", null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt_A1", "effThruDt_A1", "A1", null, TYPE_NENTSUKIHI, "8", null},
	{"tocCd_A1", "tocCd_A1", "A1", null, TYPE_HANKAKUEISU, "8", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_A1
        {"ORG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//orgCd_A1
        {"ORG_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//orgNm_A1
        {"ORG_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//orgDescTxt_A1
        {"BIZ_AREA_ORG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bizAreaOrgCd_A1
        {"BIZ_AREA_ORG_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bizAreaOrgDescTxt_A1
        {"LINE_BIZ_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//lineBizTpDescTxt_A1
        {"XX_PSN_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPsnNm_A1
        {"PSN_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//psnNum_A1
        {"ORG_FUNC_ROLE_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//orgFuncRoleTpDescTxt_A1
        {"EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effFromDt_A1
        {"EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effThruDt_A1
        {"TOC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//tocCd_A1
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

