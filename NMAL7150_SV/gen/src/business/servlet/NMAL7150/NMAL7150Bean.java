// This file was automatically generated by Screen Field Definition Document and XLA200710010
// Generated on    :20160518152430000
// Velocity Macro:svltdatabean.vm V200604010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NMAL7150Bean.java Copyright FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */

package  business.servlet.NMAL7150;

import com.fujitsu.uji.util.MimeSource;
import parts.servletcommon.EZDCommonDataBean;

/*
 * NMAL7150 is data bean class.
 */
public class NMAL7150Bean extends EZDCommonDataBean {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	//Constant Definition Area
	/** EFF_FROM_DT_TD*/
	public static final String effFromDt_TD = "effFromDt_TD";

	/** EFF_THRU_DT_TD*/
	public static final String effThruDt_TD = "effThruDt_TD";

	/** XX_CHK_BOX_E*/
	public static final String xxChkBox_E = "xxChkBox_E";

	/** XX_CHK_BOX_R*/
	public static final String xxChkBox_R = "xxChkBox_R";

	/** XX_CHK_BOX_D*/
	public static final String xxChkBox_D = "xxChkBox_D";

	/** XX_PAGE_SHOW_FROM_NUM*/
	public static final String xxPageShowFromNum = "xxPageShowFromNum";

	/** XX_PAGE_SHOW_TO_NUM*/
	public static final String xxPageShowToNum = "xxPageShowToNum";

	/** XX_PAGE_SHOW_OF_NUM*/
	public static final String xxPageShowOfNum = "xxPageShowOfNum";

	/** XX_FILE_DATA*/
	public static final String xxFileData = "xxFileData";

	/** A*/
	public static final String A = "A";

	/** CSMP_CONTR_INTFC_PK_A*/
	public static final String csmpContrIntfcPk_A = "csmpContrIntfcPk_A";

	/** XX_CHK_BOX_A*/
	public static final String xxChkBox_A = "xxChkBox_A";

	/** XX_DT_10_DT_A*/
	public static final String xxDt10Dt_A = "xxDt10Dt_A";

	/** CSMP_PROC_STS_CD_A*/
	public static final String csmpProcStsCd_A = "csmpProcStsCd_A";

	/** XX_SCR_ITEM_54_TXT_A*/
	public static final String xxScrItem54Txt_A = "xxScrItem54Txt_A";

	/** CSMP_ERR_MSG_TXT_A*/
	public static final String csmpErrMsgTxt_A = "csmpErrMsgTxt_A";

	/** DLR_REF_NUM_A*/
	public static final String dlrRefNum_A = "dlrRefNum_A";

	/** CSMP_TRX_STS_CD_A*/
	public static final String csmpTrxStsCd_A = "csmpTrxStsCd_A";

	/** RTL_DLR_CD_A*/
	public static final String rtlDlrCd_A = "rtlDlrCd_A";

	/** DS_ACCT_NM_A*/
	public static final String dsAcctNm_A = "dsAcctNm_A";

	/** XX_SCR_ITEM_40_TXT_A*/
	public static final String xxScrItem40Txt_A = "xxScrItem40Txt_A";

	/** EFF_FROM_DT_A*/
	public static final String effFromDt_A = "effFromDt_A";

	/** EFF_THRU_DT_A*/
	public static final String effThruDt_A = "effThruDt_A";

	/** CR_LIST_TXT_A*/
	public static final String crListTxt_A = "crListTxt_A";

	/** CR_LIST_GNRN_NUM_A*/
	public static final String crListGnrnNum_A = "crListGnrnNum_A";

	/** CSMP_CONTR_STS_CD_A*/
	public static final String csmpContrStsCd_A = "csmpContrStsCd_A";

	/** CSMP_RG_CD_A*/
	public static final String csmpRgCd_A = "csmpRgCd_A";

	/** CSMP_CATG_CD_A*/
	public static final String csmpCatgCd_A = "csmpCatgCd_A";

	/** VLD_FROM_DT_A*/
	public static final String vldFromDt_A = "vldFromDt_A";

	/** PREV_CSMP_NUM_A*/
	public static final String prevCsmpNum_A = "prevCsmpNum_A";

	/** PREV_USR_TXT_A*/
	public static final String prevUsrTxt_A = "prevUsrTxt_A";

	/** _EZUpdateDateTime_A*/
	public static final String ezUpTime_A = "ezUpTime_A";

	/** _EZUpTimeZone_A*/
	public static final String ezUpTimeZone_A = "ezUpTimeZone_A";

	/**
	 * Method name:NMAL7150 is Bean's Constructor.
	 * <dd>method explanation:Initialization when instance of NMAL7150Bean is generated
	 * <dd>Remarks:
	 */
	public NMAL7150Bean() {
		super("business.servlet.NMAL7150.NMAL7150BMsg");
	}

	/**
	 * get  EFF_FROM_DT_TD.
	 * @return EFF_FROM_DT_TD
	 */
	public String getEffFromDt_TD() {
		return outputValue(effFromDt_TD, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  EFF_FROM_DT_TD.
	 * @param data EFF_FROM_DT_TD
	 */
	public void setEffFromDt_TD(String data) {
		inputValue(effFromDt_TD, data, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * get  EFF_THRU_DT_TD.
	 * @return EFF_THRU_DT_TD
	 */
	public String getEffThruDt_TD() {
		return outputValue(effThruDt_TD, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  EFF_THRU_DT_TD.
	 * @param data EFF_THRU_DT_TD
	 */
	public void setEffThruDt_TD(String data) {
		inputValue(effThruDt_TD, data, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * get  XX_CHK_BOX_E.
	 * @return XX_CHK_BOX_E
	 */
	public String getXxChkBox_E() {
		return outputValue(xxChkBox_E);
	}

	/**
	 * set  XX_CHK_BOX_E.
	 * @param data XX_CHK_BOX_E
	 */
	public void setXxChkBox_E(String data) {
		inputValue(xxChkBox_E,data);
	}

	/**
	 * get  XX_CHK_BOX_R.
	 * @return XX_CHK_BOX_R
	 */
	public String getXxChkBox_R() {
		return outputValue(xxChkBox_R);
	}

	/**
	 * set  XX_CHK_BOX_R.
	 * @param data XX_CHK_BOX_R
	 */
	public void setXxChkBox_R(String data) {
		inputValue(xxChkBox_R,data);
	}

	/**
	 * get  XX_CHK_BOX_D.
	 * @return XX_CHK_BOX_D
	 */
	public String getXxChkBox_D() {
		return outputValue(xxChkBox_D);
	}

	/**
	 * set  XX_CHK_BOX_D.
	 * @param data XX_CHK_BOX_D
	 */
	public void setXxChkBox_D(String data) {
		inputValue(xxChkBox_D,data);
	}

	/**
	 * get  XX_PAGE_SHOW_FROM_NUM.
	 * @return XX_PAGE_SHOW_FROM_NUM
	 */
	public String getXxPageShowFromNum() {
		return outputValue(xxPageShowFromNum);
	}

	/**
	 * set  XX_PAGE_SHOW_FROM_NUM.
	 * @param data XX_PAGE_SHOW_FROM_NUM
	 */
	public void setXxPageShowFromNum(String data) {
		inputValue(xxPageShowFromNum,data);
	}

	/**
	 * get  XX_PAGE_SHOW_TO_NUM.
	 * @return XX_PAGE_SHOW_TO_NUM
	 */
	public String getXxPageShowToNum() {
		return outputValue(xxPageShowToNum);
	}

	/**
	 * set  XX_PAGE_SHOW_TO_NUM.
	 * @param data XX_PAGE_SHOW_TO_NUM
	 */
	public void setXxPageShowToNum(String data) {
		inputValue(xxPageShowToNum,data);
	}

	/**
	 * get  XX_PAGE_SHOW_OF_NUM.
	 * @return XX_PAGE_SHOW_OF_NUM
	 */
	public String getXxPageShowOfNum() {
		return outputValue(xxPageShowOfNum);
	}

	/**
	 * set  XX_PAGE_SHOW_OF_NUM.
	 * @param data XX_PAGE_SHOW_OF_NUM
	 */
	public void setXxPageShowOfNum(String data) {
		inputValue(xxPageShowOfNum,data);
	}

	/**
	 * set  XX_FILE_DATA.
	 * @param data XX_FILE_DATA
	 */
	public void setXxFileData(MimeSource data) {
		inputValue(xxFileData, data);
	}

	/**
	 * get  CSMP_CONTR_INTFC_PK_A.
	 * @param idx1 List Number
	 * @return CSMP_CONTR_INTFC_PK_A
	 */
	public String getCsmpContrIntfcPk_A(int idx1) {
		return outputValue(A, idx1, csmpContrIntfcPk_A);
	}

	/**
	 * set  CSMP_CONTR_INTFC_PK_A.
	 * @param data CSMP_CONTR_INTFC_PK_AArray
	 */
	public void setCsmpContrIntfcPk_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, csmpContrIntfcPk_A, data[j]);
		}
	}

	/**
	 * get  XX_CHK_BOX_A.
	 * @param idx1 List Number
	 * @return XX_CHK_BOX_A
	 */
	public String getXxChkBox_A(int idx1) {
		return outputValue(A, idx1, xxChkBox_A);
	}

	/**
	 * set  XX_CHK_BOX_A.
	 * @param data XX_CHK_BOX_AArray
	 */
	public void setXxChkBox_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxChkBox_A, data[j]);
		}
	}

	/**
	 * get  XX_DT_10_DT_A.
	 * @param idx1 List Number
	 * @return XX_DT_10_DT_A
	 */
	public String getXxDt10Dt_A(int idx1) {
		return outputValue(A, idx1, xxDt10Dt_A, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  XX_DT_10_DT_A.
	 * @param data XX_DT_10_DT_AArray
	 */
	public void setXxDt10Dt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i,  xxDt10Dt_A, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  CSMP_PROC_STS_CD_A.
	 * @param idx1 List Number
	 * @return CSMP_PROC_STS_CD_A
	 */
	public String getCsmpProcStsCd_A(int idx1) {
		return outputValue(A, idx1, csmpProcStsCd_A);
	}

	/**
	 * set  CSMP_PROC_STS_CD_A.
	 * @param data CSMP_PROC_STS_CD_AArray
	 */
	public void setCsmpProcStsCd_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, csmpProcStsCd_A, data[j]);
		}
	}

	/**
	 * get  XX_SCR_ITEM_54_TXT_A.
	 * @param idx1 List Number
	 * @return XX_SCR_ITEM_54_TXT_A
	 */
	public String getXxScrItem54Txt_A(int idx1) {
		return outputValue(A, idx1, xxScrItem54Txt_A);
	}

	/**
	 * set  XX_SCR_ITEM_54_TXT_A.
	 * @param data XX_SCR_ITEM_54_TXT_AArray
	 */
	public void setXxScrItem54Txt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxScrItem54Txt_A, data[j]);
		}
	}

	/**
	 * get  CSMP_ERR_MSG_TXT_A.
	 * @param idx1 List Number
	 * @return CSMP_ERR_MSG_TXT_A
	 */
	public String getCsmpErrMsgTxt_A(int idx1) {
		return outputValue(A, idx1, csmpErrMsgTxt_A);
	}

	/**
	 * set  CSMP_ERR_MSG_TXT_A.
	 * @param data CSMP_ERR_MSG_TXT_AArray
	 */
	public void setCsmpErrMsgTxt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, csmpErrMsgTxt_A, data[j]);
		}
	}

	/**
	 * get  DLR_REF_NUM_A.
	 * @param idx1 List Number
	 * @return DLR_REF_NUM_A
	 */
	public String getDlrRefNum_A(int idx1) {
		return outputValue(A, idx1, dlrRefNum_A);
	}

	/**
	 * set  DLR_REF_NUM_A.
	 * @param data DLR_REF_NUM_AArray
	 */
	public void setDlrRefNum_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dlrRefNum_A, data[j]);
		}
	}

	/**
	 * get  CSMP_TRX_STS_CD_A.
	 * @param idx1 List Number
	 * @return CSMP_TRX_STS_CD_A
	 */
	public String getCsmpTrxStsCd_A(int idx1) {
		return outputValue(A, idx1, csmpTrxStsCd_A);
	}

	/**
	 * set  CSMP_TRX_STS_CD_A.
	 * @param data CSMP_TRX_STS_CD_AArray
	 */
	public void setCsmpTrxStsCd_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, csmpTrxStsCd_A, data[j]);
		}
	}

	/**
	 * get  RTL_DLR_CD_A.
	 * @param idx1 List Number
	 * @return RTL_DLR_CD_A
	 */
	public String getRtlDlrCd_A(int idx1) {
		return outputValue(A, idx1, rtlDlrCd_A);
	}

	/**
	 * set  RTL_DLR_CD_A.
	 * @param data RTL_DLR_CD_AArray
	 */
	public void setRtlDlrCd_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, rtlDlrCd_A, data[j]);
		}
	}

	/**
	 * get  DS_ACCT_NM_A.
	 * @param idx1 List Number
	 * @return DS_ACCT_NM_A
	 */
	public String getDsAcctNm_A(int idx1) {
		return outputValue(A, idx1, dsAcctNm_A);
	}

	/**
	 * set  DS_ACCT_NM_A.
	 * @param data DS_ACCT_NM_AArray
	 */
	public void setDsAcctNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsAcctNm_A, data[j]);
		}
	}

	/**
	 * get  XX_SCR_ITEM_40_TXT_A.
	 * @param idx1 List Number
	 * @return XX_SCR_ITEM_40_TXT_A
	 */
	public String getXxScrItem40Txt_A(int idx1) {
		return outputValue(A, idx1, xxScrItem40Txt_A);
	}

	/**
	 * set  XX_SCR_ITEM_40_TXT_A.
	 * @param data XX_SCR_ITEM_40_TXT_AArray
	 */
	public void setXxScrItem40Txt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxScrItem40Txt_A, data[j]);
		}
	}

	/**
	 * get  EFF_FROM_DT_A.
	 * @param idx1 List Number
	 * @return EFF_FROM_DT_A
	 */
	public String getEffFromDt_A(int idx1) {
		return outputValue(A, idx1, effFromDt_A, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  EFF_FROM_DT_A.
	 * @param data EFF_FROM_DT_AArray
	 */
	public void setEffFromDt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i,  effFromDt_A, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  EFF_THRU_DT_A.
	 * @param idx1 List Number
	 * @return EFF_THRU_DT_A
	 */
	public String getEffThruDt_A(int idx1) {
		return outputValue(A, idx1, effThruDt_A, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  EFF_THRU_DT_A.
	 * @param data EFF_THRU_DT_AArray
	 */
	public void setEffThruDt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i,  effThruDt_A, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  CR_LIST_TXT_A.
	 * @param idx1 List Number
	 * @return CR_LIST_TXT_A
	 */
	public String getCrListTxt_A(int idx1) {
		return outputValue(A, idx1, crListTxt_A);
	}

	/**
	 * set  CR_LIST_TXT_A.
	 * @param data CR_LIST_TXT_AArray
	 */
	public void setCrListTxt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, crListTxt_A, data[j]);
		}
	}

	/**
	 * get  CR_LIST_GNRN_NUM_A.
	 * @param idx1 List Number
	 * @return CR_LIST_GNRN_NUM_A
	 */
	public String getCrListGnrnNum_A(int idx1) {
		return outputValue(A, idx1, crListGnrnNum_A);
	}

	/**
	 * set  CR_LIST_GNRN_NUM_A.
	 * @param data CR_LIST_GNRN_NUM_AArray
	 */
	public void setCrListGnrnNum_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, crListGnrnNum_A, data[j]);
		}
	}

	/**
	 * get  CSMP_CONTR_STS_CD_A.
	 * @param idx1 List Number
	 * @return CSMP_CONTR_STS_CD_A
	 */
	public String getCsmpContrStsCd_A(int idx1) {
		return outputValue(A, idx1, csmpContrStsCd_A);
	}

	/**
	 * set  CSMP_CONTR_STS_CD_A.
	 * @param data CSMP_CONTR_STS_CD_AArray
	 */
	public void setCsmpContrStsCd_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, csmpContrStsCd_A, data[j]);
		}
	}

	/**
	 * get  CSMP_RG_CD_A.
	 * @param idx1 List Number
	 * @return CSMP_RG_CD_A
	 */
	public String getCsmpRgCd_A(int idx1) {
		return outputValue(A, idx1, csmpRgCd_A);
	}

	/**
	 * set  CSMP_RG_CD_A.
	 * @param data CSMP_RG_CD_AArray
	 */
	public void setCsmpRgCd_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, csmpRgCd_A, data[j]);
		}
	}

	/**
	 * get  CSMP_CATG_CD_A.
	 * @param idx1 List Number
	 * @return CSMP_CATG_CD_A
	 */
	public String getCsmpCatgCd_A(int idx1) {
		return outputValue(A, idx1, csmpCatgCd_A);
	}

	/**
	 * set  CSMP_CATG_CD_A.
	 * @param data CSMP_CATG_CD_AArray
	 */
	public void setCsmpCatgCd_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, csmpCatgCd_A, data[j]);
		}
	}

	/**
	 * get  VLD_FROM_DT_A.
	 * @param idx1 List Number
	 * @return VLD_FROM_DT_A
	 */
	public String getVldFromDt_A(int idx1) {
		return outputValue(A, idx1, vldFromDt_A, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  VLD_FROM_DT_A.
	 * @param data VLD_FROM_DT_AArray
	 */
	public void setVldFromDt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i,  vldFromDt_A, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  PREV_CSMP_NUM_A.
	 * @param idx1 List Number
	 * @return PREV_CSMP_NUM_A
	 */
	public String getPrevCsmpNum_A(int idx1) {
		return outputValue(A, idx1, prevCsmpNum_A);
	}

	/**
	 * set  PREV_CSMP_NUM_A.
	 * @param data PREV_CSMP_NUM_AArray
	 */
	public void setPrevCsmpNum_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prevCsmpNum_A, data[j]);
		}
	}

	/**
	 * get  PREV_USR_TXT_A.
	 * @param idx1 List Number
	 * @return PREV_USR_TXT_A
	 */
	public String getPrevUsrTxt_A(int idx1) {
		return outputValue(A, idx1, prevUsrTxt_A);
	}

	/**
	 * set  PREV_USR_TXT_A.
	 * @param data PREV_USR_TXT_AArray
	 */
	public void setPrevUsrTxt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prevUsrTxt_A, data[j]);
		}
	}

	/**
	 * get  _EZUpdateDateTime_A.
	 * @param idx1 List Number
	 * @return _EZUpdateDateTime_A
	 */
	public String getEzUpTime_A(int idx1) {
		return outputValue(A, idx1, ezUpTime_A);
	}

	/**
	 * set  _EZUpdateDateTime_A.
	 * @param data _EZUpdateDateTime_AArray
	 */
	public void setEzUpTime_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, ezUpTime_A, data[j]);
		}
	}

	/**
	 * get  _EZUpTimeZone_A.
	 * @param idx1 List Number
	 * @return _EZUpTimeZone_A
	 */
	public String getEzUpTimeZone_A(int idx1) {
		return outputValue(A, idx1, ezUpTimeZone_A);
	}

	/**
	 * set  _EZUpTimeZone_A.
	 * @param data _EZUpTimeZone_AArray
	 */
	public void setEzUpTimeZone_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, ezUpTimeZone_A, data[j]);
		}
	}

}

