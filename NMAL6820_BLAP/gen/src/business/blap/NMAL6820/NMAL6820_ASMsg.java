//This file was automatically generated by Business Component Interface Definition Document (Define Business Application Global Area) and XLA200710010.
// Generated on    :20201001143112000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NMAL6820_ASMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NMAL6820;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NMAL6820 Business Application Global Area Message class.
 * @author
 * @version XLA200710010
 */
public class NMAL6820_ASMsg extends EZDSMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_MODE_CD_A1*/
	public final EZDSStringItem              xxModeCd_A1;

    /** RTL_SWH_CD_A1*/
	public final EZDSStringItem              rtlSwhCd_A1;

    /** RTL_SWH_NM_A1*/
	public final EZDSStringItem              rtlSwhNm_A1;

    /** INVTY_LOC_CD_A1*/
	public final EZDSStringItem              invtyLocCd_A1;

    /** RTL_SWH_DESC_TXT_A1*/
	public final EZDSStringItem              rtlSwhDescTxt_A1;

    /** XX_CHK_BOX_P1*/
	public final EZDSStringItem              xxChkBox_P1;

    /** XX_CHK_BOX_D1*/
	public final EZDSStringItem              xxChkBox_D1;

    /** XX_CHK_BOX_M1*/
	public final EZDSStringItem              xxChkBox_M1;

    /** RTL_SWH_MND_FLG_A1*/
	public final EZDSStringItem              rtlSwhMndFlg_A1;

    /** XX_SCR_ITEM_8_TXT_A1*/
	public final EZDSStringItem              xxScrItem8Txt_A1;

    /** PROCR_TP_CD_A1*/
	public final EZDSStringItem              procrTpCd_A1;

    /** PRNT_VND_CD_AS*/
	public final EZDSStringItem              prntVndCd_AS;

    /** PRNT_VND_NM_AS*/
	public final EZDSStringItem              prntVndNm_AS;

    /** VND_CD_AS*/
	public final EZDSStringItem              vndCd_AS;

    /** VND_NM_AS*/
	public final EZDSStringItem              vndNm_AS;

    /** PROCR_TP_CD_A2*/
	public final EZDSStringItem              procrTpCd_A2;

    /** PRNT_VND_CD_AR*/
	public final EZDSStringItem              prntVndCd_AR;

    /** PRNT_VND_NM_AR*/
	public final EZDSStringItem              prntVndNm_AR;

    /** VND_CD_AR*/
	public final EZDSStringItem              vndCd_AR;

    /** VND_NM_AR*/
	public final EZDSStringItem              vndNm_AR;

    /** RTL_WH_CATG_CD_A1*/
	public final EZDSStringItem              rtlWhCatgCd_A1;

    /** EFF_FROM_DT_S1*/
	public final EZDSDateItem              effFromDt_S1;

    /** EFF_THRU_DT_S1*/
	public final EZDSDateItem              effThruDt_S1;


	/**
	 * NMAL6820_ASMsg is constructor.
	 * The initialization when the instance of NMAL6820_ASMsg is generated.
	 */
	public NMAL6820_ASMsg() {
		this(false, -1);
	}

	/**
	 * NMAL6820_ASMsg is constructor.
	 * The initialization when the instance of NMAL6820_ASMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NMAL6820_ASMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxModeCd_A1 = (EZDSStringItem)newItem("xxModeCd_A1");
		rtlSwhCd_A1 = (EZDSStringItem)newItem("rtlSwhCd_A1");
		rtlSwhNm_A1 = (EZDSStringItem)newItem("rtlSwhNm_A1");
		invtyLocCd_A1 = (EZDSStringItem)newItem("invtyLocCd_A1");
		rtlSwhDescTxt_A1 = (EZDSStringItem)newItem("rtlSwhDescTxt_A1");
		xxChkBox_P1 = (EZDSStringItem)newItem("xxChkBox_P1");
		xxChkBox_D1 = (EZDSStringItem)newItem("xxChkBox_D1");
		xxChkBox_M1 = (EZDSStringItem)newItem("xxChkBox_M1");
		rtlSwhMndFlg_A1 = (EZDSStringItem)newItem("rtlSwhMndFlg_A1");
		xxScrItem8Txt_A1 = (EZDSStringItem)newItem("xxScrItem8Txt_A1");
		procrTpCd_A1 = (EZDSStringItem)newItem("procrTpCd_A1");
		prntVndCd_AS = (EZDSStringItem)newItem("prntVndCd_AS");
		prntVndNm_AS = (EZDSStringItem)newItem("prntVndNm_AS");
		vndCd_AS = (EZDSStringItem)newItem("vndCd_AS");
		vndNm_AS = (EZDSStringItem)newItem("vndNm_AS");
		procrTpCd_A2 = (EZDSStringItem)newItem("procrTpCd_A2");
		prntVndCd_AR = (EZDSStringItem)newItem("prntVndCd_AR");
		prntVndNm_AR = (EZDSStringItem)newItem("prntVndNm_AR");
		vndCd_AR = (EZDSStringItem)newItem("vndCd_AR");
		vndNm_AR = (EZDSStringItem)newItem("vndNm_AR");
		rtlWhCatgCd_A1 = (EZDSStringItem)newItem("rtlWhCatgCd_A1");
		effFromDt_S1 = (EZDSDateItem)newItem("effFromDt_S1");
		effThruDt_S1 = (EZDSDateItem)newItem("effThruDt_S1");
	}

	/**
	 * get the type of array which is stored
	 * @return NMAL6820_ASMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NMAL6820_ASMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxModeCd_A1", "xxModeCd_A1", "A1", null, TYPE_HANKAKUEISU, "2", null},
	{"rtlSwhCd_A1", "rtlSwhCd_A1", "A1", null, TYPE_HANKAKUEISU, "20", null},
	{"rtlSwhNm_A1", "rtlSwhNm_A1", "A1", null, TYPE_HANKAKUEISU, "30", null},
	{"invtyLocCd_A1", "invtyLocCd_A1", "A1", null, TYPE_HANKAKUEISU, "20", null},
	{"rtlSwhDescTxt_A1", "rtlSwhDescTxt_A1", "A1", null, TYPE_HANKAKUEISU, "50", null},
	{"xxChkBox_P1", "xxChkBox_P1", "P1", null, TYPE_HANKAKUEIJI, "1", null},
	{"xxChkBox_D1", "xxChkBox_D1", "D1", null, TYPE_HANKAKUEIJI, "1", null},
	{"xxChkBox_M1", "xxChkBox_M1", "M1", null, TYPE_HANKAKUEIJI, "1", null},
	{"rtlSwhMndFlg_A1", "rtlSwhMndFlg_A1", "A1", null, TYPE_HANKAKUEISU, "1", null},
	{"xxScrItem8Txt_A1", "xxScrItem8Txt_A1", "A1", null, TYPE_HANKAKUEISU, "8", null},
	{"procrTpCd_A1", "procrTpCd_A1", "A1", null, TYPE_HANKAKUEISU, "2", null},
	{"prntVndCd_AS", "prntVndCd_AS", "AS", null, TYPE_HANKAKUEISU, "30", null},
	{"prntVndNm_AS", "prntVndNm_AS", "AS", null, TYPE_HANKAKUEISU, "240", null},
	{"vndCd_AS", "vndCd_AS", "AS", null, TYPE_HANKAKUEISU, "20", null},
	{"vndNm_AS", "vndNm_AS", "AS", null, TYPE_HANKAKUEISU, "60", null},
	{"procrTpCd_A2", "procrTpCd_A2", "A2", null, TYPE_HANKAKUEISU, "2", null},
	{"prntVndCd_AR", "prntVndCd_AR", "AR", null, TYPE_HANKAKUEISU, "30", null},
	{"prntVndNm_AR", "prntVndNm_AR", "AR", null, TYPE_HANKAKUEISU, "240", null},
	{"vndCd_AR", "vndCd_AR", "AR", null, TYPE_HANKAKUEISU, "20", null},
	{"vndNm_AR", "vndNm_AR", "AR", null, TYPE_HANKAKUEISU, "60", null},
	{"rtlWhCatgCd_A1", "rtlWhCatgCd_A1", "A1", null, TYPE_HANKAKUEISU, "2", null},
	{"effFromDt_S1", "effFromDt_S1", "S1", null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt_S1", "effThruDt_S1", "S1", null, TYPE_NENTSUKIHI, "8", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_MODE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxModeCd_A1
        {"RTL_SWH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlSwhCd_A1
        {"RTL_SWH_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlSwhNm_A1
        {"INVTY_LOC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invtyLocCd_A1
        {"RTL_SWH_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlSwhDescTxt_A1
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_P1
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_D1
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_M1
        {"RTL_SWH_MND_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlSwhMndFlg_A1
        {"XX_SCR_ITEM_8_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxScrItem8Txt_A1
        {"PROCR_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//procrTpCd_A1
        {"PRNT_VND_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prntVndCd_AS
        {"PRNT_VND_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prntVndNm_AS
        {"VND_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//vndCd_AS
        {"VND_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//vndNm_AS
        {"PROCR_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//procrTpCd_A2
        {"PRNT_VND_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prntVndCd_AR
        {"PRNT_VND_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prntVndNm_AR
        {"VND_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//vndCd_AR
        {"VND_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//vndNm_AR
        {"RTL_WH_CATG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlWhCatgCd_A1
        {"EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effFromDt_S1
        {"EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effThruDt_S1
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

