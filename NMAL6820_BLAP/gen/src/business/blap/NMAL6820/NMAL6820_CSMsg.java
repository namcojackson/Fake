//This file was automatically generated by Business Component Interface Definition Document (Define Business Application Global Area) and XLA200710010.
// Generated on    :20201001143112000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NMAL6820_CSMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NMAL6820;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NMAL6820 Business Application Global Area Message class.
 * @author
 * @version XLA200710010
 */
public class NMAL6820_CSMsg extends EZDSMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_MODE_CD_C1*/
	public final EZDSStringItem              xxModeCd_C1;

    /** RTL_SWH_CD_C1*/
	public final EZDSStringItem              rtlSwhCd_C1;

    /** RTL_SWH_NM_C1*/
	public final EZDSStringItem              rtlSwhNm_C1;

    /** INVTY_LOC_CD_C1*/
	public final EZDSStringItem              invtyLocCd_C1;

    /** RTL_SWH_DESC_TXT_C1*/
	public final EZDSStringItem              rtlSwhDescTxt_C1;

    /** XX_CHK_BOX_CP*/
	public final EZDSStringItem              xxChkBox_CP;

    /** XX_CHK_BOX_CD*/
	public final EZDSStringItem              xxChkBox_CD;

    /** XX_CHK_BOX_CM*/
	public final EZDSStringItem              xxChkBox_CM;

    /** RTL_SWH_MND_FLG_C1*/
	public final EZDSStringItem              rtlSwhMndFlg_C1;

    /** XX_SCR_ITEM_8_TXT_C1*/
	public final EZDSStringItem              xxScrItem8Txt_C1;

    /** PROCR_TP_CD_C1*/
	public final EZDSStringItem              procrTpCd_C1;

    /** PRNT_VND_NM_CS*/
	public final EZDSStringItem              prntVndNm_CS;

    /** VND_NM_CS*/
	public final EZDSStringItem              vndNm_CS;

    /** PROCR_TP_CD_C2*/
	public final EZDSStringItem              procrTpCd_C2;

    /** PRNT_VND_NM_CR*/
	public final EZDSStringItem              prntVndNm_CR;

    /** VND_NM_CR*/
	public final EZDSStringItem              vndNm_CR;

    /** RTL_WH_CATG_CD_C1*/
	public final EZDSStringItem              rtlWhCatgCd_C1;

    /** EFF_FROM_DT_C1*/
	public final EZDSDateItem              effFromDt_C1;

    /** EFF_THRU_DT_C1*/
	public final EZDSDateItem              effThruDt_C1;


	/**
	 * NMAL6820_CSMsg is constructor.
	 * The initialization when the instance of NMAL6820_CSMsg is generated.
	 */
	public NMAL6820_CSMsg() {
		this(false, -1);
	}

	/**
	 * NMAL6820_CSMsg is constructor.
	 * The initialization when the instance of NMAL6820_CSMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NMAL6820_CSMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxModeCd_C1 = (EZDSStringItem)newItem("xxModeCd_C1");
		rtlSwhCd_C1 = (EZDSStringItem)newItem("rtlSwhCd_C1");
		rtlSwhNm_C1 = (EZDSStringItem)newItem("rtlSwhNm_C1");
		invtyLocCd_C1 = (EZDSStringItem)newItem("invtyLocCd_C1");
		rtlSwhDescTxt_C1 = (EZDSStringItem)newItem("rtlSwhDescTxt_C1");
		xxChkBox_CP = (EZDSStringItem)newItem("xxChkBox_CP");
		xxChkBox_CD = (EZDSStringItem)newItem("xxChkBox_CD");
		xxChkBox_CM = (EZDSStringItem)newItem("xxChkBox_CM");
		rtlSwhMndFlg_C1 = (EZDSStringItem)newItem("rtlSwhMndFlg_C1");
		xxScrItem8Txt_C1 = (EZDSStringItem)newItem("xxScrItem8Txt_C1");
		procrTpCd_C1 = (EZDSStringItem)newItem("procrTpCd_C1");
		prntVndNm_CS = (EZDSStringItem)newItem("prntVndNm_CS");
		vndNm_CS = (EZDSStringItem)newItem("vndNm_CS");
		procrTpCd_C2 = (EZDSStringItem)newItem("procrTpCd_C2");
		prntVndNm_CR = (EZDSStringItem)newItem("prntVndNm_CR");
		vndNm_CR = (EZDSStringItem)newItem("vndNm_CR");
		rtlWhCatgCd_C1 = (EZDSStringItem)newItem("rtlWhCatgCd_C1");
		effFromDt_C1 = (EZDSDateItem)newItem("effFromDt_C1");
		effThruDt_C1 = (EZDSDateItem)newItem("effThruDt_C1");
	}

	/**
	 * get the type of array which is stored
	 * @return NMAL6820_CSMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NMAL6820_CSMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxModeCd_C1", "xxModeCd_C1", "C1", null, TYPE_HANKAKUEISU, "2", null},
	{"rtlSwhCd_C1", "rtlSwhCd_C1", "C1", null, TYPE_HANKAKUEISU, "20", null},
	{"rtlSwhNm_C1", "rtlSwhNm_C1", "C1", null, TYPE_HANKAKUEISU, "30", null},
	{"invtyLocCd_C1", "invtyLocCd_C1", "C1", null, TYPE_HANKAKUEISU, "20", null},
	{"rtlSwhDescTxt_C1", "rtlSwhDescTxt_C1", "C1", null, TYPE_HANKAKUEISU, "50", null},
	{"xxChkBox_CP", "xxChkBox_CP", "CP", null, TYPE_HANKAKUEIJI, "1", null},
	{"xxChkBox_CD", "xxChkBox_CD", "CD", null, TYPE_HANKAKUEIJI, "1", null},
	{"xxChkBox_CM", "xxChkBox_CM", "CM", null, TYPE_HANKAKUEIJI, "1", null},
	{"rtlSwhMndFlg_C1", "rtlSwhMndFlg_C1", "C1", null, TYPE_HANKAKUEISU, "1", null},
	{"xxScrItem8Txt_C1", "xxScrItem8Txt_C1", "C1", null, TYPE_HANKAKUEISU, "8", null},
	{"procrTpCd_C1", "procrTpCd_C1", "C1", null, TYPE_HANKAKUEISU, "2", null},
	{"prntVndNm_CS", "prntVndNm_CS", "CS", null, TYPE_HANKAKUEISU, "240", null},
	{"vndNm_CS", "vndNm_CS", "CS", null, TYPE_HANKAKUEISU, "60", null},
	{"procrTpCd_C2", "procrTpCd_C2", "C2", null, TYPE_HANKAKUEISU, "2", null},
	{"prntVndNm_CR", "prntVndNm_CR", "CR", null, TYPE_HANKAKUEISU, "240", null},
	{"vndNm_CR", "vndNm_CR", "CR", null, TYPE_HANKAKUEISU, "60", null},
	{"rtlWhCatgCd_C1", "rtlWhCatgCd_C1", "C1", null, TYPE_HANKAKUEISU, "2", null},
	{"effFromDt_C1", "effFromDt_C1", "C1", null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt_C1", "effThruDt_C1", "C1", null, TYPE_NENTSUKIHI, "8", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_MODE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxModeCd_C1
        {"RTL_SWH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlSwhCd_C1
        {"RTL_SWH_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlSwhNm_C1
        {"INVTY_LOC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invtyLocCd_C1
        {"RTL_SWH_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlSwhDescTxt_C1
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_CP
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_CD
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_CM
        {"RTL_SWH_MND_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlSwhMndFlg_C1
        {"XX_SCR_ITEM_8_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxScrItem8Txt_C1
        {"PROCR_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//procrTpCd_C1
        {"PRNT_VND_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prntVndNm_CS
        {"VND_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//vndNm_CS
        {"PROCR_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//procrTpCd_C2
        {"PRNT_VND_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prntVndNm_CR
        {"VND_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//vndNm_CR
        {"RTL_WH_CATG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlWhCatgCd_C1
        {"EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effFromDt_C1
        {"EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effThruDt_C1
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

