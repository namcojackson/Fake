<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<sqlMap namespace="NMAL7010Query">

    <typeAlias alias="NMAL7010CMsg"    type="business.blap.NMAL7010.NMAL7010CMsg"/>
    <typeAlias alias="NMAL7010_WCMsg"  type="business.blap.NMAL7010.NMAL7010_WCMsg"/>
    <typeAlias alias="NMAL7010_XCMsg"  type="business.blap.NMAL7010.NMAL7010_XCMsg"/>
    <typeAlias alias="NMAL7010_YCMsg"  type="business.blap.NMAL7010.NMAL7010_YCMsg"/>
    <typeAlias alias="NMAL7010_QCMsg"  type="business.blap.NMAL7010.NMAL7010_QCMsg"/>
    <typeAlias alias="NMAL7010_ASMsg"  type="business.blap.NMAL7010.NMAL7010_ASMsg"/>
    <typeAlias alias="NMAL7010_BSMsg"  type="business.blap.NMAL7010.NMAL7010_BSMsg"/>
    <typeAlias alias="NMAL7010_CSMsg"  type="business.blap.NMAL7010.NMAL7010_CSMsg"/>
    <typeAlias alias="NMAL7010_DSMsg"  type="business.blap.NMAL7010.NMAL7010_DSMsg"/>
    <typeAlias alias="NMAL7010_ESMsg"  type="business.blap.NMAL7010.NMAL7010_ESMsg"/>
    <typeAlias alias="NMAL7010_FSMsg"  type="business.blap.NMAL7010.NMAL7010_FSMsg"/>
    <typeAlias alias="NMAL7010_GSMsg"  type="business.blap.NMAL7010.NMAL7010_GSMsg"/>
    <typeAlias alias="NMAL7010_HSMsg"  type="business.blap.NMAL7010.NMAL7010_HSMsg"/>
    <typeAlias alias="NMAL7010_ISMsg"  type="business.blap.NMAL7010.NMAL7010_ISMsg"/>
    <typeAlias alias="NMAL7010_JSMsg"  type="business.blap.NMAL7010.NMAL7010_JSMsg"/>
    <typeAlias alias="PRC_LIST_QTY_DISCTMsg"    type="business.db.PRC_LIST_QTY_DISCTMsg"/>

    <statement id="getPrcListHdr" parameterClass="Map" resultMap="result.getPrcListHdr">
        SELECT PC.PRC_CATG_CD
             , PC.PRC_CATG_NM
             , PC.PRC_CATG_DESC_TXT
             , PC.EZUPTIME                         EZUPTIME_HDR
             , PC.EZUPTIMEZONE                     EZUPTIMEZONE_HDR
             , PC.PRC_SLS_VIS_TP_CD
             , PC.PRC_LIST_TP_CD
             , PC.PRC_LIST_DPLY_NM
             , PC.EFF_FROM_DT
             , PC.EFF_THRU_DT
             , PC.ACTV_FLG
             , PC.CUST_RGTN_REQ_FLG
             , PC.PRC_CONTR_NUM
             , PC.PRC_LIST_GRP_CD
             , PC.EZUPTIME                        EZUPTIME_DTL
             , PC.EZUPTIMEZONE                    EZUPTIMEZONE_DTL
             , PGCA.NOT_TO_EXCD_FLG
             , PGCA.CUST_BID_NUM
             , PGCA.ALLW_PRC_DEVN_FLG
             , PGCA.EZUPTIME                       EZUPTIME_PGCA
             , PGCA.EZUPTIMEZONE                   EZUPTIMEZONE_PGCA
             , PECA.PRC_LEASE_TP_CD
             , PECA.LEASE_RTRN_FEE_INCL_FLG
             , PECA.ADDL_SHPG_FEE_INCL_FLG
             , PECA.RELO_INCL_FLG
             , PECA.HARD_DRIVE_ERASE_INCL_FLG
             , PECA.HARD_DRIVE_RMV_INCL_FLG
             , PECA.NOT_EXCD_CONTR_PRC_FLG
             , PECA.SPCL_CSMP_EXCL_AR_NM
             , PECA.SOM_ELIG_TRX_TP_CD
             , PECA.LEASE_RATE_PRC_CATG_CD
             , PC2.PRC_CATG_NM                      LEASE_RATE_PRC_CATG_NM
             , PECA.EZUPTIME                        EZUPTIME_CA
             , PECA.EZUPTIMEZONE                    EZUPTIMEZONE_CA
             , PSCA.WAV_BOOK_PRC_FLG
             , PSCA.WAV_ALL_FLG
             , PSCA.ALLOW_NEW_AGGR_CONTR_FLG
             , PSCA.ALLOW_NEW_FLEET_CONTR_FLG
             , PSCA.ALLOW_ADD_FLEET_CONTR_FLG
             , PSCA.ALLOW_ADD_AGGR_CONTR_FLG
             , PSCA.ALLOW_SVC_TO_DCLN_FLG           ALLOW_SVC_TO_DCLN_FLG_CB
             , PSCA.GRS_PRC_PCT
             , PSCA.EZUPTIME                        EZUPTIME_CB
             , PSCA.EZUPTIMEZONE                    EZUPTIMEZONE_CB
             , PSTCA.PRC_TIER_SVC_OFFER_CD
             , PSTCA.ALLOW_SVC_TO_DCLN_FLG          ALLOW_SVC_TO_DCLN_FLG_CC
             , PSTCA.EZUPTIME                       EZUPTIME_CC
             , PSTCA.EZUPTIMEZONE                   EZUPTIMEZONE_CC
             , PCONT.PRC_CONTR_NM
             , PLT.PRC_LIST_STRU_TP_CD
          FROM PRC_CATG                 PC
             , PRC_GENL_CONTR_ATTRB     PGCA
             , PRC_EQUIP_CONTR_ATTRB    PECA
             , PRC_SVC_CONTR_ATTRB      PSCA
             , PRC_SVC_TIER_CONTR_ATTRB PSTCA
             , PRC_CONTR                PCONT
             , PRC_LIST_TP              PLT
             , PRC_CATG                 PC2
         WHERE PC.GLBL_CMPY_CD   = #glblCmpyCd#
           AND PC.EZCANCELFLAG   = '0'
           AND PC.PRC_CATG_CD    = #prcCatgCd#
           AND PC.GLBL_CMPY_CD   = PGCA.GLBL_CMPY_CD(+)
           AND PC.EZCANCELFLAG   = PGCA.EZCANCELFLAG(+)
           AND PC.PRC_CATG_CD    = PGCA.PRC_CATG_CD(+)
           AND PC.GLBL_CMPY_CD   = PECA.GLBL_CMPY_CD(+)
           AND PC.EZCANCELFLAG   = PECA.EZCANCELFLAG(+)
           AND PC.PRC_CATG_CD    = PECA.PRC_CATG_CD(+)
           AND PC.GLBL_CMPY_CD   = PSCA.GLBL_CMPY_CD(+)
           AND PC.EZCANCELFLAG   = PSCA.EZCANCELFLAG(+)
           AND PC.PRC_CATG_CD    = PSCA.PRC_CATG_CD(+)
           AND PC.GLBL_CMPY_CD   = PSTCA.GLBL_CMPY_CD(+)
           AND PC.EZCANCELFLAG   = PSTCA.EZCANCELFLAG(+)
           AND PC.PRC_CATG_CD    = PSTCA.PRC_CATG_CD(+)
           AND PC.GLBL_CMPY_CD   = PCONT.GLBL_CMPY_CD(+)
           AND PC.EZCANCELFLAG   = PCONT.EZCANCELFLAG(+)
           AND PC.PRC_CONTR_NUM  = PCONT.PRC_CONTR_NUM(+)
           AND PC.GLBL_CMPY_CD   = PLT.GLBL_CMPY_CD(+)
           AND PC.EZCANCELFLAG   = PLT.EZCANCELFLAG(+)
           AND PC.PRC_LIST_TP_CD = PLT.PRC_LIST_TP_CD(+)
           AND PECA.GLBL_CMPY_CD           = PC2.GLBL_CMPY_CD(+)
           AND PECA.EZCANCELFLAG           = PC2.EZCANCELFLAG(+)
           AND PECA.LEASE_RATE_PRC_CATG_CD = PC2.PRC_CATG_CD(+)
    </statement>

    <resultMap id="result.getPrcListHdr" class="NMAL7010CMsg">
        <result property="prcCatgCd_H1"             column="PRC_CATG_CD"               javaType="EZDCStringItem"/>
        <result property="prcCatgCd_H2"             column="PRC_CATG_CD"               javaType="EZDCStringItem"/>
        <result property="prcCatgCd_BK"             column="PRC_CATG_CD"               javaType="EZDCStringItem"/>
        <result property="prcCatgNm_H1"             column="PRC_CATG_NM"               javaType="EZDCStringItem"/>
        <result property="prcCatgNm_H2"             column="PRC_CATG_NM"               javaType="EZDCStringItem"/>
        <result property="prcCatgDescTxt_H1"        column="PRC_CATG_DESC_TXT"         javaType="EZDCStringItem"/>
        <result property="prcSlsVisTpCd_H1"         column="PRC_SLS_VIS_TP_CD"         javaType="EZDCStringItem"/>
        <result property="ezUpTime_H1"              column="EZUPTIME_HDR"              javaType="EZDCStringItem"/>
        <result property="ezUpTimeZone_H1"          column="EZUPTIMEZONE_HDR"          javaType="EZDCStringItem"/>
        <result property="prcListTpCd_H1"           column="PRC_LIST_TP_CD"            javaType="EZDCStringItem"/>
        <result property="prcListDplyNm_H1"         column="PRC_LIST_DPLY_NM"          javaType="EZDCStringItem"/>
        <result property="effFromDt_H1"             column="EFF_FROM_DT"               javaType="EZDCDateItem"/>
        <result property="effThruDt_H1"             column="EFF_THRU_DT"               javaType="EZDCDateItem"/>
        <result property="actvFlg_H1"               column="ACTV_FLG"                  javaType="EZDCStringItem"/>
        <result property="custRgtnReqFlg_H1"        column="CUST_RGTN_REQ_FLG"         javaType="EZDCStringItem"/>
        <result property="prcContrNum_H1"           column="PRC_CONTR_NUM"             javaType="EZDCStringItem"/>
        <result property="prcListGrpCd_H1"          column="PRC_LIST_GRP_CD"           javaType="EZDCStringItem"/>
        <result property="ezUpTime_H2"              column="EZUPTIME_DTL"              javaType="EZDCStringItem"/>
        <result property="ezUpTimeZone_H2"          column="EZUPTIMEZONE_DTL"          javaType="EZDCStringItem"/>
        <result property="notToExcdFlg_GA"          column="NOT_TO_EXCD_FLG"           javaType="EZDCStringItem"/>
        <result property="notToExcdFlg_GB"          column="NOT_TO_EXCD_FLG"           javaType="EZDCStringItem"/>
        <result property="custBidNum_GA"            column="CUST_BID_NUM"              javaType="EZDCStringItem"/>
        <result property="allwPrcDevnFlg_GA"        column="ALLW_PRC_DEVN_FLG"         javaType="EZDCStringItem"/>
        <result property="allwPrcDevnFlg_GB"        column="ALLW_PRC_DEVN_FLG"         javaType="EZDCStringItem"/>
        <result property="ezUpTime_G1"              column="EZUPTIME_PGCA"             javaType="EZDCStringItem"/>
        <result property="ezUpTimeZone_G1"          column="EZUPTIMEZONE_PGCA"         javaType="EZDCStringItem"/>
        <result property="prcLeaseTpCd_CA"          column="PRC_LEASE_TP_CD"           javaType="EZDCStringItem"/>
        <result property="leaseRtrnFeeInclFlg_CA"   column="LEASE_RTRN_FEE_INCL_FLG"   javaType="EZDCStringItem"/>
        <result property="addlShpgFeeInclFlg_CA"    column="ADDL_SHPG_FEE_INCL_FLG"    javaType="EZDCStringItem"/>
        <result property="reloInclFlg_CA"           column="RELO_INCL_FLG"             javaType="EZDCStringItem"/>
        <result property="hardDriveEraseInclFlg_CA" column="HARD_DRIVE_ERASE_INCL_FLG" javaType="EZDCStringItem"/>
        <result property="hardDriveRmvInclFlg_CA"   column="HARD_DRIVE_RMV_INCL_FLG"   javaType="EZDCStringItem"/>
        <result property="notExcdContrPrcFlg_CA"    column="NOT_EXCD_CONTR_PRC_FLG"    javaType="EZDCStringItem"/>
        <result property="spclCsmpExclArNm_CA"      column="SPCL_CSMP_EXCL_AR_NM"      javaType="EZDCStringItem"/>
        <result property="somEligTrxTpCd_CA"        column="SOM_ELIG_TRX_TP_CD"        javaType="EZDCStringItem"/>
        <result property="leaseRatePrcCatgCd_CA"    column="LEASE_RATE_PRC_CATG_CD"    javaType="EZDCStringItem"/>
        <result property="prcCatgNm_CA"             column="LEASE_RATE_PRC_CATG_NM"    javaType="EZDCStringItem"/>
        <result property="ezUpTime_CA"              column="EZUPTIME_CA"               javaType="EZDCStringItem"/>
        <result property="ezUpTimeZone_CA"          column="EZUPTIMEZONE_CA"           javaType="EZDCStringItem"/>
        <result property="wavBookPrcFlg_CB"         column="WAV_BOOK_PRC_FLG"          javaType="EZDCStringItem"/>
        <result property="wavAllFlg_CB"             column="WAV_ALL_FLG"               javaType="EZDCStringItem"/>
        <result property="allowNewAggrContrFlg_CB"  column="ALLOW_NEW_AGGR_CONTR_FLG"  javaType="EZDCStringItem"/>
        <result property="allowNewFleetContrFlg_CB" column="ALLOW_NEW_FLEET_CONTR_FLG" javaType="EZDCStringItem"/>
        <result property="allowAddFleetContrFlg_CB" column="ALLOW_ADD_FLEET_CONTR_FLG" javaType="EZDCStringItem"/>
        <result property="allowAddAggrContrFlg_CB"  column="ALLOW_ADD_AGGR_CONTR_FLG"  javaType="EZDCStringItem"/>
        <result property="allowSvcToDclnFlg_CB"     column="ALLOW_SVC_TO_DCLN_FLG_CB"  javaType="EZDCStringItem"/>
        <result property="grsPrcPct_CB"             column="GRS_PRC_PCT"               javaType="EZDCBigDecimalItem"/>
        <result property="ezUpTime_CB"              column="EZUPTIME_CB"               javaType="EZDCStringItem"/>
        <result property="ezUpTimeZone_CB"          column="EZUPTIMEZONE_CB"           javaType="EZDCStringItem"/>
        <result property="prcTierSvcOfferCd_CC"     column="PRC_TIER_SVC_OFFER_CD"     javaType="EZDCStringItem"/>
        <result property="allowSvcToDclnFlg_CC"     column="ALLOW_SVC_TO_DCLN_FLG_CC"  javaType="EZDCStringItem"/>
        <result property="ezUpTime_CC"              column="EZUPTIME_CC"               javaType="EZDCStringItem"/>
        <result property="ezUpTimeZone_CC"          column="EZUPTIMEZONE_CC"           javaType="EZDCStringItem"/>
        <result property="prcContrNm_H1"            column="PRC_CONTR_NM"              javaType="EZDCStringItem"/>
        <result property="prcListStruTpCd_H1"       column="PRC_LIST_STRU_TP_CD"       javaType="EZDCStringItem"/>
        <result property="prcListStruTpCd_BK"       column="PRC_LIST_STRU_TP_CD"       javaType="EZDCStringItem"/>
    </resultMap>

    <statement id="getSubPrcList" parameterClass="Map" resultMap="result.getSubPrcList">
        SELECT DPCS.SUB_PRC_CATG_CD
             <!-- QC#2175 -->
             , DPCS.EFF_FROM_DT
             , DPCS.EFF_THRU_DT
             , DPCS.SUB_PRC_PRTY_NUM
             , DPCS.DS_PRC_CATG_SUB_PK
             , DPCS.EZUPTIME
             , DPCS.EZUPTIMEZONE
             , PC.PRC_CATG_NM
          FROM DS_PRC_CATG_SUB DPCS
          	 , PRC_CATG PC
             , PRC_LIST_TP PLT
         WHERE DPCS.GLBL_CMPY_CD = #glblCmpyCd#
           AND DPCS.EZCANCELFLAG = '0'
           AND DPCS.PRC_CATG_CD IN
        <isNotNull property="prcCatgList">
           <iterate property="prcCatgList" var="prcCatgCd[]" open="(" close=")" conjunction=",">#prcCatgCd[]#</iterate>
        </isNotNull>
           AND DPCS.GLBL_CMPY_CD = PC.GLBL_CMPY_CD
           AND DPCS.EZCANCELFLAG = PC.EZCANCELFLAG
           AND DPCS.SUB_PRC_CATG_CD  = PC.PRC_CATG_CD
           AND PC.GLBL_CMPY_CD = PLT.GLBL_CMPY_CD
           AND PC.EZCANCELFLAG = PLT.EZCANCELFLAG
           AND PC.PRC_LIST_TP_CD = PLT.PRC_LIST_TP_CD
         ORDER BY DPCS.SUB_PRC_PRTY_NUM, DPCS.SUB_PRC_CATG_CD
    </statement>
    
    <resultMap id="result.getSubPrcList" class="NMAL7010_WCMsg">
        <result property="prcCatgNm_SW"         column="PRC_CATG_NM"            javaType="EZDCStringItem"/>
        <result property="effFromDt_SW"         column="EFF_FROM_DT"            javaType="EZDCStringItem"/>
        <result property="effThruDt_SW"         column="EFF_THRU_DT"            javaType="EZDCStringItem"/>
        <result property="subPrcPrtyNum_SW"     column="SUB_PRC_PRTY_NUM"       javaType="EZDCBigDecimalItem"/>
        <result property="subPrcCatgCd_SW"      column="SUB_PRC_CATG_CD"        javaType="EZDCStringItem"/>
        <result property="dsPrcCatgSubPk_SW"    column="DS_PRC_CATG_SUB_PK"     javaType="EZDCBigDecimalItem"/>
        <result property="ezUpTime_SW"          column="EZUPTIME"               javaType="EZDCStringItem"/>
        <result property="ezUpTimeZone_SW"      column="EZUPTIMEZONE"           javaType="EZDCStringItem"/>  
    </resultMap>


    <statement id="getPrcCatgSub" parameterClass="Map" resultClass="Map">
        SELECT DPCS.DS_PRC_CATG_SUB_PK
             , DPCS.SUB_PRC_CATG_CD
          FROM DS_PRC_CATG_SUB DPCS
         WHERE DPCS.GLBL_CMPY_CD = #glblCmpyCd#
           AND DPCS.EZCANCELFLAG = '0'
           AND DPCS.PRC_CATG_CD = #prcCatgCd#
    </statement>

    <statement id="getSubPrcListTree" parameterClass="Map" resultClass="String">
        SELECT 'X' 
          FROM (
            SELECT PRC_CATG_CD
                 , SUB_PRC_CATG_CD
              FROM DS_PRC_CATG_SUB
             START WITH PRC_CATG_CD IN
        <isNotNull property="prcCatgList">
           <iterate property="prcCatgList" var="prcCatgCd[]" open="(" close=")" conjunction=",">#prcCatgCd[]#</iterate>
        </isNotNull>
           CONNECT BY NOCYCLE PRIOR SUB_PRC_CATG_CD = PRC_CATG_CD
          )
          WHERE SUB_PRC_CATG_CD = #subPrcCatgCd#
    </statement>

    <statement id="getPrcListStruTp" parameterClass="Map" resultClass="String">
        SELECT PLT.PRC_LIST_STRU_TP_CD
          FROM PRC_CATG PC
             , PRC_LIST_TP PLT
         WHERE PC.GLBL_CMPY_CD = #glblCmpyCd#
           AND PC.EZCANCELFLAG = '0'
           AND PC.PRC_CATG_CD = #prcCatgCd#
           AND PC.GLBL_CMPY_CD   = PLT.GLBL_CMPY_CD
           AND PC.EZCANCELFLAG   = PLT.EZCANCELFLAG
           AND PC.PRC_LIST_TP_CD = PLT.PRC_LIST_TP_CD
         ORDER BY PC.PRC_CATG_CD
    </statement>

    <statement id="getPrcListCustAudc" parameterClass="Map" resultMap="result.getPrcListCustAudc">
        SELECT PCA.PUB_FLG_01
             , CASE
                 WHEN PCA.LINE_BIZ_TP_CD_01 IS NOT NULL THEN #lineBizTpCd#
                 WHEN PCA.DS_ACCT_NUM_01    IS NOT NULL THEN #dsAcctNum#
                 WHEN PCA.COA_CH_CD_01      IS NOT NULL THEN #coaChCd#
                 WHEN PCA.DS_ACCT_GRP_CD_01 IS NOT NULL THEN #dsAcctGrpCd#
                 WHEN PCA.COA_BR_CD_01      IS NOT NULL THEN #coaBrCd#
                 WHEN PCA.CSMP_NUM_01       IS NOT NULL THEN #csmpNum#
                 WHEN PCA.PRC_GRP_PK_01     IS NOT NULL THEN #prcGrpPk#
                 ELSE #pub#
               END PRC_CUST_AUDC_CATG_TP_CD_01
             , CASE
                 WHEN PCA.LINE_BIZ_TP_CD_01 IS NOT NULL THEN PCA.LINE_BIZ_TP_CD_01
                 WHEN PCA.DS_ACCT_NUM_01    IS NOT NULL THEN PCA.DS_ACCT_NUM_01
                 WHEN PCA.COA_CH_CD_01      IS NOT NULL THEN PCA.COA_CH_CD_01
                 WHEN PCA.DS_ACCT_GRP_CD_01 IS NOT NULL THEN PCA.DS_ACCT_GRP_CD_01
                 WHEN PCA.COA_BR_CD_01      IS NOT NULL THEN PCA.COA_BR_CD_01
                 WHEN PCA.CSMP_NUM_01       IS NOT NULL THEN PCA.CSMP_NUM_01
                 WHEN PCA.PRC_GRP_PK_01     IS NOT NULL THEN TO_CHAR(PCA.PRC_GRP_PK_01)
               END CUST_AUDC_VAL_01
             , CASE
                 WHEN PCA.LINE_BIZ_TP_CD_01 IS NOT NULL THEN LBT01.LINE_BIZ_TP_DESC_TXT
                 WHEN PCA.DS_ACCT_NUM_01    IS NOT NULL THEN S01.DS_ACCT_NM
                 WHEN PCA.COA_CH_CD_01      IS NOT NULL THEN CC01.COA_CH_DESC_TXT
                 WHEN PCA.DS_ACCT_GRP_CD_01 IS NOT NULL THEN DAG01.DS_ACCT_GRP_DESC_TXT
                 WHEN PCA.COA_BR_CD_01      IS NOT NULL THEN CB01.COA_BR_DESC_TXT
                 WHEN PCA.CSMP_NUM_01       IS NOT NULL THEN ''
                 WHEN PCA.PRC_GRP_PK_01     IS NOT NULL THEN PG01.PRC_GRP_NM
               END CUST_AUDC_NM_01
             , CASE
                 WHEN PCA.DS_ACCT_NUM_02    IS NOT NULL THEN #dsAcctNum#
                 WHEN PCA.COA_BR_CD_02      IS NOT NULL THEN #coaBrCd#
                 WHEN PCA.CSMP_NUM_02       IS NOT NULL THEN #csmpNum#
                 WHEN PCA.DS_ACCT_GRP_CD_02 IS NOT NULL THEN #dsAcctGrpCd#
                 WHEN PCA.PRC_GRP_PK_02     IS NOT NULL THEN #prcGrpPk#
               END PRC_CUST_AUDC_CATG_TP_CD_02
             , CASE
                 WHEN PCA.DS_ACCT_NUM_02    IS NOT NULL THEN PCA.DS_ACCT_NUM_02
                 WHEN PCA.COA_BR_CD_02      IS NOT NULL THEN PCA.COA_BR_CD_02
                 WHEN PCA.CSMP_NUM_02       IS NOT NULL THEN PCA.CSMP_NUM_02
                 WHEN PCA.DS_ACCT_GRP_CD_02 IS NOT NULL THEN PCA.DS_ACCT_GRP_CD_02
                 WHEN PCA.PRC_GRP_PK_02     IS NOT NULL THEN TO_CHAR(PCA.PRC_GRP_PK_02)
               END CUST_AUDC_VAL_02
             , CASE
                 WHEN PCA.DS_ACCT_NUM_02    IS NOT NULL THEN S02.DS_ACCT_NM
                 WHEN PCA.COA_BR_CD_02      IS NOT NULL THEN CB02.COA_BR_DESC_TXT
                 WHEN PCA.CSMP_NUM_02       IS NOT NULL THEN ''
                 WHEN PCA.DS_ACCT_GRP_CD_02 IS NOT NULL THEN DAG02.DS_ACCT_GRP_DESC_TXT
                 WHEN PCA.PRC_GRP_PK_02     IS NOT NULL THEN PG02.PRC_GRP_NM
               END CUST_AUDC_NM_02
             , CASE
                 WHEN PCA.DS_ACCT_NUM_03    IS NOT NULL THEN #dsAcctNum#
                 WHEN PCA.COA_BR_CD_03      IS NOT NULL THEN #coaBrCd#
                 WHEN PCA.CSMP_NUM_03       IS NOT NULL THEN #csmpNum#
                 WHEN PCA.DS_ACCT_GRP_CD_03 IS NOT NULL THEN #dsAcctGrpCd#
                 WHEN PCA.PRC_GRP_PK_03     IS NOT NULL THEN #prcGrpPk#
               END PRC_CUST_AUDC_CATG_TP_CD_03
             , CASE
                 WHEN PCA.DS_ACCT_NUM_03    IS NOT NULL THEN PCA.DS_ACCT_NUM_03
                 WHEN PCA.COA_BR_CD_03      IS NOT NULL THEN PCA.COA_BR_CD_03
                 WHEN PCA.CSMP_NUM_03       IS NOT NULL THEN PCA.CSMP_NUM_03
                 WHEN PCA.DS_ACCT_GRP_CD_03 IS NOT NULL THEN PCA.DS_ACCT_GRP_CD_03
                 WHEN PCA.PRC_GRP_PK_03     IS NOT NULL THEN TO_CHAR(PCA.PRC_GRP_PK_03)
               END CUST_AUDC_VAL_03
             , CASE
                 WHEN PCA.DS_ACCT_NUM_03    IS NOT NULL THEN S03.DS_ACCT_NM
                 WHEN PCA.COA_BR_CD_03      IS NOT NULL THEN CB03.COA_BR_DESC_TXT
                 WHEN PCA.CSMP_NUM_03       IS NOT NULL THEN ''
                 WHEN PCA.DS_ACCT_GRP_CD_03 IS NOT NULL THEN DAG03.DS_ACCT_GRP_DESC_TXT
                 WHEN PCA.PRC_GRP_PK_03     IS NOT NULL THEN PG03.PRC_GRP_NM
               END CUST_AUDC_NM_03
             , PCA.REQ_FLG
             , PCA.EFF_FROM_DT
             , PCA.EFF_THRU_DT
             , PCA.DEF_PRC_LIST_FLG
             , PCA.PRC_CUST_AUDC_PK
             , PCA.EZUPTIME
             , PCA.EZUPTIMEZONE
          <!-- 2018/08/27 QC#27695 Mod Start -->
          <!-- FROM PRC_CUST_AUDC PCA -->
          FROM (SELECT COA_BR_CD_01
                      ,COA_BR_CD_02
                      ,COA_BR_CD_03
                      ,COA_CH_CD_01
                      ,CSMP_NUM_01
                      ,CSMP_NUM_02
                      ,CSMP_NUM_03
                      ,DEF_PRC_LIST_FLG
                      ,DS_ACCT_GRP_CD_01
                      ,DS_ACCT_GRP_CD_02
                      ,DS_ACCT_GRP_CD_03
                      ,DS_ACCT_NUM_01
                      ,DS_ACCT_NUM_02
                      ,DS_ACCT_NUM_03
                      ,EFF_FROM_DT
                      ,EFF_THRU_DT
                      ,EZCANCELFLAG
                      ,EZUPTIME
                      ,EZUPTIMEZONE
                      ,GLBL_CMPY_CD
                      ,LINE_BIZ_TP_CD_01
                      ,PRC_CUST_AUDC_PK
                      ,PRC_GRP_PK_01
                      ,PRC_GRP_PK_02
                      ,PRC_GRP_PK_03
                      ,PUB_FLG_01
                      ,REQ_FLG
                FROM  (SELECT COA_BR_CD_01
                             ,COA_BR_CD_02
                             ,COA_BR_CD_03
                             ,COA_CH_CD_01
                             ,CSMP_NUM_01
                             ,CSMP_NUM_02
                             ,CSMP_NUM_03
                             ,DEF_PRC_LIST_FLG
                             ,DS_ACCT_GRP_CD_01
                             ,DS_ACCT_GRP_CD_02
                             ,DS_ACCT_GRP_CD_03
                             ,DS_ACCT_NUM_01
                             ,DS_ACCT_NUM_02
                             ,DS_ACCT_NUM_03
                             ,EFF_FROM_DT
                             ,EFF_THRU_DT
                             ,EZCANCELFLAG
                             ,EZUPTIME
                             ,EZUPTIMEZONE
                             ,GLBL_CMPY_CD
                             ,LINE_BIZ_TP_CD_01
                             ,PRC_CUST_AUDC_PK
                             ,PRC_GRP_PK_01
                             ,PRC_GRP_PK_02
                             ,PRC_GRP_PK_03
                             ,PUB_FLG_01
                             ,REQ_FLG
                       FROM   PRC_CUST_AUDC
                       WHERE  PRC_CATG_CD  = #prcCatgCd#
                         AND  GLBL_CMPY_CD = #glblCmpyCd#
                         AND  EZCANCELFLAG = '0'
                       ORDER BY PRC_CUST_AUDC_PK)
                WHERE  ROWNUM &lt;= #rowNum#) PCA
               <!-- 2018/08/27 QC#27695 Mod End -->
             , LINE_BIZ_TP LBT01
             , SELL_TO_CUST S01
             , SELL_TO_CUST S02
             , SELL_TO_CUST S03
             , COA_CH CC01
             , DS_ACCT_GRP DAG01
             , DS_ACCT_GRP DAG02
             , DS_ACCT_GRP DAG03
             , COA_BR CB01
             , COA_BR CB02
             , COA_BR CB03
             , PRC_GRP PG01
             , PRC_GRP PG02
             , PRC_GRP PG03
         <!-- 2018/08/27 QC#27695 Mod Start -->
         <!-- WHERE PCA.GLBL_CMPY_CD = #glblCmpyCd#
           AND PCA.EZCANCELFLAG = '0'
           AND PCA.PRC_CATG_CD  = #prcCatgCd#  -->
         WHERE PCA.GLBL_CMPY_CD = LBT01.GLBL_CMPY_CD(+)
         <!-- 2018/08/27 QC#27695 Mod End -->
           AND PCA.EZCANCELFLAG = LBT01.EZCANCELFLAG(+)
           AND PCA.LINE_BIZ_TP_CD_01 = LBT01.LINE_BIZ_TP_CD(+)
           AND PCA.GLBL_CMPY_CD = S01.GLBL_CMPY_CD(+)
           AND PCA.EZCANCELFLAG = S01.EZCANCELFLAG(+)
           AND PCA.DS_ACCT_NUM_01 = S01.SELL_TO_CUST_CD(+)
           AND PCA.GLBL_CMPY_CD = S02.GLBL_CMPY_CD(+)
           AND PCA.EZCANCELFLAG = S02.EZCANCELFLAG(+)
           AND PCA.DS_ACCT_NUM_02 = S02.SELL_TO_CUST_CD(+)
           AND PCA.GLBL_CMPY_CD = S03.GLBL_CMPY_CD(+)
           AND PCA.EZCANCELFLAG = S03.EZCANCELFLAG(+)
           AND PCA.DS_ACCT_NUM_03 = S03.SELL_TO_CUST_CD(+)
           AND PCA.GLBL_CMPY_CD = CC01.GLBL_CMPY_CD(+)
           AND PCA.EZCANCELFLAG = CC01.EZCANCELFLAG(+)
           AND PCA.COA_CH_CD_01 = CC01.COA_CH_CD(+)
           AND PCA.GLBL_CMPY_CD = DAG01.GLBL_CMPY_CD(+)
           AND PCA.EZCANCELFLAG = DAG01.EZCANCELFLAG(+)
           AND PCA.DS_ACCT_GRP_CD_01 = DAG01.DS_ACCT_GRP_CD(+)
           AND PCA.GLBL_CMPY_CD = DAG02.GLBL_CMPY_CD(+)
           AND PCA.EZCANCELFLAG = DAG02.EZCANCELFLAG(+)
           AND PCA.DS_ACCT_GRP_CD_02 = DAG02.DS_ACCT_GRP_CD(+)
           AND PCA.GLBL_CMPY_CD = DAG03.GLBL_CMPY_CD(+)
           AND PCA.EZCANCELFLAG = DAG03.EZCANCELFLAG(+)
           AND PCA.DS_ACCT_GRP_CD_03 = DAG03.DS_ACCT_GRP_CD(+)
           AND PCA.GLBL_CMPY_CD = CB01.GLBL_CMPY_CD(+)
           AND PCA.EZCANCELFLAG = CB01.EZCANCELFLAG(+)
           AND PCA.COA_BR_CD_01 = CB01.COA_BR_CD(+)
           AND PCA.GLBL_CMPY_CD = CB02.GLBL_CMPY_CD(+)
           AND PCA.EZCANCELFLAG = CB02.EZCANCELFLAG(+)
           AND PCA.COA_BR_CD_02 = CB02.COA_BR_CD(+)
           AND PCA.GLBL_CMPY_CD = CB03.GLBL_CMPY_CD(+)
           AND PCA.EZCANCELFLAG = CB03.EZCANCELFLAG(+)
           AND PCA.COA_BR_CD_03 = CB03.COA_BR_CD(+)
           AND PCA.GLBL_CMPY_CD = PG01.GLBL_CMPY_CD(+)
           AND PCA.EZCANCELFLAG = PG01.EZCANCELFLAG(+)
           AND PCA.PRC_GRP_PK_01 = PG01.PRC_GRP_PK(+)
           AND #custPrcGrp#     = PG01.PRC_GRP_TP_CD(+)
           AND PCA.GLBL_CMPY_CD = PG02.GLBL_CMPY_CD(+)
           AND PCA.EZCANCELFLAG = PG02.EZCANCELFLAG(+)
           AND PCA.PRC_GRP_PK_02 = PG02.PRC_GRP_PK(+)
           AND #custPrcGrp#     = PG02.PRC_GRP_TP_CD(+)
           AND PCA.GLBL_CMPY_CD = PG03.GLBL_CMPY_CD(+)
           AND PCA.EZCANCELFLAG = PG03.EZCANCELFLAG(+)
           AND PCA.PRC_GRP_PK_03 = PG03.PRC_GRP_PK(+)
           AND #custPrcGrp#     = PG03.PRC_GRP_TP_CD(+)
           <!-- 2018/08/27 QC#27695 Mod Start -->
           AND ROWNUM &lt;= #rowNum#
           ORDER BY PCA.PRC_CUST_AUDC_PK
           <!-- 2018/08/27 QC#27695 Mod End -->
    </statement>
    <resultMap id="result.getPrcListCustAudc" class="NMAL7010_XCMsg">
        <result property="pubFlg_CX"            column="PUB_FLG_01"                  javaType="EZDCStringItem"/>
        <result property="prcCustAudcCatgCd_X1" column="PRC_CUST_AUDC_CATG_TP_CD_01" javaType="EZDCStringItem"/>
        <result property="xxScrItem30Txt_X1"    column="CUST_AUDC_VAL_01"            javaType="EZDCStringItem"/>
        <result property="xxRecNmTxt_X1"        column="CUST_AUDC_NM_01"             javaType="EZDCStringItem"/>
        <result property="prcCustAudcCatgCd_X2" column="PRC_CUST_AUDC_CATG_TP_CD_02" javaType="EZDCStringItem"/>
        <result property="xxScrItem30Txt_X2"    column="CUST_AUDC_VAL_02"            javaType="EZDCStringItem"/>
        <result property="xxRecNmTxt_X2"        column="CUST_AUDC_NM_02"             javaType="EZDCStringItem"/>
        <result property="prcCustAudcCatgCd_X3" column="PRC_CUST_AUDC_CATG_TP_CD_03" javaType="EZDCStringItem"/>
        <result property="xxScrItem30Txt_X3"    column="CUST_AUDC_VAL_03"            javaType="EZDCStringItem"/>
        <result property="xxRecNmTxt_X3"        column="CUST_AUDC_NM_03"             javaType="EZDCStringItem"/>
        <result property="reqFlg_CX"            column="REQ_FLG"                     javaType="EZDCStringItem"/>
        <result property="effFromDt_CX"         column="EFF_FROM_DT"                 javaType="EZDCDateItem"/>
        <result property="effThruDt_CX"         column="EFF_THRU_DT"                 javaType="EZDCDateItem"/>
        <result property="defPrcListFlg_CX"     column="DEF_PRC_LIST_FLG"            javaType="EZDCStringItem"/>
        <result property="prcCustAudcPk_CX"     column="PRC_CUST_AUDC_PK"            javaType="EZDCBigDecimalItem"/>
        <result property="ezUpTime_CX"          column="EZUPTIME"                    javaType="EZDCStringItem"/>
        <result property="ezUpTimeZone_CX"      column="EZUPTIMEZONE"                javaType="EZDCStringItem"/>
    </resultMap>

    <statement id="getPrcListTrxAudc" parameterClass="Map" resultMap="result.getPrcListTrxAudc">
        SELECT CASE
                 WHEN PTA.PRC_GRP_PK        IS NOT NULL THEN #prcGrpPk#
                 WHEN PTA.DS_ORD_CATG_CD    IS NOT NULL THEN #dsOrdCatg#
                 WHEN PTA.DS_ORD_TP_CD_01   IS NOT NULL THEN #dsOrdTp#
               END PRC_TRX_AUDC_CATG_TP_CD_01
             , CASE
                 WHEN PTA.PRC_GRP_PK        IS NOT NULL THEN TO_CHAR(PTA.PRC_GRP_PK)
                 WHEN PTA.DS_ORD_CATG_CD    IS NOT NULL THEN PTA.DS_ORD_CATG_CD
                 WHEN PTA.DS_ORD_TP_CD_01   IS NOT NULL THEN PTA.DS_ORD_TP_CD_01
               END TRX_AUDC_VAL_01
             , CASE
                 WHEN PTA.PRC_GRP_PK        IS NOT NULL THEN PG01.PRC_GRP_NM
                 WHEN PTA.DS_ORD_CATG_CD    IS NOT NULL THEN DOC01.DS_ORD_CATG_NM
                 WHEN PTA.DS_ORD_TP_CD_01   IS NOT NULL THEN DOT01.DS_ORD_TP_NM
               END TRX_AUDC_NM_01
             , CASE
                 WHEN PTA.DS_ORD_TP_CD_02   IS NOT NULL THEN #dsOrdTp#
               END PRC_TRX_AUDC_CATG_TP_CD_02
             , CASE
                 WHEN PTA.DS_ORD_TP_CD_02   IS NOT NULL THEN PTA.DS_ORD_TP_CD_02
               END TRX_AUDC_VAL_02
             , CASE
                 WHEN PTA.DS_ORD_TP_CD_02   IS NOT NULL THEN DOT02.DS_ORD_TP_DESC_TXT
               END TRX_AUDC_NM_02
             , PTA.EFF_FROM_DT
             , PTA.EFF_THRU_DT
             , PTA.PRC_TRX_AUDC_PK
             , PTA.EZUPTIME
             , PTA.EZUPTIMEZONE
          FROM PRC_TRX_AUDC PTA
             , PRC_GRP PG01
             , DS_ORD_CATG DOC01
             , DS_ORD_TP DOT01
             , DS_ORD_TP DOT02
         WHERE PTA.GLBL_CMPY_CD = #glblCmpyCd#
           AND PTA.EZCANCELFLAG = '0'
           AND PTA.PRC_CATG_CD  = #prcCatgCd#
           AND PTA.GLBL_CMPY_CD = PG01.GLBL_CMPY_CD(+)
           AND PTA.EZCANCELFLAG = PG01.EZCANCELFLAG(+)
           AND PTA.PRC_GRP_PK   = PG01.PRC_GRP_PK(+)
           AND #trxPrcGrp#      = PG01.PRC_GRP_TP_CD(+)
           AND PTA.GLBL_CMPY_CD = DOC01.GLBL_CMPY_CD(+)
           AND PTA.EZCANCELFLAG = DOC01.EZCANCELFLAG(+)
           AND PTA.DS_ORD_CATG_CD = DOC01.DS_ORD_CATG_CD(+)
           AND PTA.GLBL_CMPY_CD = DOT01.GLBL_CMPY_CD(+)
           AND PTA.EZCANCELFLAG = DOT01.EZCANCELFLAG(+)
           AND PTA.DS_ORD_TP_CD_01 = DOT01.DS_ORD_TP_CD(+)
           AND PTA.GLBL_CMPY_CD = DOT02.GLBL_CMPY_CD(+)
           AND PTA.EZCANCELFLAG = DOT02.EZCANCELFLAG(+)
           AND PTA.DS_ORD_TP_CD_02 = DOT02.DS_ORD_TP_CD(+)
         ORDER BY PTA.PRC_TRX_AUDC_PK
    </statement>
    <resultMap id="result.getPrcListTrxAudc" class="NMAL7010_YCMsg">
        <result property="prcTrxAudcCatgCd_Y1"  column="PRC_TRX_AUDC_CATG_TP_CD_01" javaType="EZDCStringItem"/>
        <result property="xxScrItem30Txt_Y1"    column="TRX_AUDC_VAL_01"            javaType="EZDCStringItem"/>
        <result property="xxRecNmTxt_Y1"        column="TRX_AUDC_NM_01"             javaType="EZDCStringItem"/>
        <result property="prcTrxAudcCatgCd_Y2"  column="PRC_TRX_AUDC_CATG_TP_CD_02" javaType="EZDCStringItem"/>
        <result property="xxScrItem30Txt_Y2"    column="TRX_AUDC_VAL_02"            javaType="EZDCStringItem"/>
        <result property="xxRecNmTxt_Y2"        column="TRX_AUDC_NM_02"             javaType="EZDCStringItem"/>
        <result property="effFromDt_TY"         column="EFF_FROM_DT"                javaType="EZDCDateItem"/>
        <result property="effThruDt_TY"         column="EFF_THRU_DT"                javaType="EZDCDateItem"/>
        <result property="prcTrxAudcPk_TY"      column="PRC_TRX_AUDC_PK"            javaType="EZDCBigDecimalItem"/>
        <result property="ezUpTime_TY"          column="EZUPTIME"                   javaType="EZDCStringItem"/>
        <result property="ezUpTimeZone_TY"      column="EZUPTIMEZONE"               javaType="EZDCStringItem"/>
    </resultMap>

    <statement id="getPrcListValEquip" parameterClass="Map" resultMap="result.getPrcListValEquip">
        SELECT
          *
        FROM
        (
           SELECT
                A.*
              , CASE
                  WHEN A.DEL_FLG = #flgY#
                    THEN #stsDeleted#
                  WHEN #slsDt# BETWEEN A.EFF_FROM_DT AND NVL(A.EFF_THRU_DT, #highValDt#)
                    THEN #stsActive#
                  ELSE #stsInactive#
                END        AS XX_SCR_STS_TXT
              , CASE
                  WHEN EXISTS (
                      SELECT 1
                      FROM
                          PRC_LIST_EQUIP_DTL PLED
                      WHERE
                          PLED.GLBL_CMPY_CD      = #glblCmpyCd#
                      AND PLED.PRC_LIST_EQUIP_PK = A.PRC_LIST_EQUIP_PK
                      AND PLED.EZCANCELFLAG      = '0'
                    )
                  THEN #flgY#
                  ELSE #flgN#
                END        AS XX_YES_NO_CD_PA
            FROM (
                SELECT 
                       <!-- QC#60613 Add -->
                       /*+ NO_MERGE(AMV) PUSH_PRED(AMV) MONITOR */
                       <!-- QC#60613 End -->
                       PLE.PRC_LIST_EQUIP_CONFIG_NUM
                     , PLE.PRC_LIST_EQUIP_CONFIG_NM
                     , PLE.PRC_QLFY_TP_CD
                     , PLE.PRC_QLFY_VAL_TXT
                     , CASE WHEN PLE.PRC_QLFY_TP_CD = '01' THEN AMV.MDSE_DESC_SHORT_TXT 
                            WHEN PLE.PRC_QLFY_TP_CD = '02' THEN CPJ2.COA_PROJ_DESC_TXT
                            WHEN PLE.PRC_QLFY_TP_CD = '03' THEN PC.PROD_CTRL_DESC_TXT
                            WHEN PLE.PRC_QLFY_TP_CD = '04' THEN PC.PROD_CTRL_DESC_TXT
                            WHEN PLE.PRC_QLFY_TP_CD = '05' THEN PC.PROD_CTRL_DESC_TXT
                            WHEN PLE.PRC_QLFY_TP_CD = '06' THEN PC.PROD_CTRL_DESC_TXT
                            WHEN PLE.PRC_QLFY_TP_CD = '07' THEN PC.PROD_CTRL_DESC_TXT
                        END MDSE_DESC_SHORT_TXT
                     <!-- 2018/07/17 QC#20267 Mod Start -->
                     , CASE WHEN PLE.PRC_QLFY_TP_CD = '01' THEN AMV.MNF_ITEM_CD 
                        END MNF_ITEM_CD
                     <!-- 2018/07/17 QC#20267 Mod End -->
                     , AMV.COA_MDSE_TP_CD
                     , CPJ.COA_PROJ_NM      COA_MDSE_TP_NM
                     , MIT.MDSE_ITEM_TP_NM
                     , CP.COA_PROD_NM
                     , MM.MKT_MDL_NM T_MDL_NM
                  -- , PLE.PKG_UOM_CD              -- QC7958
                     , DECODE( PLE.PRC_QLFY_TP_CD, #prcQlfyTpCdItem#
                          ,NVL((
                               SELECT
                               <!-- 2018/05/16 S21_NA#26015 Mod Start -->
                                   <!-- NVL(BASE_PKG_UOM_CD, PKG_UOM_CD)  -->
                                   PKG_UOM_CD
                               <!-- 2018/05/16 S21_NA#26015 Mod End -->
                               FROM
                                   MDSE_STORE_PKG  MSP
                               WHERE
                                   MSP.GLBL_CMPY_CD = #glblCmpyCd#
                               AND MSP.EZCANCELFLAG = '0'
                               AND MSP.MDSE_CD      = NVL((
                                                           SELECT
                                                               MDSE_CD
                                                           FROM
                                                               ORD_TAKE_MDSE OTM
                                                           WHERE
                                                               OTM.GLBL_CMPY_CD     = #glblCmpyCd#
                                                           AND OTM.EZCANCELFLAG     = '0'
                                                           AND OTM.ORD_TAKE_MDSE_CD = PLE.PRC_QLFY_VAL_TXT
                                                         ), PLE.PRC_QLFY_VAL_TXT
                                                       )
                               AND PKG_UOM_CD        = PLE.PKG_UOM_CD
                             )
                            , PLE.PKG_UOM_CD
                          ) , PLE.PKG_UOM_CD  -- no item
                       )  AS PKG_UOM_CD
                     , CASE WHEN AMV.ZEROTH_PROD_CTRL_CD IS NULL THEN NULL
                            ELSE AMV.ZEROTH_PROD_CTRL_CD || ':' || ZEROTH_PROD_CTRL_NM 
                       END ZEROTH_PROD_CTRL
                     , CASE WHEN AMV.FIRST_PROD_CTRL_CD IS NULL THEN NULL
                            ELSE AMV.FIRST_PROD_CTRL_CD || ':' || FIRST_PROD_CTRL_NM 
                       END FIRST_PROD_CTRL
                     , CASE WHEN AMV.SCD_PROD_CTRL_CD IS NULL THEN NULL
                            ELSE AMV.SCD_PROD_CTRL_CD || ':' || SCD_PROD_CTRL_NM 
                       END SCD_PROD_CTRL
                     , CASE WHEN AMV.THIRD_PROD_CTRL_CD IS NULL THEN NULL
                            ELSE AMV.THIRD_PROD_CTRL_CD || ':' || THIRD_PROD_CTRL_NM 
                       END THIRD_PROD_CTRL
                     , CASE WHEN AMV.FRTH_PROD_CTRL_CD IS NULL THEN NULL
                            ELSE AMV.FRTH_PROD_CTRL_CD || ':' || FRTH_PROD_CTRL_NM 
                       END FRTH_PROD_CTRL
                     , PLE.PRC_LIST_EQUIP_PRC_AMT
                     , PLE.MIN_PRC_AMT
                     , PLE.MAX_PRC_AMT
                     , PLE.PRC_TERM_UOM_CD
                     , PLE.PRC_TERM_AOT
                     , PLE.CUST_BID_QTY
                     , PLE.MLY_PMT_AMT
                     , PLE.MIN_LEASE_PMT_AMT
                     , PLE.MAX_LEASE_PMT_AMT
                     , PLE.PRC_FMLA_PK
                     , PF.PRC_FMLA_NM
                     , PLE.OPEN_MKT_FLG
                     , PLE.QUOT_REV_AMT
                     , PLE.COMP_CD
                     , PLE.EFF_FROM_DT
                     , PLE.EFF_THRU_DT
                     , PLE.DEL_FLG
                     , PLE.PRC_LIST_EQUIP_PK
                     , SUBSTR(PLE.EZINTIME, 1, 8)    CRAT_DT
                     , CASE
                         WHEN AP1.FIRST_NM IS NOT NULL THEN PLE.EZINUSERID || '(' || AP1.FIRST_NM || ' ' || AP1.LAST_NM || ')'
                         ELSE PLE.EZINUSERID
                       END CRAT_USR_NM
                     , SUBSTR(PLE.EZUPTIME, 1, 8)    UPD_DT
                     , CASE
                         WHEN AP2.FIRST_NM IS NOT NULL THEN PLE.EZUPUSERID || '(' || AP2.FIRST_NM || ' ' || AP2.LAST_NM || ')'
                         ELSE PLE.EZUPUSERID
                       END UPD_USR_NM
                     , PLE.EZUPTIME
                     , PLE.EZUPTIMEZONE
                     <isNotNull property="isDownload">
                     , (  SELECT
                              A.PRC_QLFY_TP_NM
                          FROM
                              PRC_QLFY_TP A
                          WHERE A.GLBL_CMPY_CD   = #glblCmpyCd#
                            AND A.EZCANCELFLAG   = '0'
                            AND A.PRC_QLFY_TP_CD = PLE.PRC_QLFY_TP_CD
                       ) AS PRC_QLFY_TP_NM
                       <!-- Mod Start 2018/05/28 QC#26286
                     , (  SELECT
                              A.PKG_UOM_NM

                          FROM
                              PKG_UOM A
                          WHERE A.GLBL_CMPY_CD   = #glblCmpyCd#
                            AND A.EZCANCELFLAG   = '0'
                            AND A.PKG_UOM_CD     = PLE.PKG_UOM_CD
                        -->
                     , (  SELECT
                              PU.PKG_UOM_DESC_TXT
                          FROM
                              PKG_UOM PU
                            , MDSE_STORE_PKG MSP
                            , MDSE M
                          WHERE 
                                PLE.GLBL_CMPY_CD                        = M.GLBL_CMPY_CD
                            AND PLE.EZCANCELFLAG                        = M.EZCANCELFLAG
                            AND PLE.PRC_QLFY_VAL_TXT                    = M.MDSE_CD

                            AND PLE.GLBL_CMPY_CD                        = MSP.GLBL_CMPY_CD
                            AND PLE.EZCANCELFLAG                        = MSP.EZCANCELFLAG
                            AND PLE.PKG_UOM_CD                          = MSP.PKG_UOM_CD
                            AND M.MDSE_CD                               = MSP.MDSE_CD

                            AND MSP.GLBL_CMPY_CD                        = PU.GLBL_CMPY_CD
                            AND MSP.EZCANCELFLAG                        = PU.EZCANCELFLAG
                            AND NVL(MSP.BASE_PKG_UOM_CD,MSP.PKG_UOM_CD) = PU.PKG_UOM_CD

                          UNION ALL

                          SELECT
                              PU.PKG_UOM_DESC_TXT
                          FROM
                                PKG_UOM PU
                              , MDSE_STORE_PKG MSP
                              , ORD_TAKE_MDSE OTM
                          WHERE
                                PLE.GLBL_CMPY_CD                        = OTM.GLBL_CMPY_CD
                            AND PLE.EZCANCELFLAG                        = OTM.EZCANCELFLAG
                            AND PLE.PRC_QLFY_VAL_TXT                    = OTM.ORD_TAKE_MDSE_CD

                            AND PLE.GLBL_CMPY_CD                        = MSP.GLBL_CMPY_CD
                            AND PLE.EZCANCELFLAG                        = MSP.EZCANCELFLAG
                            AND PLE.PKG_UOM_CD                          = MSP.PKG_UOM_CD
                            AND OTM.MDSE_CD                             = MSP.MDSE_CD

                            AND MSP.GLBL_CMPY_CD                        = PU.GLBL_CMPY_CD
                            AND MSP.EZCANCELFLAG                        = PU.EZCANCELFLAG
                            AND NVL(MSP.BASE_PKG_UOM_CD,MSP.PKG_UOM_CD) = PU.PKG_UOM_CD
                       <!-- Mod End 2018/05/28 QC#26286 -->
                       ) AS PKG_UOM_DESC_TXT
                     , (  SELECT
                              A.PRC_TERM_UOM_NM
                          FROM
                              PRC_TERM_UOM A
                          WHERE A.GLBL_CMPY_CD    = #glblCmpyCd#
                            AND A.EZCANCELFLAG    = '0'
                            AND A.PRC_TERM_UOM_CD = PLE.PRC_TERM_UOM_CD
                       ) AS PRC_TERM_UOM_NM
                     </isNotNull>
                  FROM PRC_LIST_EQUIP PLE
                     , ALL_MDSE_V AMV
                     , COA_PROJ CPJ
                     , MDSE_ITEM_TP MIT
                     , COA_PROD CP
                     , PRC_FMLA PF
                     , AUTH_PSN AP1
                     , AUTH_PSN AP2
                     , COA_PROJ CPJ2
                     , PROD_CTRL PC
                     , MKT_MDL MM
                 WHERE PLE.GLBL_CMPY_CD = #glblCmpyCd#
                   AND PLE.EZCANCELFLAG = '0'
                   AND PLE.PRC_CATG_CD  = #prcCatgCd#
                   AND PLE.GLBL_CMPY_CD = AMV.GLBL_CMPY_CD(+)
                   AND PLE.EZCANCELFLAG = AMV.EZCANCELFLAG(+)
                   AND PLE.PRC_QLFY_VAL_TXT = AMV.MDSE_CD(+)
                   AND AMV.GLBL_CMPY_CD = CPJ.GLBL_CMPY_CD(+)
                   AND AMV.EZCANCELFLAG = CPJ.EZCANCELFLAG(+)
                   AND AMV.COA_MDSE_TP_CD = CPJ.COA_PROJ_CD(+)
                   AND AMV.GLBL_CMPY_CD = MIT.GLBL_CMPY_CD(+)
                   AND AMV.EZCANCELFLAG = MIT.EZCANCELFLAG(+)
                   AND AMV.MDSE_ITEM_TP_CD = MIT.MDSE_ITEM_TP_CD(+)
                   AND AMV.GLBL_CMPY_CD   = CP.GLBL_CMPY_CD(+)
                   AND AMV.EZCANCELFLAG   = CP.EZCANCELFLAG(+)
                   AND AMV.COA_PROD_CD    = CP.COA_PROD_CD(+)
                   AND PLE.GLBL_CMPY_CD = PF.GLBL_CMPY_CD(+)
                   AND PLE.EZCANCELFLAG = PF.EZCANCELFLAG(+)
                   AND PLE.PRC_FMLA_PK  = PF.PRC_FMLA_PK(+)
                   AND PLE.GLBL_CMPY_CD = AP1.GLBL_CMPY_CD(+)
                   AND PLE.EZCANCELFLAG = AP1.EZCANCELFLAG(+)
                   AND PLE.EZINUSERID   = AP1.USR_NM(+)
                   AND PLE.GLBL_CMPY_CD = AP2.GLBL_CMPY_CD(+)
                   AND PLE.EZCANCELFLAG = AP2.EZCANCELFLAG(+)
                   AND PLE.EZUPUSERID   = AP2.USR_NM(+)
                   AND PLE.GLBL_CMPY_CD = CPJ2.GLBL_CMPY_CD(+)
                   AND PLE.EZCANCELFLAG = CPJ2.EZCANCELFLAG(+)
                   AND PLE.PRC_QLFY_VAL_TXT = CPJ2.COA_PROJ_CD(+)
                   AND PLE.GLBL_CMPY_CD = PC.GLBL_CMPY_CD(+)
                   AND PLE.EZCANCELFLAG = PC.EZCANCELFLAG(+)
                   AND PLE.PRC_QLFY_VAL_TXT = PC.PROD_CTRL_CD(+)
                   AND AMV.MKT_MDL_CD   = MM.MKT_MDL_CD(+)
                   
                <isEqual property="prcDispRecTpCd" compareValue="01">
                   AND PLE.DEL_FLG = #flgN#
                   AND PLE.EFF_FROM_DT &lt;= #slsDt#
                   AND NVL(PLE.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#
                </isEqual>
                <isEqual property="prcDispRecTpCd" compareValue="02">
                   AND PLE.DEL_FLG = #flgN#
                   AND (PLE.EFF_FROM_DT &gt; #slsDt#
                       OR
                        NVL(PLE.EFF_THRU_DT, #highValDt#) &lt; #slsDt#
                       )
                </isEqual>
                <isEqual property="prcDispRecTpCd" compareValue="03">
                   AND PLE.DEL_FLG = #flgY#
                </isEqual>
                <isEqual property="prcDispRecTpCd" compareValue="04">
                   AND PLE.DEL_FLG = #flgN#
                   AND (
                        (PLE.EFF_FROM_DT &lt;= #slsDt# AND NVL(PLE.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#)
                        OR
                        (PLE.EFF_FROM_DT &gt; #slsDt# OR NVL(PLE.EFF_THRU_DT, #highValDt#) &lt; #slsDt#)
                       )
                </isEqual>
                <isNotNull property="prcQlfyTpCd_D1">
                   AND PLE.PRC_QLFY_TP_CD = #prcQlfyTpCd_D1#
                </isNotNull>
                <!-- 2018/11/27 QC#29319 Mod Start -->
                <!-- isNotNull property="prcQlfyValTxt_D1"-->
                <!--    AND PLE.PRC_QLFY_VAL_TXT LIKE #prcQlfyValTxt_D1# -->
                <!-- /isNotNull-->
                <isNotNull property="xxPrcQlfyValSrchTxt_D1">
                <iterate property="xxPrcQlfyValSrchTxt_D1" var="xxPrcQlfyValSrchTxtD1[]" open="AND (" close=")" conjunction="OR">
                   PLE.PRC_QLFY_VAL_TXT LIKE #xxPrcQlfyValSrchTxtD1[]#
                </iterate>
                </isNotNull>
                <!-- 2018/11/27 QC#29319 Mod End -->
                <isNotNull property="prcListEquipConfigNum_D1">
                   AND PLE.PRC_LIST_EQUIP_CONFIG_NUM = #prcListEquipConfigNum_D1#
                </isNotNull>
                <isNotNull property="prcListEquipConfigNm_D1">
                   AND UPPER(PLE.PRC_LIST_EQUIP_CONFIG_NM) LIKE #prcListEquipConfigNm_D1#
                </isNotNull>
                <isNotNull property="coaProjNm_Z1">
                   AND UPPER(CPJ.COA_PROJ_NM) = #coaProjNm_Z1#
                </isNotNull>
                <isNotNull property="mdseItemTpNm_Z1">
                   AND UPPER(MIT.MDSE_ITEM_TP_NM) = #mdseItemTpNm_Z1#
                </isNotNull>
                <isNotNull property="coaProdNm_Z1">
                   AND UPPER(CP.COA_PROD_NM) = #coaProdNm_Z1#
                </isNotNull>
                <!-- 2018/11/27 QC#29319 Mod Start -->
                <!-- isNotNull property="t_MdlNm_Z1"-->
                <!--    AND UPPER(MM.MKT_MDL_NM) LIKE #t_MdlNm_Z1# -->
                <!-- /isNotNull-->
                <isNotNull property="xxTMdlNmSrchTxt_Z1">
                <iterate property="xxTMdlNmSrchTxt_Z1" var="xxTMdlNmSrchTxtZ1[]" open="AND (" close=")" conjunction="OR">
                   UPPER(MM.MKT_MDL_NM) LIKE #xxTMdlNmSrchTxtZ1[]#
                </iterate>
                </isNotNull>
                <!-- 2018/11/27 QC#29319 Mod End -->
                <isNotNull property="zerothProdCtrlCd_Z1">
                   AND AMV.ZEROTH_PROD_CTRL_CD = #zerothProdCtrlCd_Z1#
                </isNotNull>
                <isNotNull property="firstProdCtrlCd_Z1">
                   AND AMV.FIRST_PROD_CTRL_CD = #firstProdCtrlCd_Z1#
                </isNotNull>
                <isNotNull property="scdProdCtrlCd_Z1">
                   AND AMV.SCD_PROD_CTRL_CD = #scdProdCtrlCd_Z1#
                </isNotNull>
                <isNotNull property="thirdProdCtrlCd_Z1">
                   AND AMV.THIRD_PROD_CTRL_CD = #thirdProdCtrlCd_Z1#
                </isNotNull>
                <isNotNull property="frthProdCtrlCd_Z1">
                   AND AMV.FRTH_PROD_CTRL_CD = #frthProdCtrlCd_Z1#
                </isNotNull>
                <isNotNull property="prcTermAot_Z1">
                   AND PLE.PRC_TERM_AOT = #prcTermAot_Z1#
                </isNotNull>
                <isNotNull property="prcTermUomCd_Z1">
                   AND PLE.PRC_TERM_UOM_CD = #prcTermUomCd_Z1#
                </isNotNull>
                <isNotNull property="custBidQty_Z1">
                   AND PLE.CUST_BID_QTY = #custBidQty_Z1#
                </isNotNull>
                <isNotNull property="prcFmlaNm_Z1">
                   AND UPPER(PF.PRC_FMLA_NM) LIKE #prcFmlaNm_Z1#
                </isNotNull>
                <isNotNull property="openMktFlg_Z1">
                   AND PLE.OPEN_MKT_FLG = #openMktFlg_Z1#
                </isNotNull>
                <isNotNull property="compCd_Z1">
                   AND UPPER(PLE.COMP_CD) = #compCd_Z1#
                </isNotNull>
                <isNotNull property="mdseDescShortTxt_Z1">
                   AND (
                         (PLE.PRC_QLFY_TP_CD = '01' AND UPPER(AMV.MDSE_DESC_SHORT_TXT) LIKE #mdseDescShortTxt_Z1#)
                      OR (PLE.PRC_QLFY_TP_CD = '02' AND UPPER(CPJ2.COA_PROJ_DESC_TXT) LIKE #mdseDescShortTxt_Z1#)
                      OR (PLE.PRC_QLFY_TP_CD = '03' AND UPPER(PC.PROD_CTRL_DESC_TXT) LIKE #mdseDescShortTxt_Z1#)
                      OR (PLE.PRC_QLFY_TP_CD = '04' AND UPPER(PC.PROD_CTRL_DESC_TXT) LIKE #mdseDescShortTxt_Z1#)
                      OR (PLE.PRC_QLFY_TP_CD = '05' AND UPPER(PC.PROD_CTRL_DESC_TXT) LIKE #mdseDescShortTxt_Z1#)
                      OR (PLE.PRC_QLFY_TP_CD = '06' AND UPPER(PC.PROD_CTRL_DESC_TXT) LIKE #mdseDescShortTxt_Z1#)
                      OR (PLE.PRC_QLFY_TP_CD = '07' AND UPPER(PC.PROD_CTRL_DESC_TXT) LIKE #mdseDescShortTxt_Z1#)
                   )
                </isNotNull>
                <!-- 2018/07/17 QC#20267 Mod Start -->
                <!-- 2018/11/27 QC#29319 Mod Start -->
                <!-- isNotNull property="mnfItemCd_Z1"-->
                <!--    AND PLE.PRC_QLFY_TP_CD = '01' AND UPPER(AMV.MNF_ITEM_CD) LIKE #mnfItemCd_Z1# -->
                <!-- /isNotNull-->
                <isNotNull property="xxMnfItemCdSrchTxt_Z1">
                <iterate property="xxMnfItemCdSrchTxt_Z1" var="xxMnfItemCdSrchTxtZ1[]" open="AND PLE.PRC_QLFY_TP_CD = '01' AND (" close=")" conjunction="OR">
                    UPPER(AMV.MNF_ITEM_CD) LIKE #xxMnfItemCdSrchTxtZ1[]#
                </iterate>
                </isNotNull>
               <!-- 2018/11/27 QC#29319 Mod End -->
                <isNotNull property="xxYesNoCd_Z1">
                   AND
                   <isEqual property="xxYesNoCd_Z1" compareValue="N">
                      NOT
                   </isEqual>
                   EXISTS (
                          SELECT 1
                          FROM
                              PRC_LIST_EQUIP_DTL PLED
                          WHERE
                              PLED.GLBL_CMPY_CD      = #glblCmpyCd#
                          AND PLED.PRC_LIST_EQUIP_PK = PLE.PRC_LIST_EQUIP_PK
                          AND PLED.EZCANCELFLAG      = '0'
                        )
                </isNotNull>
                <isNotNull property="effFromDt_Z1">
                   AND PLE.EFF_FROM_DT &gt;= #effFromDt_Z1#
                </isNotNull>
                <isNotNull property="effFromDt_Z2">
                   AND PLE.EFF_FROM_DT &lt;= #effFromDt_Z2#
                </isNotNull>
                <isNotNull property="effThruDt_Z1">
                   AND NVL(PLE.EFF_THRU_DT, #highValDt#) &gt;= #effThruDt_Z1#
                </isNotNull>
                <isNotNull property="effThruDt_Z2">
                   AND NVL(PLE.EFF_THRU_DT, #highValDt#) &lt;= #effThruDt_Z2#
                </isNotNull>
                <isNotNull property="cratDt_Z1">
                   AND PLE.EZINTIME &gt;= #cratDt_Z1#
                </isNotNull>
                <isNotNull property="cratDt_Z2">
                   AND PLE.EZINTIME &lt;= #cratDt_Z2# || #highValTm#
                </isNotNull>
                <isNotNull property="lastUpdDt_Z1">
                   AND PLE.EZUPTIME &gt;= #lastUpdDt_Z1#
                </isNotNull>
                <isNotNull property="lastUpdDt_Z2">
                   AND PLE.EZUPTIME &lt;= #lastUpdDt_Z2# || #highValTm#
                </isNotNull>
                <isNotNull property="xxFullNm_Z1">
                   AND (
                           PLE.EZINUSERID = #xxFullNm_Z1#
                      OR (     AP1.FIRST_NM IS NOT NULL
                           AND UPPER(AP1.FIRST_NM || ' ' || AP1.LAST_NM) LIKE #xxFullNm_Z1#
                         )
                     )
                </isNotNull>
                <isNotNull property="xxFullNm_Z2">
                   AND (
                           PLE.EZUPUSERID = #xxFullNm_Z2#
                      OR (     AP2.FIRST_NM IS NOT NULL
                           AND UPPER(AP2.FIRST_NM || ' ' || AP2.LAST_NM) LIKE #xxFullNm_Z2#
                         )
                     )
                </isNotNull>
                <isNotNull property="prcListEquipPk">
                   AND PLE.PRC_LIST_EQUIP_PK = #prcListEquipPk#
                </isNotNull>
                ) A
             <isNotNull property="pkgUomCd_D1">
             WHERE
                A.PKG_UOM_CD = #pkgUomCd_D1#
             </isNotNull>
             ORDER BY A.PRC_LIST_EQUIP_PK
         )
         <isNotNull property="rowNum">
         WHERE ROWNUM &lt;= #rowNum#
         </isNotNull>
     </statement>


    <resultMap id="result.getPrcListValEquip" class="NMAL7010_ASMsg">
        <result property="prcListEquipConfigNum_PA"  column="PRC_LIST_EQUIP_CONFIG_NUM" javaType="EZDSBigDecimalItem"/>
        <result property="prcListEquipConfigNm_PA"   column="PRC_LIST_EQUIP_CONFIG_NM"  javaType="EZDSStringItem"/>
        <result property="prcQlfyTpCd_PA"            column="PRC_QLFY_TP_CD"            javaType="EZDSStringItem"/>
        <result property="prcQlfyValTxt_PA"          column="PRC_QLFY_VAL_TXT"          javaType="EZDSStringItem"/>
        <result property="mnfItemCd_PA"              column="MNF_ITEM_CD"               javaType="EZDSStringItem"/>
        <result property="mdseDescShortTxt_PA"       column="MDSE_DESC_SHORT_TXT"       javaType="EZDSStringItem"/>
        <result property="coaProjCd_PA"              column="COA_MDSE_TP_CD"            javaType="EZDSStringItem"/>
        <result property="coaProjNm_PA"              column="COA_MDSE_TP_NM"            javaType="EZDSStringItem"/>
        <result property="mdseItemTpNm_PA"           column="MDSE_ITEM_TP_NM"           javaType="EZDSStringItem"/>
        <result property="coaProdNm_PA"              column="COA_PROD_NM"               javaType="EZDSStringItem"/>
        <result property="t_MdlNm_PA"                column="T_MDL_NM"                  javaType="EZDSStringItem"/>
        <result property="mdseDescShortTxt_PA"       column="MDSE_DESC_SHORT_TXT"       javaType="EZDSStringItem"/>
        <result property="pkgUomCd_PA"               column="PKG_UOM_CD"                javaType="EZDSStringItem"/>
        <result property="xxScrItem61Txt_P0"         column="ZEROTH_PROD_CTRL"          javaType="EZDSStringItem"/>
        <result property="xxScrItem61Txt_P1"         column="FIRST_PROD_CTRL"           javaType="EZDSStringItem"/>
        <result property="xxScrItem61Txt_P2"         column="SCD_PROD_CTRL"             javaType="EZDSStringItem"/>
        <result property="xxScrItem61Txt_P3"         column="THIRD_PROD_CTRL"           javaType="EZDSStringItem"/>
        <result property="xxScrItem61Txt_P4"         column="FRTH_PROD_CTRL"            javaType="EZDSStringItem"/>
        <result property="prcListEquipPrcAmt_PA"     column="PRC_LIST_EQUIP_PRC_AMT"    javaType="EZDSBigDecimalItem"/>
        <result property="minPrcAmt_PA"              column="MIN_PRC_AMT"               javaType="EZDSBigDecimalItem"/>
        <result property="maxPrcAmt_PA"              column="MAX_PRC_AMT"               javaType="EZDSBigDecimalItem"/>
        <result property="prcTermAot_PA"             column="PRC_TERM_AOT"              javaType="EZDSBigDecimalItem"/>
        <result property="prcTermUomCd_PA"           column="PRC_TERM_UOM_CD"           javaType="EZDSStringItem"/>
        <result property="custBidQty_PA"             column="CUST_BID_QTY"              javaType="EZDSBigDecimalItem"/>
        <result property="mlyPmtAmt_PA"              column="MLY_PMT_AMT"               javaType="EZDSBigDecimalItem"/>
        <result property="minLeasePmtAmt_PA"         column="MIN_LEASE_PMT_AMT"         javaType="EZDSBigDecimalItem"/>
        <result property="maxLeasePmtAmt_PA"         column="MAX_LEASE_PMT_AMT"         javaType="EZDSBigDecimalItem"/>
        <result property="prcFmlaPk_PA"              column="PRC_FMLA_PK"               javaType="EZDSBigDecimalItem"/>
        <result property="prcFmlaNm_PA"              column="PRC_FMLA_NM"               javaType="EZDSStringItem"/>
        <result property="openMktFlg_PA"             column="OPEN_MKT_FLG"              javaType="EZDSStringItem"/>
        <result property="quotRevAmt_PA"             column="QUOT_REV_AMT"              javaType="EZDSBigDecimalItem"/>
        <result property="compCd_PA"                 column="COMP_CD"                   javaType="EZDSStringItem"/>
        <result property="effFromDt_PA"              column="EFF_FROM_DT"               javaType="EZDSDateItem"/>
        <result property="effThruDt_PA"              column="EFF_THRU_DT"               javaType="EZDSDateItem"/>
        <result property="delFlg_PA"                 column="DEL_FLG"                   javaType="EZDSDateItem"/>
        <result property="prcListEquipPk_PA"         column="PRC_LIST_EQUIP_PK"         javaType="EZDSBigDecimalItem"/>
        <result property="cratDt_PA"                 column="CRAT_DT"                   javaType="EZDSDateItem"/>
        <result property="xxScrStsTxt_A1"            column="XX_SCR_STS_TXT"            javaType="EZDSStringItem"/>
        <result property="xxFullNm_A1"               column="CRAT_USR_NM"               javaType="EZDSStringItem"/>
        <result property="lastUpdDt_PA"              column="UPD_DT"                    javaType="EZDSDateItem"/>
        <result property="xxFullNm_A2"               column="UPD_USR_NM"                javaType="EZDSStringItem"/>
        <result property="ezUpTime_PA"               column="EZUPTIME"                  javaType="EZDSStringItem"/>
        <result property="ezUpTimeZone_PA"           column="EZUPTIMEZONE"              javaType="EZDSStringItem"/>
        <result property="xxYesNoCd_PA"              column="XX_YES_NO_CD_PA"           javaType="EZDSStringItem"/>
    </resultMap>

    <statement id="getPrcListValSvc" parameterClass="Map" resultMap="result.getPrcListValSvc">
    SELECT
        A.*
      , CASE
          WHEN A.DEL_FLG = #flgY#
            THEN #stsDeleted#
          WHEN #slsDt# BETWEEN A.EFF_FROM_DT AND NVL(A.EFF_THRU_DT, #highValDt#)
            THEN #stsActive#
          ELSE #stsInactive#
        END        AS XX_SCR_STS_TXT
    FROM (
        SELECT PLS.PRC_RATE_TP_CD
             , PLS.PRC_LIST_MDSE_CD
             , AMV2.MDSE_DESC_SHORT_TXT
             , PLS.MDL_ID
             , PLS.MDL_NM
             , PLS.PRC_MTR_PKG_PK
             , PMP.PRC_MTR_PKG_NM
             , PLS.PRC_SVC_PLN_TP_CD
             , PLS.PRC_SVC_CONTR_TP_CD
             , PLS.BLLG_MTR_LB_CD
             , ML.MTR_LB_NM
             , PLS.MIN_COPY_VOL_CNT
             , PLS.MAX_COPY_VOL_CNT
             , PLS.PRC_LIST_BAND_CD
             , PLB.PRC_LIST_BAND_DESC_TXT
             , PLS.BASE_AMT
             , PLS.MIN_BASE_AMT
             , PLS.MAX_BASE_AMT
             , PLS.CPC_AMT_RATE
             , PLS.MIN_CPC_AMT_RATE
             , PLS.MAX_CPC_AMT_RATE
             , PLS.TERM_FROM_MTH_AOT
             , PLS.TERM_THRU_MTH_AOT
             , PLS.PRC_SVC_ZONE_CD
             , PLS.MDSE_CD
             , AMV.MDSE_DESC_SHORT_TXT AS MDSE_DESC_SHORT_TXT_PZ
             , PLS.PRC_MTR_PKG_BLLG_MTR_PK
             , ML.MTR_LB_DESC_TXT
             , PLS.QUOT_REV_AMT
             , PLS.COMP_CD
             , PLS.EFF_FROM_DT
             , PLS.EFF_THRU_DT
             , PLS.DEL_FLG
             , PLS.PRC_LIST_SVC_PK
             , SUBSTR(PLS.EZINTIME, 1, 8)    CRAT_DT
             , CASE
                 WHEN AP1.FIRST_NM IS NOT NULL THEN PLS.EZINUSERID || '(' || AP1.FIRST_NM || ' ' || AP1.LAST_NM || ')'
                 ELSE PLS.EZINUSERID
               END CRAT_USR_NM
             , SUBSTR(PLS.EZUPTIME, 1, 8)    UPD_DT
             , CASE
                 WHEN AP2.FIRST_NM IS NOT NULL THEN PLS.EZUPUSERID || '(' || AP2.FIRST_NM || ' ' || AP2.LAST_NM || ')'
                 ELSE PLS.EZUPUSERID
               END UPD_USR_NM
             , PLS.EZUPTIME
             , PLS.EZUPTIMEZONE
             <isNotNull property="isDownload">
             , (  SELECT
                      A.PRC_RATE_TP_NM
                  FROM
                      PRC_RATE_TP A
                  WHERE A.GLBL_CMPY_CD   = #glblCmpyCd#
                    AND A.EZCANCELFLAG   = '0'
                    AND A.PRC_RATE_TP_CD = PLS.PRC_RATE_TP_CD
               ) AS PRC_RATE_TP_NM
             , (  SELECT
                      A.PRC_SVC_PLN_TP_NM
                  FROM
                      PRC_SVC_PLN_TP A
                  WHERE A.GLBL_CMPY_CD      = #glblCmpyCd#
                    AND A.EZCANCELFLAG      = '0'
                    AND A.PRC_SVC_PLN_TP_CD = PLS.PRC_SVC_PLN_TP_CD
               ) AS PRC_SVC_PLN_TP_NM
             , (  SELECT
                      A.PRC_SVC_CONTR_TP_NM
                  FROM
                      PRC_SVC_CONTR_TP A
                  WHERE A.GLBL_CMPY_CD        = #glblCmpyCd#
                    AND A.EZCANCELFLAG        = '0'
                    AND A.PRC_SVC_CONTR_TP_CD = PLS.PRC_SVC_CONTR_TP_CD
               ) AS PRC_SVC_CONTR_TP_NM
             , (  SELECT
                      A.PRC_LIST_BAND_NM
                  FROM
                      PRC_LIST_BAND A
                  WHERE A.GLBL_CMPY_CD     = #glblCmpyCd#
                    AND A.EZCANCELFLAG     = '0'
                    AND A.PRC_LIST_BAND_CD = PLS.PRC_LIST_BAND_CD
               ) AS PRC_LIST_BAND_NM
             , (  SELECT
                      A.PRC_SVC_ZONE_NM
                  FROM
                      PRC_SVC_ZONE A
                  WHERE A.GLBL_CMPY_CD    = #glblCmpyCd#
                    AND A.EZCANCELFLAG    = '0'
                    AND A.PRC_SVC_ZONE_CD = PLS.PRC_SVC_ZONE_CD
               ) AS PRC_SVC_ZONE_NM
             </isNotNull>
          FROM PRC_LIST_SVC PLS
             , ALL_MDSE_V AMV
             , ALL_MDSE_V AMV2
             , PRC_MTR_PKG PMP
             , PRC_MTR_PKG_BLLG_MTR PMPBM
             , AUTH_PSN AP1
             , AUTH_PSN AP2
             , MTR_LB ML
             , PRC_LIST_BAND PLB
         WHERE PLS.GLBL_CMPY_CD = #glblCmpyCd#
           AND PLS.EZCANCELFLAG = '0'
           AND PLS.PRC_CATG_CD  = #prcCatgCd#
           AND PLS.GLBL_CMPY_CD = AMV.GLBL_CMPY_CD(+)
           AND PLS.EZCANCELFLAG = AMV.EZCANCELFLAG(+)
           AND PLS.MDSE_CD      = AMV.MDSE_CD(+)
           AND PLS.GLBL_CMPY_CD     = AMV2.GLBL_CMPY_CD(+)
           AND PLS.EZCANCELFLAG     = AMV2.EZCANCELFLAG(+)
           AND PLS.PRC_LIST_MDSE_CD = AMV2.MDSE_CD(+)
           AND PLS.GLBL_CMPY_CD = PMP.GLBL_CMPY_CD(+)
           AND PLS.EZCANCELFLAG = PMP.EZCANCELFLAG(+)
           AND PLS.PRC_MTR_PKG_PK = PMP.PRC_MTR_PKG_PK(+)
           AND PLS.GLBL_CMPY_CD = PMPBM.GLBL_CMPY_CD(+)
           AND PLS.EZCANCELFLAG = PMPBM.EZCANCELFLAG(+)
           AND PLS.PRC_MTR_PKG_BLLG_MTR_PK = PMPBM.PRC_MTR_PKG_BLLG_MTR_PK(+)
           AND PLS.GLBL_CMPY_CD = AP1.GLBL_CMPY_CD(+)
           AND PLS.EZCANCELFLAG = AP1.EZCANCELFLAG(+)
           AND PLS.EZINUSERID   = AP1.USR_NM(+)
           AND PLS.GLBL_CMPY_CD = AP2.GLBL_CMPY_CD(+)
           AND PLS.EZCANCELFLAG = AP2.EZCANCELFLAG(+)
           AND PLS.EZUPUSERID   = AP2.USR_NM(+)
           AND PLS.GLBL_CMPY_CD = ML.GLBL_CMPY_CD (+)
           AND PLS.EZCANCELFLAG = ML.EZCANCELFLAG (+)
           AND PLS.BLLG_MTR_LB_CD = ML.MTR_LB_CD (+)
           AND PLS.GLBL_CMPY_CD = PLB.GLBL_CMPY_CD (+)
           AND PLS.EZCANCELFLAG = PLB.EZCANCELFLAG (+)
           AND PLS.PRC_LIST_BAND_CD = PLB.PRC_LIST_BAND_CD (+)
        <isEqual property="prcDispRecTpCd" compareValue="01">
           AND PLS.DEL_FLG = #flgN#
           AND PLS.EFF_FROM_DT &lt;= #slsDt#
           AND NVL(PLS.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="02">
           AND PLS.DEL_FLG = #flgN#
           AND (PLS.EFF_FROM_DT &gt; #slsDt#
               OR
                NVL(PLS.EFF_THRU_DT, #highValDt#) &lt; #slsDt#
               )
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="03">
           AND PLS.DEL_FLG = #flgY#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="04">
           AND PLS.DEL_FLG = #flgN#
           AND (
                (PLS.EFF_FROM_DT &lt;= #slsDt# AND NVL(PLS.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#)
                OR
                (PLS.EFF_FROM_DT &gt; #slsDt# OR NVL(PLS.EFF_THRU_DT, #highValDt#) &lt; #slsDt#)
               )
        </isEqual>
        <isNotNull property="mdlNm_D1">
           AND UPPER(PLS.MDL_NM) LIKE #mdlNm_D1#
        </isNotNull>
        <isNotNull property="prcMtrPkgNm_D1">
           AND UPPER(PMP.PRC_MTR_PKG_NM) LIKE #prcMtrPkgNm_D1#
        </isNotNull>
        <isNotNull property="prcRateTpCd_D1">
           AND PLS.PRC_RATE_TP_CD = #prcRateTpCd_D1#
        </isNotNull>
        <isNotNull property="prcSvcPlnTpCd_D1">
           AND PLS.PRC_SVC_PLN_TP_CD = #prcSvcPlnTpCd_D1#
        </isNotNull>
        <isNotNull property="prcSvcContrTpCd_D1">
           AND PLS.PRC_SVC_CONTR_TP_CD = #prcSvcContrTpCd_D1#
        </isNotNull>
        <isNotNull property="mtrLbNm_D1">
           AND UPPER(ML.MTR_LB_NM) LIKE #mtrLbNm_D1#
        </isNotNull>
        <isNotNull property="prcListBandDescTxt_D1">
           AND UPPER(PLB.PRC_LIST_BAND_DESC_TXT) LIKE #prcListBandDescTxt_D1#
        </isNotNull>
        <isNotNull property="prcListMdseCd_Z1">
           AND PLS.PRC_LIST_MDSE_CD LIKE #prcListMdseCd_Z1#
        </isNotNull>
        <isNotNull property="mdseDescShortTxt_Z1">
           AND UPPER(AMV2.MDSE_DESC_SHORT_TXT) LIKE #mdseDescShortTxt_Z1#
        </isNotNull>
        <isNotNull property="termFromMthAot_Z1">
           AND PLS.TERM_FROM_MTH_AOT = #termFromMthAot_Z1#
        </isNotNull>
        <isNotNull property="termThruMthAot_Z1">
           AND PLS.TERM_THRU_MTH_AOT = #termThruMthAot_Z1#
        </isNotNull>
        <isNotNull property="prcSvcZoneCd_Z1">
           AND PLS.PRC_SVC_ZONE_CD = #prcSvcZoneCd_Z1#
        </isNotNull>
        <isNotNull property="mdseCd_Z1">
           AND PLS.MDSE_CD LIKE #mdseCd_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z1">
           AND PLS.EFF_FROM_DT &gt;= #effFromDt_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z2">
           AND PLS.EFF_FROM_DT &lt;= #effFromDt_Z2#
        </isNotNull>
        <isNotNull property="effThruDt_Z1">
           AND NVL(PLS.EFF_THRU_DT, #highValDt#) &gt;= #effThruDt_Z1#
        </isNotNull>
        <isNotNull property="effThruDt_Z2">
           AND NVL(PLS.EFF_THRU_DT, #highValDt#) &lt;= #effThruDt_Z2#
        </isNotNull>
        <isNotNull property="cratDt_Z1">
           AND PLS.EZINTIME &gt;= #cratDt_Z1#
        </isNotNull>
        <isNotNull property="cratDt_Z2">
           AND PLS.EZINTIME &lt;= #cratDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z1">
           AND PLS.EZUPTIME &gt;= #lastUpdDt_Z1#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z2">
           AND PLS.EZUPTIME &lt;= #lastUpdDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="xxFullNm_Z1">
           AND (
                   PLS.EZINUSERID = #xxFullNm_Z1#
              OR (     AP1.FIRST_NM IS NOT NULL
                   AND UPPER(AP1.FIRST_NM || ' ' || AP1.LAST_NM) LIKE #xxFullNm_Z1#
                 )
             )
        </isNotNull>
        <isNotNull property="xxFullNm_Z2">
           AND (
                   PLS.EZUPUSERID = #xxFullNm_Z2#
              OR (     AP2.FIRST_NM IS NOT NULL
                   AND UPPER(AP2.FIRST_NM || ' ' || AP2.LAST_NM) LIKE #xxFullNm_Z2#
                 )
             )
        </isNotNull>
        <isNotNull property="prcListSvcPk">
           AND PLS.PRC_LIST_SVC_PK = #prcListSvcPk#
        </isNotNull>
      ORDER BY PLS.PRC_RATE_TP_CD
             , PLS.MDL_NM
             , PMP.PRC_MTR_PKG_NM
             , PLS.PRC_SVC_PLN_TP_CD
             , PLS.PRC_SVC_CONTR_TP_CD
             , PLS.BLLG_MTR_LB_CD
    ) A
    <isNotNull property="rowNum">
    WHERE ROWNUM &lt;= #rowNum#
    </isNotNull>
    </statement>
    <resultMap id="result.getPrcListValSvc" class="NMAL7010_BSMsg">
        <result property="prcRateTpCd_PB"        column="PRC_RATE_TP_CD"                javaType="EZDSStringItem"/>
        <result property="prcListMdseCd_PB"      column="PRC_LIST_MDSE_CD"              javaType="EZDSStringItem"/>
        <result property="mdseDescShortTxt_PB"   column="MDSE_DESC_SHORT_TXT"           javaType="EZDSStringItem"/>
        <result property="mdlId_PB"              column="MDL_ID"                        javaType="EZDSBigDecimalItem"/>
        <result property="mdlNm_PB"              column="MDL_NM"                        javaType="EZDSStringItem"/>
        <result property="prcMtrPkgPk_PB"        column="PRC_MTR_PKG_PK"                javaType="EZDSBigDecimalItem"/>
        <result property="prcMtrPkgNm_PB"        column="PRC_MTR_PKG_NM"                javaType="EZDSStringItem"/>
        <result property="prcSvcPlnTpCd_PB"      column="PRC_SVC_PLN_TP_CD"             javaType="EZDSStringItem"/>
        <result property="prcSvcContrTpCd_PB"    column="PRC_SVC_CONTR_TP_CD"           javaType="EZDSStringItem"/>
        <result property="mtrLbCd_PB"            column="BLLG_MTR_LB_CD"                javaType="EZDSStringItem"/>
        <result property="mtrLbNm_PB"            column="MTR_LB_NM"                     javaType="EZDSStringItem"/>
        <result property="minCopyVolCnt_PB"      column="MIN_COPY_VOL_CNT"              javaType="EZDSBigDecimalItem"/>
        <result property="maxCopyVolCnt_PB"      column="MAX_COPY_VOL_CNT"              javaType="EZDSBigDecimalItem"/>
        <result property="prcListBandCd_PB"      column="PRC_LIST_BAND_CD"              javaType="EZDSStringItem"/>
        <result property="prcListBandDescTxt_PB" column="PRC_LIST_BAND_DESC_TXT"        javaType="EZDSStringItem"/>
        <result property="baseAmt_PB"            column="BASE_AMT"                      javaType="EZDSBigDecimalItem"/>
        <result property="minBaseAmt_PB"         column="MIN_BASE_AMT"                  javaType="EZDSBigDecimalItem"/>
        <result property="maxBaseAmt_PB"         column="MAX_BASE_AMT"                  javaType="EZDSBigDecimalItem"/>
        <result property="cpcAmtRate_PB"         column="CPC_AMT_RATE"                  javaType="EZDSBigDecimalItem"/>
        <result property="minCpcAmtRate_PB"      column="MIN_CPC_AMT_RATE"              javaType="EZDSBigDecimalItem"/>
        <result property="maxCpcAmtRate_PB"      column="MAX_CPC_AMT_RATE"              javaType="EZDSBigDecimalItem"/>
        <result property="termFromMthAot_PB"     column="TERM_FROM_MTH_AOT"             javaType="EZDSBigDecimalItem"/>
        <result property="termThruMthAot_PB"     column="TERM_THRU_MTH_AOT"             javaType="EZDSBigDecimalItem"/>
        <result property="prcSvcZoneCd_PB"       column="PRC_SVC_ZONE_CD"               javaType="EZDSStringItem"/>
        <result property="mdseCd_PB"             column="MDSE_CD"                       javaType="EZDSStringItem"/>
        <result property="mdseDescShortTxt_PZ"   column="MDSE_DESC_SHORT_TXT_PZ"        javaType="EZDSStringItem"/>
        <result property="prcMtrPkgBllgMtrPk_PB" column="PRC_MTR_PKG_BLLG_MTR_PK"       javaType="EZDSBigDecimalItem"/>
        <result property="mtrLbDescTxt_PB"       column="MTR_LB_DESC_TXT"               javaType="EZDSStringItem"/>
        <result property="quotRevAmt_PB"         column="QUOT_REV_AMT"                  javaType="EZDSBigDecimalItem"/>
        <result property="compCd_PB"             column="COMP_CD"                       javaType="EZDSStringItem"/>
        <result property="effFromDt_PB"          column="EFF_FROM_DT"                   javaType="EZDSDateItem"/>
        <result property="effThruDt_PB"          column="EFF_THRU_DT"                   javaType="EZDSDateItem"/>
        <result property="delFlg_PB"             column="DEL_FLG"                       javaType="EZDSStringItem"/>
        <result property="prcListSvcPk_PB"       column="PRC_LIST_SVC_PK"               javaType="EZDSBigDecimalItem"/>
        <result property="xxScrStsTxt_B1"        column="XX_SCR_STS_TXT"                javaType="EZDSStringItem"/>
        <result property="cratDt_PB"             column="CRAT_DT"                       javaType="EZDSDateItem"/>
        <result property="xxFullNm_B1"           column="CRAT_USR_NM"                   javaType="EZDSStringItem"/>
        <result property="lastUpdDt_PB"          column="UPD_DT"                        javaType="EZDSDateItem"/>
        <result property="xxFullNm_B2"           column="UPD_USR_NM"                    javaType="EZDSStringItem"/>
        <result property="ezUpTime_PB"           column="EZUPTIME"                      javaType="EZDSStringItem"/>
        <result property="ezUpTimeZone_PB"       column="EZUPTIMEZONE"                  javaType="EZDSStringItem"/>
    </resultMap>

    <statement id="getPrcListValSvcTier" parameterClass="Map" resultMap="result.getPrcListValSvcTier">
    SELECT
        A.*
      , CASE
          WHEN A.DEL_FLG = #flgY#
            THEN #stsDeleted#
          WHEN #slsDt# BETWEEN A.EFF_FROM_DT AND NVL(A.EFF_THRU_DT, #highValDt#)
            THEN #stsActive#
          ELSE #stsInactive#
        END        AS XX_SCR_STS_TXT
    FROM (
        SELECT PLST.PRC_SVC_TIER_TP_CD
             , PLST.MDL_ID
             , PLST.MDL_NM
             , PLST.PRC_MTR_PKG_PK
             , PMP.PRC_MTR_PKG_NM
             , PLST.PRC_SVC_PLN_TP_CD
             , PLST.PRC_SVC_CONTR_TP_CD
             , PLST.BLLG_MTR_LB_CD
             , ML.MTR_LB_NM
             , PLST.AVG_COPY_VOL_CNT
             , PLST.MIN_COPY_VOL_CNT
             , PLST.MAX_COPY_VOL_CNT
             , PLST.PRC_LIST_BAND_CD
             , PLB.PRC_LIST_BAND_DESC_TXT
             , PLST.BASE_AMT
             , PLST.MIN_BASE_AMT
             , PLST.MAX_BASE_AMT
             , PLST.CPC_AMT_RATE
             , PLST.MIN_CPC_AMT_RATE
             , PLST.MAX_CPC_AMT_RATE
             , PLST.TERM_FROM_MTH_AOT
             , PLST.TERM_THRU_MTH_AOT
             , PLST.MDSE_CD
             , AMV.MDSE_DESC_SHORT_TXT
             , PLST.PRC_MTR_PKG_BLLG_MTR_PK
             , ML.MTR_LB_DESC_TXT
             , PLST.EFF_FROM_DT
             , PLST.EFF_THRU_DT
             , PLST.DEL_FLG
             , PLST.PRC_LIST_SVC_TIER_PK
             , SUBSTR(PLST.EZINTIME, 1, 8)    CRAT_DT
             , CASE
                 WHEN AP1.FIRST_NM IS NOT NULL THEN PLST.EZINUSERID || '(' || AP1.FIRST_NM || ' ' || AP1.LAST_NM || ')'
                 ELSE PLST.EZINUSERID
               END CRAT_USR_NM
             , SUBSTR(PLST.EZUPTIME, 1, 8)    UPD_DT
             , CASE
                 WHEN AP2.FIRST_NM IS NOT NULL THEN PLST.EZUPUSERID || '(' || AP2.FIRST_NM || ' ' || AP2.LAST_NM || ')'
                 ELSE PLST.EZUPUSERID
               END UPD_USR_NM
             , PLST.EZUPTIME
             , PLST.EZUPTIMEZONE
             <isNotNull property="isDownload">
             , (  SELECT
                      A.PRC_SVC_TIER_TP_NM
                  FROM
                      PRC_SVC_TIER_TP A
                  WHERE A.GLBL_CMPY_CD       = #glblCmpyCd#
                    AND A.EZCANCELFLAG       = '0'
                    AND A.PRC_SVC_TIER_TP_CD = PLST.PRC_SVC_TIER_TP_CD
               ) AS PRC_SVC_TIER_TP_NM
             , (  SELECT
                      A.PRC_SVC_PLN_TP_NM
                  FROM
                      PRC_SVC_PLN_TP A
                  WHERE A.GLBL_CMPY_CD      = #glblCmpyCd#
                    AND A.EZCANCELFLAG      = '0'
                    AND A.PRC_SVC_PLN_TP_CD = PLST.PRC_SVC_PLN_TP_CD
               ) AS PRC_SVC_PLN_TP_NM
             , (  SELECT
                      A.PRC_SVC_CONTR_TP_NM
                  FROM
                      PRC_SVC_CONTR_TP A
                  WHERE A.GLBL_CMPY_CD        = #glblCmpyCd#
                    AND A.EZCANCELFLAG        = '0'
                    AND A.PRC_SVC_CONTR_TP_CD = PLST.PRC_SVC_CONTR_TP_CD
               ) AS PRC_SVC_CONTR_TP_NM
             , (  SELECT
                      A.PRC_LIST_BAND_NM
                  FROM
                      PRC_LIST_BAND A
                  WHERE A.GLBL_CMPY_CD     = #glblCmpyCd#
                    AND A.EZCANCELFLAG     = '0'
                    AND A.PRC_LIST_BAND_CD = PLST.PRC_LIST_BAND_CD
               ) AS PRC_LIST_BAND_NM
             </isNotNull>
          FROM PRC_LIST_SVC_TIER PLST
             , ALL_MDSE_V AMV
             , PRC_MTR_PKG PMP
             , PRC_MTR_PKG_BLLG_MTR PMPBM
             , AUTH_PSN AP1
             , AUTH_PSN AP2
             , MTR_LB ML
             , PRC_LIST_BAND PLB
         WHERE PLST.GLBL_CMPY_CD = #glblCmpyCd#
           AND PLST.EZCANCELFLAG = '0'
           AND PLST.PRC_CATG_CD  = #prcCatgCd#
           AND PLST.GLBL_CMPY_CD = AMV.GLBL_CMPY_CD(+)
           AND PLST.EZCANCELFLAG = AMV.EZCANCELFLAG(+)
           AND PLST.MDSE_CD      = AMV.MDSE_CD(+)
           AND PLST.GLBL_CMPY_CD = PMP.GLBL_CMPY_CD(+)
           AND PLST.EZCANCELFLAG = PMP.EZCANCELFLAG(+)
           AND PLST.PRC_MTR_PKG_PK = PMP.PRC_MTR_PKG_PK(+)
           AND PLST.GLBL_CMPY_CD = PMPBM.GLBL_CMPY_CD(+)
           AND PLST.EZCANCELFLAG = PMPBM.EZCANCELFLAG(+)
           AND PLST.PRC_MTR_PKG_BLLG_MTR_PK = PMPBM.PRC_MTR_PKG_BLLG_MTR_PK(+)
           AND PLST.GLBL_CMPY_CD = AP1.GLBL_CMPY_CD(+)
           AND PLST.EZCANCELFLAG = AP1.EZCANCELFLAG(+)
           AND PLST.EZINUSERID   = AP1.USR_NM(+)
           AND PLST.GLBL_CMPY_CD = AP2.GLBL_CMPY_CD(+)
           AND PLST.EZCANCELFLAG = AP2.EZCANCELFLAG(+)
           AND PLST.EZUPUSERID   = AP2.USR_NM(+)
           AND PLST.GLBL_CMPY_CD = ML.GLBL_CMPY_CD (+)
           AND PLST.EZCANCELFLAG = ML.EZCANCELFLAG (+)
           AND PLST.BLLG_MTR_LB_CD = ML.MTR_LB_CD (+)
           AND PLST.GLBL_CMPY_CD = PLB.GLBL_CMPY_CD (+)
           AND PLST.EZCANCELFLAG = PLB.EZCANCELFLAG (+)
           AND PLST.PRC_LIST_BAND_CD = PLB.PRC_LIST_BAND_CD (+)
        <isEqual property="prcDispRecTpCd" compareValue="01">
           AND PLST.DEL_FLG = #flgN#
           AND PLST.EFF_FROM_DT &lt;= #slsDt#
           AND NVL(PLST.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="02">
           AND PLST.DEL_FLG = #flgN#
           AND (PLST.EFF_FROM_DT &gt; #slsDt#
               OR
                NVL(PLST.EFF_THRU_DT, #highValDt#) &lt; #slsDt#
               )
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="03">
           AND PLST.DEL_FLG = #flgY#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="04">
           AND PLST.DEL_FLG = #flgN#
           AND (
                (PLST.EFF_FROM_DT &lt;= #slsDt# AND NVL(PLST.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#)
                OR
                (PLST.EFF_FROM_DT &gt; #slsDt# OR NVL(PLST.EFF_THRU_DT, #highValDt#) &lt; #slsDt#)
               )
        </isEqual>
        <isNotNull property="mdlNm_D2">
           AND UPPER(PLST.MDL_NM) LIKE #mdlNm_D2#
        </isNotNull>
        <isNotNull property="prcMtrPkgNm_D2">
           AND UPPER(PMP.PRC_MTR_PKG_NM) LIKE #prcMtrPkgNm_D2#
        </isNotNull>
        <isNotNull property="prcSvcTierTpCd_D2">
           AND PLST.PRC_SVC_TIER_TP_CD = #prcSvcTierTpCd_D2#
        </isNotNull>
        <isNotNull property="prcSvcPlnTpCd_D2">
           AND PLST.PRC_SVC_PLN_TP_CD = #prcSvcPlnTpCd_D2#
        </isNotNull>
        <isNotNull property="prcSvcContrTpCd_D2">
           AND PLST.PRC_SVC_CONTR_TP_CD = #prcSvcContrTpCd_D2#
        </isNotNull>
        <isNotNull property="mtrLbNm_D2">
           AND UPPER(ML.MTR_LB_NM) LIKE #mtrLbNm_D2#
        </isNotNull>
        <isNotNull property="prcListBandDescTxt_D2">
           AND UPPER(PLB.PRC_LIST_BAND_DESC_TXT) LIKE #prcListBandDescTxt_D2#
        </isNotNull>
        <isNotNull property="termFromMthAot_Z1">
           AND PLST.TERM_FROM_MTH_AOT = #termFromMthAot_Z1#
        </isNotNull>
        <isNotNull property="termThruMthAot_Z1">
           AND PLST.TERM_THRU_MTH_AOT = #termThruMthAot_Z1#
        </isNotNull>
        <isNotNull property="mdseCd_Z1">
           AND PLST.MDSE_CD LIKE #mdseCd_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z1">
           AND PLST.EFF_FROM_DT &gt;= #effFromDt_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z2">
           AND PLST.EFF_FROM_DT &lt;= #effFromDt_Z2#
        </isNotNull>
        <isNotNull property="effThruDt_Z1">
           AND NVL(PLST.EFF_THRU_DT, #highValDt#) &gt;= #effThruDt_Z1#
        </isNotNull>
        <isNotNull property="effThruDt_Z2">
           AND NVL(PLST.EFF_THRU_DT, #highValDt#) &lt;= #effThruDt_Z2#
        </isNotNull>
        <isNotNull property="cratDt_Z1">
           AND PLST.EZINTIME &gt;= #cratDt_Z1#
        </isNotNull>
        <isNotNull property="cratDt_Z2">
           AND PLST.EZINTIME &lt;= #cratDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z1">
           AND PLST.EZUPTIME &gt;= #lastUpdDt_Z1#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z2">
           AND PLST.EZUPTIME &lt;= #lastUpdDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="xxFullNm_Z1">
           AND (
                   PLST.EZINUSERID = #xxFullNm_Z1#
              OR (     AP1.FIRST_NM IS NOT NULL
                   AND UPPER(AP1.FIRST_NM || ' ' || AP1.LAST_NM) LIKE #xxFullNm_Z1#
                 )
             )
        </isNotNull>
        <isNotNull property="xxFullNm_Z2">
           AND (
                   PLST.EZUPUSERID = #xxFullNm_Z2#
              OR (     AP2.FIRST_NM IS NOT NULL
                   AND UPPER(AP2.FIRST_NM || ' ' || AP2.LAST_NM) LIKE #xxFullNm_Z2#
                 )
             )
        </isNotNull>
        <isNotNull property="prcListSvcTierPk">
           AND PLST.PRC_LIST_SVC_TIER_PK = #prcListSvcTierPk#
        </isNotNull>
      ORDER BY PLST.PRC_SVC_TIER_TP_CD
             , PLST.MDL_NM
             , PMP.PRC_MTR_PKG_NM
             , PLST.PRC_SVC_PLN_TP_CD
             , PLST.PRC_SVC_CONTR_TP_CD
             , PLST.BLLG_MTR_LB_CD
    ) A
    <isNotNull property="rowNum">
    WHERE ROWNUM &lt;= #rowNum#
    </isNotNull>
    </statement>
    <resultMap id="result.getPrcListValSvcTier" class="NMAL7010_CSMsg">
        <result property="prcSvcTierTpCd_PC"     column="PRC_SVC_TIER_TP_CD"      javaType="EZDSStringItem"/>
        <result property="mdlId_PC"              column="MDL_ID"                  javaType="EZDSBigDecimalItem"/>
        <result property="mdlNm_PC"              column="MDL_NM"                  javaType="EZDSStringItem"/>
        <result property="prcMtrPkgPk_PC"        column="PRC_MTR_PKG_PK"          javaType="EZDSBigDecimalItem"/>
        <result property="prcMtrPkgNm_PC"        column="PRC_MTR_PKG_NM"          javaType="EZDSStringItem"/>
        <result property="prcSvcPlnTpCd_PC"      column="PRC_SVC_PLN_TP_CD"       javaType="EZDSStringItem"/>
        <result property="prcSvcContrTpCd_PC"    column="PRC_SVC_CONTR_TP_CD"     javaType="EZDSStringItem"/>
        <result property="mtrLbCd_PC"            column="BLLG_MTR_LB_CD"          javaType="EZDSStringItem"/>
        <result property="mtrLbNm_PC"            column="MTR_LB_NM"               javaType="EZDSStringItem"/>
        <result property="avgCopyVolCnt_PC"      column="AVG_COPY_VOL_CNT"        javaType="EZDSBigDecimalItem"/>
        <result property="minCopyVolCnt_PC"      column="MIN_COPY_VOL_CNT"        javaType="EZDSBigDecimalItem"/>
        <result property="maxCopyVolCnt_PC"      column="MAX_COPY_VOL_CNT"        javaType="EZDSBigDecimalItem"/>
        <result property="prcListBandCd_PC"      column="PRC_LIST_BAND_CD"        javaType="EZDSStringItem"/>
        <result property="prcListBandDescTxt_PC" column="PRC_LIST_BAND_DESC_TXT"  javaType="EZDSStringItem"/>
        <result property="baseAmt_PC"            column="BASE_AMT"                javaType="EZDSBigDecimalItem"/>
        <result property="minBaseAmt_PC"         column="MIN_BASE_AMT"            javaType="EZDSBigDecimalItem"/>
        <result property="maxBaseAmt_PC"         column="MAX_BASE_AMT"            javaType="EZDSBigDecimalItem"/>
        <result property="cpcAmtRate_PC"         column="CPC_AMT_RATE"            javaType="EZDSBigDecimalItem"/>
        <result property="minCpcAmtRate_PC"      column="MIN_CPC_AMT_RATE"        javaType="EZDSBigDecimalItem"/>
        <result property="maxCpcAmtRate_PC"      column="MAX_CPC_AMT_RATE"        javaType="EZDSBigDecimalItem"/>
        <result property="termFromMthAot_PC"     column="TERM_FROM_MTH_AOT"       javaType="EZDSBigDecimalItem"/>
        <result property="termThruMthAot_PC"     column="TERM_THRU_MTH_AOT"       javaType="EZDSBigDecimalItem"/>
        <result property="mdseCd_PC"             column="MDSE_CD"                 javaType="EZDSStringItem"/>
        <result property="mdseDescShortTxt_PC"   column="MDSE_DESC_SHORT_TXT"     javaType="EZDSStringItem"/>
        <result property="prcMtrPkgBllgMtrPk_PC" column="PRC_MTR_PKG_BLLG_MTR_PK" javaType="EZDSBigDecimalItem"/>
        <result property="mtrLbDescTxt_PC"       column="MTR_LB_DESC_TXT"         javaType="EZDSStringItem"/>
        <result property="effFromDt_PC"          column="EFF_FROM_DT"             javaType="EZDSDateItem"/>
        <result property="effThruDt_PC"          column="EFF_THRU_DT"             javaType="EZDSDateItem"/>
        <result property="delFlg_PC"             column="DEL_FLG"                 javaType="EZDSStringItem"/>
        <result property="prcListSvcTierPk_PC"   column="PRC_LIST_SVC_TIER_PK"    javaType="EZDSBigDecimalItem"/>
        <result property="xxScrStsTxt_C1"        column="XX_SCR_STS_TXT"          javaType="EZDSStringItem"/>
        <result property="cratDt_PC"             column="CRAT_DT"                 javaType="EZDSDateItem"/>
        <result property="xxFullNm_C1"           column="CRAT_USR_NM"             javaType="EZDSStringItem"/>
        <result property="lastUpdDt_PC"          column="UPD_DT"                  javaType="EZDSDateItem"/>
        <result property="xxFullNm_C2"           column="UPD_USR_NM"              javaType="EZDSStringItem"/>
        <result property="ezUpTime_PC"           column="EZUPTIME"                javaType="EZDSStringItem"/>
        <result property="ezUpTimeZone_PC"       column="EZUPTIMEZONE"            javaType="EZDSStringItem"/>
    </resultMap>

    <statement id="getPrcListValSvcSpecChrg" parameterClass="Map" resultMap="result.getPrcListValSvcSpecChrg">
    SELECT
        A.*
      , CASE
          WHEN A.DEL_FLG = #flgY#
            THEN #stsDeleted#
          WHEN #slsDt# BETWEEN A.EFF_FROM_DT AND NVL(A.EFF_THRU_DT, #highValDt#)
            THEN #stsActive#
          ELSE #stsInactive#
        END        AS XX_SCR_STS_TXT
    FROM (
        SELECT PLAC.MDSE_CD
             , AMV.MDSE_DESC_SHORT_TXT
             , PLAC.PRC_ADDL_CHRG_TP_CD
             , PLAC.MKT_MDL_SEG_CD
             , PLAC.MDL_ID
             , PLAC.MDL_NM
             , PLAC.ADDL_CHRG_PRC_AMT
             , PLAC.EFF_FROM_DT
             , PLAC.EFF_THRU_DT
             , PLAC.DEL_FLG
             , PLAC.PRC_LIST_ADDL_CHRG_PK
             , SUBSTR(PLAC.EZINTIME, 1, 8)    CRAT_DT
             , CASE
                 WHEN AP1.FIRST_NM IS NOT NULL THEN PLAC.EZINUSERID || '(' || AP1.FIRST_NM || ' ' || AP1.LAST_NM || ')'
                 ELSE PLAC.EZINUSERID
               END CRAT_USR_NM
             , SUBSTR(PLAC.EZUPTIME, 1, 8)    UPD_DT
             , CASE
                 WHEN AP2.FIRST_NM IS NOT NULL THEN PLAC.EZUPUSERID || '(' || AP2.FIRST_NM || ' ' || AP2.LAST_NM || ')'
                 ELSE PLAC.EZUPUSERID
               END UPD_USR_NM
             , PLAC.EZUPTIME
             , PLAC.EZUPTIMEZONE
             <isNotNull property="isDownload">
             , (  SELECT
                      A.PRC_ADDL_CHRG_TP_NM
                  FROM
                      PRC_ADDL_CHRG_TP A
                  WHERE A.GLBL_CMPY_CD        = #glblCmpyCd#
                    AND A.EZCANCELFLAG        = '0'
                    AND A.PRC_ADDL_CHRG_TP_CD = PLAC.PRC_ADDL_CHRG_TP_CD
               ) AS PRC_ADDL_CHRG_TP_NM
             , (  SELECT
                      A.MKT_MDL_SEG_NM
                  FROM
                      MKT_MDL_SEG A
                  WHERE A.GLBL_CMPY_CD   = #glblCmpyCd#
                    AND A.EZCANCELFLAG   = '0'
                    AND A.MKT_MDL_SEG_CD = PLAC.MKT_MDL_SEG_CD
               ) AS MKT_MDL_SEG_NM
             </isNotNull>
          FROM PRC_LIST_ADDL_CHRG PLAC
             , ALL_MDSE_V AMV
             , AUTH_PSN AP1
             , AUTH_PSN AP2
         WHERE PLAC.GLBL_CMPY_CD = #glblCmpyCd#
           AND PLAC.EZCANCELFLAG = '0'
           AND PLAC.PRC_CATG_CD  = #prcCatgCd#
           AND PLAC.GLBL_CMPY_CD = AMV.GLBL_CMPY_CD(+)
           AND PLAC.EZCANCELFLAG = AMV.EZCANCELFLAG(+)
           AND PLAC.MDSE_CD      = AMV.MDSE_CD(+)
           AND PLAC.GLBL_CMPY_CD = AP1.GLBL_CMPY_CD(+)
           AND PLAC.EZCANCELFLAG = AP1.EZCANCELFLAG(+)
           AND PLAC.EZINUSERID   = AP1.USR_NM(+)
           AND PLAC.GLBL_CMPY_CD = AP2.GLBL_CMPY_CD(+)
           AND PLAC.EZCANCELFLAG = AP2.EZCANCELFLAG(+)
           AND PLAC.EZUPUSERID   = AP2.USR_NM(+)
        <isEqual property="prcDispRecTpCd" compareValue="01">
           AND PLAC.DEL_FLG = #flgN#
           AND PLAC.EFF_FROM_DT &lt;= #slsDt#
           AND NVL(PLAC.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="02">
           AND PLAC.DEL_FLG = #flgN#
           AND (PLAC.EFF_FROM_DT &gt; #slsDt#
               OR
                NVL(PLAC.EFF_THRU_DT, #highValDt#) &lt; #slsDt#
               )
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="03">
           AND PLAC.DEL_FLG = #flgY#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="04">
           AND PLAC.DEL_FLG = #flgN#
           AND (
                (PLAC.EFF_FROM_DT &lt;= #slsDt# AND NVL(PLAC.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#)
                OR
                (PLAC.EFF_FROM_DT &gt; #slsDt# OR NVL(PLAC.EFF_THRU_DT, #highValDt#) &lt; #slsDt#)
               )
        </isEqual>
        <isNotNull property="mdseCd_DH">
           AND PLAC.MDSE_CD LIKE #mdseCd_DH#
        </isNotNull>
        <isNotNull property="prcAddlChrgTpCd_DH">
           AND PLAC.PRC_ADDL_CHRG_TP_CD = #prcAddlChrgTpCd_DH#
        </isNotNull>
        <isNotNull property="mktMdlSegCd_DH">
           AND PLAC.MKT_MDL_SEG_CD = #mktMdlSegCd_DH#
        </isNotNull>
        <isNotNull property="mdlNm_DH">
           AND UPPER(PLAC.MDL_NM) LIKE #mdlNm_DH#
        </isNotNull>
        <isNotNull property="mdseDescShortTxt_Z2">
           AND UPPER(AMV.MDSE_DESC_SHORT_TXT) LIKE #mdseDescShortTxt_Z2#
        </isNotNull>
        <isNotNull property="effFromDt_Z1">
           AND PLAC.EFF_FROM_DT &gt;= #effFromDt_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z2">
           AND PLAC.EFF_FROM_DT &lt;= #effFromDt_Z2#
        </isNotNull>
        <isNotNull property="effThruDt_Z1">
           AND NVL(PLAC.EFF_THRU_DT, #highValDt#) &gt;= #effThruDt_Z1#
        </isNotNull>
        <isNotNull property="effThruDt_Z2">
           AND NVL(PLAC.EFF_THRU_DT, #highValDt#) &lt;= #effThruDt_Z2#
        </isNotNull>
        <isNotNull property="cratDt_Z1">
           AND PLAC.EZINTIME &gt;= #cratDt_Z1#
        </isNotNull>
        <isNotNull property="cratDt_Z2">
           AND PLAC.EZINTIME &lt;= #cratDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z1">
           AND PLAC.EZUPTIME &gt;= #lastUpdDt_Z1#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z2">
           AND PLAC.EZUPTIME &lt;= #lastUpdDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="xxFullNm_Z1">
           AND (
                   PLAC.EZINUSERID = #xxFullNm_Z1#
              OR (     AP1.FIRST_NM IS NOT NULL
                   AND UPPER(AP1.FIRST_NM || ' ' || AP1.LAST_NM) LIKE #xxFullNm_Z1#
                 )
             )
        </isNotNull>
        <isNotNull property="xxFullNm_Z2">
           AND (
                   PLAC.EZUPUSERID = #xxFullNm_Z2#
              OR (     AP2.FIRST_NM IS NOT NULL
                   AND UPPER(AP2.FIRST_NM || ' ' || AP2.LAST_NM) LIKE #xxFullNm_Z2#
                 )
             )
        </isNotNull>
        <isNotNull property="prcListAddlChrgPk">
           AND PLAC.PRC_LIST_ADDL_CHRG_PK = #prcListAddlChrgPk#
        </isNotNull>
      ORDER BY PLAC.PRC_LIST_ADDL_CHRG_PK
    ) A
    <isNotNull property="rowNum">
    WHERE ROWNUM &lt;= #rowNum#
    </isNotNull>
    </statement>

    <resultMap id="result.getPrcListValSvcSpecChrg" class="NMAL7010_DSMsg">
        <result property="mdseCd_PD"             column="MDSE_CD"                 javaType="EZDSStringItem"/>
        <result property="mdseDescShortTxt_PD"   column="MDSE_DESC_SHORT_TXT"     javaType="EZDSStringItem"/>
        <result property="prcAddlChrgTpCd_PD"    column="PRC_ADDL_CHRG_TP_CD"     javaType="EZDSStringItem"/>
        <result property="mktMdlSegCd_PD"        column="MKT_MDL_SEG_CD"          javaType="EZDSStringItem"/>
        <result property="mdlId_PD"              column="MDL_ID"                  javaType="EZDSBigDecimalItem"/>
        <result property="mdlNm_PD"              column="MDL_NM"                  javaType="EZDSStringItem"/>
        <result property="addlChrgPrcAmt_PD"     column="ADDL_CHRG_PRC_AMT"       javaType="EZDSBigDecimalItem"/>
        <result property="effFromDt_PD"          column="EFF_FROM_DT"             javaType="EZDSDateItem"/>
        <result property="effThruDt_PD"          column="EFF_THRU_DT"             javaType="EZDSDateItem"/>
        <result property="delFlg_PD"             column="DEL_FLG"                 javaType="EZDSStringItem"/>
        <result property="prcListAddlChrgPk_PD"  column="PRC_LIST_ADDL_CHRG_PK"   javaType="EZDSBigDecimalItem"/>
        <result property="xxScrStsTxt_D1"        column="XX_SCR_STS_TXT"          javaType="EZDSStringItem"/>
        <result property="cratDt_PD"             column="CRAT_DT"                 javaType="EZDSDateItem"/>
        <result property="xxFullNm_D1"           column="CRAT_USR_NM"             javaType="EZDSStringItem"/>
        <result property="lastUpdDt_PD"          column="UPD_DT"                  javaType="EZDSDateItem"/>
        <result property="xxFullNm_D2"           column="UPD_USR_NM"              javaType="EZDSStringItem"/>
        <result property="ezUpTime_PD"           column="EZUPTIME"                javaType="EZDSStringItem"/>
        <result property="ezUpTimeZone_PD"       column="EZUPTIMEZONE"            javaType="EZDSStringItem"/>
    </resultMap>

    <statement id="getPrcListValSplyPgm" parameterClass="Map" resultMap="result.getPrcListValSplyPgm">
    SELECT
        A.*
      , CASE
          WHEN A.DEL_FLG = #flgY#
            THEN #stsDeleted#
          WHEN #slsDt# BETWEEN A.EFF_FROM_DT AND NVL(A.EFF_THRU_DT, #highValDt#)
            THEN #stsActive#
          ELSE #stsInactive#
        END        AS XX_SCR_STS_TXT
    FROM (
        SELECT PLSP.MDL_ID
             , PLSP.MDL_NM
             , PLSP.PRC_MTR_PKG_PK
             , PMP.PRC_MTR_PKG_NM
             , PLSP.PRC_SVC_PLN_TP_CD
             , PLSP.PRC_SVC_CONTR_TP_CD
             , PLSP.BLLG_MTR_LB_CD
             , ML.MTR_LB_NM
             , PLSP.MIN_COPY_VOL_CNT
             , PLSP.MAX_COPY_VOL_CNT
             , PLSP.PRC_LIST_BAND_CD
             , PLB.PRC_LIST_BAND_DESC_TXT
             , PLSP.TOT_BASE_AMT
             , PLSP.SPLY_BASE_AMT
             , PLSP.CPC_AMT_RATE
             , PLSP.MIN_CPC_AMT_RATE
             , PLSP.MAX_CPC_AMT_RATE
             , PLSP.TERM_FROM_MTH_AOT
             , PLSP.TERM_THRU_MTH_AOT
             , PLSP.MDSE_CD
             , AMV.MDSE_DESC_SHORT_TXT
             , PLSP.PRC_MTR_PKG_BLLG_MTR_PK
             , ML.MTR_LB_DESC_TXT
             , PLSP.PRC_SVC_ZONE_CD
             , PLSP.SPLY_AGMT_PLN_PK
             , SAP.SPLY_AGMT_PLN_NM
             , PLSP.EFF_FROM_DT
             , PLSP.EFF_THRU_DT
             , PLSP.DEL_FLG
             , PLSP.PRC_LIST_SPLY_PGM_PK
             , SUBSTR(PLSP.EZINTIME, 1, 8)    CRAT_DT
             , CASE
                 WHEN AP1.FIRST_NM IS NOT NULL THEN PLSP.EZINUSERID || '(' || AP1.FIRST_NM || ' ' || AP1.LAST_NM || ')'
                 ELSE PLSP.EZINUSERID
               END CRAT_USR_NM
             , SUBSTR(PLSP.EZUPTIME, 1, 8)    UPD_DT
             , CASE
                 WHEN AP2.FIRST_NM IS NOT NULL THEN PLSP.EZUPUSERID || '(' || AP2.FIRST_NM || ' ' || AP2.LAST_NM || ')'
                 ELSE PLSP.EZUPUSERID
               END UPD_USR_NM
             , PLSP.EZUPTIME
             , PLSP.EZUPTIMEZONE
             <isNotNull property="isDownload">
             , (  SELECT
                      A.PRC_SVC_PLN_TP_NM
                  FROM
                      PRC_SVC_PLN_TP A
                  WHERE A.GLBL_CMPY_CD      = #glblCmpyCd#
                    AND A.EZCANCELFLAG      = '0'
                    AND A.PRC_SVC_PLN_TP_CD = PLSP.PRC_SVC_PLN_TP_CD
               ) AS PRC_SVC_PLN_TP_NM
             , (  SELECT
                      A.PRC_SVC_CONTR_TP_NM
                  FROM
                      PRC_SVC_CONTR_TP A
                  WHERE A.GLBL_CMPY_CD        = #glblCmpyCd#
                    AND A.EZCANCELFLAG        = '0'
                    AND A.PRC_SVC_CONTR_TP_CD = PLSP.PRC_SVC_CONTR_TP_CD
               ) AS PRC_SVC_CONTR_TP_NM
             , (  SELECT
                      A.PRC_LIST_BAND_NM
                  FROM
                      PRC_LIST_BAND A
                  WHERE A.GLBL_CMPY_CD     = #glblCmpyCd#
                    AND A.EZCANCELFLAG     = '0'
                    AND A.PRC_LIST_BAND_CD = PLSP.PRC_LIST_BAND_CD
               ) AS PRC_LIST_BAND_NM
             , (  SELECT
                      A.PRC_SVC_ZONE_NM
                  FROM
                      PRC_SVC_ZONE A
                  WHERE A.GLBL_CMPY_CD    = #glblCmpyCd#
                    AND A.EZCANCELFLAG    = '0'
                    AND A.PRC_SVC_ZONE_CD = PLSP.PRC_SVC_ZONE_CD
               ) AS PRC_SVC_ZONE_NM
             </isNotNull>
          FROM PRC_LIST_SPLY_PGM PLSP
             , ALL_MDSE_V AMV
             , PRC_MTR_PKG PMP
             , PRC_MTR_PKG_BLLG_MTR PMPBM
             , SPLY_AGMT_PLN SAP
             , AUTH_PSN AP1
             , AUTH_PSN AP2
             , MTR_LB ML
             , PRC_LIST_BAND PLB
         WHERE PLSP.GLBL_CMPY_CD = #glblCmpyCd#
           AND PLSP.EZCANCELFLAG = '0'
           AND PLSP.PRC_CATG_CD  = #prcCatgCd#
           AND PLSP.GLBL_CMPY_CD = AMV.GLBL_CMPY_CD(+)
           AND PLSP.EZCANCELFLAG = AMV.EZCANCELFLAG(+)
           AND PLSP.MDSE_CD      = AMV.MDSE_CD(+)
           AND PLSP.GLBL_CMPY_CD = PMP.GLBL_CMPY_CD(+)
           AND PLSP.EZCANCELFLAG = PMP.EZCANCELFLAG(+)
           AND PLSP.PRC_MTR_PKG_PK = PMP.PRC_MTR_PKG_PK(+)
           AND PLSP.GLBL_CMPY_CD = PMPBM.GLBL_CMPY_CD(+)
           AND PLSP.EZCANCELFLAG = PMPBM.EZCANCELFLAG(+)
           AND PLSP.PRC_MTR_PKG_BLLG_MTR_PK = PMPBM.PRC_MTR_PKG_BLLG_MTR_PK(+)
           AND PLSP.GLBL_CMPY_CD = SAP.GLBL_CMPY_CD(+)
           AND PLSP.EZCANCELFLAG = SAP.EZCANCELFLAG(+)
           AND PLSP.SPLY_AGMT_PLN_PK = SAP.SPLY_AGMT_PLN_PK(+)
           AND PLSP.GLBL_CMPY_CD = AP1.GLBL_CMPY_CD(+)
           AND PLSP.EZCANCELFLAG = AP1.EZCANCELFLAG(+)
           AND PLSP.EZINUSERID   = AP1.USR_NM(+)
           AND PLSP.GLBL_CMPY_CD = AP2.GLBL_CMPY_CD(+)
           AND PLSP.EZCANCELFLAG = AP2.EZCANCELFLAG(+)
           AND PLSP.EZUPUSERID   = AP2.USR_NM(+)
           AND PLSP.GLBL_CMPY_CD = ML.GLBL_CMPY_CD (+)
           AND PLSP.EZCANCELFLAG = ML.EZCANCELFLAG (+)
           AND PLSP.BLLG_MTR_LB_CD = ML.MTR_LB_CD (+)
           AND PLSP.GLBL_CMPY_CD = PLB.GLBL_CMPY_CD (+)
           AND PLSP.EZCANCELFLAG = PLB.EZCANCELFLAG (+)
           AND PLSP.PRC_LIST_BAND_CD = PLB.PRC_LIST_BAND_CD (+)
        <isEqual property="prcDispRecTpCd" compareValue="01">
           AND PLSP.DEL_FLG = #flgN#
           AND PLSP.EFF_FROM_DT &lt;= #slsDt#
           AND NVL(PLSP.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="02">
           AND PLSP.DEL_FLG = #flgN#
           AND (PLSP.EFF_FROM_DT &gt; #slsDt#
               OR
                NVL(PLSP.EFF_THRU_DT, #highValDt#) &lt; #slsDt#
               )
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="03">
           AND PLSP.DEL_FLG = #flgY#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="04">
           AND PLSP.DEL_FLG = #flgN#
           AND (
                (PLSP.EFF_FROM_DT &lt;= #slsDt# AND NVL(PLSP.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#)
                OR
                (PLSP.EFF_FROM_DT &gt; #slsDt# OR NVL(PLSP.EFF_THRU_DT, #highValDt#) &lt; #slsDt#)
               )
        </isEqual>
        <isNotNull property="mdlNm_D3">
           AND UPPER(PLSP.MDL_NM) LIKE #mdlNm_D3#
        </isNotNull>
        <isNotNull property="prcMtrPkgNm_D3">
           AND UPPER(PMP.PRC_MTR_PKG_NM) LIKE #prcMtrPkgNm_D3#
        </isNotNull>
        <isNotNull property="prcSvcPlnTpCd_D3">
           AND PLSP.PRC_SVC_PLN_TP_CD = #prcSvcPlnTpCd_D3#
        </isNotNull>
        <isNotNull property="prcSvcContrTpCd_D3">
           AND PLSP.PRC_SVC_CONTR_TP_CD = #prcSvcContrTpCd_D3#
        </isNotNull>
        <isNotNull property="mtrLbNm_D3">
           AND UPPER(ML.MTR_LB_NM) LIKE #mtrLbNm_D3#
        </isNotNull>
        <isNotNull property="prcListBandDescTxt_D3">
           AND UPPER(PLB.PRC_LIST_BAND_DESC_TXT) LIKE #prcListBandDescTxt_D3#
        </isNotNull>
        <isNotNull property="splyAgmtPlnNm_D3">
           AND UPPER(SAP.SPLY_AGMT_PLN_NM) LIKE #splyAgmtPlnNm_D3#
        </isNotNull>
        <isNotNull property="termFromMthAot_Z1">
           AND PLS.TERM_FROM_MTH_AOT = #termFromMthAot_Z1#
        </isNotNull>
        <isNotNull property="termThruMthAot_Z1">
           AND PLSP.TERM_THRU_MTH_AOT = #termThruMthAot_Z1#
        </isNotNull>
        <isNotNull property="prcSvcZoneCd_Z1">
           AND PLSP.PRC_SVC_ZONE_CD = #prcSvcZoneCd_Z1#
        </isNotNull>
        <isNotNull property="mdseCd_Z1">
           AND PLSP.MDSE_CD LIKE #mdseCd_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z1">
           AND PLSP.EFF_FROM_DT &gt;= #effFromDt_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z2">
           AND PLSP.EFF_FROM_DT &lt;= #effFromDt_Z2#
        </isNotNull>
        <isNotNull property="effThruDt_Z1">
           AND NVL(PLSP.EFF_THRU_DT, #highValDt#) &gt;= #effThruDt_Z1#
        </isNotNull>
        <isNotNull property="effThruDt_Z2">
           AND NVL(PLSP.EFF_THRU_DT, #highValDt#) &lt;= #effThruDt_Z2#
        </isNotNull>
        <isNotNull property="cratDt_Z1">
           AND PLSP.EZINTIME &gt;= #cratDt_Z1#
        </isNotNull>
        <isNotNull property="cratDt_Z2">
           AND PLSP.EZINTIME &lt;= #cratDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z1">
           AND PLSP.EZUPTIME &gt;= #lastUpdDt_Z1#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z2">
           AND PLSP.EZUPTIME &lt;= #lastUpdDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="xxFullNm_Z1">
           AND (
                   PLSP.EZINUSERID = #xxFullNm_Z1#
              OR (     AP1.FIRST_NM IS NOT NULL
                   AND UPPER(AP1.FIRST_NM || ' ' || AP1.LAST_NM) LIKE #xxFullNm_Z1#
                 )
             )
        </isNotNull>
        <isNotNull property="xxFullNm_Z2">
           AND (
                   PLSP.EZUPUSERID = #xxFullNm_Z2#
              OR (     AP2.FIRST_NM IS NOT NULL
                   AND UPPER(AP2.FIRST_NM || ' ' || AP2.LAST_NM) LIKE #xxFullNm_Z2#
                 )
             )
        </isNotNull>
        <isNotNull property="prcListSplyPgmPk">
           AND PLSP.PRC_LIST_SPLY_PGM_PK = #prcListSplyPgmPk#
        </isNotNull>
      ORDER BY PLSP.MDL_NM
             , PMP.PRC_MTR_PKG_NM
             , PLSP.PRC_SVC_PLN_TP_CD
             , PLSP.PRC_SVC_CONTR_TP_CD
             , PLSP.BLLG_MTR_LB_CD
    ) A
    <isNotNull property="rowNum">
    WHERE ROWNUM &lt;= #rowNum#
    </isNotNull>
    </statement>
    <resultMap id="result.getPrcListValSplyPgm" class="NMAL7010_ESMsg">
        <result property="mdlId_PE"              column="MDL_ID"                   javaType="EZDSBigDecimalItem"/>
        <result property="mdlNm_PE"              column="MDL_NM"                   javaType="EZDSStringItem"/>
        <result property="prcMtrPkgPk_PE"        column="PRC_MTR_PKG_PK"           javaType="EZDSBigDecimalItem"/>
        <result property="prcMtrPkgNm_PE"        column="PRC_MTR_PKG_NM"           javaType="EZDSStringItem"/>
        <result property="prcSvcPlnTpCd_PE"      column="PRC_SVC_PLN_TP_CD"        javaType="EZDSStringItem"/>
        <result property="prcSvcContrTpCd_PE"    column="PRC_SVC_CONTR_TP_CD"      javaType="EZDSStringItem"/>
        <result property="mtrLbCd_PE"            column="BLLG_MTR_LB_CD"           javaType="EZDSStringItem"/>
        <result property="mtrLbNm_PE"            column="MTR_LB_NM"                javaType="EZDSStringItem"/>
        <result property="minCopyVolCnt_PE"      column="MIN_COPY_VOL_CNT"         javaType="EZDSBigDecimalItem"/>
        <result property="maxCopyVolCnt_PE"      column="MAX_COPY_VOL_CNT"         javaType="EZDSBigDecimalItem"/>
        <result property="prcListBandCd_PE"      column="PRC_LIST_BAND_CD"         javaType="EZDSStringItem"/>
        <result property="prcListBandDescTxt_PE" column="PRC_LIST_BAND_DESC_TXT"   javaType="EZDSStringItem"/>
        <result property="totBaseAmt_PE"         column="TOT_BASE_AMT"             javaType="EZDSBigDecimalItem"/>
        <result property="splyBaseAmt_PE"        column="SPLY_BASE_AMT"            javaType="EZDSBigDecimalItem"/>
        <result property="cpcAmtRate_PE"         column="CPC_AMT_RATE"             javaType="EZDSBigDecimalItem"/>
        <result property="minCpcAmtRate_PE"      column="MIN_CPC_AMT_RATE"         javaType="EZDSBigDecimalItem"/>
        <result property="maxCpcAmtRate_PE"      column="MAX_CPC_AMT_RATE"         javaType="EZDSBigDecimalItem"/>
        <result property="termFromMthAot_PE"     column="TERM_FROM_MTH_AOT"        javaType="EZDSBigDecimalItem"/>
        <result property="termThruMthAot_PE"     column="TERM_THRU_MTH_AOT"        javaType="EZDSBigDecimalItem"/>
        <result property="mdseCd_PE"             column="MDSE_CD"                  javaType="EZDSStringItem"/>
        <result property="mdseDescShortTxt_PE"   column="MDSE_DESC_SHORT_TXT"      javaType="EZDSStringItem"/>
        <result property="prcMtrPkgBllgMtrPk_PE" column="PRC_MTR_PKG_BLLG_MTR_PK"  javaType="EZDSBigDecimalItem"/>
        <result property="mtrLbDescTxt_PE"       column="MTR_LB_DESC_TXT"          javaType="EZDSStringItem"/>
        <result property="prcSvcZoneCd_PE"       column="PRC_SVC_ZONE_CD"          javaType="EZDSStringItem"/>
        <result property="splyAgmtPlnPk_PE"      column="SPLY_AGMT_PLN_PK"         javaType="EZDSBigDecimalItem"/>
        <result property="splyAgmtPlnNm_PE"      column="SPLY_AGMT_PLN_NM"         javaType="EZDSStringItem"/>
        <result property="effFromDt_PE"          column="EFF_FROM_DT"              javaType="EZDSDateItem"/>
        <result property="effThruDt_PE"          column="EFF_THRU_DT"              javaType="EZDSDateItem"/>
        <result property="delFlg_PE"             column="DEL_FLG"                  javaType="EZDSStringItem"/>
        <result property="prcListSplyPgmPk_PE"   column="PRC_LIST_SPLY_PGM_PK"     javaType="EZDSBigDecimalItem"/>
        <result property="xxScrStsTxt_E1"        column="XX_SCR_STS_TXT"           javaType="EZDSStringItem"/>
        <result property="cratDt_PE"             column="CRAT_DT"                  javaType="EZDSDateItem"/>
        <result property="xxFullNm_E1"           column="CRAT_USR_NM"              javaType="EZDSStringItem"/>
        <result property="lastUpdDt_PE"          column="UPD_DT"                   javaType="EZDSDateItem"/>
        <result property="xxFullNm_E2"           column="UPD_USR_NM"               javaType="EZDSStringItem"/>
        <result property="ezUpTime_PE"           column="EZUPTIME"                 javaType="EZDSStringItem"/>
        <result property="ezUpTimeZone_PE"       column="EZUPTIMEZONE"             javaType="EZDSStringItem"/>
    </resultMap>

    <statement id="getPrcListValLeaseRate" parameterClass="Map" resultMap="result.getPrcListValLeaseRate">
    SELECT
        A.*
      , CASE
          WHEN A.DEL_FLG = #flgY#
            THEN #stsDeleted#
          WHEN #slsDt# BETWEEN A.EFF_FROM_DT AND NVL(A.EFF_THRU_DT, #highValDt#)
            THEN #stsActive#
          ELSE #stsInactive#
        END        AS XX_SCR_STS_TXT
    FROM (
        SELECT PLLR.PRC_LEASE_CMPY_ABBR_NM
             , PLLR.DS_ACCT_NM
             , PLLR.PRC_PGM_TP_CD
             , PLLR.PRC_EQUIP_TP_CD
             , PLLR.MIN_TOT_FIN_AMT
             , PLLR.MAX_TOT_FIN_AMT
             , PLLR.TERM_FROM_MTH_AOT
             , PLLR.TERM_THRU_MTH_AOT
             , PLLR.LEASE_RATE
             , PLLR.MDL_ID
             , PLLR.MDL_NM
             , PLLR.EFF_FROM_DT
             , PLLR.EFF_THRU_DT
             , PLLR.DEL_FLG
             , PLLR.PRC_LIST_LEASE_RATE_PK
             , SUBSTR(PLLR.EZINTIME, 1, 8)    CRAT_DT
             , CASE
                 WHEN AP1.FIRST_NM IS NOT NULL THEN PLLR.EZINUSERID || '(' || AP1.FIRST_NM || ' ' || AP1.LAST_NM || ')'
                 ELSE PLLR.EZINUSERID
               END CRAT_USR_NM
             , SUBSTR(PLLR.EZUPTIME, 1, 8)    UPD_DT
             , CASE
                 WHEN AP2.FIRST_NM IS NOT NULL THEN PLLR.EZUPUSERID || '(' || AP2.FIRST_NM || ' ' || AP2.LAST_NM || ')'
                 ELSE PLLR.EZUPUSERID
               END UPD_USR_NM
             , PLLR.EZUPTIME
             , PLLR.EZUPTIMEZONE
             <isNotNull property="isDownload">
             , (  SELECT
                      A.PRC_PGM_TP_NM
                  FROM
                      PRC_PGM_TP A
                  WHERE A.GLBL_CMPY_CD  = #glblCmpyCd#
                    AND A.EZCANCELFLAG  = '0'
                    AND A.PRC_PGM_TP_CD = PLLR.PRC_PGM_TP_CD
               ) AS PRC_PGM_TP_NM
             , (  SELECT
                      A.PRC_EQUIP_TP_NM
                  FROM
                      PRC_EQUIP_TP A
                  WHERE A.GLBL_CMPY_CD    = #glblCmpyCd#
                    AND A.EZCANCELFLAG    = '0'
                    AND A.PRC_EQUIP_TP_CD = PLLR.PRC_EQUIP_TP_CD
               ) AS PRC_EQUIP_TP_NM
             </isNotNull>
          FROM PRC_LIST_LEASE_RATE PLLR
             , AUTH_PSN AP1
             , AUTH_PSN AP2
         WHERE PLLR.GLBL_CMPY_CD = #glblCmpyCd#
           AND PLLR.EZCANCELFLAG = '0'
           AND PLLR.PRC_CATG_CD  = #prcCatgCd#
           AND PLLR.GLBL_CMPY_CD = AP1.GLBL_CMPY_CD(+)
           AND PLLR.EZCANCELFLAG = AP1.EZCANCELFLAG(+)
           AND PLLR.EZINUSERID   = AP1.USR_NM(+)
           AND PLLR.GLBL_CMPY_CD = AP2.GLBL_CMPY_CD(+)
           AND PLLR.EZCANCELFLAG = AP2.EZCANCELFLAG(+)
           AND PLLR.EZUPUSERID   = AP2.USR_NM(+)
        <isEqual property="prcDispRecTpCd" compareValue="01">
           AND PLLR.DEL_FLG = #flgN#
           AND PLLR.EFF_FROM_DT &lt;= #slsDt#
           AND NVL(PLLR.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="02">
           AND PLLR.DEL_FLG = #flgN#
           AND (PLLR.EFF_FROM_DT &gt; #slsDt#
               OR
                NVL(PLLR.EFF_THRU_DT, #highValDt#) &lt; #slsDt#
               )
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="03">
           AND PLLR.DEL_FLG = #flgY#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="04">
           AND PLLR.DEL_FLG = #flgN#
           AND (
                (PLLR.EFF_FROM_DT &lt;= #slsDt# AND NVL(PLLR.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#)
                OR
                (PLLR.EFF_FROM_DT &gt; #slsDt# OR NVL(PLLR.EFF_THRU_DT, #highValDt#) &lt; #slsDt#)
               )
        </isEqual>
        <isNotNull property="mdlNm_D4">
           AND UPPER(PLLR.MDL_NM) LIKE #mdlNm_D4#
        </isNotNull>
        <isNotNull property="prcEquipTpCd_DH">
           AND PLLR.PRC_EQUIP_TP_CD = #prcEquipTpCd_DH#
        </isNotNull>
        <isNotNull property="prcPgmTpCd_DH">
           AND PLLR.PRC_PGM_TP_CD = #prcPgmTpCd_DH#
        </isNotNull>
        <isNotNull property="prcLeaseCmpyAbbrNm_D4">
           AND UPPER(PLLR.PRC_LEASE_CMPY_ABBR_NM) LIKE #prcLeaseCmpyAbbrNm_D4#
        </isNotNull>
        <isNotNull property="dsAcctNm_D4">
           AND UPPER(PLLR.DS_ACCT_NM) LIKE #dsAcctNm_D4#
        </isNotNull>
        <isNotNull property="termFromMthAot_Z1">
           AND PLLR.TERM_FROM_MTH_AOT = #termFromMthAot_Z1#
        </isNotNull>
        <isNotNull property="termThruMthAot_Z1">
           AND PLLR.TERM_THRU_MTH_AOT = #termThruMthAot_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z1">
           AND PLLR.EFF_FROM_DT &gt;= #effFromDt_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z2">
           AND PLLR.EFF_FROM_DT &lt;= #effFromDt_Z2#
        </isNotNull>
        <isNotNull property="effThruDt_Z1">
           AND NVL(PLLR.EFF_THRU_DT, #highValDt#) &gt;= #effThruDt_Z1#
        </isNotNull>
        <isNotNull property="effThruDt_Z2">
           AND NVL(PLLR.EFF_THRU_DT, #highValDt#) &lt;= #effThruDt_Z2#
        </isNotNull>
        <isNotNull property="cratDt_Z1">
           AND PLLR.EZINTIME &gt;= #cratDt_Z1#
        </isNotNull>
        <isNotNull property="cratDt_Z2">
           AND PLLR.EZINTIME &lt;= #cratDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z1">
           AND PLLR.EZUPTIME &gt;= #lastUpdDt_Z1#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z2">
           AND PLLR.EZUPTIME &lt;= #lastUpdDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="xxFullNm_Z1">
           AND (
                   PLLR.EZINUSERID = #xxFullNm_Z1#
              OR (     AP1.FIRST_NM IS NOT NULL
                   AND UPPER(AP1.FIRST_NM || ' ' || AP1.LAST_NM) LIKE #xxFullNm_Z1#
                 )
             )
        </isNotNull>
        <isNotNull property="xxFullNm_Z2">
           AND (
                   PLLR.EZUPUSERID = #xxFullNm_Z2#
              OR (     AP2.FIRST_NM IS NOT NULL
                   AND UPPER(AP2.FIRST_NM || ' ' || AP2.LAST_NM) LIKE #xxFullNm_Z2#
                 )
             )
        </isNotNull>
        <isNotNull property="prcListLeaseRatePk">
           AND PLLR.PRC_LIST_LEASE_RATE_PK = #prcListLeaseRatePk#
        </isNotNull>
      ORDER BY PLLR.PRC_LIST_LEASE_RATE_PK
    ) A
    <isNotNull property="rowNum">
    WHERE ROWNUM &lt;= #rowNum#
    </isNotNull>
    </statement>
    <resultMap id="result.getPrcListValLeaseRate" class="NMAL7010_FSMsg">
        <result property="prcLeaseCmpyAbbrNm_PF" column="PRC_LEASE_CMPY_ABBR_NM" javaType="EZDSStringItem"/>
        <result property="dsAcctNum_PF"          column="DS_ACCT_NUM"            javaType="EZDSStringItem"/>
        <result property="dsAcctNm_PF"           column="DS_ACCT_NM"             javaType="EZDSStringItem"/>
        <result property="prcPgmTpCd_PF"         column="PRC_PGM_TP_CD"          javaType="EZDSStringItem"/>
        <result property="prcEquipTpCd_PF"       column="PRC_EQUIP_TP_CD"        javaType="EZDSStringItem"/>
        <result property="mdlId_PF"              column="MDL_ID"                 javaType="EZDSBigDecimalItem"/>
        <result property="mdlNm_PF"              column="MDL_NM"                 javaType="EZDSStringItem"/>
        <result property="minTotFinAmt_PF"       column="MIN_TOT_FIN_AMT"        javaType="EZDSBigDecimalItem"/>
        <result property="maxTotFinAmt_PF"       column="MAX_TOT_FIN_AMT"        javaType="EZDSBigDecimalItem"/>
        <result property="termFromMthAot_PF"     column="TERM_FROM_MTH_AOT"      javaType="EZDSBigDecimalItem"/>
        <result property="termThruMthAot_PF"     column="TERM_THRU_MTH_AOT"      javaType="EZDSBigDecimalItem"/>
        <result property="leaseRate_PF"          column="LEASE_RATE"             javaType="EZDSBigDecimalItem"/>
        <result property="effFromDt_PF"          column="EFF_FROM_DT"            javaType="EZDSDateItem"/>
        <result property="effThruDt_PF"          column="EFF_THRU_DT"            javaType="EZDSDateItem"/>
        <result property="delFlg_PF"             column="DEL_FLG"                javaType="EZDSStringItem"/>
        <result property="prcListLeaseRatePk_PF" column="PRC_LIST_LEASE_RATE_PK" javaType="EZDSBigDecimalItem"/>
        <result property="xxScrStsTxt_F1"        column="XX_SCR_STS_TXT"         javaType="EZDSStringItem"/>
        <result property="cratDt_PF"             column="CRAT_DT"                javaType="EZDSDateItem"/>
        <result property="xxFullNm_F1"           column="CRAT_USR_NM"            javaType="EZDSStringItem"/>
        <result property="lastUpdDt_PF"          column="UPD_DT"                 javaType="EZDSDateItem"/>
        <result property="xxFullNm_F2"           column="UPD_USR_NM"             javaType="EZDSStringItem"/>
        <result property="ezUpTime_PF"           column="EZUPTIME"               javaType="EZDSStringItem"/>
        <result property="ezUpTimeZone_PF"       column="EZUPTIMEZONE"           javaType="EZDSStringItem"/>
    </resultMap>

    <statement id="getPrcListValLeaseRtrnFee" parameterClass="Map" resultMap="result.getPrcListValLeaseRtrnFee">
    SELECT
        A.*
      , CASE
          WHEN A.DEL_FLG = #flgY#
            THEN #stsDeleted#
          WHEN #slsDt# BETWEEN A.EFF_FROM_DT AND NVL(A.EFF_THRU_DT, #highValDt#)
            THEN #stsActive#
          ELSE #stsInactive#
        END        AS XX_SCR_STS_TXT
    FROM (
        SELECT PLLRT.PRC_LEASE_CMPY_ABBR_NM
             , PLLRT.SVC_SEG_CD
             , PLLRT.PRC_IN_OUT_RG_CD
             , PLLRT.DST_MILE_AMT
             , PLLRT.RTRN_FEE_AMT
             , PLLRT.EFF_FROM_DT
             , PLLRT.EFF_THRU_DT
             , PLLRT.DEL_FLG
             , PLLRT.PRC_LIST_LEASE_RTRN_PK
             , SUBSTR(PLLRT.EZINTIME, 1, 8)    CRAT_DT
             , CASE
                 WHEN AP1.FIRST_NM IS NOT NULL THEN PLLRT.EZINUSERID || '(' || AP1.FIRST_NM || ' ' || AP1.LAST_NM || ')'
                 ELSE PLLRT.EZINUSERID
               END CRAT_USR_NM
             , SUBSTR(PLLRT.EZUPTIME, 1, 8)    UPD_DT
             , CASE
                 WHEN AP2.FIRST_NM IS NOT NULL THEN PLLRT.EZUPUSERID || '(' || AP2.FIRST_NM || ' ' || AP2.LAST_NM || ')'
                 ELSE PLLRT.EZUPUSERID
               END UPD_USR_NM
             , PLLRT.EZUPTIME
             , PLLRT.EZUPTIMEZONE
             <isNotNull property="isDownload">
             , (  SELECT
                      A.SVC_SEG_NM
                  FROM
                      SVC_SEG A
                  WHERE A.GLBL_CMPY_CD = #glblCmpyCd#
                    AND A.EZCANCELFLAG = '0'
                    AND A.SVC_SEG_CD   = PLLRT.SVC_SEG_CD
               ) AS SVC_SEG_NM
             , (  SELECT
                      A.PRC_IN_OUT_RG_NM
                  FROM
                      PRC_IN_OUT_RG A
                  WHERE A.GLBL_CMPY_CD     = #glblCmpyCd#
                    AND A.EZCANCELFLAG     = '0'
                    AND A.PRC_IN_OUT_RG_CD = PLLRT.PRC_IN_OUT_RG_CD
               ) AS PRC_IN_OUT_RG_NM
             </isNotNull>
          FROM PRC_LIST_LEASE_RTRN PLLRT
             , AUTH_PSN AP1
             , AUTH_PSN AP2
         WHERE PLLRT.GLBL_CMPY_CD = #glblCmpyCd#
           AND PLLRT.EZCANCELFLAG = '0'
           AND PLLRT.PRC_CATG_CD  = #prcCatgCd#
           AND PLLRT.GLBL_CMPY_CD = AP1.GLBL_CMPY_CD(+)
           AND PLLRT.EZCANCELFLAG = AP1.EZCANCELFLAG(+)
           AND PLLRT.EZINUSERID   = AP1.USR_NM(+)
           AND PLLRT.GLBL_CMPY_CD = AP2.GLBL_CMPY_CD(+)
           AND PLLRT.EZCANCELFLAG = AP2.EZCANCELFLAG(+)
           AND PLLRT.EZUPUSERID   = AP2.USR_NM(+)
        <isEqual property="prcDispRecTpCd" compareValue="01">
           AND PLLRT.DEL_FLG = #flgN#
           AND PLLRT.EFF_FROM_DT &lt;= #slsDt#
           AND NVL(PLLRT.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="02">
           AND PLLRT.DEL_FLG = #flgN#
           AND (PLLRT.EFF_FROM_DT &gt; #slsDt#
               OR
                NVL(PLLRT.EFF_THRU_DT, #highValDt#) &lt; #slsDt#
               )
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="03">
           AND PLLRT.DEL_FLG = #flgY#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="04">
           AND PLLRT.DEL_FLG = #flgN#
           AND (
                (PLLRT.EFF_FROM_DT &lt;= #slsDt# AND NVL(PLLRT.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#)
                OR
                (PLLRT.EFF_FROM_DT &gt; #slsDt# OR NVL(PLLRT.EFF_THRU_DT, #highValDt#) &lt; #slsDt#)
               )
        </isEqual>
        <isNotNull property="svcSegCd_DH">
           AND PLLRT.SVC_SEG_CD = #svcSegCd_DH#
        </isNotNull>
        <isNotNull property="prcInOutRgCd_DH">
           AND PLLRT.PRC_IN_OUT_RG_CD = #prcInOutRgCd_DH#
        </isNotNull>
        <isNotNull property="prcLeaseCmpyAbbrNm_D5">
           AND UPPER(PLLRT.PRC_LEASE_CMPY_ABBR_NM) LIKE #prcLeaseCmpyAbbrNm_D5#
        </isNotNull>
        <isNotNull property="effFromDt_Z1">
           AND PLLRT.EFF_FROM_DT &gt;= #effFromDt_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z2">
           AND PLLRT.EFF_FROM_DT &lt;= #effFromDt_Z2#
        </isNotNull>
        <isNotNull property="effThruDt_Z1">
           AND NVL(PLLRT.EFF_THRU_DT, #highValDt#) &gt;= #effThruDt_Z1#
        </isNotNull>
        <isNotNull property="effThruDt_Z2">
           AND NVL(PLLRT.EFF_THRU_DT, #highValDt#) &lt;= #effThruDt_Z2#
        </isNotNull>
        <isNotNull property="cratDt_Z1">
           AND PLLRT.EZINTIME &gt;= #cratDt_Z1#
        </isNotNull>
        <isNotNull property="cratDt_Z2">
           AND PLLRT.EZINTIME &lt;= #cratDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z1">
           AND PLLRT.EZUPTIME &gt;= #lastUpdDt_Z1#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z2">
           AND PLLRT.EZUPTIME &lt;= #lastUpdDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="xxFullNm_Z1">
           AND (
                   PLLRT.EZINUSERID = #xxFullNm_Z1#
              OR (     AP1.FIRST_NM IS NOT NULL
                   AND UPPER(AP1.FIRST_NM || ' ' || AP1.LAST_NM) LIKE #xxFullNm_Z1#
                 )
             )
        </isNotNull>
        <isNotNull property="xxFullNm_Z2">
           AND (
                   PLLRT.EZUPUSERID = #xxFullNm_Z2#
              OR (     AP2.FIRST_NM IS NOT NULL
                   AND UPPER(AP2.FIRST_NM || ' ' || AP2.LAST_NM) LIKE #xxFullNm_Z2#
                 )
             )
        </isNotNull>
        <isNotNull property="prcListLeaseRtrnPk">
           AND PLLRT.PRC_LIST_LEASE_RTRN_PK = #prcListLeaseRtrnPk#
        </isNotNull>
      ORDER BY PLLRT.PRC_LIST_LEASE_RTRN_PK
    ) A
    <isNotNull property="rowNum">
    WHERE ROWNUM &lt;= #rowNum#
    </isNotNull>
    </statement>
    <resultMap id="result.getPrcListValLeaseRtrnFee" class="NMAL7010_GSMsg">
        <result property="prcLeaseCmpyAbbrNm_PG"   column="PRC_LEASE_CMPY_ABBR_NM"    javaType="EZDSStringItem"/>
        <result property="svcSegCd_PG"             column="SVC_SEG_CD"                javaType="EZDSStringItem"/>
        <result property="prcInOutRgCd_PG"         column="PRC_IN_OUT_RG_CD"          javaType="EZDSStringItem"/>
        <result property="dstMileAmt_PG"           column="DST_MILE_AMT"              javaType="EZDSBigDecimalItem"/>
        <result property="rtrnFeeAmt_PG"           column="RTRN_FEE_AMT"              javaType="EZDSBigDecimalItem"/>
        <result property="effFromDt_PG"            column="EFF_FROM_DT"               javaType="EZDSDateItem"/>
        <result property="effThruDt_PG"            column="EFF_THRU_DT"               javaType="EZDSDateItem"/>
        <result property="delFlg_PG"               column="DEL_FLG"                   javaType="EZDSStringItem"/>
        <result property="prcListLeaseRtrnPk_PG"   column="PRC_LIST_LEASE_RTRN_PK"    javaType="EZDSBigDecimalItem"/>
        <result property="xxScrStsTxt_G1"          column="XX_SCR_STS_TXT"            javaType="EZDSStringItem"/>
        <result property="cratDt_PG"               column="CRAT_DT"                   javaType="EZDSDateItem"/>
        <result property="xxFullNm_G1"             column="CRAT_USR_NM"               javaType="EZDSStringItem"/>
        <result property="lastUpdDt_PG"            column="UPD_DT"                    javaType="EZDSDateItem"/>
        <result property="xxFullNm_G2"             column="UPD_USR_NM"                javaType="EZDSStringItem"/>
        <result property="ezUpTime_PG"             column="EZUPTIME"                  javaType="EZDSStringItem"/>
        <result property="ezUpTimeZone_PG"         column="EZUPTIMEZONE"              javaType="EZDSStringItem"/>
    </resultMap>

    <statement id="getPrcListValTradeIn" parameterClass="Map" resultMap="result.getPrcListValTradeIn">
    SELECT
        A.*
      , CASE
          WHEN A.DEL_FLG = #flgY#
            THEN #stsDeleted#
          WHEN #slsDt# BETWEEN A.EFF_FROM_DT AND NVL(A.EFF_THRU_DT, #highValDt#)
            THEN #stsActive#
          ELSE #stsInactive#
        END        AS XX_SCR_STS_TXT
    FROM (
        SELECT PLTI.MDL_ID
             , PLTI.MDL_NM
             , PLTI.TI_AMT
             , PLTI.MTR_RNG_REQ_FLG
             , PLTI.FROM_MTR_COPY_VOL_CNT
             , PLTI.THRU_MTR_COPY_VOL_CNT
             , PLTI.EFF_FROM_DT
             , PLTI.EFF_THRU_DT
             , PLTI.DEL_FLG
             , PLTI.PRC_LIST_TI_VAL_PK
             , SUBSTR(PLTI.EZINTIME, 1, 8)    CRAT_DT
             , CASE
                 WHEN AP1.FIRST_NM IS NOT NULL THEN PLTI.EZINUSERID || '(' || AP1.FIRST_NM || ' ' || AP1.LAST_NM || ')'
                 ELSE PLTI.EZINUSERID
               END CRAT_USR_NM
             , SUBSTR(PLTI.EZUPTIME, 1, 8)    UPD_DT
             , CASE
                 WHEN AP2.FIRST_NM IS NOT NULL THEN PLTI.EZUPUSERID || '(' || AP2.FIRST_NM || ' ' || AP2.LAST_NM || ')'
                 ELSE PLTI.EZUPUSERID
               END UPD_USR_NM
             , PLTI.EZUPTIME
             , PLTI.EZUPTIMEZONE
          FROM PRC_LIST_TI_VAL PLTI
             , AUTH_PSN AP1
             , AUTH_PSN AP2
         WHERE PLTI.GLBL_CMPY_CD = #glblCmpyCd#
           AND PLTI.EZCANCELFLAG = '0'
           AND PLTI.PRC_CATG_CD  = #prcCatgCd#
           AND PLTI.GLBL_CMPY_CD = AP1.GLBL_CMPY_CD(+)
           AND PLTI.EZCANCELFLAG = AP1.EZCANCELFLAG(+)
           AND PLTI.EZINUSERID   = AP1.USR_NM(+)
           AND PLTI.GLBL_CMPY_CD = AP2.GLBL_CMPY_CD(+)
           AND PLTI.EZCANCELFLAG = AP2.EZCANCELFLAG(+)
           AND PLTI.EZUPUSERID   = AP2.USR_NM(+)
        <isEqual property="prcDispRecTpCd" compareValue="01">
           AND PLTI.DEL_FLG = #flgN#
           AND PLTI.EFF_FROM_DT &lt;= #slsDt#
           AND NVL(PLTI.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="02">
           AND PLTI.DEL_FLG = #flgN#
           AND (PLTI.EFF_FROM_DT &gt; #slsDt#
               OR
                NVL(PLTI.EFF_THRU_DT, #highValDt#) &lt; #slsDt#
               )
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="03">
           AND PLTI.DEL_FLG = #flgY#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="04">
           AND PLTI.DEL_FLG = #flgN#
           AND (
                (PLTI.EFF_FROM_DT &lt;= #slsDt# AND NVL(PLTI.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#)
                OR
                (PLTI.EFF_FROM_DT &gt; #slsDt# OR NVL(PLTI.EFF_THRU_DT, #highValDt#) &lt; #slsDt#)
               )
        </isEqual>
        <isNotNull property="mdlNm_D5">
           AND UPPER(PLTI.MDL_NM) LIKE #mdlNm_D5#
        </isNotNull>
        <isNotNull property="effFromDt_Z1">
           AND PLTI.EFF_FROM_DT &gt;= #effFromDt_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z2">
           AND PLTI.EFF_FROM_DT &lt;= #effFromDt_Z2#
        </isNotNull>
        <isNotNull property="effThruDt_Z1">
           AND NVL(PLTI.EFF_THRU_DT, #highValDt#) &gt;= #effThruDt_Z1#
        </isNotNull>
        <isNotNull property="effThruDt_Z2">
           AND NVL(PLTI.EFF_THRU_DT, #highValDt#) &lt;= #effThruDt_Z2#
        </isNotNull>
        <isNotNull property="cratDt_Z1">
           AND PLTI.EZINTIME &gt;= #cratDt_Z1#
        </isNotNull>
        <isNotNull property="cratDt_Z2">
           AND PLTI.EZINTIME &lt;= #cratDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z1">
           AND PLTI.EZUPTIME &gt;= #lastUpdDt_Z1#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z2">
           AND PLTI.EZUPTIME &lt;= #lastUpdDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="xxFullNm_Z1">
           AND (
                   PLTI.EZINUSERID = #xxFullNm_Z1#
              OR (     AP1.FIRST_NM IS NOT NULL
                   AND UPPER(AP1.FIRST_NM || ' ' || AP1.LAST_NM) LIKE #xxFullNm_Z1#
                 )
             )
        </isNotNull>
        <isNotNull property="xxFullNm_Z2">
           AND (
                   PLTI.EZUPUSERID = #xxFullNm_Z2#
              OR (     AP2.FIRST_NM IS NOT NULL
                   AND UPPER(AP2.FIRST_NM || ' ' || AP2.LAST_NM) LIKE #xxFullNm_Z2#
                 )
             )
        </isNotNull>
        <isNotNull property="prcListTiValPk">
           AND PLTI.PRC_LIST_TI_VAL_PK = #prcListTiValPk#
        </isNotNull>
      ORDER BY PLTI.PRC_LIST_TI_VAL_PK
    ) A
    <isNotNull property="rowNum">
    WHERE ROWNUM &lt;= #rowNum#
    </isNotNull>
    </statement>
    <resultMap id="result.getPrcListValTradeIn" class="NMAL7010_HSMsg">
        <result property="mdlId_PH"                column="MDL_ID"                 javaType="EZDSBigDecimalItem"/>
        <result property="mdlNm_PH"                column="MDL_NM"                 javaType="EZDSStringItem"/>
        <result property="tiAmt_PH"                column="TI_AMT"                 javaType="EZDSBigDecimalItem"/>
        <result property="mtrRngReqFlg_PH"         column="MTR_RNG_REQ_FLG"        javaType="EZDSStringItem"/>
        <result property="fromMtrCopyVolCnt_PH"    column="FROM_MTR_COPY_VOL_CNT"  javaType="EZDSBigDecimalItem"/>
        <result property="thruMtrCopyVolCnt_PH"    column="THRU_MTR_COPY_VOL_CNT"  javaType="EZDSBigDecimalItem"/>
        <result property="effFromDt_PH"            column="EFF_FROM_DT"            javaType="EZDSDateItem"/>
        <result property="effThruDt_PH"            column="EFF_THRU_DT"            javaType="EZDSDateItem"/>
        <result property="delFlg_PH"               column="DEL_FLG"                javaType="EZDSStringItem"/>
        <result property="prcListTiValPk_PH"       column="PRC_LIST_TI_VAL_PK"     javaType="EZDSBigDecimalItem"/>
        <result property="xxScrStsTxt_H1"          column="XX_SCR_STS_TXT"         javaType="EZDSStringItem"/>
        <result property="cratDt_PH"               column="CRAT_DT"                javaType="EZDSDateItem"/>
        <result property="xxFullNm_H1"             column="CRAT_USR_NM"            javaType="EZDSStringItem"/>
        <result property="lastUpdDt_PH"            column="UPD_DT"                 javaType="EZDSDateItem"/>
        <result property="xxFullNm_H2"             column="UPD_USR_NM"             javaType="EZDSStringItem"/>
        <result property="ezUpTime_PH"             column="EZUPTIME"               javaType="EZDSStringItem"/>
        <result property="ezUpTimeZone_PH"         column="EZUPTIMEZONE"           javaType="EZDSStringItem"/>
    </resultMap>

    <statement id="getPrcListValQtyDisc" parameterClass="Map" resultMap="result.getPrcListValQtyDisc">
    SELECT
        *
    FROM (
        SELECT PLQD.PRC_QLFY_TP_CD
             , PLQD.PRC_QLFY_VAL_TXT
             , AMV.MDSE_NM
             , CPJ.COA_PROJ_NM COA_MDSE_TP_NM
             , MIT.MDSE_ITEM_TP_NM
             , CP.COA_PROD_NM
             , '' T_MDL_NM
             , PLQD.QTY_DISC_PRC_AMT
             , PLQD.PKG_UOM_CD
             , PLQD.PRC_BREAK_FLG
             , PLQD.EFF_FROM_DT
             , PLQD.EFF_THRU_DT
             , PLQD.DEL_FLG
             , PLQD.PRC_LIST_QTY_DISC_PK
             , SUBSTR(PLQD.EZINTIME, 1, 8)    CRAT_DT
             , CASE
                 WHEN AP1.FIRST_NM IS NOT NULL THEN PLQD.EZINUSERID || '(' || AP1.FIRST_NM || ' ' || AP1.LAST_NM || ')'
                 ELSE PLQD.EZINUSERID
               END CRAT_USR_NM
             , SUBSTR(PLQD.EZUPTIME, 1, 8)    UPD_DT
             , CASE
                 WHEN AP2.FIRST_NM IS NOT NULL THEN PLQD.EZUPUSERID || '(' || AP2.FIRST_NM || ' ' || AP2.LAST_NM || ')'
                 ELSE PLQD.EZUPUSERID
               END UPD_USR_NM
             , PLQD.EZUPTIME
             , PLQD.EZUPTIMEZONE
          FROM PRC_LIST_QTY_DISC PLQD
             , ALL_MDSE_V AMV
             , COA_PROJ CPJ
             , MDSE_ITEM_TP MIT
             , COA_PROD CP
             , AUTH_PSN AP1
             , AUTH_PSN AP2
         WHERE PLQD.GLBL_CMPY_CD = #glblCmpyCd#
           AND PLQD.EZCANCELFLAG = '0'
           AND PLQD.PRC_CATG_CD  = #prcCatgCd#
           AND PLQD.GLBL_CMPY_CD = AMV.GLBL_CMPY_CD(+)
           AND PLQD.EZCANCELFLAG = AMV.EZCANCELFLAG(+)
           AND PLQD.PRC_QLFY_VAL_TXT = AMV.MDSE_CD(+)
           AND AMV.GLBL_CMPY_CD = CPJ.GLBL_CMPY_CD(+)
           AND AMV.EZCANCELFLAG = CPJ.EZCANCELFLAG(+)
           AND AMV.COA_MDSE_TP_CD = CPJ.COA_PROJ_CD(+)
           AND AMV.GLBL_CMPY_CD = MIT.GLBL_CMPY_CD(+)
           AND AMV.EZCANCELFLAG = MIT.EZCANCELFLAG(+)
           AND AMV.MDSE_ITEM_TP_CD = MIT.MDSE_ITEM_TP_CD(+)
           AND AMV.GLBL_CMPY_CD   = CP.GLBL_CMPY_CD(+)
           AND AMV.EZCANCELFLAG   = CP.EZCANCELFLAG(+)
           AND AMV.COA_PROD_CD    = CP.COA_PROD_CD(+)
           AND PLQD.GLBL_CMPY_CD = AP1.GLBL_CMPY_CD(+)
           AND PLQD.EZCANCELFLAG = AP1.EZCANCELFLAG(+)
           AND PLQD.EZINUSERID   = AP1.USR_NM(+)
           AND PLQD.GLBL_CMPY_CD = AP2.GLBL_CMPY_CD(+)
           AND PLQD.EZCANCELFLAG = AP2.EZCANCELFLAG(+)
           AND PLQD.EZUPUSERID   = AP2.USR_NM(+)
        <isEqual property="prcDispRecTpCd" compareValue="01">
           AND PLQD.DEL_FLG = #flgN#
           AND PLQD.EFF_FROM_DT &lt;= #slsDt#
           AND NVL(PLQD.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="02">
           AND PLQD.DEL_FLG = #flgN#
           AND (PLQD.EFF_FROM_DT &gt; #slsDt#
               OR
                NVL(PLQD.EFF_THRU_DT, #highValDt#) &lt; #slsDt#
               )
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="03">
           AND PLQD.DEL_FLG = #flgY#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="04">
           AND PLQD.DEL_FLG = #flgN#
           AND (
                (PLQD.EFF_FROM_DT &lt;= #slsDt# AND NVL(PLQD.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#)
                OR
                (PLQD.EFF_FROM_DT &gt; #slsDt# OR NVL(PLQD.EFF_THRU_DT, #highValDt#) &lt; #slsDt#)
               )
        </isEqual>
        <isNotNull property="prcQlfyTpCd_D2">
           AND PLQD.PRC_QLFY_TP_CD = #prcQlfyTpCd_D2#
        </isNotNull>
        <isNotNull property="prcQlfyValTxt_D2">
           AND PLQD.PRC_QLFY_VAL_TXT = #prcQlfyValTxt_D2#
        </isNotNull>
         ORDER BY PLQD.PRC_LIST_QTY_DISC_PK
        )
    <isNotNull property="rowNum">
    WHERE ROWNUM &lt;= #rowNum#
    </isNotNull>
    </statement>
    <resultMap id="result.getPrcListValQtyDisc" class="NMAL7010_ISMsg">
        <result property="prcQlfyTpCd_PI"          column="PRC_QLFY_TP_CD"        javaType="EZDSStringItem"/>
        <result property="prcQlfyValTxt_PI"        column="PRC_QLFY_VAL_TXT"      javaType="EZDSStringItem"/>
        <result property="prodCtrlNm_PI"           column="MDSE_NM"               javaType="EZDSStringItem"/>
        <result property="coaProjNm_PI"            column="COA_MDSE_TP_NM"        javaType="EZDSStringItem"/>
        <result property="mdseItemTpNm_PI"         column="MDSE_ITEM_TP_NM"       javaType="EZDSStringItem"/>
        <result property="coaProdNm_PI"            column="COA_PROD_NM"           javaType="EZDSStringItem"/>
        <result property="t_MdlNm_PI"              column="T_MDL_NM"              javaType="EZDSStringItem"/>
        <result property="qtyDiscPrcAmt_PI"        column="QTY_DISC_PRC_AMT"      javaType="EZDSBigDecimalItem"/>
        <result property="pkgUomCd_PI"             column="PKG_UOM_CD"            javaType="EZDSStringItem"/>
        <result property="prcBreakFlg_PI"          column="PRC_BREAK_FLG"         javaType="EZDSStringItem"/>
        <result property="effFromDt_PI"            column="EFF_FROM_DT"           javaType="EZDSDateItem"/>
        <result property="effThruDt_PI"            column="EFF_THRU_DT"           javaType="EZDSDateItem"/>
        <result property="delFlg_PI"               column="DEL_FLG"               javaType="EZDSStringItem"/>
        <result property="prcListQtyDiscPk_PI"     column="PRC_LIST_QTY_DISC_PK"  javaType="EZDSBigDecimalItem"/>
        <result property="cratDt_PI"               column="CRAT_DT"               javaType="EZDSDateItem"/>
        <result property="xxFullNm_I1"             column="CRAT_USR_NM"           javaType="EZDSStringItem"/>
        <result property="lastUpdDt_PI"            column="UPD_DT"                javaType="EZDSDateItem"/>
        <result property="xxFullNm_I2"             column="UPD_USR_NM"            javaType="EZDSStringItem"/>
        <result property="ezUpTime_PI"             column="EZUPTIME"              javaType="EZDSStringItem"/>
        <result property="ezUpTimeZone_PI"         column="EZUPTIMEZONE"          javaType="EZDSStringItem"/>
    </resultMap>

    <statement id="getPrcListValQtyDiscDtl" parameterClass="Map" resultMap="result.getPrcListValQtyDiscDtl">
        SELECT PLQDD.QTY_DISC_DTL_QTY
             , PLQDD.PKG_UOM_CD
             , PLQDD.PRC_BREAK_AMT
             , PLQDD.EZUPTIME
             , PLQDD.EZUPTIMEZONE
             , PLQDD.DEL_FLG
             , PLQDD.PRC_LIST_QTY_DISC_DTL_PK
             , PLQDD.PRC_LIST_QTY_DISC_PK
             , ROW_NUMBER() OVER(ORDER BY PRC_LIST_QTY_DISC_DTL_PK) SORT_NUM
          FROM PRC_LIST_QTY_DISC_DTL PLQDD
         WHERE PLQDD.GLBL_CMPY_CD = #glblCmpyCd#
           AND PLQDD.EZCANCELFLAG = '0'
           AND PLQDD.PRC_CATG_CD  = #prcCatgCd#
        <isEqual property="prcDispRecTpCd" compareValue="01">
           AND PLQDD.DEL_FLG = #flgN#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="02">
           AND PLQDD.DEL_FLG = #flgN#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="03">
           AND PLQDD.DEL_FLG = #flgY#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="04">
           AND PLQDD.DEL_FLG = #flgN#
        </isEqual>
         ORDER BY PLQDD.PRC_LIST_QTY_DISC_DTL_PK
    </statement>
    <resultMap id="result.getPrcListValQtyDiscDtl" class="NMAL7010_JSMsg">
        <result property="qtyDiscDtlQty_PJ"        column="QTY_DISC_DTL_QTY"          javaType="EZDSBigDecimalItem"/>
        <result property="pkgUomCd_PJ"             column="PKG_UOM_CD"                javaType="EZDSStringItem"/>
        <result property="prcBreakAmt_PJ"          column="PRC_BREAK_AMT"             javaType="EZDSBigDecimalItem"/>
        <result property="delFlg_PJ"               column="DEL_FLG"                   javaType="EZDSStringItem"/>
        <result property="prcListQtyDiscDtlPk_PJ"  column="PRC_LIST_QTY_DISC_DTL_PK"  javaType="EZDSBigDecimalItem"/>
        <result property="prcListQtyDiscPk_PJ"     column="PRC_LIST_QTY_DISC_PK"      javaType="EZDSBigDecimalItem"/>
        <result property="ezUpTime_PJ"             column="EZUPTIME"                  javaType="EZDSStringItem"/>
        <result property="ezUpTimeZone_PJ"         column="EZUPTIMEZONE"              javaType="EZDSStringItem"/>
        <result property="xxSortNum_PJ"            column="SORT_NUM"                  javaType="EZDSBigDecimalItem"/>
    </resultMap>

    <statement id="getPrcListEquipDtl" parameterClass="Map" resultMap="result.getPrcListEquipDtl">
        SELECT PLED.QTY_DISC_DTL_QTY
             , PLED.PRC_BREAK_AMT
             , PLED.EZUPTIME
             , PLED.EZUPTIMEZONE
             , PLED.DEL_FLG
             , PLED.PRC_LIST_EQUIP_DTL_PK
             , PLED.PRC_LIST_EQUIP_PK
          FROM PRC_LIST_EQUIP_DTL PLED
         WHERE PLED.GLBL_CMPY_CD      = #glblCmpyCd#
           AND PLED.EZCANCELFLAG      = '0'
           AND PLED.PRC_LIST_EQUIP_PK = #prcListEquipPk#
         ORDER BY
               PLED.QTY_DISC_DTL_QTY
             , PLED.DEL_FLG
             , PLED.EZUPTIME
    </statement>
    <resultMap id="result.getPrcListEquipDtl" class="NMAL7010_QCMsg">
        <result property="qtyDiscDtlQty_QP"        column="QTY_DISC_DTL_QTY"          javaType="EZDSBigDecimalItem"/>
        <result property="pkgUomCd_QP"             column="PKG_UOM_CD"                javaType="EZDSStringItem"/>
        <result property="prcBreakAmt_QP"          column="PRC_BREAK_AMT"             javaType="EZDSBigDecimalItem"/>
        <result property="delFlg_QP"               column="DEL_FLG"                   javaType="EZDSStringItem"/>
        <result property="prcListEquipDtlPk_QP"    column="PRC_LIST_EQUIP_DTL_PK"     javaType="EZDSBigDecimalItem"/>
        <result property="prcListEquipPk_QP"       column="PRC_LIST_EQUIP_PK"         javaType="EZDSBigDecimalItem"/>
        <result property="ezUpTime_QP"             column="EZUPTIME"                  javaType="EZDSStringItem"/>
        <result property="ezUpTimeZone_QP"         column="EZUPTIMEZONE"              javaType="EZDSStringItem"/>
    </resultMap>

    <statement id="getPrcContr" parameterClass="Map" resultClass="String">
        SELECT PC.PRC_CONTR_NM
          FROM PRC_CONTR PC
         WHERE PC.GLBL_CMPY_CD = #glblCmpyCd#
           AND PC.EZCANCELFLAG = '0'
           AND PC.PRC_CONTR_NUM = #prcContrNum#
    </statement>

    <statement id="getPrcList" parameterClass="Map" resultClass="Map">
        SELECT PC.PRC_CATG_CD
          FROM PRC_CATG PC
         WHERE PC.GLBL_CMPY_CD = #glblCmpyCd#
           AND PC.EZCANCELFLAG = '0'
           AND PC.PRC_CATG_NM  = #prcCatgNm#
        <isNotNull property="prcCatgCd">
           AND PC.PRC_CATG_CD != #prcCatgCd#
        </isNotNull>
           
    </statement>

    <statement id="getPrcGrp" parameterClass="Map" resultClass="Map">
        SELECT PG.PRC_GRP_PK
             , PG.PRC_GRP_NM
          FROM PRC_GRP PG
         WHERE PG.GLBL_CMPY_CD = #glblCmpyCd#
           AND PG.EZCANCELFLAG = '0'
        <isEqual property="prcGrpTpCd" compareValue="03">
           AND PG.PRC_GRP_PK    = #prcGrpPk#
        </isEqual>
        <isEqual property="prcGrpTpCd" compareValue="04">
           AND PG.PRC_GRP_PK    = #prcGrpPk#
        </isEqual>
           AND PG.PRC_GRP_TP_CD = #prcGrpTpCd#
    </statement>

    <statement id="getProdCtrl" parameterClass="Map" resultClass="String">
        SELECT DISTINCT CASE
                 WHEN #prcQlfyTpCd# = #mdseTp#    THEN AMV.COA_MDSE_TP_CD
                 WHEN #prcQlfyTpCd# = #prodHrch1# THEN AMV.COA_MDSE_TP_CD || #comma# || AMV.ZEROTH_PROD_CTRL_CD
                 WHEN #prcQlfyTpCd# = #prodHrch2# THEN AMV.COA_MDSE_TP_CD || #comma# || AMV.ZEROTH_PROD_CTRL_CD || #comma# || AMV.FIRST_PROD_CTRL_CD
                 WHEN #prcQlfyTpCd# = #prodHrch3# THEN AMV.COA_MDSE_TP_CD || #comma# || AMV.ZEROTH_PROD_CTRL_CD || #comma# || AMV.FIRST_PROD_CTRL_CD || #comma# || AMV.SCD_PROD_CTRL_CD
                 WHEN #prcQlfyTpCd# = #prodHrch4# THEN AMV.COA_MDSE_TP_CD || #comma# || AMV.ZEROTH_PROD_CTRL_CD || #comma# || AMV.FIRST_PROD_CTRL_CD || #comma# || AMV.SCD_PROD_CTRL_CD || #comma# || AMV.THIRD_PROD_CTRL_CD
                 WHEN #prcQlfyTpCd# = #prodHrch5# THEN AMV.COA_MDSE_TP_CD || #comma# || AMV.ZEROTH_PROD_CTRL_CD || #comma# || AMV.FIRST_PROD_CTRL_CD || #comma# || AMV.SCD_PROD_CTRL_CD || #comma# || AMV.THIRD_PROD_CTRL_CD || #comma# || AMV.FRTH_PROD_CTRL_CD 
                 WHEN #prcQlfyTpCd# = #itemCd#    THEN AMV.COA_MDSE_TP_CD || #comma# || AMV.ZEROTH_PROD_CTRL_CD || #comma# || AMV.FIRST_PROD_CTRL_CD || #comma# || AMV.SCD_PROD_CTRL_CD || #comma# || AMV.THIRD_PROD_CTRL_CD || #comma# || AMV.FRTH_PROD_CTRL_CD || #comma# || AMV.MDSE_CD 
               END PROD_CTRL_INFO
          FROM ALL_MDSE_V AMV
         WHERE AMV.GLBL_CMPY_CD = #glblCmpyCd#
           AND AMV.EZCANCELFLAG = '0'
        <isEqual property="prcQlfyTpCd" compareValue="02">
           AND AMV.COA_MDSE_TP_CD = #prcQlfyValTxt#
        </isEqual>
        <isEqual property="prcQlfyTpCd" compareValue="03">
           AND AMV.ZEROTH_PROD_CTRL_CD = #prcQlfyValTxt#
        </isEqual>
        <isEqual property="prcQlfyTpCd" compareValue="04">
           AND AMV.FIRST_PROD_CTRL_CD = #prcQlfyValTxt#
        </isEqual>
        <isEqual property="prcQlfyTpCd" compareValue="05">
           AND AMV.SCD_PROD_CTRL_CD = #prcQlfyValTxt#
        </isEqual>
        <isEqual property="prcQlfyTpCd" compareValue="06">
           AND AMV.THIRD_PROD_CTRL_CD= #prcQlfyValTxt#
        </isEqual>
        <isEqual property="prcQlfyTpCd" compareValue="07">
           AND AMV.FRTH_PROD_CTRL_CD = #prcQlfyValTxt#
        </isEqual>
        <isEqual property="prcQlfyTpCd" compareValue="01">
           AND AMV.MDSE_CD = #prcQlfyValTxt#
        </isEqual>
           AND ROWNUM = 1
    </statement>

    <statement id="getPrcFmlaRelation" parameterClass="Map" resultClass="Map">
        SELECT PC.PRC_CATG_NM
          FROM PRC_LIST_EQUIP PLE
             , PRC_FMLA PF
             , PRC_CATG PC
         WHERE PLE.GLBL_CMPY_CD   = #glblCmpyCd#
           AND PLE.EZCANCELFLAG   = '0'
           AND PLE.GLBL_CMPY_CD = PF.GLBL_CMPY_CD
           AND PLE.EZCANCELFLAG = PF.EZCANCELFLAG
           AND PLE.PRC_CATG_CD  = PF.PRC_CATG_CD
           AND PLE.GLBL_CMPY_CD = PC.GLBL_CMPY_CD
           AND PLE.EZCANCELFLAG = PC.EZCANCELFLAG
           AND PLE.PRC_CATG_CD  = PC.PRC_CATG_CD
           AND PLE.PRC_QLFY_VAL_TXT = #prcQlfyValTxt#
           AND PF.PRC_FMLA_PK   = #prcFmlaPk#
    </statement>

<!-- QC7958 delete
    <statement id="getInEachQty" parameterClass="Map" resultClass="Map">
        SELECT MSP.IN_EACH_QTY
          FROM ORD_TAKE_MDSE OTM
             , MDSE_STORE_PKG MSP
         WHERE OTM.GLBL_CMPY_CD   = #glblCmpyCd#
           AND OTM.EZCANCELFLAG   = '0'
           AND OTM.ORD_TAKE_MDSE_CD = #itemCd#
           AND MSP.PKG_UOM_CD   = #pkgUomCd#
           AND OTM.GLBL_CMPY_CD = MSP.GLBL_CMPY_CD
           AND OTM.EZCANCELFLAG = MSP.EZCANCELFLAG
           AND OTM.MDSE_CD      = MSP.MDSE_CD
         UNION ALL
        SELECT MSP.IN_EACH_QTY
          FROM MDSE_STORE_PKG MSP
         WHERE MSP.GLBL_CMPY_CD   = #glblCmpyCd#
           AND MSP.EZCANCELFLAG   = '0'
           AND MSP.MDSE_CD = #itemCd#
           AND MSP.PKG_UOM_CD   = #pkgUomCd#
    </statement>
-->

<!-- QC7958 Add -->
    <statement id="getUomInfo" parameterClass="Map" resultClass="Map">
        SELECT
            MSP.PKG_UOM_CD
           ,MSP.IN_EACH_QTY
        FROM
            MDSE_STORE_PKG    MSP
           ,MDSE              M
           ,PKG_UOM           PU
        WHERE
            MSP.GLBL_CMPY_CD   = M.GLBL_CMPY_CD
        AND MSP.MDSE_CD        = M.MDSE_CD
        AND MSP.GLBL_CMPY_CD   = PU.GLBL_CMPY_CD
        AND M.PKG_UOM_CLS_CD   = PU.PKG_UOM_CLS_CD
        AND MSP.GLBL_CMPY_CD   = #glblCmpyCd#
        <!-- 2018/05/15 S21_NA#26015 Mod Start -->
        <!-- AND PU.PKG_UOM_CD      = #pkgUomCd#  -->
        AND PU.PKG_UOM_CD      IN (MSP.PKG_UOM_CD, MSP.BASE_PKG_UOM_CD)
        AND MSP.PKG_UOM_CD      = #pkgUomCd#
        <!-- 2018/05/15 S21_NA#26015 Mod End -->
        AND MSP.MDSE_CD        = NVL((
                                    SELECT
                                        MDSE_CD
                                    FROM
                                        ORD_TAKE_MDSE OTM
                                    WHERE
                                        OTM.GLBL_CMPY_CD = 'ADB'
                                    AND OTM.EZCANCELFLAG = '0'
                                    AND OTM.ORD_TAKE_MDSE_CD = #mdseCd#
                                  )
                                  , #mdseCd#
                                )
        AND MSP.EZCANCELFLAG  = '0'
        AND M.EZCANCELFLAG    = '0'
        AND PU.EZCANCELFLAG   = '0'
    </statement>

    <statement id="getBllgMtr" parameterClass="Map" resultClass="Map">
        SELECT PMPBM.PRC_MTR_PKG_BLLG_MTR_PK
             , PMPBM.MTR_LB_CD
             , PMPBM.MTR_LB_NM
             , PMPBM.MDSE_CD
             , AMV.MDSE_NM
          FROM PRC_MTR_PKG_BLLG_MTR PMPBM
             , ALL_MDSE_V AMV
             , MDL_NM MN
         WHERE PMPBM.GLBL_CMPY_CD   = #glblCmpyCd#
           AND PMPBM.EZCANCELFLAG   = '0'
           AND PMPBM.PRC_MTR_PKG_PK = #prcMtrPkgPk#
           AND PMPBM.GLBL_CMPY_CD = AMV.GLBL_CMPY_CD(+)
           AND PMPBM.EZCANCELFLAG = AMV.EZCANCELFLAG(+)
           AND PMPBM.MDSE_CD      = AMV.MDSE_CD(+)
           AND PMPBM.GLBL_CMPY_CD = MN.T_GLBL_CMPY_CD(+)
           AND PMPBM.EZCANCELFLAG = MN.EZCANCELFLAG(+)
           AND PMPBM.MDL_ID       = MN.T_MDL_ID(+)
           AND #mdlNm#            = MN.T_MDL_NM(+)
    </statement>

    <statement id="getPrcMtrPkgBllgMtr" parameterClass="Map" resultClass="BigDecimal">
        SELECT DISTINCT PMPMSV.PRC_MTR_PKG_BLLG_MTR_PK
          FROM PRC_MTR_PKG_MTR_STRU_V PMPMSV
         WHERE PMPMSV.GLBL_CMPY_CD = #glblCmpyCd#
<!--         AND PMPMSV.EZCANCELFLAG = '0'  -->  
           AND PMPMSV.PRC_MTR_PKG_PK = #prcMtrPkgPk#
           AND PMPMSV.BLLG_MTR_LB_CD = #mtrLbCd#
           AND PMPMSV.MDL_ID = #mdlId#

           AND PMPMSV.MDL_MTR_EFF_FROM_DT &lt;= #slsDt#
           AND NVL(PMPMSV.MDL_MTR_EFF_THRU_DT, #highValDt#) &gt;= #slsDt# 

           AND PMPMSV.BLLG_MTR_MAP_EFF_FROM_DT &lt;= #slsDt#
           AND NVL(PMPMSV.BLLG_MTR_MAP_EFF_THRU_DT, #highValDt#) &gt;= #slsDt# 

           AND PMPMSV.MTR_PKG_EFF_FROM_DT &lt;= #slsDt#
           AND NVL(PMPMSV.MTR_PKG_EFF_THRU_DT, #highValDt#) &gt;= #slsDt# 

           AND PMPMSV.MTR_PKG_MDL_EFF_FROM_DT &lt;= #slsDt#
           AND NVL(PMPMSV.MTR_PKG_MDL_EFF_THRU_DT, #highValDt#) &gt;= #slsDt# 
    </statement>

    <statement id="getCodeTableCodeValue" parameterClass="Map" resultClass="String">
        SELECT
             A.$tblNm$_CD
        FROM
            $tblNm$ A
        WHERE
                A.GLBL_CMPY_CD = #glblCmpyCd#
            AND A.EZCANCELFLAG = '0'
        <isEqual property="nmFlg" compareValue="Y">
            AND A.$tblNm$_NM = #cdNm#
        </isEqual>
        <isNotEqual property="nmFlg" compareValue="Y">
            AND A.$tblNm$_DESC_TXT = #cdNm#
        </isNotEqual>
    </statement>

    <statement id="getAnyColmn" parameterClass="Map" resultClass="String">
        SELECT
            $colNm$     GET_COLUMN
        FROM
            $tblNm$ A
        WHERE
                A.GLBL_CMPY_CD = #glblCmpyCd#
            AND A.EZCANCELFLAG = '0'
            AND A.$whereCol$ = #whereVal#
    </statement>

    <statement id="getPrcCatgMaxSortNum" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             MAX(PC.PRC_CATG_SORT_NUM) MAX_SORT_NUM
        FROM
             PRC_CATG PC
        WHERE
             PC.GLBL_CMPY_CD = #glblCmpyCd#
         AND PC.EZCANCELFLAG = '0'
    </statement>

    <statement id="getMdseInfo" parameterClass="Map" resultClass="Map">
        SELECT AMV.COA_MDSE_TP_CD
             <!-- 2018/07/17 QC#20267 Mod Start -->
             , AMV.MNF_ITEM_CD
             <!-- 2018/07/17 QC#20267 Mod End -->
             , CPJ.COA_PROJ_NM    COA_MDSE_TP_NM
             , MIT.MDSE_ITEM_TP_NM
             , CP.COA_PROD_NM
             , '' T_MDL_NM
             , CASE WHEN AMV.ZEROTH_PROD_CTRL_CD IS NULL THEN NULL
                    ELSE AMV.ZEROTH_PROD_CTRL_CD || ':' || ZEROTH_PROD_CTRL_NM 
               END ZEROTH_PROD_CTRL
             , CASE WHEN AMV.FIRST_PROD_CTRL_CD IS NULL THEN NULL
                    ELSE AMV.FIRST_PROD_CTRL_CD || ':' || FIRST_PROD_CTRL_NM 
               END FIRST_PROD_CTRL
             , CASE WHEN AMV.SCD_PROD_CTRL_CD IS NULL THEN NULL
                    ELSE AMV.SCD_PROD_CTRL_CD || ':' || SCD_PROD_CTRL_NM 
               END SCD_PROD_CTRL
             , CASE WHEN AMV.THIRD_PROD_CTRL_CD IS NULL THEN NULL
                    ELSE AMV.THIRD_PROD_CTRL_CD || ':' || THIRD_PROD_CTRL_NM 
               END THIRD_PROD_CTRL
             , CASE WHEN AMV.FRTH_PROD_CTRL_CD IS NULL THEN NULL
                    ELSE AMV.FRTH_PROD_CTRL_CD || ':' || FRTH_PROD_CTRL_NM 
               END FRTH_PROD_CTRL
          FROM ALL_MDSE_V AMV
             , COA_PROJ CPJ
             , MDSE_ITEM_TP MIT
             , COA_PROD CP
         WHERE AMV.GLBL_CMPY_CD = #glblCmpyCd#
           AND AMV.EZCANCELFLAG = '0'
           AND AMV.MDSE_CD      = #mdseCd#
           AND AMV.GLBL_CMPY_CD = CPJ.GLBL_CMPY_CD(+)
           AND AMV.EZCANCELFLAG = CPJ.EZCANCELFLAG(+)
           AND AMV.COA_MDSE_TP_CD = CPJ.COA_PROJ_CD(+)
           AND AMV.GLBL_CMPY_CD = MIT.GLBL_CMPY_CD(+)
           AND AMV.EZCANCELFLAG = MIT.EZCANCELFLAG(+)
           AND AMV.MDSE_ITEM_TP_CD = MIT.MDSE_ITEM_TP_CD(+)
           AND AMV.GLBL_CMPY_CD   = CP.GLBL_CMPY_CD(+)
           AND AMV.EZCANCELFLAG   = CP.EZCANCELFLAG(+)
           AND AMV.COA_PROD_CD    = CP.COA_PROD_CD(+)

    </statement>

    <statement id="getCustAudcCatg" parameterClass="Map" resultClass="Map">
        SELECT
            PCAC.PRC_CUST_AUDC_CATG_CD
          , PCAC.PRC_CUST_AUDC_CATG_NM
          , PCAC.PRC_CUST_AUDC_CATG_DESC_TXT
          , PCAC.PRC_CUST_AUDC_CATG_FLG_01
          , PCAC.PRC_CUST_AUDC_CATG_FLG_02
          , PCAC.PRC_CUST_AUDC_CATG_FLG_03
        FROM
            PRC_CUST_AUDC_CATG PCAC
        WHERE
                PCAC.GLBL_CMPY_CD = #glblCmpyCd#
            AND PCAC.EZCANCELFLAG = '0'
        ORDER BY PCAC.PRC_CUST_AUDC_CATG_SORT_NUM
    </statement>

    <statement id="getPrcQlfyTp" parameterClass="Map" resultClass="Map">
        SELECT
            PQT.PRC_QLFY_TP_CD
          , PQT.PRC_QLFY_TP_NM
          , PQT.PRC_QLFY_TP_DESC_TXT
          , PQT.EQUIP_DISP_FLG
          , PQT.QTY_DISC_DISP_FLG
        FROM
            PRC_QLFY_TP PQT
        WHERE
                PQT.GLBL_CMPY_CD = #glblCmpyCd#
            AND PQT.EZCANCELFLAG = '0'
        ORDER BY PQT.PRC_QLFY_TP_SORT_NUM
    </statement>

    <statement id="getTrxAudcCatg" parameterClass="Map" resultClass="Map">
        SELECT
            PTAC.PRC_TRX_AUDC_CATG_CD
          , PTAC.PRC_TRX_AUDC_CATG_NM
          , PTAC.PRC_TRX_AUDC_CATG_DESC_TXT
          , PTAC.PRC_TRX_AUDC_CATG_FLG_01
          , PTAC.PRC_TRX_AUDC_CATG_FLG_02
        FROM
            PRC_TRX_AUDC_CATG PTAC
        WHERE
                PTAC.GLBL_CMPY_CD = #glblCmpyCd#
            AND PTAC.EZCANCELFLAG = '0'
        ORDER BY PTAC.PRC_TRX_AUDC_CATG_SORT_NUM
    </statement>

    <statement id="getPrcListEquip" parameterClass="Map" resultClass="Map">
        SELECT
            PLE.PRC_LIST_EQUIP_PRC_AMT
          , PLE.PRC_FMLA_PK
        FROM
            PRC_LIST_EQUIP PLE
        WHERE
                PLE.GLBL_CMPY_CD = #glblCmpyCd#
            AND PLE.EZCANCELFLAG = '0'
            AND PLE.PRC_CATG_CD  = #prcCatgCd#
            AND PLE.PRC_QLFY_VAL_TXT = #prcQlfyValTxt#
    </statement>

    <statement id="getPrcListEquipForDuplicateCheck" parameterClass="Map" resultClass="Map">
        SELECT
            EQUIP.PRC_LIST_EQUIP_PK AS PRC_LIST_EQUIP_PK
        FROM
            PRC_LIST_EQUIP EQUIP
        WHERE 
            EQUIP.GLBL_CMPY_CD = #glblCmpyCd#
        AND EQUIP.EZCANCELFLAG = '0'
        AND EQUIP.PRC_CATG_CD  = #prcCatgCd#
        AND EQUIP.DEL_FLG      = 'N'
        <isNotNull property="prcListEquipPk">
            AND EQUIP.PRC_LIST_EQUIP_PK != #prcListEquipPk#
        </isNotNull>

        <isNotNull property="prcListEquipConfigNum">
            AND EQUIP.PRC_LIST_EQUIP_CONFIG_NUM = #prcListEquipConfigNum#
        </isNotNull>
        <isNull property="prcListEquipConfigNum">
            AND EQUIP.PRC_LIST_EQUIP_CONFIG_NUM IS NULL
        </isNull>

        <isNotNull property="prcListEquipConfigNm">
            AND EQUIP.PRC_LIST_EQUIP_CONFIG_NM = #prcListEquipConfigNm#
        </isNotNull>
        <isNull property="prcListEquipConfigNm">
            AND EQUIP.PRC_LIST_EQUIP_CONFIG_NM IS NULL
        </isNull>

        <isNotNull property="prcQlfyTpCd">
            AND EQUIP.PRC_QLFY_TP_CD = #prcQlfyTpCd#
        </isNotNull>
        <isNull property="prcQlfyTpCd">
            AND EQUIP.PRC_QLFY_TP_CD IS NULL
        </isNull>

        <isNotNull property="prcQlfyValTxt">
            AND EQUIP.PRC_QLFY_VAL_TXT = #prcQlfyValTxt#
        </isNotNull>
        <isNull property="prcQlfyValTxt">
            AND EQUIP.PRC_QLFY_VAL_TXT IS NULL
        </isNull>

        <isNotNull property="pkgUomCd">
            AND EQUIP.PKG_UOM_CD = #pkgUomCd#
        </isNotNull>
        <isNull property="pkgUomCd">
            AND EQUIP.PKG_UOM_CD IS NULL
        </isNull>

        <isNotNull property="prcTermUomCd">
            AND EQUIP.PRC_TERM_UOM_CD = #prcTermUomCd#
        </isNotNull>
        <isNull property="prcTermUomCd">
            AND EQUIP.PRC_TERM_UOM_CD IS NULL
        </isNull>

        <isNotNull property="prcTermAot">
            AND EQUIP.PRC_TERM_AOT = #prcTermAot#
        </isNotNull>
        <isNull property="prcTermAot">
            AND EQUIP.PRC_TERM_AOT IS NULL
        </isNull>

        AND EQUIP.EFF_FROM_DT            &lt;= #effThruDt#
        AND (EQUIP.EFF_THRU_DT           &gt;= #effFromDt#
            OR EQUIP.EFF_THRU_DT         IS NULL)
    </statement>

    <statement id="getPrcListSvcForDuplicateCheck" parameterClass="Map" resultClass="Map">
        SELECT
           SVC.PRC_LIST_SVC_PK
        FROM
            PRC_LIST_SVC SVC
        WHERE 
            SVC.GLBL_CMPY_CD = #glblCmpyCd#
        AND SVC.EZCANCELFLAG = '0'
        AND SVC.PRC_CATG_CD  = #prcCatgCd#
        AND SVC.DEL_FLG      = 'N'
        <isNotNull property="prcListSvcPk">
            AND SVC.PRC_LIST_SVC_PK != #prcListSvcPk#
        </isNotNull>

        <isNotNull property="mdlId">
            AND SVC.MDL_ID = #mdlId#
        </isNotNull>
        <isNull property="mdlId">
            AND SVC.MDL_ID IS NULL
        </isNull>

        <isNotNull property="prcMtrPkgPk">
            AND SVC.PRC_MTR_PKG_PK = #prcMtrPkgPk#
        </isNotNull>
        <isNull property="prcMtrPkgPk">
            AND SVC.PRC_MTR_PKG_PK IS NULL
        </isNull>

        <isNotNull property="prcListMdseCd">
            AND SVC.PRC_LIST_MDSE_CD = #prcListMdseCd#
        </isNotNull>
        <isNull property="prcListMdseCd">
            AND SVC.PRC_LIST_MDSE_CD IS NULL
        </isNull>

        <isNotNull property="prcSvcPlnTpCd">
            AND SVC.PRC_SVC_PLN_TP_CD = #prcSvcPlnTpCd#
        </isNotNull>
        <isNull property="prcSvcPlnTpCd">
            AND SVC.PRC_SVC_PLN_TP_CD IS NULL
        </isNull>

        <isNotNull property="prcSvcContrTpCd">
            AND SVC.PRC_SVC_CONTR_TP_CD = #prcSvcContrTpCd#
        </isNotNull>
        <isNull property="prcSvcContrTpCd">
            AND SVC.PRC_SVC_CONTR_TP_CD IS NULL
        </isNull>

        <isNotNull property="bllgMtrLbCd">
            AND SVC.BLLG_MTR_LB_CD = #bllgMtrLbCd#
        </isNotNull>
        <isNull property="bllgMtrLbCd">
            AND SVC.BLLG_MTR_LB_CD IS NULL
        </isNull>

        <isNotNull property="prcListBandCd">
            AND SVC.PRC_LIST_BAND_CD = #prcListBandCd#
        </isNotNull>
        <isNull property="prcListBandCd">
            AND SVC.PRC_LIST_BAND_CD IS NULL
        </isNull>

        <isNotNull property="termFromMthAot">
            AND SVC.TERM_FROM_MTH_AOT = #termFromMthAot#
        </isNotNull>
        <isNull property="termFromMthAot">
            AND SVC.TERM_FROM_MTH_AOT IS NULL
        </isNull>

        <isNotNull property="termThruMthAot">
            AND SVC.TERM_THRU_MTH_AOT = #termThruMthAot#
        </isNotNull>
        <isNull property="termThruMthAot">
            AND SVC.TERM_THRU_MTH_AOT IS NULL
        </isNull>

        AND SVC.EFF_FROM_DT            &lt;= #effThruDt#
        AND (SVC.EFF_THRU_DT           &gt;= #effFromDt#
            OR SVC.EFF_THRU_DT         IS NULL)
    </statement>

    <statement id="getPrcListSvcTierForDuplicateCheck" parameterClass="Map" resultClass="Map">
        SELECT
           TIER.PRC_LIST_SVC_TIER_PK
        FROM
            PRC_LIST_SVC_TIER TIER
        WHERE 
            TIER.GLBL_CMPY_CD = #glblCmpyCd#
        AND TIER.EZCANCELFLAG = '0'
        AND TIER.PRC_CATG_CD  = #prcCatgCd#
        AND TIER.DEL_FLG      = 'N'
        <isNotNull property="prcListSvcTierPk">
            AND TIER.PRC_LIST_SVC_TIER_PK != #prcListSvcTierPk#
        </isNotNull>

        <isNotNull property="mdlId">
            AND TIER.MDL_ID = #mdlId#
        </isNotNull>
        <isNull property="mdlId">
            AND TIER.MDL_ID IS NULL
        </isNull>

        <isNotNull property="prcMtrPkgPk">
            AND TIER.PRC_MTR_PKG_PK = #prcMtrPkgPk#
        </isNotNull>
        <isNull property="prcMtrPkgPk">
            AND TIER.PRC_MTR_PKG_PK IS NULL
        </isNull>

        <isNotNull property="prcSvcPlnTpCd">
            AND TIER.PRC_SVC_PLN_TP_CD = #prcSvcPlnTpCd#
        </isNotNull>
        <isNull property="prcSvcPlnTpCd">
            AND TIER.PRC_SVC_PLN_TP_CD IS NULL
        </isNull>

        <isNotNull property="prcSvcContrTpCd">
            AND TIER.PRC_SVC_CONTR_TP_CD = #prcSvcContrTpCd#
        </isNotNull>
        <isNull property="prcSvcContrTpCd">
            AND TIER.PRC_SVC_CONTR_TP_CD IS NULL
        </isNull>

        <isNotNull property="bllgMtrLbCd">
            AND TIER.BLLG_MTR_LB_CD = #bllgMtrLbCd#
        </isNotNull>
        <isNull property="bllgMtrLbCd">
            AND TIER.BLLG_MTR_LB_CD IS NULL
        </isNull>

        <isNotNull property="prcListBandCd">
            AND TIER.PRC_LIST_BAND_CD = #prcListBandCd#
        </isNotNull>
        <isNull property="prcListBandCd">
            AND TIER.PRC_LIST_BAND_CD IS NULL
        </isNull>

        <isNotNull property="termFromMthAot">
            AND TIER.TERM_FROM_MTH_AOT = #termFromMthAot#
        </isNotNull>
        <isNull property="termFromMthAot">
            AND TIER.TERM_FROM_MTH_AOT IS NULL
        </isNull>

        <isNotNull property="termThruMthAot">
            AND TIER.TERM_THRU_MTH_AOT = #termThruMthAot#
        </isNotNull>
        <isNull property="termThruMthAot">
            AND TIER.TERM_THRU_MTH_AOT IS NULL
        </isNull>

        AND TIER.EFF_FROM_DT           &lt;= #effThruDt#
        AND (TIER.EFF_THRU_DT          &gt;= #effFromDt#
            OR TIER.EFF_THRU_DT        IS NULL)
    </statement>

    <statement id="getPrcListSplyPgmForDuplicateCheck" parameterClass="Map" resultClass="Map">
        SELECT
           PGM.PRC_LIST_SPLY_PGM_PK
        FROM
            PRC_LIST_SPLY_PGM PGM
        WHERE 
            PGM.GLBL_CMPY_CD = #glblCmpyCd#
        AND PGM.EZCANCELFLAG = '0'
        AND PGM.PRC_CATG_CD  = #prcCatgCd#
        AND PGM.DEL_FLG      = 'N'
        <isNotNull property="prcListSplyPgmPk">
            AND PGM.PRC_LIST_SPLY_PGM_PK != #prcListSplyPgmPk#
        </isNotNull>

        <isNotNull property="mdlId">
            AND PGM.MDL_ID = #mdlId#
        </isNotNull>
        <isNull property="mdlId">
            AND PGM.MDL_ID IS NULL
        </isNull>

        <isNotNull property="prcMtrPkgPk">
            AND PGM.PRC_MTR_PKG_PK = #prcMtrPkgPk#
        </isNotNull>
        <isNull property="prcMtrPkgPk">
            AND PGM.PRC_MTR_PKG_PK IS NULL
        </isNull>

        <isNotNull property="prcSvcPlnTpCd">
            AND PGM.PRC_SVC_PLN_TP_CD = #prcSvcPlnTpCd#
        </isNotNull>
        <isNull property="prcSvcPlnTpCd">
            AND PGM.PRC_SVC_PLN_TP_CD IS NULL
        </isNull>

        <isNotNull property="prcSvcContrTpCd">
            AND PGM.PRC_SVC_CONTR_TP_CD = #prcSvcContrTpCd#
        </isNotNull>
        <isNull property="prcSvcContrTpCd">
            AND PGM.PRC_SVC_CONTR_TP_CD IS NULL
        </isNull>

        <isNotNull property="bllgMtrLbCd">
            AND PGM.BLLG_MTR_LB_CD = #bllgMtrLbCd#
        </isNotNull>
        <isNull property="bllgMtrLbCd">
            AND PGM.BLLG_MTR_LB_CD IS NULL
        </isNull>

        <isNotNull property="prcListBandCd">
            AND PGM.PRC_LIST_BAND_CD = #prcListBandCd#
        </isNotNull>
        <isNull property="prcListBandCd">
            AND PGM.PRC_LIST_BAND_CD IS NULL
        </isNull>

        <isNotNull property="termFromMthAot">
            AND PGM.TERM_FROM_MTH_AOT = #termFromMthAot#
        </isNotNull>
        <isNull property="termFromMthAot">
            AND PGM.TERM_FROM_MTH_AOT IS NULL
        </isNull>

        <isNotNull property="termThruMthAot">
            AND PGM.TERM_THRU_MTH_AOT = #termThruMthAot#
        </isNotNull>
        <isNull property="termThruMthAot">
            AND PGM.TERM_THRU_MTH_AOT IS NULL
        </isNull>

        AND PGM.EFF_FROM_DT            &lt;= #effThruDt#
        AND (PGM.EFF_THRU_DT           &gt;= #effFromDt#
            OR PGM.EFF_THRU_DT         IS NULL)
    </statement>

    <statement id="getPrcListAddlChrgForDuplicateCheck" parameterClass="Map" resultClass="Map">
        SELECT
           CHRG.PRC_LIST_ADDL_CHRG_PK
        FROM
            PRC_LIST_ADDL_CHRG CHRG
        WHERE 
            CHRG.GLBL_CMPY_CD = #glblCmpyCd#
        AND CHRG.EZCANCELFLAG = '0'
        AND CHRG.PRC_CATG_CD  = #prcCatgCd#
        AND CHRG.DEL_FLG      = 'N'
        <isNotNull property="prcListAddlChrgPk">
            AND CHRG.PRC_LIST_ADDL_CHRG_PK != #prcListAddlChrgPk#
        </isNotNull>

        <isNotNull property="mdseCd">
            AND CHRG.MDSE_CD = #mdseCd#
        </isNotNull>
        <isNull property="mdseCd">
            AND CHRG.MDSE_CD IS NULL
        </isNull>

        <isNotNull property="mktMdlSegCd">
            AND CHRG.MKT_MDL_SEG_CD = #mktMdlSegCd#
        </isNotNull>
        <isNull property="mktMdlSegCd">
            AND CHRG.MKT_MDL_SEG_CD IS NULL
        </isNull>

        <isNotNull property="mdlId">
            AND CHRG.MDL_ID = #mdlId#
        </isNotNull>
        <isNull property="mdlId">
            AND CHRG.MDL_ID IS NULL
        </isNull>

        <isNotNull property="mdlNm">
            AND CHRG.MDL_NM = #mdlNm#
        </isNotNull>
        <isNull property="mdlNm">
            AND CHRG.MDL_NM IS NULL
        </isNull>

        AND CHRG.EFF_FROM_DT            &lt;= #effThruDt#
        AND (CHRG.EFF_THRU_DT           &gt;= #effFromDt#
            OR CHRG.EFF_THRU_DT         IS NULL)
    </statement>

    <statement id="getPrcListLeaseRateForDuplicateCheck" parameterClass="Map" resultClass="Map">
        SELECT
           RATE.PRC_LIST_LEASE_RATE_PK
        FROM
            PRC_LIST_LEASE_RATE RATE
        WHERE 
            RATE.GLBL_CMPY_CD = #glblCmpyCd#
        AND RATE.EZCANCELFLAG = '0'
        AND RATE.PRC_CATG_CD  = #prcCatgCd#
        AND RATE.DEL_FLG      = 'N'
        <isNotNull property="prcListLeaseRatePk">
            AND RATE.PRC_LIST_LEASE_RATE_PK != #prcListLeaseRatePk#
        </isNotNull>

        <isNotNull property="prcLeaseCmpyAbbrNm">
            AND RATE.PRC_LEASE_CMPY_ABBR_NM = #prcLeaseCmpyAbbrNm#
        </isNotNull>
        <isNull property="prcLeaseCmpyAbbrNm">
            AND RATE.PRC_LEASE_CMPY_ABBR_NM IS NULL
        </isNull>

        <isNotNull property="dsAcctNm">
            AND RATE.DS_ACCT_NM = #dsAcctNm#
        </isNotNull>
        <isNull property="dsAcctNm">
            AND RATE.DS_ACCT_NM IS NULL
        </isNull>

        <isNotNull property="prcPgmTpCd">
            AND RATE.PRC_PGM_TP_CD = #prcPgmTpCd#
        </isNotNull>
        <isNull property="prcPgmTpCd">
            AND RATE.PRC_PGM_TP_CD IS NULL
        </isNull>

        <isNotNull property="prcEquipTpCd">
            AND RATE.PRC_EQUIP_TP_CD = #prcEquipTpCd#
        </isNotNull>
        <isNull property="prcEquipTpCd">
            AND RATE.PRC_EQUIP_TP_CD IS NULL
        </isNull>

        <isNotNull property="mdlId">
            AND RATE.MDL_ID = #mdlId#
        </isNotNull>
        <isNull property="mdlId">
            AND RATE.MDL_ID IS NULL
        </isNull>

        <isNotNull property="termFromMthAot">
            AND RATE.TERM_FROM_MTH_AOT = #termFromMthAot#
        </isNotNull>
        <isNull property="termFromMthAot">
            AND RATE.TERM_FROM_MTH_AOT IS NULL
        </isNull>

        <isNotNull property="termThruMthAot">
            AND RATE.TERM_THRU_MTH_AOT = #termThruMthAot#
        </isNotNull>
        <isNull property="termThruMthAot">
            AND RATE.TERM_THRU_MTH_AOT IS NULL
        </isNull>

        AND RATE.EFF_FROM_DT            &lt;= #effThruDt#
        AND (RATE.EFF_THRU_DT           &gt;= #effFromDt#
            OR RATE.EFF_THRU_DT         IS NULL)
    </statement>

    <statement id="getPrcListLeaseRtrnForDuplicateCheck" parameterClass="Map" resultClass="Map">
        SELECT
           RTRN.PRC_LIST_LEASE_RTRN_PK
        FROM
            PRC_LIST_LEASE_RTRN RTRN
        WHERE 
            RTRN.GLBL_CMPY_CD = #glblCmpyCd#
        AND RTRN.EZCANCELFLAG = '0'
        AND RTRN.PRC_CATG_CD  = #prcCatgCd#
        AND RTRN.DEL_FLG      = 'N'
        <isNotNull property="prcListLeaseRtrnPk">
            AND RTRN.PRC_LIST_LEASE_RTRN_PK != #prcListLeaseRtrnPk#
        </isNotNull>

        <isNotNull property="prcLeaseCmpyAbbrNm">
            AND RTRN.PRC_LEASE_CMPY_ABBR_NM = #prcLeaseCmpyAbbrNm#
        </isNotNull>
        <isNull property="prcLeaseCmpyAbbrNm">
            AND RTRN.PRC_LEASE_CMPY_ABBR_NM IS NULL
        </isNull>

        <isNotNull property="svcSegCd">
            AND RTRN.SVC_SEG_CD = #svcSegCd#
        </isNotNull>
        <isNull property="svcSegCd">
            AND RTRN.SVC_SEG_CD IS NULL
        </isNull>

        <isNotNull property="prcInOutRgCd">
            AND RTRN.PRC_IN_OUT_RG_CD = #prcInOutRgCd#
        </isNotNull>
        <isNull property="prcInOutRgCd">
            AND RTRN.PRC_IN_OUT_RG_CD IS NULL
        </isNull>

        <isNotNull property="dstMileAmt">
            AND RTRN.DST_MILE_AMT = #dstMileAmt#
        </isNotNull>
        <isNull property="dstMileAmt">
            AND RTRN.DST_MILE_AMT IS NULL
        </isNull>

        AND RTRN.EFF_FROM_DT            &lt;= #effThruDt#
        AND (RTRN.EFF_THRU_DT           &gt;= #effFromDt#
            OR RTRN.EFF_THRU_DT         IS NULL)
    </statement>

    <statement id="getPrcListTiValForDuplicateCheck" parameterClass="Map" resultClass="Map">
        SELECT
           TI.PRC_LIST_TI_VAL_PK
        FROM
            PRC_LIST_TI_VAL TI
        WHERE 
            TI.GLBL_CMPY_CD = #glblCmpyCd#
        AND TI.EZCANCELFLAG = '0'
        AND TI.PRC_CATG_CD  = #prcCatgCd#
        AND TI.DEL_FLG      = 'N'
        <isNotNull property="prcListTiValPk">
            AND TI.PRC_LIST_TI_VAL_PK != #prcListTiValPk#
        </isNotNull>

        <isNotNull property="mdlId">
            AND TI.MDL_ID = #mdlId#
        </isNotNull>
        <isNull property="mdlId">
            AND TI.MDL_ID IS NULL
        </isNull>

        <isNotNull property="fromMtrCopyVolCnt">
            AND TI.FROM_MTR_COPY_VOL_CNT = #fromMtrCopyVolCnt#
        </isNotNull>
        <isNull property="fromMtrCopyVolCnt">
            AND TI.FROM_MTR_COPY_VOL_CNT IS NULL
        </isNull>

        <isNotNull property="thruMtrCopyVolCnt">
            AND TI.THRU_MTR_COPY_VOL_CNT = #thruMtrCopyVolCnt#
        </isNotNull>
        <isNull property="thruMtrCopyVolCnt">
            AND TI.THRU_MTR_COPY_VOL_CNT IS NULL
        </isNull>

        AND TI.EFF_FROM_DT            &lt;= #effThruDt#
        AND (TI.EFF_THRU_DT           &gt;= #effFromDt#
            OR TI.EFF_THRU_DT         IS NULL)
    </statement>

    <statement id="getPrcListQtyDiscForDuplicateCheck" parameterClass="Map" resultMap="result.PRC_LIST_QTY_DISCTMsg">
        SELECT
           DISC.PRC_LIST_QTY_DISC_PK
          , DISC.PRC_QLFY_TP_CD
          , DISC.PRC_QLFY_VAL_TXT
          , DISC.PKG_UOM_CD
          , DISC.EFF_FROM_DT
          , DISC.EFF_THRU_DT
        FROM
            PRC_LIST_QTY_DISC DISC
        WHERE 
            DISC.GLBL_CMPY_CD = #glblCmpyCd#
        AND DISC.EZCANCELFLAG = '0'
        AND DISC.PRC_CATG_CD  = #prcCatgCd#
        AND DISC.DEL_FLG      = 'N'
    </statement>
    <resultMap id="result.PRC_LIST_QTY_DISCTMsg" class="PRC_LIST_QTY_DISCTMsg">
        <result property="prcListQtyDiscPk"       column="PRC_LIST_QTY_DISC_PK"      javaType="EZDCBigDecimalItem"/>
        <result property="prcQlfyTpCd"          column="PRC_QLFY_TP_CD"            javaType="EZDTStringItem"/>
        <result property="prcQlfyValTxt"        column="PRC_QLFY_VAL_TXT"          javaType="EZDTStringItem"/>
        <result property="pkgUomCd"             column="PKG_UOM_CD"                javaType="EZDTStringItem"/>
        <result property="effFromDt"            column="EFF_FROM_DT"               javaType="EZDTStringItem"/>
        <result property="effThruDt"            column="EFF_THRU_DT"               javaType="EZDTStringItem"/>
    </resultMap>
    <statement id="getMtrLb" parameterClass="Map" resultClass="String">
        SELECT DISTINCT M.MTR_LB_NM
          FROM MTR_LB M
         WHERE M.GLBL_CMPY_CD = #glblCmpyCd#
         AND M.EZCANCELFLAG = '0'
           AND M.MTR_LB_NM = #mtrLbNm#
    </statement>
    
    <statement id="getBllgMtrLb" parameterClass="Map" resultClass="String">
        SELECT
        DISTINCT
        BLLG_MTR_LB_CD
        ,BLLG_MTR_LB_NM
        FROM PRC_MTR_PKG_MTR_STRU_V MPV
        ,PRC_MTR_PKG P
        WHERE
        MPV.GLBL_CMPY_CD = #glblCmpyCd#
        AND MPV.EZCANCELFLAG = '0'
        AND MPV.MDL_MTR_EFF_FROM_DT &lt;= #slsDt#
        AND NVL(MPV.MDL_MTR_EFF_THRU_DT, '99991231') &gt;= #slsDt#
        AND MPV.BLLG_MTR_MAP_EFF_FROM_DT &lt;= #slsDt#
        AND NVL(MPV.BLLG_MTR_MAP_EFF_THRU_DT, '99991231') &gt;= #slsDt#
        AND MPV.MTR_PKG_EFF_FROM_DT &lt;= #slsDt#
        AND NVL(MPV.MTR_PKG_EFF_THRU_DT, '99991231') &gt;= #slsDt#
        AND MPV.MTR_PKG_MDL_EFF_FROM_DT &lt;= #slsDt#
        AND NVL(MPV.MTR_PKG_MDL_EFF_THRU_DT, '99991231') &gt;= #slsDt#
        AND MPV.GLBL_CMPY_CD = P.GLBL_CMPY_CD
        AND MPV.EZCANCELFLAG = P.EZCANCELFLAG
        AND MPV.PRC_MTR_PKG_PK = P.PRC_MTR_PKG_PK
        AND BLLG_MTR_LB_NM = #bllgMtrLbNm#
    </statement>

    <statement id="getPrcListTpList" parameterClass="Map" resultClass="Map">
        SELECT
            PLT.PRC_LIST_TP_CD
           ,PLT.PRC_LIST_TP_NM
        FROM
            PRC_LIST_TP PLT
        WHERE
            PLT.GLBL_CMPY_CD = #glblCmpyCd#
        AND PLT.EZCANCELFLAG = '0'
        <isNotNull property="prcListStruTpCd">
        AND PLT.PRC_LIST_STRU_TP_CD = #prcListStruTpCd#
        </isNotNull>
        ORDER BY
            PLT.PRC_LIST_TP_SORT_NUM
    </statement>

    <statement id="getPrcCatgCd" parameterClass="Map" resultClass="String">
        SELECT
            PC.PRC_CATG_CD
        FROM
            PRC_CATG PC
           ,PRC_LIST_TP PLT
        WHERE
            PC.GLBL_CMPY_CD         = #glblCmpyCd#
        AND PC.EZCANCELFLAG         = '0'
        AND PLT.GLBL_CMPY_CD        = PC.GLBL_CMPY_CD
        AND PLT.EZCANCELFLAG        = '0'
        AND PLT.PRC_LIST_TP_CD      = PC.PRC_LIST_TP_CD
        AND PC.PRC_CATG_NM          = #prcCatgNm#
        <isNotNull property="prcListStruTpCd">
        AND PLT.PRC_LIST_STRU_TP_CD = #prcListStruTpCd#
        </isNotNull>
    </statement>

    <!-- ****** Count for price list : Start ***** -->
    <statement id="getPrcListValEquipCount" parameterClass="Map">
        SELECT
            COUNT(*)
          FROM PRC_LIST_EQUIP PLE
             , ALL_MDSE_V AMV
             , MDSE_ITEM_TP MIT
             , COA_PROD CP
             <isNotNull property="prcFmlaNm_Z1">
             , PRC_FMLA PF
             </isNotNull>
             <!-- 2019/02/26 QC#30515 Mod Start -->
             <!-- <isNotNull property="t_MdlNm_Z1"> -->
             <isNotNull property="xxTMdlNmSrchTxt_Z1">
             <!-- 2019/02/26 QC#30515 Mod End -->
             , MKT_MDL MM
             </isNotNull>
             <isNotNull property="coaProjNm_Z1">
             , COA_PROJ CPJ
             </isNotNull>
             <isNotNull property="mdseDescShortTxt_Z1">
             , COA_PROJ CPJ2
             , PROD_CTRL PC
             </isNotNull>
             <isNotNull property="xxFullNm_Z1">
             , AUTH_PSN AP1
             </isNotNull>
             <isNotNull property="xxFullNm_Z2">
             , AUTH_PSN AP2
             </isNotNull>
         WHERE PLE.GLBL_CMPY_CD = #glblCmpyCd#
           AND PLE.EZCANCELFLAG = '0'
           AND PLE.PRC_CATG_CD  = #prcCatgCd#
           AND PLE.GLBL_CMPY_CD = AMV.GLBL_CMPY_CD(+)
           AND PLE.EZCANCELFLAG = AMV.EZCANCELFLAG(+)
           AND PLE.PRC_QLFY_VAL_TXT = AMV.MDSE_CD(+)
           AND AMV.GLBL_CMPY_CD = MIT.GLBL_CMPY_CD(+)
           AND AMV.EZCANCELFLAG = MIT.EZCANCELFLAG(+)
           AND AMV.MDSE_ITEM_TP_CD = MIT.MDSE_ITEM_TP_CD(+)
           AND AMV.GLBL_CMPY_CD   = CP.GLBL_CMPY_CD(+)
           AND AMV.EZCANCELFLAG   = CP.EZCANCELFLAG(+)
           AND AMV.COA_PROD_CD    = CP.COA_PROD_CD(+)
           <isNotNull property="coaProjNm_Z1">
           AND AMV.GLBL_CMPY_CD = CPJ.GLBL_CMPY_CD(+)
           AND AMV.EZCANCELFLAG = CPJ.EZCANCELFLAG(+)
           AND AMV.COA_MDSE_TP_CD = CPJ.COA_PROJ_CD(+)
           </isNotNull>
           <isNotNull property="prcFmlaNm_Z1">
           AND PLE.GLBL_CMPY_CD = PF.GLBL_CMPY_CD(+)
           AND PLE.EZCANCELFLAG = PF.EZCANCELFLAG(+)
           AND PLE.PRC_FMLA_PK  = PF.PRC_FMLA_PK(+)
           </isNotNull>
           <isNotNull property="mdseDescShortTxt_Z1">
           AND PLE.GLBL_CMPY_CD = CPJ2.GLBL_CMPY_CD(+)
           AND PLE.EZCANCELFLAG = CPJ2.EZCANCELFLAG(+)
           AND PLE.PRC_QLFY_VAL_TXT = CPJ2.COA_PROJ_CD(+)
           AND PLE.GLBL_CMPY_CD = PC.GLBL_CMPY_CD(+)
           AND PLE.EZCANCELFLAG = PC.EZCANCELFLAG(+)
           AND PLE.PRC_QLFY_VAL_TXT = PC.PROD_CTRL_DESC_TXT(+)
           </isNotNull>
           <isNotNull property="xxFullNm_Z1">
           AND PLE.GLBL_CMPY_CD = AP1.GLBL_CMPY_CD(+)
           AND PLE.EZCANCELFLAG = AP1.EZCANCELFLAG(+)
           AND PLE.EZINUSERID   = AP1.USR_NM(+)
           </isNotNull>
           <isNotNull property="xxFullNm_Z2">
           AND PLE.GLBL_CMPY_CD = AP2.GLBL_CMPY_CD(+)
           AND PLE.EZCANCELFLAG = AP2.EZCANCELFLAG(+)
           AND PLE.EZUPUSERID   = AP2.USR_NM(+)
           </isNotNull>
           <!-- 2019/02/26 QC#30515 Mod Start -->
           <!-- <isNotNull property="t_MdlNm_Z1"> -->
           <isNotNull property="xxTMdlNmSrchTxt_Z1">
           <!-- 2019/02/26 QC#30515 Mod End -->
           AND AMV.MKT_MDL_CD   LIKE MM.MKT_MDL_CD(+)
           </isNotNull>
        <isEqual property="prcDispRecTpCd" compareValue="01">
           AND PLE.DEL_FLG = #flgN#
           AND PLE.EFF_FROM_DT &lt;= #slsDt#
           AND NVL(PLE.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="02">
           AND PLE.DEL_FLG = #flgN#
           AND (PLE.EFF_FROM_DT &gt; #slsDt#
               OR
                NVL(PLE.EFF_THRU_DT, #highValDt#) &lt; #slsDt#
               )
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="03">
           AND PLE.DEL_FLG = #flgY#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="04">
           AND PLE.DEL_FLG = #flgN#
           AND (
                (PLE.EFF_FROM_DT &lt;= #slsDt# AND NVL(PLE.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#)
                OR
                (PLE.EFF_FROM_DT &gt; #slsDt# OR NVL(PLE.EFF_THRU_DT, #highValDt#) &lt; #slsDt#)
               )
        </isEqual>
        <isNotNull property="prcQlfyTpCd_D1">
           AND PLE.PRC_QLFY_TP_CD = #prcQlfyTpCd_D1#
        </isNotNull>
        <!-- 2019/02/26 QC#30515 Mod Start -->
        <!-- <isNotNull property="prcQlfyValTxt_D1"> -->
        <!--    AND UPPER(PLE.PRC_QLFY_VAL_TXT) LIKE #prcQlfyValTxt_D1# -->
        <!-- </isNotNull> -->
        <isNotNull property="xxPrcQlfyValSrchTxt_D1">
        <iterate property="xxPrcQlfyValSrchTxt_D1" var="xxPrcQlfyValSrchTxtD1[]" open="AND (" close=")" conjunction="OR">
           UPPER(PLE.PRC_QLFY_VAL_TXT) LIKE #xxPrcQlfyValSrchTxtD1[]#
        </iterate>
        </isNotNull>
        <!-- 2019/02/26 QC#30515 Mod End -->
        <isNotNull property="prcListEquipConfigNum_D1">
           AND PLE.PRC_LIST_EQUIP_CONFIG_NUM = #prcListEquipConfigNum_D1#
        </isNotNull>
        <isNotNull property="prcListEquipConfigNm_D1">
           AND UPPER(PLE.PRC_LIST_EQUIP_CONFIG_NM) LIKE #prcListEquipConfigNm_D1#
        </isNotNull>
        <isNotNull property="pkgUomCd_D1">
           AND PLE.PKG_UOM_CD = #pkgUomCd_D1#
        </isNotNull>
        <isNotNull property="coaProjNm_Z1">
           AND UPPER(CPJ.COA_PROJ_NM) = #coaProjNm_Z1#
        </isNotNull>
        <isNotNull property="mdseItemTpNm_Z1">
           AND UPPER(MIT.MDSE_ITEM_TP_NM) = #mdseItemTpNm_Z1#
        </isNotNull>
        <isNotNull property="coaProdNm_Z1">
           AND UPPER(CP.COA_PROD_NM) = #coaProdNm_Z1#
        </isNotNull>
        <!-- 2019/02/26 QC#30515 Mod Start -->
        <!-- <isNotNull property="t_MdlNm_Z1">  -->
        <!--    AND UPPER(MM.MKT_MDL_NM) LIKE #t_MdlNm_Z1# -->
        <!-- </isNotNull> -->
        <isNotNull property="xxTMdlNmSrchTxt_Z1">
        <iterate property="xxTMdlNmSrchTxt_Z1" var="xxTMdlNmSrchTxtZ1[]" open="AND (" close=")" conjunction="OR">
           UPPER(MM.MKT_MDL_NM) LIKE #xxTMdlNmSrchTxtZ1[]#
        </iterate>
        </isNotNull>
        <!-- 2019/02/26 QC#30515 Mod End -->
        <isNotNull property="zerothProdCtrlCd_Z1">
           AND AMV.ZEROTH_PROD_CTRL_CD = #zerothProdCtrlCd_Z1#
        </isNotNull>
        <isNotNull property="firstProdCtrlCd_Z1">
           AND AMV.FIRST_PROD_CTRL_CD = #firstProdCtrlCd_Z1#
        </isNotNull>
        <isNotNull property="scdProdCtrlCd_Z1">
           AND AMV.SCD_PROD_CTRL_CD = #scdProdCtrlCd_Z1#
        </isNotNull>
        <isNotNull property="thirdProdCtrlCd_Z1">
           AND AMV.THIRD_PROD_CTRL_CD = #thirdProdCtrlCd_Z1#
        </isNotNull>
        <isNotNull property="frthProdCtrlCd_Z1">
           AND AMV.FRTH_PROD_CTRL_CD = #frthProdCtrlCd_Z1#
        </isNotNull>
        <isNotNull property="prcTermAot_Z1">
           AND PLE.PRC_TERM_AOT = #prcTermAot_Z1#
        </isNotNull>
        <isNotNull property="prcTermUomCd_Z1">
           AND PLE.PRC_TERM_UOM_CD = #prcTermUomCd_Z1#
        </isNotNull>
        <isNotNull property="custBidQty_Z1">
           AND PLE.CUST_BID_QTY = #custBidQty_Z1#
        </isNotNull>
        <isNotNull property="prcFmlaNm_Z1">
           AND UPPER(PF.PRC_FMLA_NM) LIKE #prcFmlaNm_Z1#
        </isNotNull>
        <isNotNull property="openMktFlg_Z1">
           AND PLE.OPEN_MKT_FLG = #openMktFlg_Z1#
        </isNotNull>
        <isNotNull property="compCd_Z1">
           AND UPPER(PLE.COMP_CD) = #compCd_Z1#
        </isNotNull>
        <isNotNull property="mdseDescShortTxt_Z1">
           AND (
                 (PLE.PRC_QLFY_TP_CD = '01' AND UPPER(AMV.MDSE_DESC_SHORT_TXT) LIKE #mdseDescShortTxt_Z1#)
              OR (PLE.PRC_QLFY_TP_CD = '02' AND UPPER(CPJ2.COA_PROJ_DESC_TXT) LIKE #mdseDescShortTxt_Z1#)
              OR (PLE.PRC_QLFY_TP_CD = '03' AND UPPER(PC.PROD_CTRL_DESC_TXT) LIKE #mdseDescShortTxt_Z1#)
              OR (PLE.PRC_QLFY_TP_CD = '04' AND UPPER(PC.PROD_CTRL_DESC_TXT) LIKE #mdseDescShortTxt_Z1#)
              OR (PLE.PRC_QLFY_TP_CD = '05' AND UPPER(PC.PROD_CTRL_DESC_TXT) LIKE #mdseDescShortTxt_Z1#)
              OR (PLE.PRC_QLFY_TP_CD = '06' AND UPPER(PC.PROD_CTRL_DESC_TXT) LIKE #mdseDescShortTxt_Z1#)
              OR (PLE.PRC_QLFY_TP_CD = '07' AND UPPER(PC.PROD_CTRL_DESC_TXT) LIKE #mdseDescShortTxt_Z1#)
           )
        </isNotNull>
        <!-- 2019/02/26 QC#30515 Mod Start -->
        <!-- 2018/07/17 QC#20267 Mod Start -->
        <!-- <isNotNull property="mnfItemCd_Z1"> -->
        <!--    AND PLE.PRC_QLFY_TP_CD = '01' AND UPPER(AMV.MNF_ITEM_CD) LIKE #mnfItemCd_Z1# -->
        <!-- </isNotNull> -->
        <!-- 2018/07/17 QC#20267 Mod End -->
        <isNotNull property="xxMnfItemCdSrchTxt_Z1">
        <iterate property="xxMnfItemCdSrchTxt_Z1" var="xxMnfItemCdSrchTxtZ1[]" open="AND PLE.PRC_QLFY_TP_CD = '01' AND (" close=")" conjunction="OR">
           UPPER(AMV.MNF_ITEM_CD) LIKE #xxMnfItemCdSrchTxtZ1[]#
        </iterate>
        </isNotNull>
        <!-- 2019/02/26 QC#30515 Mod End -->
        <isNotNull property="xxYesNoCd_Z1">
           AND
           <isEqual property="xxYesNoCd_Z1" compareValue="N">
              NOT
           </isEqual>
           EXISTS (
                  SELECT 1
                  FROM
                      PRC_LIST_EQUIP_DTL PLED
                  WHERE
                      PLED.GLBL_CMPY_CD      = #glblCmpyCd#
                  AND PLED.PRC_LIST_EQUIP_PK = PLE.PRC_LIST_EQUIP_PK
                  AND PLED.EZCANCELFLAG      = '0'
                )
        </isNotNull>
        <isNotNull property="effFromDt_Z1">
           AND PLE.EFF_FROM_DT &gt;= #effFromDt_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z2">
           AND PLE.EFF_FROM_DT &lt;= #effFromDt_Z2#
        </isNotNull>
        <isNotNull property="effThruDt_Z1">
           AND NVL(PLE.EFF_THRU_DT, #highValDt#) &gt;= #effThruDt_Z1#
        </isNotNull>
        <isNotNull property="effThruDt_Z2">
           AND NVL(PLE.EFF_THRU_DT, #highValDt#) &lt;= #effThruDt_Z2#
        </isNotNull>
        <isNotNull property="cratDt_Z1">
           AND PLE.EZINTIME &gt;= #cratDt_Z1#
        </isNotNull>
        <isNotNull property="cratDt_Z2">
           AND PLE.EZINTIME &lt;= #cratDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z1">
           AND PLE.EZUPTIME &gt;= #lastUpdDt_Z1#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z2">
           AND PLE.EZUPTIME &lt;= #lastUpdDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="xxFullNm_Z1">
           AND (
                   PLE.EZINUSERID = #xxFullNm_Z1#
              OR (     AP1.FIRST_NM IS NOT NULL
                   AND UPPER(AP1.FIRST_NM || ' ' || AP1.LAST_NM) LIKE #xxFullNm_Z1#
                 )
             )
        </isNotNull>
        <isNotNull property="xxFullNm_Z2">
           AND (
                   PLE.EZUPUSERID = #xxFullNm_Z2#
              OR (     AP2.FIRST_NM IS NOT NULL
                   AND UPPER(AP2.FIRST_NM || ' ' || AP2.LAST_NM) LIKE #xxFullNm_Z2#
                 )
             )
        </isNotNull>
    </statement>

    <statement id="getPrcListValSvcCount" parameterClass="Map">
        SELECT
            COUNT(*)
          FROM PRC_LIST_SVC PLS
             , PRC_MTR_PKG PMP
             , MTR_LB ML
             , PRC_LIST_BAND PLB
             <isNotNull property="mdseDescShortTxt_Z1">
             , ALL_MDSE_V AMV2
             </isNotNull>
             <isNotNull property="xxFullNm_Z1">
             , AUTH_PSN AP1
             </isNotNull>
             <isNotNull property="xxFullNm_Z2">
             , AUTH_PSN AP2
             </isNotNull>
         WHERE PLS.GLBL_CMPY_CD = #glblCmpyCd#
           AND PLS.EZCANCELFLAG = '0'
           AND PLS.PRC_CATG_CD  = #prcCatgCd#
           AND PLS.GLBL_CMPY_CD = PMP.GLBL_CMPY_CD(+)
           AND PLS.EZCANCELFLAG = PMP.EZCANCELFLAG(+)
           AND PLS.PRC_MTR_PKG_PK = PMP.PRC_MTR_PKG_PK(+)
           AND PLS.GLBL_CMPY_CD   = ML.GLBL_CMPY_CD (+)
           AND PLS.EZCANCELFLAG   = ML.EZCANCELFLAG (+)
           AND PLS.BLLG_MTR_LB_CD = ML.MTR_LB_CD (+)
           AND PLS.GLBL_CMPY_CD = PLB.GLBL_CMPY_CD (+)
           AND PLS.EZCANCELFLAG = PLB.EZCANCELFLAG (+)
           AND PLS.PRC_LIST_BAND_CD = PLB.PRC_LIST_BAND_CD (+)
           <isNotNull property="mdseDescShortTxt_Z1">
           AND PLS.GLBL_CMPY_CD     = AMV2.GLBL_CMPY_CD(+)
           AND PLS.EZCANCELFLAG     = AMV2.EZCANCELFLAG(+)
           AND PLS.PRC_LIST_MDSE_CD = AMV2.MDSE_CD(+)
           </isNotNull>
           <isNotNull property="xxFullNm_Z1">
           AND PLS.GLBL_CMPY_CD = AP1.GLBL_CMPY_CD(+)
           AND PLS.EZCANCELFLAG = AP1.EZCANCELFLAG(+)
           AND PLS.EZINUSERID   = AP1.USR_NM(+)
           </isNotNull>
           <isNotNull property="xxFullNm_Z2">
           AND PLS.GLBL_CMPY_CD = AP2.GLBL_CMPY_CD(+)
           AND PLS.EZCANCELFLAG = AP2.EZCANCELFLAG(+)
           AND PLS.EZUPUSERID   = AP2.USR_NM(+)
           </isNotNull>
        <isEqual property="prcDispRecTpCd" compareValue="01">
           AND PLS.DEL_FLG = #flgN#
           AND PLS.EFF_FROM_DT &lt;= #slsDt#
           AND NVL(PLS.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="02">
           AND PLS.DEL_FLG = #flgN#
           AND (PLS.EFF_FROM_DT &gt; #slsDt#
               OR
                NVL(PLS.EFF_THRU_DT, #highValDt#) &lt; #slsDt#
               )
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="03">
           AND PLS.DEL_FLG = #flgY#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="04">
           AND PLS.DEL_FLG = #flgN#
           AND (
                (PLS.EFF_FROM_DT &lt;= #slsDt# AND NVL(PLS.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#)
                OR
                (PLS.EFF_FROM_DT &gt; #slsDt# OR NVL(PLS.EFF_THRU_DT, #highValDt#) &lt; #slsDt#)
               )
        </isEqual>
        <isNotNull property="mdlNm_D1">
           AND UPPER(PLS.MDL_NM) LIKE #mdlNm_D1#
        </isNotNull>
        <isNotNull property="prcMtrPkgNm_D1">
           AND UPPER(PMP.PRC_MTR_PKG_NM) LIKE #prcMtrPkgNm_D1#
        </isNotNull>
        <isNotNull property="prcRateTpCd_D1">
           AND PLS.PRC_RATE_TP_CD = #prcRateTpCd_D1#
        </isNotNull>
        <isNotNull property="prcSvcPlnTpCd_D1">
           AND PLS.PRC_SVC_PLN_TP_CD = #prcSvcPlnTpCd_D1#
        </isNotNull>
        <isNotNull property="prcSvcContrTpCd_D1">
           AND PLS.PRC_SVC_CONTR_TP_CD = #prcSvcContrTpCd_D1#
        </isNotNull>
        <isNotNull property="mtrLbNm_D1">
           AND UPPER(ML.MTR_LB_NM) LIKE #mtrLbNm_D1#
        </isNotNull>
        <isNotNull property="prcListBandDescTxt_D1">
           AND UPPER(PLB.PRC_LIST_BAND_DESC_TXT) LIKE #prcListBandDescTxt_D1#
        </isNotNull>
        <isNotNull property="prcListMdseCd_Z1">
           AND PLS.PRC_LIST_MDSE_CD LIKE #prcListMdseCd_Z1#
        </isNotNull>
        <isNotNull property="mdseDescShortTxt_Z1">
           AND UPPER(AMV2.MDSE_DESC_SHORT_TXT) LIKE #mdseDescShortTxt_Z1#
        </isNotNull>
        <isNotNull property="termFromMthAot_Z1">
           AND PLS.TERM_FROM_MTH_AOT = #termFromMthAot_Z1#
        </isNotNull>
        <isNotNull property="termThruMthAot_Z1">
           AND PLS.TERM_THRU_MTH_AOT = #termThruMthAot_Z1#
        </isNotNull>
        <isNotNull property="prcSvcZoneCd_Z1">
           AND PLS.PRC_SVC_ZONE_CD = #prcSvcZoneCd_Z1#
        </isNotNull>
        <isNotNull property="mdseCd_Z1">
           AND PLS.MDSE_CD LIKE #mdseCd_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z1">
           AND PLS.EFF_FROM_DT &gt;= #effFromDt_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z2">
           AND PLS.EFF_FROM_DT &lt;= #effFromDt_Z2#
        </isNotNull>
        <isNotNull property="effThruDt_Z1">
           AND NVL(PLS.EFF_THRU_DT, #highValDt#) &gt;= #effThruDt_Z1#
        </isNotNull>
        <isNotNull property="effThruDt_Z2">
           AND NVL(PLS.EFF_THRU_DT, #highValDt#) &lt;= #effThruDt_Z2#
        </isNotNull>
        <isNotNull property="cratDt_Z1">
           AND PLS.EZINTIME &gt;= #cratDt_Z1#
        </isNotNull>
        <isNotNull property="cratDt_Z2">
           AND PLS.EZINTIME &lt;= #cratDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z1">
           AND PLS.EZUPTIME &gt;= #lastUpdDt_Z1#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z2">
           AND PLS.EZUPTIME &lt;= #lastUpdDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="xxFullNm_Z1">
           AND (
                   PLS.EZINUSERID = #xxFullNm_Z1#
              OR (     AP1.FIRST_NM IS NOT NULL
                   AND UPPER(AP1.FIRST_NM || ' ' || AP1.LAST_NM) LIKE #xxFullNm_Z1#
                 )
             )
        </isNotNull>
        <isNotNull property="xxFullNm_Z2">
           AND (
                   PLS.EZUPUSERID = #xxFullNm_Z2#
              OR (     AP2.FIRST_NM IS NOT NULL
                   AND UPPER(AP2.FIRST_NM || ' ' || AP2.LAST_NM) LIKE #xxFullNm_Z2#
                 )
             )
        </isNotNull>
    </statement>

    <statement id="getPrcListValSvcTierCount" parameterClass="Map">
        SELECT
            COUNT(*)
          FROM PRC_LIST_SVC_TIER PLST
             , PRC_MTR_PKG PMP
             , MTR_LB ML
             , PRC_LIST_BAND PLB
             <isNotNull property="xxFullNm_Z1">
             , AUTH_PSN AP1
             </isNotNull>
             <isNotNull property="xxFullNm_Z2">
             , AUTH_PSN AP2
             </isNotNull>
         WHERE PLST.GLBL_CMPY_CD = #glblCmpyCd#
           AND PLST.EZCANCELFLAG = '0'
           AND PLST.PRC_CATG_CD  = #prcCatgCd#
           AND PLST.GLBL_CMPY_CD = PMP.GLBL_CMPY_CD(+)
           AND PLST.EZCANCELFLAG = PMP.EZCANCELFLAG(+)
           AND PLST.PRC_MTR_PKG_PK = PMP.PRC_MTR_PKG_PK(+)
           AND PLST.GLBL_CMPY_CD   = ML.GLBL_CMPY_CD (+)
           AND PLST.EZCANCELFLAG   = ML.EZCANCELFLAG (+)
           AND PLST.BLLG_MTR_LB_CD = ML.MTR_LB_CD (+)
           AND PLST.GLBL_CMPY_CD = PLB.GLBL_CMPY_CD (+)
           AND PLST.EZCANCELFLAG = PLB.EZCANCELFLAG (+)
           AND PLST.PRC_LIST_BAND_CD = PLB.PRC_LIST_BAND_CD (+)
           <isNotNull property="xxFullNm_Z1">
           AND PLST.GLBL_CMPY_CD = AP1.GLBL_CMPY_CD(+)
           AND PLST.EZCANCELFLAG = AP1.EZCANCELFLAG(+)
           AND PLST.EZINUSERID   = AP1.USR_NM(+)
           </isNotNull>
           <isNotNull property="xxFullNm_Z2">
           AND PLST.GLBL_CMPY_CD = AP2.GLBL_CMPY_CD(+)
           AND PLST.EZCANCELFLAG = AP2.EZCANCELFLAG(+)
           AND PLST.EZUPUSERID   = AP2.USR_NM(+)
           </isNotNull>
        <isEqual property="prcDispRecTpCd" compareValue="01">
           AND PLST.DEL_FLG = #flgN#
           AND PLST.EFF_FROM_DT &lt;= #slsDt#
           AND NVL(PLST.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="02">
           AND PLST.DEL_FLG = #flgN#
           AND (PLST.EFF_FROM_DT &gt; #slsDt#
               OR
                NVL(PLST.EFF_THRU_DT, #highValDt#) &lt; #slsDt#
               )
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="03">
           AND PLST.DEL_FLG = #flgY#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="04">
           AND PLST.DEL_FLG = #flgN#
           AND (
                (PLST.EFF_FROM_DT &lt;= #slsDt# AND NVL(PLST.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#)
                OR
                (PLST.EFF_FROM_DT &gt; #slsDt# OR NVL(PLST.EFF_THRU_DT, #highValDt#) &lt; #slsDt#)
               )
        </isEqual>
        <isNotNull property="mdlNm_D2">
           AND UPPER(PLST.MDL_NM) LIKE #mdlNm_D2#
        </isNotNull>
        <isNotNull property="prcMtrPkgNm_D2">
           AND UPPER(PMP.PRC_MTR_PKG_NM) LIKE #prcMtrPkgNm_D2#
        </isNotNull>
        <isNotNull property="prcSvcTierTpCd_D2">
           AND PLST.PRC_SVC_TIER_TP_CD = #prcSvcTierTpCd_D2#
        </isNotNull>
        <isNotNull property="prcSvcPlnTpCd_D2">
           AND PLST.PRC_SVC_PLN_TP_CD = #prcSvcPlnTpCd_D2#
        </isNotNull>
        <isNotNull property="prcSvcContrTpCd_D2">
           AND PLST.PRC_SVC_CONTR_TP_CD = #prcSvcContrTpCd_D2#
        </isNotNull>
        <isNotNull property="mtrLbNm_D2">
           AND UPPER(ML.MTR_LB_NM) LIKE #mtrLbNm_D2#
        </isNotNull>
        <isNotNull property="prcListBandDescTxt_D2">
           AND UPPER(PLB.PRC_LIST_BAND_DESC_TXT) LIKE #prcListBandDescTxt_D2#
        </isNotNull>
        <isNotNull property="termFromMthAot_Z1">
           AND PLST.TERM_FROM_MTH_AOT = #termFromMthAot_Z1#
        </isNotNull>
        <isNotNull property="termThruMthAot_Z1">
           AND PLST.TERM_THRU_MTH_AOT = #termThruMthAot_Z1#
        </isNotNull>
        <isNotNull property="mdseCd_Z1">
           AND PLST.MDSE_CD LIKE #mdseCd_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z1">
           AND PLST.EFF_FROM_DT &gt;= #effFromDt_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z2">
           AND PLST.EFF_FROM_DT &lt;= #effFromDt_Z2#
        </isNotNull>
        <isNotNull property="effThruDt_Z1">
           AND NVL(PLST.EFF_THRU_DT, #highValDt#) &gt;= #effThruDt_Z1#
        </isNotNull>
        <isNotNull property="effThruDt_Z2">
           AND NVL(PLST.EFF_THRU_DT, #highValDt#) &lt;= #effThruDt_Z2#
        </isNotNull>
        <isNotNull property="cratDt_Z1">
           AND PLST.EZINTIME &gt;= #cratDt_Z1#
        </isNotNull>
        <isNotNull property="cratDt_Z2">
           AND PLST.EZINTIME &lt;= #cratDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z1">
           AND PLST.EZUPTIME &gt;= #lastUpdDt_Z1#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z2">
           AND PLST.EZUPTIME &lt;= #lastUpdDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="xxFullNm_Z1">
           AND (
                   PLST.EZINUSERID = #xxFullNm_Z1#
              OR (     AP1.FIRST_NM IS NOT NULL
                   AND UPPER(AP1.FIRST_NM || ' ' || AP1.LAST_NM) LIKE #xxFullNm_Z1#
                 )
             )
        </isNotNull>
        <isNotNull property="xxFullNm_Z2">
           AND (
                   PLST.EZUPUSERID = #xxFullNm_Z2#
              OR (     AP2.FIRST_NM IS NOT NULL
                   AND UPPER(AP2.FIRST_NM || ' ' || AP2.LAST_NM) LIKE #xxFullNm_Z2#
                 )
             )
        </isNotNull>
    </statement>

    <statement id="getPrcListValSvcSpecChrgCount" parameterClass="Map">
        SELECT
            COUNT(*)
          FROM PRC_LIST_ADDL_CHRG PLAC
             <isNotNull property="mdseDescShortTxt_Z2">
             , ALL_MDSE_V AMV
             </isNotNull>
             <isNotNull property="xxFullNm_Z1">
             , AUTH_PSN AP1
             </isNotNull>
             <isNotNull property="xxFullNm_Z2">
             , AUTH_PSN AP2
             </isNotNull>
         WHERE PLAC.GLBL_CMPY_CD = #glblCmpyCd#
           AND PLAC.EZCANCELFLAG = '0'
           AND PLAC.PRC_CATG_CD  = #prcCatgCd#
           <isNotNull property="mdseDescShortTxt_Z2">
           AND PLAC.GLBL_CMPY_CD = AMV.GLBL_CMPY_CD(+)
           AND PLAC.EZCANCELFLAG = AMV.EZCANCELFLAG(+)
           AND PLAC.MDSE_CD      = AMV.MDSE_CD(+)
           </isNotNull>
           <isNotNull property="xxFullNm_Z1">
           AND PLAC.GLBL_CMPY_CD = AP1.GLBL_CMPY_CD(+)
           AND PLAC.EZCANCELFLAG = AP1.EZCANCELFLAG(+)
           AND PLAC.EZINUSERID   = AP1.USR_NM(+)
           </isNotNull>
           <isNotNull property="xxFullNm_Z2">
           AND PLAC.GLBL_CMPY_CD = AP2.GLBL_CMPY_CD(+)
           AND PLAC.EZCANCELFLAG = AP2.EZCANCELFLAG(+)
           AND PLAC.EZUPUSERID   = AP2.USR_NM(+)
           </isNotNull>
        <isEqual property="prcDispRecTpCd" compareValue="01">
           AND PLAC.DEL_FLG = #flgN#
           AND PLAC.EFF_FROM_DT &lt;= #slsDt#
           AND NVL(PLAC.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="02">
           AND PLAC.DEL_FLG = #flgN#
           AND (PLAC.EFF_FROM_DT &gt; #slsDt#
               OR
                NVL(PLAC.EFF_THRU_DT, #highValDt#) &lt; #slsDt#
               )
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="03">
           AND PLAC.DEL_FLG = #flgY#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="04">
           AND PLAC.DEL_FLG = #flgN#
           AND (
                (PLAC.EFF_FROM_DT &lt;= #slsDt# AND NVL(PLAC.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#)
                OR
                (PLAC.EFF_FROM_DT &gt; #slsDt# OR NVL(PLAC.EFF_THRU_DT, #highValDt#) &lt; #slsDt#)
               )
        </isEqual>
        <isNotNull property="mdseCd_DH">
           AND PLAC.MDSE_CD LIKE #mdseCd_DH#
        </isNotNull>
        <isNotNull property="prcAddlChrgTpCd_DH">
           AND PLAC.PRC_ADDL_CHRG_TP_CD = #prcAddlChrgTpCd_DH#
        </isNotNull>
        <isNotNull property="mktMdlSegCd_DH">
           AND PLAC.MKT_MDL_SEG_CD = #mktMdlSegCd_DH#
        </isNotNull>
        <isNotNull property="mdlNm_DH">
           AND UPPER(PLAC.MDL_NM) LIKE #mdlNm_DH#
        </isNotNull>
        <isNotNull property="mdseDescShortTxt_Z2">
           AND UPPER(AMV.MDSE_DESC_SHORT_TXT) LIKE #mdseDescShortTxt_Z2#
        </isNotNull>
        <isNotNull property="effFromDt_Z1">
           AND PLAC.EFF_FROM_DT &gt;= #effFromDt_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z2">
           AND PLAC.EFF_FROM_DT &lt;= #effFromDt_Z2#
        </isNotNull>
        <isNotNull property="effThruDt_Z1">
           AND NVL(PLAC.EFF_THRU_DT, #highValDt#) &gt;= #effThruDt_Z1#
        </isNotNull>
        <isNotNull property="effThruDt_Z2">
           AND NVL(PLAC.EFF_THRU_DT, #highValDt#) &lt;= #effThruDt_Z2#
        </isNotNull>
        <isNotNull property="cratDt_Z1">
           AND PLAC.EZINTIME &gt;= #cratDt_Z1#
        </isNotNull>
        <isNotNull property="cratDt_Z2">
           AND PLAC.EZINTIME &lt;= #cratDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z1">
           AND PLAC.EZUPTIME &gt;= #lastUpdDt_Z1#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z2">
           AND PLAC.EZUPTIME &lt;= #lastUpdDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="xxFullNm_Z1">
           AND (
                   PLAC.EZINUSERID = #xxFullNm_Z1#
              OR (     AP1.FIRST_NM IS NOT NULL
                   AND UPPER(AP1.FIRST_NM || ' ' || AP1.LAST_NM) LIKE #xxFullNm_Z1#
                 )
             )
        </isNotNull>
        <isNotNull property="xxFullNm_Z2">
           AND (
                   PLAC.EZUPUSERID = #xxFullNm_Z2#
              OR (     AP2.FIRST_NM IS NOT NULL
                   AND UPPER(AP2.FIRST_NM || ' ' || AP2.LAST_NM) LIKE #xxFullNm_Z2#
                 )
             )
        </isNotNull>
    </statement>

    <statement id="getPrcListValSplyPgmCount" parameterClass="Map">
        SELECT
            COUNT(*)
          FROM PRC_LIST_SPLY_PGM PLSP
             , PRC_MTR_PKG PMP
             , SPLY_AGMT_PLN SAP
             , MTR_LB ML
             , PRC_LIST_BAND PLB
             <isNotNull property="xxFullNm_Z1">
             , AUTH_PSN AP1
             </isNotNull>
             <isNotNull property="xxFullNm_Z2">
             , AUTH_PSN AP2
             </isNotNull>
         WHERE PLSP.GLBL_CMPY_CD = #glblCmpyCd#
           AND PLSP.EZCANCELFLAG = '0'
           AND PLSP.PRC_CATG_CD  = #prcCatgCd#
           AND PLSP.GLBL_CMPY_CD = PMP.GLBL_CMPY_CD(+)
           AND PLSP.EZCANCELFLAG = PMP.EZCANCELFLAG(+)
           AND PLSP.PRC_MTR_PKG_PK = PMP.PRC_MTR_PKG_PK(+)
           AND PLSP.GLBL_CMPY_CD = SAP.GLBL_CMPY_CD(+)
           AND PLSP.EZCANCELFLAG = SAP.EZCANCELFLAG(+)
           AND PLSP.SPLY_AGMT_PLN_PK = SAP.SPLY_AGMT_PLN_PK(+)
           AND PLSP.GLBL_CMPY_CD = ML.GLBL_CMPY_CD (+)
           AND PLSP.EZCANCELFLAG = ML.EZCANCELFLAG (+)
           AND PLSP.BLLG_MTR_LB_CD = ML.MTR_LB_CD (+)
           AND PLSP.GLBL_CMPY_CD = PLB.GLBL_CMPY_CD (+)
           AND PLSP.EZCANCELFLAG = PLB.EZCANCELFLAG (+)
           AND PLSP.PRC_LIST_BAND_CD = PLB.PRC_LIST_BAND_CD (+)
           <isNotNull property="xxFullNm_Z1">
           AND PLSP.GLBL_CMPY_CD = AP1.GLBL_CMPY_CD(+)
           AND PLSP.EZCANCELFLAG = AP1.EZCANCELFLAG(+)
           AND PLSP.EZINUSERID   = AP1.USR_NM(+)
           </isNotNull>
           <isNotNull property="xxFullNm_Z2">
           AND PLSP.GLBL_CMPY_CD = AP2.GLBL_CMPY_CD(+)
           AND PLSP.EZCANCELFLAG = AP2.EZCANCELFLAG(+)
           AND PLSP.EZUPUSERID   = AP2.USR_NM(+)
           </isNotNull>
        <isEqual property="prcDispRecTpCd" compareValue="01">
           AND PLSP.DEL_FLG = #flgN#
           AND PLSP.EFF_FROM_DT &lt;= #slsDt#
           AND NVL(PLSP.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="02">
           AND PLSP.DEL_FLG = #flgN#
           AND (PLSP.EFF_FROM_DT &gt; #slsDt#
               OR
                NVL(PLSP.EFF_THRU_DT, #highValDt#) &lt; #slsDt#
               )
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="03">
           AND PLSP.DEL_FLG = #flgY#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="04">
           AND PLSP.DEL_FLG = #flgN#
           AND (
                (PLSP.EFF_FROM_DT &lt;= #slsDt# AND NVL(PLSP.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#)
                OR
                (PLSP.EFF_FROM_DT &gt; #slsDt# OR NVL(PLSP.EFF_THRU_DT, #highValDt#) &lt; #slsDt#)
               )
        </isEqual>
        <isNotNull property="mdlNm_D3">
           AND UPPER(PLSP.MDL_NM) LIKE #mdlNm_D3#
        </isNotNull>
        <isNotNull property="prcMtrPkgNm_D3">
           AND UPPER(PMP.PRC_MTR_PKG_NM) LIKE #prcMtrPkgNm_D3#
        </isNotNull>
        <isNotNull property="prcSvcPlnTpCd_D3">
           AND PLSP.PRC_SVC_PLN_TP_CD = #prcSvcPlnTpCd_D3#
        </isNotNull>
        <isNotNull property="prcSvcContrTpCd_D3">
           AND PLSP.PRC_SVC_CONTR_TP_CD = #prcSvcContrTpCd_D3#
        </isNotNull>
        <isNotNull property="mtrLbNm_D3">
           AND UPPER(ML.MTR_LB_NM) LIKE #mtrLbNm_D3#
        </isNotNull>
        <isNotNull property="prcListBandDescTxt_D3">
           AND UPPER(PLB.PRC_LIST_BAND_DESC_TXT) LIKE #prcListBandDescTxt_D3#
        </isNotNull>
        <isNotNull property="splyAgmtPlnNm_D3">
           AND UPPER(SAP.SPLY_AGMT_PLN_NM) LIKE #splyAgmtPlnNm_D3#
        </isNotNull>
        <isNotNull property="termFromMthAot_Z1">
           AND PLS.TERM_FROM_MTH_AOT = #termFromMthAot_Z1#
        </isNotNull>
        <isNotNull property="termThruMthAot_Z1">
           AND PLSP.TERM_THRU_MTH_AOT = #termThruMthAot_Z1#
        </isNotNull>
        <isNotNull property="prcSvcZoneCd_Z1">
           AND PLSP.PRC_SVC_ZONE_CD = #prcSvcZoneCd_Z1#
        </isNotNull>
        <isNotNull property="mdseCd_Z1">
           AND PLSP.MDSE_CD LIKE #mdseCd_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z1">
           AND PLSP.EFF_FROM_DT &gt;= #effFromDt_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z2">
           AND PLSP.EFF_FROM_DT &lt;= #effFromDt_Z2#
        </isNotNull>
        <isNotNull property="effThruDt_Z1">
           AND NVL(PLSP.EFF_THRU_DT, #highValDt#) &gt;= #effThruDt_Z1#
        </isNotNull>
        <isNotNull property="effThruDt_Z2">
           AND NVL(PLSP.EFF_THRU_DT, #highValDt#) &lt;= #effThruDt_Z2#
        </isNotNull>
        <isNotNull property="cratDt_Z1">
           AND PLSP.EZINTIME &gt;= #cratDt_Z1#
        </isNotNull>
        <isNotNull property="cratDt_Z2">
           AND PLSP.EZINTIME &lt;= #cratDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z1">
           AND PLSP.EZUPTIME &gt;= #lastUpdDt_Z1#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z2">
           AND PLSP.EZUPTIME &lt;= #lastUpdDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="xxFullNm_Z1">
           AND (
                   PLSP.EZINUSERID = #xxFullNm_Z1#
              OR (     AP1.FIRST_NM IS NOT NULL
                   AND UPPER(AP1.FIRST_NM || ' ' || AP1.LAST_NM) LIKE #xxFullNm_Z1#
                 )
             )
        </isNotNull>
        <isNotNull property="xxFullNm_Z2">
           AND (
                   PLSP.EZUPUSERID = #xxFullNm_Z2#
              OR (     AP2.FIRST_NM IS NOT NULL
                   AND UPPER(AP2.FIRST_NM || ' ' || AP2.LAST_NM) LIKE #xxFullNm_Z2#
                 )
             )
        </isNotNull>
    </statement>

    <statement id="getPrcListValLeaseRateCount" parameterClass="Map">
        SELECT
            COUNT(*)
          FROM PRC_LIST_LEASE_RATE PLLR
             <isNotNull property="xxFullNm_Z1">
             , AUTH_PSN AP1
             </isNotNull>
             <isNotNull property="xxFullNm_Z2">
             , AUTH_PSN AP2
             </isNotNull>
         WHERE PLLR.GLBL_CMPY_CD = #glblCmpyCd#
           AND PLLR.EZCANCELFLAG = '0'
           AND PLLR.PRC_CATG_CD  = #prcCatgCd#
           <isNotNull property="xxFullNm_Z1">
           AND PLLR.GLBL_CMPY_CD = AP1.GLBL_CMPY_CD(+)
           AND PLLR.EZCANCELFLAG = AP1.EZCANCELFLAG(+)
           AND PLLR.EZINUSERID   = AP1.USR_NM(+)
           </isNotNull>
           <isNotNull property="xxFullNm_Z2">
           AND PLLR.GLBL_CMPY_CD = AP2.GLBL_CMPY_CD(+)
           AND PLLR.EZCANCELFLAG = AP2.EZCANCELFLAG(+)
           AND PLLR.EZUPUSERID   = AP2.USR_NM(+)
           </isNotNull>
        <isEqual property="prcDispRecTpCd" compareValue="01">
           AND PLLR.DEL_FLG = #flgN#
           AND PLLR.EFF_FROM_DT &lt;= #slsDt#
           AND NVL(PLLR.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="02">
           AND PLLR.DEL_FLG = #flgN#
           AND (PLLR.EFF_FROM_DT &gt; #slsDt#
               OR
                NVL(PLLR.EFF_THRU_DT, #highValDt#) &lt; #slsDt#
               )
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="03">
           AND PLLR.DEL_FLG = #flgY#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="04">
           AND PLLR.DEL_FLG = #flgN#
           AND (
                (PLLR.EFF_FROM_DT &lt;= #slsDt# AND NVL(PLLR.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#)
                OR
                (PLLR.EFF_FROM_DT &gt; #slsDt# OR NVL(PLLR.EFF_THRU_DT, #highValDt#) &lt; #slsDt#)
               )
        </isEqual>
        <isNotNull property="mdlNm_D4">
           AND UPPER(PLLR.MDL_NM) LIKE #mdlNm_D4#
        </isNotNull>
        <isNotNull property="prcEquipTpCd_DH">
           AND PLLR.PRC_EQUIP_TP_CD = #prcEquipTpCd_DH#
        </isNotNull>
        <isNotNull property="prcPgmTpCd_DH">
           AND PLLR.PRC_PGM_TP_CD = #prcPgmTpCd_DH#
        </isNotNull>
        <isNotNull property="prcLeaseCmpyAbbrNm_D4">
           AND UPPER(PLLR.PRC_LEASE_CMPY_ABBR_NM) LIKE #prcLeaseCmpyAbbrNm_D4#
        </isNotNull>
        <isNotNull property="dsAcctNm_D4">
           AND UPPER(PLLR.DS_ACCT_NM) LIKE #dsAcctNm_D4#
        </isNotNull>
        <isNotNull property="termFromMthAot_Z1">
           AND PLLR.TERM_FROM_MTH_AOT = #termFromMthAot_Z1#
        </isNotNull>
        <isNotNull property="termThruMthAot_Z1">
           AND PLLR.TERM_THRU_MTH_AOT = #termThruMthAot_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z1">
           AND PLLR.EFF_FROM_DT &gt;= #effFromDt_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z2">
           AND PLLR.EFF_FROM_DT &lt;= #effFromDt_Z2#
        </isNotNull>
        <isNotNull property="effThruDt_Z1">
           AND NVL(PLLR.EFF_THRU_DT, #highValDt#) &gt;= #effThruDt_Z1#
        </isNotNull>
        <isNotNull property="effThruDt_Z2">
           AND NVL(PLLR.EFF_THRU_DT, #highValDt#) &lt;= #effThruDt_Z2#
        </isNotNull>
        <isNotNull property="cratDt_Z1">
           AND PLLR.EZINTIME &gt;= #cratDt_Z1#
        </isNotNull>
        <isNotNull property="cratDt_Z2">
           AND PLLR.EZINTIME &lt;= #cratDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z1">
           AND PLLR.EZUPTIME &gt;= #lastUpdDt_Z1#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z2">
           AND PLLR.EZUPTIME &lt;= #lastUpdDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="xxFullNm_Z1">
           AND (
                   PLLR.EZINUSERID = #xxFullNm_Z1#
              OR (     AP1.FIRST_NM IS NOT NULL
                   AND UPPER(AP1.FIRST_NM || ' ' || AP1.LAST_NM) LIKE #xxFullNm_Z1#
                 )
             )
        </isNotNull>
        <isNotNull property="xxFullNm_Z2">
           AND (
                   PLLR.EZUPUSERID = #xxFullNm_Z2#
              OR (     AP2.FIRST_NM IS NOT NULL
                   AND UPPER(AP2.FIRST_NM || ' ' || AP2.LAST_NM) LIKE #xxFullNm_Z2#
                 )
             )
        </isNotNull>
    </statement>

    <statement id="getPrcListValLeaseRtrnFeeCount" parameterClass="Map">
        SELECT
            COUNT(*)
          FROM PRC_LIST_LEASE_RTRN PLLRT
             <isNotNull property="xxFullNm_Z1">
             , AUTH_PSN AP1
             </isNotNull>
             <isNotNull property="xxFullNm_Z2">
             , AUTH_PSN AP2
             </isNotNull>
         WHERE PLLRT.GLBL_CMPY_CD = #glblCmpyCd#
           AND PLLRT.EZCANCELFLAG = '0'
           AND PLLRT.PRC_CATG_CD  = #prcCatgCd#
           <isNotNull property="xxFullNm_Z1">
           AND PLLRT.GLBL_CMPY_CD = AP1.GLBL_CMPY_CD(+)
           AND PLLRT.EZCANCELFLAG = AP1.EZCANCELFLAG(+)
           AND PLLRT.EZINUSERID   = AP1.USR_NM(+)
           </isNotNull>
           <isNotNull property="xxFullNm_Z2">
           AND PLLRT.GLBL_CMPY_CD = AP2.GLBL_CMPY_CD(+)
           AND PLLRT.EZCANCELFLAG = AP2.EZCANCELFLAG(+)
           AND PLLRT.EZUPUSERID   = AP2.USR_NM(+)
           </isNotNull>
        <isEqual property="prcDispRecTpCd" compareValue="01">
           AND PLLRT.DEL_FLG = #flgN#
           AND PLLRT.EFF_FROM_DT &lt;= #slsDt#
           AND NVL(PLLRT.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="02">
           AND PLLRT.DEL_FLG = #flgN#
           AND (PLLRT.EFF_FROM_DT &gt; #slsDt#
               OR
                NVL(PLLRT.EFF_THRU_DT, #highValDt#) &lt; #slsDt#
               )
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="03">
           AND PLLRT.DEL_FLG = #flgY#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="04">
           AND PLLRT.DEL_FLG = #flgN#
           AND (
                (PLLRT.EFF_FROM_DT &lt;= #slsDt# AND NVL(PLLRT.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#)
                OR
                (PLLRT.EFF_FROM_DT &gt; #slsDt# OR NVL(PLLRT.EFF_THRU_DT, #highValDt#) &lt; #slsDt#)
               )
        </isEqual>
        <isNotNull property="svcSegCd_DH">
           AND PLLRT.SVC_SEG_CD = #svcSegCd_DH#
        </isNotNull>
        <isNotNull property="prcInOutRgCd_DH">
           AND PLLRT.PRC_IN_OUT_RG_CD = #prcInOutRgCd_DH#
        </isNotNull>
        <isNotNull property="prcLeaseCmpyAbbrNm_D5">
           AND UPPER(PLLRT.PRC_LEASE_CMPY_ABBR_NM) LIKE #prcLeaseCmpyAbbrNm_D5#
        </isNotNull>
        <isNotNull property="effFromDt_Z1">
           AND PLLRT.EFF_FROM_DT &gt;= #effFromDt_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z2">
           AND PLLRT.EFF_FROM_DT &lt;= #effFromDt_Z2#
        </isNotNull>
        <isNotNull property="effThruDt_Z1">
           AND NVL(PLLRT.EFF_THRU_DT, #highValDt#) &gt;= #effThruDt_Z1#
        </isNotNull>
        <isNotNull property="effThruDt_Z2">
           AND NVL(PLLRT.EFF_THRU_DT, #highValDt#) &lt;= #effThruDt_Z2#
        </isNotNull>
        <isNotNull property="cratDt_Z1">
           AND PLLRT.EZINTIME &gt;= #cratDt_Z1#
        </isNotNull>
        <isNotNull property="cratDt_Z2">
           AND PLLRT.EZINTIME &lt;= #cratDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z1">
           AND PLLRT.EZUPTIME &gt;= #lastUpdDt_Z1#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z2">
           AND PLLRT.EZUPTIME &lt;= #lastUpdDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="xxFullNm_Z1">
           AND (
                   PLLRT.EZINUSERID = #xxFullNm_Z1#
              OR (     AP1.FIRST_NM IS NOT NULL
                   AND UPPER(AP1.FIRST_NM || ' ' || AP1.LAST_NM) LIKE #xxFullNm_Z1#
                 )
             )
        </isNotNull>
        <isNotNull property="xxFullNm_Z2">
           AND (
                   PLLRT.EZUPUSERID = #xxFullNm_Z2#
              OR (     AP2.FIRST_NM IS NOT NULL
                   AND UPPER(AP2.FIRST_NM || ' ' || AP2.LAST_NM) LIKE #xxFullNm_Z2#
                 )
             )
        </isNotNull>
    </statement>

    <statement id="getPrcListValTradeInCount" parameterClass="Map">
        SELECT
            COUNT(*)
          FROM PRC_LIST_TI_VAL PLTI
             <isNotNull property="xxFullNm_Z1">
             , AUTH_PSN AP1
             </isNotNull>
             <isNotNull property="xxFullNm_Z2">
             , AUTH_PSN AP2
             </isNotNull>
         WHERE PLTI.GLBL_CMPY_CD = #glblCmpyCd#
           AND PLTI.EZCANCELFLAG = '0'
           AND PLTI.PRC_CATG_CD  = #prcCatgCd#
           <isNotNull property="xxFullNm_Z1">
           AND PLTI.GLBL_CMPY_CD = AP1.GLBL_CMPY_CD(+)
           AND PLTI.EZCANCELFLAG = AP1.EZCANCELFLAG(+)
           AND PLTI.EZINUSERID   = AP1.USR_NM(+)
           </isNotNull>
           <isNotNull property="xxFullNm_Z2">
           AND PLTI.GLBL_CMPY_CD = AP2.GLBL_CMPY_CD(+)
           AND PLTI.EZCANCELFLAG = AP2.EZCANCELFLAG(+)
           AND PLTI.EZUPUSERID   = AP2.USR_NM(+)
           </isNotNull>
        <isEqual property="prcDispRecTpCd" compareValue="01">
           AND PLTI.DEL_FLG = #flgN#
           AND PLTI.EFF_FROM_DT &lt;= #slsDt#
           AND NVL(PLTI.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="02">
           AND PLTI.DEL_FLG = #flgN#
           AND (PLTI.EFF_FROM_DT &gt; #slsDt#
               OR
                NVL(PLTI.EFF_THRU_DT, #highValDt#) &lt; #slsDt#
               )
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="03">
           AND PLTI.DEL_FLG = #flgY#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="04">
           AND PLTI.DEL_FLG = #flgN#
           AND (
                (PLTI.EFF_FROM_DT &lt;= #slsDt# AND NVL(PLTI.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#)
                OR
                (PLTI.EFF_FROM_DT &gt; #slsDt# OR NVL(PLTI.EFF_THRU_DT, #highValDt#) &lt; #slsDt#)
               )
        </isEqual>
        <isNotNull property="mdlNm_D5">
           AND UPPER(PLTI.MDL_NM) LIKE #mdlNm_D5#
        </isNotNull>
        <isNotNull property="effFromDt_Z1">
           AND PLTI.EFF_FROM_DT &gt;= #effFromDt_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z2">
           AND PLTI.EFF_FROM_DT &lt;= #effFromDt_Z2#
        </isNotNull>
        <isNotNull property="effThruDt_Z1">
           AND NVL(PLTI.EFF_THRU_DT, #highValDt#) &gt;= #effThruDt_Z1#
        </isNotNull>
        <isNotNull property="effThruDt_Z2">
           AND NVL(PLTI.EFF_THRU_DT, #highValDt#) &lt;= #effThruDt_Z2#
        </isNotNull>
        <isNotNull property="cratDt_Z1">
           AND PLTI.EZINTIME &gt;= #cratDt_Z1#
        </isNotNull>
        <isNotNull property="cratDt_Z2">
           AND PLTI.EZINTIME &lt;= #cratDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z1">
           AND PLTI.EZUPTIME &gt;= #lastUpdDt_Z1#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z2">
           AND PLTI.EZUPTIME &lt;= #lastUpdDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="xxFullNm_Z1">
           AND (
                   PLTI.EZINUSERID = #xxFullNm_Z1#
              OR (     AP1.FIRST_NM IS NOT NULL
                   AND UPPER(AP1.FIRST_NM || ' ' || AP1.LAST_NM) LIKE #xxFullNm_Z1#
                 )
             )
        </isNotNull>
        <isNotNull property="xxFullNm_Z2">
           AND (
                   PLTI.EZUPUSERID = #xxFullNm_Z2#
              OR (     AP2.FIRST_NM IS NOT NULL
                   AND UPPER(AP2.FIRST_NM || ' ' || AP2.LAST_NM) LIKE #xxFullNm_Z2#
                 )
             )
        </isNotNull>
    </statement>
    <!-- ****** Count for price list : End ***** -->

    <statement id ="getProductLevelName" parameterClass="Map"  resultClass="Map">
        SELECT 
            MSET.MDSE_STRU_ELMNT_TP_CD
           ,MSET.MDSE_STRU_ELMNT_TP_DESC_TXT MDSE_STRU_ELMNT_TP_NM
        FROM 
            MDSE_STRU_ELMNT_TP MSET
        WHERE 
            MSET.EZCANCELFLAG = '0'
        AND MSET.GLBL_CMPY_CD = #glblCmpyCd#
    </statement>

    <statement id ="getSvcItemTpList" parameterClass="Map"  resultClass="Map">
        SELECT 
            ITVS.MDSE_ITEM_TP_CD
           ,ITVS.FIRST_BIZ_CTX_ATTRB_TXT
        FROM 
            ITEM_TP_VAL_SET ITVS
        WHERE 
            ITVS.GLBL_CMPY_CD      = #glblCmpyCd#
        AND ITVS.EZCANCELFLAG      = '0'
        AND ITVS.ITEM_TP_CTX_TP_CD = #itemTpCtxTpCd#
    </statement>

    <statement id="getEquipmentMdseInfo" parameterClass="Map"  resultClass="Map">
        SELECT
              * 
        FROM
            ( 
                SELECT
                      AMV.MDSE_CD
                    , AMV.MDSE_DESC_SHORT_TXT
                    <!-- 2018/07/17 QC#20267 Mod Start -->
                    , AMV.MNF_ITEM_CD
                    <!-- 2018/07/17 QC#20267 Mod End -->
                    , AMV.COA_MDSE_TP_CD
                    , CPJ.COA_PROJ_NM COA_MDSE_TP_NM
                    , MIT.MDSE_ITEM_TP_NM
                    , CP.COA_PROD_NM
                    , '' T_MDL_NM
                    , CASE 
                        WHEN AMV.ZEROTH_PROD_CTRL_CD IS NULL 
                        THEN NULL 
                        ELSE AMV.ZEROTH_PROD_CTRL_CD || ':' || ZEROTH_PROD_CTRL_NM 
                        END ZEROTH_PROD_CTRL
                    , CASE 
                        WHEN AMV.FIRST_PROD_CTRL_CD IS NULL 
                        THEN NULL 
                        ELSE AMV.FIRST_PROD_CTRL_CD || ':' || FIRST_PROD_CTRL_NM 
                        END FIRST_PROD_CTRL
                    , CASE 
                        WHEN AMV.SCD_PROD_CTRL_CD IS NULL 
                        THEN NULL 
                        ELSE AMV.SCD_PROD_CTRL_CD || ':' || SCD_PROD_CTRL_NM 
                        END SCD_PROD_CTRL
                    , CASE 
                        WHEN AMV.THIRD_PROD_CTRL_CD IS NULL 
                        THEN NULL 
                        ELSE AMV.THIRD_PROD_CTRL_CD || ':' || THIRD_PROD_CTRL_NM 
                        END THIRD_PROD_CTRL
                    , CASE 
                        WHEN AMV.FRTH_PROD_CTRL_CD IS NULL 
                        THEN NULL 
                        ELSE AMV.FRTH_PROD_CTRL_CD || ':' || FRTH_PROD_CTRL_NM 
                        END FRTH_PROD_CTRL 
                FROM
                    ALL_MDSE_V AMV
                    , COA_PROJ CPJ
                    , MDSE_ITEM_TP MIT
                    , COA_PROD CP 
                WHERE
                    AMV.GLBL_CMPY_CD = #glblCmpyCd#  
                    AND AMV.EZCANCELFLAG = '0' 
                    <!-- 2018/07/17 QC#20267 Mod Start -->
                    <isNotNull property="mdseCd">
                        AND AMV.MDSE_CD LIKE #mdseCd# 
                    </isNotNull>
                    <isNotNull property="mnfItemCd">
                        AND AMV.MNF_ITEM_CD = #mnfItemCd# 
                    </isNotNull>
                    <!-- 2018/07/17 QC#20267 Mod End -->
                    AND AMV.GLBL_CMPY_CD = CPJ.GLBL_CMPY_CD(+) 
                    AND AMV.EZCANCELFLAG = CPJ.EZCANCELFLAG(+) 
                    AND AMV.COA_MDSE_TP_CD = CPJ.COA_PROJ_CD(+) 
                    AND AMV.GLBL_CMPY_CD = MIT.GLBL_CMPY_CD(+) 
                    AND AMV.EZCANCELFLAG = MIT.EZCANCELFLAG(+) 
                    AND AMV.MDSE_ITEM_TP_CD = MIT.MDSE_ITEM_TP_CD(+) 
                    AND AMV.GLBL_CMPY_CD = CP.GLBL_CMPY_CD(+) 
                    AND AMV.EZCANCELFLAG = CP.EZCANCELFLAG(+) 
                    AND AMV.COA_PROD_CD = CP.COA_PROD_CD(+)
            ) TMP 
        <!-- 2018/07/17 QC#20267 Mod Start -->
        <isNotNull property="mdseCd">
        WHERE
            ROWNUM &lt;= #rowNum#
        </isNotNull>
        <!-- 2018/07/17 QC#20267 Mod End -->

    </statement>

    <statement id="getPriceMdseInfo" parameterClass="Map"  resultClass="Map">
        SELECT
              * 
        FROM
            ( 
                SELECT
                      M.MDSE_CD
                    , M.MDSE_NM
                    , M.MDSE_DESC_SHORT_TXT
                FROM
                      MDSE M
                    , COA_PROD CP
                    , PRCH_GRP PG
                    , MDSE_PRC_GRP MPG
                    , MDSE_ITEM_TP MIT
                    , COA_PROJ CMT
                    , MDSE_ITEM_STS MIS
                    , MKT_MDL MM
                    , MKT_MDL_SEG MMS
                    , MDSE_ITEM_CLS_TP MICT
                    , MDSE_ITEM_MNF MIM
                    , MDSE_CRAT_TMPL MCT
                    , SLS_MAT_GRP SMG1
                    , SLS_MAT_GRP SMG2
                    , SLS_MAT_GRP SMG3
                    , DS_CMSN_GRP DCG 
                WHERE
                    M.EZCANCELFLAG = '0' 
                    AND M.GLBL_CMPY_CD      = #glblCmpyCd# 
                    AND M.EZCANCELFLAG      = CP.EZCANCELFLAG(+) 
                    AND M.GLBL_CMPY_CD      = CP.GLBL_CMPY_CD(+) 
                    AND M.COA_PROD_CD       = CP.COA_PROD_CD(+) 
                    AND M.EZCANCELFLAG      = PG.EZCANCELFLAG(+) 
                    AND M.GLBL_CMPY_CD      = PG.GLBL_CMPY_CD(+) 
                    AND M.PRCH_GRP_CD       = PG.PRCH_GRP_CD(+) 
                    AND M.EZCANCELFLAG      = MPG.EZCANCELFLAG(+) 
                    AND M.GLBL_CMPY_CD      = MPG.GLBL_CMPY_CD(+) 
                    AND M.MDSE_PRC_GRP_CD   = MPG.MDSE_PRC_GRP_CD(+) 
                    AND M.EZCANCELFLAG      = MIT.EZCANCELFLAG(+) 
                    AND M.GLBL_CMPY_CD      = MIT.GLBL_CMPY_CD(+) 
                    AND M.MDSE_ITEM_TP_CD   = MIT.MDSE_ITEM_TP_CD(+) 
                    AND M.EZCANCELFLAG      = CMT.EZCANCELFLAG(+) 
                    AND M.GLBL_CMPY_CD      = CMT.GLBL_CMPY_CD(+) 
                    AND M.COA_MDSE_TP_CD    = CMT.COA_PROJ_CD(+) 
                    AND M.EZCANCELFLAG      = MIS.EZCANCELFLAG(+) 
                    AND M.GLBL_CMPY_CD      = MIS.GLBL_CMPY_CD(+) 
                    AND M.MDSE_ITEM_STS_CD  = MIS.MDSE_ITEM_STS_CD(+) 
                    AND M.EZCANCELFLAG      = MM.EZCANCELFLAG(+) 
                    AND M.GLBL_CMPY_CD      = MM.GLBL_CMPY_CD(+) 
                    AND M.MKT_MDL_CD        = MM.MKT_MDL_CD(+) 
                    AND M.EZCANCELFLAG      = MMS.EZCANCELFLAG(+) 
                    AND M.GLBL_CMPY_CD      = MMS.GLBL_CMPY_CD(+) 
                    AND M.MKT_MDL_SEG_CD    = MMS.MKT_MDL_SEG_CD(+) 
                    AND M.EZCANCELFLAG      = MICT.EZCANCELFLAG(+) 
                    AND M.GLBL_CMPY_CD      = MICT.GLBL_CMPY_CD(+) 
                    AND M.MDSE_ITEM_CLS_TP_CD = MICT.MDSE_ITEM_CLS_TP_CD(+) 
                    AND M.EZCANCELFLAG      = MIM.EZCANCELFLAG(+) 
                    AND M.GLBL_CMPY_CD      = MIM.GLBL_CMPY_CD(+) 
                    AND M.MDSE_ITEM_MNF_CD  = MIM.MDSE_ITEM_MNF_CD(+) 
                    AND M.EZCANCELFLAG      = MCT.EZCANCELFLAG(+) 
                    AND M.GLBL_CMPY_CD      = MCT.GLBL_CMPY_CD(+) 
                    AND M.MDSE_CRAT_TMPL_PK = MCT.MDSE_CRAT_TMPL_PK(+) 
                    AND M.EZCANCELFLAG      = SMG1.EZCANCELFLAG(+) 
                    AND M.GLBL_CMPY_CD      = SMG1.GLBL_CMPY_CD(+) 
                    AND M.SLS_MAT_GRP_CD_01 = SMG1.SLS_MAT_GRP_CD(+) 
                    AND M.EZCANCELFLAG      = SMG2.EZCANCELFLAG(+) 
                    AND M.GLBL_CMPY_CD      = SMG2.GLBL_CMPY_CD(+) 
                    AND M.SLS_MAT_GRP_CD_02 = SMG2.SLS_MAT_GRP_CD(+) 
                    AND M.EZCANCELFLAG      = SMG3.EZCANCELFLAG(+) 
                    AND M.GLBL_CMPY_CD      = SMG3.GLBL_CMPY_CD(+) 
                    AND M.SLS_MAT_GRP_CD_03 = SMG3.SLS_MAT_GRP_CD(+) 
                    AND M.EZCANCELFLAG      = DCG.EZCANCELFLAG(+) 
                    AND M.GLBL_CMPY_CD      = DCG.GLBL_CMPY_CD(+) 
                    AND M.DS_CMSN_GRP_CD    = DCG.DS_CMSN_GRP_CD(+) 
                    AND UPPER(M.MDSE_CD)    LIKE UPPER(#mdseCd#) 
                    AND NOT EXISTS ( 
                        SELECT
                              '1' 
                        FROM
                            ORD_TAKE_MDSE OTM 
                        WHERE
                            OTM.EZCANCELFLAG = '0' 
                            AND OTM.GLBL_CMPY_CD = #glblCmpyCd# 
                            AND OTM.ORD_TAKE_MDSE_CD = SUBSTR(M.MDSE_CD, 1, 8)
                    ) 
                UNION 
                SELECT
                      OTM.ORD_TAKE_MDSE_CD MDSE_CD
                    , M.MDSE_NM
                    , M.MDSE_DESC_SHORT_TXT
                FROM
                      ORD_TAKE_MDSE OTM
                    , MDSE M
                    , COA_PROD CP
                    , PRCH_GRP PG
                    , MDSE_PRC_GRP MPG
                    , MDSE_ITEM_TP MIT
                    , COA_PROJ CMT
                    , MDSE_ITEM_STS MIS
                    , MKT_MDL MM
                    , MKT_MDL_SEG MMS
                    , MDSE_ITEM_CLS_TP MICT
                    , MDSE_ITEM_MNF MIM
                    , MDSE_CRAT_TMPL MCT
                    , SLS_MAT_GRP SMG1
                    , SLS_MAT_GRP SMG2
                    , SLS_MAT_GRP SMG3
                    , DS_CMSN_GRP DCG 
                WHERE
                    OTM.EZCANCELFLAG = '0' 
                    AND OTM.GLBL_CMPY_CD    = #glblCmpyCd# 
                    AND OTM.EZCANCELFLAG    = M.EZCANCELFLAG 
                    AND OTM.GLBL_CMPY_CD    = M.GLBL_CMPY_CD 
                    AND OTM.MDSE_CD         = M.MDSE_CD 
                    AND M.EZCANCELFLAG      = CP.EZCANCELFLAG(+) 
                    AND M.GLBL_CMPY_CD      = CP.GLBL_CMPY_CD(+) 
                    AND M.COA_PROD_CD       = CP.COA_PROD_CD(+) 
                    AND M.EZCANCELFLAG      = PG.EZCANCELFLAG(+) 
                    AND M.GLBL_CMPY_CD      = PG.GLBL_CMPY_CD(+) 
                    AND M.PRCH_GRP_CD       = PG.PRCH_GRP_CD(+) 
                    AND M.EZCANCELFLAG      = MPG.EZCANCELFLAG(+) 
                    AND M.GLBL_CMPY_CD      = MPG.GLBL_CMPY_CD(+) 
                    AND M.MDSE_PRC_GRP_CD   = MPG.MDSE_PRC_GRP_CD(+) 
                    AND M.EZCANCELFLAG      = MIT.EZCANCELFLAG(+) 
                    AND M.GLBL_CMPY_CD      = MIT.GLBL_CMPY_CD(+) 
                    AND M.MDSE_ITEM_TP_CD   = MIT.MDSE_ITEM_TP_CD(+) 
                    AND M.EZCANCELFLAG      = CMT.EZCANCELFLAG(+) 
                    AND M.GLBL_CMPY_CD      = CMT.GLBL_CMPY_CD(+) 
                    AND M.COA_MDSE_TP_CD    = CMT.COA_PROJ_CD(+) 
                    AND M.EZCANCELFLAG      = MIS.EZCANCELFLAG(+) 
                    AND M.GLBL_CMPY_CD      = MIS.GLBL_CMPY_CD(+) 
                    AND M.MDSE_ITEM_STS_CD  = MIS.MDSE_ITEM_STS_CD(+) 
                    AND M.EZCANCELFLAG      = MM.EZCANCELFLAG(+) 
                    AND M.GLBL_CMPY_CD      = MM.GLBL_CMPY_CD(+) 
                    AND M.MKT_MDL_CD        = MM.MKT_MDL_CD(+) 
                    AND M.EZCANCELFLAG      = MMS.EZCANCELFLAG(+) 
                    AND M.GLBL_CMPY_CD      = MMS.GLBL_CMPY_CD(+) 
                    AND M.MKT_MDL_SEG_CD    = MMS.MKT_MDL_SEG_CD(+) 
                    AND M.EZCANCELFLAG      = MICT.EZCANCELFLAG(+) 
                    AND M.GLBL_CMPY_CD      = MICT.GLBL_CMPY_CD(+) 
                    AND M.MDSE_ITEM_CLS_TP_CD = MICT.MDSE_ITEM_CLS_TP_CD(+) 
                    AND M.EZCANCELFLAG      = MIM.EZCANCELFLAG(+) 
                    AND M.GLBL_CMPY_CD      = MIM.GLBL_CMPY_CD(+) 
                    AND M.MDSE_ITEM_MNF_CD  = MIM.MDSE_ITEM_MNF_CD(+) 
                    AND M.EZCANCELFLAG      = MCT.EZCANCELFLAG(+) 
                    AND M.GLBL_CMPY_CD      = MCT.GLBL_CMPY_CD(+) 
                    AND M.MDSE_CRAT_TMPL_PK = MCT.MDSE_CRAT_TMPL_PK(+) 
                    AND M.EZCANCELFLAG      = SMG1.EZCANCELFLAG(+) 
                    AND M.GLBL_CMPY_CD      = SMG1.GLBL_CMPY_CD(+) 
                    AND M.SLS_MAT_GRP_CD_01 = SMG1.SLS_MAT_GRP_CD(+) 
                    AND M.EZCANCELFLAG      = SMG2.EZCANCELFLAG(+) 
                    AND M.GLBL_CMPY_CD      = SMG2.GLBL_CMPY_CD(+) 
                    AND M.SLS_MAT_GRP_CD_02 = SMG2.SLS_MAT_GRP_CD(+) 
                    AND M.EZCANCELFLAG      = SMG3.EZCANCELFLAG(+) 
                    AND M.GLBL_CMPY_CD      = SMG3.GLBL_CMPY_CD(+) 
                    AND M.SLS_MAT_GRP_CD_03 = SMG3.SLS_MAT_GRP_CD(+) 
                    AND M.EZCANCELFLAG      = DCG.EZCANCELFLAG(+) 
                    AND M.GLBL_CMPY_CD      = DCG.GLBL_CMPY_CD(+) 
                    AND M.DS_CMSN_GRP_CD    = DCG.DS_CMSN_GRP_CD(+) 
                    AND UPPER(OTM.ORD_TAKE_MDSE_CD) LIKE #mdseCd# 
                ORDER BY
                    1
            ) TMP 
        WHERE
            ROWNUM &lt;= #rowNum#

    </statement>
    <statement id="getSplyAgmtPln" parameterClass="Map" resultClass="String">
        SELECT
            A.SPLY_AGMT_PLN_NM     SPLY_AGMT_PLN_NM
        FROM
            SPLY_AGMT_PLN A
        WHERE
                A.GLBL_CMPY_CD        = #glblCmpyCd#
            AND A.SPLY_AGMT_PLN_PK    = #splyAgmtPlnPk#
            AND A.EFF_FROM_DT     &lt;= #slsDt#
            AND NVL(A.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#
            AND A.ACTV_FLG            = #flgY#
            AND A.EZCANCELFLAG        = '0'
    </statement>

    <!-- Add Start 2018/04/06 QC#22556 -->
    <statement id="getUOMPulldownList" parameterClass="Map" resultClass="Map">
        SELECT
            <!-- 2018/05/15 S21_NA#26015 Mod Start -->
            <!--   NVL(PU2.PKG_UOM_CD, PU1.PKG_UOM_CD)             AS PKG_UOM_CD
            , NVL(PU2.PKG_UOM_DESC_TXT, PU1.PKG_UOM_DESC_TXT) AS PKG_UOM_DESC_TXT  -->
              PU1.PKG_UOM_CD                                  AS PKG_UOM_CD
            , NVL(PU2.PKG_UOM_DESC_TXT, PU1.PKG_UOM_DESC_TXT) AS PKG_UOM_DESC_TXT
            <!-- 2018/05/15 S21_NA#26015 Mod Start -->
            , PU2.PKG_UOM_CD                                  AS BASE_PKG_UOM_CD
            , PU2.PKG_UOM_DESC_TXT                            AS BASE_PKG_UOM_DESC_TXT 
        FROM
              ORD_TAKE_MDSE  OTM
            , MDSE_STORE_PKG MSP
            , PKG_UOM        PU1
            , PKG_UOM        PU2 
        WHERE
                OTM.GLBL_CMPY_CD     = #glblCmpyCd# 
            AND OTM.EZCANCELFLAG     = '0' 
            AND OTM.ORD_TAKE_MDSE_CD = #mdseCd# 

            AND OTM.GLBL_CMPY_CD     = MSP.GLBL_CMPY_CD 
            AND OTM.EZCANCELFLAG     = MSP.EZCANCELFLAG 
            AND OTM.MDSE_CD          = MSP.MDSE_CD 

            AND MSP.PKG_UOM_CD       = PU1.PKG_UOM_CD 
            AND MSP.GLBL_CMPY_CD     = PU1.GLBL_CMPY_CD 
            AND MSP.EZCANCELFLAG     = PU1.EZCANCELFLAG 

            AND MSP.BASE_PKG_UOM_CD  = PU2.PKG_UOM_CD(+) 
            AND MSP.GLBL_CMPY_CD     = PU2.GLBL_CMPY_CD(+) 
            AND MSP.EZCANCELFLAG     = PU2.EZCANCELFLAG(+) 
        UNION ALL 
        SELECT
            <!-- 2018/05/15 S21_NA#26015 Mod Start -->
            <!-- NVL(PU2.PKG_UOM_CD, PU1.PKG_UOM_CD)             AS PKG_UOM_CD
            , NVL(PU2.PKG_UOM_DESC_TXT, PU1.PKG_UOM_DESC_TXT) AS PKG_UOM_DESC_TXT -->  
              PU1.PKG_UOM_CD                                  AS PKG_UOM_CD
            , NVL(PU2.PKG_UOM_DESC_TXT, PU1.PKG_UOM_DESC_TXT) AS PKG_UOM_DESC_TXT
            <!-- 2018/05/15 S21_NA#26015 Mod Start -->
            , PU2.PKG_UOM_CD                                  AS BASE_PKG_UOM_CD
            , PU2.PKG_UOM_DESC_TXT                            AS BASE_PKG_UOM_DESC_TXT 
        FROM
              MDSE_STORE_PKG MSP
            , PKG_UOM PU1
            , PKG_UOM PU2 
        WHERE
                MSP.GLBL_CMPY_CD    = #glblCmpyCd# 
            AND MSP.EZCANCELFLAG    = '0' 
            AND MSP.MDSE_CD         = #mdseCd# 

            AND MSP.PKG_UOM_CD      = PU1.PKG_UOM_CD 
            AND MSP.GLBL_CMPY_CD    = PU1.GLBL_CMPY_CD 
            AND MSP.EZCANCELFLAG    = PU1.EZCANCELFLAG 

            AND MSP.BASE_PKG_UOM_CD = PU2.PKG_UOM_CD(+) 
            AND MSP.GLBL_CMPY_CD    = PU2.GLBL_CMPY_CD(+) 
            AND MSP.EZCANCELFLAG    = PU2.EZCANCELFLAG(+)

    </statement>
    <!-- Add End 2018/04/06 QC#22556 -->

    <!-- Add Start 2018/05/09 QC#20269 -->
    <statement id="getPrcListHdrAsTemplate" parameterClass="Map" resultClass="Map">
        SELECT PC.PRC_CATG_NM
             , PLT.PRC_LIST_TP_DESC_TXT
          FROM PRC_CATG                 PC
             , PRC_LIST_TP              PLT
         WHERE PC.GLBL_CMPY_CD   = #glblCmpyCd#
           AND PC.EZCANCELFLAG   = '0'
           AND PC.PRC_CATG_CD    = #prcCatgCd#
           AND PC.GLBL_CMPY_CD   = PLT.GLBL_CMPY_CD(+)
           AND PC.EZCANCELFLAG   = PLT.EZCANCELFLAG(+)
           AND PC.PRC_LIST_TP_CD = PLT.PRC_LIST_TP_CD(+)
    </statement>

    <statement id="getPrcListValEquipAsTemplate" parameterClass="Map" resultClass="Map">
        SELECT
          *
        FROM
        (
           SELECT
                A.*
            FROM (
                SELECT PLE.PRC_LIST_EQUIP_CONFIG_NUM
                     , PLE.PRC_LIST_EQUIP_CONFIG_NM
                     , PQT.PRC_QLFY_TP_DESC_TXT
                     , PLE.PRC_QLFY_VAL_TXT
                     <!-- Mod Start 2018/05/28 QC#26286 -->
                     <!-- , PU.PKG_UOM_DESC_TXT -->
                     , (  SELECT
                              PU.PKG_UOM_DESC_TXT
                          FROM
                              PKG_UOM PU
                            , MDSE_STORE_PKG MSP
                            , MDSE M
                          WHERE
                                PLE.GLBL_CMPY_CD                        = M.GLBL_CMPY_CD
                            AND PLE.EZCANCELFLAG                        = M.EZCANCELFLAG
                            AND PLE.PRC_QLFY_VAL_TXT                    = M.MDSE_CD

                            AND PLE.GLBL_CMPY_CD                        = MSP.GLBL_CMPY_CD
                            AND PLE.EZCANCELFLAG                        = MSP.EZCANCELFLAG
                            AND PLE.PKG_UOM_CD                          = MSP.PKG_UOM_CD
                            AND M.MDSE_CD                               = MSP.MDSE_CD

                            AND MSP.GLBL_CMPY_CD                        = PU.GLBL_CMPY_CD
                            AND MSP.EZCANCELFLAG                        = PU.EZCANCELFLAG 
                            AND NVL(MSP.BASE_PKG_UOM_CD,MSP.PKG_UOM_CD) = PU.PKG_UOM_CD

                          UNION ALL

                          SELECT
                             PU.PKG_UOM_DESC_TXT
                          FROM
                                PKG_UOM PU
                              , MDSE_STORE_PKG MSP
                              , ORD_TAKE_MDSE OTM
                          WHERE 
                                PLE.GLBL_CMPY_CD                        = OTM.GLBL_CMPY_CD
                            AND PLE.EZCANCELFLAG                        = OTM.EZCANCELFLAG
                            AND PLE.PRC_QLFY_VAL_TXT                    = OTM.ORD_TAKE_MDSE_CD

                            AND PLE.GLBL_CMPY_CD                        = MSP.GLBL_CMPY_CD
                            AND PLE.EZCANCELFLAG                        = MSP.EZCANCELFLAG
                            AND PLE.PKG_UOM_CD                          = MSP.PKG_UOM_CD
                            AND OTM.MDSE_CD                             = MSP.MDSE_CD

                            AND MSP.GLBL_CMPY_CD                        = PU.GLBL_CMPY_CD
                            AND MSP.EZCANCELFLAG                        = PU.EZCANCELFLAG 
                            AND NVL(MSP.BASE_PKG_UOM_CD,MSP.PKG_UOM_CD) = PU.PKG_UOM_CD
                       ) AS PKG_UOM_DESC_TXT
                     <!-- Mod End 2018/05/28 QC#26286 -->
                     , PLE.PRC_LIST_EQUIP_PRC_AMT
                     , PLE.MIN_PRC_AMT
                     , PLE.MAX_PRC_AMT
                     , PLE.PRC_TERM_AOT
                     , PTU.PRC_TERM_UOM_DESC_TXT
                     , PLE.CUST_BID_QTY
                     , PLE.MLY_PMT_AMT
                     , PLE.MIN_LEASE_PMT_AMT
                     , PLE.MAX_LEASE_PMT_AMT
                     , PF.PRC_FMLA_NM
                     , PLE.OPEN_MKT_FLG
                     , PLE.QUOT_REV_AMT
                     , PLE.COMP_CD
                     , PLE.EFF_FROM_DT
                     , PLE.EFF_THRU_DT
                     , PLE.PKG_UOM_CD
                     , PLE.PRC_LIST_EQUIP_PK
                  FROM PRC_LIST_EQUIP PLE
                     , ALL_MDSE_V AMV
                     , COA_PROJ CPJ
                     , MDSE_ITEM_TP MIT
                     , COA_PROD CP
                     , PRC_FMLA PF
                     , AUTH_PSN AP1
                     , AUTH_PSN AP2
                     , COA_PROJ CPJ2
                     , PROD_CTRL PC
                     , MKT_MDL MM
                     , PRC_QLFY_TP PQT
                     , PKG_UOM PU
                     , PRC_TERM_UOM PTU
                 WHERE PLE.GLBL_CMPY_CD = #glblCmpyCd#
                   AND PLE.EZCANCELFLAG = '0'
                   AND PLE.PRC_CATG_CD  = #prcCatgCd#
                   AND PLE.GLBL_CMPY_CD = AMV.GLBL_CMPY_CD(+)
                   AND PLE.EZCANCELFLAG = AMV.EZCANCELFLAG(+)
                   AND PLE.PRC_QLFY_VAL_TXT = AMV.MDSE_CD(+)
                   AND AMV.GLBL_CMPY_CD = CPJ.GLBL_CMPY_CD(+)
                   AND AMV.EZCANCELFLAG = CPJ.EZCANCELFLAG(+)
                   AND AMV.COA_MDSE_TP_CD = CPJ.COA_PROJ_CD(+)
                   AND AMV.GLBL_CMPY_CD = MIT.GLBL_CMPY_CD(+)
                   AND AMV.EZCANCELFLAG = MIT.EZCANCELFLAG(+)
                   AND AMV.MDSE_ITEM_TP_CD = MIT.MDSE_ITEM_TP_CD(+)
                   AND AMV.GLBL_CMPY_CD   = CP.GLBL_CMPY_CD(+)
                   AND AMV.EZCANCELFLAG   = CP.EZCANCELFLAG(+)
                   AND AMV.COA_PROD_CD    = CP.COA_PROD_CD(+)
                   AND PLE.GLBL_CMPY_CD = PF.GLBL_CMPY_CD(+)
                   AND PLE.EZCANCELFLAG = PF.EZCANCELFLAG(+)
                   AND PLE.PRC_FMLA_PK  = PF.PRC_FMLA_PK(+)
                   AND PLE.GLBL_CMPY_CD = AP1.GLBL_CMPY_CD(+)
                   AND PLE.EZCANCELFLAG = AP1.EZCANCELFLAG(+)
                   AND PLE.EZINUSERID   = AP1.USR_NM(+)
                   AND PLE.GLBL_CMPY_CD = AP2.GLBL_CMPY_CD(+)
                   AND PLE.EZCANCELFLAG = AP2.EZCANCELFLAG(+)
                   AND PLE.EZUPUSERID   = AP2.USR_NM(+)
                   AND PLE.GLBL_CMPY_CD = CPJ2.GLBL_CMPY_CD(+)
                   AND PLE.EZCANCELFLAG = CPJ2.EZCANCELFLAG(+)
                   AND PLE.PRC_QLFY_VAL_TXT = CPJ2.COA_PROJ_CD(+)
                   AND PLE.GLBL_CMPY_CD = PC.GLBL_CMPY_CD(+)
                   AND PLE.EZCANCELFLAG = PC.EZCANCELFLAG(+)
                   AND PLE.PRC_QLFY_VAL_TXT = PC.PROD_CTRL_CD(+)
                   AND AMV.MKT_MDL_CD   = MM.MKT_MDL_CD(+)
                   AND PLE.GLBL_CMPY_CD = PQT.GLBL_CMPY_CD(+)
                   AND PLE.EZCANCELFLAG = PQT.EZCANCELFLAG(+)
                   AND PLE.PRC_QLFY_TP_CD  = PQT.PRC_QLFY_TP_CD(+)
                   AND PLE.GLBL_CMPY_CD = PU.GLBL_CMPY_CD(+)
                   AND PLE.EZCANCELFLAG = PU.EZCANCELFLAG(+)
                   AND PLE.PKG_UOM_CD   = PU.PKG_UOM_CD(+)
                   AND PLE.GLBL_CMPY_CD = PTU.GLBL_CMPY_CD(+)
                   AND PLE.EZCANCELFLAG = PTU.EZCANCELFLAG(+)
                   AND PLE.PRC_TERM_UOM_CD = PTU.PRC_TERM_UOM_CD(+)
                <isEqual property="prcDispRecTpCd" compareValue="01">
                   AND PLE.DEL_FLG = #flgN#
                   AND PLE.EFF_FROM_DT &lt;= #slsDt#
                   AND NVL(PLE.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#
                </isEqual>
                <isEqual property="prcDispRecTpCd" compareValue="02">
                   AND PLE.DEL_FLG = #flgN#
                   AND (PLE.EFF_FROM_DT &gt; #slsDt#
                       OR
                        NVL(PLE.EFF_THRU_DT, #highValDt#) &lt; #slsDt#
                       )
                </isEqual>
                <isEqual property="prcDispRecTpCd" compareValue="03">
                   AND PLE.DEL_FLG = #flgY#
                </isEqual>
                <isEqual property="prcDispRecTpCd" compareValue="04">
                   AND PLE.DEL_FLG = #flgN#
                   AND (
                        (PLE.EFF_FROM_DT &lt;= #slsDt# AND NVL(PLE.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#)
                        OR
                        (PLE.EFF_FROM_DT &gt; #slsDt# OR NVL(PLE.EFF_THRU_DT, #highValDt#) &lt; #slsDt#)
                       )
                </isEqual>
                <isNotNull property="prcQlfyTpCd_D1">
                   AND PLE.PRC_QLFY_TP_CD = #prcQlfyTpCd_D1#
                </isNotNull>
                <!-- 2019/02/26 QC#30515 Mod Start -->
                <!-- <isNotNull property="prcQlfyValTxt_D1"> -->
                <!--    AND UPPER(PLE.PRC_QLFY_VAL_TXT) LIKE #prcQlfyValTxt_D1# -->
                <!-- </isNotNull> -->
                <isNotNull property="xxPrcQlfyValSrchTxt_D1">
                <iterate property="xxPrcQlfyValSrchTxt_D1" var="xxPrcQlfyValSrchTxtD1[]" open="AND (" close=")" conjunction="OR">
                   UPPER(PLE.PRC_QLFY_VAL_TXT) LIKE #xxPrcQlfyValSrchTxtD1[]#
                </iterate>
                </isNotNull>
                <!-- 2019/02/26 QC#30515 Mod End -->
                <isNotNull property="prcListEquipConfigNum_D1">
                   AND PLE.PRC_LIST_EQUIP_CONFIG_NUM = #prcListEquipConfigNum_D1#
                </isNotNull>
                <isNotNull property="prcListEquipConfigNm_D1">
                   AND UPPER(PLE.PRC_LIST_EQUIP_CONFIG_NM) LIKE #prcListEquipConfigNm_D1#
                </isNotNull>
                <isNotNull property="coaProjNm_Z1">
                   AND UPPER(CPJ.COA_PROJ_NM) = #coaProjNm_Z1#
                </isNotNull>
                <isNotNull property="mdseItemTpNm_Z1">
                   AND UPPER(MIT.MDSE_ITEM_TP_NM) = #mdseItemTpNm_Z1#
                </isNotNull>
                <isNotNull property="coaProdNm_Z1">
                   AND UPPER(CP.COA_PROD_NM) = #coaProdNm_Z1#
                </isNotNull>
                <!-- 2019/02/26 QC#30515 Mod Start -->
                <!-- <isNotNull property="t_MdlNm_Z1"> -->
                <!--    AND UPPER(MM.MKT_MDL_NM) LIKE #t_MdlNm_Z1# -->
                <!-- </isNotNull> -->
                <isNotNull property="xxTMdlNmSrchTxt_Z1">
                <iterate property="xxTMdlNmSrchTxt_Z1" var="xxTMdlNmSrchTxtZ1[]" open="AND (" close=")" conjunction="OR">
                   UPPER(MM.MKT_MDL_NM) LIKE #xxTMdlNmSrchTxtZ1[]#
                </iterate>
                </isNotNull>
                <!-- 2019/02/26 QC#30515 Mod End -->
                <isNotNull property="zerothProdCtrlCd_Z1">
                   AND AMV.ZEROTH_PROD_CTRL_CD = #zerothProdCtrlCd_Z1#
                </isNotNull>
                <isNotNull property="firstProdCtrlCd_Z1">
                   AND AMV.FIRST_PROD_CTRL_CD = #firstProdCtrlCd_Z1#
                </isNotNull>
                <isNotNull property="scdProdCtrlCd_Z1">
                   AND AMV.SCD_PROD_CTRL_CD = #scdProdCtrlCd_Z1#
                </isNotNull>
                <isNotNull property="thirdProdCtrlCd_Z1">
                   AND AMV.THIRD_PROD_CTRL_CD = #thirdProdCtrlCd_Z1#
                </isNotNull>
                <isNotNull property="frthProdCtrlCd_Z1">
                   AND AMV.FRTH_PROD_CTRL_CD = #frthProdCtrlCd_Z1#
                </isNotNull>
                <isNotNull property="prcTermAot_Z1">
                   AND PLE.PRC_TERM_AOT = #prcTermAot_Z1#
                </isNotNull>
                <isNotNull property="prcTermUomCd_Z1">
                   AND PLE.PRC_TERM_UOM_CD = #prcTermUomCd_Z1#
                </isNotNull>
                <isNotNull property="custBidQty_Z1">
                   AND PLE.CUST_BID_QTY = #custBidQty_Z1#
                </isNotNull>
                <isNotNull property="prcFmlaNm_Z1">
                   AND UPPER(PF.PRC_FMLA_NM) LIKE #prcFmlaNm_Z1#
                </isNotNull>
                <isNotNull property="openMktFlg_Z1">
                   AND PLE.OPEN_MKT_FLG = #openMktFlg_Z1#
                </isNotNull>
                <isNotNull property="compCd_Z1">
                   AND UPPER(PLE.COMP_CD) = #compCd_Z1#
                </isNotNull>
                <isNotNull property="mdseDescShortTxt_Z1">
                   AND (
                         (PLE.PRC_QLFY_TP_CD = '01' AND UPPER(AMV.MDSE_DESC_SHORT_TXT) LIKE #mdseDescShortTxt_Z1#)
                      OR (PLE.PRC_QLFY_TP_CD = '02' AND UPPER(CPJ2.COA_PROJ_DESC_TXT) LIKE #mdseDescShortTxt_Z1#)
                      OR (PLE.PRC_QLFY_TP_CD = '03' AND UPPER(PC.PROD_CTRL_DESC_TXT) LIKE #mdseDescShortTxt_Z1#)
                      OR (PLE.PRC_QLFY_TP_CD = '04' AND UPPER(PC.PROD_CTRL_DESC_TXT) LIKE #mdseDescShortTxt_Z1#)
                      OR (PLE.PRC_QLFY_TP_CD = '05' AND UPPER(PC.PROD_CTRL_DESC_TXT) LIKE #mdseDescShortTxt_Z1#)
                      OR (PLE.PRC_QLFY_TP_CD = '06' AND UPPER(PC.PROD_CTRL_DESC_TXT) LIKE #mdseDescShortTxt_Z1#)
                      OR (PLE.PRC_QLFY_TP_CD = '07' AND UPPER(PC.PROD_CTRL_DESC_TXT) LIKE #mdseDescShortTxt_Z1#)
                   )
                </isNotNull>
                <!-- 2019/02/26 QC#30515 Add Start -->
                <isNotNull property="xxMnfItemCdSrchTxt_Z1">
                <iterate property="xxMnfItemCdSrchTxt_Z1" var="xxMnfItemCdSrchTxtZ1[]" open="AND PLE.PRC_QLFY_TP_CD = '01' AND (" close=")" conjunction="OR">
                    UPPER(AMV.MNF_ITEM_CD) LIKE #xxMnfItemCdSrchTxtZ1[]#
                </iterate>
                </isNotNull>
                <!-- 2019/02/26 QC#30515 Add End -->
                <isNotNull property="xxYesNoCd_Z1">
                   AND
                   <isEqual property="xxYesNoCd_Z1" compareValue="N">
                      NOT
                   </isEqual>
                   EXISTS (
                          SELECT 1
                          FROM
                              PRC_LIST_EQUIP_DTL PLED
                          WHERE
                              PLED.GLBL_CMPY_CD      = #glblCmpyCd#
                          AND PLED.PRC_LIST_EQUIP_PK = PLE.PRC_LIST_EQUIP_PK
                          AND PLED.EZCANCELFLAG      = '0'
                        )
                </isNotNull>
                <isNotNull property="effFromDt_Z1">
                   AND PLE.EFF_FROM_DT &gt;= #effFromDt_Z1#
                </isNotNull>
                <isNotNull property="effFromDt_Z2">
                   AND PLE.EFF_FROM_DT &lt;= #effFromDt_Z2#
                </isNotNull>
                <isNotNull property="effThruDt_Z1">
                   AND NVL(PLE.EFF_THRU_DT, #highValDt#) &gt;= #effThruDt_Z1#
                </isNotNull>
                <isNotNull property="effThruDt_Z2">
                   AND NVL(PLE.EFF_THRU_DT, #highValDt#) &lt;= #effThruDt_Z2#
                </isNotNull>
                <isNotNull property="cratDt_Z1">
                   AND PLE.EZINTIME &gt;= #cratDt_Z1#
                </isNotNull>
                <isNotNull property="cratDt_Z2">
                   AND PLE.EZINTIME &lt;= #cratDt_Z2# || #highValTm#
                </isNotNull>
                <isNotNull property="lastUpdDt_Z1">
                   AND PLE.EZUPTIME &gt;= #lastUpdDt_Z1#
                </isNotNull>
                <isNotNull property="lastUpdDt_Z2">
                   AND PLE.EZUPTIME &lt;= #lastUpdDt_Z2# || #highValTm#
                </isNotNull>
                <isNotNull property="xxFullNm_Z1">
                   AND (
                           PLE.EZINUSERID = #xxFullNm_Z1#
                      OR (     AP1.FIRST_NM IS NOT NULL
                           AND UPPER(AP1.FIRST_NM || ' ' || AP1.LAST_NM) LIKE #xxFullNm_Z1#
                         )
                     )
                </isNotNull>
                <isNotNull property="xxFullNm_Z2">
                   AND (
                           PLE.EZUPUSERID = #xxFullNm_Z2#
                      OR (     AP2.FIRST_NM IS NOT NULL
                           AND UPPER(AP2.FIRST_NM || ' ' || AP2.LAST_NM) LIKE #xxFullNm_Z2#
                         )
                     )
                </isNotNull>
                <isNotNull property="prcListEquipPk">
                   AND PLE.PRC_LIST_EQUIP_PK = #prcListEquipPk#
                </isNotNull>
                ) A
             <isNotNull property="pkgUomCd_D1">
             WHERE
                A.PKG_UOM_CD = #pkgUomCd_D1#
             </isNotNull>
             ORDER BY A.PRC_LIST_EQUIP_PK
         )
         <isNotNull property="rowNum">
         WHERE ROWNUM &lt;= #rowNum#
         </isNotNull>
    </statement>

    <statement id="getPrcListValSvcAsTemplate" parameterClass="Map" resultClass="Map">
    SELECT
        A.*
    FROM (
        SELECT PRT.PRC_RATE_TP_DESC_TXT
             , PLS.MDL_NM
             , PMP.PRC_MTR_PKG_NM
             , PSPT.PRC_SVC_PLN_TP_DESC_TXT
             , PSCT.PRC_SVC_CONTR_TP_DESC_TXT
             , ML.MTR_LB_NM
             , PLS.MIN_COPY_VOL_CNT
             , PLS.MAX_COPY_VOL_CNT
             , PLB.PRC_LIST_BAND_DESC_TXT
             , PLS.BASE_AMT
             , PLS.MIN_BASE_AMT
             , PLS.MAX_BASE_AMT
             , PLS.CPC_AMT_RATE
             , PLS.MIN_CPC_AMT_RATE
             , PLS.MAX_CPC_AMT_RATE
             , PLS.TERM_FROM_MTH_AOT
             , PLS.TERM_THRU_MTH_AOT
             , PSZ.PRC_SVC_ZONE_DESC_TXT
             , PLS.MDSE_CD
             , PLS.EFF_FROM_DT
             , PLS.EFF_THRU_DT
             , PLS.QUOT_REV_AMT
             , PLS.COMP_CD
             , PLS.PRC_LIST_MDSE_CD
          FROM PRC_LIST_SVC PLS
             , ALL_MDSE_V AMV
             , ALL_MDSE_V AMV2
             , PRC_MTR_PKG PMP
             , PRC_MTR_PKG_BLLG_MTR PMPBM
             , AUTH_PSN AP1
             , AUTH_PSN AP2
             , MTR_LB ML
             , PRC_RATE_TP PRT
             , PRC_SVC_PLN_TP PSPT
             , PRC_SVC_CONTR_TP PSCT
             , PRC_LIST_BAND PLB
             , PRC_SVC_ZONE PSZ
         WHERE PLS.GLBL_CMPY_CD = #glblCmpyCd#
           AND PLS.EZCANCELFLAG = '0'
           AND PLS.PRC_CATG_CD  = #prcCatgCd#
           AND PLS.GLBL_CMPY_CD = AMV.GLBL_CMPY_CD(+)
           AND PLS.EZCANCELFLAG = AMV.EZCANCELFLAG(+)
           AND PLS.MDSE_CD      = AMV.MDSE_CD(+)
           AND PLS.GLBL_CMPY_CD     = AMV2.GLBL_CMPY_CD(+)
           AND PLS.EZCANCELFLAG     = AMV2.EZCANCELFLAG(+)
           AND PLS.PRC_LIST_MDSE_CD = AMV2.MDSE_CD(+)
           AND PLS.GLBL_CMPY_CD = PMP.GLBL_CMPY_CD(+)
           AND PLS.EZCANCELFLAG = PMP.EZCANCELFLAG(+)
           AND PLS.PRC_MTR_PKG_PK = PMP.PRC_MTR_PKG_PK(+)
           AND PLS.GLBL_CMPY_CD = PMPBM.GLBL_CMPY_CD(+)
           AND PLS.EZCANCELFLAG = PMPBM.EZCANCELFLAG(+)
           AND PLS.PRC_MTR_PKG_BLLG_MTR_PK = PMPBM.PRC_MTR_PKG_BLLG_MTR_PK(+)
           AND PLS.GLBL_CMPY_CD = AP1.GLBL_CMPY_CD(+)
           AND PLS.EZCANCELFLAG = AP1.EZCANCELFLAG(+)
           AND PLS.EZINUSERID   = AP1.USR_NM(+)
           AND PLS.GLBL_CMPY_CD = AP2.GLBL_CMPY_CD(+)
           AND PLS.EZCANCELFLAG = AP2.EZCANCELFLAG(+)
           AND PLS.EZUPUSERID   = AP2.USR_NM(+)
           AND PLS.GLBL_CMPY_CD = ML.GLBL_CMPY_CD (+)
           AND PLS.EZCANCELFLAG = ML.EZCANCELFLAG (+)
           AND PLS.BLLG_MTR_LB_CD = ML.MTR_LB_CD (+)
           AND PLS.GLBL_CMPY_CD = PRT.GLBL_CMPY_CD(+)
           AND PLS.EZCANCELFLAG = PRT.EZCANCELFLAG(+)
           AND PLS.PRC_RATE_TP_CD = PRT.PRC_RATE_TP_CD(+)
           AND PLS.GLBL_CMPY_CD = PSPT.GLBL_CMPY_CD(+)
           AND PLS.EZCANCELFLAG = PSPT.EZCANCELFLAG(+)
           AND PLS.PRC_SVC_PLN_TP_CD = PSPT.PRC_SVC_PLN_TP_CD(+)
           AND PLS.GLBL_CMPY_CD = PSCT.GLBL_CMPY_CD(+)
           AND PLS.EZCANCELFLAG = PSCT.EZCANCELFLAG(+)
           AND PLS.PRC_SVC_CONTR_TP_CD = PSCT.PRC_SVC_CONTR_TP_CD(+)
           AND PLS.GLBL_CMPY_CD = PLB.GLBL_CMPY_CD (+)
           AND PLS.EZCANCELFLAG = PLB.EZCANCELFLAG (+)
           AND PLS.PRC_LIST_BAND_CD = PLB.PRC_LIST_BAND_CD (+)
           AND PLS.GLBL_CMPY_CD = PSZ.GLBL_CMPY_CD(+)
           AND PLS.EZCANCELFLAG = PSZ.EZCANCELFLAG(+)
           AND PLS.PRC_SVC_ZONE_CD = PSZ.PRC_SVC_ZONE_CD(+)
        <isEqual property="prcDispRecTpCd" compareValue="01">
           AND PLS.DEL_FLG = #flgN#
           AND PLS.EFF_FROM_DT &lt;= #slsDt#
           AND NVL(PLS.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="02">
           AND PLS.DEL_FLG = #flgN#
           AND (PLS.EFF_FROM_DT &gt; #slsDt#
               OR
                NVL(PLS.EFF_THRU_DT, #highValDt#) &lt; #slsDt#
               )
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="03">
           AND PLS.DEL_FLG = #flgY#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="04">
           AND PLS.DEL_FLG = #flgN#
           AND (
                (PLS.EFF_FROM_DT &lt;= #slsDt# AND NVL(PLS.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#)
                OR
                (PLS.EFF_FROM_DT &gt; #slsDt# OR NVL(PLS.EFF_THRU_DT, #highValDt#) &lt; #slsDt#)
               )
        </isEqual>
        <isNotNull property="mdlNm_D1">
           AND UPPER(PLS.MDL_NM) LIKE #mdlNm_D1#
        </isNotNull>
        <isNotNull property="prcMtrPkgNm_D1">
           AND UPPER(PMP.PRC_MTR_PKG_NM) LIKE #prcMtrPkgNm_D1#
        </isNotNull>
        <isNotNull property="prcRateTpCd_D1">
           AND PLS.PRC_RATE_TP_CD = #prcRateTpCd_D1#
        </isNotNull>
        <isNotNull property="prcSvcPlnTpCd_D1">
           AND PLS.PRC_SVC_PLN_TP_CD = #prcSvcPlnTpCd_D1#
        </isNotNull>
        <isNotNull property="prcSvcContrTpCd_D1">
           AND PLS.PRC_SVC_CONTR_TP_CD = #prcSvcContrTpCd_D1#
        </isNotNull>
        <isNotNull property="mtrLbNm_D1">
           AND UPPER(ML.MTR_LB_NM) LIKE #mtrLbNm_D1#
        </isNotNull>
        <isNotNull property="prcListBandDescTxt_D1">
           AND UPPER(PLB.PRC_LIST_BAND_DESC_TXT) LIKE #prcListBandDescTxt_D1#
        </isNotNull>
        <isNotNull property="prcListMdseCd_Z1">
           AND PLS.PRC_LIST_MDSE_CD LIKE #prcListMdseCd_Z1#
        </isNotNull>
        <isNotNull property="mdseDescShortTxt_Z1">
           AND UPPER(AMV2.MDSE_DESC_SHORT_TXT) LIKE #mdseDescShortTxt_Z1#
        </isNotNull>
        <isNotNull property="termFromMthAot_Z1">
           AND PLS.TERM_FROM_MTH_AOT = #termFromMthAot_Z1#
        </isNotNull>
        <isNotNull property="termThruMthAot_Z1">
           AND PLS.TERM_THRU_MTH_AOT = #termThruMthAot_Z1#
        </isNotNull>
        <isNotNull property="prcSvcZoneCd_Z1">
           AND PLS.PRC_SVC_ZONE_CD = #prcSvcZoneCd_Z1#
        </isNotNull>
        <isNotNull property="mdseCd_Z1">
           AND PLS.MDSE_CD LIKE #mdseCd_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z1">
           AND PLS.EFF_FROM_DT &gt;= #effFromDt_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z2">
           AND PLS.EFF_FROM_DT &lt;= #effFromDt_Z2#
        </isNotNull>
        <isNotNull property="effThruDt_Z1">
           AND NVL(PLS.EFF_THRU_DT, #highValDt#) &gt;= #effThruDt_Z1#
        </isNotNull>
        <isNotNull property="effThruDt_Z2">
           AND NVL(PLS.EFF_THRU_DT, #highValDt#) &lt;= #effThruDt_Z2#
        </isNotNull>
        <isNotNull property="cratDt_Z1">
           AND PLS.EZINTIME &gt;= #cratDt_Z1#
        </isNotNull>
        <isNotNull property="cratDt_Z2">
           AND PLS.EZINTIME &lt;= #cratDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z1">
           AND PLS.EZUPTIME &gt;= #lastUpdDt_Z1#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z2">
           AND PLS.EZUPTIME &lt;= #lastUpdDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="xxFullNm_Z1">
           AND (
                   PLS.EZINUSERID = #xxFullNm_Z1#
              OR (     AP1.FIRST_NM IS NOT NULL
                   AND UPPER(AP1.FIRST_NM || ' ' || AP1.LAST_NM) LIKE #xxFullNm_Z1#
                 )
             )
        </isNotNull>
        <isNotNull property="xxFullNm_Z2">
           AND (
                   PLS.EZUPUSERID = #xxFullNm_Z2#
              OR (     AP2.FIRST_NM IS NOT NULL
                   AND UPPER(AP2.FIRST_NM || ' ' || AP2.LAST_NM) LIKE #xxFullNm_Z2#
                 )
             )
        </isNotNull>
        <isNotNull property="prcListSvcPk">
           AND PLS.PRC_LIST_SVC_PK = #prcListSvcPk#
        </isNotNull>
      ORDER BY PLS.PRC_RATE_TP_CD
             , PLS.MDL_NM
             , PMP.PRC_MTR_PKG_NM
             , PLS.PRC_SVC_PLN_TP_CD
             , PLS.PRC_SVC_CONTR_TP_CD
             , PLS.BLLG_MTR_LB_CD
    ) A
    <isNotNull property="rowNum">
    WHERE ROWNUM &lt;= #rowNum#
    </isNotNull>
    </statement>

    <statement id="getPrcListValSvcTierAsTemplate" parameterClass="Map" resultClass="Map">
    SELECT
        A.*
    FROM (
        SELECT PLST.MDL_NM
             , PSTT.PRC_SVC_TIER_TP_DESC_TXT
             , PMP.PRC_MTR_PKG_NM
             , PSPT.PRC_SVC_PLN_TP_DESC_TXT
             , PSCT.PRC_SVC_CONTR_TP_DESC_TXT
             , ML.MTR_LB_NM
             , PLST.AVG_COPY_VOL_CNT
             , PLST.MIN_COPY_VOL_CNT
             , PLST.MAX_COPY_VOL_CNT
             , PLB.PRC_LIST_BAND_DESC_TXT
             , PLST.BASE_AMT
             , PLST.MIN_BASE_AMT
             , PLST.MAX_BASE_AMT
             , PLST.CPC_AMT_RATE
             , PLST.MIN_CPC_AMT_RATE
             , PLST.MAX_CPC_AMT_RATE
             , PLST.TERM_FROM_MTH_AOT
             , PLST.TERM_THRU_MTH_AOT
             , PLST.MDSE_CD
             , PLST.EFF_FROM_DT
             , PLST.EFF_THRU_DT
          FROM PRC_LIST_SVC_TIER PLST
             , ALL_MDSE_V AMV
             , PRC_MTR_PKG PMP
             , PRC_MTR_PKG_BLLG_MTR PMPBM
             , AUTH_PSN AP1
             , AUTH_PSN AP2
             , MTR_LB ML
             , PRC_SVC_TIER_TP PSTT
             , PRC_SVC_PLN_TP PSPT
             , PRC_SVC_CONTR_TP PSCT
             , PRC_LIST_BAND PLB
         WHERE PLST.GLBL_CMPY_CD = #glblCmpyCd#
           AND PLST.EZCANCELFLAG = '0'
           AND PLST.PRC_CATG_CD  = #prcCatgCd#
           AND PLST.GLBL_CMPY_CD = AMV.GLBL_CMPY_CD(+)
           AND PLST.EZCANCELFLAG = AMV.EZCANCELFLAG(+)
           AND PLST.MDSE_CD      = AMV.MDSE_CD(+)
           AND PLST.GLBL_CMPY_CD = PMP.GLBL_CMPY_CD(+)
           AND PLST.EZCANCELFLAG = PMP.EZCANCELFLAG(+)
           AND PLST.PRC_MTR_PKG_PK = PMP.PRC_MTR_PKG_PK(+)
           AND PLST.GLBL_CMPY_CD = PMPBM.GLBL_CMPY_CD(+)
           AND PLST.EZCANCELFLAG = PMPBM.EZCANCELFLAG(+)
           AND PLST.PRC_MTR_PKG_BLLG_MTR_PK = PMPBM.PRC_MTR_PKG_BLLG_MTR_PK(+)
           AND PLST.GLBL_CMPY_CD = AP1.GLBL_CMPY_CD(+)
           AND PLST.EZCANCELFLAG = AP1.EZCANCELFLAG(+)
           AND PLST.EZINUSERID   = AP1.USR_NM(+)
           AND PLST.GLBL_CMPY_CD = AP2.GLBL_CMPY_CD(+)
           AND PLST.EZCANCELFLAG = AP2.EZCANCELFLAG(+)
           AND PLST.EZUPUSERID   = AP2.USR_NM(+)
           AND PLST.GLBL_CMPY_CD = ML.GLBL_CMPY_CD (+)
           AND PLST.EZCANCELFLAG = ML.EZCANCELFLAG (+)
           AND PLST.BLLG_MTR_LB_CD = ML.MTR_LB_CD (+)
           AND PLST.GLBL_CMPY_CD = PSTT.GLBL_CMPY_CD(+)
           AND PLST.EZCANCELFLAG = PSTT.EZCANCELFLAG(+)
           AND PLST.PRC_SVC_TIER_TP_CD = PSTT.PRC_SVC_TIER_TP_CD(+)
           AND PLST.GLBL_CMPY_CD = PSPT.GLBL_CMPY_CD(+)
           AND PLST.EZCANCELFLAG = PSPT.EZCANCELFLAG(+)
           AND PLST.PRC_SVC_PLN_TP_CD = PSPT.PRC_SVC_PLN_TP_CD(+)
           AND PLST.GLBL_CMPY_CD = PSCT.GLBL_CMPY_CD(+)
           AND PLST.EZCANCELFLAG = PSCT.EZCANCELFLAG(+)
           AND PLST.PRC_SVC_CONTR_TP_CD = PSCT.PRC_SVC_CONTR_TP_CD(+)
           AND PLST.GLBL_CMPY_CD = PLB.GLBL_CMPY_CD(+)
           AND PLST.EZCANCELFLAG = PLB.EZCANCELFLAG(+)
           AND PLST.PRC_LIST_BAND_CD = PLB.PRC_LIST_BAND_CD(+)
        <isEqual property="prcDispRecTpCd" compareValue="01">
           AND PLST.DEL_FLG = #flgN#
           AND PLST.EFF_FROM_DT &lt;= #slsDt#
           AND NVL(PLST.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="02">
           AND PLST.DEL_FLG = #flgN#
           AND (PLST.EFF_FROM_DT &gt; #slsDt#
               OR
                NVL(PLST.EFF_THRU_DT, #highValDt#) &lt; #slsDt#
               )
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="03">
           AND PLST.DEL_FLG = #flgY#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="04">
           AND PLST.DEL_FLG = #flgN#
           AND (
                (PLST.EFF_FROM_DT &lt;= #slsDt# AND NVL(PLST.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#)
                OR
                (PLST.EFF_FROM_DT &gt; #slsDt# OR NVL(PLST.EFF_THRU_DT, #highValDt#) &lt; #slsDt#)
               )
        </isEqual>
        <isNotNull property="mdlNm_D2">
           AND UPPER(PLST.MDL_NM) LIKE #mdlNm_D2#
        </isNotNull>
        <isNotNull property="prcMtrPkgNm_D2">
           AND UPPER(PMP.PRC_MTR_PKG_NM) LIKE #prcMtrPkgNm_D2#
        </isNotNull>
        <isNotNull property="prcSvcTierTpCd_D2">
           AND PLST.PRC_SVC_TIER_TP_CD = #prcSvcTierTpCd_D2#
        </isNotNull>
        <isNotNull property="prcSvcPlnTpCd_D2">
           AND PLST.PRC_SVC_PLN_TP_CD = #prcSvcPlnTpCd_D2#
        </isNotNull>
        <isNotNull property="prcSvcContrTpCd_D2">
           AND PLST.PRC_SVC_CONTR_TP_CD = #prcSvcContrTpCd_D2#
        </isNotNull>
        <isNotNull property="mtrLbNm_D2">
           AND UPPER(ML.MTR_LB_NM) LIKE #mtrLbNm_D2#
        </isNotNull>
        <isNotNull property="prcListBandDescTxt_D2">
           AND UPPER(PLB.PRC_LIST_BAND_DESC_TXT) LIKE #prcListBandDescTxt_D2#
        </isNotNull>
        <isNotNull property="termFromMthAot_Z1">
           AND PLST.TERM_FROM_MTH_AOT = #termFromMthAot_Z1#
        </isNotNull>
        <isNotNull property="termThruMthAot_Z1">
           AND PLST.TERM_THRU_MTH_AOT = #termThruMthAot_Z1#
        </isNotNull>
        <isNotNull property="mdseCd_Z1">
           AND PLST.MDSE_CD LIKE #mdseCd_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z1">
           AND PLST.EFF_FROM_DT &gt;= #effFromDt_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z2">
           AND PLST.EFF_FROM_DT &lt;= #effFromDt_Z2#
        </isNotNull>
        <isNotNull property="effThruDt_Z1">
           AND NVL(PLST.EFF_THRU_DT, #highValDt#) &gt;= #effThruDt_Z1#
        </isNotNull>
        <isNotNull property="effThruDt_Z2">
           AND NVL(PLST.EFF_THRU_DT, #highValDt#) &lt;= #effThruDt_Z2#
        </isNotNull>
        <isNotNull property="cratDt_Z1">
           AND PLST.EZINTIME &gt;= #cratDt_Z1#
        </isNotNull>
        <isNotNull property="cratDt_Z2">
           AND PLST.EZINTIME &lt;= #cratDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z1">
           AND PLST.EZUPTIME &gt;= #lastUpdDt_Z1#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z2">
           AND PLST.EZUPTIME &lt;= #lastUpdDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="xxFullNm_Z1">
           AND (
                   PLST.EZINUSERID = #xxFullNm_Z1#
              OR (     AP1.FIRST_NM IS NOT NULL
                   AND UPPER(AP1.FIRST_NM || ' ' || AP1.LAST_NM) LIKE #xxFullNm_Z1#
                 )
             )
        </isNotNull>
        <isNotNull property="xxFullNm_Z2">
           AND (
                   PLST.EZUPUSERID = #xxFullNm_Z2#
              OR (     AP2.FIRST_NM IS NOT NULL
                   AND UPPER(AP2.FIRST_NM || ' ' || AP2.LAST_NM) LIKE #xxFullNm_Z2#
                 )
             )
        </isNotNull>
        <isNotNull property="prcListSvcTierPk">
           AND PLST.PRC_LIST_SVC_TIER_PK = #prcListSvcTierPk#
        </isNotNull>
      ORDER BY PLST.PRC_SVC_TIER_TP_CD
             , PLST.MDL_NM
             , PMP.PRC_MTR_PKG_NM
             , PLST.PRC_SVC_PLN_TP_CD
             , PLST.PRC_SVC_CONTR_TP_CD
             , PLST.BLLG_MTR_LB_CD
    ) A
    <isNotNull property="rowNum">
    WHERE ROWNUM &lt;= #rowNum#
    </isNotNull>
    </statement>

    <statement id="getPrcListValSvcSpecChrgAsTemplate" parameterClass="Map" resultClass="Map">
    SELECT
        A.*
    FROM (
        SELECT PLAC.MDSE_CD
             , PACT.PRC_ADDL_CHRG_TP_DESC_TXT
             , MMS.MKT_MDL_SEG_DESC_TXT
             , PLAC.MDL_NM
             , PLAC.ADDL_CHRG_PRC_AMT
             , PLAC.EFF_FROM_DT
             , PLAC.EFF_THRU_DT
          FROM PRC_LIST_ADDL_CHRG PLAC
             , ALL_MDSE_V AMV
             , AUTH_PSN AP1
             , AUTH_PSN AP2
             , PRC_ADDL_CHRG_TP PACT
             , MKT_MDL_SEG MMS
         WHERE PLAC.GLBL_CMPY_CD = #glblCmpyCd#
           AND PLAC.EZCANCELFLAG = '0'
           AND PLAC.PRC_CATG_CD  = #prcCatgCd#
           AND PLAC.GLBL_CMPY_CD = AMV.GLBL_CMPY_CD(+)
           AND PLAC.EZCANCELFLAG = AMV.EZCANCELFLAG(+)
           AND PLAC.MDSE_CD      = AMV.MDSE_CD(+)
           AND PLAC.GLBL_CMPY_CD = AP1.GLBL_CMPY_CD(+)
           AND PLAC.EZCANCELFLAG = AP1.EZCANCELFLAG(+)
           AND PLAC.EZINUSERID   = AP1.USR_NM(+)
           AND PLAC.GLBL_CMPY_CD = AP2.GLBL_CMPY_CD(+)
           AND PLAC.EZCANCELFLAG = AP2.EZCANCELFLAG(+)
           AND PLAC.EZUPUSERID   = AP2.USR_NM(+)
           AND PLAC.GLBL_CMPY_CD = PACT.GLBL_CMPY_CD(+)
           AND PLAC.EZCANCELFLAG = PACT.EZCANCELFLAG(+)
           AND PLAC.PRC_ADDL_CHRG_TP_CD = PACT.PRC_ADDL_CHRG_TP_CD(+)
           AND PLAC.GLBL_CMPY_CD = MMS.GLBL_CMPY_CD(+)
           AND PLAC.EZCANCELFLAG = MMS.EZCANCELFLAG(+)
           AND PLAC.MKT_MDL_SEG_CD = MMS.MKT_MDL_SEG_CD(+)
        <isEqual property="prcDispRecTpCd" compareValue="01">
           AND PLAC.DEL_FLG = #flgN#
           AND PLAC.EFF_FROM_DT &lt;= #slsDt#
           AND NVL(PLAC.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="02">
           AND PLAC.DEL_FLG = #flgN#
           AND (PLAC.EFF_FROM_DT &gt; #slsDt#
               OR
                NVL(PLAC.EFF_THRU_DT, #highValDt#) &lt; #slsDt#
               )
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="03">
           AND PLAC.DEL_FLG = #flgY#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="04">
           AND PLAC.DEL_FLG = #flgN#
           AND (
                (PLAC.EFF_FROM_DT &lt;= #slsDt# AND NVL(PLAC.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#)
                OR
                (PLAC.EFF_FROM_DT &gt; #slsDt# OR NVL(PLAC.EFF_THRU_DT, #highValDt#) &lt; #slsDt#)
               )
        </isEqual>
        <isNotNull property="mdseCd_DH">
           AND PLAC.MDSE_CD LIKE #mdseCd_DH#
        </isNotNull>
        <isNotNull property="prcAddlChrgTpCd_DH">
           AND PLAC.PRC_ADDL_CHRG_TP_CD = #prcAddlChrgTpCd_DH#
        </isNotNull>
        <isNotNull property="mktMdlSegCd_DH">
           AND PLAC.MKT_MDL_SEG_CD = #mktMdlSegCd_DH#
        </isNotNull>
        <isNotNull property="mdlNm_DH">
           AND UPPER(PLAC.MDL_NM) LIKE #mdlNm_DH#
        </isNotNull>
        <isNotNull property="mdseDescShortTxt_Z2">
           AND UPPER(AMV.MDSE_DESC_SHORT_TXT) LIKE #mdseDescShortTxt_Z2#
        </isNotNull>
        <isNotNull property="effFromDt_Z1">
           AND PLAC.EFF_FROM_DT &gt;= #effFromDt_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z2">
           AND PLAC.EFF_FROM_DT &lt;= #effFromDt_Z2#
        </isNotNull>
        <isNotNull property="effThruDt_Z1">
           AND NVL(PLAC.EFF_THRU_DT, #highValDt#) &gt;= #effThruDt_Z1#
        </isNotNull>
        <isNotNull property="effThruDt_Z2">
           AND NVL(PLAC.EFF_THRU_DT, #highValDt#) &lt;= #effThruDt_Z2#
        </isNotNull>
        <isNotNull property="cratDt_Z1">
           AND PLAC.EZINTIME &gt;= #cratDt_Z1#
        </isNotNull>
        <isNotNull property="cratDt_Z2">
           AND PLAC.EZINTIME &lt;= #cratDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z1">
           AND PLAC.EZUPTIME &gt;= #lastUpdDt_Z1#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z2">
           AND PLAC.EZUPTIME &lt;= #lastUpdDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="xxFullNm_Z1">
           AND (
                   PLAC.EZINUSERID = #xxFullNm_Z1#
              OR (     AP1.FIRST_NM IS NOT NULL
                   AND UPPER(AP1.FIRST_NM || ' ' || AP1.LAST_NM) LIKE #xxFullNm_Z1#
                 )
             )
        </isNotNull>
        <isNotNull property="xxFullNm_Z2">
           AND (
                   PLAC.EZUPUSERID = #xxFullNm_Z2#
              OR (     AP2.FIRST_NM IS NOT NULL
                   AND UPPER(AP2.FIRST_NM || ' ' || AP2.LAST_NM) LIKE #xxFullNm_Z2#
                 )
             )
        </isNotNull>
        <isNotNull property="prcListAddlChrgPk">
           AND PLAC.PRC_LIST_ADDL_CHRG_PK = #prcListAddlChrgPk#
        </isNotNull>
      ORDER BY PLAC.PRC_LIST_ADDL_CHRG_PK
    ) A
    <isNotNull property="rowNum">
    WHERE ROWNUM &lt;= #rowNum#
    </isNotNull>
    </statement>

    <statement id="getPrcListValSplyPgmAsTemplate" parameterClass="Map" resultClass="Map">
    SELECT
        A.*
    FROM (
        SELECT PLSP.MDL_NM
             , PMP.PRC_MTR_PKG_NM
             , PSPT.PRC_SVC_PLN_TP_DESC_TXT
             , PSCT.PRC_SVC_CONTR_TP_DESC_TXT
             , ML.MTR_LB_NM
             , PLSP.MIN_COPY_VOL_CNT
             , PLSP.MAX_COPY_VOL_CNT
             , PLB.PRC_LIST_BAND_DESC_TXT
             , PLSP.TOT_BASE_AMT
             , PLSP.SPLY_BASE_AMT
             , PLSP.CPC_AMT_RATE
             , PLSP.MIN_CPC_AMT_RATE
             , PLSP.MAX_CPC_AMT_RATE
             , PLSP.TERM_FROM_MTH_AOT
             , PLSP.TERM_THRU_MTH_AOT
             , PLSP.MDSE_CD
             , PSZ.PRC_SVC_ZONE_DESC_TXT
             , SAP.SPLY_AGMT_PLN_NM
             , PLSP.EFF_FROM_DT
             , PLSP.EFF_THRU_DT
          FROM PRC_LIST_SPLY_PGM PLSP
             , ALL_MDSE_V AMV
             , PRC_MTR_PKG PMP
             , PRC_MTR_PKG_BLLG_MTR PMPBM
             , SPLY_AGMT_PLN SAP
             , AUTH_PSN AP1
             , AUTH_PSN AP2
             , MTR_LB ML
             , PRC_SVC_PLN_TP PSPT
             , PRC_SVC_CONTR_TP PSCT
             , PRC_LIST_BAND PLB
             , PRC_SVC_ZONE PSZ
         WHERE PLSP.GLBL_CMPY_CD = #glblCmpyCd#
           AND PLSP.EZCANCELFLAG = '0'
           AND PLSP.PRC_CATG_CD  = #prcCatgCd#
           AND PLSP.GLBL_CMPY_CD = AMV.GLBL_CMPY_CD(+)
           AND PLSP.EZCANCELFLAG = AMV.EZCANCELFLAG(+)
           AND PLSP.MDSE_CD      = AMV.MDSE_CD(+)
           AND PLSP.GLBL_CMPY_CD = PMP.GLBL_CMPY_CD(+)
           AND PLSP.EZCANCELFLAG = PMP.EZCANCELFLAG(+)
           AND PLSP.PRC_MTR_PKG_PK = PMP.PRC_MTR_PKG_PK(+)
           AND PLSP.GLBL_CMPY_CD = PMPBM.GLBL_CMPY_CD(+)
           AND PLSP.EZCANCELFLAG = PMPBM.EZCANCELFLAG(+)
           AND PLSP.PRC_MTR_PKG_BLLG_MTR_PK = PMPBM.PRC_MTR_PKG_BLLG_MTR_PK(+)
           AND PLSP.GLBL_CMPY_CD = SAP.GLBL_CMPY_CD(+)
           AND PLSP.EZCANCELFLAG = SAP.EZCANCELFLAG(+)
           AND PLSP.SPLY_AGMT_PLN_PK = SAP.SPLY_AGMT_PLN_PK(+)
           AND PLSP.GLBL_CMPY_CD = AP1.GLBL_CMPY_CD(+)
           AND PLSP.EZCANCELFLAG = AP1.EZCANCELFLAG(+)
           AND PLSP.EZINUSERID   = AP1.USR_NM(+)
           AND PLSP.GLBL_CMPY_CD = AP2.GLBL_CMPY_CD(+)
           AND PLSP.EZCANCELFLAG = AP2.EZCANCELFLAG(+)
           AND PLSP.EZUPUSERID   = AP2.USR_NM(+)
           AND PLSP.GLBL_CMPY_CD = ML.GLBL_CMPY_CD (+)
           AND PLSP.EZCANCELFLAG = ML.EZCANCELFLAG (+)
           AND PLSP.BLLG_MTR_LB_CD = ML.MTR_LB_CD (+)
           AND PLSP.GLBL_CMPY_CD = PSPT.GLBL_CMPY_CD(+)
           AND PLSP.EZCANCELFLAG = PSPT.EZCANCELFLAG(+)
           AND PLSP.PRC_SVC_PLN_TP_CD = PSPT.PRC_SVC_PLN_TP_CD(+)
           AND PLSP.GLBL_CMPY_CD = PSCT.GLBL_CMPY_CD(+)
           AND PLSP.EZCANCELFLAG = PSCT.EZCANCELFLAG(+)
           AND PLSP.PRC_SVC_CONTR_TP_CD = PSCT.PRC_SVC_CONTR_TP_CD(+)
           AND PLSP.GLBL_CMPY_CD = PLB.GLBL_CMPY_CD(+)
           AND PLSP.EZCANCELFLAG = PLB.EZCANCELFLAG(+)
           AND PLSP.PRC_LIST_BAND_CD = PLB.PRC_LIST_BAND_CD(+)
           AND PLSP.GLBL_CMPY_CD = PSZ.GLBL_CMPY_CD(+)
           AND PLSP.EZCANCELFLAG = PSZ.EZCANCELFLAG(+)
           AND PLSP.PRC_SVC_ZONE_CD = PSZ.PRC_SVC_ZONE_CD(+)
        <isEqual property="prcDispRecTpCd" compareValue="01">
           AND PLSP.DEL_FLG = #flgN#
           AND PLSP.EFF_FROM_DT &lt;= #slsDt#
           AND NVL(PLSP.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="02">
           AND PLSP.DEL_FLG = #flgN#
           AND (PLSP.EFF_FROM_DT &gt; #slsDt#
               OR
                NVL(PLSP.EFF_THRU_DT, #highValDt#) &lt; #slsDt#
               )
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="03">
           AND PLSP.DEL_FLG = #flgY#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="04">
           AND PLSP.DEL_FLG = #flgN#
           AND (
                (PLSP.EFF_FROM_DT &lt;= #slsDt# AND NVL(PLSP.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#)
                OR
                (PLSP.EFF_FROM_DT &gt; #slsDt# OR NVL(PLSP.EFF_THRU_DT, #highValDt#) &lt; #slsDt#)
               )
        </isEqual>
        <isNotNull property="mdlNm_D3">
           AND UPPER(PLSP.MDL_NM) LIKE #mdlNm_D3#
        </isNotNull>
        <isNotNull property="prcMtrPkgNm_D3">
           AND UPPER(PMP.PRC_MTR_PKG_NM) LIKE #prcMtrPkgNm_D3#
        </isNotNull>
        <isNotNull property="prcSvcPlnTpCd_D3">
           AND PLSP.PRC_SVC_PLN_TP_CD = #prcSvcPlnTpCd_D3#
        </isNotNull>
        <isNotNull property="prcSvcContrTpCd_D3">
           AND PLSP.PRC_SVC_CONTR_TP_CD = #prcSvcContrTpCd_D3#
        </isNotNull>
        <isNotNull property="mtrLbNm_D3">
           AND UPPER(ML.MTR_LB_NM) LIKE #mtrLbNm_D3#
        </isNotNull>
        <isNotNull property="prcListBandDescTxt_D3">
           AND UPPER(PLB.PRC_LIST_BAND_DESC_TXT) LIKE #prcListBandDescTxt_D3#
        </isNotNull>
        <isNotNull property="splyAgmtPlnNm_D3">
           AND UPPER(SAP.SPLY_AGMT_PLN_NM) LIKE #splyAgmtPlnNm_D3#
        </isNotNull>
        <isNotNull property="termFromMthAot_Z1">
           AND PLS.TERM_FROM_MTH_AOT = #termFromMthAot_Z1#
        </isNotNull>
        <isNotNull property="termThruMthAot_Z1">
           AND PLSP.TERM_THRU_MTH_AOT = #termThruMthAot_Z1#
        </isNotNull>
        <isNotNull property="prcSvcZoneCd_Z1">
           AND PLSP.PRC_SVC_ZONE_CD = #prcSvcZoneCd_Z1#
        </isNotNull>
        <isNotNull property="mdseCd_Z1">
           AND PLSP.MDSE_CD LIKE #mdseCd_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z1">
           AND PLSP.EFF_FROM_DT &gt;= #effFromDt_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z2">
           AND PLSP.EFF_FROM_DT &lt;= #effFromDt_Z2#
        </isNotNull>
        <isNotNull property="effThruDt_Z1">
           AND NVL(PLSP.EFF_THRU_DT, #highValDt#) &gt;= #effThruDt_Z1#
        </isNotNull>
        <isNotNull property="effThruDt_Z2">
           AND NVL(PLSP.EFF_THRU_DT, #highValDt#) &lt;= #effThruDt_Z2#
        </isNotNull>
        <isNotNull property="cratDt_Z1">
           AND PLSP.EZINTIME &gt;= #cratDt_Z1#
        </isNotNull>
        <isNotNull property="cratDt_Z2">
           AND PLSP.EZINTIME &lt;= #cratDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z1">
           AND PLSP.EZUPTIME &gt;= #lastUpdDt_Z1#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z2">
           AND PLSP.EZUPTIME &lt;= #lastUpdDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="xxFullNm_Z1">
           AND (
                   PLSP.EZINUSERID = #xxFullNm_Z1#
              OR (     AP1.FIRST_NM IS NOT NULL
                   AND UPPER(AP1.FIRST_NM || ' ' || AP1.LAST_NM) LIKE #xxFullNm_Z1#
                 )
             )
        </isNotNull>
        <isNotNull property="xxFullNm_Z2">
           AND (
                   PLSP.EZUPUSERID = #xxFullNm_Z2#
              OR (     AP2.FIRST_NM IS NOT NULL
                   AND UPPER(AP2.FIRST_NM || ' ' || AP2.LAST_NM) LIKE #xxFullNm_Z2#
                 )
             )
        </isNotNull>
        <isNotNull property="prcListSplyPgmPk">
           AND PLSP.PRC_LIST_SPLY_PGM_PK = #prcListSplyPgmPk#
        </isNotNull>
      ORDER BY PLSP.MDL_NM
             , PMP.PRC_MTR_PKG_NM
             , PLSP.PRC_SVC_PLN_TP_CD
             , PLSP.PRC_SVC_CONTR_TP_CD
             , PLSP.BLLG_MTR_LB_CD
    ) A
    <isNotNull property="rowNum">
    WHERE ROWNUM &lt;= #rowNum#
    </isNotNull>
    </statement>

    <statement id="getPrcListValLeaseRateAsTemplate" parameterClass="Map" resultClass="Map">
    SELECT
        A.*
    FROM (
        SELECT PLLR.PRC_LEASE_CMPY_ABBR_NM
             , PLLR.DS_ACCT_NM
             , PPT.PRC_PGM_TP_DESC_TXT
             , PET.PRC_EQUIP_TP_DESC_TXT
             , PLLR.MDL_NM
             , PLLR.MIN_TOT_FIN_AMT
             , PLLR.MAX_TOT_FIN_AMT
             , PLLR.TERM_FROM_MTH_AOT
             , PLLR.TERM_THRU_MTH_AOT
             , PLLR.LEASE_RATE
             , PLLR.EFF_FROM_DT
             , PLLR.EFF_THRU_DT
          FROM PRC_LIST_LEASE_RATE PLLR
             , AUTH_PSN AP1
             , AUTH_PSN AP2
             , PRC_PGM_TP PPT
             , PRC_EQUIP_TP PET
         WHERE PLLR.GLBL_CMPY_CD = #glblCmpyCd#
           AND PLLR.EZCANCELFLAG = '0'
           AND PLLR.PRC_CATG_CD  = #prcCatgCd#
           AND PLLR.GLBL_CMPY_CD = AP1.GLBL_CMPY_CD(+)
           AND PLLR.EZCANCELFLAG = AP1.EZCANCELFLAG(+)
           AND PLLR.EZINUSERID   = AP1.USR_NM(+)
           AND PLLR.GLBL_CMPY_CD = AP2.GLBL_CMPY_CD(+)
           AND PLLR.EZCANCELFLAG = AP2.EZCANCELFLAG(+)
           AND PLLR.EZUPUSERID   = AP2.USR_NM(+)
           AND PLLR.GLBL_CMPY_CD = PPT.GLBL_CMPY_CD(+)
           AND PLLR.EZCANCELFLAG = PPT.EZCANCELFLAG(+)
           AND PLLR.PRC_PGM_TP_CD = PPT.PRC_PGM_TP_CD(+)
           AND PLLR.GLBL_CMPY_CD = PET.GLBL_CMPY_CD(+)
           AND PLLR.EZCANCELFLAG = PET.EZCANCELFLAG(+)
           AND PLLR.PRC_EQUIP_TP_CD = PET.PRC_EQUIP_TP_CD(+)
        <isEqual property="prcDispRecTpCd" compareValue="01">
           AND PLLR.DEL_FLG = #flgN#
           AND PLLR.EFF_FROM_DT &lt;= #slsDt#
           AND NVL(PLLR.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="02">
           AND PLLR.DEL_FLG = #flgN#
           AND (PLLR.EFF_FROM_DT &gt; #slsDt#
               OR
                NVL(PLLR.EFF_THRU_DT, #highValDt#) &lt; #slsDt#
               )
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="03">
           AND PLLR.DEL_FLG = #flgY#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="04">
           AND PLLR.DEL_FLG = #flgN#
           AND (
                (PLLR.EFF_FROM_DT &lt;= #slsDt# AND NVL(PLLR.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#)
                OR
                (PLLR.EFF_FROM_DT &gt; #slsDt# OR NVL(PLLR.EFF_THRU_DT, #highValDt#) &lt; #slsDt#)
               )
        </isEqual>
        <isNotNull property="mdlNm_D4">
           AND UPPER(PLLR.MDL_NM) LIKE #mdlNm_D4#
        </isNotNull>
        <isNotNull property="prcEquipTpCd_DH">
           AND PLLR.PRC_EQUIP_TP_CD = #prcEquipTpCd_DH#
        </isNotNull>
        <isNotNull property="prcPgmTpCd_DH">
           AND PLLR.PRC_PGM_TP_CD = #prcPgmTpCd_DH#
        </isNotNull>
        <isNotNull property="prcLeaseCmpyAbbrNm_D4">
           AND UPPER(PLLR.PRC_LEASE_CMPY_ABBR_NM) LIKE #prcLeaseCmpyAbbrNm_D4#
        </isNotNull>
        <isNotNull property="dsAcctNm_D4">
           AND UPPER(PLLR.DS_ACCT_NM) LIKE #dsAcctNm_D4#
        </isNotNull>
        <isNotNull property="termFromMthAot_Z1">
           AND PLLR.TERM_FROM_MTH_AOT = #termFromMthAot_Z1#
        </isNotNull>
        <isNotNull property="termThruMthAot_Z1">
           AND PLLR.TERM_THRU_MTH_AOT = #termThruMthAot_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z1">
           AND PLLR.EFF_FROM_DT &gt;= #effFromDt_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z2">
           AND PLLR.EFF_FROM_DT &lt;= #effFromDt_Z2#
        </isNotNull>
        <isNotNull property="effThruDt_Z1">
           AND NVL(PLLR.EFF_THRU_DT, #highValDt#) &gt;= #effThruDt_Z1#
        </isNotNull>
        <isNotNull property="effThruDt_Z2">
           AND NVL(PLLR.EFF_THRU_DT, #highValDt#) &lt;= #effThruDt_Z2#
        </isNotNull>
        <isNotNull property="cratDt_Z1">
           AND PLLR.EZINTIME &gt;= #cratDt_Z1#
        </isNotNull>
        <isNotNull property="cratDt_Z2">
           AND PLLR.EZINTIME &lt;= #cratDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z1">
           AND PLLR.EZUPTIME &gt;= #lastUpdDt_Z1#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z2">
           AND PLLR.EZUPTIME &lt;= #lastUpdDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="xxFullNm_Z1">
           AND (
                   PLLR.EZINUSERID = #xxFullNm_Z1#
              OR (     AP1.FIRST_NM IS NOT NULL
                   AND UPPER(AP1.FIRST_NM || ' ' || AP1.LAST_NM) LIKE #xxFullNm_Z1#
                 )
             )
        </isNotNull>
        <isNotNull property="xxFullNm_Z2">
           AND (
                   PLLR.EZUPUSERID = #xxFullNm_Z2#
              OR (     AP2.FIRST_NM IS NOT NULL
                   AND UPPER(AP2.FIRST_NM || ' ' || AP2.LAST_NM) LIKE #xxFullNm_Z2#
                 )
             )
        </isNotNull>
        <isNotNull property="prcListLeaseRatePk">
           AND PLLR.PRC_LIST_LEASE_RATE_PK = #prcListLeaseRatePk#
        </isNotNull>
      ORDER BY PLLR.PRC_LIST_LEASE_RATE_PK
    ) A
    <isNotNull property="rowNum">
    WHERE ROWNUM &lt;= #rowNum#
    </isNotNull>
    </statement>

    <statement id="getPrcListValLeaseRtrnFeeAsTemplate" parameterClass="Map" resultClass="Map">
    SELECT
        A.*
    FROM (
        SELECT PLLRT.PRC_LEASE_CMPY_ABBR_NM
             , SS.SVC_SEG_DESC_TXT
             , PIOR.PRC_IN_OUT_RG_DESC_TXT
             , PLLRT.DST_MILE_AMT
             , PLLRT.RTRN_FEE_AMT
             , PLLRT.EFF_FROM_DT
             , PLLRT.EFF_THRU_DT
          FROM PRC_LIST_LEASE_RTRN PLLRT
             , AUTH_PSN AP1
             , AUTH_PSN AP2
             , SVC_SEG SS
             , PRC_IN_OUT_RG PIOR
         WHERE PLLRT.GLBL_CMPY_CD = #glblCmpyCd#
           AND PLLRT.EZCANCELFLAG = '0'
           AND PLLRT.PRC_CATG_CD  = #prcCatgCd#
           AND PLLRT.GLBL_CMPY_CD = AP1.GLBL_CMPY_CD(+)
           AND PLLRT.EZCANCELFLAG = AP1.EZCANCELFLAG(+)
           AND PLLRT.EZINUSERID   = AP1.USR_NM(+)
           AND PLLRT.GLBL_CMPY_CD = AP2.GLBL_CMPY_CD(+)
           AND PLLRT.EZCANCELFLAG = AP2.EZCANCELFLAG(+)
           AND PLLRT.EZUPUSERID   = AP2.USR_NM(+)
           AND PLLRT.GLBL_CMPY_CD = SS.GLBL_CMPY_CD(+)
           AND PLLRT.EZCANCELFLAG = SS.EZCANCELFLAG(+)
           AND PLLRT.SVC_SEG_CD   = SS.SVC_SEG_CD(+)
           AND PLLRT.GLBL_CMPY_CD = PIOR.GLBL_CMPY_CD(+)
           AND PLLRT.EZCANCELFLAG = PIOR.EZCANCELFLAG(+)
           AND PLLRT.PRC_IN_OUT_RG_CD = PIOR.PRC_IN_OUT_RG_CD(+)
        <isEqual property="prcDispRecTpCd" compareValue="01">
           AND PLLRT.DEL_FLG = #flgN#
           AND PLLRT.EFF_FROM_DT &lt;= #slsDt#
           AND NVL(PLLRT.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="02">
           AND PLLRT.DEL_FLG = #flgN#
           AND (PLLRT.EFF_FROM_DT &gt; #slsDt#
               OR
                NVL(PLLRT.EFF_THRU_DT, #highValDt#) &lt; #slsDt#
               )
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="03">
           AND PLLRT.DEL_FLG = #flgY#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="04">
           AND PLLRT.DEL_FLG = #flgN#
           AND (
                (PLLRT.EFF_FROM_DT &lt;= #slsDt# AND NVL(PLLRT.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#)
                OR
                (PLLRT.EFF_FROM_DT &gt; #slsDt# OR NVL(PLLRT.EFF_THRU_DT, #highValDt#) &lt; #slsDt#)
               )
        </isEqual>
        <isNotNull property="svcSegCd_DH">
           AND PLLRT.SVC_SEG_CD = #svcSegCd_DH#
        </isNotNull>
        <isNotNull property="prcInOutRgCd_DH">
           AND PLLRT.PRC_IN_OUT_RG_CD = #prcInOutRgCd_DH#
        </isNotNull>
        <isNotNull property="prcLeaseCmpyAbbrNm_D5">
           AND UPPER(PLLRT.PRC_LEASE_CMPY_ABBR_NM) LIKE #prcLeaseCmpyAbbrNm_D5#
        </isNotNull>
        <isNotNull property="effFromDt_Z1">
           AND PLLRT.EFF_FROM_DT &gt;= #effFromDt_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z2">
           AND PLLRT.EFF_FROM_DT &lt;= #effFromDt_Z2#
        </isNotNull>
        <isNotNull property="effThruDt_Z1">
           AND NVL(PLLRT.EFF_THRU_DT, #highValDt#) &gt;= #effThruDt_Z1#
        </isNotNull>
        <isNotNull property="effThruDt_Z2">
           AND NVL(PLLRT.EFF_THRU_DT, #highValDt#) &lt;= #effThruDt_Z2#
        </isNotNull>
        <isNotNull property="cratDt_Z1">
           AND PLLRT.EZINTIME &gt;= #cratDt_Z1#
        </isNotNull>
        <isNotNull property="cratDt_Z2">
           AND PLLRT.EZINTIME &lt;= #cratDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z1">
           AND PLLRT.EZUPTIME &gt;= #lastUpdDt_Z1#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z2">
           AND PLLRT.EZUPTIME &lt;= #lastUpdDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="xxFullNm_Z1">
           AND (
                   PLLRT.EZINUSERID = #xxFullNm_Z1#
              OR (     AP1.FIRST_NM IS NOT NULL
                   AND UPPER(AP1.FIRST_NM || ' ' || AP1.LAST_NM) LIKE #xxFullNm_Z1#
                 )
             )
        </isNotNull>
        <isNotNull property="xxFullNm_Z2">
           AND (
                   PLLRT.EZUPUSERID = #xxFullNm_Z2#
              OR (     AP2.FIRST_NM IS NOT NULL
                   AND UPPER(AP2.FIRST_NM || ' ' || AP2.LAST_NM) LIKE #xxFullNm_Z2#
                 )
             )
        </isNotNull>
        <isNotNull property="prcListLeaseRtrnPk">
           AND PLLRT.PRC_LIST_LEASE_RTRN_PK = #prcListLeaseRtrnPk#
        </isNotNull>
      ORDER BY PLLRT.PRC_LIST_LEASE_RTRN_PK
    ) A
    <isNotNull property="rowNum">
    WHERE ROWNUM &lt;= #rowNum#
    </isNotNull>
    </statement>

    <statement id="getPrcListValTradeInAsTemplate" parameterClass="Map" resultClass="Map">
    SELECT
        A.*
    FROM (
        SELECT PLTI.MDL_NM
             , PLTI.TI_AMT
             , PLTI.MTR_RNG_REQ_FLG
             , PLTI.FROM_MTR_COPY_VOL_CNT
             , PLTI.THRU_MTR_COPY_VOL_CNT
             , PLTI.EFF_FROM_DT
             , PLTI.EFF_THRU_DT
          FROM PRC_LIST_TI_VAL PLTI
             , AUTH_PSN AP1
             , AUTH_PSN AP2
         WHERE PLTI.GLBL_CMPY_CD = #glblCmpyCd#
           AND PLTI.EZCANCELFLAG = '0'
           AND PLTI.PRC_CATG_CD  = #prcCatgCd#
           AND PLTI.GLBL_CMPY_CD = AP1.GLBL_CMPY_CD(+)
           AND PLTI.EZCANCELFLAG = AP1.EZCANCELFLAG(+)
           AND PLTI.EZINUSERID   = AP1.USR_NM(+)
           AND PLTI.GLBL_CMPY_CD = AP2.GLBL_CMPY_CD(+)
           AND PLTI.EZCANCELFLAG = AP2.EZCANCELFLAG(+)
           AND PLTI.EZUPUSERID   = AP2.USR_NM(+)
        <isEqual property="prcDispRecTpCd" compareValue="01">
           AND PLTI.DEL_FLG = #flgN#
           AND PLTI.EFF_FROM_DT &lt;= #slsDt#
           AND NVL(PLTI.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="02">
           AND PLTI.DEL_FLG = #flgN#
           AND (PLTI.EFF_FROM_DT &gt; #slsDt#
               OR
                NVL(PLTI.EFF_THRU_DT, #highValDt#) &lt; #slsDt#
               )
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="03">
           AND PLTI.DEL_FLG = #flgY#
        </isEqual>
        <isEqual property="prcDispRecTpCd" compareValue="04">
           AND PLTI.DEL_FLG = #flgN#
           AND (
                (PLTI.EFF_FROM_DT &lt;= #slsDt# AND NVL(PLTI.EFF_THRU_DT, #highValDt#) &gt;= #slsDt#)
                OR
                (PLTI.EFF_FROM_DT &gt; #slsDt# OR NVL(PLTI.EFF_THRU_DT, #highValDt#) &lt; #slsDt#)
               )
        </isEqual>
        <isNotNull property="mdlNm_D5">
           AND UPPER(PLTI.MDL_NM) LIKE #mdlNm_D5#
        </isNotNull>
        <isNotNull property="effFromDt_Z1">
           AND PLTI.EFF_FROM_DT &gt;= #effFromDt_Z1#
        </isNotNull>
        <isNotNull property="effFromDt_Z2">
           AND PLTI.EFF_FROM_DT &lt;= #effFromDt_Z2#
        </isNotNull>
        <isNotNull property="effThruDt_Z1">
           AND NVL(PLTI.EFF_THRU_DT, #highValDt#) &gt;= #effThruDt_Z1#
        </isNotNull>
        <isNotNull property="effThruDt_Z2">
           AND NVL(PLTI.EFF_THRU_DT, #highValDt#) &lt;= #effThruDt_Z2#
        </isNotNull>
        <isNotNull property="cratDt_Z1">
           AND PLTI.EZINTIME &gt;= #cratDt_Z1#
        </isNotNull>
        <isNotNull property="cratDt_Z2">
           AND PLTI.EZINTIME &lt;= #cratDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z1">
           AND PLTI.EZUPTIME &gt;= #lastUpdDt_Z1#
        </isNotNull>
        <isNotNull property="lastUpdDt_Z2">
           AND PLTI.EZUPTIME &lt;= #lastUpdDt_Z2# || #highValTm#
        </isNotNull>
        <isNotNull property="xxFullNm_Z1">
           AND (
                   PLTI.EZINUSERID = #xxFullNm_Z1#
              OR (     AP1.FIRST_NM IS NOT NULL
                   AND UPPER(AP1.FIRST_NM || ' ' || AP1.LAST_NM) LIKE #xxFullNm_Z1#
                 )
             )
        </isNotNull>
        <isNotNull property="xxFullNm_Z2">
           AND (
                   PLTI.EZUPUSERID = #xxFullNm_Z2#
              OR (     AP2.FIRST_NM IS NOT NULL
                   AND UPPER(AP2.FIRST_NM || ' ' || AP2.LAST_NM) LIKE #xxFullNm_Z2#
                 )
             )
        </isNotNull>
        <isNotNull property="prcListTiValPk">
           AND PLTI.PRC_LIST_TI_VAL_PK = #prcListTiValPk#
        </isNotNull>
      ORDER BY PLTI.PRC_LIST_TI_VAL_PK
    ) A
    <isNotNull property="rowNum">
    WHERE ROWNUM &lt;= #rowNum#
    </isNotNull>
    </statement>
    <!-- Add End 2018/05/09 QC#20269 -->
    <!-- Add Start 2018/11/17 QC#29147 -->
    <statement id="getPrcListBand" parameterClass="Map" resultClass="String">
    SELECT PLB.PRC_LIST_BAND_CD
    FROM PRC_LIST_BAND PLB
    WHERE
        PLB.GLBL_CMPY_CD = #glblCmpyCd#
    AND PLB.EZCANCELFLAG = '0'
    AND PLB.PRC_LIST_BAND_DESC_TXT = #prcListBandDescTxt#
    </statement>
    <!-- Add End 2018/11/17 QC#29147 -->
</sqlMap>
