// This file was automatically generated by Screen Field Definition Document and XLA200710010
// Generated on    :20160421181727000
// Velocity Macro:svltdatabean.vm V200604010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0610Bean.java Copyright FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */

package  business.servlet.NSAL0610;

import parts.servletcommon.EZDCommonDataBean;

/*
 * NSAL0610 is data bean class.
 */
public class NSAL0610Bean extends EZDCommonDataBean {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	//Constant Definition Area
	/** GLBL_CMPY_CD*/
	public static final String glblCmpyCd = "glblCmpyCd";

	/** SLS_DT*/
	public static final String slsDt = "slsDt";

	/** DS_CONTR_PK*/
	public static final String dsContrPk = "dsContrPk";

	/** DS_CONTR_NUM_H1*/
	public static final String dsContrNum_H1 = "dsContrNum_H1";

	/** DS_CONTR_NUM_H2*/
	public static final String dsContrNum_H2 = "dsContrNum_H2";

	/** DS_CONTR_CATG_CD*/
	public static final String dsContrCatgCd = "dsContrCatgCd";

	/** XX_CHK_BOX_H1*/
	public static final String xxChkBox_H1 = "xxChkBox_H1";

	/** XX_CHK_BOX_H2*/
	public static final String xxChkBox_H2 = "xxChkBox_H2";

	/** XX_HLD_FLG*/
	public static final String xxHldFlg = "xxHldFlg";

	/** XX_SEL_FLG_HA*/
	public static final String xxSelFlg_HA = "xxSelFlg_HA";

	/** XX_MODE_IND*/
	public static final String xxModeInd = "xxModeInd";

	/** A*/
	public static final String A = "A";

	/** DS_CONTR_DTL_PK_A*/
	public static final String dsContrDtlPk_A = "dsContrDtlPk_A";

	/** SVC_MACH_MSTR_PK_A*/
	public static final String svcMachMstrPk_A = "svcMachMstrPk_A";

	/** SER_NUM_A*/
	public static final String serNum_A = "serNum_A";

	/** DS_CONTR_BLLG_MTR_PK_A*/
	public static final String dsContrBllgMtrPk_A = "dsContrBllgMtrPk_A";

	/** MTR_LB_DESC_TXT_A*/
	public static final String mtrLbDescTxt_A = "mtrLbDescTxt_A";

	/** MTR_LB_SORT_NUM_A*/
	public static final String mtrLbSortNum_A = "mtrLbSortNum_A";

	/** XX_BTN_FLG_A*/
	public static final String xxBtnFlg_A = "xxBtnFlg_A";

	/** XX_DPLY_CTRL_FLG_A*/
	public static final String xxDplyCtrlFlg_A = "xxDplyCtrlFlg_A";

	/** XX_SEL_FLG_A*/
	public static final String xxSelFlg_A = "xxSelFlg_A";

	/** PRNT_DS_CONTR_DTL_PK_A*/
	public static final String prntDsContrDtlPk_A = "prntDsContrDtlPk_A";

	/** XX_DPLY_BY_CTRL_ANCR_LVL_CD_A*/
	public static final String xxDplyByCtrlAncrLvlCd_A = "xxDplyByCtrlAncrLvlCd_A";

	/** XX_CHK_BOX_A*/
	public static final String xxChkBox_A = "xxChkBox_A";

	/** XX_ROW_NUM_A*/
	public static final String xxRowNum_A = "xxRowNum_A";

	/** DS_CONTR_DTL_TP_CD_A*/
	public static final String dsContrDtlTpCd_A = "dsContrDtlTpCd_A";

	/** N*/
	public static final String N = "N";

	/** DS_CONTR_DTL_PK_N*/
	public static final String dsContrDtlPk_N = "dsContrDtlPk_N";

	/** SVC_MACH_MSTR_PK_N*/
	public static final String svcMachMstrPk_N = "svcMachMstrPk_N";

	/** SER_NUM_N*/
	public static final String serNum_N = "serNum_N";

	/** DS_CONTR_BLLG_MTR_PK_N*/
	public static final String dsContrBllgMtrPk_N = "dsContrBllgMtrPk_N";

	/** MTR_LB_DESC_TXT_N*/
	public static final String mtrLbDescTxt_N = "mtrLbDescTxt_N";

	/** MTR_LB_SORT_NUM_N*/
	public static final String mtrLbSortNum_N = "mtrLbSortNum_N";

	/** XX_BTN_FLG_N*/
	public static final String xxBtnFlg_N = "xxBtnFlg_N";

	/** XX_DPLY_CTRL_FLG_N*/
	public static final String xxDplyCtrlFlg_N = "xxDplyCtrlFlg_N";

	/** PRNT_DS_CONTR_DTL_PK_N*/
	public static final String prntDsContrDtlPk_N = "prntDsContrDtlPk_N";

	/** XX_DPLY_BY_CTRL_ANCR_LVL_CD_N*/
	public static final String xxDplyByCtrlAncrLvlCd_N = "xxDplyByCtrlAncrLvlCd_N";

	/** XX_CHK_BOX_N*/
	public static final String xxChkBox_N = "xxChkBox_N";

	/** XX_ROW_NUM_N*/
	public static final String xxRowNum_N = "xxRowNum_N";

	/** DS_CONTR_DTL_TP_CD_N*/
	public static final String dsContrDtlTpCd_N = "dsContrDtlTpCd_N";

	/** XX_PAGE_SHOW_FROM_NUM_A*/
	public static final String xxPageShowFromNum_A = "xxPageShowFromNum_A";

	/** XX_PAGE_SHOW_TO_NUM_A*/
	public static final String xxPageShowToNum_A = "xxPageShowToNum_A";

	/** XX_PAGE_SHOW_OF_NUM_A*/
	public static final String xxPageShowOfNum_A = "xxPageShowOfNum_A";

	/** XX_PAGE_SHOW_FROM_NUM_N*/
	public static final String xxPageShowFromNum_N = "xxPageShowFromNum_N";

	/** XX_PAGE_SHOW_TO_NUM_N*/
	public static final String xxPageShowToNum_N = "xxPageShowToNum_N";

	/** XX_PAGE_SHOW_OF_NUM_N*/
	public static final String xxPageShowOfNum_N = "xxPageShowOfNum_N";

	/**
	 * Method name:NSAL0610 is Bean's Constructor.
	 * <dd>method explanation:Initialization when instance of NSAL0610Bean is generated
	 * <dd>Remarks:
	 */
	public NSAL0610Bean() {
		super("business.servlet.NSAL0610.NSAL0610BMsg");
	}

	/**
	 * get  GLBL_CMPY_CD.
	 * @return GLBL_CMPY_CD
	 */
	public String getGlblCmpyCd() {
		return outputValue(glblCmpyCd);
	}

	/**
	 * set  GLBL_CMPY_CD.
	 * @param data GLBL_CMPY_CD
	 */
	public void setGlblCmpyCd(String data) {
		inputValue(glblCmpyCd,data);
	}

	/**
	 * get  SLS_DT.
	 * @return SLS_DT
	 */
	public String getSlsDt() {
		return outputValue(slsDt, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  SLS_DT.
	 * @param data SLS_DT
	 */
	public void setSlsDt(String data) {
		inputValue(slsDt, data, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * get  DS_CONTR_PK.
	 * @return DS_CONTR_PK
	 */
	public String getDsContrPk() {
		return outputValue(dsContrPk);
	}

	/**
	 * set  DS_CONTR_PK.
	 * @param data DS_CONTR_PK
	 */
	public void setDsContrPk(String data) {
		inputValue(dsContrPk,data);
	}

	/**
	 * get  DS_CONTR_NUM_H1.
	 * @return DS_CONTR_NUM_H1
	 */
	public String getDsContrNum_H1() {
		return outputValue(dsContrNum_H1);
	}

	/**
	 * set  DS_CONTR_NUM_H1.
	 * @param data DS_CONTR_NUM_H1
	 */
	public void setDsContrNum_H1(String data) {
		inputValue(dsContrNum_H1,data);
	}

	/**
	 * get  DS_CONTR_NUM_H2.
	 * @return DS_CONTR_NUM_H2
	 */
	public String getDsContrNum_H2() {
		return outputValue(dsContrNum_H2);
	}

	/**
	 * set  DS_CONTR_NUM_H2.
	 * @param data DS_CONTR_NUM_H2
	 */
	public void setDsContrNum_H2(String data) {
		inputValue(dsContrNum_H2,data);
	}

	/**
	 * get  DS_CONTR_CATG_CD.
	 * @return DS_CONTR_CATG_CD
	 */
	public String getDsContrCatgCd() {
		return outputValue(dsContrCatgCd);
	}

	/**
	 * set  DS_CONTR_CATG_CD.
	 * @param data DS_CONTR_CATG_CD
	 */
	public void setDsContrCatgCd(String data) {
		inputValue(dsContrCatgCd,data);
	}

	/**
	 * get  XX_CHK_BOX_H1.
	 * @return XX_CHK_BOX_H1
	 */
	public String getXxChkBox_H1() {
		return outputValue(xxChkBox_H1);
	}

	/**
	 * set  XX_CHK_BOX_H1.
	 * @param data XX_CHK_BOX_H1
	 */
	public void setXxChkBox_H1(String data) {
		inputValue(xxChkBox_H1,data);
	}

	/**
	 * get  XX_CHK_BOX_H2.
	 * @return XX_CHK_BOX_H2
	 */
	public String getXxChkBox_H2() {
		return outputValue(xxChkBox_H2);
	}

	/**
	 * set  XX_CHK_BOX_H2.
	 * @param data XX_CHK_BOX_H2
	 */
	public void setXxChkBox_H2(String data) {
		inputValue(xxChkBox_H2,data);
	}

	/**
	 * get  XX_HLD_FLG.
	 * @return XX_HLD_FLG
	 */
	public String getXxHldFlg() {
		return outputValue(xxHldFlg);
	}

	/**
	 * set  XX_HLD_FLG.
	 * @param data XX_HLD_FLG
	 */
	public void setXxHldFlg(String data) {
		inputValue(xxHldFlg,data);
	}

	/**
	 * get  XX_SEL_FLG_HA.
	 * @return XX_SEL_FLG_HA
	 */
	public String getXxSelFlg_HA() {
		return outputValue(xxSelFlg_HA);
	}

	/**
	 * set  XX_SEL_FLG_HA.
	 * @param data XX_SEL_FLG_HA
	 */
	public void setXxSelFlg_HA(String data) {
		inputValue(xxSelFlg_HA,data);
	}

	/**
	 * get  XX_MODE_IND.
	 * @return XX_MODE_IND
	 */
	public String getXxModeInd() {
		return outputValue(xxModeInd);
	}

	/**
	 * set  XX_MODE_IND.
	 * @param data XX_MODE_IND
	 */
	public void setXxModeInd(String data) {
		inputValue(xxModeInd,data);
	}

	/**
	 * get  DS_CONTR_DTL_PK_A.
	 * @param idx1 List Number
	 * @return DS_CONTR_DTL_PK_A
	 */
	public String getDsContrDtlPk_A(int idx1) {
		return outputValue(A, idx1, dsContrDtlPk_A);
	}

	/**
	 * set  DS_CONTR_DTL_PK_A.
	 * @param data DS_CONTR_DTL_PK_AArray
	 */
	public void setDsContrDtlPk_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsContrDtlPk_A, data[j]);
		}
	}

	/**
	 * get  SVC_MACH_MSTR_PK_A.
	 * @param idx1 List Number
	 * @return SVC_MACH_MSTR_PK_A
	 */
	public String getSvcMachMstrPk_A(int idx1) {
		return outputValue(A, idx1, svcMachMstrPk_A);
	}

	/**
	 * set  SVC_MACH_MSTR_PK_A.
	 * @param data SVC_MACH_MSTR_PK_AArray
	 */
	public void setSvcMachMstrPk_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcMachMstrPk_A, data[j]);
		}
	}

	/**
	 * get  SER_NUM_A.
	 * @param idx1 List Number
	 * @return SER_NUM_A
	 */
	public String getSerNum_A(int idx1) {
		return outputValue(A, idx1, serNum_A);
	}

	/**
	 * set  SER_NUM_A.
	 * @param data SER_NUM_AArray
	 */
	public void setSerNum_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, serNum_A, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_BLLG_MTR_PK_A.
	 * @param idx1 List Number
	 * @return DS_CONTR_BLLG_MTR_PK_A
	 */
	public String getDsContrBllgMtrPk_A(int idx1) {
		return outputValue(A, idx1, dsContrBllgMtrPk_A);
	}

	/**
	 * set  DS_CONTR_BLLG_MTR_PK_A.
	 * @param data DS_CONTR_BLLG_MTR_PK_AArray
	 */
	public void setDsContrBllgMtrPk_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsContrBllgMtrPk_A, data[j]);
		}
	}

	/**
	 * get  MTR_LB_DESC_TXT_A.
	 * @param idx1 List Number
	 * @return MTR_LB_DESC_TXT_A
	 */
	public String getMtrLbDescTxt_A(int idx1) {
		return outputValue(A, idx1, mtrLbDescTxt_A);
	}

	/**
	 * set  MTR_LB_DESC_TXT_A.
	 * @param data MTR_LB_DESC_TXT_AArray
	 */
	public void setMtrLbDescTxt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, mtrLbDescTxt_A, data[j]);
		}
	}

	/**
	 * get  MTR_LB_SORT_NUM_A.
	 * @param idx1 List Number
	 * @return MTR_LB_SORT_NUM_A
	 */
	public String getMtrLbSortNum_A(int idx1) {
		return outputValue(A, idx1, mtrLbSortNum_A);
	}

	/**
	 * set  MTR_LB_SORT_NUM_A.
	 * @param data MTR_LB_SORT_NUM_AArray
	 */
	public void setMtrLbSortNum_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, mtrLbSortNum_A, data[j]);
		}
	}

	/**
	 * get  XX_BTN_FLG_A.
	 * @param idx1 List Number
	 * @return XX_BTN_FLG_A
	 */
	public String getXxBtnFlg_A(int idx1) {
		return outputValue(A, idx1, xxBtnFlg_A);
	}

	/**
	 * set  XX_BTN_FLG_A.
	 * @param data XX_BTN_FLG_AArray
	 */
	public void setXxBtnFlg_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxBtnFlg_A, data[j]);
		}
	}

	/**
	 * get  XX_DPLY_CTRL_FLG_A.
	 * @param idx1 List Number
	 * @return XX_DPLY_CTRL_FLG_A
	 */
	public String getXxDplyCtrlFlg_A(int idx1) {
		return outputValue(A, idx1, xxDplyCtrlFlg_A);
	}

	/**
	 * set  XX_DPLY_CTRL_FLG_A.
	 * @param data XX_DPLY_CTRL_FLG_AArray
	 */
	public void setXxDplyCtrlFlg_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxDplyCtrlFlg_A, data[j]);
		}
	}

	/**
	 * get  XX_SEL_FLG_A.
	 * @param idx1 List Number
	 * @return XX_SEL_FLG_A
	 */
	public String getXxSelFlg_A(int idx1) {
		return outputValue(A, idx1, xxSelFlg_A);
	}

	/**
	 * set  XX_SEL_FLG_A.
	 * @param data XX_SEL_FLG_AArray
	 */
	public void setXxSelFlg_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxSelFlg_A, data[j]);
		}
	}

	/**
	 * get  PRNT_DS_CONTR_DTL_PK_A.
	 * @param idx1 List Number
	 * @return PRNT_DS_CONTR_DTL_PK_A
	 */
	public String getPrntDsContrDtlPk_A(int idx1) {
		return outputValue(A, idx1, prntDsContrDtlPk_A);
	}

	/**
	 * set  PRNT_DS_CONTR_DTL_PK_A.
	 * @param data PRNT_DS_CONTR_DTL_PK_AArray
	 */
	public void setPrntDsContrDtlPk_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prntDsContrDtlPk_A, data[j]);
		}
	}

	/**
	 * get  XX_DPLY_BY_CTRL_ANCR_LVL_CD_A.
	 * @param idx1 List Number
	 * @return XX_DPLY_BY_CTRL_ANCR_LVL_CD_A
	 */
	public String getXxDplyByCtrlAncrLvlCd_A(int idx1) {
		return outputValue(A, idx1, xxDplyByCtrlAncrLvlCd_A);
	}

	/**
	 * set  XX_DPLY_BY_CTRL_ANCR_LVL_CD_A.
	 * @param data XX_DPLY_BY_CTRL_ANCR_LVL_CD_AArray
	 */
	public void setXxDplyByCtrlAncrLvlCd_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxDplyByCtrlAncrLvlCd_A, data[j]);
		}
	}

	/**
	 * get  XX_CHK_BOX_A.
	 * @param idx1 List Number
	 * @return XX_CHK_BOX_A
	 */
	public String getXxChkBox_A(int idx1) {
		return outputValue(A, idx1, xxChkBox_A);
	}

	/**
	 * set  XX_CHK_BOX_A.
	 * @param data XX_CHK_BOX_AArray
	 */
	public void setXxChkBox_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxChkBox_A, data[j]);
		}
	}

	/**
	 * get  XX_ROW_NUM_A.
	 * @param idx1 List Number
	 * @return XX_ROW_NUM_A
	 */
	public String getXxRowNum_A(int idx1) {
		return outputValue(A, idx1, xxRowNum_A);
	}

	/**
	 * set  XX_ROW_NUM_A.
	 * @param data XX_ROW_NUM_AArray
	 */
	public void setXxRowNum_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRowNum_A, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_DTL_TP_CD_A.
	 * @param idx1 List Number
	 * @return DS_CONTR_DTL_TP_CD_A
	 */
	public String getDsContrDtlTpCd_A(int idx1) {
		return outputValue(A, idx1, dsContrDtlTpCd_A);
	}

	/**
	 * set  DS_CONTR_DTL_TP_CD_A.
	 * @param data DS_CONTR_DTL_TP_CD_AArray
	 */
	public void setDsContrDtlTpCd_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsContrDtlTpCd_A, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_DTL_PK_N.
	 * @param idx1 List Number
	 * @return DS_CONTR_DTL_PK_N
	 */
	public String getDsContrDtlPk_N(int idx1) {
		return outputValue(N, idx1, dsContrDtlPk_N);
	}

	/**
	 * set  DS_CONTR_DTL_PK_N.
	 * @param data DS_CONTR_DTL_PK_NArray
	 */
	public void setDsContrDtlPk_N(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(N);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(N, i, dsContrDtlPk_N, data[j]);
		}
	}

	/**
	 * get  SVC_MACH_MSTR_PK_N.
	 * @param idx1 List Number
	 * @return SVC_MACH_MSTR_PK_N
	 */
	public String getSvcMachMstrPk_N(int idx1) {
		return outputValue(N, idx1, svcMachMstrPk_N);
	}

	/**
	 * set  SVC_MACH_MSTR_PK_N.
	 * @param data SVC_MACH_MSTR_PK_NArray
	 */
	public void setSvcMachMstrPk_N(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(N);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(N, i, svcMachMstrPk_N, data[j]);
		}
	}

	/**
	 * get  SER_NUM_N.
	 * @param idx1 List Number
	 * @return SER_NUM_N
	 */
	public String getSerNum_N(int idx1) {
		return outputValue(N, idx1, serNum_N);
	}

	/**
	 * set  SER_NUM_N.
	 * @param data SER_NUM_NArray
	 */
	public void setSerNum_N(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(N);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(N, i, serNum_N, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_BLLG_MTR_PK_N.
	 * @param idx1 List Number
	 * @return DS_CONTR_BLLG_MTR_PK_N
	 */
	public String getDsContrBllgMtrPk_N(int idx1) {
		return outputValue(N, idx1, dsContrBllgMtrPk_N);
	}

	/**
	 * set  DS_CONTR_BLLG_MTR_PK_N.
	 * @param data DS_CONTR_BLLG_MTR_PK_NArray
	 */
	public void setDsContrBllgMtrPk_N(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(N);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(N, i, dsContrBllgMtrPk_N, data[j]);
		}
	}

	/**
	 * get  MTR_LB_DESC_TXT_N.
	 * @param idx1 List Number
	 * @return MTR_LB_DESC_TXT_N
	 */
	public String getMtrLbDescTxt_N(int idx1) {
		return outputValue(N, idx1, mtrLbDescTxt_N);
	}

	/**
	 * set  MTR_LB_DESC_TXT_N.
	 * @param data MTR_LB_DESC_TXT_NArray
	 */
	public void setMtrLbDescTxt_N(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(N);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(N, i, mtrLbDescTxt_N, data[j]);
		}
	}

	/**
	 * get  MTR_LB_SORT_NUM_N.
	 * @param idx1 List Number
	 * @return MTR_LB_SORT_NUM_N
	 */
	public String getMtrLbSortNum_N(int idx1) {
		return outputValue(N, idx1, mtrLbSortNum_N);
	}

	/**
	 * set  MTR_LB_SORT_NUM_N.
	 * @param data MTR_LB_SORT_NUM_NArray
	 */
	public void setMtrLbSortNum_N(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(N);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(N, i, mtrLbSortNum_N, data[j]);
		}
	}

	/**
	 * get  XX_BTN_FLG_N.
	 * @param idx1 List Number
	 * @return XX_BTN_FLG_N
	 */
	public String getXxBtnFlg_N(int idx1) {
		return outputValue(N, idx1, xxBtnFlg_N);
	}

	/**
	 * set  XX_BTN_FLG_N.
	 * @param data XX_BTN_FLG_NArray
	 */
	public void setXxBtnFlg_N(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(N);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(N, i, xxBtnFlg_N, data[j]);
		}
	}

	/**
	 * get  XX_DPLY_CTRL_FLG_N.
	 * @param idx1 List Number
	 * @return XX_DPLY_CTRL_FLG_N
	 */
	public String getXxDplyCtrlFlg_N(int idx1) {
		return outputValue(N, idx1, xxDplyCtrlFlg_N);
	}

	/**
	 * set  XX_DPLY_CTRL_FLG_N.
	 * @param data XX_DPLY_CTRL_FLG_NArray
	 */
	public void setXxDplyCtrlFlg_N(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(N);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(N, i, xxDplyCtrlFlg_N, data[j]);
		}
	}

	/**
	 * get  PRNT_DS_CONTR_DTL_PK_N.
	 * @param idx1 List Number
	 * @return PRNT_DS_CONTR_DTL_PK_N
	 */
	public String getPrntDsContrDtlPk_N(int idx1) {
		return outputValue(N, idx1, prntDsContrDtlPk_N);
	}

	/**
	 * set  PRNT_DS_CONTR_DTL_PK_N.
	 * @param data PRNT_DS_CONTR_DTL_PK_NArray
	 */
	public void setPrntDsContrDtlPk_N(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(N);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(N, i, prntDsContrDtlPk_N, data[j]);
		}
	}

	/**
	 * get  XX_DPLY_BY_CTRL_ANCR_LVL_CD_N.
	 * @param idx1 List Number
	 * @return XX_DPLY_BY_CTRL_ANCR_LVL_CD_N
	 */
	public String getXxDplyByCtrlAncrLvlCd_N(int idx1) {
		return outputValue(N, idx1, xxDplyByCtrlAncrLvlCd_N);
	}

	/**
	 * set  XX_DPLY_BY_CTRL_ANCR_LVL_CD_N.
	 * @param data XX_DPLY_BY_CTRL_ANCR_LVL_CD_NArray
	 */
	public void setXxDplyByCtrlAncrLvlCd_N(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(N);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(N, i, xxDplyByCtrlAncrLvlCd_N, data[j]);
		}
	}

	/**
	 * get  XX_CHK_BOX_N.
	 * @param idx1 List Number
	 * @return XX_CHK_BOX_N
	 */
	public String getXxChkBox_N(int idx1) {
		return outputValue(N, idx1, xxChkBox_N);
	}

	/**
	 * set  XX_CHK_BOX_N.
	 * @param data XX_CHK_BOX_NArray
	 */
	public void setXxChkBox_N(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(N);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(N, i, xxChkBox_N, data[j]);
		}
	}

	/**
	 * get  XX_ROW_NUM_N.
	 * @param idx1 List Number
	 * @return XX_ROW_NUM_N
	 */
	public String getXxRowNum_N(int idx1) {
		return outputValue(N, idx1, xxRowNum_N);
	}

	/**
	 * set  XX_ROW_NUM_N.
	 * @param data XX_ROW_NUM_NArray
	 */
	public void setXxRowNum_N(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(N);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(N, i, xxRowNum_N, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_DTL_TP_CD_N.
	 * @param idx1 List Number
	 * @return DS_CONTR_DTL_TP_CD_N
	 */
	public String getDsContrDtlTpCd_N(int idx1) {
		return outputValue(N, idx1, dsContrDtlTpCd_N);
	}

	/**
	 * set  DS_CONTR_DTL_TP_CD_N.
	 * @param data DS_CONTR_DTL_TP_CD_NArray
	 */
	public void setDsContrDtlTpCd_N(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(N);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(N, i, dsContrDtlTpCd_N, data[j]);
		}
	}

	/**
	 * get  XX_PAGE_SHOW_FROM_NUM_A.
	 * @return XX_PAGE_SHOW_FROM_NUM_A
	 */
	public String getXxPageShowFromNum_A() {
		return outputValue(xxPageShowFromNum_A);
	}

	/**
	 * set  XX_PAGE_SHOW_FROM_NUM_A.
	 * @param data XX_PAGE_SHOW_FROM_NUM_A
	 */
	public void setXxPageShowFromNum_A(String data) {
		inputValue(xxPageShowFromNum_A,data);
	}

	/**
	 * get  XX_PAGE_SHOW_TO_NUM_A.
	 * @return XX_PAGE_SHOW_TO_NUM_A
	 */
	public String getXxPageShowToNum_A() {
		return outputValue(xxPageShowToNum_A);
	}

	/**
	 * set  XX_PAGE_SHOW_TO_NUM_A.
	 * @param data XX_PAGE_SHOW_TO_NUM_A
	 */
	public void setXxPageShowToNum_A(String data) {
		inputValue(xxPageShowToNum_A,data);
	}

	/**
	 * get  XX_PAGE_SHOW_OF_NUM_A.
	 * @return XX_PAGE_SHOW_OF_NUM_A
	 */
	public String getXxPageShowOfNum_A() {
		return outputValue(xxPageShowOfNum_A);
	}

	/**
	 * set  XX_PAGE_SHOW_OF_NUM_A.
	 * @param data XX_PAGE_SHOW_OF_NUM_A
	 */
	public void setXxPageShowOfNum_A(String data) {
		inputValue(xxPageShowOfNum_A,data);
	}

	/**
	 * get  XX_PAGE_SHOW_FROM_NUM_N.
	 * @return XX_PAGE_SHOW_FROM_NUM_N
	 */
	public String getXxPageShowFromNum_N() {
		return outputValue(xxPageShowFromNum_N);
	}

	/**
	 * set  XX_PAGE_SHOW_FROM_NUM_N.
	 * @param data XX_PAGE_SHOW_FROM_NUM_N
	 */
	public void setXxPageShowFromNum_N(String data) {
		inputValue(xxPageShowFromNum_N,data);
	}

	/**
	 * get  XX_PAGE_SHOW_TO_NUM_N.
	 * @return XX_PAGE_SHOW_TO_NUM_N
	 */
	public String getXxPageShowToNum_N() {
		return outputValue(xxPageShowToNum_N);
	}

	/**
	 * set  XX_PAGE_SHOW_TO_NUM_N.
	 * @param data XX_PAGE_SHOW_TO_NUM_N
	 */
	public void setXxPageShowToNum_N(String data) {
		inputValue(xxPageShowToNum_N,data);
	}

	/**
	 * get  XX_PAGE_SHOW_OF_NUM_N.
	 * @return XX_PAGE_SHOW_OF_NUM_N
	 */
	public String getXxPageShowOfNum_N() {
		return outputValue(xxPageShowOfNum_N);
	}

	/**
	 * set  XX_PAGE_SHOW_OF_NUM_N.
	 * @param data XX_PAGE_SHOW_OF_NUM_N
	 */
	public void setXxPageShowOfNum_N(String data) {
		inputValue(xxPageShowOfNum_N,data);
	}

}

