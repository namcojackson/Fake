//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20160428102811000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NMAL7020BMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NMAL7020;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NMAL7020 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NMAL7020BMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** PRC_CATG_CD*/
	public final EZDBStringItem              prcCatgCd;

    /** PRC_CATG_NM_O*/
	public final EZDBStringItem              prcCatgNm_O;

    /** PRC_CATG_NM_N*/
	public final EZDBStringItem              prcCatgNm_N;

    /** NEW_PRC_CATG_DESC_TXT*/
	public final EZDBStringItem              newPrcCatgDescTxt;

    /** ACTV_FLG*/
	public final EZDBStringItem              actvFlg;

    /** MAIN_PRC_LIST_INFO_FLG*/
	public final EZDBStringItem              mainPrcListInfoFlg;

    /** PRC_LIST_ACCS_TP_FLG*/
	public final EZDBStringItem              prcListAccsTpFlg;

    /** COPY_ATTRB_TRX_FLG*/
	public final EZDBStringItem              copyAttrbTrxFlg;

    /** COPY_PRC_FLG*/
	public final EZDBStringItem              copyPrcFlg;

    /** PRC_CALC_TP_CD*/
	public final EZDBStringItem              prcCalcTpCd;

    /** PRC_CALC_TP_CD_P*/
	public final EZDBStringItemArray              prcCalcTpCd_P;

    /** PRC_CALC_TP_DESC_TXT_P*/
	public final EZDBStringItemArray              prcCalcTpDescTxt_P;

    /** PRC_PCT_AMT_TP_CD*/
	public final EZDBStringItem              prcPctAmtTpCd;

    /** PRC_PCT_AMT_TP_CD_P*/
	public final EZDBStringItemArray              prcPctAmtTpCd_P;

    /** PRC_PCT_AMT_TP_DESC_TXT_P*/
	public final EZDBStringItemArray              prcPctAmtTpDescTxt_P;

    /** COPY_PRC_AMT_RATE*/
	public final EZDBBigDecimalItem              copyPrcAmtRate;

    /** EFF_FROM_DT*/
	public final EZDBDateItem              effFromDt;

    /** EFF_THRU_DT*/
	public final EZDBDateItem              effThruDt;

    /** EFF_APPLY_LVL_TP_CD*/
	public final EZDBStringItem              effApplyLvlTpCd;

    /** EFF_APPLY_LVL_TP_CD_P*/
	public final EZDBStringItemArray              effApplyLvlTpCd_P;

    /** EFF_APPLY_LVL_TP_DESC_TXT_P*/
	public final EZDBStringItemArray              effApplyLvlTpDescTxt_P;

    /** VAR_CHAR_CONST_VAL_A*/
	public final EZDBStringItem              varCharConstVal_A;

    /** VAR_CHAR_CONST_VAL_B*/
	public final EZDBStringItem              varCharConstVal_B;

    /** P*/
	public final business.servlet.NMAL7020.NMAL7020_PBMsgArray              P;

    /** XX_SCR_EVENT_NM*/
	public final EZDBStringItem              xxScrEventNm;


	/**
	 * NMAL7020BMsg is constructor.
	 * The initialization when the instance of NMAL7020BMsg is generated.
	 */
	public NMAL7020BMsg() {
		this(false, -1);
	}

	/**
	 * NMAL7020BMsg is constructor.
	 * The initialization when the instance of NMAL7020BMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NMAL7020BMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		prcCatgCd = (EZDBStringItem)newItem("prcCatgCd");
		prcCatgNm_O = (EZDBStringItem)newItem("prcCatgNm_O");
		prcCatgNm_N = (EZDBStringItem)newItem("prcCatgNm_N");
		newPrcCatgDescTxt = (EZDBStringItem)newItem("newPrcCatgDescTxt");
		actvFlg = (EZDBStringItem)newItem("actvFlg");
		mainPrcListInfoFlg = (EZDBStringItem)newItem("mainPrcListInfoFlg");
		prcListAccsTpFlg = (EZDBStringItem)newItem("prcListAccsTpFlg");
		copyAttrbTrxFlg = (EZDBStringItem)newItem("copyAttrbTrxFlg");
		copyPrcFlg = (EZDBStringItem)newItem("copyPrcFlg");
		prcCalcTpCd = (EZDBStringItem)newItem("prcCalcTpCd");
		prcCalcTpCd_P = (EZDBStringItemArray)newItemArray("prcCalcTpCd_P");
		prcCalcTpDescTxt_P = (EZDBStringItemArray)newItemArray("prcCalcTpDescTxt_P");
		prcPctAmtTpCd = (EZDBStringItem)newItem("prcPctAmtTpCd");
		prcPctAmtTpCd_P = (EZDBStringItemArray)newItemArray("prcPctAmtTpCd_P");
		prcPctAmtTpDescTxt_P = (EZDBStringItemArray)newItemArray("prcPctAmtTpDescTxt_P");
		copyPrcAmtRate = (EZDBBigDecimalItem)newItem("copyPrcAmtRate");
		effFromDt = (EZDBDateItem)newItem("effFromDt");
		effThruDt = (EZDBDateItem)newItem("effThruDt");
		effApplyLvlTpCd = (EZDBStringItem)newItem("effApplyLvlTpCd");
		effApplyLvlTpCd_P = (EZDBStringItemArray)newItemArray("effApplyLvlTpCd_P");
		effApplyLvlTpDescTxt_P = (EZDBStringItemArray)newItemArray("effApplyLvlTpDescTxt_P");
		varCharConstVal_A = (EZDBStringItem)newItem("varCharConstVal_A");
		varCharConstVal_B = (EZDBStringItem)newItem("varCharConstVal_B");
		P = (business.servlet.NMAL7020.NMAL7020_PBMsgArray)newMsgArray("P");
		xxScrEventNm = (EZDBStringItem)newItem("xxScrEventNm");
	}

	/**
	 * get the type of array which is stored
	 * @return NMAL7020BMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NMAL7020BMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"prcCatgCd", "prcCatgCd", null, null, TYPE_HANKAKUEISU, "10", null},
	{"prcCatgNm_O", "prcCatgNm_O", "O", null, TYPE_HANKAKUEISU, "75", null},
	{"prcCatgNm_N", "prcCatgNm_N", "N", null, TYPE_HANKAKUEISU, "75", null},
	{"newPrcCatgDescTxt", "newPrcCatgDescTxt", null, null, TYPE_HANKAKUEISU, "2000", null},
	{"actvFlg", "actvFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"mainPrcListInfoFlg", "mainPrcListInfoFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"prcListAccsTpFlg", "prcListAccsTpFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"copyAttrbTrxFlg", "copyAttrbTrxFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"copyPrcFlg", "copyPrcFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"prcCalcTpCd", "prcCalcTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"prcCalcTpCd_P", "prcCalcTpCd_P", "P", "99", TYPE_HANKAKUEISU, "2", null},
	{"prcCalcTpDescTxt_P", "prcCalcTpDescTxt_P", "P", "99", TYPE_HANKAKUEISU, "50", null},
	{"prcPctAmtTpCd", "prcPctAmtTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"prcPctAmtTpCd_P", "prcPctAmtTpCd_P", "P", "99", TYPE_HANKAKUEISU, "2", null},
	{"prcPctAmtTpDescTxt_P", "prcPctAmtTpDescTxt_P", "P", "99", TYPE_HANKAKUEISU, "50", null},
	{"copyPrcAmtRate", "copyPrcAmtRate", null, null, TYPE_SEISU_SYOSU, "19", "6"},
	{"effFromDt", "effFromDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt", "effThruDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"effApplyLvlTpCd", "effApplyLvlTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"effApplyLvlTpCd_P", "effApplyLvlTpCd_P", "P", "99", TYPE_HANKAKUEISU, "2", null},
	{"effApplyLvlTpDescTxt_P", "effApplyLvlTpDescTxt_P", "P", "99", TYPE_HANKAKUEISU, "50", null},
	{"varCharConstVal_A", "varCharConstVal_A", "A", null, TYPE_HANKAKUEISU, "1000", null},
	{"varCharConstVal_B", "varCharConstVal_B", "B", null, TYPE_HANKAKUEISU, "1000", null},
	{"P", "P", null, "30", "business.servlet.NMAL7020.NMAL7020_PBMsgArray", null, null},
	
	{"xxScrEventNm", "xxScrEventNm", null, null, TYPE_HANKAKUEISU, "50", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"PRC_CATG_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCatgCd
        {"PRC_CATG_NM", YES,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCatgNm_O
        {"PRC_CATG_NM", YES,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCatgNm_N
        {"NEW_PRC_CATG_DESC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//newPrcCatgDescTxt
        {"ACTV_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//actvFlg
        {"MAIN_PRC_LIST_INFO_FLG", YES,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mainPrcListInfoFlg
        {"PRC_LIST_ACCS_TP_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcListAccsTpFlg
        {"COPY_ATTRB_TRX_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//copyAttrbTrxFlg
        {"COPY_PRC_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//copyPrcFlg
        {"PRC_CALC_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCalcTpCd
        {"PRC_CALC_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCalcTpCd_P
        {"PRC_CALC_TP_DESC_TXT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCalcTpDescTxt_P
        {"PRC_PCT_AMT_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcPctAmtTpCd
        {"PRC_PCT_AMT_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcPctAmtTpCd_P
        {"PRC_PCT_AMT_TP_DESC_TXT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcPctAmtTpDescTxt_P
        {"COPY_PRC_AMT_RATE",  NO,  null,null,"1", NO,YES, NO, NO,null,null,null, null,  NO,  NO},	//copyPrcAmtRate
        {"EFF_FROM_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//effFromDt
        {"EFF_THRU_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//effThruDt
        {"EFF_APPLY_LVL_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effApplyLvlTpCd
        {"EFF_APPLY_LVL_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effApplyLvlTpCd_P
        {"EFF_APPLY_LVL_TP_DESC_TXT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effApplyLvlTpDescTxt_P
        {"VAR_CHAR_CONST_VAL",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//varCharConstVal_A
        {"VAR_CHAR_CONST_VAL",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//varCharConstVal_B
		null,	//P
        {"XX_SCR_EVENT_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxScrEventNm
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

