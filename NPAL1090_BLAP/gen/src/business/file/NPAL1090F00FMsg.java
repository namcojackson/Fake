//This file was automatically generated by Text File Layout Definition Document and XLA200710010.
// Generated on    :20151215015112000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :TextFileLayoutDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NPAL1090F00FMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.file;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NPAL1090F00 File Layout Message class.
 * @author
 * @version XLA200710010
 */
public class NPAL1090F00FMsg extends EZDFMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** PRCH_REQ_NUM_D1*/
	public final EZDFStringItem              prchReqNum_D1;

    /** PRCH_REQ_TP_DESC_TXT_D1*/
	public final EZDFStringItem              prchReqTpDescTxt_D1;

    /** PRCH_REQ_STS_DESC_TXT_D1*/
	public final EZDFStringItem              prchReqStsDescTxt_D1;

    /** PRCH_REQ_APVL_STS_DESC_TXT_D1*/
	public final EZDFStringItem              prchReqApvlStsDescTxt_D1;

    /** XX_POP_PRM_D1*/
	public final EZDFStringItem              xxPopPrm_D1;

    /** XX_POP_PRM_D2*/
	public final EZDFStringItem              xxPopPrm_D2;

    /** PRCH_REQ_SRC_TP_DESC_TXT_D1*/
	public final EZDFStringItem              prchReqSrcTpDescTxt_D1;

    /** TRX_REF_NUM_D1*/
	public final EZDFStringItem              trxRefNum_D1;

    /** PRCH_REQ_CRAT_BY_PSN_CD_D1*/
	public final EZDFStringItem              prchReqCratByPsnCd_D1;

    /** FULL_PSN_NM_D1*/
	public final EZDFStringItem              fullPsnNm_D1;

    /** LINE_BIZ_TP_CD_D1*/
	public final EZDFStringItem              lineBizTpCd_D1;

    /** SHPG_SVC_LVL_DESC_TXT_D1*/
	public final EZDFStringItem              shpgSvcLvlDescTxt_D1;

    /** CARR_NM_D1*/
	public final EZDFStringItem              carrNm_D1;

    /** RQST_TECH_TOC_CD_D1*/
	public final EZDFStringItem              rqstTechTocCd_D1;

    /** TECH_NM_D1*/
	public final EZDFStringItem              techNm_D1;

    /** DEST_RTL_WH_CD_D1*/
	public final EZDFStringItem              destRtlWhCd_D1;

    /** RTL_WH_NM_D1*/
	public final EZDFStringItem              rtlWhNm_D1;

    /** DEST_RTL_SWH_CD_D1*/
	public final EZDFStringItem              destRtlSwhCd_D1;

    /** RTL_SWH_NM_D1*/
	public final EZDFStringItem              rtlSwhNm_D1;

    /** SHIP_TO_CUST_CD_D1*/
	public final EZDFStringItem              shipToCustCd_D1;

    /** LOC_NM_D1*/
	public final EZDFStringItem              locNm_D1;

    /** FSR_NUM_D1*/
	public final EZDFStringItem              fsrNum_D1;

    /** SVC_TASK_NUM_D1*/
	public final EZDFStringItem              svcTaskNum_D1;

    /** SVC_MACH_SER_NUM_D1*/
	public final EZDFStringItem              svcMachSerNum_D1;


	/**
	 * NPAL1090F00FMsg is constructor.
	 * The initialization when the instance of NPAL1090F00FMsg is generated.
	 */
	public NPAL1090F00FMsg() {
		this(false, -1);
	}

	/**
	 * NPAL1090F00FMsg is constructor.
	 * The initialization when the instance of NPAL1090F00FMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NPAL1090F00FMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		prchReqNum_D1 = (EZDFStringItem)newItem("prchReqNum_D1");
		prchReqTpDescTxt_D1 = (EZDFStringItem)newItem("prchReqTpDescTxt_D1");
		prchReqStsDescTxt_D1 = (EZDFStringItem)newItem("prchReqStsDescTxt_D1");
		prchReqApvlStsDescTxt_D1 = (EZDFStringItem)newItem("prchReqApvlStsDescTxt_D1");
		xxPopPrm_D1 = (EZDFStringItem)newItem("xxPopPrm_D1");
		xxPopPrm_D2 = (EZDFStringItem)newItem("xxPopPrm_D2");
		prchReqSrcTpDescTxt_D1 = (EZDFStringItem)newItem("prchReqSrcTpDescTxt_D1");
		trxRefNum_D1 = (EZDFStringItem)newItem("trxRefNum_D1");
		prchReqCratByPsnCd_D1 = (EZDFStringItem)newItem("prchReqCratByPsnCd_D1");
		fullPsnNm_D1 = (EZDFStringItem)newItem("fullPsnNm_D1");
		lineBizTpCd_D1 = (EZDFStringItem)newItem("lineBizTpCd_D1");
		shpgSvcLvlDescTxt_D1 = (EZDFStringItem)newItem("shpgSvcLvlDescTxt_D1");
		carrNm_D1 = (EZDFStringItem)newItem("carrNm_D1");
		rqstTechTocCd_D1 = (EZDFStringItem)newItem("rqstTechTocCd_D1");
		techNm_D1 = (EZDFStringItem)newItem("techNm_D1");
		destRtlWhCd_D1 = (EZDFStringItem)newItem("destRtlWhCd_D1");
		rtlWhNm_D1 = (EZDFStringItem)newItem("rtlWhNm_D1");
		destRtlSwhCd_D1 = (EZDFStringItem)newItem("destRtlSwhCd_D1");
		rtlSwhNm_D1 = (EZDFStringItem)newItem("rtlSwhNm_D1");
		shipToCustCd_D1 = (EZDFStringItem)newItem("shipToCustCd_D1");
		locNm_D1 = (EZDFStringItem)newItem("locNm_D1");
		fsrNum_D1 = (EZDFStringItem)newItem("fsrNum_D1");
		svcTaskNum_D1 = (EZDFStringItem)newItem("svcTaskNum_D1");
		svcMachSerNum_D1 = (EZDFStringItem)newItem("svcMachSerNum_D1");
	}

	/**
	 * get the type of array which is stored
	 * @return NPAL1090F00FMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NPAL1090F00FMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"prchReqNum_D1", "prchReqNum_D1", "D1", null, TYPE_HANKAKUEISU, "8", null},
	{"prchReqTpDescTxt_D1", "prchReqTpDescTxt_D1", "D1", null, TYPE_HANKAKUEISU, "50", null},
	{"prchReqStsDescTxt_D1", "prchReqStsDescTxt_D1", "D1", null, TYPE_HANKAKUEISU, "50", null},
	{"prchReqApvlStsDescTxt_D1", "prchReqApvlStsDescTxt_D1", "D1", null, TYPE_HANKAKUEISU, "50", null},
	{"xxPopPrm_D1", "xxPopPrm_D1", "D1", null, TYPE_HANKAKUEISU, "300", null},
	{"xxPopPrm_D2", "xxPopPrm_D2", "D2", null, TYPE_HANKAKUEISU, "300", null},
	{"prchReqSrcTpDescTxt_D1", "prchReqSrcTpDescTxt_D1", "D1", null, TYPE_HANKAKUEISU, "50", null},
	{"trxRefNum_D1", "trxRefNum_D1", "D1", null, TYPE_HANKAKUEISU, "15", null},
	{"prchReqCratByPsnCd_D1", "prchReqCratByPsnCd_D1", "D1", null, TYPE_HANKAKUEISU, "8", null},
	{"fullPsnNm_D1", "fullPsnNm_D1", "D1", null, TYPE_HANKAKUEISU, "62", null},
	{"lineBizTpCd_D1", "lineBizTpCd_D1", "D1", null, TYPE_HANKAKUEISU, "8", null},
	{"shpgSvcLvlDescTxt_D1", "shpgSvcLvlDescTxt_D1", "D1", null, TYPE_HANKAKUEISU, "50", null},
	{"carrNm_D1", "carrNm_D1", "D1", null, TYPE_HANKAKUEISU, "60", null},
	{"rqstTechTocCd_D1", "rqstTechTocCd_D1", "D1", null, TYPE_HANKAKUEISU, "8", null},
	{"techNm_D1", "techNm_D1", "D1", null, TYPE_HANKAKUEISU, "45", null},
	{"destRtlWhCd_D1", "destRtlWhCd_D1", "D1", null, TYPE_HANKAKUEISU, "20", null},
	{"rtlWhNm_D1", "rtlWhNm_D1", "D1", null, TYPE_HANKAKUEISU, "30", null},
	{"destRtlSwhCd_D1", "destRtlSwhCd_D1", "D1", null, TYPE_HANKAKUEISU, "20", null},
	{"rtlSwhNm_D1", "rtlSwhNm_D1", "D1", null, TYPE_HANKAKUEISU, "30", null},
	{"shipToCustCd_D1", "shipToCustCd_D1", "D1", null, TYPE_HANKAKUEISU, "20", null},
	{"locNm_D1", "locNm_D1", "D1", null, TYPE_HANKAKUEISU, "60", null},
	{"fsrNum_D1", "fsrNum_D1", "D1", null, TYPE_HANKAKUEISU, "10", null},
	{"svcTaskNum_D1", "svcTaskNum_D1", "D1", null, TYPE_HANKAKUEISU, "10", null},
	{"svcMachSerNum_D1", "svcMachSerNum_D1", "D1", null, TYPE_HANKAKUEISU, "30", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"PRCH_REQ_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prchReqNum_D1
        {"PRCH_REQ_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prchReqTpDescTxt_D1
        {"PRCH_REQ_STS_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prchReqStsDescTxt_D1
        {"PRCH_REQ_APVL_STS_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prchReqApvlStsDescTxt_D1
        {"XX_POP_PRM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPopPrm_D1
        {"XX_POP_PRM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPopPrm_D2
        {"PRCH_REQ_SRC_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prchReqSrcTpDescTxt_D1
        {"TRX_REF_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trxRefNum_D1
        {"PRCH_REQ_CRAT_BY_PSN_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prchReqCratByPsnCd_D1
        {"FULL_PSN_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//fullPsnNm_D1
        {"LINE_BIZ_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//lineBizTpCd_D1
        {"SHPG_SVC_LVL_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shpgSvcLvlDescTxt_D1
        {"CARR_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//carrNm_D1
        {"RQST_TECH_TOC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rqstTechTocCd_D1
        {"TECH_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//techNm_D1
        {"DEST_RTL_WH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//destRtlWhCd_D1
        {"RTL_WH_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlWhNm_D1
        {"DEST_RTL_SWH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//destRtlSwhCd_D1
        {"RTL_SWH_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlSwhNm_D1
        {"SHIP_TO_CUST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToCustCd_D1
        {"LOC_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//locNm_D1
        {"FSR_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//fsrNum_D1
        {"SVC_TASK_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTaskNum_D1
        {"SVC_MACH_SER_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachSerNum_D1
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

