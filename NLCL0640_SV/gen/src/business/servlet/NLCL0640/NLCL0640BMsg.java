//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20230511170853000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NLCL0640BMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NLCL0640;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NLCL0640 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NLCL0640BMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** TECH_TOC_CD*/
	public final EZDBStringItem              techTocCd;

    /** TECH_NM*/
	public final EZDBStringItem              techNm;

    /** PHYS_INVTY_DT*/
	public final EZDBDateItem              physInvtyDt;

    /** PHYS_INVTY_CTRL_NM*/
	public final EZDBStringItem              physInvtyCtrlNm;

    /** PHYS_INVTY_NUM*/
	public final EZDBStringItem              physInvtyNum;

    /** PHYS_INVTY_CNT_STS_CD*/
	public final EZDBStringItem              physInvtyCntStsCd;

    /** PHYS_INVTY_STS_DESC_TXT_01*/
	public final EZDBStringItem              physInvtyStsDescTxt_01;

    /** RTL_WH_CD*/
	public final EZDBStringItem              rtlWhCd;

    /** RTL_WH_NM*/
	public final EZDBStringItem              rtlWhNm;

    /** TECH_LOC_CD_PD*/
	public final EZDBStringItemArray              techLocCd_PD;

    /** LOC_NM_PD*/
	public final EZDBStringItemArray              locNm_PD;

    /** TECH_LOC_CD_SL*/
	public final EZDBStringItem              techLocCd_SL;

    /** MDSE_CD*/
	public final EZDBStringItem              mdseCd;

    /** MDSE_DESC_SHORT_TXT*/
	public final EZDBStringItem              mdseDescShortTxt;

    /** RCV_SER_TAKE_FLG*/
	public final EZDBStringItem              rcvSerTakeFlg;

    /** CNT_INP_QTY*/
	public final EZDBBigDecimalItem              cntInpQty;

    /** SER_NUM*/
	public final EZDBStringItem              serNum;

    /** T*/
	public final business.servlet.NLCL0640.NLCL0640_TBMsgArray              T;

    /** XX_PAGE_SHOW_FROM_NUM*/
	public final EZDBBigDecimalItem              xxPageShowFromNum;

    /** XX_PAGE_SHOW_TO_NUM*/
	public final EZDBBigDecimalItem              xxPageShowToNum;

    /** XX_PAGE_SHOW_OF_NUM*/
	public final EZDBBigDecimalItem              xxPageShowOfNum;

    /** A*/
	public final business.servlet.NLCL0640.NLCL0640_ABMsgArray              A;

    /** XX_FILE_DATA_UP*/
	public final EZDBMimeSourceItem              xxFileData_UP;

    /** XX_WRN_SKIP_FLG_A*/
	public final EZDBStringItem              xxWrnSkipFlg_A;


	/**
	 * NLCL0640BMsg is constructor.
	 * The initialization when the instance of NLCL0640BMsg is generated.
	 */
	public NLCL0640BMsg() {
		this(false, -1);
	}

	/**
	 * NLCL0640BMsg is constructor.
	 * The initialization when the instance of NLCL0640BMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NLCL0640BMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		techTocCd = (EZDBStringItem)newItem("techTocCd");
		techNm = (EZDBStringItem)newItem("techNm");
		physInvtyDt = (EZDBDateItem)newItem("physInvtyDt");
		physInvtyCtrlNm = (EZDBStringItem)newItem("physInvtyCtrlNm");
		physInvtyNum = (EZDBStringItem)newItem("physInvtyNum");
		physInvtyCntStsCd = (EZDBStringItem)newItem("physInvtyCntStsCd");
		physInvtyStsDescTxt_01 = (EZDBStringItem)newItem("physInvtyStsDescTxt_01");
		rtlWhCd = (EZDBStringItem)newItem("rtlWhCd");
		rtlWhNm = (EZDBStringItem)newItem("rtlWhNm");
		techLocCd_PD = (EZDBStringItemArray)newItemArray("techLocCd_PD");
		locNm_PD = (EZDBStringItemArray)newItemArray("locNm_PD");
		techLocCd_SL = (EZDBStringItem)newItem("techLocCd_SL");
		mdseCd = (EZDBStringItem)newItem("mdseCd");
		mdseDescShortTxt = (EZDBStringItem)newItem("mdseDescShortTxt");
		rcvSerTakeFlg = (EZDBStringItem)newItem("rcvSerTakeFlg");
		cntInpQty = (EZDBBigDecimalItem)newItem("cntInpQty");
		serNum = (EZDBStringItem)newItem("serNum");
		T = (business.servlet.NLCL0640.NLCL0640_TBMsgArray)newMsgArray("T");
		xxPageShowFromNum = (EZDBBigDecimalItem)newItem("xxPageShowFromNum");
		xxPageShowToNum = (EZDBBigDecimalItem)newItem("xxPageShowToNum");
		xxPageShowOfNum = (EZDBBigDecimalItem)newItem("xxPageShowOfNum");
		A = (business.servlet.NLCL0640.NLCL0640_ABMsgArray)newMsgArray("A");
		xxFileData_UP = (EZDBMimeSourceItem)newItem("xxFileData_UP");
		xxWrnSkipFlg_A = (EZDBStringItem)newItem("xxWrnSkipFlg_A");
	}

	/**
	 * get the type of array which is stored
	 * @return NLCL0640BMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NLCL0640BMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"techTocCd", "techTocCd", null, null, TYPE_HANKAKUEISU, "8", null},
	{"techNm", "techNm", null, null, TYPE_HANKAKUEISU, "45", null},
	{"physInvtyDt", "physInvtyDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"physInvtyCtrlNm", "physInvtyCtrlNm", null, null, TYPE_HANKAKUEISU, "100", null},
	{"physInvtyNum", "physInvtyNum", null, null, TYPE_HANKAKUEISU, "15", null},
	{"physInvtyCntStsCd", "physInvtyCntStsCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"physInvtyStsDescTxt_01", "physInvtyStsDescTxt_01", "01", null, TYPE_HANKAKUEISU, "50", null},
	{"rtlWhCd", "rtlWhCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"rtlWhNm", "rtlWhNm", null, null, TYPE_HANKAKUEISU, "30", null},
	{"techLocCd_PD", "techLocCd_PD", "PD", "99", TYPE_HANKAKUEISU, "20", null},
	{"locNm_PD", "locNm_PD", "PD", "99", TYPE_HANKAKUEISU, "60", null},
	{"techLocCd_SL", "techLocCd_SL", "SL", null, TYPE_HANKAKUEISU, "20", null},
	{"mdseCd", "mdseCd", null, null, TYPE_HANKAKUEISU, "16", null},
	{"mdseDescShortTxt", "mdseDescShortTxt", null, null, TYPE_HANKAKUEISU, "250", null},
	{"rcvSerTakeFlg", "rcvSerTakeFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"cntInpQty", "cntInpQty", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"serNum", "serNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"T", "T", null, "999", "business.servlet.NLCL0640.NLCL0640_TBMsgArray", null, null},
	
	{"xxPageShowFromNum", "xxPageShowFromNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowToNum", "xxPageShowToNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowOfNum", "xxPageShowOfNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"A", "A", null, "999", "business.servlet.NLCL0640.NLCL0640_ABMsgArray", null, null},
	
	{"xxFileData_UP", "xxFileData_UP", "UP", null, TYPE_UPLOAD, null, null},
	{"xxWrnSkipFlg_A", "xxWrnSkipFlg_A", "A", null, TYPE_HANKAKUEISU, "1", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"TECH_TOC_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//techTocCd
        {"TECH_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//techNm
        {"PHYS_INVTY_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//physInvtyDt
        {"PHYS_INVTY_CTRL_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//physInvtyCtrlNm
        {"PHYS_INVTY_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//physInvtyNum
        {"PHYS_INVTY_CNT_STS_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//physInvtyCntStsCd
        {"PHYS_INVTY_STS_DESC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//physInvtyStsDescTxt_01
        {"RTL_WH_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlWhCd
        {"RTL_WH_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlWhNm
        {"TECH_LOC_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//techLocCd_PD
        {"LOC_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//locNm_PD
        {"TECH_LOC_CD", YES,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//techLocCd_SL
        {"MDSE_CD", YES,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd
        {"MDSE_DESC_SHORT_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseDescShortTxt
        {"RCV_SER_TAKE_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rcvSerTakeFlg
        {"CNT_INP_QTY", YES,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cntInpQty
        {"SER_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNum
		null,	//T
        {"XX_PAGE_SHOW_FROM_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowFromNum
        {"XX_PAGE_SHOW_TO_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowToNum
        {"XX_PAGE_SHOW_OF_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowOfNum
		null,	//A
        {"XX_FILE_DATA",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxFileData_UP
        {"XX_WRN_SKIP_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxWrnSkipFlg_A
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

