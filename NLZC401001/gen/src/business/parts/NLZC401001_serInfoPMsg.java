//This file was automatically generated by Common Business Component Interface Definition Document and XLA200710010.
// Generated on    :20151102121349000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :CommonBusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NLZC401001_serInfoPMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.parts;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NLZC401001 Common Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NLZC401001_serInfoPMsg extends EZDPMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_PROC_TP_CD*/
	public final EZDPStringItem              xxProcTpCd;

    /** MDSE_CD*/
	public final EZDPStringItem              mdseCd;

    /** SER_NUM*/
	public final EZDPStringItem              serNum;

    /** SO_NUM*/
	public final EZDPStringItem              soNum;

    /** SO_SLP_NUM*/
	public final EZDPStringItem              soSlpNum;

    /** TRX_HDR_NUM*/
	public final EZDPStringItem              trxHdrNum;

    /** TRX_LINE_NUM*/
	public final EZDPStringItem              trxLineNum;

    /** TRX_LINE_SUB_NUM*/
	public final EZDPStringItem              trxLineSubNum;

    /** TRX_SRC_TP_CD*/
	public final EZDPStringItem              trxSrcTpCd;

    /** XX_RSLT_STS_CD*/
	public final EZDPStringItem              xxRsltStsCd;


	/**
	 * NLZC401001_serInfoPMsg is constructor.
	 * The initialization when the instance of NLZC401001_serInfoPMsg is generated.
	 */
	public NLZC401001_serInfoPMsg() {
		this(false, -1);
	}

	/**
	 * NLZC401001_serInfoPMsg is constructor.
	 * The initialization when the instance of NLZC401001_serInfoPMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NLZC401001_serInfoPMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxProcTpCd = (EZDPStringItem)newItem("xxProcTpCd");
		mdseCd = (EZDPStringItem)newItem("mdseCd");
		serNum = (EZDPStringItem)newItem("serNum");
		soNum = (EZDPStringItem)newItem("soNum");
		soSlpNum = (EZDPStringItem)newItem("soSlpNum");
		trxHdrNum = (EZDPStringItem)newItem("trxHdrNum");
		trxLineNum = (EZDPStringItem)newItem("trxLineNum");
		trxLineSubNum = (EZDPStringItem)newItem("trxLineSubNum");
		trxSrcTpCd = (EZDPStringItem)newItem("trxSrcTpCd");
		xxRsltStsCd = (EZDPStringItem)newItem("xxRsltStsCd");
	}

	/**
	 * get the type of array which is stored
	 * @return NLZC401001_serInfoPMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NLZC401001_serInfoPMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxProcTpCd", "xxProcTpCd", null, null, TYPE_HANKAKUEISU, "1", null},
	{"mdseCd", "mdseCd", null, null, TYPE_HANKAKUEISU, "16", null},
	{"serNum", "serNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"soNum", "soNum", null, null, TYPE_HANKAKUEISU, "8", null},
	{"soSlpNum", "soSlpNum", null, null, TYPE_HANKAKUEISU, "3", null},
	{"trxHdrNum", "trxHdrNum", null, null, TYPE_HANKAKUEISU, "8", null},
	{"trxLineNum", "trxLineNum", null, null, TYPE_HANKAKUEISU, "3", null},
	{"trxLineSubNum", "trxLineSubNum", null, null, TYPE_HANKAKUEISU, "3", null},
	{"trxSrcTpCd", "trxSrcTpCd", null, null, TYPE_HANKAKUEISU, "3", null},
	{"xxRsltStsCd", "xxRsltStsCd", null, null, TYPE_HANKAKUEISU, "1", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_PROC_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxProcTpCd
        {"MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd
        {"SER_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNum
        {"SO_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//soNum
        {"SO_SLP_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//soSlpNum
        {"TRX_HDR_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trxHdrNum
        {"TRX_LINE_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trxLineNum
        {"TRX_LINE_SUB_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trxLineSubNum
        {"TRX_SRC_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trxSrcTpCd
        {"XX_RSLT_STS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRsltStsCd
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

