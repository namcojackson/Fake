//This file was automatically generated by Common Business Component Interface Definition Document and XLA200710010.
// Generated on    :20200408161602000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :CommonBusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NMZC004002_xxBomListPMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.parts;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NMZC004002 Common Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NMZC004002_xxBomListPMsg extends EZDPMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** PRNT_MDSE_CD_C*/
	public final EZDPStringItem              prntMdseCd_C;

    /** MDSE_CMPSN_TP_CD_C*/
	public final EZDPStringItem              mdseCmpsnTpCd_C;

    /** CHILD_MDSE_CD_C*/
	public final EZDPStringItem              childMdseCd_C;

    /** CHILD_ORD_TAKE_MDSE_CD_C*/
	public final EZDPStringItem              childOrdTakeMdseCd_C;

    /** CHILD_KIT_MAT_CD_C*/
	public final EZDPStringItem              childKitMatCd_C;

    /** CHILD_MDSE_QTY_C*/
	public final EZDPBigDecimalItem              childMdseQty_C;

    /** EFF_FROM_DT_C*/
	public final EZDPDateItem              effFromDt_C;

    /** EFF_THRU_DT_C*/
	public final EZDPDateItem              effThruDt_C;

    /** ALLOC_RATIO_C*/
	public final EZDPBigDecimalItem              allocRatio_C;

    /** CHILD_BOM_CMPT_CD_C*/
	public final EZDPStringItem              childBomCmptCd_C;

    /** CHILD_BOM_CMPT_NM_C*/
	public final EZDPStringItem              childBomCmptNm_C;

    /** CHILD_BOM_PRC_AMT_C*/
	public final EZDPBigDecimalItem              childBomPrcAmt_C;

    /** MAIN_CMPSN_FLG_C*/
	public final EZDPStringItem              mainCmpsnFlg_C;

    /** CUSA_MDSE_CD_C*/
	public final EZDPStringItem              cusaMdseCd_C;

    /** PRNT_MDSE_CD_DC*/
	public final EZDPStringItem              prntMdseCd_DC;

    /** BASE_CMPT_FLG_DC*/
	public final EZDPStringItem              baseCmptFlg_DC;

    /** MND_CMPT_FLG_DC*/
	public final EZDPStringItem              mndCmptFlg_DC;

    /** PKG_UOM_CD_DC*/
	public final EZDPStringItem              pkgUomCd_DC;


	/**
	 * NMZC004002_xxBomListPMsg is constructor.
	 * The initialization when the instance of NMZC004002_xxBomListPMsg is generated.
	 */
	public NMZC004002_xxBomListPMsg() {
		this(false, -1);
	}

	/**
	 * NMZC004002_xxBomListPMsg is constructor.
	 * The initialization when the instance of NMZC004002_xxBomListPMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NMZC004002_xxBomListPMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		prntMdseCd_C = (EZDPStringItem)newItem("prntMdseCd_C");
		mdseCmpsnTpCd_C = (EZDPStringItem)newItem("mdseCmpsnTpCd_C");
		childMdseCd_C = (EZDPStringItem)newItem("childMdseCd_C");
		childOrdTakeMdseCd_C = (EZDPStringItem)newItem("childOrdTakeMdseCd_C");
		childKitMatCd_C = (EZDPStringItem)newItem("childKitMatCd_C");
		childMdseQty_C = (EZDPBigDecimalItem)newItem("childMdseQty_C");
		effFromDt_C = (EZDPDateItem)newItem("effFromDt_C");
		effThruDt_C = (EZDPDateItem)newItem("effThruDt_C");
		allocRatio_C = (EZDPBigDecimalItem)newItem("allocRatio_C");
		childBomCmptCd_C = (EZDPStringItem)newItem("childBomCmptCd_C");
		childBomCmptNm_C = (EZDPStringItem)newItem("childBomCmptNm_C");
		childBomPrcAmt_C = (EZDPBigDecimalItem)newItem("childBomPrcAmt_C");
		mainCmpsnFlg_C = (EZDPStringItem)newItem("mainCmpsnFlg_C");
		cusaMdseCd_C = (EZDPStringItem)newItem("cusaMdseCd_C");
		prntMdseCd_DC = (EZDPStringItem)newItem("prntMdseCd_DC");
		baseCmptFlg_DC = (EZDPStringItem)newItem("baseCmptFlg_DC");
		mndCmptFlg_DC = (EZDPStringItem)newItem("mndCmptFlg_DC");
		pkgUomCd_DC = (EZDPStringItem)newItem("pkgUomCd_DC");
	}

	/**
	 * get the type of array which is stored
	 * @return NMZC004002_xxBomListPMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NMZC004002_xxBomListPMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"prntMdseCd_C", "prntMdseCd_C", "C", null, TYPE_HANKAKUEISU, "16", null},
	{"mdseCmpsnTpCd_C", "mdseCmpsnTpCd_C", "C", null, TYPE_HANKAKUEISU, "2", null},
	{"childMdseCd_C", "childMdseCd_C", "C", null, TYPE_HANKAKUEISU, "16", null},
	{"childOrdTakeMdseCd_C", "childOrdTakeMdseCd_C", "C", null, TYPE_HANKAKUEISU, "8", null},
	{"childKitMatCd_C", "childKitMatCd_C", "C", null, TYPE_HANKAKUEISU, "12", null},
	{"childMdseQty_C", "childMdseQty_C", "C", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"effFromDt_C", "effFromDt_C", "C", null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt_C", "effThruDt_C", "C", null, TYPE_NENTSUKIHI, "8", null},
	{"allocRatio_C", "allocRatio_C", "C", null, TYPE_SEISU_SYOSU, "9", "5"},
	{"childBomCmptCd_C", "childBomCmptCd_C", "C", null, TYPE_HANKAKUEISU, "20", null},
	{"childBomCmptNm_C", "childBomCmptNm_C", "C", null, TYPE_HANKAKUEISU, "60", null},
	{"childBomPrcAmt_C", "childBomPrcAmt_C", "C", null, TYPE_SEISU_SYOSU, "19", "4"},
	{"mainCmpsnFlg_C", "mainCmpsnFlg_C", "C", null, TYPE_HANKAKUEISU, "1", null},
	{"cusaMdseCd_C", "cusaMdseCd_C", "C", null, TYPE_HANKAKUEISU, "16", null},
	{"prntMdseCd_DC", "prntMdseCd_DC", "DC", null, TYPE_HANKAKUEISU, "16", null},
	{"baseCmptFlg_DC", "baseCmptFlg_DC", "DC", null, TYPE_HANKAKUEISU, "1", null},
	{"mndCmptFlg_DC", "mndCmptFlg_DC", "DC", null, TYPE_HANKAKUEISU, "1", null},
	{"pkgUomCd_DC", "pkgUomCd_DC", "DC", null, TYPE_HANKAKUEISU, "4", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"PRNT_MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prntMdseCd_C
        {"MDSE_CMPSN_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCmpsnTpCd_C
        {"CHILD_MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//childMdseCd_C
        {"CHILD_ORD_TAKE_MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//childOrdTakeMdseCd_C
        {"CHILD_KIT_MAT_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//childKitMatCd_C
        {"CHILD_MDSE_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//childMdseQty_C
        {"EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effFromDt_C
        {"EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effThruDt_C
        {"ALLOC_RATIO",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//allocRatio_C
        {"CHILD_BOM_CMPT_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//childBomCmptCd_C
        {"CHILD_BOM_CMPT_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//childBomCmptNm_C
        {"CHILD_BOM_PRC_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//childBomPrcAmt_C
        {"MAIN_CMPSN_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mainCmpsnFlg_C
        {"CUSA_MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cusaMdseCd_C
        {"PRNT_MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prntMdseCd_DC
        {"BASE_CMPT_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//baseCmptFlg_DC
        {"MND_CMPT_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mndCmptFlg_DC
        {"PKG_UOM_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//pkgUomCd_DC
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

