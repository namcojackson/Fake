//This file was automatically generated by Text File Layout Definition Document and XLA200710010.
// Generated on    :20160601173246000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :TextFileLayoutDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NWAL2400F00FMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.file;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NWAL2400F00 File Layout Message class.
 * @author
 * @version XLA200710010
 */
public class NWAL2400F00FMsg extends EZDFMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** COA_BR_CD*/
	public final EZDFStringItem              coaBrCd;

    /** RTL_DLR_CD*/
	public final EZDFStringItem              rtlDlrCd;

    /** RTL_DIV_CD*/
	public final EZDFStringItem              rtlDivCd;

    /** DS_ORD_CATG_DESC_TXT*/
	public final EZDFStringItem              dsOrdCatgDescTxt;

    /** DS_ORD_TP_DESC_TXT*/
	public final EZDFStringItem              dsOrdTpDescTxt;

    /** RTL_WH_NM*/
	public final EZDFStringItem              rtlWhNm;

    /** BILL_TO_CUST_CD*/
	public final EZDFStringItem              billToCustCd;

    /** CONTR_GRP_CD*/
	public final EZDFStringItem              contrGrpCd;

    /** EFF_FROM_DT*/
	public final EZDFDateItem              effFromDt;

    /** EFF_THRU_DT*/
	public final EZDFDateItem              effThruDt;


	/**
	 * NWAL2400F00FMsg is constructor.
	 * The initialization when the instance of NWAL2400F00FMsg is generated.
	 */
	public NWAL2400F00FMsg() {
		this(false, -1);
	}

	/**
	 * NWAL2400F00FMsg is constructor.
	 * The initialization when the instance of NWAL2400F00FMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NWAL2400F00FMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		coaBrCd = (EZDFStringItem)newItem("coaBrCd");
		rtlDlrCd = (EZDFStringItem)newItem("rtlDlrCd");
		rtlDivCd = (EZDFStringItem)newItem("rtlDivCd");
		dsOrdCatgDescTxt = (EZDFStringItem)newItem("dsOrdCatgDescTxt");
		dsOrdTpDescTxt = (EZDFStringItem)newItem("dsOrdTpDescTxt");
		rtlWhNm = (EZDFStringItem)newItem("rtlWhNm");
		billToCustCd = (EZDFStringItem)newItem("billToCustCd");
		contrGrpCd = (EZDFStringItem)newItem("contrGrpCd");
		effFromDt = (EZDFDateItem)newItem("effFromDt");
		effThruDt = (EZDFDateItem)newItem("effThruDt");
	}

	/**
	 * get the type of array which is stored
	 * @return NWAL2400F00FMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NWAL2400F00FMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"coaBrCd", "coaBrCd", null, null, TYPE_HANKAKUEISU, "3", null},
	{"rtlDlrCd", "rtlDlrCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"rtlDivCd", "rtlDivCd", null, null, TYPE_HANKAKUEISU, "3", null},
	{"dsOrdCatgDescTxt", "dsOrdCatgDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"dsOrdTpDescTxt", "dsOrdTpDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"rtlWhNm", "rtlWhNm", null, null, TYPE_HANKAKUEISU, "30", null},
	{"billToCustCd", "billToCustCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"contrGrpCd", "contrGrpCd", null, null, TYPE_HANKAKUEISU, "3", null},
	{"effFromDt", "effFromDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt", "effThruDt", null, null, TYPE_NENTSUKIHI, "8", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"COA_BR_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaBrCd
        {"RTL_DLR_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlDlrCd
        {"RTL_DIV_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlDivCd
        {"DS_ORD_CATG_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdCatgDescTxt
        {"DS_ORD_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdTpDescTxt
        {"RTL_WH_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlWhNm
        {"BILL_TO_CUST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//billToCustCd
        {"CONTR_GRP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrGrpCd
        {"EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effFromDt
        {"EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effThruDt
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

