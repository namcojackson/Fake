//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20160808100803000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NWAL2400_ACMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NWAL2400;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NWAL2400 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NWAL2400_ACMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** _EZUpdateDateTime_A*/
	public final EZDCStringItem              ezUpTime_A;

    /** _EZUpTimeZone_A*/
	public final EZDCStringItem              ezUpTimeZone_A;

    /** XX_CHK_BOX_A*/
	public final EZDCStringItem              xxChkBox_A;

    /** COA_BR_CD_A*/
	public final EZDCStringItem              coaBrCd_A;

    /** COA_BR_DESC_TXT_A*/
	public final EZDCStringItem              coaBrDescTxt_A;

    /** RTL_DLR_CD_A*/
	public final EZDCStringItem              rtlDlrCd_A;

    /** RTL_DIV_CD_A*/
	public final EZDCStringItem              rtlDivCd_A;

    /** DS_ORD_CATG_CD_A*/
	public final EZDCStringItem              dsOrdCatgCd_A;

    /** DS_ORD_CATG_DESC_TXT_A*/
	public final EZDCStringItem              dsOrdCatgDescTxt_A;

    /** DS_ORD_TP_DESC_TXT_A*/
	public final EZDCStringItem              dsOrdTpDescTxt_A;

    /** RTL_WH_NM_A*/
	public final EZDCStringItem              rtlWhNm_A;

    /** BILL_TO_CUST_CD_A*/
	public final EZDCStringItem              billToCustCd_A;

    /** CONTR_GRP_CD_A*/
	public final EZDCStringItem              contrGrpCd_A;

    /** EFF_FROM_DT_A*/
	public final EZDCDateItem              effFromDt_A;

    /** EFF_THRU_DT_A*/
	public final EZDCDateItem              effThruDt_A;

    /** DS_RTL_DLR_INFO_PK_A*/
	public final EZDCBigDecimalItem              dsRtlDlrInfoPk_A;


	/**
	 * NWAL2400_ACMsg is constructor.
	 * The initialization when the instance of NWAL2400_ACMsg is generated.
	 */
	public NWAL2400_ACMsg() {
		this(false, -1);
	}

	/**
	 * NWAL2400_ACMsg is constructor.
	 * The initialization when the instance of NWAL2400_ACMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NWAL2400_ACMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		ezUpTime_A = (EZDCStringItem)newItem("ezUpTime_A");
		ezUpTimeZone_A = (EZDCStringItem)newItem("ezUpTimeZone_A");
		xxChkBox_A = (EZDCStringItem)newItem("xxChkBox_A");
		coaBrCd_A = (EZDCStringItem)newItem("coaBrCd_A");
		coaBrDescTxt_A = (EZDCStringItem)newItem("coaBrDescTxt_A");
		rtlDlrCd_A = (EZDCStringItem)newItem("rtlDlrCd_A");
		rtlDivCd_A = (EZDCStringItem)newItem("rtlDivCd_A");
		dsOrdCatgCd_A = (EZDCStringItem)newItem("dsOrdCatgCd_A");
		dsOrdCatgDescTxt_A = (EZDCStringItem)newItem("dsOrdCatgDescTxt_A");
		dsOrdTpDescTxt_A = (EZDCStringItem)newItem("dsOrdTpDescTxt_A");
		rtlWhNm_A = (EZDCStringItem)newItem("rtlWhNm_A");
		billToCustCd_A = (EZDCStringItem)newItem("billToCustCd_A");
		contrGrpCd_A = (EZDCStringItem)newItem("contrGrpCd_A");
		effFromDt_A = (EZDCDateItem)newItem("effFromDt_A");
		effThruDt_A = (EZDCDateItem)newItem("effThruDt_A");
		dsRtlDlrInfoPk_A = (EZDCBigDecimalItem)newItem("dsRtlDlrInfoPk_A");
	}

	/**
	 * get the type of array which is stored
	 * @return NWAL2400_ACMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NWAL2400_ACMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"ezUpTime_A", "ezUpTime_A", "A", null, TYPE_HANKAKUEISU, "17", null},
	{"ezUpTimeZone_A", "ezUpTimeZone_A", "A", null, TYPE_HANKAKUEISU, "5", null},
	{"xxChkBox_A", "xxChkBox_A", "A", null, TYPE_HANKAKUEIJI, "1", null},
	{"coaBrCd_A", "coaBrCd_A", "A", null, TYPE_HANKAKUEISU, "3", null},
	{"coaBrDescTxt_A", "coaBrDescTxt_A", "A", null, TYPE_HANKAKUEISU, "50", null},
	{"rtlDlrCd_A", "rtlDlrCd_A", "A", null, TYPE_HANKAKUEISU, "20", null},
	{"rtlDivCd_A", "rtlDivCd_A", "A", null, TYPE_HANKAKUEISU, "3", null},
	{"dsOrdCatgCd_A", "dsOrdCatgCd_A", "A", null, TYPE_HANKAKUEISU, "4", null},
	{"dsOrdCatgDescTxt_A", "dsOrdCatgDescTxt_A", "A", null, TYPE_HANKAKUEISU, "50", null},
	{"dsOrdTpDescTxt_A", "dsOrdTpDescTxt_A", "A", null, TYPE_HANKAKUEISU, "50", null},
	{"rtlWhNm_A", "rtlWhNm_A", "A", null, TYPE_HANKAKUEISU, "30", null},
	{"billToCustCd_A", "billToCustCd_A", "A", null, TYPE_HANKAKUEISU, "20", null},
	{"contrGrpCd_A", "contrGrpCd_A", "A", null, TYPE_HANKAKUEISU, "3", null},
	{"effFromDt_A", "effFromDt_A", "A", null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt_A", "effThruDt_A", "A", null, TYPE_NENTSUKIHI, "8", null},
	{"dsRtlDlrInfoPk_A", "dsRtlDlrInfoPk_A", "A", null, TYPE_SEISU_SYOSU, "28", "0"},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"_EZUpdateDateTime",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTime_A
        {"_EZUpTimeZone",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTimeZone_A
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_A
        {"COA_BR_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaBrCd_A
        {"COA_BR_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaBrDescTxt_A
        {"RTL_DLR_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlDlrCd_A
        {"RTL_DIV_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlDivCd_A
        {"DS_ORD_CATG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdCatgCd_A
        {"DS_ORD_CATG_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdCatgDescTxt_A
        {"DS_ORD_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdTpDescTxt_A
        {"RTL_WH_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlWhNm_A
        {"BILL_TO_CUST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//billToCustCd_A
        {"CONTR_GRP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrGrpCd_A
        {"EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effFromDt_A
        {"EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effThruDt_A
        {"DS_RTL_DLR_INFO_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsRtlDlrInfoPk_A
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

