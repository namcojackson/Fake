//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20180702185955000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSAL1150CMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NSAL1150;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL1150 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL1150CMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** GLBL_CMPY_CD*/
	public final EZDCStringItem              glblCmpyCd;

    /** SLS_DT*/
	public final EZDCDateItem              slsDt;

    /** SVC_TERM_COND_ATTRB_NM*/
	public final EZDCStringItem              svcTermCondAttrbNm;

    /** SVC_TERM_COND_ATTRB_PK*/
	public final EZDCBigDecimalItem              svcTermCondAttrbPk;

    /** XX_SCR_ITEM_20_TXT_TT*/
	public final EZDCStringItem              xxScrItem20Txt_TT;

    /** XX_SCR_ITEM_20_TXT_TC*/
	public final EZDCStringItem              xxScrItem20Txt_TC;

    /** XX_LINK_PROT_01*/
	public final EZDCStringItem              xxLinkProt_01;

    /** COND_SQL_TXT_CU*/
	public final EZDCStringItem              condSqlTxt_CU;

    /** XX_LINK_PROT_02*/
	public final EZDCStringItem              xxLinkProt_02;

    /** DS_ACCT_NM*/
	public final EZDCStringItem              dsAcctNm;

    /** XX_LINK_PROT_03*/
	public final EZDCStringItem              xxLinkProt_03;

    /** COND_SQL_TXT_CO*/
	public final EZDCStringItem              condSqlTxt_CO;

    /** XX_PAGE_SHOW_FROM_NUM*/
	public final EZDCBigDecimalItem              xxPageShowFromNum;

    /** XX_PAGE_SHOW_TO_NUM*/
	public final EZDCBigDecimalItem              xxPageShowToNum;

    /** XX_PAGE_SHOW_OF_NUM*/
	public final EZDCBigDecimalItem              xxPageShowOfNum;

    /** A*/
	public final business.blap.NSAL1150.NSAL1150_ACMsgArray              A;

    /** XX_SCR_EVENT_NM*/
	public final EZDCStringItem              xxScrEventNm;

    /** XX_FILE_DATA*/
	public final EZDCMimeSourceItem              xxFileData;

    /** XX_COMN_COL_ORD_TXT*/
	public final EZDCStringItem              xxComnColOrdTxt;


	/**
	 * NSAL1150CMsg is constructor.
	 * The initialization when the instance of NSAL1150CMsg is generated.
	 */
	public NSAL1150CMsg() {
		this(false, -1);
	}

	/**
	 * NSAL1150CMsg is constructor.
	 * The initialization when the instance of NSAL1150CMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL1150CMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		glblCmpyCd = (EZDCStringItem)newItem("glblCmpyCd");
		slsDt = (EZDCDateItem)newItem("slsDt");
		svcTermCondAttrbNm = (EZDCStringItem)newItem("svcTermCondAttrbNm");
		svcTermCondAttrbPk = (EZDCBigDecimalItem)newItem("svcTermCondAttrbPk");
		xxScrItem20Txt_TT = (EZDCStringItem)newItem("xxScrItem20Txt_TT");
		xxScrItem20Txt_TC = (EZDCStringItem)newItem("xxScrItem20Txt_TC");
		xxLinkProt_01 = (EZDCStringItem)newItem("xxLinkProt_01");
		condSqlTxt_CU = (EZDCStringItem)newItem("condSqlTxt_CU");
		xxLinkProt_02 = (EZDCStringItem)newItem("xxLinkProt_02");
		dsAcctNm = (EZDCStringItem)newItem("dsAcctNm");
		xxLinkProt_03 = (EZDCStringItem)newItem("xxLinkProt_03");
		condSqlTxt_CO = (EZDCStringItem)newItem("condSqlTxt_CO");
		xxPageShowFromNum = (EZDCBigDecimalItem)newItem("xxPageShowFromNum");
		xxPageShowToNum = (EZDCBigDecimalItem)newItem("xxPageShowToNum");
		xxPageShowOfNum = (EZDCBigDecimalItem)newItem("xxPageShowOfNum");
		A = (business.blap.NSAL1150.NSAL1150_ACMsgArray)newMsgArray("A");
		xxScrEventNm = (EZDCStringItem)newItem("xxScrEventNm");
		xxFileData = (EZDCMimeSourceItem)newItem("xxFileData");
		xxComnColOrdTxt = (EZDCStringItem)newItem("xxComnColOrdTxt");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL1150CMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL1150CMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"glblCmpyCd", "glblCmpyCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"slsDt", "slsDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"svcTermCondAttrbNm", "svcTermCondAttrbNm", null, null, TYPE_HANKAKUEISU, "30", null},
	{"svcTermCondAttrbPk", "svcTermCondAttrbPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"xxScrItem20Txt_TT", "xxScrItem20Txt_TT", "TT", null, TYPE_HANKAKUEISU, "20", null},
	{"xxScrItem20Txt_TC", "xxScrItem20Txt_TC", "TC", null, TYPE_HANKAKUEISU, "20", null},
	{"xxLinkProt_01", "xxLinkProt_01", "01", null, TYPE_HANKAKUEISU, "1", null},
	{"condSqlTxt_CU", "condSqlTxt_CU", "CU", null, TYPE_HANKAKUEISU, "4000", null},
	{"xxLinkProt_02", "xxLinkProt_02", "02", null, TYPE_HANKAKUEISU, "1", null},
	{"dsAcctNm", "dsAcctNm", null, null, TYPE_HANKAKUEISU, "360", null},
	{"xxLinkProt_03", "xxLinkProt_03", "03", null, TYPE_HANKAKUEISU, "1", null},
	{"condSqlTxt_CO", "condSqlTxt_CO", "CO", null, TYPE_HANKAKUEISU, "4000", null},
	{"xxPageShowFromNum", "xxPageShowFromNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowToNum", "xxPageShowToNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowOfNum", "xxPageShowOfNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"A", "A", null, "40", "business.blap.NSAL1150.NSAL1150_ACMsgArray", null, null},
	
	{"xxScrEventNm", "xxScrEventNm", null, null, TYPE_HANKAKUEISU, "50", null},
	{"xxFileData", "xxFileData", null, null, TYPE_UPLOAD, null, null},
	{"xxComnColOrdTxt", "xxComnColOrdTxt", null, null, TYPE_HANKAKUEISU, "2000", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"GLBL_CMPY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//glblCmpyCd
        {"SLS_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//slsDt
        {"SVC_TERM_COND_ATTRB_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTermCondAttrbNm
        {"SVC_TERM_COND_ATTRB_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTermCondAttrbPk
        {"XX_SCR_ITEM_20_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxScrItem20Txt_TT
        {"XX_SCR_ITEM_20_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxScrItem20Txt_TC
        {"XX_LINK_PROT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxLinkProt_01
        {"COND_SQL_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//condSqlTxt_CU
        {"XX_LINK_PROT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxLinkProt_02
        {"DS_ACCT_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctNm
        {"XX_LINK_PROT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxLinkProt_03
        {"COND_SQL_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//condSqlTxt_CO
        {"XX_PAGE_SHOW_FROM_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowFromNum
        {"XX_PAGE_SHOW_TO_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowToNum
        {"XX_PAGE_SHOW_OF_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowOfNum
		null,	//A
        {"XX_SCR_EVENT_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxScrEventNm
        {"XX_FILE_DATA",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxFileData
        {"XX_COMN_COL_ORD_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxComnColOrdTxt
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

