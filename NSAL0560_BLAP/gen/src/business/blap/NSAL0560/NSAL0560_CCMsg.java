//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20180517090200000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0560_CCMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NSAL0560;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL0560 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL0560_CCMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** DS_CONTR_PRC_EFF_PK_C*/
	public final EZDCBigDecimalItem              dsContrPrcEffPk_C;

    /** DS_CONTR_DTL_PK_C*/
	public final EZDCBigDecimalItem              dsContrDtlPk_C;

    /** SVC_MACH_MSTR_PK_C*/
	public final EZDCBigDecimalItem              svcMachMstrPk_C;

    /** CONTR_CLO_DAY_C*/
	public final EZDCStringItem              contrCloDay_C;

    /** BASE_BLLG_TMG_CD_C*/
	public final EZDCStringItem              baseBllgTmgCd_C;

    /** CONTR_BLLG_DAY_C*/
	public final EZDCStringItem              contrBllgDay_C;

    /** CONTR_EFF_FROM_DT_C*/
	public final EZDCDateItem              contrEffFromDt_C;

    /** CONTR_EFF_THRU_DT_C*/
	public final EZDCDateItem              contrEffThruDt_C;

    /** DS_CONTR_PRC_EFF_SQ_NUM_C*/
	public final EZDCBigDecimalItem              dsContrPrcEffSqNum_C;

    /** CONTR_PRC_EFF_FROM_DT_C*/
	public final EZDCDateItem              contrPrcEffFromDt_C;

    /** CONTR_PRC_EFF_THRU_DT_C*/
	public final EZDCDateItem              contrPrcEffThruDt_C;

    /** BLLG_CYCLE_CD_C*/
	public final EZDCStringItem              bllgCycleCd_C;

    /** BASE_PRC_DEAL_AMT_C*/
	public final EZDCBigDecimalItem              basePrcDealAmt_C;

    /** DS_CONTR_PRC_EFF_STS_CD_C*/
	public final EZDCStringItem              dsContrPrcEffStsCd_C;

    /** QLTY_ASRN_HLD_FLG_C*/
	public final EZDCStringItem              qltyAsrnHldFlg_C;

    /** MTR_HLD_FLG_C*/
	public final EZDCStringItem              mtrHldFlg_C;

    /** CONTR_HLD_FLG_C*/
	public final EZDCStringItem              contrHldFlg_C;

    /** BLLG_HLD_FLG_C*/
	public final EZDCStringItem              bllgHldFlg_C;


	/**
	 * NSAL0560_CCMsg is constructor.
	 * The initialization when the instance of NSAL0560_CCMsg is generated.
	 */
	public NSAL0560_CCMsg() {
		this(false, -1);
	}

	/**
	 * NSAL0560_CCMsg is constructor.
	 * The initialization when the instance of NSAL0560_CCMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL0560_CCMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		dsContrPrcEffPk_C = (EZDCBigDecimalItem)newItem("dsContrPrcEffPk_C");
		dsContrDtlPk_C = (EZDCBigDecimalItem)newItem("dsContrDtlPk_C");
		svcMachMstrPk_C = (EZDCBigDecimalItem)newItem("svcMachMstrPk_C");
		contrCloDay_C = (EZDCStringItem)newItem("contrCloDay_C");
		baseBllgTmgCd_C = (EZDCStringItem)newItem("baseBllgTmgCd_C");
		contrBllgDay_C = (EZDCStringItem)newItem("contrBllgDay_C");
		contrEffFromDt_C = (EZDCDateItem)newItem("contrEffFromDt_C");
		contrEffThruDt_C = (EZDCDateItem)newItem("contrEffThruDt_C");
		dsContrPrcEffSqNum_C = (EZDCBigDecimalItem)newItem("dsContrPrcEffSqNum_C");
		contrPrcEffFromDt_C = (EZDCDateItem)newItem("contrPrcEffFromDt_C");
		contrPrcEffThruDt_C = (EZDCDateItem)newItem("contrPrcEffThruDt_C");
		bllgCycleCd_C = (EZDCStringItem)newItem("bllgCycleCd_C");
		basePrcDealAmt_C = (EZDCBigDecimalItem)newItem("basePrcDealAmt_C");
		dsContrPrcEffStsCd_C = (EZDCStringItem)newItem("dsContrPrcEffStsCd_C");
		qltyAsrnHldFlg_C = (EZDCStringItem)newItem("qltyAsrnHldFlg_C");
		mtrHldFlg_C = (EZDCStringItem)newItem("mtrHldFlg_C");
		contrHldFlg_C = (EZDCStringItem)newItem("contrHldFlg_C");
		bllgHldFlg_C = (EZDCStringItem)newItem("bllgHldFlg_C");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL0560_CCMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL0560_CCMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"dsContrPrcEffPk_C", "dsContrPrcEffPk_C", "C", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrDtlPk_C", "dsContrDtlPk_C", "C", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"svcMachMstrPk_C", "svcMachMstrPk_C", "C", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"contrCloDay_C", "contrCloDay_C", "C", null, TYPE_HANKAKUSUJI, "2", null},
	{"baseBllgTmgCd_C", "baseBllgTmgCd_C", "C", null, TYPE_HANKAKUEISU, "2", null},
	{"contrBllgDay_C", "contrBllgDay_C", "C", null, TYPE_HANKAKUEISU, "4", null},
	{"contrEffFromDt_C", "contrEffFromDt_C", "C", null, TYPE_NENTSUKIHI, "8", null},
	{"contrEffThruDt_C", "contrEffThruDt_C", "C", null, TYPE_NENTSUKIHI, "8", null},
	{"dsContrPrcEffSqNum_C", "dsContrPrcEffSqNum_C", "C", null, TYPE_SEISU_SYOSU, "4", "0"},
	{"contrPrcEffFromDt_C", "contrPrcEffFromDt_C", "C", null, TYPE_NENTSUKIHI, "8", null},
	{"contrPrcEffThruDt_C", "contrPrcEffThruDt_C", "C", null, TYPE_NENTSUKIHI, "8", null},
	{"bllgCycleCd_C", "bllgCycleCd_C", "C", null, TYPE_HANKAKUEISU, "1", null},
	{"basePrcDealAmt_C", "basePrcDealAmt_C", "C", null, TYPE_SEISU_SYOSU, "19", "4"},
	{"dsContrPrcEffStsCd_C", "dsContrPrcEffStsCd_C", "C", null, TYPE_HANKAKUEISU, "4", null},
	{"qltyAsrnHldFlg_C", "qltyAsrnHldFlg_C", "C", null, TYPE_HANKAKUEISU, "1", null},
	{"mtrHldFlg_C", "mtrHldFlg_C", "C", null, TYPE_HANKAKUEISU, "1", null},
	{"contrHldFlg_C", "contrHldFlg_C", "C", null, TYPE_HANKAKUEISU, "1", null},
	{"bllgHldFlg_C", "bllgHldFlg_C", "C", null, TYPE_HANKAKUEISU, "1", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"DS_CONTR_PRC_EFF_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrPrcEffPk_C
        {"DS_CONTR_DTL_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrDtlPk_C
        {"SVC_MACH_MSTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachMstrPk_C
        {"CONTR_CLO_DAY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrCloDay_C
        {"BASE_BLLG_TMG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//baseBllgTmgCd_C
        {"CONTR_BLLG_DAY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrBllgDay_C
        {"CONTR_EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrEffFromDt_C
        {"CONTR_EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrEffThruDt_C
        {"DS_CONTR_PRC_EFF_SQ_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrPrcEffSqNum_C
        {"CONTR_PRC_EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrPrcEffFromDt_C
        {"CONTR_PRC_EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrPrcEffThruDt_C
        {"BLLG_CYCLE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgCycleCd_C
        {"BASE_PRC_DEAL_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//basePrcDealAmt_C
        {"DS_CONTR_PRC_EFF_STS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrPrcEffStsCd_C
        {"QLTY_ASRN_HLD_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//qltyAsrnHldFlg_C
        {"MTR_HLD_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrHldFlg_C
        {"CONTR_HLD_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrHldFlg_C
        {"BLLG_HLD_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgHldFlg_C
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

