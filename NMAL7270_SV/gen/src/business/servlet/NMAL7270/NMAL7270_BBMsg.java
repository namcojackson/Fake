//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20180912153217000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NMAL7270_BBMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NMAL7270;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NMAL7270 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NMAL7270_BBMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_CHK_BOX_B1*/
	public final EZDBStringItem              xxChkBox_B1;

    /** PRC_RULE_COND_GRP_CD_B1*/
	public final EZDBStringItem              prcRuleCondGrpCd_B1;

    /** PRC_RULE_DTL_CHRG_NM_B1*/
	public final EZDBStringItem              prcRuleDtlChrgNm_B1;

    /** PRC_RULE_MOD_TP_CD_B1*/
	public final EZDBStringItem              prcRuleModTpCd_B1;

    /** PRC_RULE_ADJ_TP_CD_B1*/
	public final EZDBStringItem              prcRuleAdjTpCd_B1;

    /** PRC_RULE_ATTRB_CD_B1*/
	public final EZDBStringItem              prcRuleAttrbCd_B1;

    /** PRC_RULE_ADJ_LVL_CD_B1*/
	public final EZDBStringItem              prcRuleAdjLvlCd_B1;

    /** PRC_FMLA_PK_B1*/
	public final EZDBBigDecimalItem              prcFmlaPk_B1;

    /** PRC_FMLA_NM_B1*/
	public final EZDBStringItem              prcFmlaNm_B1;

    /** PRC_RULE_DTL_RATE_B1*/
	public final EZDBBigDecimalItem              prcRuleDtlRate_B1;

    /** PRC_RULE_DTL_TXT_B1*/
	public final EZDBStringItem              prcRuleDtlTxt_B1;

    /** EFF_FROM_DT_B1*/
	public final EZDBDateItem              effFromDt_B1;

    /** EFF_THRU_DT_B1*/
	public final EZDBDateItem              effThruDt_B1;

    /** PRC_RULE_DTL_PK_B1*/
	public final EZDBBigDecimalItem              prcRuleDtlPk_B1;

    /** PRC_RULE_COND_GRP_PK_B1*/
	public final EZDBBigDecimalItem              prcRuleCondGrpPk_B1;

    /** PRC_RULE_COND_HDR_PK_B1*/
	public final EZDBBigDecimalItem              prcRuleCondHdrPk_B1;

    /** SPEC_COND_PRC_PK_B1*/
	public final EZDBBigDecimalItem              specCondPrcPk_B1;

    /** XX_FULL_NM_B1*/
	public final EZDBStringItem              xxFullNm_B1;

    /** CRAT_DT_B1*/
	public final EZDBDateItem              cratDt_B1;

    /** XX_FULL_NM_B2*/
	public final EZDBStringItem              xxFullNm_B2;

    /** LAST_UPD_DT_B1*/
	public final EZDBDateItem              lastUpdDt_B1;

    /** _EZUpdateDateTime_B1*/
	public final EZDBStringItem              ezUpTime_B1;

    /** _EZUpTimeZone_B1*/
	public final EZDBStringItem              ezUpTimeZone_B1;

    /** XX_REC_HIST_CRAT_TS_B1*/
	public final EZDBStringItem              xxRecHistCratTs_B1;

    /** XX_REC_HIST_CRAT_BY_NM_B1*/
	public final EZDBStringItem              xxRecHistCratByNm_B1;

    /** XX_REC_HIST_UPD_TS_B1*/
	public final EZDBStringItem              xxRecHistUpdTs_B1;

    /** XX_REC_HIST_UPD_BY_NM_B1*/
	public final EZDBStringItem              xxRecHistUpdByNm_B1;

    /** XX_REC_HIST_TBL_NM_B1*/
	public final EZDBStringItem              xxRecHistTblNm_B1;


	/**
	 * NMAL7270_BBMsg is constructor.
	 * The initialization when the instance of NMAL7270_BBMsg is generated.
	 */
	public NMAL7270_BBMsg() {
		this(false, -1);
	}

	/**
	 * NMAL7270_BBMsg is constructor.
	 * The initialization when the instance of NMAL7270_BBMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NMAL7270_BBMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxChkBox_B1 = (EZDBStringItem)newItem("xxChkBox_B1");
		prcRuleCondGrpCd_B1 = (EZDBStringItem)newItem("prcRuleCondGrpCd_B1");
		prcRuleDtlChrgNm_B1 = (EZDBStringItem)newItem("prcRuleDtlChrgNm_B1");
		prcRuleModTpCd_B1 = (EZDBStringItem)newItem("prcRuleModTpCd_B1");
		prcRuleAdjTpCd_B1 = (EZDBStringItem)newItem("prcRuleAdjTpCd_B1");
		prcRuleAttrbCd_B1 = (EZDBStringItem)newItem("prcRuleAttrbCd_B1");
		prcRuleAdjLvlCd_B1 = (EZDBStringItem)newItem("prcRuleAdjLvlCd_B1");
		prcFmlaPk_B1 = (EZDBBigDecimalItem)newItem("prcFmlaPk_B1");
		prcFmlaNm_B1 = (EZDBStringItem)newItem("prcFmlaNm_B1");
		prcRuleDtlRate_B1 = (EZDBBigDecimalItem)newItem("prcRuleDtlRate_B1");
		prcRuleDtlTxt_B1 = (EZDBStringItem)newItem("prcRuleDtlTxt_B1");
		effFromDt_B1 = (EZDBDateItem)newItem("effFromDt_B1");
		effThruDt_B1 = (EZDBDateItem)newItem("effThruDt_B1");
		prcRuleDtlPk_B1 = (EZDBBigDecimalItem)newItem("prcRuleDtlPk_B1");
		prcRuleCondGrpPk_B1 = (EZDBBigDecimalItem)newItem("prcRuleCondGrpPk_B1");
		prcRuleCondHdrPk_B1 = (EZDBBigDecimalItem)newItem("prcRuleCondHdrPk_B1");
		specCondPrcPk_B1 = (EZDBBigDecimalItem)newItem("specCondPrcPk_B1");
		xxFullNm_B1 = (EZDBStringItem)newItem("xxFullNm_B1");
		cratDt_B1 = (EZDBDateItem)newItem("cratDt_B1");
		xxFullNm_B2 = (EZDBStringItem)newItem("xxFullNm_B2");
		lastUpdDt_B1 = (EZDBDateItem)newItem("lastUpdDt_B1");
		ezUpTime_B1 = (EZDBStringItem)newItem("ezUpTime_B1");
		ezUpTimeZone_B1 = (EZDBStringItem)newItem("ezUpTimeZone_B1");
		xxRecHistCratTs_B1 = (EZDBStringItem)newItem("xxRecHistCratTs_B1");
		xxRecHistCratByNm_B1 = (EZDBStringItem)newItem("xxRecHistCratByNm_B1");
		xxRecHistUpdTs_B1 = (EZDBStringItem)newItem("xxRecHistUpdTs_B1");
		xxRecHistUpdByNm_B1 = (EZDBStringItem)newItem("xxRecHistUpdByNm_B1");
		xxRecHistTblNm_B1 = (EZDBStringItem)newItem("xxRecHistTblNm_B1");
	}

	/**
	 * get the type of array which is stored
	 * @return NMAL7270_BBMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NMAL7270_BBMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxChkBox_B1", "xxChkBox_B1", "B1", null, TYPE_HANKAKUEIJI, "1", null},
	{"prcRuleCondGrpCd_B1", "prcRuleCondGrpCd_B1", "B1", null, TYPE_HANKAKUEISU, "4", null},
	{"prcRuleDtlChrgNm_B1", "prcRuleDtlChrgNm_B1", "B1", null, TYPE_HANKAKUEISU, "50", null},
	{"prcRuleModTpCd_B1", "prcRuleModTpCd_B1", "B1", null, TYPE_HANKAKUEISU, "2", null},
	{"prcRuleAdjTpCd_B1", "prcRuleAdjTpCd_B1", "B1", null, TYPE_HANKAKUEISU, "2", null},
	{"prcRuleAttrbCd_B1", "prcRuleAttrbCd_B1", "B1", null, TYPE_HANKAKUEISU, "2", null},
	{"prcRuleAdjLvlCd_B1", "prcRuleAdjLvlCd_B1", "B1", null, TYPE_HANKAKUEISU, "2", null},
	{"prcFmlaPk_B1", "prcFmlaPk_B1", "B1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"prcFmlaNm_B1", "prcFmlaNm_B1", "B1", null, TYPE_HANKAKUEISU, "50", null},
	{"prcRuleDtlRate_B1", "prcRuleDtlRate_B1", "B1", null, TYPE_SEISU_SYOSU, "9", "5"},
	{"prcRuleDtlTxt_B1", "prcRuleDtlTxt_B1", "B1", null, TYPE_HANKAKUEISU, "50", null},
	{"effFromDt_B1", "effFromDt_B1", "B1", null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt_B1", "effThruDt_B1", "B1", null, TYPE_NENTSUKIHI, "8", null},
	{"prcRuleDtlPk_B1", "prcRuleDtlPk_B1", "B1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"prcRuleCondGrpPk_B1", "prcRuleCondGrpPk_B1", "B1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"prcRuleCondHdrPk_B1", "prcRuleCondHdrPk_B1", "B1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"specCondPrcPk_B1", "specCondPrcPk_B1", "B1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"xxFullNm_B1", "xxFullNm_B1", "B1", null, TYPE_HANKAKUEISU, "100", null},
	{"cratDt_B1", "cratDt_B1", "B1", null, TYPE_NENTSUKIHI, "8", null},
	{"xxFullNm_B2", "xxFullNm_B2", "B2", null, TYPE_HANKAKUEISU, "100", null},
	{"lastUpdDt_B1", "lastUpdDt_B1", "B1", null, TYPE_NENTSUKIHI, "8", null},
	{"ezUpTime_B1", "ezUpTime_B1", "B1", null, TYPE_HANKAKUEISU, "17", null},
	{"ezUpTimeZone_B1", "ezUpTimeZone_B1", "B1", null, TYPE_HANKAKUEISU, "5", null},
	{"xxRecHistCratTs_B1", "xxRecHistCratTs_B1", "B1", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistCratByNm_B1", "xxRecHistCratByNm_B1", "B1", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistUpdTs_B1", "xxRecHistUpdTs_B1", "B1", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistUpdByNm_B1", "xxRecHistUpdByNm_B1", "B1", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistTblNm_B1", "xxRecHistTblNm_B1", "B1", null, TYPE_HANKAKUEISU, "60", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_CHK_BOX",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_B1
        {"PRC_RULE_COND_GRP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleCondGrpCd_B1
        {"PRC_RULE_DTL_CHRG_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleDtlChrgNm_B1
        {"PRC_RULE_MOD_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleModTpCd_B1
        {"PRC_RULE_ADJ_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleAdjTpCd_B1
        {"PRC_RULE_ATTRB_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleAttrbCd_B1
        {"PRC_RULE_ADJ_LVL_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleAdjLvlCd_B1
        {"PRC_FMLA_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcFmlaPk_B1
        {"PRC_FMLA_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcFmlaNm_B1
        {"PRC_RULE_DTL_RATE",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleDtlRate_B1
        {"PRC_RULE_DTL_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleDtlTxt_B1
        {"EFF_FROM_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//effFromDt_B1
        {"EFF_THRU_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//effThruDt_B1
        {"PRC_RULE_DTL_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleDtlPk_B1
        {"PRC_RULE_COND_GRP_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleCondGrpPk_B1
        {"PRC_RULE_COND_HDR_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleCondHdrPk_B1
        {"SPEC_COND_PRC_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//specCondPrcPk_B1
        {"XX_FULL_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxFullNm_B1
        {"CRAT_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//cratDt_B1
        {"XX_FULL_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxFullNm_B2
        {"LAST_UPD_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//lastUpdDt_B1
        {"_EZUpdateDateTime",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTime_B1
        {"_EZUpTimeZone",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTimeZone_B1
        {"XX_REC_HIST_CRAT_TS",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratTs_B1
        {"XX_REC_HIST_CRAT_BY_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratByNm_B1
        {"XX_REC_HIST_UPD_TS",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdTs_B1
        {"XX_REC_HIST_UPD_BY_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdByNm_B1
        {"XX_REC_HIST_TBL_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistTblNm_B1
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

