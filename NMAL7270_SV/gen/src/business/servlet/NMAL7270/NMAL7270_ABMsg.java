//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20180912153217000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NMAL7270_ABMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NMAL7270;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NMAL7270 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NMAL7270_ABMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_CHK_BOX_A1*/
	public final EZDBStringItem              xxChkBox_A1;

    /** PRC_RULE_TRX_CATG_CD_A1*/
	public final EZDBStringItem              prcRuleTrxCatgCd_A1;

    /** PRC_RULE_ATTRB_CD_A1*/
	public final EZDBStringItem              prcRuleAttrbCd_A1;

    /** PRC_RULE_COND_FROM_TXT_A1*/
	public final EZDBStringItem              prcRuleCondFromTxt_A1;

    /** XX_REC_NM_TXT_A1*/
	public final EZDBStringItem              xxRecNmTxt_A1;

    /** PRC_RULE_COND_THRU_TXT_A1*/
	public final EZDBStringItem              prcRuleCondThruTxt_A1;

    /** PRC_RULE_COND_NUM_A1*/
	public final EZDBBigDecimalItem              prcRuleCondNum_A1;

    /** EFF_FROM_DT_A1*/
	public final EZDBDateItem              effFromDt_A1;

    /** EFF_THRU_DT_A1*/
	public final EZDBDateItem              effThruDt_A1;

    /** PRC_RULE_TRX_COND_PK_A1*/
	public final EZDBBigDecimalItem              prcRuleTrxCondPk_A1;

    /** XX_FROM_DT_A1*/
	public final EZDBDateItem              xxFromDt_A1;

    /** XX_THRU_DT_A1*/
	public final EZDBDateItem              xxThruDt_A1;

    /** XX_FULL_NM_A1*/
	public final EZDBStringItem              xxFullNm_A1;

    /** CRAT_DT_A1*/
	public final EZDBDateItem              cratDt_A1;

    /** XX_FULL_NM_A2*/
	public final EZDBStringItem              xxFullNm_A2;

    /** LAST_UPD_DT_A1*/
	public final EZDBDateItem              lastUpdDt_A1;

    /** _EZUpdateDateTime_A1*/
	public final EZDBStringItem              ezUpTime_A1;

    /** _EZUpTimeZone_A1*/
	public final EZDBStringItem              ezUpTimeZone_A1;

    /** XX_REC_HIST_CRAT_TS_A1*/
	public final EZDBStringItem              xxRecHistCratTs_A1;

    /** XX_REC_HIST_CRAT_BY_NM_A1*/
	public final EZDBStringItem              xxRecHistCratByNm_A1;

    /** XX_REC_HIST_UPD_TS_A1*/
	public final EZDBStringItem              xxRecHistUpdTs_A1;

    /** XX_REC_HIST_UPD_BY_NM_A1*/
	public final EZDBStringItem              xxRecHistUpdByNm_A1;

    /** XX_REC_HIST_TBL_NM_A1*/
	public final EZDBStringItem              xxRecHistTblNm_A1;


	/**
	 * NMAL7270_ABMsg is constructor.
	 * The initialization when the instance of NMAL7270_ABMsg is generated.
	 */
	public NMAL7270_ABMsg() {
		this(false, -1);
	}

	/**
	 * NMAL7270_ABMsg is constructor.
	 * The initialization when the instance of NMAL7270_ABMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NMAL7270_ABMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxChkBox_A1 = (EZDBStringItem)newItem("xxChkBox_A1");
		prcRuleTrxCatgCd_A1 = (EZDBStringItem)newItem("prcRuleTrxCatgCd_A1");
		prcRuleAttrbCd_A1 = (EZDBStringItem)newItem("prcRuleAttrbCd_A1");
		prcRuleCondFromTxt_A1 = (EZDBStringItem)newItem("prcRuleCondFromTxt_A1");
		xxRecNmTxt_A1 = (EZDBStringItem)newItem("xxRecNmTxt_A1");
		prcRuleCondThruTxt_A1 = (EZDBStringItem)newItem("prcRuleCondThruTxt_A1");
		prcRuleCondNum_A1 = (EZDBBigDecimalItem)newItem("prcRuleCondNum_A1");
		effFromDt_A1 = (EZDBDateItem)newItem("effFromDt_A1");
		effThruDt_A1 = (EZDBDateItem)newItem("effThruDt_A1");
		prcRuleTrxCondPk_A1 = (EZDBBigDecimalItem)newItem("prcRuleTrxCondPk_A1");
		xxFromDt_A1 = (EZDBDateItem)newItem("xxFromDt_A1");
		xxThruDt_A1 = (EZDBDateItem)newItem("xxThruDt_A1");
		xxFullNm_A1 = (EZDBStringItem)newItem("xxFullNm_A1");
		cratDt_A1 = (EZDBDateItem)newItem("cratDt_A1");
		xxFullNm_A2 = (EZDBStringItem)newItem("xxFullNm_A2");
		lastUpdDt_A1 = (EZDBDateItem)newItem("lastUpdDt_A1");
		ezUpTime_A1 = (EZDBStringItem)newItem("ezUpTime_A1");
		ezUpTimeZone_A1 = (EZDBStringItem)newItem("ezUpTimeZone_A1");
		xxRecHistCratTs_A1 = (EZDBStringItem)newItem("xxRecHistCratTs_A1");
		xxRecHistCratByNm_A1 = (EZDBStringItem)newItem("xxRecHistCratByNm_A1");
		xxRecHistUpdTs_A1 = (EZDBStringItem)newItem("xxRecHistUpdTs_A1");
		xxRecHistUpdByNm_A1 = (EZDBStringItem)newItem("xxRecHistUpdByNm_A1");
		xxRecHistTblNm_A1 = (EZDBStringItem)newItem("xxRecHistTblNm_A1");
	}

	/**
	 * get the type of array which is stored
	 * @return NMAL7270_ABMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NMAL7270_ABMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxChkBox_A1", "xxChkBox_A1", "A1", null, TYPE_HANKAKUEIJI, "1", null},
	{"prcRuleTrxCatgCd_A1", "prcRuleTrxCatgCd_A1", "A1", null, TYPE_HANKAKUEISU, "2", null},
	{"prcRuleAttrbCd_A1", "prcRuleAttrbCd_A1", "A1", null, TYPE_HANKAKUEISU, "2", null},
	{"prcRuleCondFromTxt_A1", "prcRuleCondFromTxt_A1", "A1", null, TYPE_HANKAKUEISU, "50", null},
	{"xxRecNmTxt_A1", "xxRecNmTxt_A1", "A1", null, TYPE_HANKAKUEISU, "500", null},
	{"prcRuleCondThruTxt_A1", "prcRuleCondThruTxt_A1", "A1", null, TYPE_HANKAKUEISU, "50", null},
	{"prcRuleCondNum_A1", "prcRuleCondNum_A1", "A1", null, TYPE_SEISU_SYOSU, "3", "0"},
	{"effFromDt_A1", "effFromDt_A1", "A1", null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt_A1", "effThruDt_A1", "A1", null, TYPE_NENTSUKIHI, "8", null},
	{"prcRuleTrxCondPk_A1", "prcRuleTrxCondPk_A1", "A1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"xxFromDt_A1", "xxFromDt_A1", "A1", null, TYPE_NENTSUKIHI, "8", null},
	{"xxThruDt_A1", "xxThruDt_A1", "A1", null, TYPE_NENTSUKIHI, "8", null},
	{"xxFullNm_A1", "xxFullNm_A1", "A1", null, TYPE_HANKAKUEISU, "100", null},
	{"cratDt_A1", "cratDt_A1", "A1", null, TYPE_NENTSUKIHI, "8", null},
	{"xxFullNm_A2", "xxFullNm_A2", "A2", null, TYPE_HANKAKUEISU, "100", null},
	{"lastUpdDt_A1", "lastUpdDt_A1", "A1", null, TYPE_NENTSUKIHI, "8", null},
	{"ezUpTime_A1", "ezUpTime_A1", "A1", null, TYPE_HANKAKUEISU, "17", null},
	{"ezUpTimeZone_A1", "ezUpTimeZone_A1", "A1", null, TYPE_HANKAKUEISU, "5", null},
	{"xxRecHistCratTs_A1", "xxRecHistCratTs_A1", "A1", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistCratByNm_A1", "xxRecHistCratByNm_A1", "A1", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistUpdTs_A1", "xxRecHistUpdTs_A1", "A1", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistUpdByNm_A1", "xxRecHistUpdByNm_A1", "A1", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistTblNm_A1", "xxRecHistTblNm_A1", "A1", null, TYPE_HANKAKUEISU, "60", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_CHK_BOX",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_A1
        {"PRC_RULE_TRX_CATG_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleTrxCatgCd_A1
        {"PRC_RULE_ATTRB_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleAttrbCd_A1
        {"PRC_RULE_COND_FROM_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleCondFromTxt_A1
        {"XX_REC_NM_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecNmTxt_A1
        {"PRC_RULE_COND_THRU_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleCondThruTxt_A1
        {"PRC_RULE_COND_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleCondNum_A1
        {"EFF_FROM_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//effFromDt_A1
        {"EFF_THRU_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//effThruDt_A1
        {"PRC_RULE_TRX_COND_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleTrxCondPk_A1
        {"XX_FROM_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//xxFromDt_A1
        {"XX_THRU_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//xxThruDt_A1
        {"XX_FULL_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxFullNm_A1
        {"CRAT_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//cratDt_A1
        {"XX_FULL_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxFullNm_A2
        {"LAST_UPD_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//lastUpdDt_A1
        {"_EZUpdateDateTime",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTime_A1
        {"_EZUpTimeZone",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTimeZone_A1
        {"XX_REC_HIST_CRAT_TS",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratTs_A1
        {"XX_REC_HIST_CRAT_BY_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratByNm_A1
        {"XX_REC_HIST_UPD_TS",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdTs_A1
        {"XX_REC_HIST_UPD_BY_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdByNm_A1
        {"XX_REC_HIST_TBL_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistTblNm_A1
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

