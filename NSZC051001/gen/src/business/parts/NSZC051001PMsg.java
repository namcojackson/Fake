//This file was automatically generated by Common Business Component Interface Definition Document and XLA200710010.
// Generated on    :20180208144850000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :CommonBusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSZC051001PMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.parts;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSZC051001 Common Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSZC051001PMsg extends EZDPMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** GLBL_CMPY_CD*/
	public final EZDPStringItem              glblCmpyCd;

    /** MTR_READ_SRC_TP_CD*/
	public final EZDPStringItem              mtrReadSrcTpCd;

    /** DS_MTR_READ_TP_CD*/
	public final EZDPStringItem              dsMtrReadTpCd;

    /** SLS_DT*/
	public final EZDPDateItem              slsDt;

    /** RGTN_USR_ID*/
	public final EZDPStringItem              rgtnUsrId;

    /** SVC_MACH_MSTR_PK*/
	public final EZDPBigDecimalItem              svcMachMstrPk;

    /** SER_NUM*/
	public final EZDPStringItem              serNum;

    /** MDSE_CD*/
	public final EZDPStringItem              mdseCd;

    /** MTR_READ_DT*/
	public final EZDPDateItem              mtrReadDt;

    /** RGTN_MTR_DT*/
	public final EZDPDateItem              rgtnMtrDt;

    /** FSR_NUM*/
	public final EZDPStringItem              fsrNum;

    /** FSR_VISIT_NUM*/
	public final EZDPStringItem              fsrVisitNum;

    /** DS_MTR_READ_TP_GRP_CD*/
	public final EZDPStringItem              dsMtrReadTpGrpCd;

    /** XX_RQST_FLG_WR*/
	public final EZDPStringItem              xxRqstFlg_WR;

    /** MDSE_CD_O*/
	public final EZDPStringItem              mdseCd_O;

    /** DS_MTR_PROC_STS_CD*/
	public final EZDPStringItem              dsMtrProcStsCd;

    /** DS_MSG_TXT*/
	public final EZDPStringItem              dsMsgTxt;

    /** meterList*/
	public final business.parts.NSZC051001_meterListPMsgArray              meterList;

    /** XX_RSLT_STS_CD*/
	public final EZDPStringItem              xxRsltStsCd;

    /** rsltPrmList*/
	public final business.parts.NSZC051001_rsltPrmListPMsgArray              rsltPrmList;

    /** xxMsgIdList*/
	public final business.parts.NSZC051001_xxMsgIdListPMsgArray              xxMsgIdList;


	/**
	 * NSZC051001PMsg is constructor.
	 * The initialization when the instance of NSZC051001PMsg is generated.
	 */
	public NSZC051001PMsg() {
		this(false, -1);
	}

	/**
	 * NSZC051001PMsg is constructor.
	 * The initialization when the instance of NSZC051001PMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSZC051001PMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		glblCmpyCd = (EZDPStringItem)newItem("glblCmpyCd");
		mtrReadSrcTpCd = (EZDPStringItem)newItem("mtrReadSrcTpCd");
		dsMtrReadTpCd = (EZDPStringItem)newItem("dsMtrReadTpCd");
		slsDt = (EZDPDateItem)newItem("slsDt");
		rgtnUsrId = (EZDPStringItem)newItem("rgtnUsrId");
		svcMachMstrPk = (EZDPBigDecimalItem)newItem("svcMachMstrPk");
		serNum = (EZDPStringItem)newItem("serNum");
		mdseCd = (EZDPStringItem)newItem("mdseCd");
		mtrReadDt = (EZDPDateItem)newItem("mtrReadDt");
		rgtnMtrDt = (EZDPDateItem)newItem("rgtnMtrDt");
		fsrNum = (EZDPStringItem)newItem("fsrNum");
		fsrVisitNum = (EZDPStringItem)newItem("fsrVisitNum");
		dsMtrReadTpGrpCd = (EZDPStringItem)newItem("dsMtrReadTpGrpCd");
		xxRqstFlg_WR = (EZDPStringItem)newItem("xxRqstFlg_WR");
		mdseCd_O = (EZDPStringItem)newItem("mdseCd_O");
		dsMtrProcStsCd = (EZDPStringItem)newItem("dsMtrProcStsCd");
		dsMsgTxt = (EZDPStringItem)newItem("dsMsgTxt");
		meterList = (business.parts.NSZC051001_meterListPMsgArray)newMsgArray("meterList");
		xxRsltStsCd = (EZDPStringItem)newItem("xxRsltStsCd");
		rsltPrmList = (business.parts.NSZC051001_rsltPrmListPMsgArray)newMsgArray("rsltPrmList");
		xxMsgIdList = (business.parts.NSZC051001_xxMsgIdListPMsgArray)newMsgArray("xxMsgIdList");
	}

	/**
	 * get the type of array which is stored
	 * @return NSZC051001PMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSZC051001PMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"glblCmpyCd", "glblCmpyCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"mtrReadSrcTpCd", "mtrReadSrcTpCd", null, null, TYPE_HANKAKUEISU, "5", null},
	{"dsMtrReadTpCd", "dsMtrReadTpCd", null, null, TYPE_HANKAKUEISU, "10", null},
	{"slsDt", "slsDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"rgtnUsrId", "rgtnUsrId", null, null, TYPE_HANKAKUEISU, "16", null},
	{"svcMachMstrPk", "svcMachMstrPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"serNum", "serNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"mdseCd", "mdseCd", null, null, TYPE_HANKAKUEISU, "16", null},
	{"mtrReadDt", "mtrReadDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"rgtnMtrDt", "rgtnMtrDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"fsrNum", "fsrNum", null, null, TYPE_HANKAKUEISU, "10", null},
	{"fsrVisitNum", "fsrVisitNum", null, null, TYPE_HANKAKUEISU, "10", null},
	{"dsMtrReadTpGrpCd", "dsMtrReadTpGrpCd", null, null, TYPE_HANKAKUEISU, "10", null},
	{"xxRqstFlg_WR", "xxRqstFlg_WR", "WR", null, TYPE_HANKAKUEISU, "1", null},
	{"mdseCd_O", "mdseCd_O", "O", null, TYPE_HANKAKUEISU, "16", null},
	{"dsMtrProcStsCd", "dsMtrProcStsCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"dsMsgTxt", "dsMsgTxt", null, null, TYPE_HANKAKUEISU, "1000", null},
	{"meterList", "meterList", null, "1000", "business.parts.NSZC051001_meterListPMsgArray", null, null},
	
	{"xxRsltStsCd", "xxRsltStsCd", null, null, TYPE_HANKAKUEISU, "1", null},
	{"rsltPrmList", "rsltPrmList", null, "1000", "business.parts.NSZC051001_rsltPrmListPMsgArray", null, null},
	
	{"xxMsgIdList", "xxMsgIdList", null, "1000", "business.parts.NSZC051001_xxMsgIdListPMsgArray", null, null},
	
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"GLBL_CMPY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//glblCmpyCd
        {"MTR_READ_SRC_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrReadSrcTpCd
        {"DS_MTR_READ_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsMtrReadTpCd
        {"SLS_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//slsDt
        {"RGTN_USR_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rgtnUsrId
        {"SVC_MACH_MSTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachMstrPk
        {"SER_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNum
        {"MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd
        {"MTR_READ_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrReadDt
        {"RGTN_MTR_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rgtnMtrDt
        {"FSR_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//fsrNum
        {"FSR_VISIT_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//fsrVisitNum
        {"DS_MTR_READ_TP_GRP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsMtrReadTpGrpCd
        {"XX_RQST_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRqstFlg_WR
        {"MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd_O
        {"DS_MTR_PROC_STS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsMtrProcStsCd
        {"DS_MSG_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsMsgTxt
		null,	//meterList
        {"XX_RSLT_STS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRsltStsCd
		null,	//rsltPrmList
		null,	//xxMsgIdList
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

