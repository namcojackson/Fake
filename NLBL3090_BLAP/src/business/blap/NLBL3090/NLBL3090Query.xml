<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<sqlMap namespace="NLBL3090Query">
    <typeAlias alias="SCHD_COORD_ASG_RELNTMsg"     type="business.db.SCHD_COORD_ASG_RELNTMsg"/>
    <typeAlias alias="NLBL3090_BSMsg"              type="business.blap.NLBL3090.NLBL3090_BSMsg"/>

    <statement id="searchAssign" parameterClass="Map" resultClass="Map">
        SELECT
            R.MGR_PSN_CD
            ,R.PSN_FIRST_NM_M
            ,R.PSN_LAST_NM_M
            ,R.SUPV_PSN_CD
            ,R.PSN_FIRST_NM_S
            ,R.PSN_LAST_NM_S
            ,R.SCHD_COORD_PSN_CD
            ,R.PSN_FIRST_NM_C
            ,R.PSN_LAST_NM_C
            ,R.ST_CD
            ,R.EFF_FROM_DT
            ,R.EFF_THRU_DT
            ,R.CARR_CD
            ,R.LOC_NM
            ,R.CARR_CTAC_EML_ADDR
            ,R.CARR_CTAC_TEL_NUM
            ,R.RTL_WH_CD
            ,R.SCHD_COORD_ASG_RELN_PK
            ,R.EZUPTIME
            ,R.EZUPTIMEZONE
        FROM (
            SELECT
                SCAR.MGR_PSN_CD
                ,SPM.PSN_FIRST_NM AS PSN_FIRST_NM_M
                ,SPM.PSN_LAST_NM AS PSN_LAST_NM_M
                ,SCAR.SUPV_PSN_CD
                ,SPS.PSN_FIRST_NM AS PSN_FIRST_NM_S
                ,SPS.PSN_LAST_NM AS PSN_LAST_NM_S
                ,SCAR.SCHD_COORD_PSN_CD
                ,SPC.PSN_FIRST_NM AS PSN_FIRST_NM_C
                ,SPC.PSN_LAST_NM AS PSN_LAST_NM_C
                ,SCA.ST_CD
                ,SCA.EFF_FROM_DT
                ,SCA.EFF_THRU_DT
                ,SCA.CARR_CD
                ,VND.LOC_NM
                ,SCA.CARR_CTAC_EML_ADDR
                ,SCA.CARR_CTAC_TEL_NUM
                ,SCAR.RTL_WH_CD
                ,SCAR.SCHD_COORD_ASG_RELN_PK
                ,SCAR.EZUPTIME
                ,SCAR.EZUPTIMEZONE
            FROM
                SCHD_COORD_ASG_RELN SCAR
                ,SCHD_COORD_ASG SCA
                ,VND VND
                ,S21_PSN SPM
                ,S21_PSN SPS
                ,S21_PSN SPC
            WHERE
                    SCAR.GLBL_CMPY_CD = #glblCmpyCd#
                AND SCAR.EZCANCELFLAG = '0'
                AND SCAR.RTL_WH_CD = #rtlWhCd#
                AND SCA.GLBL_CMPY_CD(+) = SCAR.GLBL_CMPY_CD
                AND SCA.SCHD_COORD_PSN_CD(+) = SCAR.SCHD_COORD_PSN_CD
                AND SCA.RTL_WH_CD(+) = SCAR.RTL_WH_CD
                AND SCA.EZCANCELFLAG(+) = '0'
                AND VND.GLBL_CMPY_CD(+) = SCA.GLBL_CMPY_CD
                AND VND.VND_CD(+) = SCA.CARR_CD
                AND VND.EZCANCELFLAG(+) = '0'
                AND SPM.GLBL_CMPY_CD(+) = SCAR.GLBL_CMPY_CD
                AND SPM.PSN_CD(+) = SCAR.MGR_PSN_CD
                AND SPM.EZCANCELFLAG(+) = '0'
                AND SPS.GLBL_CMPY_CD(+) = SCAR.GLBL_CMPY_CD
                AND SPS.PSN_CD(+) = SCAR.SUPV_PSN_CD
                AND SPS.EZCANCELFLAG(+) = '0'
                AND SPC.GLBL_CMPY_CD(+) = SCAR.GLBL_CMPY_CD
                AND SPC.PSN_CD(+) = SCAR.SCHD_COORD_PSN_CD
                AND SPC.EZCANCELFLAG(+) = '0'
            <isNotNull property="mgrPsnCd">
                AND SCAR.MGR_PSN_CD = #mgrPsnCd#
            </isNotNull>
            <isNotNull property="supvPsnCd">
                AND SCAR.SUPV_PSN_CD = #supvPsnCd#
            </isNotNull>
            <isNotNull property="schdCoordPsnCd">
                AND SCAR.SCHD_COORD_PSN_CD = #schdCoordPsnCd#
            </isNotNull>
            <isNotNull property="effFromDt">
                AND SCA.EFF_FROM_DT &gt;= #effFromDt#
            </isNotNull>
            <isNotNull property="effThruDt">
                AND NVL(SCA.EFF_THRU_DT, #effThruDtDefalut#) &lt;= #effThruDt#
            </isNotNull>
            ORDER BY
                SCAR.MGR_PSN_CD
                ,SCAR.SUPV_PSN_CD
                ,SCAR.SCHD_COORD_PSN_CD
        ) R
    </statement>

    <statement id="searchCoordination" parameterClass="Map" resultClass="Map">
        SELECT
            R.SCHD_COORD_PSN_CD
            ,R.PSN_FIRST_NM_C
            ,R.PSN_LAST_NM_C
            ,R.ST_CD
            ,R.EFF_FROM_DT
            ,R.EFF_THRU_DT
            ,R.CARR_CD
            ,R.LOC_NM
            ,R.CARR_CTAC_EML_ADDR
            ,R.CARR_CTAC_TEL_NUM
            ,R.RTL_WH_CD
            ,R.EZUPTIME
            ,R.EZUPTIMEZONE
            ,R.ROW_ID
        FROM (
            SELECT
                SCA.SCHD_COORD_PSN_CD
                ,SPC.PSN_FIRST_NM AS PSN_FIRST_NM_C
                ,SPC.PSN_LAST_NM AS PSN_LAST_NM_C
                ,SCA.ST_CD
                ,SCA.EFF_FROM_DT
                ,SCA.EFF_THRU_DT
                ,SCA.CARR_CD
                ,VND.LOC_NM
                ,SCA.CARR_CTAC_EML_ADDR
                ,SCA.CARR_CTAC_TEL_NUM
                ,SCA.RTL_WH_CD
                ,SCA.EZUPTIME
                ,SCA.EZUPTIMEZONE
                ,SCA.ROWID || '' AS ROW_ID
            FROM
                SCHD_COORD_ASG SCA
                ,VND VND
                ,S21_PSN SPC
            WHERE
                    SCA.GLBL_CMPY_CD = #glblCmpyCd#
                AND SCA.EZCANCELFLAG = '0'
                AND SCA.RTL_WH_CD = #rtlWhCd#
                AND VND.GLBL_CMPY_CD(+) = SCA.GLBL_CMPY_CD
                AND VND.VND_CD(+) = SCA.CARR_CD
                AND VND.EZCANCELFLAG(+) = '0'
                AND SPC.GLBL_CMPY_CD(+) = SCA.GLBL_CMPY_CD
                AND SPC.PSN_CD(+) = SCA.SCHD_COORD_PSN_CD
                AND SPC.EZCANCELFLAG(+) = '0'
            <isNotNull property="schdCoordPsnCd">
                AND SCA.SCHD_COORD_PSN_CD = #schdCoordPsnCd#
            </isNotNull>
            <isNotNull property="effFromDt">
                AND SCA.EFF_FROM_DT &gt;= #effFromDt#
            </isNotNull>
            <isNotNull property="effThruDt">
                AND NVL(SCA.EFF_THRU_DT, #effThruDtDefalut#) &lt;= #effThruDt#
            </isNotNull>
            <iterate property="schdCoordPsnCdList" var="elem[]" open="AND (" close=")" conjunction="OR">
                SCA.SCHD_COORD_PSN_CD = #elem[].value#
            </iterate>
            ORDER BY
                SCA.SCHD_COORD_PSN_CD
                ,SCA.ST_CD
        ) R
    </statement>

    <statement id="getCoordinationCount" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(SCA.SCHD_COORD_PSN_CD) AS COUNT
        FROM
            SCHD_COORD_ASG SCA
            ,VND VND
            ,S21_PSN SPC
        WHERE
            SCA.GLBL_CMPY_CD      = #glblCmpyCd#
        AND SCA.RTL_WH_CD         = #rtlWhCd#
        AND SCA.GLBL_CMPY_CD      = VND.GLBL_CMPY_CD(+)
        AND SCA.CARR_CD           = VND.VND_CD(+)
        AND SCA.GLBL_CMPY_CD      = SPC.GLBL_CMPY_CD(+)
        AND SCA.SCHD_COORD_PSN_CD = SPC.PSN_CD(+) 
        AND SCA.EZCANCELFLAG      = '0'
        AND VND.EZCANCELFLAG(+)   = '0'
        AND SPC.EZCANCELFLAG(+)   = '0'
        AND ROWNUM                = 1
        <isNotNull property="schdCoordPsnCd">
        AND SCA.SCHD_COORD_PSN_CD = #schdCoordPsnCd#
        </isNotNull>
        <isNotNull property="effFromDt">
        AND SCA.EFF_FROM_DT   &gt;= #effFromDt#
        </isNotNull>
        <isNotNull property="effThruDt">
        AND NVL(SCA.EFF_THRU_DT, #effThruDtDefalut#) &lt;= #effThruDt#
        </isNotNull>
        <iterate property="schdCoordPsnCdList" var="elem[]" open="AND (" close=")" conjunction="OR">
        SCA.SCHD_COORD_PSN_CD = #elem[].value#
        </iterate>
    </statement>

    <statement id="getCoordinatorAssign" parameterClass="Map" resultClass="Map">
            SELECT
                SCHD_COORD_PSN_CD
                ,GLBL_CMPY_CD
                ,ST_CD
                ,EFF_FROM_DT
                ,EFF_THRU_DT
                ,CARR_CD
                ,CARR_CTAC_EML_ADDR
                ,CARR_CTAC_TEL_NUM
                ,RTL_WH_CD
                ,EZUPTIME
                ,EZUPTIMEZONE
                ,ROWID
            FROM
                SCHD_COORD_ASG
            WHERE
                ROWID = #rowId#
    </statement>

    <statement id="searchWh" parameterClass="Map" resultClass="Map">
            SELECT
                RW.RTL_WH_NM
                ,RW.WH_MGR_PSN_CD
                ,SPC.PSN_FIRST_NM
                ,SPC.PSN_LAST_NM
            FROM
                RTL_WH RW
                ,S21_PSN SPC
            WHERE
                    RW.GLBL_CMPY_CD = #glblCmpyCd#
                AND RW.EZCANCELFLAG = '0'
                AND RW.RTL_WH_CD = #rtlWhCd#
                AND SPC.PSN_CD(+) = RW.WH_MGR_PSN_CD
                AND SPC.GLBL_CMPY_CD(+) = RW.GLBL_CMPY_CD
                AND SPC.EZCANCELFLAG(+) = '0'
    </statement>

    <statement id="countSchdCoordAsgReln" parameterClass="Map" resultClass="Integer">
        SELECT
                count(*)
         FROM
                SCHD_COORD_ASG_RELN R
         WHERE
                R.GLBL_CMPY_CD             = #glblCmpyCd#
            AND R.EZCANCELFLAG             = '0'
            AND R.SCHD_COORD_ASG_RELN_PK  != #schdCoordAsgRelnPk#
            AND R.RTL_WH_CD                = #rtlWhCd#
            AND R.MGR_PSN_CD               = #mgrPsnCd#
            AND R.SUPV_PSN_CD              = #supvPsnCd#
            AND R.SCHD_COORD_PSN_CD        = #schdCoodPsnCd#
            AND ROWNUM                     = 1
    </statement>

    <statement id="getAssignTMsgListForDuplicationCheck" parameterClass="Map" resultMap="result.SCHD_COORD_ASG_RELNTMsg">
        SELECT
               R.SCHD_COORD_ASG_RELN_PK
             , R.RTL_WH_CD
             , R.MGR_PSN_CD
             , R.SUPV_PSN_CD
             , R.SCHD_COORD_PSN_CD
         FROM
               SCHD_COORD_ASG_RELN R
         WHERE
               R.GLBL_CMPY_CD             = #glblCmpyCd#
           AND R.EZCANCELFLAG             = '0'
           AND R.RTL_WH_CD                = #rtlWhCd#
         ORDER BY
               R.MGR_PSN_CD
             , R.SUPV_PSN_CD
             , R.SCHD_COORD_PSN_CD
    </statement>

    <resultMap id="result.SCHD_COORD_ASG_RELNTMsg" class="SCHD_COORD_ASG_RELNTMsg">
        <result property="schdCoordAsgRelnPk"  column="SCHD_COORD_ASG_RELN_PK"  javaType="EZDTBigDecimalItem"/>
        <result property="rtlWhCd"             column="RTL_WH_CD"               javaType="EZDTStringItem"/>
        <result property="mgrPsnCd"            column="MGR_PSN_CD"              javaType="EZDTStringItem"/>
        <result property="supvPsnCd"           column="SUPV_PSN_CD"             javaType="EZDTStringItem"/>
        <result property="schdCoordPsnCd"      column="SCHD_COORD_PSN_CD"       javaType="EZDTStringItem"/>
    </resultMap>

    <statement id="getCoordinationListForDuplicationCheck" parameterClass="Map" resultMap="result.NLBL3090_BSMsg">
        SELECT
               SCA.ROWID
             , SCA.RTL_WH_CD
             , SCA.SCHD_COORD_PSN_CD
             , SCA.ST_CD
             , SCA.EFF_FROM_DT
         FROM
               SCHD_COORD_ASG SCA
         WHERE
               SCA.GLBL_CMPY_CD             = #glblCmpyCd#
           AND SCA.EZCANCELFLAG             = '0'
           AND SCA.RTL_WH_CD                = #rtlWhCd#
         ORDER BY
               SCA.RTL_WH_CD
             , SCA.SCHD_COORD_PSN_CD
             , SCA.ST_CD
             , SCA.EFF_FROM_DT
    </statement>

    <resultMap id="result.NLBL3090_BSMsg" class="NLBL3090_BSMsg">
        <result property="xxRowId_B"           column="ROWID"                  javaType="EZDSStringItem"/>
        <result property="rtlWhCd_B"           column="RTL_WH_CD"              javaType="EZDSStringItem"/>
        <result property="schdCoordPsnCd_BC"   column="SCHD_COORD_PSN_CD"      javaType="EZDSStringItem"/>
        <result property="stCd_B"              column="ST_CD"                  javaType="EZDSStringItem"/>
        <result property="effFromDt_B"         column="EFF_FROM_DT"            javaType="EZDSStringItem"/>
    </resultMap>

    <statement id="countSchdCoordAsg" parameterClass="Map" resultClass="Integer">
        SELECT
                count(*)
         FROM
                SCHD_COORD_ASG SCA
         WHERE
                SCA.GLBL_CMPY_CD             = #glblCmpyCd#
            <isNotNull property="xxRowId">
            AND SCA.ROWID             &lt;&gt; #xxRowId#
            </isNotNull>
            AND SCA.RTL_WH_CD                = #rtlWhCd#
            AND SCA.SCHD_COORD_PSN_CD        = #schdCoordPsnCd#
            AND SCA.ST_CD                    = #stCd#
            AND SCA.EFF_FROM_DT              = #effFromDt#
            AND SCA.EZCANCELFLAG             = '0'
            AND ROWNUM                       = 1
    </statement>
</sqlMap>
    