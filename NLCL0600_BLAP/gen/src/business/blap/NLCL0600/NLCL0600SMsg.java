//This file was automatically generated by Business Component Interface Definition Document (Define Business Application Global Area) and XLA200710010.
// Generated on    :20160414023201000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NLCL0600SMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NLCL0600;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NLCL0600 Business Application Global Area Message class.
 * @author
 * @version XLA200710010
 */
public class NLCL0600SMsg extends EZDSMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** PHYS_INVTY_NUM_IP*/
	public final EZDSStringItem              physInvtyNum_IP;

    /** VAR_CHAR_CONST_VAL_01*/
	public final EZDSStringItem              varCharConstVal_01;

    /** VAR_CHAR_CONST_VAL_02*/
	public final EZDSStringItem              varCharConstVal_02;

    /** PHYS_INVTY_NUM*/
	public final EZDSStringItem              physInvtyNum;

    /** RTL_WH_CD*/
	public final EZDSStringItem              rtlWhCd;

    /** RTL_WH_NM*/
	public final EZDSStringItem              rtlWhNm;

    /** XX_LINK_ANCR_01*/
	public final EZDSStringItem              xxLinkAncr_01;

    /** PHYS_INVTY_DT*/
	public final EZDSDateItem              physInvtyDt;

    /** PHYS_INVTY_CTRL_NM*/
	public final EZDSStringItem              physInvtyCtrlNm;

    /** PHYS_INVTY_CTRL_DESC_NM*/
	public final EZDSStringItem              physInvtyCtrlDescNm;

    /** LOC_TP_CD*/
	public final EZDSStringItem              locTpCd;

    /** XX_RQST_TS*/
	public final EZDSStringItem              xxRqstTs;

    /** XX_RQST_TZ*/
	public final EZDSStringItem              xxRqstTz;

    /** PHYS_INVTY_STS_DESC_TXT_03*/
	public final EZDSStringItem              physInvtyStsDescTxt_03;

    /** RTL_SWH_CD*/
	public final EZDSStringItem              rtlSwhCd;

    /** RTL_SWH_NM*/
	public final EZDSStringItem              rtlSwhNm;

    /** INVTY_LOC_CD*/
	public final EZDSStringItem              invtyLocCd;

    /** A*/
	public final business.blap.NLCL0600.NLCL0600_ASMsgArray              A;

    /** R*/
	public final business.blap.NLCL0600.NLCL0600_RSMsgArray              R;

    /** XX_SCR_NM*/
	public final EZDSStringItem              xxScrNm;


	/**
	 * NLCL0600SMsg is constructor.
	 * The initialization when the instance of NLCL0600SMsg is generated.
	 */
	public NLCL0600SMsg() {
		this(false, -1);
	}

	/**
	 * NLCL0600SMsg is constructor.
	 * The initialization when the instance of NLCL0600SMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NLCL0600SMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		physInvtyNum_IP = (EZDSStringItem)newItem("physInvtyNum_IP");
		varCharConstVal_01 = (EZDSStringItem)newItem("varCharConstVal_01");
		varCharConstVal_02 = (EZDSStringItem)newItem("varCharConstVal_02");
		physInvtyNum = (EZDSStringItem)newItem("physInvtyNum");
		rtlWhCd = (EZDSStringItem)newItem("rtlWhCd");
		rtlWhNm = (EZDSStringItem)newItem("rtlWhNm");
		xxLinkAncr_01 = (EZDSStringItem)newItem("xxLinkAncr_01");
		physInvtyDt = (EZDSDateItem)newItem("physInvtyDt");
		physInvtyCtrlNm = (EZDSStringItem)newItem("physInvtyCtrlNm");
		physInvtyCtrlDescNm = (EZDSStringItem)newItem("physInvtyCtrlDescNm");
		locTpCd = (EZDSStringItem)newItem("locTpCd");
		xxRqstTs = (EZDSStringItem)newItem("xxRqstTs");
		xxRqstTz = (EZDSStringItem)newItem("xxRqstTz");
		physInvtyStsDescTxt_03 = (EZDSStringItem)newItem("physInvtyStsDescTxt_03");
		rtlSwhCd = (EZDSStringItem)newItem("rtlSwhCd");
		rtlSwhNm = (EZDSStringItem)newItem("rtlSwhNm");
		invtyLocCd = (EZDSStringItem)newItem("invtyLocCd");
		A = (business.blap.NLCL0600.NLCL0600_ASMsgArray)newMsgArray("A");
		R = (business.blap.NLCL0600.NLCL0600_RSMsgArray)newMsgArray("R");
		xxScrNm = (EZDSStringItem)newItem("xxScrNm");
	}

	/**
	 * get the type of array which is stored
	 * @return NLCL0600SMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NLCL0600SMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"physInvtyNum_IP", "physInvtyNum_IP", "IP", null, TYPE_HANKAKUEISU, "15", null},
	{"varCharConstVal_01", "varCharConstVal_01", "01", null, TYPE_HANKAKUEISU, "1000", null},
	{"varCharConstVal_02", "varCharConstVal_02", "02", null, TYPE_HANKAKUEISU, "1000", null},
	{"physInvtyNum", "physInvtyNum", null, null, TYPE_HANKAKUEISU, "15", null},
	{"rtlWhCd", "rtlWhCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"rtlWhNm", "rtlWhNm", null, null, TYPE_HANKAKUEISU, "30", null},
	{"xxLinkAncr_01", "xxLinkAncr_01", "01", null, TYPE_HANKAKUEISU, "30", null},
	{"physInvtyDt", "physInvtyDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"physInvtyCtrlNm", "physInvtyCtrlNm", null, null, TYPE_HANKAKUEISU, "100", null},
	{"physInvtyCtrlDescNm", "physInvtyCtrlDescNm", null, null, TYPE_HANKAKUEISU, "250", null},
	{"locTpCd", "locTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"xxRqstTs", "xxRqstTs", null, null, TYPE_HANKAKUEISU, "17", null},
	{"xxRqstTz", "xxRqstTz", null, null, TYPE_HANKAKUEISU, "5", null},
	{"physInvtyStsDescTxt_03", "physInvtyStsDescTxt_03", "03", null, TYPE_HANKAKUEISU, "50", null},
	{"rtlSwhCd", "rtlSwhCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"rtlSwhNm", "rtlSwhNm", null, null, TYPE_HANKAKUEISU, "30", null},
	{"invtyLocCd", "invtyLocCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"A", "A", null, "100", "business.blap.NLCL0600.NLCL0600_ASMsgArray", null, null},
	
	{"R", "R", null, "40", "business.blap.NLCL0600.NLCL0600_RSMsgArray", null, null},
	
	{"xxScrNm", "xxScrNm", null, null, TYPE_HANKAKUEISU, "70", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"PHYS_INVTY_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//physInvtyNum_IP
        {"VAR_CHAR_CONST_VAL",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//varCharConstVal_01
        {"VAR_CHAR_CONST_VAL",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//varCharConstVal_02
        {"PHYS_INVTY_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//physInvtyNum
        {"RTL_WH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlWhCd
        {"RTL_WH_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlWhNm
        {"XX_LINK_ANCR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxLinkAncr_01
        {"PHYS_INVTY_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//physInvtyDt
        {"PHYS_INVTY_CTRL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//physInvtyCtrlNm
        {"PHYS_INVTY_CTRL_DESC_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//physInvtyCtrlDescNm
        {"LOC_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//locTpCd
        {"XX_RQST_TS",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRqstTs
        {"XX_RQST_TZ",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRqstTz
        {"PHYS_INVTY_STS_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//physInvtyStsDescTxt_03
        {"RTL_SWH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlSwhCd
        {"RTL_SWH_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlSwhNm
        {"INVTY_LOC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invtyLocCd
		null,	//A
		null,	//R
        {"XX_SCR_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxScrNm
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

