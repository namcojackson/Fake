<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<sqlMap namespace="NSBB017001">

    <!-- #################### Type Alias #################### -->

    <!-- #################### Statement #################### -->
    <statement id="getCrsSvcRcvRqstStage" parameterClass="Map">
        SELECT
             RQST.GLBL_CMPY_CD
            ,RQST.CRS_SVC_RCV_RQST_STAGE_PK
            ,RQST.CRS_SVC_SR_NUM
            ,RQST.CRS_SVC_CRAT_TS_ORIG_TXT
            <!-- START 2019/09/10 K.Fujimoto [QC#51315, ADD] -->
            ,RQST.CRS_SVC_TASK_TS_ORIG_TXT
            <!-- START 2019/09/10 K.Fujimoto [QC#51315, ADD] -->
            ,RQST.CRS_SVC_CUST_NUM
            ,RQST.CUST_SITE_TXT
            <!-- START 2019/07/10 K.Kitachi [QC#51195, MOD] -->
            <!-- ,RQST.CRS_SVC_CUST_NM -->
            <!-- START 2019/07/17 K.Kitachi [QC#51548, MOD] -->
            <!-- ,SUBSTR(RQST.CRS_SVC_CUST_NM, 1, #locNmLen#) CRS_SVC_CUST_NM -->
            ,RTRIM(SUBSTR(RQST.CRS_SVC_CUST_NM, 1, #locNmLen#)) CRS_SVC_CUST_NM
            <!-- END 2019/07/17 K.Kitachi [QC#51548, MOD] -->
            <!-- END 2019/07/10 K.Kitachi [QC#51195, MOD] -->
            ,RQST.CRS_SVC_FIRST_LINE_ADDR
            ,RQST.CRS_SVC_SCD_LINE_ADDR
            ,RQST.CRS_SVC_THIRD_LINE_ADDR
            ,RQST.CRS_SVC_FRTH_LINE_ADDR
            ,RQST.CRS_SVC_CTY_ADDR
            ,RQST.CRS_SVC_ST_CD
            ,RQST.CRS_SVC_POST_CD
            ,RQST.CRS_SVC_CNTY_NM
            ,RQST.CRS_SVC_CTRY_NM
            ,RQST.CRS_SVC_CTAC_FIRST_NM
            ,RQST.CRS_SVC_CTAC_LAST_NM
            ,RQST.CRS_SVC_PHO_NUM
            ,RQST.MDL_NM
            ,RQST.SER_NUM
            ,RQST.CRS_SVC_PO_TXT
            ,RQST.CRS_SVC_URG_CD
            ,RQST.CRS_SVC_DEFER_CD
            ,RQST.CRS_SVC_PBLM_CMNT_TXT
            ,RQST.CRS_SVC_PBLM_CD
            ,RQST.CRS_SVC_SR_CMNT_TXT
            ,RQST.CRS_SVC_NOTE_TP_TXT
            ,RQST.CRS_SVC_NOTE_ID
            ,RQST.ACTV_CONTR_STS_CD
            ,RQST.CRS_SVC_TASK_NUM
            ,RQST.CRS_SVC_TASK_STS_CD
            ,RQST.CRS_SVC_TASK_TP_CD
            ,RQST.CRS_SVC_TASK_PRTY_NUM
            ,RQST.CRS_SVC_TASK_DESC_TXT
            ,RQST.CRS_SVC_TASK_TS_ORIG_TXT
            ,RQST.ONA_JOB_NUM
            ,RQST.FSR_NUM
            ,RQST.ONA_NOTE_ID
            ,RQST.CRS_SVC_FILE_NM
            ,RQST.CRS_SVC_ACT_CD
            ,RQST.CRS_SVC_RQST_SQ_ORIG_TXT
            ,RQST.PROC_FSR_NUM
            ,RQST.PROC_SVC_TASK_NUM
            ,RQST.CRS_SVC_PROC_TS
            ,RQST.CRS_SVC_PROC_STS_CD
            ,MDL.CRS_SVC_MDSE_CD
            ,STS.SVC_TASK_STS_CD
            ,TP.DS_SVC_CALL_TP_CD
        FROM
             CRS_SVC_RCV_RQST_STAGE RQST
            ,CRS_SVC_MDL_NUM_MAP    MDL
            ,CRS_SVC_TASK_STS_MAP   STS
            ,CRS_SVC_TASK_TP_MAP    TP
        WHERE RQST.GLBL_CMPY_CD        = #glblCmpyCd#
        AND   RQST.CRS_SVC_PROC_STS_CD = #procStsCd#
        AND   RQST.EZCANCELFLAG        = '0'
        AND   RQST.GLBL_CMPY_CD        = MDL.GLBL_CMPY_CD(+)
        AND   RQST.MDL_NM              = MDL.CRS_SVC_MDL_NUM(+)
        AND   MDL.ENBL_FLG(+)          = #enblFlg#
        AND   MDL.EZCANCELFLAG(+)      = '0'
        AND   RQST.GLBL_CMPY_CD        = STS.GLBL_CMPY_CD(+)
        AND   RQST.CRS_SVC_TASK_STS_CD = STS.CRS_SVC_TASK_STS_CD(+)
        AND   STS.ENBL_FLG(+)          = #enblFlg#
        AND   STS.EZCANCELFLAG(+)      = '0'
        AND   RQST.GLBL_CMPY_CD        = TP.GLBL_CMPY_CD(+)
        AND   RQST.CRS_SVC_TASK_TP_CD  = TP.CRS_SVC_TASK_TP_CD(+)
        AND   TP.ENBL_FLG(+)           = #enblFlg#
        AND   TP.EZCANCELFLAG(+)       = '0'
        <!-- START 2019/03/01 K.Fujimoto [QC#29742, ADD] -->
        AND   MOD(NVL(RQST.CRS_SVC_SR_NUM, 0), #multiCnt#) = #usrVar1#
        <!-- END   2019/03/01 K.Fujimoto [QC#29742, ADD] -->
        ORDER BY 
              RQST.CRS_SVC_SR_NUM           ASC
             ,RQST.CRS_SVC_TASK_NUM         ASC
             <!-- START 2019/07/08 K.Kitachi [QC#51071, MOD] -->
             <!-- ,RQST.CRS_SVC_RQST_SQ_ORIG_TXT ASC -->
             ,CASE WHEN RQST.CRS_SVC_RQST_SQ_ORIG_TXT IS NULL THEN NULL
                   ELSE LPAD(RQST.CRS_SVC_RQST_SQ_ORIG_TXT, #rqstSqOrigTxtLen#, 0) END ASC
             <!-- END 2019/07/08 K.Kitachi [QC#51071, MOD] -->
    </statement>

    <statement id="findShipToCustByCurLocAcctNum" parameterClass="Map"  resultClass="Map">
        SELECT
             CUST.LOC_NM
            ,SHIP.FIRST_LINE_ADDR
            ,SHIP.SCD_LINE_ADDR
            ,SHIP.THIRD_LINE_ADDR
            ,SHIP.FRTH_LINE_ADDR
            ,SHIP.CTY_ADDR
            ,SHIP.ST_CD
            ,SHIP.POST_CD
        FROM
             SELL_TO_CUST CUST
            ,SHIP_TO_CUST SHIP
        WHERE CUST.GLBL_CMPY_CD    = #glblCmpyCd#
        AND   CUST.SELL_TO_CUST_CD = #sellToCustCd#
        AND   SHIP.SHIP_TO_CUST_CD = #shipToCustCd#
        AND   CUST.RGTN_STS_CD     = #rgtnStsCd#
        AND   CUST.GLBL_CMPY_CD    = SHIP.GLBL_CMPY_CD
        AND   CUST.SELL_TO_CUST_CD = SHIP.SELL_TO_CUST_CD
        AND   CUST.EZCANCELFLAG    = '0'
        AND   SHIP.EZCANCELFLAG    = '0'
        AND   ROWNUM = 1
    </statement>

<!-- START 2016/09/05 T.Tomita [QC#12471, MOD] -->
    <statement id="findShipToCustByAddress" parameterClass="Map" resultClass="Map">
        SELECT
             DS_ACCT_NUM
            ,SHIP_TO_CUST_CD
        FROM 
        (
            SELECT
                 CUST.SELL_TO_CUST_CD AS DS_ACCT_NUM
                ,SHIP.SHIP_TO_CUST_CD
            FROM
                 SELL_TO_CUST CUST
                ,SHIP_TO_CUST SHIP
            WHERE CUST.GLBL_CMPY_CD    = #glblCmpyCd#
            AND   CUST.RGTN_STS_CD     = #rgtnStsCd#
            <isNotNull property="locNm">
            AND   SHIP.LOC_NM          = #locNm#
            </isNotNull>
            <isNull property="locNm">
            AND   SHIP.LOC_NM          IS NULL
            </isNull>
            <isNotNull property="firstLineAddr">
            AND   SHIP.FIRST_LINE_ADDR = #firstLineAddr#
            </isNotNull>
            <isNull property="firstLineAddr">
            AND   SHIP.FIRST_LINE_ADDR IS NULL
            </isNull>
            <isNotNull property="scdLineAddr">
            AND   SHIP.SCD_LINE_ADDR   = #scdLineAddr#
            </isNotNull>
            <isNull property="scdLineAddr">
            AND   SHIP.SCD_LINE_ADDR   IS NULL
            </isNull>
            <isNotNull property="thirdLineAddr">
            AND   SHIP.THIRD_LINE_ADDR = #thirdLineAddr#
            </isNotNull>
            <isNull property="thirdLineAddr">
            AND   SHIP.THIRD_LINE_ADDR IS NULL
            </isNull>
            <isNotNull property="frthLineAddr">
            AND   SHIP.FRTH_LINE_ADDR  = #frthLineAddr#
            </isNotNull>
            <isNull property="frthLineAddr">
            AND   SHIP.FRTH_LINE_ADDR  IS NULL
            </isNull>
            <isNotNull property="ctyLineAddr">
            AND   SHIP.CTY_ADDR        = #ctyLineAddr#
            </isNotNull>
            <isNull property="ctyLineAddr">
            AND   SHIP.CTY_ADDR        IS NULL
            </isNull>
            <isNotNull property="stCd">
            AND   SHIP.ST_CD           = #stCd#
            </isNotNull>
            <isNull property="stCd">
            AND   SHIP.ST_CD           IS NULL
            </isNull>
            <isNotNull property="postCd">
            AND   SHIP.POST_CD         = #postCd#
            </isNotNull>
            <isNull property="postCd">
            AND   SHIP.POST_CD         IS NULL
            </isNull>
            AND   CUST.GLBL_CMPY_CD    = SHIP.GLBL_CMPY_CD
            AND   CUST.SELL_TO_CUST_CD = SHIP.SELL_TO_CUST_CD
            AND   CUST.EZCANCELFLAG    = '0'
            AND   SHIP.EZCANCELFLAG    = '0'
            ORDER BY SHIP.EZINTIME DESC
        ) WHERE ROWNUM = 1
    </statement>
<!-- END 2016/09/05 T.Tomita [QC#12471, MOD] -->

    <statement id="findSvcMachMstr" parameterClass="Map" resultClass="Map">
        SELECT
             SMM.SVC_MACH_MSTR_PK
            ,SMM.CUR_LOC_ACCT_NUM
            ,SMM.CUR_LOC_NUM
        FROM  SVC_MACH_MSTR SMM
        WHERE SMM.GLBL_CMPY_CD = #glblCmpyCd#
        AND   SMM.SER_NUM      = #serNum#
    <iterate property="svcMachMstrStsCdList" var="svcMachMstrStsCd[]" open="AND SMM.SVC_MACH_MSTR_STS_CD IN (" close=")" conjunction=",">
            #svcMachMstrStsCd[]#
    </iterate>
        AND   SMM.EZCANCELFLAG = '0'
        AND   ROWNUM = 1
    </statement>

<!-- START 2019/05/07 [QC#50119, ADD] -->
    <statement id="getSvcIstlReqFlg" parameterClass="Map" resultClass="String">
        SELECT
             DSC.SVC_ISTL_REQ_FLG
        FROM
             CRS_SVC_TASK_TP_MAP CTP
            ,DS_SVC_CALL_TP      DSC
        WHERE
             CTP.GLBL_CMPY_CD       = #glblCmpyCd#
        AND  CTP.CRS_SVC_TASK_TP_CD = #crsSvcTaskTp#
        AND  CTP.GLBL_CMPY_CD       = DSC.GLBL_CMPY_CD
        AND  CTP.DS_SVC_CALL_TP_CD  = DSC.DS_SVC_CALL_TP_CD
        AND  CTP.EZCANCELFLAG       = '0'
        AND  DSC.EZCANCELFLAG       = '0'
    </statement>
<!-- END 2019/05/07 [QC#50119, ADD] -->

    <!-- START 2019/07/10 K.Kitachi [QC#52074, ADD] -->
    <statement id="getAlreadyCancOrCloseOnS21Count" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
             CRS_SVC_RCV_RQST_STAGE RQST
            ,SVC_TASK               TASK
            ,FSR_VISIT              VISIT
        WHERE
                RQST.GLBL_CMPY_CD              = #glblCmpyCd#
            AND RQST.CRS_SVC_RCV_RQST_STAGE_PK = #crsSvcRcvRqstStagePk#
            AND RQST.EZCANCELFLAG              = '0'
            AND RQST.GLBL_CMPY_CD              = TASK.GLBL_CMPY_CD
            AND RQST.CRS_SVC_SR_NUM            = TASK.CRS_SVC_SR_NUM
            AND TASK.EZCANCELFLAG              = '0'
            AND TASK.GLBL_CMPY_CD              = VISIT.GLBL_CMPY_CD
            AND TASK.FSR_NUM                   = VISIT.FSR_NUM
            AND TASK.SVC_TASK_NUM              = VISIT.SVC_TASK_NUM
            AND VISIT.EZCANCELFLAG             = '0'
            AND
                (
                    (
                            RQST.CRS_SVC_TASK_STS_CD = #crsSvcTaskStsCd#
                        AND VISIT.FSR_VISIT_STS_CD   = #svcTaskStsCd#
                    )
                 OR
                    (
                        <iterate property="crsSvcTaskStsCdList" var="crsSvcTaskStsCd[]" open="RQST.CRS_SVC_TASK_STS_CD IN (" close=")" conjunction=",">
                            #crsSvcTaskStsCd[]#
                        </iterate>
                        <iterate property="svcTaskStsCdList" var="svcTaskStsCd[]" open="AND VISIT.FSR_VISIT_STS_CD IN (" close=")" conjunction=",">
                            #svcTaskStsCd[]#
                        </iterate>
                    )
                )
    </statement>

    <statement id="getDuplicateWithPrevIfCount" parameterClass="Map" resultClass="BigDecimal">
        WITH TARGET_CRS_SVC AS (
            SELECT
                 RQST.*
                ,ROW_NUMBER() OVER (
                    PARTITION BY
                        RQST.CRS_SVC_SR_NUM
                    ORDER BY
                         RQST.EZINTIME
                        ,CASE WHEN RQST.CRS_SVC_RQST_SQ_ORIG_TXT IS NULL THEN NULL
                              ELSE LPAD(RQST.CRS_SVC_RQST_SQ_ORIG_TXT, #rqstSqOrigTxtLen#, 0) END
                ) ROW_NUM
            FROM
                CRS_SVC_RCV_RQST_STAGE RQST
            WHERE
                    RQST.GLBL_CMPY_CD   = #glblCmpyCd#
                AND RQST.CRS_SVC_SR_NUM = #crsSvcSrNum#
                AND RQST.EZCANCELFLAG   = '0'
                AND (
                        RQST.CRS_SVC_RCV_RQST_STAGE_PK = #crsSvcRcvRqstStagePk#
                     OR RQST.CRS_SVC_PROC_STS_CD       = #crsSvcProcStsCd#
                )
        )
        SELECT
            COUNT(*)
        FROM
             TARGET_CRS_SVC TRGT_IF
            ,TARGET_CRS_SVC PREV_IF
        WHERE
                TRGT_IF.CRS_SVC_RCV_RQST_STAGE_PK          = #crsSvcRcvRqstStagePk#
            AND TRGT_IF.ROW_NUM                            = PREV_IF.ROW_NUM + 1
            AND NVL(TRGT_IF.CRS_SVC_CRAT_TS_ORIG_TXT, ' ') = NVL(PREV_IF.CRS_SVC_CRAT_TS_ORIG_TXT, ' ')
            AND NVL(TRGT_IF.CRS_SVC_CUST_NUM, ' ')         = NVL(PREV_IF.CRS_SVC_CUST_NUM, ' ')
            AND NVL(TRGT_IF.CUST_SITE_TXT, ' ')            = NVL(PREV_IF.CUST_SITE_TXT, ' ')
            AND NVL(TRGT_IF.CRS_SVC_CUST_NM, ' ')          = NVL(PREV_IF.CRS_SVC_CUST_NM, ' ')
            AND NVL(TRGT_IF.CRS_SVC_FIRST_LINE_ADDR, ' ')  = NVL(PREV_IF.CRS_SVC_FIRST_LINE_ADDR, ' ')
            AND NVL(TRGT_IF.CRS_SVC_SCD_LINE_ADDR, ' ')    = NVL(PREV_IF.CRS_SVC_SCD_LINE_ADDR, ' ')
            AND NVL(TRGT_IF.CRS_SVC_THIRD_LINE_ADDR, ' ')  = NVL(PREV_IF.CRS_SVC_THIRD_LINE_ADDR, ' ')
            AND NVL(TRGT_IF.CRS_SVC_FRTH_LINE_ADDR, ' ')   = NVL(PREV_IF.CRS_SVC_FRTH_LINE_ADDR, ' ')
            AND NVL(TRGT_IF.CRS_SVC_CTY_ADDR, ' ')         = NVL(PREV_IF.CRS_SVC_CTY_ADDR, ' ')
            AND NVL(TRGT_IF.CRS_SVC_ST_CD, ' ')            = NVL(PREV_IF.CRS_SVC_ST_CD, ' ')
            AND NVL(TRGT_IF.CRS_SVC_POST_CD, ' ')          = NVL(PREV_IF.CRS_SVC_POST_CD, ' ')
            AND NVL(TRGT_IF.CRS_SVC_CNTY_NM, ' ')          = NVL(PREV_IF.CRS_SVC_CNTY_NM, ' ')
            AND NVL(TRGT_IF.CRS_SVC_CTRY_NM, ' ')          = NVL(PREV_IF.CRS_SVC_CTRY_NM, ' ')
            AND NVL(TRGT_IF.CRS_SVC_CTAC_FIRST_NM, ' ')    = NVL(PREV_IF.CRS_SVC_CTAC_FIRST_NM, ' ')
            AND NVL(TRGT_IF.CRS_SVC_CTAC_LAST_NM, ' ')     = NVL(PREV_IF.CRS_SVC_CTAC_LAST_NM, ' ')
            AND NVL(TRGT_IF.CRS_SVC_PHO_NUM, ' ')          = NVL(PREV_IF.CRS_SVC_PHO_NUM, ' ')
            AND NVL(TRGT_IF.MDL_NM, ' ')                   = NVL(PREV_IF.MDL_NM, ' ')
            AND NVL(TRGT_IF.SER_NUM, ' ')                  = NVL(PREV_IF.SER_NUM, ' ')
            AND NVL(TRGT_IF.CRS_SVC_PO_TXT, ' ')           = NVL(PREV_IF.CRS_SVC_PO_TXT, ' ')
            AND NVL(TRGT_IF.CRS_SVC_URG_CD, ' ')           = NVL(PREV_IF.CRS_SVC_URG_CD, ' ')
            AND NVL(TRGT_IF.CRS_SVC_DEFER_CD, ' ')         = NVL(PREV_IF.CRS_SVC_DEFER_CD, ' ')
            AND NVL(TRGT_IF.CRS_SVC_PBLM_CMNT_TXT, ' ')    = NVL(PREV_IF.CRS_SVC_PBLM_CMNT_TXT, ' ')
            AND NVL(TRGT_IF.CRS_SVC_PBLM_CD, ' ')          = NVL(PREV_IF.CRS_SVC_PBLM_CD, ' ')
            AND NVL(TRGT_IF.CRS_SVC_SR_CMNT_TXT, ' ')      = NVL(PREV_IF.CRS_SVC_SR_CMNT_TXT, ' ')
            AND NVL(TRGT_IF.CRS_SVC_NOTE_TP_TXT, ' ')      = NVL(PREV_IF.CRS_SVC_NOTE_TP_TXT, ' ')
            AND NVL(TRGT_IF.CRS_SVC_NOTE_ID, ' ')          = NVL(PREV_IF.CRS_SVC_NOTE_ID, ' ')
            AND NVL(TRGT_IF.ACTV_CONTR_STS_CD, ' ')        = NVL(PREV_IF.ACTV_CONTR_STS_CD, ' ')
            AND NVL(TRGT_IF.CRS_SVC_TASK_NUM, ' ')         = NVL(PREV_IF.CRS_SVC_TASK_NUM, ' ')
            AND NVL(TRGT_IF.CRS_SVC_TASK_STS_CD, ' ')      = NVL(PREV_IF.CRS_SVC_TASK_STS_CD, ' ')
            AND NVL(TRGT_IF.CRS_SVC_TASK_TP_CD, ' ')       = NVL(PREV_IF.CRS_SVC_TASK_TP_CD, ' ')
            AND NVL(TRGT_IF.CRS_SVC_TASK_PRTY_NUM, ' ')    = NVL(PREV_IF.CRS_SVC_TASK_PRTY_NUM, ' ')
            AND NVL(TRGT_IF.CRS_SVC_TASK_DESC_TXT, ' ')    = NVL(PREV_IF.CRS_SVC_TASK_DESC_TXT, ' ')
            AND NVL(TRGT_IF.CRS_SVC_TASK_TS_ORIG_TXT, ' ') = NVL(PREV_IF.CRS_SVC_TASK_TS_ORIG_TXT, ' ')
            AND NVL(TRGT_IF.ONA_JOB_NUM, ' ')              = NVL(PREV_IF.ONA_JOB_NUM, ' ')
            AND NVL(TRGT_IF.FSR_NUM, ' ')                  = NVL(PREV_IF.FSR_NUM, ' ')
            AND NVL(TRGT_IF.ONA_NOTE_ID, ' ')              = NVL(PREV_IF.ONA_NOTE_ID, ' ')
            AND NVL(TRGT_IF.CRS_SVC_FILE_NM, ' ')          = NVL(PREV_IF.CRS_SVC_FILE_NM, ' ')
    </statement>
    <!-- END 2019/07/10 K.Kitachi [QC#52074, ADD] -->
    <!-- START 2019/11/18 E.Kameishi [QC#51561, ADD] -->
    <statement id="getCntyNm9dig" parameterClass="Map" resultClass="String">
        SELECT
            C.CNTY_NM
        FROM
            POST            P
           ,CNTY_POST_RELN  CPR
           ,CNTY            C
        WHERE
            P.GLBL_CMPY_CD   = #glblCmpyCd#
        AND P.EZCANCELFLAG   = '0'
        AND P.POST_CD        = #crsSvcPostCd#
        AND P.CTY_ADDR       = #crsSvcCtyAddr#
        AND P.ST_CD          = #crsSvcStCd#
        AND P.GLBL_CMPY_CD   = CPR.GLBL_CMPY_CD
        AND P.EZCANCELFLAG   = CPR.EZCANCELFLAG
        AND P.POST_PK        = CPR.POST_PK
        AND CPR.GLBL_CMPY_CD = C.GLBL_CMPY_CD
        AND CPR.EZCANCELFLAG = C.EZCANCELFLAG
        AND CPR.CNTY_PK      = C.CNTY_PK
    </statement>
    <statement id="getCntyNm5dig" parameterClass="Map" resultClass="String">
        SELECT
            C.CNTY_NM
        FROM
            POST            P
           ,CNTY_POST_RELN  CPR
           ,CNTY            C
        WHERE
            P.GLBL_CMPY_CD   = #glblCmpyCd#
        AND P.EZCANCELFLAG   = '0'
        AND P.POST_CD        = SUBSTR(#crsSvcPostCd#, 0, 5)
        AND P.CTY_ADDR       = #crsSvcCtyAddr#
        AND P.ST_CD          = #crsSvcStCd#
        AND P.GLBL_CMPY_CD   = CPR.GLBL_CMPY_CD
        AND P.EZCANCELFLAG   = CPR.EZCANCELFLAG
        AND P.POST_PK        = CPR.POST_PK
        AND CPR.GLBL_CMPY_CD = C.GLBL_CMPY_CD
        AND CPR.EZCANCELFLAG = C.EZCANCELFLAG
        AND CPR.CNTY_PK      = C.CNTY_PK
    </statement>
    <!-- END 2019/11/18 E.Kameishi [QC#51561, ADD] -->
</sqlMap>
