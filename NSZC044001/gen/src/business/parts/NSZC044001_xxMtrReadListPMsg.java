//This file was automatically generated by Common Business Component Interface Definition Document and XLA200710010.
// Generated on    :20190118085528000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :CommonBusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSZC044001_xxMtrReadListPMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.parts;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSZC044001 Common Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSZC044001_xxMtrReadListPMsg extends EZDPMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** PHYS_MTR_ID*/
	public final EZDPStringItem              physMtrId;

    /** MTR_LB_NM*/
	public final EZDPStringItem              mtrLbNm;

    /** MDSE_CD*/
	public final EZDPStringItem              mdseCd;

    /** MTR_CLS_TP_CD*/
	public final EZDPStringItem              mtrClsTpCd;

    /** MTR_DT*/
	public final EZDPDateItem              mtrDt;

    /** MTR_CNT*/
	public final EZDPBigDecimalItem              mtrCnt;

    /** MTR_TEST_CNT*/
	public final EZDPBigDecimalItem              mtrTestCnt;

    /** MTR_READ_DT*/
	public final EZDPDateItem              mtrReadDt;

    /** MTR_READ_TP_CD*/
	public final EZDPStringItem              mtrReadTpCd;

    /** MTR_READ_SRC_TP_CD*/
	public final EZDPStringItem              mtrReadSrcTpCd;

    /** DS_CONTR_NUM*/
	public final EZDPStringItem              dsContrNum;


	/**
	 * NSZC044001_xxMtrReadListPMsg is constructor.
	 * The initialization when the instance of NSZC044001_xxMtrReadListPMsg is generated.
	 */
	public NSZC044001_xxMtrReadListPMsg() {
		this(false, -1);
	}

	/**
	 * NSZC044001_xxMtrReadListPMsg is constructor.
	 * The initialization when the instance of NSZC044001_xxMtrReadListPMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSZC044001_xxMtrReadListPMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		physMtrId = (EZDPStringItem)newItem("physMtrId");
		mtrLbNm = (EZDPStringItem)newItem("mtrLbNm");
		mdseCd = (EZDPStringItem)newItem("mdseCd");
		mtrClsTpCd = (EZDPStringItem)newItem("mtrClsTpCd");
		mtrDt = (EZDPDateItem)newItem("mtrDt");
		mtrCnt = (EZDPBigDecimalItem)newItem("mtrCnt");
		mtrTestCnt = (EZDPBigDecimalItem)newItem("mtrTestCnt");
		mtrReadDt = (EZDPDateItem)newItem("mtrReadDt");
		mtrReadTpCd = (EZDPStringItem)newItem("mtrReadTpCd");
		mtrReadSrcTpCd = (EZDPStringItem)newItem("mtrReadSrcTpCd");
		dsContrNum = (EZDPStringItem)newItem("dsContrNum");
	}

	/**
	 * get the type of array which is stored
	 * @return NSZC044001_xxMtrReadListPMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSZC044001_xxMtrReadListPMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"physMtrId", "physMtrId", null, null, TYPE_HANKAKUEISU, "2", null},
	{"mtrLbNm", "mtrLbNm", null, null, TYPE_HANKAKUEISU, "30", null},
	{"mdseCd", "mdseCd", null, null, TYPE_HANKAKUEISU, "16", null},
	{"mtrClsTpCd", "mtrClsTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"mtrDt", "mtrDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"mtrCnt", "mtrCnt", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"mtrTestCnt", "mtrTestCnt", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"mtrReadDt", "mtrReadDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"mtrReadTpCd", "mtrReadTpCd", null, null, TYPE_HANKAKUEISU, "5", null},
	{"mtrReadSrcTpCd", "mtrReadSrcTpCd", null, null, TYPE_HANKAKUEISU, "5", null},
	{"dsContrNum", "dsContrNum", null, null, TYPE_HANKAKUEISU, "30", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"PHYS_MTR_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//physMtrId
        {"MTR_LB_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrLbNm
        {"MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd
        {"MTR_CLS_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrClsTpCd
        {"MTR_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrDt
        {"MTR_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrCnt
        {"MTR_TEST_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrTestCnt
        {"MTR_READ_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrReadDt
        {"MTR_READ_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrReadTpCd
        {"MTR_READ_SRC_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrReadSrcTpCd
        {"DS_CONTR_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrNum
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

