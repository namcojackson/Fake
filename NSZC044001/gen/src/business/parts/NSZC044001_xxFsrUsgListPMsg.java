//This file was automatically generated by Common Business Component Interface Definition Document and XLA200710010.
// Generated on    :20190118085528000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :CommonBusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSZC044001_xxFsrUsgListPMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.parts;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSZC044001 Common Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSZC044001_xxFsrUsgListPMsg extends EZDPMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** SVC_TASK_NUM*/
	public final EZDPStringItem              svcTaskNum;

    /** DS_SVC_CALL_TP_CD*/
	public final EZDPStringItem              dsSvcCallTpCd;

    /** PRT_FROM_TECH_LOC_CD*/
	public final EZDPStringItem              prtFromTechLocCd;

    /** PRT_FROM_TECH_CD*/
	public final EZDPStringItem              prtFromTechCd;

    /** PRT_USED_BY_TECH_LOC_CD*/
	public final EZDPStringItem              prtUsedByTechLocCd;

    /** PRT_USED_BY_TECH_CD*/
	public final EZDPStringItem              prtUsedByTechCd;

    /** MDSE_CD*/
	public final EZDPStringItem              mdseCd;

    /** MDSE_NM*/
	public final EZDPStringItem              mdseNm;

    /** SVC_PRT_QTY*/
	public final EZDPBigDecimalItem              svcPrtQty;

    /** SVC_PRT_UNIT_AMT*/
	public final EZDPBigDecimalItem              svcPrtUnitAmt;

    /** SVC_PRT_DEAL_AMT*/
	public final EZDPBigDecimalItem              svcPrtDealAmt;

    /** SVC_PRT_FUNC_AMT*/
	public final EZDPBigDecimalItem              svcPrtFuncAmt;

    /** SVC_PRT_TAX_RATE*/
	public final EZDPBigDecimalItem              svcPrtTaxRate;

    /** SVC_PRT_DEAL_TAX_AMT*/
	public final EZDPBigDecimalItem              svcPrtDealTaxAmt;

    /** SVC_PRT_FUNC_TAX_AMT*/
	public final EZDPBigDecimalItem              svcPrtFuncTaxAmt;

    /** SVC_PRT_DISC_RATE*/
	public final EZDPBigDecimalItem              svcPrtDiscRate;

    /** SVC_PRT_DEAL_DISC_AMT*/
	public final EZDPBigDecimalItem              svcPrtDealDiscAmt;

    /** SVC_PRT_FUNC_DISC_AMT*/
	public final EZDPBigDecimalItem              svcPrtFuncDiscAmt;

    /** FSR_USG_PROC_FLG*/
	public final EZDPStringItem              fsrUsgProcFlg;

    /** SVC_INVTY_EX_FLG*/
	public final EZDPStringItem              svcInvtyExFlg;


	/**
	 * NSZC044001_xxFsrUsgListPMsg is constructor.
	 * The initialization when the instance of NSZC044001_xxFsrUsgListPMsg is generated.
	 */
	public NSZC044001_xxFsrUsgListPMsg() {
		this(false, -1);
	}

	/**
	 * NSZC044001_xxFsrUsgListPMsg is constructor.
	 * The initialization when the instance of NSZC044001_xxFsrUsgListPMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSZC044001_xxFsrUsgListPMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		svcTaskNum = (EZDPStringItem)newItem("svcTaskNum");
		dsSvcCallTpCd = (EZDPStringItem)newItem("dsSvcCallTpCd");
		prtFromTechLocCd = (EZDPStringItem)newItem("prtFromTechLocCd");
		prtFromTechCd = (EZDPStringItem)newItem("prtFromTechCd");
		prtUsedByTechLocCd = (EZDPStringItem)newItem("prtUsedByTechLocCd");
		prtUsedByTechCd = (EZDPStringItem)newItem("prtUsedByTechCd");
		mdseCd = (EZDPStringItem)newItem("mdseCd");
		mdseNm = (EZDPStringItem)newItem("mdseNm");
		svcPrtQty = (EZDPBigDecimalItem)newItem("svcPrtQty");
		svcPrtUnitAmt = (EZDPBigDecimalItem)newItem("svcPrtUnitAmt");
		svcPrtDealAmt = (EZDPBigDecimalItem)newItem("svcPrtDealAmt");
		svcPrtFuncAmt = (EZDPBigDecimalItem)newItem("svcPrtFuncAmt");
		svcPrtTaxRate = (EZDPBigDecimalItem)newItem("svcPrtTaxRate");
		svcPrtDealTaxAmt = (EZDPBigDecimalItem)newItem("svcPrtDealTaxAmt");
		svcPrtFuncTaxAmt = (EZDPBigDecimalItem)newItem("svcPrtFuncTaxAmt");
		svcPrtDiscRate = (EZDPBigDecimalItem)newItem("svcPrtDiscRate");
		svcPrtDealDiscAmt = (EZDPBigDecimalItem)newItem("svcPrtDealDiscAmt");
		svcPrtFuncDiscAmt = (EZDPBigDecimalItem)newItem("svcPrtFuncDiscAmt");
		fsrUsgProcFlg = (EZDPStringItem)newItem("fsrUsgProcFlg");
		svcInvtyExFlg = (EZDPStringItem)newItem("svcInvtyExFlg");
	}

	/**
	 * get the type of array which is stored
	 * @return NSZC044001_xxFsrUsgListPMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSZC044001_xxFsrUsgListPMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"svcTaskNum", "svcTaskNum", null, null, TYPE_HANKAKUEISU, "10", null},
	{"dsSvcCallTpCd", "dsSvcCallTpCd", null, null, TYPE_HANKAKUEISU, "3", null},
	{"prtFromTechLocCd", "prtFromTechLocCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"prtFromTechCd", "prtFromTechCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"prtUsedByTechLocCd", "prtUsedByTechLocCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"prtUsedByTechCd", "prtUsedByTechCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"mdseCd", "mdseCd", null, null, TYPE_HANKAKUEISU, "16", null},
	{"mdseNm", "mdseNm", null, null, TYPE_HANKAKUEISU, "30", null},
	{"svcPrtQty", "svcPrtQty", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"svcPrtUnitAmt", "svcPrtUnitAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"svcPrtDealAmt", "svcPrtDealAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"svcPrtFuncAmt", "svcPrtFuncAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"svcPrtTaxRate", "svcPrtTaxRate", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"svcPrtDealTaxAmt", "svcPrtDealTaxAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"svcPrtFuncTaxAmt", "svcPrtFuncTaxAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"svcPrtDiscRate", "svcPrtDiscRate", null, null, TYPE_SEISU_SYOSU, "9", "5"},
	{"svcPrtDealDiscAmt", "svcPrtDealDiscAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"svcPrtFuncDiscAmt", "svcPrtFuncDiscAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"fsrUsgProcFlg", "fsrUsgProcFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"svcInvtyExFlg", "svcInvtyExFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"SVC_TASK_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTaskNum
        {"DS_SVC_CALL_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsSvcCallTpCd
        {"PRT_FROM_TECH_LOC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prtFromTechLocCd
        {"PRT_FROM_TECH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prtFromTechCd
        {"PRT_USED_BY_TECH_LOC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prtUsedByTechLocCd
        {"PRT_USED_BY_TECH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prtUsedByTechCd
        {"MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd
        {"MDSE_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseNm
        {"SVC_PRT_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcPrtQty
        {"SVC_PRT_UNIT_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcPrtUnitAmt
        {"SVC_PRT_DEAL_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcPrtDealAmt
        {"SVC_PRT_FUNC_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcPrtFuncAmt
        {"SVC_PRT_TAX_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcPrtTaxRate
        {"SVC_PRT_DEAL_TAX_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcPrtDealTaxAmt
        {"SVC_PRT_FUNC_TAX_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcPrtFuncTaxAmt
        {"SVC_PRT_DISC_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcPrtDiscRate
        {"SVC_PRT_DEAL_DISC_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcPrtDealDiscAmt
        {"SVC_PRT_FUNC_DISC_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcPrtFuncDiscAmt
        {"FSR_USG_PROC_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//fsrUsgProcFlg
        {"SVC_INVTY_EX_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcInvtyExFlg
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

