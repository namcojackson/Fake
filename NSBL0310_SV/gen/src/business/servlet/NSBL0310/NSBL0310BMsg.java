//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20190402130247000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSBL0310BMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NSBL0310;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSBL0310 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NSBL0310BMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** GLBL_CMPY_CD*/
	public final EZDBStringItem              glblCmpyCd;

    /** SLS_DT*/
	public final EZDBDateItem              slsDt;

    /** SVC_RG_PK_H*/
	public final EZDBBigDecimalItem              svcRgPk_H;

    /** SVC_RG_NM_H*/
	public final EZDBStringItem              svcRgNm_H;

    /** SVC_CONTR_BR_CD_H*/
	public final EZDBStringItem              svcContrBrCd_H;

    /** SVC_CONTR_BR_DESC_TXT_H*/
	public final EZDBStringItem              svcContrBrDescTxt_H;

    /** SVC_MGR_TP_CD_H*/
	public final EZDBStringItem              svcMgrTpCd_H;

    /** SVC_MGR_TP_CD_HD*/
	public final EZDBStringItem              svcMgrTpCd_HD;

    /** ORG_CD_HL*/
	public final EZDBStringItem              orgCd_HL;

    /** ORG_CD_HT*/
	public final EZDBStringItem              orgCd_HT;

    /** ORG_DESC_TXT_H*/
	public final EZDBStringItem              orgDescTxt_H;

    /** ORG_LAYER_NUM*/
	public final EZDBBigDecimalItem              orgLayerNum;

    /** XX_PAGE_SHOW_FROM_NUM*/
	public final EZDBBigDecimalItem              xxPageShowFromNum;

    /** XX_PAGE_SHOW_TO_NUM*/
	public final EZDBBigDecimalItem              xxPageShowToNum;

    /** XX_PAGE_SHOW_OF_NUM*/
	public final EZDBBigDecimalItem              xxPageShowOfNum;

    /** XX_ROW_NUM*/
	public final EZDBBigDecimalItem              xxRowNum;

    /** A*/
	public final business.servlet.NSBL0310.NSBL0310_ABMsgArray              A;

    /** PREV_OPEN_TASK_CNT_T*/
	public final EZDBBigDecimalItem              prevOpenTaskCnt_T;

    /** INPROC_TASK_CNT_T*/
	public final EZDBBigDecimalItem              inprocTaskCnt_T;

    /** CLO_TASK_CNT_T*/
	public final EZDBBigDecimalItem              cloTaskCnt_T;

    /** CANC_TASK_CNT_T*/
	public final EZDBBigDecimalItem              cancTaskCnt_T;

    /** REJ_TASK_CNT_T*/
	public final EZDBBigDecimalItem              rejTaskCnt_T;

    /** XX_RCV_TM_T*/
	public final EZDBStringItem              xxRcvTm_T;

    /** TO_BE_OPTM_TASK_CNT_T*/
	public final EZDBBigDecimalItem              toBeOptmTaskCnt_T;

    /** SCHD_TASK_CNT_T*/
	public final EZDBBigDecimalItem              schdTaskCnt_T;

    /** ASG_TASK_CNT_T*/
	public final EZDBBigDecimalItem              asgTaskCnt_T;

    /** OPEN_TASK_CNT_T*/
	public final EZDBBigDecimalItem              openTaskCnt_T;

    /** HLD_TASK_CNT_T*/
	public final EZDBBigDecimalItem              hldTaskCnt_T;

    /** ESCL_TASK_CNT_T*/
	public final EZDBBigDecimalItem              esclTaskCnt_T;

    /** VIP_TASK_CNT_T*/
	public final EZDBBigDecimalItem              vipTaskCnt_T;

    /** ATTN_TASK_CNT_T*/
	public final EZDBBigDecimalItem              attnTaskCnt_T;

    /** XX_SCR_EVENT_NM*/
	public final EZDBStringItem              xxScrEventNm;

    /** B*/
	public final business.servlet.NSBL0310.NSBL0310_BBMsgArray              B;

    /** XX_EVN_TP_TXT*/
	public final EZDBStringItem              xxEvnTpTxt;

    /** SVC_RQST_DOWN_TP_CD*/
	public final EZDBStringItem              svcRqstDownTpCd;

    /** XX_POP_PRM_0*/
	public final EZDBStringItem              xxPopPrm_0;

    /** XX_POP_PRM_1*/
	public final EZDBStringItem              xxPopPrm_1;

    /** XX_POP_PRM_2*/
	public final EZDBStringItem              xxPopPrm_2;

    /** XX_POP_PRM_3*/
	public final EZDBStringItem              xxPopPrm_3;

    /** XX_POP_PRM_4*/
	public final EZDBStringItem              xxPopPrm_4;

    /** XX_POP_PRM_5*/
	public final EZDBStringItem              xxPopPrm_5;

    /** XX_POP_PRM_6*/
	public final EZDBStringItem              xxPopPrm_6;

    /** XTRNL_SYS_TASK_NUM*/
	public final EZDBStringItem              xtrnlSysTaskNum;

    /** SHIP_TO_CUST_CD*/
	public final EZDBStringItem              shipToCustCd;

    /** PBLM_SMRY_TXT*/
	public final EZDBStringItem              pblmSmryTxt;

    /** XTRNL_SYS_BILL_TP_CD*/
	public final EZDBStringItem              xtrnlSysBillTpCd;

    /** XTRNL_SYS_USR_CD*/
	public final EZDBStringItem              xtrnlSysUsrCd;

    /** XTRNL_SYS_INCDT_NUM*/
	public final EZDBStringItem              xtrnlSysIncdtNum;

    /** XTRNL_SYS_CTAC_NM*/
	public final EZDBStringItem              xtrnlSysCtacNm;

    /** XTRNL_SYS_CTAC_TEL_NUM*/
	public final EZDBStringItem              xtrnlSysCtacTelNum;

    /** FSR_NUM*/
	public final EZDBStringItem              fsrNum;


	/**
	 * NSBL0310BMsg is constructor.
	 * The initialization when the instance of NSBL0310BMsg is generated.
	 */
	public NSBL0310BMsg() {
		this(false, -1);
	}

	/**
	 * NSBL0310BMsg is constructor.
	 * The initialization when the instance of NSBL0310BMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSBL0310BMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		glblCmpyCd = (EZDBStringItem)newItem("glblCmpyCd");
		slsDt = (EZDBDateItem)newItem("slsDt");
		svcRgPk_H = (EZDBBigDecimalItem)newItem("svcRgPk_H");
		svcRgNm_H = (EZDBStringItem)newItem("svcRgNm_H");
		svcContrBrCd_H = (EZDBStringItem)newItem("svcContrBrCd_H");
		svcContrBrDescTxt_H = (EZDBStringItem)newItem("svcContrBrDescTxt_H");
		svcMgrTpCd_H = (EZDBStringItem)newItem("svcMgrTpCd_H");
		svcMgrTpCd_HD = (EZDBStringItem)newItem("svcMgrTpCd_HD");
		orgCd_HL = (EZDBStringItem)newItem("orgCd_HL");
		orgCd_HT = (EZDBStringItem)newItem("orgCd_HT");
		orgDescTxt_H = (EZDBStringItem)newItem("orgDescTxt_H");
		orgLayerNum = (EZDBBigDecimalItem)newItem("orgLayerNum");
		xxPageShowFromNum = (EZDBBigDecimalItem)newItem("xxPageShowFromNum");
		xxPageShowToNum = (EZDBBigDecimalItem)newItem("xxPageShowToNum");
		xxPageShowOfNum = (EZDBBigDecimalItem)newItem("xxPageShowOfNum");
		xxRowNum = (EZDBBigDecimalItem)newItem("xxRowNum");
		A = (business.servlet.NSBL0310.NSBL0310_ABMsgArray)newMsgArray("A");
		prevOpenTaskCnt_T = (EZDBBigDecimalItem)newItem("prevOpenTaskCnt_T");
		inprocTaskCnt_T = (EZDBBigDecimalItem)newItem("inprocTaskCnt_T");
		cloTaskCnt_T = (EZDBBigDecimalItem)newItem("cloTaskCnt_T");
		cancTaskCnt_T = (EZDBBigDecimalItem)newItem("cancTaskCnt_T");
		rejTaskCnt_T = (EZDBBigDecimalItem)newItem("rejTaskCnt_T");
		xxRcvTm_T = (EZDBStringItem)newItem("xxRcvTm_T");
		toBeOptmTaskCnt_T = (EZDBBigDecimalItem)newItem("toBeOptmTaskCnt_T");
		schdTaskCnt_T = (EZDBBigDecimalItem)newItem("schdTaskCnt_T");
		asgTaskCnt_T = (EZDBBigDecimalItem)newItem("asgTaskCnt_T");
		openTaskCnt_T = (EZDBBigDecimalItem)newItem("openTaskCnt_T");
		hldTaskCnt_T = (EZDBBigDecimalItem)newItem("hldTaskCnt_T");
		esclTaskCnt_T = (EZDBBigDecimalItem)newItem("esclTaskCnt_T");
		vipTaskCnt_T = (EZDBBigDecimalItem)newItem("vipTaskCnt_T");
		attnTaskCnt_T = (EZDBBigDecimalItem)newItem("attnTaskCnt_T");
		xxScrEventNm = (EZDBStringItem)newItem("xxScrEventNm");
		B = (business.servlet.NSBL0310.NSBL0310_BBMsgArray)newMsgArray("B");
		xxEvnTpTxt = (EZDBStringItem)newItem("xxEvnTpTxt");
		svcRqstDownTpCd = (EZDBStringItem)newItem("svcRqstDownTpCd");
		xxPopPrm_0 = (EZDBStringItem)newItem("xxPopPrm_0");
		xxPopPrm_1 = (EZDBStringItem)newItem("xxPopPrm_1");
		xxPopPrm_2 = (EZDBStringItem)newItem("xxPopPrm_2");
		xxPopPrm_3 = (EZDBStringItem)newItem("xxPopPrm_3");
		xxPopPrm_4 = (EZDBStringItem)newItem("xxPopPrm_4");
		xxPopPrm_5 = (EZDBStringItem)newItem("xxPopPrm_5");
		xxPopPrm_6 = (EZDBStringItem)newItem("xxPopPrm_6");
		xtrnlSysTaskNum = (EZDBStringItem)newItem("xtrnlSysTaskNum");
		shipToCustCd = (EZDBStringItem)newItem("shipToCustCd");
		pblmSmryTxt = (EZDBStringItem)newItem("pblmSmryTxt");
		xtrnlSysBillTpCd = (EZDBStringItem)newItem("xtrnlSysBillTpCd");
		xtrnlSysUsrCd = (EZDBStringItem)newItem("xtrnlSysUsrCd");
		xtrnlSysIncdtNum = (EZDBStringItem)newItem("xtrnlSysIncdtNum");
		xtrnlSysCtacNm = (EZDBStringItem)newItem("xtrnlSysCtacNm");
		xtrnlSysCtacTelNum = (EZDBStringItem)newItem("xtrnlSysCtacTelNum");
		fsrNum = (EZDBStringItem)newItem("fsrNum");
	}

	/**
	 * get the type of array which is stored
	 * @return NSBL0310BMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSBL0310BMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"glblCmpyCd", "glblCmpyCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"slsDt", "slsDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"svcRgPk_H", "svcRgPk_H", "H", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"svcRgNm_H", "svcRgNm_H", "H", null, TYPE_HANKAKUEISU, "30", null},
	{"svcContrBrCd_H", "svcContrBrCd_H", "H", null, TYPE_HANKAKUEISU, "3", null},
	{"svcContrBrDescTxt_H", "svcContrBrDescTxt_H", "H", null, TYPE_HANKAKUEISU, "50", null},
	{"svcMgrTpCd_H", "svcMgrTpCd_H", "H", null, TYPE_HANKAKUEISU, "2", null},
	{"svcMgrTpCd_HD", "svcMgrTpCd_HD", "HD", null, TYPE_HANKAKUEISU, "2", null},
	{"orgCd_HL", "orgCd_HL", "HL", null, TYPE_HANKAKUEISU, "8", null},
	{"orgCd_HT", "orgCd_HT", "HT", null, TYPE_HANKAKUEISU, "8", null},
	{"orgDescTxt_H", "orgDescTxt_H", "H", null, TYPE_HANKAKUEISU, "50", null},
	{"orgLayerNum", "orgLayerNum", null, null, TYPE_SEISU_SYOSU, "2", "0"},
	{"xxPageShowFromNum", "xxPageShowFromNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowToNum", "xxPageShowToNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowOfNum", "xxPageShowOfNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxRowNum", "xxRowNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"A", "A", null, "20", "business.servlet.NSBL0310.NSBL0310_ABMsgArray", null, null},
	
	{"prevOpenTaskCnt_T", "prevOpenTaskCnt_T", "T", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"inprocTaskCnt_T", "inprocTaskCnt_T", "T", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"cloTaskCnt_T", "cloTaskCnt_T", "T", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"cancTaskCnt_T", "cancTaskCnt_T", "T", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"rejTaskCnt_T", "rejTaskCnt_T", "T", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"xxRcvTm_T", "xxRcvTm_T", "T", null, TYPE_HANKAKUEISU, "8", null},
	{"toBeOptmTaskCnt_T", "toBeOptmTaskCnt_T", "T", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"schdTaskCnt_T", "schdTaskCnt_T", "T", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"asgTaskCnt_T", "asgTaskCnt_T", "T", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"openTaskCnt_T", "openTaskCnt_T", "T", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"hldTaskCnt_T", "hldTaskCnt_T", "T", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"esclTaskCnt_T", "esclTaskCnt_T", "T", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"vipTaskCnt_T", "vipTaskCnt_T", "T", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"attnTaskCnt_T", "attnTaskCnt_T", "T", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"xxScrEventNm", "xxScrEventNm", null, null, TYPE_HANKAKUEISU, "50", null},
	{"B", "B", null, "10", "business.servlet.NSBL0310.NSBL0310_BBMsgArray", null, null},
	
	{"xxEvnTpTxt", "xxEvnTpTxt", null, null, TYPE_HANKAKUEISU, "6", null},
	{"svcRqstDownTpCd", "svcRqstDownTpCd", null, null, TYPE_HANKAKUEISU, "5", null},
	{"xxPopPrm_0", "xxPopPrm_0", "0", null, TYPE_HANKAKUEISU, "300", null},
	{"xxPopPrm_1", "xxPopPrm_1", "1", null, TYPE_HANKAKUEISU, "300", null},
	{"xxPopPrm_2", "xxPopPrm_2", "2", null, TYPE_HANKAKUEISU, "300", null},
	{"xxPopPrm_3", "xxPopPrm_3", "3", null, TYPE_HANKAKUEISU, "300", null},
	{"xxPopPrm_4", "xxPopPrm_4", "4", null, TYPE_HANKAKUEISU, "300", null},
	{"xxPopPrm_5", "xxPopPrm_5", "5", null, TYPE_HANKAKUEISU, "300", null},
	{"xxPopPrm_6", "xxPopPrm_6", "6", null, TYPE_HANKAKUEISU, "300", null},
	{"xtrnlSysTaskNum", "xtrnlSysTaskNum", null, null, TYPE_HANKAKUEISU, "32", null},
	{"shipToCustCd", "shipToCustCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"pblmSmryTxt", "pblmSmryTxt", null, null, TYPE_HANKAKUEISU, "240", null},
	{"xtrnlSysBillTpCd", "xtrnlSysBillTpCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"xtrnlSysUsrCd", "xtrnlSysUsrCd", null, null, TYPE_HANKAKUEISU, "100", null},
	{"xtrnlSysIncdtNum", "xtrnlSysIncdtNum", null, null, TYPE_HANKAKUEISU, "200", null},
	{"xtrnlSysCtacNm", "xtrnlSysCtacNm", null, null, TYPE_HANKAKUEISU, "240", null},
	{"xtrnlSysCtacTelNum", "xtrnlSysCtacTelNum", null, null, TYPE_HANKAKUEISU, "240", null},
	{"fsrNum", "fsrNum", null, null, TYPE_HANKAKUEISU, "10", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"GLBL_CMPY_CD",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//glblCmpyCd
        {"SLS_DT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO,  NO},	//slsDt
        {"SVC_RG_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcRgPk_H
        {"SVC_RG_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcRgNm_H
        {"SVC_CONTR_BR_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcContrBrCd_H
        {"SVC_CONTR_BR_DESC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcContrBrDescTxt_H
        {"SVC_MGR_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMgrTpCd_H
        {"SVC_MGR_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMgrTpCd_HD
        {"ORG_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//orgCd_HL
        {"ORG_CD", YES,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//orgCd_HT
        {"ORG_DESC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//orgDescTxt_H
        {"ORG_LAYER_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//orgLayerNum
        {"XX_PAGE_SHOW_FROM_NUM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowFromNum
        {"XX_PAGE_SHOW_TO_NUM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowToNum
        {"XX_PAGE_SHOW_OF_NUM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowOfNum
        {"XX_ROW_NUM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRowNum
		null,	//A
        {"PREV_OPEN_TASK_CNT",  NO,  null,null,"1", NO,YES, NO, NO,null,null,null, null,  NO,  NO},	//prevOpenTaskCnt_T
        {"INPROC_TASK_CNT",  NO,  null,null,"1", NO,YES, NO, NO,null,null,null, null,  NO,  NO},	//inprocTaskCnt_T
        {"CLO_TASK_CNT",  NO,  null,null,"1", NO,YES, NO, NO,null,null,null, null,  NO,  NO},	//cloTaskCnt_T
        {"CANC_TASK_CNT",  NO,  null,null,"1", NO,YES, NO, NO,null,null,null, null,  NO,  NO},	//cancTaskCnt_T
        {"REJ_TASK_CNT",  NO,  null,null,"1", NO,YES, NO, NO,null,null,null, null,  NO,  NO},	//rejTaskCnt_T
        {"XX_RCV_TM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRcvTm_T
        {"TO_BE_OPTM_TASK_CNT",  NO,  null,null,"1", NO,YES, NO, NO,null,null,null, null,  NO,  NO},	//toBeOptmTaskCnt_T
        {"SCHD_TASK_CNT",  NO,  null,null,"1", NO,YES, NO, NO,null,null,null, null,  NO,  NO},	//schdTaskCnt_T
        {"ASG_TASK_CNT",  NO,  null,null,"1", NO,YES, NO, NO,null,null,null, null,  NO,  NO},	//asgTaskCnt_T
        {"OPEN_TASK_CNT",  NO,  null,null,"1", NO,YES, NO, NO,null,null,null, null,  NO,  NO},	//openTaskCnt_T
        {"HLD_TASK_CNT",  NO,  null,null,"1", NO,YES, NO, NO,null,null,null, null,  NO,  NO},	//hldTaskCnt_T
        {"ESCL_TASK_CNT",  NO,  null,null,"1", NO,YES, NO, NO,null,null,null, null,  NO,  NO},	//esclTaskCnt_T
        {"VIP_TASK_CNT",  NO,  null,null,"1", NO,YES, NO, NO,null,null,null, null,  NO,  NO},	//vipTaskCnt_T
        {"ATTN_TASK_CNT",  NO,  null,null,"1", NO,YES, NO, NO,null,null,null, null,  NO,  NO},	//attnTaskCnt_T
        {"XX_SCR_EVENT_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxScrEventNm
		null,	//B
        {"XX_EVN_TP_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxEvnTpTxt
        {"SVC_RQST_DOWN_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcRqstDownTpCd
        {"XX_POP_PRM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPopPrm_0
        {"XX_POP_PRM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPopPrm_1
        {"XX_POP_PRM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPopPrm_2
        {"XX_POP_PRM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPopPrm_3
        {"XX_POP_PRM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPopPrm_4
        {"XX_POP_PRM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPopPrm_5
        {"XX_POP_PRM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPopPrm_6
        {"XTRNL_SYS_TASK_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xtrnlSysTaskNum
        {"SHIP_TO_CUST_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToCustCd
        {"PBLM_SMRY_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//pblmSmryTxt
        {"XTRNL_SYS_BILL_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xtrnlSysBillTpCd
        {"XTRNL_SYS_USR_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xtrnlSysUsrCd
        {"XTRNL_SYS_INCDT_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xtrnlSysIncdtNum
        {"XTRNL_SYS_CTAC_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xtrnlSysCtacNm
        {"XTRNL_SYS_CTAC_TEL_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xtrnlSysCtacTelNum
        {"FSR_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//fsrNum
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

