//This file was automatically generated by Business Component Interface Definition Document (Define Business Application Global Area) and XLA200710010.
// Generated on    :20160630133651000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NFAL0200_ESMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NFAL0200;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NFAL0200 Business Application Global Area Message class.
 * @author
 * @version XLA200710010
 */
public class NFAL0200_ESMsg extends EZDSMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** COA_ACCT_CD_E*/
	public final EZDSStringItem              coaAcctCd_E;

    /** COA_ACCT_DESC_TXT_E*/
	public final EZDSStringItem              coaAcctDescTxt_E;

    /** TRIAL_BAL_TP_NM_E*/
	public final EZDSStringItem              trialBalTpNm_E;

    /** COA_START_ACTV_DT_E*/
	public final EZDSDateItem              coaStartActvDt_E;

    /** COA_END_ACTV_DT_E*/
	public final EZDSDateItem              coaEndActvDt_E;

    /** XX_CHK_BOX_E*/
	public final EZDSStringItem              xxChkBox_E;

    /** COA_ENBL_FLG_E*/
	public final EZDSStringItem              coaEnblFlg_E;

    /** COA_PSTG_ALLW_FLG_E*/
	public final EZDSStringItem              coaPstgAllwFlg_E;

    /** COA_BDG_ALLW_FLG_E*/
	public final EZDSStringItem              coaBdgAllwFlg_E;

    /** COA_ACRL_FLG_E*/
	public final EZDSStringItem              coaAcrlFlg_E;

    /** COA_ACRL_FLG_O*/
	public final EZDSStringItem              coaAcrlFlg_O;

    /** _EZUpdateDateTime_E*/
	public final EZDSStringItem              ezUpTime_E;

    /** _EZUpTimeZone_E*/
	public final EZDSStringItem              ezUpTimeZone_E;


	/**
	 * NFAL0200_ESMsg is constructor.
	 * The initialization when the instance of NFAL0200_ESMsg is generated.
	 */
	public NFAL0200_ESMsg() {
		this(false, -1);
	}

	/**
	 * NFAL0200_ESMsg is constructor.
	 * The initialization when the instance of NFAL0200_ESMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NFAL0200_ESMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		coaAcctCd_E = (EZDSStringItem)newItem("coaAcctCd_E");
		coaAcctDescTxt_E = (EZDSStringItem)newItem("coaAcctDescTxt_E");
		trialBalTpNm_E = (EZDSStringItem)newItem("trialBalTpNm_E");
		coaStartActvDt_E = (EZDSDateItem)newItem("coaStartActvDt_E");
		coaEndActvDt_E = (EZDSDateItem)newItem("coaEndActvDt_E");
		xxChkBox_E = (EZDSStringItem)newItem("xxChkBox_E");
		coaEnblFlg_E = (EZDSStringItem)newItem("coaEnblFlg_E");
		coaPstgAllwFlg_E = (EZDSStringItem)newItem("coaPstgAllwFlg_E");
		coaBdgAllwFlg_E = (EZDSStringItem)newItem("coaBdgAllwFlg_E");
		coaAcrlFlg_E = (EZDSStringItem)newItem("coaAcrlFlg_E");
		coaAcrlFlg_O = (EZDSStringItem)newItem("coaAcrlFlg_O");
		ezUpTime_E = (EZDSStringItem)newItem("ezUpTime_E");
		ezUpTimeZone_E = (EZDSStringItem)newItem("ezUpTimeZone_E");
	}

	/**
	 * get the type of array which is stored
	 * @return NFAL0200_ESMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NFAL0200_ESMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"coaAcctCd_E", "coaAcctCd_E", "E", null, TYPE_HANKAKUEISU, "8", null},
	{"coaAcctDescTxt_E", "coaAcctDescTxt_E", "E", null, TYPE_HANKAKUEISU, "50", null},
	{"trialBalTpNm_E", "trialBalTpNm_E", "E", null, TYPE_HANKAKUEISU, "30", null},
	{"coaStartActvDt_E", "coaStartActvDt_E", "E", null, TYPE_NENTSUKIHI, "8", null},
	{"coaEndActvDt_E", "coaEndActvDt_E", "E", null, TYPE_NENTSUKIHI, "8", null},
	{"xxChkBox_E", "xxChkBox_E", "E", null, TYPE_HANKAKUEIJI, "1", null},
	{"coaEnblFlg_E", "coaEnblFlg_E", "E", null, TYPE_HANKAKUEISU, "1", null},
	{"coaPstgAllwFlg_E", "coaPstgAllwFlg_E", "E", null, TYPE_HANKAKUEISU, "1", null},
	{"coaBdgAllwFlg_E", "coaBdgAllwFlg_E", "E", null, TYPE_HANKAKUEISU, "1", null},
	{"coaAcrlFlg_E", "coaAcrlFlg_E", "E", null, TYPE_HANKAKUEISU, "1", null},
	{"coaAcrlFlg_O", "coaAcrlFlg_O", "O", null, TYPE_HANKAKUEISU, "1", null},
	{"ezUpTime_E", "ezUpTime_E", "E", null, TYPE_HANKAKUEISU, "17", null},
	{"ezUpTimeZone_E", "ezUpTimeZone_E", "E", null, TYPE_HANKAKUEISU, "5", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"COA_ACCT_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaAcctCd_E
        {"COA_ACCT_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaAcctDescTxt_E
        {"TRIAL_BAL_TP_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trialBalTpNm_E
        {"COA_START_ACTV_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaStartActvDt_E
        {"COA_END_ACTV_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaEndActvDt_E
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_E
        {"COA_ENBL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaEnblFlg_E
        {"COA_PSTG_ALLW_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaPstgAllwFlg_E
        {"COA_BDG_ALLW_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaBdgAllwFlg_E
        {"COA_ACRL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaAcrlFlg_E
        {"COA_ACRL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaAcrlFlg_O
        {"_EZUpdateDateTime",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTime_E
        {"_EZUpTimeZone",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTimeZone_E
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

