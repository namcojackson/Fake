//This file was automatically generated by Business Component Interface Definition Document (Define Business Application Global Area) and XLA200710010.
// Generated on    :20230424092213000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NMAL7190SMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NMAL7190;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NMAL7190 Business Application Global Area Message class.
 * @author
 * @version XLA200710010
 */
public class NMAL7190SMsg extends EZDSMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** PRC_GRP_PK*/
	public final EZDSBigDecimalItem              prcGrpPk;

    /** PRC_GRP_PK_BK*/
	public final EZDSBigDecimalItem              prcGrpPk_BK;

    /** PRC_GRP_NM*/
	public final EZDSStringItem              prcGrpNm;

    /** PRC_GRP_DESC_TXT*/
	public final EZDSStringItem              prcGrpDescTxt;

    /** PRC_GRP_TP_CD*/
	public final EZDSStringItem              prcGrpTpCd;

    /** PRC_GRP_TRX_TP_CD*/
	public final EZDSStringItem              prcGrpTrxTpCd;

    /** ACTV_FLG*/
	public final EZDSStringItem              actvFlg;

    /** EFF_FROM_DT*/
	public final EZDSDateItem              effFromDt;

    /** EFF_THRU_DT*/
	public final EZDSDateItem              effThruDt;

    /** _EZUpdateDateTime*/
	public final EZDSStringItem              ezUpTime;

    /** _EZUpTimeZone*/
	public final EZDSStringItem              ezUpTimeZone;

    /** A*/
	public final business.blap.NMAL7190.NMAL7190_ASMsgArray              A;

    /** F*/
	public final business.blap.NMAL7190.NMAL7190_FSMsgArray              F;

    /** Y*/
	public final business.blap.NMAL7190.NMAL7190_YSMsgArray              Y;

    /** Z*/
	public final business.blap.NMAL7190.NMAL7190_ZSMsgArray              Z;


	/**
	 * NMAL7190SMsg is constructor.
	 * The initialization when the instance of NMAL7190SMsg is generated.
	 */
	public NMAL7190SMsg() {
		this(false, -1);
	}

	/**
	 * NMAL7190SMsg is constructor.
	 * The initialization when the instance of NMAL7190SMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NMAL7190SMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		prcGrpPk = (EZDSBigDecimalItem)newItem("prcGrpPk");
		prcGrpPk_BK = (EZDSBigDecimalItem)newItem("prcGrpPk_BK");
		prcGrpNm = (EZDSStringItem)newItem("prcGrpNm");
		prcGrpDescTxt = (EZDSStringItem)newItem("prcGrpDescTxt");
		prcGrpTpCd = (EZDSStringItem)newItem("prcGrpTpCd");
		prcGrpTrxTpCd = (EZDSStringItem)newItem("prcGrpTrxTpCd");
		actvFlg = (EZDSStringItem)newItem("actvFlg");
		effFromDt = (EZDSDateItem)newItem("effFromDt");
		effThruDt = (EZDSDateItem)newItem("effThruDt");
		ezUpTime = (EZDSStringItem)newItem("ezUpTime");
		ezUpTimeZone = (EZDSStringItem)newItem("ezUpTimeZone");
		A = (business.blap.NMAL7190.NMAL7190_ASMsgArray)newMsgArray("A");
		F = (business.blap.NMAL7190.NMAL7190_FSMsgArray)newMsgArray("F");
		Y = (business.blap.NMAL7190.NMAL7190_YSMsgArray)newMsgArray("Y");
		Z = (business.blap.NMAL7190.NMAL7190_ZSMsgArray)newMsgArray("Z");
	}

	/**
	 * get the type of array which is stored
	 * @return NMAL7190SMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NMAL7190SMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"prcGrpPk", "prcGrpPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"prcGrpPk_BK", "prcGrpPk_BK", "BK", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"prcGrpNm", "prcGrpNm", null, null, TYPE_HANKAKUEISU, "50", null},
	{"prcGrpDescTxt", "prcGrpDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"prcGrpTpCd", "prcGrpTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"prcGrpTrxTpCd", "prcGrpTrxTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"actvFlg", "actvFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"effFromDt", "effFromDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt", "effThruDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"ezUpTime", "ezUpTime", null, null, TYPE_HANKAKUEISU, "17", null},
	{"ezUpTimeZone", "ezUpTimeZone", null, null, TYPE_HANKAKUEISU, "5", null},
	{"A", "A", null, "10000", "business.blap.NMAL7190.NMAL7190_ASMsgArray", null, null},
	
	{"F", "F", null, "2", "business.blap.NMAL7190.NMAL7190_FSMsgArray", null, null},
	
	{"Y", "Y", null, "1", "business.blap.NMAL7190.NMAL7190_YSMsgArray", null, null},
	
	{"Z", "Z", null, "10000", "business.blap.NMAL7190.NMAL7190_ZSMsgArray", null, null},
	
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"PRC_GRP_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcGrpPk
        {"PRC_GRP_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcGrpPk_BK
        {"PRC_GRP_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcGrpNm
        {"PRC_GRP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcGrpDescTxt
        {"PRC_GRP_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcGrpTpCd
        {"PRC_GRP_TRX_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcGrpTrxTpCd
        {"ACTV_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//actvFlg
        {"EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effFromDt
        {"EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effThruDt
        {"_EZUpdateDateTime",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTime
        {"_EZUpTimeZone",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTimeZone
		null,	//A
		null,	//F
		null,	//Y
		null,	//Z
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

