//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20230808112420000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NWAL1770_ECMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NWAL1770;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NWAL1770 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NWAL1770_ECMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_LINE_NUM_E*/
	public final EZDCStringItem              xxLineNum_E;

    /** XX_CELL_IDX_E*/
	public final EZDCBigDecimalItem              xxCellIdx_E;

    /** ORD_PRC_CALC_BASE_PK_E*/
	public final EZDCBigDecimalItem              ordPrcCalcBasePk_E;

    /** SPLY_QUOTE_NUM_E*/
	public final EZDCStringItem              splyQuoteNum_E;

    /** SPLY_QUOTE_DTL_LINE_NUM_E*/
	public final EZDCStringItem              splyQuoteDtlLineNum_E;

    /** SPLY_QUOTE_DTL_LINE_SUB_NUM_E*/
	public final EZDCStringItem              splyQuoteDtlLineSubNum_E;

    /** PRC_COND_TP_CD_E*/
	public final EZDCStringItem              prcCondTpCd_E;

    /** PRC_COND_TP_DESC_TXT_E*/
	public final EZDCStringItem              prcCondTpDescTxt_E;

    /** PRC_DTL_GRP_CD_E*/
	public final EZDCStringItem              prcDtlGrpCd_E;

    /** PRC_JRNL_GRP_CD_E*/
	public final EZDCStringItem              prcJrnlGrpCd_E;

    /** PRC_CATG_CD_E*/
	public final EZDCStringItem              prcCatgCd_E;

    /** PKG_UOM_CD_E*/
	public final EZDCStringItem              pkgUomCd_E;

    /** PRC_COND_UNIT_CD_E*/
	public final EZDCStringItem              prcCondUnitCd_E;

    /** PRC_CALC_METH_CD_E*/
	public final EZDCStringItem              prcCalcMethCd_E;

    /** DS_MDSE_PRC_PK_E*/
	public final EZDCBigDecimalItem              dsMdsePrcPk_E;

    /** SPEC_COND_PRC_PK_E*/
	public final EZDCBigDecimalItem              specCondPrcPk_E;

    /** FRT_PER_WT_PK_E*/
	public final EZDCBigDecimalItem              frtPerWtPk_E;

    /** PRC_COND_MAN_ENTRY_FLG_E*/
	public final EZDCStringItem              prcCondManEntryFlg_E;

    /** PRC_COND_MAN_ADD_FLG_E*/
	public final EZDCStringItem              prcCondManAddFlg_E;

    /** PRC_COND_MAN_DEL_FLG_E*/
	public final EZDCStringItem              prcCondManDelFlg_E;

    /** AUTO_PRC_AMT_RATE_E*/
	public final EZDCBigDecimalItem              autoPrcAmtRate_E;

    /** MAX_PRC_AMT_RATE_E*/
	public final EZDCBigDecimalItem              maxPrcAmtRate_E;

    /** MIN_PRC_AMT_RATE_E*/
	public final EZDCBigDecimalItem              minPrcAmtRate_E;

    /** MAN_PRC_AMT_RATE_E*/
	public final EZDCBigDecimalItem              manPrcAmtRate_E;

    /** CALC_PRC_AMT_RATE_E*/
	public final EZDCBigDecimalItem              calcPrcAmtRate_E;

    /** UNIT_PRC_AMT_E*/
	public final EZDCBigDecimalItem              unitPrcAmt_E;

    /** COA_ACCT_CD_E*/
	public final EZDCStringItem              coaAcctCd_E;

    /** AUTO_PRC_CCY_CD_E*/
	public final EZDCStringItem              autoPrcCcyCd_E;

    /** PRC_RULE_APPLY_FLG_E*/
	public final EZDCStringItem              prcRuleApplyFlg_E;

    /** PRC_RULE_PRCD_PK_E*/
	public final EZDCBigDecimalItem              prcRulePrcdPk_E;


	/**
	 * NWAL1770_ECMsg is constructor.
	 * The initialization when the instance of NWAL1770_ECMsg is generated.
	 */
	public NWAL1770_ECMsg() {
		this(false, -1);
	}

	/**
	 * NWAL1770_ECMsg is constructor.
	 * The initialization when the instance of NWAL1770_ECMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NWAL1770_ECMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxLineNum_E = (EZDCStringItem)newItem("xxLineNum_E");
		xxCellIdx_E = (EZDCBigDecimalItem)newItem("xxCellIdx_E");
		ordPrcCalcBasePk_E = (EZDCBigDecimalItem)newItem("ordPrcCalcBasePk_E");
		splyQuoteNum_E = (EZDCStringItem)newItem("splyQuoteNum_E");
		splyQuoteDtlLineNum_E = (EZDCStringItem)newItem("splyQuoteDtlLineNum_E");
		splyQuoteDtlLineSubNum_E = (EZDCStringItem)newItem("splyQuoteDtlLineSubNum_E");
		prcCondTpCd_E = (EZDCStringItem)newItem("prcCondTpCd_E");
		prcCondTpDescTxt_E = (EZDCStringItem)newItem("prcCondTpDescTxt_E");
		prcDtlGrpCd_E = (EZDCStringItem)newItem("prcDtlGrpCd_E");
		prcJrnlGrpCd_E = (EZDCStringItem)newItem("prcJrnlGrpCd_E");
		prcCatgCd_E = (EZDCStringItem)newItem("prcCatgCd_E");
		pkgUomCd_E = (EZDCStringItem)newItem("pkgUomCd_E");
		prcCondUnitCd_E = (EZDCStringItem)newItem("prcCondUnitCd_E");
		prcCalcMethCd_E = (EZDCStringItem)newItem("prcCalcMethCd_E");
		dsMdsePrcPk_E = (EZDCBigDecimalItem)newItem("dsMdsePrcPk_E");
		specCondPrcPk_E = (EZDCBigDecimalItem)newItem("specCondPrcPk_E");
		frtPerWtPk_E = (EZDCBigDecimalItem)newItem("frtPerWtPk_E");
		prcCondManEntryFlg_E = (EZDCStringItem)newItem("prcCondManEntryFlg_E");
		prcCondManAddFlg_E = (EZDCStringItem)newItem("prcCondManAddFlg_E");
		prcCondManDelFlg_E = (EZDCStringItem)newItem("prcCondManDelFlg_E");
		autoPrcAmtRate_E = (EZDCBigDecimalItem)newItem("autoPrcAmtRate_E");
		maxPrcAmtRate_E = (EZDCBigDecimalItem)newItem("maxPrcAmtRate_E");
		minPrcAmtRate_E = (EZDCBigDecimalItem)newItem("minPrcAmtRate_E");
		manPrcAmtRate_E = (EZDCBigDecimalItem)newItem("manPrcAmtRate_E");
		calcPrcAmtRate_E = (EZDCBigDecimalItem)newItem("calcPrcAmtRate_E");
		unitPrcAmt_E = (EZDCBigDecimalItem)newItem("unitPrcAmt_E");
		coaAcctCd_E = (EZDCStringItem)newItem("coaAcctCd_E");
		autoPrcCcyCd_E = (EZDCStringItem)newItem("autoPrcCcyCd_E");
		prcRuleApplyFlg_E = (EZDCStringItem)newItem("prcRuleApplyFlg_E");
		prcRulePrcdPk_E = (EZDCBigDecimalItem)newItem("prcRulePrcdPk_E");
	}

	/**
	 * get the type of array which is stored
	 * @return NWAL1770_ECMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NWAL1770_ECMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxLineNum_E", "xxLineNum_E", "E", null, TYPE_HANKAKUEISU, "11", null},
	{"xxCellIdx_E", "xxCellIdx_E", "E", null, TYPE_SEISU_SYOSU, "4", "0"},
	{"ordPrcCalcBasePk_E", "ordPrcCalcBasePk_E", "E", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"splyQuoteNum_E", "splyQuoteNum_E", "E", null, TYPE_HANKAKUEISU, "8", null},
	{"splyQuoteDtlLineNum_E", "splyQuoteDtlLineNum_E", "E", null, TYPE_HANKAKUEISU, "3", null},
	{"splyQuoteDtlLineSubNum_E", "splyQuoteDtlLineSubNum_E", "E", null, TYPE_HANKAKUEISU, "3", null},
	{"prcCondTpCd_E", "prcCondTpCd_E", "E", null, TYPE_HANKAKUEISU, "4", null},
	{"prcCondTpDescTxt_E", "prcCondTpDescTxt_E", "E", null, TYPE_HANKAKUEISU, "50", null},
	{"prcDtlGrpCd_E", "prcDtlGrpCd_E", "E", null, TYPE_HANKAKUEISU, "4", null},
	{"prcJrnlGrpCd_E", "prcJrnlGrpCd_E", "E", null, TYPE_HANKAKUEISU, "4", null},
	{"prcCatgCd_E", "prcCatgCd_E", "E", null, TYPE_HANKAKUEISU, "10", null},
	{"pkgUomCd_E", "pkgUomCd_E", "E", null, TYPE_HANKAKUEISU, "4", null},
	{"prcCondUnitCd_E", "prcCondUnitCd_E", "E", null, TYPE_HANKAKUEISU, "1", null},
	{"prcCalcMethCd_E", "prcCalcMethCd_E", "E", null, TYPE_HANKAKUEISU, "2", null},
	{"dsMdsePrcPk_E", "dsMdsePrcPk_E", "E", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"specCondPrcPk_E", "specCondPrcPk_E", "E", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"frtPerWtPk_E", "frtPerWtPk_E", "E", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"prcCondManEntryFlg_E", "prcCondManEntryFlg_E", "E", null, TYPE_HANKAKUEISU, "1", null},
	{"prcCondManAddFlg_E", "prcCondManAddFlg_E", "E", null, TYPE_HANKAKUEISU, "1", null},
	{"prcCondManDelFlg_E", "prcCondManDelFlg_E", "E", null, TYPE_HANKAKUEISU, "1", null},
	{"autoPrcAmtRate_E", "autoPrcAmtRate_E", "E", null, TYPE_SEISU_SYOSU, "19", "6"},
	{"maxPrcAmtRate_E", "maxPrcAmtRate_E", "E", null, TYPE_SEISU_SYOSU, "19", "6"},
	{"minPrcAmtRate_E", "minPrcAmtRate_E", "E", null, TYPE_SEISU_SYOSU, "19", "6"},
	{"manPrcAmtRate_E", "manPrcAmtRate_E", "E", null, TYPE_SEISU_SYOSU, "19", "6"},
	{"calcPrcAmtRate_E", "calcPrcAmtRate_E", "E", null, TYPE_SEISU_SYOSU, "19", "6"},
	{"unitPrcAmt_E", "unitPrcAmt_E", "E", null, TYPE_SEISU_SYOSU, "19", "4"},
	{"coaAcctCd_E", "coaAcctCd_E", "E", null, TYPE_HANKAKUEISU, "8", null},
	{"autoPrcCcyCd_E", "autoPrcCcyCd_E", "E", null, TYPE_HANKAKUEISU, "3", null},
	{"prcRuleApplyFlg_E", "prcRuleApplyFlg_E", "E", null, TYPE_HANKAKUEISU, "1", null},
	{"prcRulePrcdPk_E", "prcRulePrcdPk_E", "E", null, TYPE_SEISU_SYOSU, "28", "0"},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_LINE_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxLineNum_E
        {"XX_CELL_IDX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxCellIdx_E
        {"ORD_PRC_CALC_BASE_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordPrcCalcBasePk_E
        {"SPLY_QUOTE_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//splyQuoteNum_E
        {"SPLY_QUOTE_DTL_LINE_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//splyQuoteDtlLineNum_E
        {"SPLY_QUOTE_DTL_LINE_SUB_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//splyQuoteDtlLineSubNum_E
        {"PRC_COND_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCondTpCd_E
        {"PRC_COND_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCondTpDescTxt_E
        {"PRC_DTL_GRP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcDtlGrpCd_E
        {"PRC_JRNL_GRP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcJrnlGrpCd_E
        {"PRC_CATG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCatgCd_E
        {"PKG_UOM_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//pkgUomCd_E
        {"PRC_COND_UNIT_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCondUnitCd_E
        {"PRC_CALC_METH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCalcMethCd_E
        {"DS_MDSE_PRC_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsMdsePrcPk_E
        {"SPEC_COND_PRC_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//specCondPrcPk_E
        {"FRT_PER_WT_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//frtPerWtPk_E
        {"PRC_COND_MAN_ENTRY_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCondManEntryFlg_E
        {"PRC_COND_MAN_ADD_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCondManAddFlg_E
        {"PRC_COND_MAN_DEL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCondManDelFlg_E
        {"AUTO_PRC_AMT_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//autoPrcAmtRate_E
        {"MAX_PRC_AMT_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//maxPrcAmtRate_E
        {"MIN_PRC_AMT_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//minPrcAmtRate_E
        {"MAN_PRC_AMT_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//manPrcAmtRate_E
        {"CALC_PRC_AMT_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//calcPrcAmtRate_E
        {"UNIT_PRC_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//unitPrcAmt_E
        {"COA_ACCT_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaAcctCd_E
        {"AUTO_PRC_CCY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//autoPrcCcyCd_E
        {"PRC_RULE_APPLY_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleApplyFlg_E
        {"PRC_RULE_PRCD_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRulePrcdPk_E
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

