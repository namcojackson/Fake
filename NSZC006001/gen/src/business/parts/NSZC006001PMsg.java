//This file was automatically generated by Common Business Component Interface Definition Document and XLA200710010.
// Generated on    :20190117115928000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :CommonBusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSZC006001PMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.parts;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSZC006001 Common Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSZC006001PMsg extends EZDPMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** GLBL_CMPY_CD*/
	public final EZDPStringItem              glblCmpyCd;

    /** XX_MODE_CD*/
	public final EZDPStringItem              xxModeCd;

    /** FSR_NUM*/
	public final EZDPStringItem              fsrNum;

    /** FSR_VISIT_NUM*/
	public final EZDPStringItem              fsrVisitNum;

    /** ORIG_SVC_INV_NUM*/
	public final EZDPStringItem              origSvcInvNum;

    /** BILL_TO_CUST_CD*/
	public final EZDPStringItem              billToCustCd;

    /** SELL_TO_CUST_CD*/
	public final EZDPStringItem              sellToCustCd;

    /** SHIP_TO_CUST_CD*/
	public final EZDPStringItem              shipToCustCd;

    /** SVC_MACH_MSTR_PK*/
	public final EZDPBigDecimalItem              svcMachMstrPk;

    /** SER_NUM*/
	public final EZDPStringItem              serNum;

    /** MDSE_CD*/
	public final EZDPStringItem              mdseCd;

    /** MDL_ID*/
	public final EZDPBigDecimalItem              mdlId;

    /** MDL_NM*/
	public final EZDPStringItem              mdlNm;

    /** DS_CONTR_PK*/
	public final EZDPBigDecimalItem              dsContrPk;

    /** DS_CONTR_NUM*/
	public final EZDPStringItem              dsContrNum;

    /** DS_CONTR_DTL_PK*/
	public final EZDPBigDecimalItem              dsContrDtlPk;

    /** DEAL_CCY_CD*/
	public final EZDPStringItem              dealCcyCd;

    /** CCY_EXCH_RATE*/
	public final EZDPBigDecimalItem              ccyExchRate;

    /** PMT_TERM_CASH_DISC_CD*/
	public final EZDPStringItem              pmtTermCashDiscCd;

    /** PMT_TERM_START_DT*/
	public final EZDPDateItem              pmtTermStartDt;

    /** TECH_CD*/
	public final EZDPStringItem              techCd;

    /** CUST_PO_NUM*/
	public final EZDPStringItem              custPoNum;

    /** CUST_PO_DT*/
	public final EZDPDateItem              custPoDt;

    /** INV_DT*/
	public final EZDPDateItem              invDt;

    /** SVC_INV_NUM*/
	public final EZDPStringItem              svcInvNum;

    /** xxMsgIdList*/
	public final business.parts.NSZC006001_xxMsgIdListPMsgArray              xxMsgIdList;

    /** xxInvLineList*/
	public final business.parts.NSZC006001_xxInvLineListPMsgArray              xxInvLineList;


	/**
	 * NSZC006001PMsg is constructor.
	 * The initialization when the instance of NSZC006001PMsg is generated.
	 */
	public NSZC006001PMsg() {
		this(false, -1);
	}

	/**
	 * NSZC006001PMsg is constructor.
	 * The initialization when the instance of NSZC006001PMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSZC006001PMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		glblCmpyCd = (EZDPStringItem)newItem("glblCmpyCd");
		xxModeCd = (EZDPStringItem)newItem("xxModeCd");
		fsrNum = (EZDPStringItem)newItem("fsrNum");
		fsrVisitNum = (EZDPStringItem)newItem("fsrVisitNum");
		origSvcInvNum = (EZDPStringItem)newItem("origSvcInvNum");
		billToCustCd = (EZDPStringItem)newItem("billToCustCd");
		sellToCustCd = (EZDPStringItem)newItem("sellToCustCd");
		shipToCustCd = (EZDPStringItem)newItem("shipToCustCd");
		svcMachMstrPk = (EZDPBigDecimalItem)newItem("svcMachMstrPk");
		serNum = (EZDPStringItem)newItem("serNum");
		mdseCd = (EZDPStringItem)newItem("mdseCd");
		mdlId = (EZDPBigDecimalItem)newItem("mdlId");
		mdlNm = (EZDPStringItem)newItem("mdlNm");
		dsContrPk = (EZDPBigDecimalItem)newItem("dsContrPk");
		dsContrNum = (EZDPStringItem)newItem("dsContrNum");
		dsContrDtlPk = (EZDPBigDecimalItem)newItem("dsContrDtlPk");
		dealCcyCd = (EZDPStringItem)newItem("dealCcyCd");
		ccyExchRate = (EZDPBigDecimalItem)newItem("ccyExchRate");
		pmtTermCashDiscCd = (EZDPStringItem)newItem("pmtTermCashDiscCd");
		pmtTermStartDt = (EZDPDateItem)newItem("pmtTermStartDt");
		techCd = (EZDPStringItem)newItem("techCd");
		custPoNum = (EZDPStringItem)newItem("custPoNum");
		custPoDt = (EZDPDateItem)newItem("custPoDt");
		invDt = (EZDPDateItem)newItem("invDt");
		svcInvNum = (EZDPStringItem)newItem("svcInvNum");
		xxMsgIdList = (business.parts.NSZC006001_xxMsgIdListPMsgArray)newMsgArray("xxMsgIdList");
		xxInvLineList = (business.parts.NSZC006001_xxInvLineListPMsgArray)newMsgArray("xxInvLineList");
	}

	/**
	 * get the type of array which is stored
	 * @return NSZC006001PMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSZC006001PMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"glblCmpyCd", "glblCmpyCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"xxModeCd", "xxModeCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"fsrNum", "fsrNum", null, null, TYPE_HANKAKUEISU, "10", null},
	{"fsrVisitNum", "fsrVisitNum", null, null, TYPE_HANKAKUEISU, "10", null},
	{"origSvcInvNum", "origSvcInvNum", null, null, TYPE_HANKAKUEISU, "13", null},
	{"billToCustCd", "billToCustCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"sellToCustCd", "sellToCustCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"shipToCustCd", "shipToCustCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"svcMachMstrPk", "svcMachMstrPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"serNum", "serNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"mdseCd", "mdseCd", null, null, TYPE_HANKAKUEISU, "16", null},
	{"mdlId", "mdlId", null, null, TYPE_SEISU_SYOSU, "22", "0"},
	{"mdlNm", "mdlNm", null, null, TYPE_HANKAKUEISU, "50", null},
	{"dsContrPk", "dsContrPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrNum", "dsContrNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"dsContrDtlPk", "dsContrDtlPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dealCcyCd", "dealCcyCd", null, null, TYPE_HANKAKUEISU, "3", null},
	{"ccyExchRate", "ccyExchRate", null, null, TYPE_SEISU_SYOSU, "9", "5"},
	{"pmtTermCashDiscCd", "pmtTermCashDiscCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"pmtTermStartDt", "pmtTermStartDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"techCd", "techCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"custPoNum", "custPoNum", null, null, TYPE_HANKAKUEISU, "35", null},
	{"custPoDt", "custPoDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"invDt", "invDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"svcInvNum", "svcInvNum", null, null, TYPE_HANKAKUEISU, "13", null},
	{"xxMsgIdList", "xxMsgIdList", null, "100", "business.parts.NSZC006001_xxMsgIdListPMsgArray", null, null},
	
	{"xxInvLineList", "xxInvLineList", null, "999", "business.parts.NSZC006001_xxInvLineListPMsgArray", null, null},
	
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"GLBL_CMPY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//glblCmpyCd
        {"XX_MODE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxModeCd
        {"FSR_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//fsrNum
        {"FSR_VISIT_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//fsrVisitNum
        {"ORIG_SVC_INV_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//origSvcInvNum
        {"BILL_TO_CUST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//billToCustCd
        {"SELL_TO_CUST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//sellToCustCd
        {"SHIP_TO_CUST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToCustCd
        {"SVC_MACH_MSTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachMstrPk
        {"SER_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNum
        {"MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd
        {"MDL_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdlId
        {"MDL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdlNm
        {"DS_CONTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrPk
        {"DS_CONTR_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrNum
        {"DS_CONTR_DTL_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrDtlPk
        {"DEAL_CCY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dealCcyCd
        {"CCY_EXCH_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ccyExchRate
        {"PMT_TERM_CASH_DISC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//pmtTermCashDiscCd
        {"PMT_TERM_START_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//pmtTermStartDt
        {"TECH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//techCd
        {"CUST_PO_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//custPoNum
        {"CUST_PO_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//custPoDt
        {"INV_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invDt
        {"SVC_INV_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcInvNum
		null,	//xxMsgIdList
		null,	//xxInvLineList
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

