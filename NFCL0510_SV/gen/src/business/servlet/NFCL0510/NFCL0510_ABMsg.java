//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20230704162143000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NFCL0510_ABMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NFCL0510;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NFCL0510 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NFCL0510_ABMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** _EZUpTimeZone_A*/
	public final EZDBStringItem              ezUpTimeZone_A;

    /** _EZUpdateDateTime_A*/
	public final EZDBStringItem              ezUpTime_A;

    /** AR_LOCK_BOX_FILE_NM_A*/
	public final EZDBStringItem              arLockBoxFileNm_A;

    /** AR_LOCK_BOX_NM_A*/
	public final EZDBStringItem              arLockBoxNm_A;

    /** RCV_DT_A*/
	public final EZDBDateItem              rcvDt_A;

    /** AR_LOCK_BOX_STS_CD_A*/
	public final EZDBStringItem              arLockBoxStsCd_A;

    /** AR_LOCK_BOX_STS_CD_AC*/
	public final EZDBStringItemArray              arLockBoxStsCd_AC;

    /** AR_LOCK_BOX_STS_DESC_TXT_AD*/
	public final EZDBStringItemArray              arLockBoxStsDescTxt_AD;

    /** AR_LOCK_BOX_STS_CD_AB*/
	public final EZDBStringItem              arLockBoxStsCd_AB;

    /** REM_BANK_RTE_NUM_A*/
	public final EZDBStringItem              remBankRteNum_A;

    /** REM_DS_BANK_ACCT_NUM_A*/
	public final EZDBStringItem              remDsBankAcctNum_A;

    /** LOCK_BOX_REC_CNT_A*/
	public final EZDBBigDecimalItem              lockBoxRecCnt_A;

    /** LOCK_BOX_TOT_AMT_A*/
	public final EZDBBigDecimalItem              lockBoxTotAmt_A;

    /** AR_LOCK_BOX_BAT_NUM_A*/
	public final EZDBStringItem              arLockBoxBatNum_A;

    /** AR_RCPT_RCV_ERR_FLG_A*/
	public final EZDBStringItem              arRcptRcvErrFlg_A;

    /** BAT_RCPT_REC_CNT_A*/
	public final EZDBBigDecimalItem              batRcptRecCnt_A;

    /** BAT_RCPT_TOT_AMT_A*/
	public final EZDBBigDecimalItem              batRcptTotAmt_A;

    /** MAN_USBLE_LOCK_BOX_STS_FLG_A*/
	public final EZDBStringItem              manUsbleLockBoxStsFlg_A;


	/**
	 * NFCL0510_ABMsg is constructor.
	 * The initialization when the instance of NFCL0510_ABMsg is generated.
	 */
	public NFCL0510_ABMsg() {
		this(false, -1);
	}

	/**
	 * NFCL0510_ABMsg is constructor.
	 * The initialization when the instance of NFCL0510_ABMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NFCL0510_ABMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		ezUpTimeZone_A = (EZDBStringItem)newItem("ezUpTimeZone_A");
		ezUpTime_A = (EZDBStringItem)newItem("ezUpTime_A");
		arLockBoxFileNm_A = (EZDBStringItem)newItem("arLockBoxFileNm_A");
		arLockBoxNm_A = (EZDBStringItem)newItem("arLockBoxNm_A");
		rcvDt_A = (EZDBDateItem)newItem("rcvDt_A");
		arLockBoxStsCd_A = (EZDBStringItem)newItem("arLockBoxStsCd_A");
		arLockBoxStsCd_AC = (EZDBStringItemArray)newItemArray("arLockBoxStsCd_AC");
		arLockBoxStsDescTxt_AD = (EZDBStringItemArray)newItemArray("arLockBoxStsDescTxt_AD");
		arLockBoxStsCd_AB = (EZDBStringItem)newItem("arLockBoxStsCd_AB");
		remBankRteNum_A = (EZDBStringItem)newItem("remBankRteNum_A");
		remDsBankAcctNum_A = (EZDBStringItem)newItem("remDsBankAcctNum_A");
		lockBoxRecCnt_A = (EZDBBigDecimalItem)newItem("lockBoxRecCnt_A");
		lockBoxTotAmt_A = (EZDBBigDecimalItem)newItem("lockBoxTotAmt_A");
		arLockBoxBatNum_A = (EZDBStringItem)newItem("arLockBoxBatNum_A");
		arRcptRcvErrFlg_A = (EZDBStringItem)newItem("arRcptRcvErrFlg_A");
		batRcptRecCnt_A = (EZDBBigDecimalItem)newItem("batRcptRecCnt_A");
		batRcptTotAmt_A = (EZDBBigDecimalItem)newItem("batRcptTotAmt_A");
		manUsbleLockBoxStsFlg_A = (EZDBStringItem)newItem("manUsbleLockBoxStsFlg_A");
	}

	/**
	 * get the type of array which is stored
	 * @return NFCL0510_ABMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NFCL0510_ABMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"ezUpTimeZone_A", "ezUpTimeZone_A", "A", null, TYPE_HANKAKUEISU, "5", null},
	{"ezUpTime_A", "ezUpTime_A", "A", null, TYPE_HANKAKUEISU, "17", null},
	{"arLockBoxFileNm_A", "arLockBoxFileNm_A", "A", null, TYPE_HANKAKUEISU, "50", null},
	{"arLockBoxNm_A", "arLockBoxNm_A", "A", null, TYPE_HANKAKUEISU, "30", null},
	{"rcvDt_A", "rcvDt_A", "A", null, TYPE_NENTSUKIHI, "8", null},
	{"arLockBoxStsCd_A", "arLockBoxStsCd_A", "A", null, TYPE_HANKAKUEISU, "2", null},
	{"arLockBoxStsCd_AC", "arLockBoxStsCd_AC", "AC", "99", TYPE_HANKAKUEISU, "2", null},
	{"arLockBoxStsDescTxt_AD", "arLockBoxStsDescTxt_AD", "AD", "99", TYPE_HANKAKUEISU, "50", null},
	{"arLockBoxStsCd_AB", "arLockBoxStsCd_AB", "AB", null, TYPE_HANKAKUEISU, "2", null},
	{"remBankRteNum_A", "remBankRteNum_A", "A", null, TYPE_HANKAKUEISU, "10", null},
	{"remDsBankAcctNum_A", "remDsBankAcctNum_A", "A", null, TYPE_HANKAKUEISU, "14", null},
	{"lockBoxRecCnt_A", "lockBoxRecCnt_A", "A", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"lockBoxTotAmt_A", "lockBoxTotAmt_A", "A", null, TYPE_SEISU_SYOSU, "19", "4"},
	{"arLockBoxBatNum_A", "arLockBoxBatNum_A", "A", null, TYPE_HANKAKUEISU, "3", null},
	{"arRcptRcvErrFlg_A", "arRcptRcvErrFlg_A", "A", null, TYPE_HANKAKUEISU, "1", null},
	{"batRcptRecCnt_A", "batRcptRecCnt_A", "A", null, TYPE_SEISU_SYOSU, "4", "0"},
	{"batRcptTotAmt_A", "batRcptTotAmt_A", "A", null, TYPE_SEISU_SYOSU, "19", "4"},
	{"manUsbleLockBoxStsFlg_A", "manUsbleLockBoxStsFlg_A", "A", null, TYPE_HANKAKUEISU, "1", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"_EZUpTimeZone",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTimeZone_A
        {"_EZUpdateDateTime",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTime_A
        {"AR_LOCK_BOX_FILE_NM", YES,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//arLockBoxFileNm_A
        {"AR_LOCK_BOX_NM", YES,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//arLockBoxNm_A
        {"RCV_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//rcvDt_A
        {"AR_LOCK_BOX_STS_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//arLockBoxStsCd_A
        {"AR_LOCK_BOX_STS_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//arLockBoxStsCd_AC
        {"AR_LOCK_BOX_STS_DESC_TXT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//arLockBoxStsDescTxt_AD
        {"AR_LOCK_BOX_STS_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//arLockBoxStsCd_AB
        {"REM_BANK_RTE_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//remBankRteNum_A
        {"REM_DS_BANK_ACCT_NUM", YES,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//remDsBankAcctNum_A
        {"LOCK_BOX_REC_CNT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//lockBoxRecCnt_A
        {"LOCK_BOX_TOT_AMT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//lockBoxTotAmt_A
        {"AR_LOCK_BOX_BAT_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//arLockBoxBatNum_A
        {"AR_RCPT_RCV_ERR_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//arRcptRcvErrFlg_A
        {"BAT_RCPT_REC_CNT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//batRcptRecCnt_A
        {"BAT_RCPT_TOT_AMT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//batRcptTotAmt_A
        {"MAN_USBLE_LOCK_BOX_STS_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//manUsbleLockBoxStsFlg_A
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

