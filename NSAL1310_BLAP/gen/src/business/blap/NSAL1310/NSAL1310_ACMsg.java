//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20180702165731000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSAL1310_ACMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NSAL1310;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL1310 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL1310_ACMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_CHK_BOX_A1*/
	public final EZDCStringItem              xxChkBox_A1;

    /** SVC_COV_TMPL_TP_CD_A1*/
	public final EZDCStringItem              svcCovTmplTpCd_A1;

    /** SVC_TERM_ATTRB_DESC_TXT_A1*/
	public final EZDCStringItem              svcTermAttrbDescTxt_A1;

    /** SVC_TERM_DATA_TP_CD_A1*/
	public final EZDCStringItem              svcTermDataTpCd_A1;

    /** SVC_TERM_COND_DATA_SRC_CD_A1*/
	public final EZDCStringItem              svcTermCondDataSrcCd_A1;

    /** SVC_TERM_COND_DATA_VAL_CD_D1*/
	public final EZDCStringItem              svcTermCondDataValCd_D1;

    /** SVC_TERM_COND_DATA_VAL_CD_DC*/
	public final EZDCStringItemArray              svcTermCondDataValCd_DC;

    /** SVC_TERM_COND_DATA_DISP_TXT_DS*/
	public final EZDCStringItemArray              svcTermCondDataDispTxt_DS;

    /** SVC_TERM_ATTRB_DEF_VAL_TXT_A1*/
	public final EZDCStringItem              svcTermAttrbDefValTxt_A1;

    /** COND_VAL_NUM_A1*/
	public final EZDCBigDecimalItem              condValNum_A1;

    /** XX_TRX_DT_A1*/
	public final EZDCDateItem              xxTrxDt_A1;

    /** PHYS_MAINT_TRGT_TBL_NM_A1*/
	public final EZDCStringItem              physMaintTrgtTblNm_A1;

    /** SVC_TERM_COND_DATA_VAL_CD_L1*/
	public final EZDCStringItem              svcTermCondDataValCd_L1;

    /** SVC_TERM_COND_DATA_VAL_CD_LC*/
	public final EZDCStringItemArray              svcTermCondDataValCd_LC;

    /** SVC_TERM_COND_DATA_DISP_TXT_LS*/
	public final EZDCStringItemArray              svcTermCondDataDispTxt_LS;

    /** LOGIC_MAINT_TRGT_TBL_NM_A1*/
	public final EZDCStringItem              logicMaintTrgtTblNm_A1;

    /** PHYS_MAINT_TRGT_COL_NM_A1*/
	public final EZDCStringItem              physMaintTrgtColNm_A1;

    /** LOGIC_MAINT_TRGT_COL_NM_A1*/
	public final EZDCStringItem              logicMaintTrgtColNm_A1;

    /** PHYS_DPLY_TRGT_COL_NM_A1*/
	public final EZDCStringItem              physDplyTrgtColNm_A1;

    /** LOGIC_DPLY_TRGT_COL_NM_A1*/
	public final EZDCStringItem              logicDplyTrgtColNm_A1;

    /** SVC_TERM_ATTRB_SORT_NUM_A1*/
	public final EZDCBigDecimalItem              svcTermAttrbSortNum_A1;

    /** SVC_TERM_COND_CATG_DESC_TXT_A1*/
	public final EZDCStringItem              svcTermCondCatgDescTxt_A1;

    /** ATTRB_UPD_AVAL_FLG_A1*/
	public final EZDCStringItem              attrbUpdAvalFlg_A1;

    /** ASG_CONTR_LVL_FLG_A1*/
	public final EZDCStringItem              asgContrLvlFlg_A1;

    /** ASG_MACH_LVL_FLG_A1*/
	public final EZDCStringItem              asgMachLvlFlg_A1;

    /** COV_TERM_COND_ACTV_FLG_A1*/
	public final EZDCStringItem              covTermCondActvFlg_A1;

    /** EFF_FROM_DT_A1*/
	public final EZDCDateItem              effFromDt_A1;

    /** EFF_THRU_DT_A1*/
	public final EZDCDateItem              effThruDt_A1;

    /** DEF_COV_TERM_COND_PK_A1*/
	public final EZDCBigDecimalItem              defCovTermCondPk_A1;

    /** SVC_TERM_COND_ATTRB_PK_A1*/
	public final EZDCBigDecimalItem              svcTermCondAttrbPk_A1;

    /** _EZUpdateDateTime_A1*/
	public final EZDCStringItem              ezUpTime_A1;

    /** _EZUpTimeZone_A1*/
	public final EZDCStringItem              ezUpTimeZone_A1;

    /** SVC_TERM_ATTRB_DEF_VAL_TXT_BK*/
	public final EZDCStringItem              svcTermAttrbDefValTxt_BK;

    /** ATTRB_UPD_AVAL_FLG_BK*/
	public final EZDCStringItem              attrbUpdAvalFlg_BK;

    /** ASG_CONTR_LVL_FLG_BK*/
	public final EZDCStringItem              asgContrLvlFlg_BK;

    /** ASG_MACH_LVL_FLG_BK*/
	public final EZDCStringItem              asgMachLvlFlg_BK;

    /** COV_TERM_COND_ACTV_FLG_BK*/
	public final EZDCStringItem              covTermCondActvFlg_BK;

    /** EFF_FROM_DT_BK*/
	public final EZDCDateItem              effFromDt_BK;

    /** EFF_THRU_DT_BK*/
	public final EZDCDateItem              effThruDt_BK;

    /** XX_REC_HIST_CRAT_TS_A*/
	public final EZDCStringItem              xxRecHistCratTs_A;

    /** XX_REC_HIST_CRAT_BY_NM_A*/
	public final EZDCStringItem              xxRecHistCratByNm_A;

    /** XX_REC_HIST_UPD_TS_A*/
	public final EZDCStringItem              xxRecHistUpdTs_A;

    /** XX_REC_HIST_UPD_BY_NM_A*/
	public final EZDCStringItem              xxRecHistUpdByNm_A;

    /** XX_REC_HIST_TBL_NM_A*/
	public final EZDCStringItem              xxRecHistTblNm_A;


	/**
	 * NSAL1310_ACMsg is constructor.
	 * The initialization when the instance of NSAL1310_ACMsg is generated.
	 */
	public NSAL1310_ACMsg() {
		this(false, -1);
	}

	/**
	 * NSAL1310_ACMsg is constructor.
	 * The initialization when the instance of NSAL1310_ACMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL1310_ACMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxChkBox_A1 = (EZDCStringItem)newItem("xxChkBox_A1");
		svcCovTmplTpCd_A1 = (EZDCStringItem)newItem("svcCovTmplTpCd_A1");
		svcTermAttrbDescTxt_A1 = (EZDCStringItem)newItem("svcTermAttrbDescTxt_A1");
		svcTermDataTpCd_A1 = (EZDCStringItem)newItem("svcTermDataTpCd_A1");
		svcTermCondDataSrcCd_A1 = (EZDCStringItem)newItem("svcTermCondDataSrcCd_A1");
		svcTermCondDataValCd_D1 = (EZDCStringItem)newItem("svcTermCondDataValCd_D1");
		svcTermCondDataValCd_DC = (EZDCStringItemArray)newItemArray("svcTermCondDataValCd_DC");
		svcTermCondDataDispTxt_DS = (EZDCStringItemArray)newItemArray("svcTermCondDataDispTxt_DS");
		svcTermAttrbDefValTxt_A1 = (EZDCStringItem)newItem("svcTermAttrbDefValTxt_A1");
		condValNum_A1 = (EZDCBigDecimalItem)newItem("condValNum_A1");
		xxTrxDt_A1 = (EZDCDateItem)newItem("xxTrxDt_A1");
		physMaintTrgtTblNm_A1 = (EZDCStringItem)newItem("physMaintTrgtTblNm_A1");
		svcTermCondDataValCd_L1 = (EZDCStringItem)newItem("svcTermCondDataValCd_L1");
		svcTermCondDataValCd_LC = (EZDCStringItemArray)newItemArray("svcTermCondDataValCd_LC");
		svcTermCondDataDispTxt_LS = (EZDCStringItemArray)newItemArray("svcTermCondDataDispTxt_LS");
		logicMaintTrgtTblNm_A1 = (EZDCStringItem)newItem("logicMaintTrgtTblNm_A1");
		physMaintTrgtColNm_A1 = (EZDCStringItem)newItem("physMaintTrgtColNm_A1");
		logicMaintTrgtColNm_A1 = (EZDCStringItem)newItem("logicMaintTrgtColNm_A1");
		physDplyTrgtColNm_A1 = (EZDCStringItem)newItem("physDplyTrgtColNm_A1");
		logicDplyTrgtColNm_A1 = (EZDCStringItem)newItem("logicDplyTrgtColNm_A1");
		svcTermAttrbSortNum_A1 = (EZDCBigDecimalItem)newItem("svcTermAttrbSortNum_A1");
		svcTermCondCatgDescTxt_A1 = (EZDCStringItem)newItem("svcTermCondCatgDescTxt_A1");
		attrbUpdAvalFlg_A1 = (EZDCStringItem)newItem("attrbUpdAvalFlg_A1");
		asgContrLvlFlg_A1 = (EZDCStringItem)newItem("asgContrLvlFlg_A1");
		asgMachLvlFlg_A1 = (EZDCStringItem)newItem("asgMachLvlFlg_A1");
		covTermCondActvFlg_A1 = (EZDCStringItem)newItem("covTermCondActvFlg_A1");
		effFromDt_A1 = (EZDCDateItem)newItem("effFromDt_A1");
		effThruDt_A1 = (EZDCDateItem)newItem("effThruDt_A1");
		defCovTermCondPk_A1 = (EZDCBigDecimalItem)newItem("defCovTermCondPk_A1");
		svcTermCondAttrbPk_A1 = (EZDCBigDecimalItem)newItem("svcTermCondAttrbPk_A1");
		ezUpTime_A1 = (EZDCStringItem)newItem("ezUpTime_A1");
		ezUpTimeZone_A1 = (EZDCStringItem)newItem("ezUpTimeZone_A1");
		svcTermAttrbDefValTxt_BK = (EZDCStringItem)newItem("svcTermAttrbDefValTxt_BK");
		attrbUpdAvalFlg_BK = (EZDCStringItem)newItem("attrbUpdAvalFlg_BK");
		asgContrLvlFlg_BK = (EZDCStringItem)newItem("asgContrLvlFlg_BK");
		asgMachLvlFlg_BK = (EZDCStringItem)newItem("asgMachLvlFlg_BK");
		covTermCondActvFlg_BK = (EZDCStringItem)newItem("covTermCondActvFlg_BK");
		effFromDt_BK = (EZDCDateItem)newItem("effFromDt_BK");
		effThruDt_BK = (EZDCDateItem)newItem("effThruDt_BK");
		xxRecHistCratTs_A = (EZDCStringItem)newItem("xxRecHistCratTs_A");
		xxRecHistCratByNm_A = (EZDCStringItem)newItem("xxRecHistCratByNm_A");
		xxRecHistUpdTs_A = (EZDCStringItem)newItem("xxRecHistUpdTs_A");
		xxRecHistUpdByNm_A = (EZDCStringItem)newItem("xxRecHistUpdByNm_A");
		xxRecHistTblNm_A = (EZDCStringItem)newItem("xxRecHistTblNm_A");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL1310_ACMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL1310_ACMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxChkBox_A1", "xxChkBox_A1", "A1", null, TYPE_HANKAKUEIJI, "1", null},
	{"svcCovTmplTpCd_A1", "svcCovTmplTpCd_A1", "A1", null, TYPE_HANKAKUEISU, "2", null},
	{"svcTermAttrbDescTxt_A1", "svcTermAttrbDescTxt_A1", "A1", null, TYPE_HANKAKUEISU, "50", null},
	{"svcTermDataTpCd_A1", "svcTermDataTpCd_A1", "A1", null, TYPE_HANKAKUEISU, "2", null},
	{"svcTermCondDataSrcCd_A1", "svcTermCondDataSrcCd_A1", "A1", null, TYPE_HANKAKUEISU, "30", null},
	{"svcTermCondDataValCd_D1", "svcTermCondDataValCd_D1", "D1", null, TYPE_HANKAKUEISU, "50", null},
	{"svcTermCondDataValCd_DC", "svcTermCondDataValCd_DC", "DC", "99", TYPE_HANKAKUEISU, "50", null},
	{"svcTermCondDataDispTxt_DS", "svcTermCondDataDispTxt_DS", "DS", "99", TYPE_HANKAKUEISU, "50", null},
	{"svcTermAttrbDefValTxt_A1", "svcTermAttrbDefValTxt_A1", "A1", null, TYPE_HANKAKUEISU, "50", null},
	{"condValNum_A1", "condValNum_A1", "A1", null, TYPE_SEISU_SYOSU, "28", "8"},
	{"xxTrxDt_A1", "xxTrxDt_A1", "A1", null, TYPE_NENTSUKIHI, "8", null},
	{"physMaintTrgtTblNm_A1", "physMaintTrgtTblNm_A1", "A1", null, TYPE_HANKAKUEISU, "30", null},
	{"svcTermCondDataValCd_L1", "svcTermCondDataValCd_L1", "L1", null, TYPE_HANKAKUEISU, "50", null},
	{"svcTermCondDataValCd_LC", "svcTermCondDataValCd_LC", "LC", "99", TYPE_HANKAKUEISU, "50", null},
	{"svcTermCondDataDispTxt_LS", "svcTermCondDataDispTxt_LS", "LS", "99", TYPE_HANKAKUEISU, "50", null},
	{"logicMaintTrgtTblNm_A1", "logicMaintTrgtTblNm_A1", "A1", null, TYPE_HANKAKUEISU, "100", null},
	{"physMaintTrgtColNm_A1", "physMaintTrgtColNm_A1", "A1", null, TYPE_HANKAKUEISU, "30", null},
	{"logicMaintTrgtColNm_A1", "logicMaintTrgtColNm_A1", "A1", null, TYPE_HANKAKUEISU, "100", null},
	{"physDplyTrgtColNm_A1", "physDplyTrgtColNm_A1", "A1", null, TYPE_HANKAKUEISU, "30", null},
	{"logicDplyTrgtColNm_A1", "logicDplyTrgtColNm_A1", "A1", null, TYPE_HANKAKUEISU, "100", null},
	{"svcTermAttrbSortNum_A1", "svcTermAttrbSortNum_A1", "A1", null, TYPE_SEISU_SYOSU, "3", "0"},
	{"svcTermCondCatgDescTxt_A1", "svcTermCondCatgDescTxt_A1", "A1", null, TYPE_HANKAKUEISU, "50", null},
	{"attrbUpdAvalFlg_A1", "attrbUpdAvalFlg_A1", "A1", null, TYPE_HANKAKUEISU, "1", null},
	{"asgContrLvlFlg_A1", "asgContrLvlFlg_A1", "A1", null, TYPE_HANKAKUEISU, "1", null},
	{"asgMachLvlFlg_A1", "asgMachLvlFlg_A1", "A1", null, TYPE_HANKAKUEISU, "1", null},
	{"covTermCondActvFlg_A1", "covTermCondActvFlg_A1", "A1", null, TYPE_HANKAKUEISU, "1", null},
	{"effFromDt_A1", "effFromDt_A1", "A1", null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt_A1", "effThruDt_A1", "A1", null, TYPE_NENTSUKIHI, "8", null},
	{"defCovTermCondPk_A1", "defCovTermCondPk_A1", "A1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"svcTermCondAttrbPk_A1", "svcTermCondAttrbPk_A1", "A1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"ezUpTime_A1", "ezUpTime_A1", "A1", null, TYPE_HANKAKUEISU, "17", null},
	{"ezUpTimeZone_A1", "ezUpTimeZone_A1", "A1", null, TYPE_HANKAKUEISU, "5", null},
	{"svcTermAttrbDefValTxt_BK", "svcTermAttrbDefValTxt_BK", "BK", null, TYPE_HANKAKUEISU, "50", null},
	{"attrbUpdAvalFlg_BK", "attrbUpdAvalFlg_BK", "BK", null, TYPE_HANKAKUEISU, "1", null},
	{"asgContrLvlFlg_BK", "asgContrLvlFlg_BK", "BK", null, TYPE_HANKAKUEISU, "1", null},
	{"asgMachLvlFlg_BK", "asgMachLvlFlg_BK", "BK", null, TYPE_HANKAKUEISU, "1", null},
	{"covTermCondActvFlg_BK", "covTermCondActvFlg_BK", "BK", null, TYPE_HANKAKUEISU, "1", null},
	{"effFromDt_BK", "effFromDt_BK", "BK", null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt_BK", "effThruDt_BK", "BK", null, TYPE_NENTSUKIHI, "8", null},
	{"xxRecHistCratTs_A", "xxRecHistCratTs_A", "A", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistCratByNm_A", "xxRecHistCratByNm_A", "A", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistUpdTs_A", "xxRecHistUpdTs_A", "A", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistUpdByNm_A", "xxRecHistUpdByNm_A", "A", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistTblNm_A", "xxRecHistTblNm_A", "A", null, TYPE_HANKAKUEISU, "60", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_A1
        {"SVC_COV_TMPL_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcCovTmplTpCd_A1
        {"SVC_TERM_ATTRB_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTermAttrbDescTxt_A1
        {"SVC_TERM_DATA_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTermDataTpCd_A1
        {"SVC_TERM_COND_DATA_SRC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTermCondDataSrcCd_A1
        {"SVC_TERM_COND_DATA_VAL_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTermCondDataValCd_D1
        {"SVC_TERM_COND_DATA_VAL_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTermCondDataValCd_DC
        {"SVC_TERM_COND_DATA_DISP_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTermCondDataDispTxt_DS
        {"SVC_TERM_ATTRB_DEF_VAL_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTermAttrbDefValTxt_A1
        {"COND_VAL_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//condValNum_A1
        {"XX_TRX_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxTrxDt_A1
        {"PHYS_MAINT_TRGT_TBL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//physMaintTrgtTblNm_A1
        {"SVC_TERM_COND_DATA_VAL_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTermCondDataValCd_L1
        {"SVC_TERM_COND_DATA_VAL_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTermCondDataValCd_LC
        {"SVC_TERM_COND_DATA_DISP_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTermCondDataDispTxt_LS
        {"LOGIC_MAINT_TRGT_TBL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//logicMaintTrgtTblNm_A1
        {"PHYS_MAINT_TRGT_COL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//physMaintTrgtColNm_A1
        {"LOGIC_MAINT_TRGT_COL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//logicMaintTrgtColNm_A1
        {"PHYS_DPLY_TRGT_COL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//physDplyTrgtColNm_A1
        {"LOGIC_DPLY_TRGT_COL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//logicDplyTrgtColNm_A1
        {"SVC_TERM_ATTRB_SORT_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTermAttrbSortNum_A1
        {"SVC_TERM_COND_CATG_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTermCondCatgDescTxt_A1
        {"ATTRB_UPD_AVAL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//attrbUpdAvalFlg_A1
        {"ASG_CONTR_LVL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//asgContrLvlFlg_A1
        {"ASG_MACH_LVL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//asgMachLvlFlg_A1
        {"COV_TERM_COND_ACTV_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//covTermCondActvFlg_A1
        {"EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effFromDt_A1
        {"EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effThruDt_A1
        {"DEF_COV_TERM_COND_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//defCovTermCondPk_A1
        {"SVC_TERM_COND_ATTRB_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTermCondAttrbPk_A1
        {"_EZUpdateDateTime",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTime_A1
        {"_EZUpTimeZone",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTimeZone_A1
        {"SVC_TERM_ATTRB_DEF_VAL_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcTermAttrbDefValTxt_BK
        {"ATTRB_UPD_AVAL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//attrbUpdAvalFlg_BK
        {"ASG_CONTR_LVL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//asgContrLvlFlg_BK
        {"ASG_MACH_LVL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//asgMachLvlFlg_BK
        {"COV_TERM_COND_ACTV_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//covTermCondActvFlg_BK
        {"EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effFromDt_BK
        {"EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effThruDt_BK
        {"XX_REC_HIST_CRAT_TS",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratTs_A
        {"XX_REC_HIST_CRAT_BY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratByNm_A
        {"XX_REC_HIST_UPD_TS",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdTs_A
        {"XX_REC_HIST_UPD_BY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdByNm_A
        {"XX_REC_HIST_TBL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistTblNm_A
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

