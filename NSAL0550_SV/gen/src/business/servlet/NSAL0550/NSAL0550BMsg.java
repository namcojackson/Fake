//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20180927023608000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0550BMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NSAL0550;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL0550 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL0550BMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** INV_TP_CD_H1*/
	public final EZDBStringItemArray              invTpCd_H1;

    /** INV_TP_DESC_TXT_H2*/
	public final EZDBStringItemArray              invTpDescTxt_H2;

    /** INV_TP_CD_H3*/
	public final EZDBStringItem              invTpCd_H3;

    /** DS_CONTR_NUM_H1*/
	public final EZDBStringItem              dsContrNum_H1;

    /** BLLG_PER_FROM_DT_H1*/
	public final EZDBDateItem              bllgPerFromDt_H1;

    /** BLLG_PER_TO_DT_H1*/
	public final EZDBDateItem              bllgPerToDt_H1;

    /** INV_DT_H1*/
	public final EZDBDateItem              invDt_H1;

    /** CUST_CARE_TKT_NUM_H1*/
	public final EZDBStringItem              custCareTktNum_H1;

    /** SVC_INV_NUM_H1*/
	public final EZDBStringItem              svcInvNum_H1;

    /** XX_CHK_BOX_H1*/
	public final EZDBStringItem              xxChkBox_H1;

    /** XX_CHK_BOX_H2*/
	public final EZDBStringItem              xxChkBox_H2;

    /** XX_ROW_NUM_H1*/
	public final EZDBBigDecimalItem              xxRowNum_H1;

    /** XX_SRV_URL_TXT_H1*/
	public final EZDBStringItem              xxSrvUrlTxt_H1;

    /** A*/
	public final business.servlet.NSAL0550.NSAL0550_ABMsgArray              A;

    /** P*/
	public final business.servlet.NSAL0550.NSAL0550_PBMsgArray              P;

    /** XX_POP_PRM_00*/
	public final EZDBStringItem              xxPopPrm_00;

    /** XX_SORT_TBL_NM*/
	public final EZDBStringItem              xxSortTblNm;

    /** XX_SORT_ITEM_NM*/
	public final EZDBStringItem              xxSortItemNm;

    /** XX_SORT_ORD_BY_TXT*/
	public final EZDBStringItem              xxSortOrdByTxt;

    /** XX_FILE_DATA*/
	public final EZDBMimeSourceItem              xxFileData;

    /** XX_COMN_COL_ORD_TXT*/
	public final EZDBStringItem              xxComnColOrdTxt;

    /** XX_PAGE_SHOW_FROM_NUM*/
	public final EZDBBigDecimalItem              xxPageShowFromNum;

    /** XX_PAGE_SHOW_TO_NUM*/
	public final EZDBBigDecimalItem              xxPageShowToNum;

    /** XX_PAGE_SHOW_OF_NUM*/
	public final EZDBBigDecimalItem              xxPageShowOfNum;

    /** XX_PAGE_SHOW_CUR_NUM*/
	public final EZDBBigDecimalItem              xxPageShowCurNum;

    /** XX_PAGE_SHOW_TOT_NUM*/
	public final EZDBBigDecimalItem              xxPageShowTotNum;


	/**
	 * NSAL0550BMsg is constructor.
	 * The initialization when the instance of NSAL0550BMsg is generated.
	 */
	public NSAL0550BMsg() {
		this(false, -1);
	}

	/**
	 * NSAL0550BMsg is constructor.
	 * The initialization when the instance of NSAL0550BMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL0550BMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		invTpCd_H1 = (EZDBStringItemArray)newItemArray("invTpCd_H1");
		invTpDescTxt_H2 = (EZDBStringItemArray)newItemArray("invTpDescTxt_H2");
		invTpCd_H3 = (EZDBStringItem)newItem("invTpCd_H3");
		dsContrNum_H1 = (EZDBStringItem)newItem("dsContrNum_H1");
		bllgPerFromDt_H1 = (EZDBDateItem)newItem("bllgPerFromDt_H1");
		bllgPerToDt_H1 = (EZDBDateItem)newItem("bllgPerToDt_H1");
		invDt_H1 = (EZDBDateItem)newItem("invDt_H1");
		custCareTktNum_H1 = (EZDBStringItem)newItem("custCareTktNum_H1");
		svcInvNum_H1 = (EZDBStringItem)newItem("svcInvNum_H1");
		xxChkBox_H1 = (EZDBStringItem)newItem("xxChkBox_H1");
		xxChkBox_H2 = (EZDBStringItem)newItem("xxChkBox_H2");
		xxRowNum_H1 = (EZDBBigDecimalItem)newItem("xxRowNum_H1");
		xxSrvUrlTxt_H1 = (EZDBStringItem)newItem("xxSrvUrlTxt_H1");
		A = (business.servlet.NSAL0550.NSAL0550_ABMsgArray)newMsgArray("A");
		P = (business.servlet.NSAL0550.NSAL0550_PBMsgArray)newMsgArray("P");
		xxPopPrm_00 = (EZDBStringItem)newItem("xxPopPrm_00");
		xxSortTblNm = (EZDBStringItem)newItem("xxSortTblNm");
		xxSortItemNm = (EZDBStringItem)newItem("xxSortItemNm");
		xxSortOrdByTxt = (EZDBStringItem)newItem("xxSortOrdByTxt");
		xxFileData = (EZDBMimeSourceItem)newItem("xxFileData");
		xxComnColOrdTxt = (EZDBStringItem)newItem("xxComnColOrdTxt");
		xxPageShowFromNum = (EZDBBigDecimalItem)newItem("xxPageShowFromNum");
		xxPageShowToNum = (EZDBBigDecimalItem)newItem("xxPageShowToNum");
		xxPageShowOfNum = (EZDBBigDecimalItem)newItem("xxPageShowOfNum");
		xxPageShowCurNum = (EZDBBigDecimalItem)newItem("xxPageShowCurNum");
		xxPageShowTotNum = (EZDBBigDecimalItem)newItem("xxPageShowTotNum");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL0550BMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL0550BMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"invTpCd_H1", "invTpCd_H1", "H1", "99", TYPE_HANKAKUEISU, "1", null},
	{"invTpDescTxt_H2", "invTpDescTxt_H2", "H2", "99", TYPE_HANKAKUEISU, "50", null},
	{"invTpCd_H3", "invTpCd_H3", "H3", null, TYPE_HANKAKUEISU, "1", null},
	{"dsContrNum_H1", "dsContrNum_H1", "H1", null, TYPE_HANKAKUEISU, "30", null},
	{"bllgPerFromDt_H1", "bllgPerFromDt_H1", "H1", null, TYPE_NENTSUKIHI, "8", null},
	{"bllgPerToDt_H1", "bllgPerToDt_H1", "H1", null, TYPE_NENTSUKIHI, "8", null},
	{"invDt_H1", "invDt_H1", "H1", null, TYPE_NENTSUKIHI, "8", null},
	{"custCareTktNum_H1", "custCareTktNum_H1", "H1", null, TYPE_HANKAKUEISU, "10", null},
	{"svcInvNum_H1", "svcInvNum_H1", "H1", null, TYPE_HANKAKUEISU, "13", null},
	{"xxChkBox_H1", "xxChkBox_H1", "H1", null, TYPE_HANKAKUEIJI, "1", null},
	{"xxChkBox_H2", "xxChkBox_H2", "H2", null, TYPE_HANKAKUEIJI, "1", null},
	{"xxRowNum_H1", "xxRowNum_H1", "H1", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxSrvUrlTxt_H1", "xxSrvUrlTxt_H1", "H1", null, TYPE_HANKAKUEISU, "2000", null},
	{"A", "A", null, "50", "business.servlet.NSAL0550.NSAL0550_ABMsgArray", null, null},
	
	{"P", "P", null, "50", "business.servlet.NSAL0550.NSAL0550_PBMsgArray", null, null},
	
	{"xxPopPrm_00", "xxPopPrm_00", "00", null, TYPE_HANKAKUEISU, "300", null},
	{"xxSortTblNm", "xxSortTblNm", null, null, TYPE_HANKAKUEISU, "1", null},
	{"xxSortItemNm", "xxSortItemNm", null, null, TYPE_HANKAKUEISU, "50", null},
	{"xxSortOrdByTxt", "xxSortOrdByTxt", null, null, TYPE_HANKAKUEISU, "4", null},
	{"xxFileData", "xxFileData", null, null, TYPE_UPLOAD, null, null},
	{"xxComnColOrdTxt", "xxComnColOrdTxt", null, null, TYPE_HANKAKUEISU, "2000", null},
	{"xxPageShowFromNum", "xxPageShowFromNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowToNum", "xxPageShowToNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowOfNum", "xxPageShowOfNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowCurNum", "xxPageShowCurNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowTotNum", "xxPageShowTotNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"INV_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invTpCd_H1
        {"INV_TP_DESC_TXT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invTpDescTxt_H2
        {"INV_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invTpCd_H3
        {"DS_CONTR_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrNum_H1
        {"BLLG_PER_FROM_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//bllgPerFromDt_H1
        {"BLLG_PER_TO_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//bllgPerToDt_H1
        {"INV_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//invDt_H1
        {"CUST_CARE_TKT_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//custCareTktNum_H1
        {"SVC_INV_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcInvNum_H1
        {"XX_CHK_BOX",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_H1
        {"XX_CHK_BOX",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_H2
        {"XX_ROW_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRowNum_H1
        {"XX_SRV_URL_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxSrvUrlTxt_H1
		null,	//A
		null,	//P
        {"XX_POP_PRM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPopPrm_00
        {"XX_SORT_TBL_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxSortTblNm
        {"XX_SORT_ITEM_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxSortItemNm
        {"XX_SORT_ORD_BY_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxSortOrdByTxt
        {"XX_FILE_DATA",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxFileData
        {"XX_COMN_COL_ORD_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxComnColOrdTxt
        {"XX_PAGE_SHOW_FROM_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowFromNum
        {"XX_PAGE_SHOW_TO_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowToNum
        {"XX_PAGE_SHOW_OF_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowOfNum
        {"XX_PAGE_SHOW_CUR_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowCurNum
        {"XX_PAGE_SHOW_TOT_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowTotNum
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

