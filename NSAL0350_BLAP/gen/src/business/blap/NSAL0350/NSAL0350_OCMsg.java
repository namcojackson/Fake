//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20221012084141000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0350_OCMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NSAL0350;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL0350 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL0350_OCMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** DS_CONTR_BLLG_SCHD_PK_O1*/
	public final EZDCBigDecimalItem              dsContrBllgSchdPk_O1;

    /** DS_CONTR_BLLG_SCHD_SMRY_PK_O1*/
	public final EZDCBigDecimalItem              dsContrBllgSchdSmryPk_O1;

    /** DS_CONTR_BLLG_MTR_PK_O1*/
	public final EZDCBigDecimalItem              dsContrBllgMtrPk_O1;

    /** DS_CONTR_BLLG_SCHD_SQ_NUM_O1*/
	public final EZDCStringItem              dsContrBllgSchdSqNum_O1;

    /** DS_CONTR_BLLG_SCHD_LVL_NUM_O1*/
	public final EZDCStringItem              dsContrBllgSchdLvlNum_O1;

    /** DS_CONTR_PRC_EFF_SQ_NUM_O1*/
	public final EZDCBigDecimalItem              dsContrPrcEffSqNum_O1;

    /** SKIP_RECOV_TP_CD_O3*/
	public final EZDCStringItem              skipRecovTpCd_O3;

    /** BLLG_SCHD_FROM_DT_O1*/
	public final EZDCDateItem              bllgSchdFromDt_O1;

    /** BLLG_SCHD_THRU_DT_O1*/
	public final EZDCDateItem              bllgSchdThruDt_O1;

    /** NEXT_BLLG_DT_O1*/
	public final EZDCDateItem              nextBllgDt_O1;

    /** NEXT_BLLG_DT_O2*/
	public final EZDCDateItem              nextBllgDt_O2;

    /** RVS_SCHD_DT_O1*/
	public final EZDCDateItem              rvsSchdDt_O1;

    /** BASE_PRC_DEAL_AMT_O1*/
	public final EZDCBigDecimalItem              basePrcDealAmt_O1;

    /** MTR_ENTRY_CPLT_FLG_O1*/
	public final EZDCStringItem              mtrEntryCpltFlg_O1;

    /** DS_BLLG_SCHD_STS_CD_O1*/
	public final EZDCStringItem              dsBllgSchdStsCd_O1;

    /** DS_BLLG_SCHD_STS_DESC_TXT_O1*/
	public final EZDCStringItem              dsBllgSchdStsDescTxt_O1;

    /** SVC_INV_NUM_O1*/
	public final EZDCStringItem              svcInvNum_O1;

    /** EIP_RPT_RQST_PK_O1*/
	public final EZDCBigDecimalItem              eipRptRqstPk_O1;

    /** INV_DT_O1*/
	public final EZDCDateItem              invDt_O1;

    /** BASE_ACTL_PRC_DEAL_AMT_O1*/
	public final EZDCBigDecimalItem              baseActlPrcDealAmt_O1;

    /** DEAL_TAX_AMT_O1*/
	public final EZDCBigDecimalItem              dealTaxAmt_O1;

    /** _EZUpdateDateTime_O1*/
	public final EZDCStringItem              ezUpTime_O1;

    /** _EZUpTimeZone_O1*/
	public final EZDCStringItem              ezUpTimeZone_O1;

    /** XX_REC_HIST_CRAT_TS_O1*/
	public final EZDCStringItem              xxRecHistCratTs_O1;

    /** XX_REC_HIST_CRAT_BY_NM_O1*/
	public final EZDCStringItem              xxRecHistCratByNm_O1;

    /** XX_REC_HIST_UPD_TS_O1*/
	public final EZDCStringItem              xxRecHistUpdTs_O1;

    /** XX_REC_HIST_UPD_BY_NM_O1*/
	public final EZDCStringItem              xxRecHistUpdByNm_O1;

    /** XX_REC_HIST_TBL_NM_O1*/
	public final EZDCStringItem              xxRecHistTblNm_O1;


	/**
	 * NSAL0350_OCMsg is constructor.
	 * The initialization when the instance of NSAL0350_OCMsg is generated.
	 */
	public NSAL0350_OCMsg() {
		this(false, -1);
	}

	/**
	 * NSAL0350_OCMsg is constructor.
	 * The initialization when the instance of NSAL0350_OCMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL0350_OCMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		dsContrBllgSchdPk_O1 = (EZDCBigDecimalItem)newItem("dsContrBllgSchdPk_O1");
		dsContrBllgSchdSmryPk_O1 = (EZDCBigDecimalItem)newItem("dsContrBllgSchdSmryPk_O1");
		dsContrBllgMtrPk_O1 = (EZDCBigDecimalItem)newItem("dsContrBllgMtrPk_O1");
		dsContrBllgSchdSqNum_O1 = (EZDCStringItem)newItem("dsContrBllgSchdSqNum_O1");
		dsContrBllgSchdLvlNum_O1 = (EZDCStringItem)newItem("dsContrBllgSchdLvlNum_O1");
		dsContrPrcEffSqNum_O1 = (EZDCBigDecimalItem)newItem("dsContrPrcEffSqNum_O1");
		skipRecovTpCd_O3 = (EZDCStringItem)newItem("skipRecovTpCd_O3");
		bllgSchdFromDt_O1 = (EZDCDateItem)newItem("bllgSchdFromDt_O1");
		bllgSchdThruDt_O1 = (EZDCDateItem)newItem("bllgSchdThruDt_O1");
		nextBllgDt_O1 = (EZDCDateItem)newItem("nextBllgDt_O1");
		nextBllgDt_O2 = (EZDCDateItem)newItem("nextBllgDt_O2");
		rvsSchdDt_O1 = (EZDCDateItem)newItem("rvsSchdDt_O1");
		basePrcDealAmt_O1 = (EZDCBigDecimalItem)newItem("basePrcDealAmt_O1");
		mtrEntryCpltFlg_O1 = (EZDCStringItem)newItem("mtrEntryCpltFlg_O1");
		dsBllgSchdStsCd_O1 = (EZDCStringItem)newItem("dsBllgSchdStsCd_O1");
		dsBllgSchdStsDescTxt_O1 = (EZDCStringItem)newItem("dsBllgSchdStsDescTxt_O1");
		svcInvNum_O1 = (EZDCStringItem)newItem("svcInvNum_O1");
		eipRptRqstPk_O1 = (EZDCBigDecimalItem)newItem("eipRptRqstPk_O1");
		invDt_O1 = (EZDCDateItem)newItem("invDt_O1");
		baseActlPrcDealAmt_O1 = (EZDCBigDecimalItem)newItem("baseActlPrcDealAmt_O1");
		dealTaxAmt_O1 = (EZDCBigDecimalItem)newItem("dealTaxAmt_O1");
		ezUpTime_O1 = (EZDCStringItem)newItem("ezUpTime_O1");
		ezUpTimeZone_O1 = (EZDCStringItem)newItem("ezUpTimeZone_O1");
		xxRecHistCratTs_O1 = (EZDCStringItem)newItem("xxRecHistCratTs_O1");
		xxRecHistCratByNm_O1 = (EZDCStringItem)newItem("xxRecHistCratByNm_O1");
		xxRecHistUpdTs_O1 = (EZDCStringItem)newItem("xxRecHistUpdTs_O1");
		xxRecHistUpdByNm_O1 = (EZDCStringItem)newItem("xxRecHistUpdByNm_O1");
		xxRecHistTblNm_O1 = (EZDCStringItem)newItem("xxRecHistTblNm_O1");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL0350_OCMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL0350_OCMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"dsContrBllgSchdPk_O1", "dsContrBllgSchdPk_O1", "O1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrBllgSchdSmryPk_O1", "dsContrBllgSchdSmryPk_O1", "O1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrBllgMtrPk_O1", "dsContrBllgMtrPk_O1", "O1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrBllgSchdSqNum_O1", "dsContrBllgSchdSqNum_O1", "O1", null, TYPE_HANKAKUEISU, "3", null},
	{"dsContrBllgSchdLvlNum_O1", "dsContrBllgSchdLvlNum_O1", "O1", null, TYPE_HANKAKUEISU, "3", null},
	{"dsContrPrcEffSqNum_O1", "dsContrPrcEffSqNum_O1", "O1", null, TYPE_SEISU_SYOSU, "4", "0"},
	{"skipRecovTpCd_O3", "skipRecovTpCd_O3", "O3", null, TYPE_HANKAKUEISU, "2", null},
	{"bllgSchdFromDt_O1", "bllgSchdFromDt_O1", "O1", null, TYPE_NENTSUKIHI, "8", null},
	{"bllgSchdThruDt_O1", "bllgSchdThruDt_O1", "O1", null, TYPE_NENTSUKIHI, "8", null},
	{"nextBllgDt_O1", "nextBllgDt_O1", "O1", null, TYPE_NENTSUKIHI, "8", null},
	{"nextBllgDt_O2", "nextBllgDt_O2", "O2", null, TYPE_NENTSUKIHI, "8", null},
	{"rvsSchdDt_O1", "rvsSchdDt_O1", "O1", null, TYPE_NENTSUKIHI, "8", null},
	{"basePrcDealAmt_O1", "basePrcDealAmt_O1", "O1", null, TYPE_SEISU_SYOSU, "19", "4"},
	{"mtrEntryCpltFlg_O1", "mtrEntryCpltFlg_O1", "O1", null, TYPE_HANKAKUEISU, "1", null},
	{"dsBllgSchdStsCd_O1", "dsBllgSchdStsCd_O1", "O1", null, TYPE_HANKAKUEISU, "2", null},
	{"dsBllgSchdStsDescTxt_O1", "dsBllgSchdStsDescTxt_O1", "O1", null, TYPE_HANKAKUEISU, "50", null},
	{"svcInvNum_O1", "svcInvNum_O1", "O1", null, TYPE_HANKAKUEISU, "13", null},
	{"eipRptRqstPk_O1", "eipRptRqstPk_O1", "O1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"invDt_O1", "invDt_O1", "O1", null, TYPE_NENTSUKIHI, "8", null},
	{"baseActlPrcDealAmt_O1", "baseActlPrcDealAmt_O1", "O1", null, TYPE_SEISU_SYOSU, "19", "4"},
	{"dealTaxAmt_O1", "dealTaxAmt_O1", "O1", null, TYPE_SEISU_SYOSU, "19", "4"},
	{"ezUpTime_O1", "ezUpTime_O1", "O1", null, TYPE_HANKAKUEISU, "17", null},
	{"ezUpTimeZone_O1", "ezUpTimeZone_O1", "O1", null, TYPE_HANKAKUEISU, "5", null},
	{"xxRecHistCratTs_O1", "xxRecHistCratTs_O1", "O1", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistCratByNm_O1", "xxRecHistCratByNm_O1", "O1", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistUpdTs_O1", "xxRecHistUpdTs_O1", "O1", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistUpdByNm_O1", "xxRecHistUpdByNm_O1", "O1", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistTblNm_O1", "xxRecHistTblNm_O1", "O1", null, TYPE_HANKAKUEISU, "60", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"DS_CONTR_BLLG_SCHD_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgSchdPk_O1
        {"DS_CONTR_BLLG_SCHD_SMRY_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgSchdSmryPk_O1
        {"DS_CONTR_BLLG_MTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgMtrPk_O1
        {"DS_CONTR_BLLG_SCHD_SQ_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgSchdSqNum_O1
        {"DS_CONTR_BLLG_SCHD_LVL_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgSchdLvlNum_O1
        {"DS_CONTR_PRC_EFF_SQ_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrPrcEffSqNum_O1
        {"SKIP_RECOV_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//skipRecovTpCd_O3
        {"BLLG_SCHD_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgSchdFromDt_O1
        {"BLLG_SCHD_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgSchdThruDt_O1
        {"NEXT_BLLG_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//nextBllgDt_O1
        {"NEXT_BLLG_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//nextBllgDt_O2
        {"RVS_SCHD_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rvsSchdDt_O1
        {"BASE_PRC_DEAL_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//basePrcDealAmt_O1
        {"MTR_ENTRY_CPLT_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrEntryCpltFlg_O1
        {"DS_BLLG_SCHD_STS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsBllgSchdStsCd_O1
        {"DS_BLLG_SCHD_STS_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsBllgSchdStsDescTxt_O1
        {"SVC_INV_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcInvNum_O1
        {"EIP_RPT_RQST_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//eipRptRqstPk_O1
        {"INV_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invDt_O1
        {"BASE_ACTL_PRC_DEAL_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//baseActlPrcDealAmt_O1
        {"DEAL_TAX_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dealTaxAmt_O1
        {"_EZUpdateDateTime",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTime_O1
        {"_EZUpTimeZone",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTimeZone_O1
        {"XX_REC_HIST_CRAT_TS",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratTs_O1
        {"XX_REC_HIST_CRAT_BY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratByNm_O1
        {"XX_REC_HIST_UPD_TS",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdTs_O1
        {"XX_REC_HIST_UPD_BY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdByNm_O1
        {"XX_REC_HIST_TBL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistTblNm_O1
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

