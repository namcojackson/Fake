//This file was automatically generated by Business Component Interface Definition Document (Define Business Application Global Area) and XLA200710010.
// Generated on    :20221012084143000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0350_BSMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NSAL0350;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL0350 Business Application Global Area Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL0350_BSMsg extends EZDSMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** DS_CONTR_BLLG_SCHD_PK_B1*/
	public final EZDSBigDecimalItem              dsContrBllgSchdPk_B1;

    /** DS_CONTR_BLLG_SCHD_SMRY_PK_B1*/
	public final EZDSBigDecimalItem              dsContrBllgSchdSmryPk_B1;

    /** DS_CONTR_BLLG_MTR_PK_B1*/
	public final EZDSBigDecimalItem              dsContrBllgMtrPk_B1;

    /** DS_CONTR_BLLG_SCHD_SQ_NUM_B1*/
	public final EZDSStringItem              dsContrBllgSchdSqNum_B1;

    /** DS_CONTR_BLLG_SCHD_LVL_NUM_B1*/
	public final EZDSStringItem              dsContrBllgSchdLvlNum_B1;

    /** DS_CONTR_PRC_EFF_SQ_NUM_B1*/
	public final EZDSBigDecimalItem              dsContrPrcEffSqNum_B1;

    /** SKIP_RECOV_TP_CD_B3*/
	public final EZDSStringItem              skipRecovTpCd_B3;

    /** BLLG_SCHD_FROM_DT_B1*/
	public final EZDSDateItem              bllgSchdFromDt_B1;

    /** BLLG_SCHD_THRU_DT_B1*/
	public final EZDSDateItem              bllgSchdThruDt_B1;

    /** NEXT_BLLG_DT_B1*/
	public final EZDSDateItem              nextBllgDt_B1;

    /** NEXT_BLLG_DT_B2*/
	public final EZDSDateItem              nextBllgDt_B2;

    /** RVS_SCHD_DT_B1*/
	public final EZDSDateItem              rvsSchdDt_B1;

    /** BASE_PRC_DEAL_AMT_B1*/
	public final EZDSBigDecimalItem              basePrcDealAmt_B1;

    /** MTR_ENTRY_CPLT_FLG_B1*/
	public final EZDSStringItem              mtrEntryCpltFlg_B1;

    /** DS_BLLG_SCHD_STS_CD_B1*/
	public final EZDSStringItem              dsBllgSchdStsCd_B1;

    /** DS_BLLG_SCHD_STS_DESC_TXT_B1*/
	public final EZDSStringItem              dsBllgSchdStsDescTxt_B1;

    /** SVC_INV_NUM_B1*/
	public final EZDSStringItem              svcInvNum_B1;

    /** EIP_RPT_RQST_PK_B1*/
	public final EZDSBigDecimalItem              eipRptRqstPk_B1;

    /** INV_DT_B1*/
	public final EZDSDateItem              invDt_B1;

    /** BASE_ACTL_PRC_DEAL_AMT_B1*/
	public final EZDSBigDecimalItem              baseActlPrcDealAmt_B1;

    /** DEAL_TAX_AMT_B1*/
	public final EZDSBigDecimalItem              dealTaxAmt_B1;

    /** _EZUpdateDateTime_B1*/
	public final EZDSStringItem              ezUpTime_B1;

    /** _EZUpTimeZone_B1*/
	public final EZDSStringItem              ezUpTimeZone_B1;

    /** XX_REC_HIST_CRAT_TS_B1*/
	public final EZDSStringItem              xxRecHistCratTs_B1;

    /** XX_REC_HIST_CRAT_BY_NM_B1*/
	public final EZDSStringItem              xxRecHistCratByNm_B1;

    /** XX_REC_HIST_UPD_TS_B1*/
	public final EZDSStringItem              xxRecHistUpdTs_B1;

    /** XX_REC_HIST_UPD_BY_NM_B1*/
	public final EZDSStringItem              xxRecHistUpdByNm_B1;

    /** XX_REC_HIST_TBL_NM_B1*/
	public final EZDSStringItem              xxRecHistTblNm_B1;


	/**
	 * NSAL0350_BSMsg is constructor.
	 * The initialization when the instance of NSAL0350_BSMsg is generated.
	 */
	public NSAL0350_BSMsg() {
		this(false, -1);
	}

	/**
	 * NSAL0350_BSMsg is constructor.
	 * The initialization when the instance of NSAL0350_BSMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL0350_BSMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		dsContrBllgSchdPk_B1 = (EZDSBigDecimalItem)newItem("dsContrBllgSchdPk_B1");
		dsContrBllgSchdSmryPk_B1 = (EZDSBigDecimalItem)newItem("dsContrBllgSchdSmryPk_B1");
		dsContrBllgMtrPk_B1 = (EZDSBigDecimalItem)newItem("dsContrBllgMtrPk_B1");
		dsContrBllgSchdSqNum_B1 = (EZDSStringItem)newItem("dsContrBllgSchdSqNum_B1");
		dsContrBllgSchdLvlNum_B1 = (EZDSStringItem)newItem("dsContrBllgSchdLvlNum_B1");
		dsContrPrcEffSqNum_B1 = (EZDSBigDecimalItem)newItem("dsContrPrcEffSqNum_B1");
		skipRecovTpCd_B3 = (EZDSStringItem)newItem("skipRecovTpCd_B3");
		bllgSchdFromDt_B1 = (EZDSDateItem)newItem("bllgSchdFromDt_B1");
		bllgSchdThruDt_B1 = (EZDSDateItem)newItem("bllgSchdThruDt_B1");
		nextBllgDt_B1 = (EZDSDateItem)newItem("nextBllgDt_B1");
		nextBllgDt_B2 = (EZDSDateItem)newItem("nextBllgDt_B2");
		rvsSchdDt_B1 = (EZDSDateItem)newItem("rvsSchdDt_B1");
		basePrcDealAmt_B1 = (EZDSBigDecimalItem)newItem("basePrcDealAmt_B1");
		mtrEntryCpltFlg_B1 = (EZDSStringItem)newItem("mtrEntryCpltFlg_B1");
		dsBllgSchdStsCd_B1 = (EZDSStringItem)newItem("dsBllgSchdStsCd_B1");
		dsBllgSchdStsDescTxt_B1 = (EZDSStringItem)newItem("dsBllgSchdStsDescTxt_B1");
		svcInvNum_B1 = (EZDSStringItem)newItem("svcInvNum_B1");
		eipRptRqstPk_B1 = (EZDSBigDecimalItem)newItem("eipRptRqstPk_B1");
		invDt_B1 = (EZDSDateItem)newItem("invDt_B1");
		baseActlPrcDealAmt_B1 = (EZDSBigDecimalItem)newItem("baseActlPrcDealAmt_B1");
		dealTaxAmt_B1 = (EZDSBigDecimalItem)newItem("dealTaxAmt_B1");
		ezUpTime_B1 = (EZDSStringItem)newItem("ezUpTime_B1");
		ezUpTimeZone_B1 = (EZDSStringItem)newItem("ezUpTimeZone_B1");
		xxRecHistCratTs_B1 = (EZDSStringItem)newItem("xxRecHistCratTs_B1");
		xxRecHistCratByNm_B1 = (EZDSStringItem)newItem("xxRecHistCratByNm_B1");
		xxRecHistUpdTs_B1 = (EZDSStringItem)newItem("xxRecHistUpdTs_B1");
		xxRecHistUpdByNm_B1 = (EZDSStringItem)newItem("xxRecHistUpdByNm_B1");
		xxRecHistTblNm_B1 = (EZDSStringItem)newItem("xxRecHistTblNm_B1");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL0350_BSMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL0350_BSMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"dsContrBllgSchdPk_B1", "dsContrBllgSchdPk_B1", "B1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrBllgSchdSmryPk_B1", "dsContrBllgSchdSmryPk_B1", "B1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrBllgMtrPk_B1", "dsContrBllgMtrPk_B1", "B1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrBllgSchdSqNum_B1", "dsContrBllgSchdSqNum_B1", "B1", null, TYPE_HANKAKUEISU, "3", null},
	{"dsContrBllgSchdLvlNum_B1", "dsContrBllgSchdLvlNum_B1", "B1", null, TYPE_HANKAKUEISU, "3", null},
	{"dsContrPrcEffSqNum_B1", "dsContrPrcEffSqNum_B1", "B1", null, TYPE_SEISU_SYOSU, "4", "0"},
	{"skipRecovTpCd_B3", "skipRecovTpCd_B3", "B3", null, TYPE_HANKAKUEISU, "2", null},
	{"bllgSchdFromDt_B1", "bllgSchdFromDt_B1", "B1", null, TYPE_NENTSUKIHI, "8", null},
	{"bllgSchdThruDt_B1", "bllgSchdThruDt_B1", "B1", null, TYPE_NENTSUKIHI, "8", null},
	{"nextBllgDt_B1", "nextBllgDt_B1", "B1", null, TYPE_NENTSUKIHI, "8", null},
	{"nextBllgDt_B2", "nextBllgDt_B2", "B2", null, TYPE_NENTSUKIHI, "8", null},
	{"rvsSchdDt_B1", "rvsSchdDt_B1", "B1", null, TYPE_NENTSUKIHI, "8", null},
	{"basePrcDealAmt_B1", "basePrcDealAmt_B1", "B1", null, TYPE_SEISU_SYOSU, "19", "4"},
	{"mtrEntryCpltFlg_B1", "mtrEntryCpltFlg_B1", "B1", null, TYPE_HANKAKUEISU, "1", null},
	{"dsBllgSchdStsCd_B1", "dsBllgSchdStsCd_B1", "B1", null, TYPE_HANKAKUEISU, "2", null},
	{"dsBllgSchdStsDescTxt_B1", "dsBllgSchdStsDescTxt_B1", "B1", null, TYPE_HANKAKUEISU, "50", null},
	{"svcInvNum_B1", "svcInvNum_B1", "B1", null, TYPE_HANKAKUEISU, "13", null},
	{"eipRptRqstPk_B1", "eipRptRqstPk_B1", "B1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"invDt_B1", "invDt_B1", "B1", null, TYPE_NENTSUKIHI, "8", null},
	{"baseActlPrcDealAmt_B1", "baseActlPrcDealAmt_B1", "B1", null, TYPE_SEISU_SYOSU, "19", "4"},
	{"dealTaxAmt_B1", "dealTaxAmt_B1", "B1", null, TYPE_SEISU_SYOSU, "19", "4"},
	{"ezUpTime_B1", "ezUpTime_B1", "B1", null, TYPE_HANKAKUEISU, "17", null},
	{"ezUpTimeZone_B1", "ezUpTimeZone_B1", "B1", null, TYPE_HANKAKUEISU, "5", null},
	{"xxRecHistCratTs_B1", "xxRecHistCratTs_B1", "B1", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistCratByNm_B1", "xxRecHistCratByNm_B1", "B1", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistUpdTs_B1", "xxRecHistUpdTs_B1", "B1", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistUpdByNm_B1", "xxRecHistUpdByNm_B1", "B1", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistTblNm_B1", "xxRecHistTblNm_B1", "B1", null, TYPE_HANKAKUEISU, "60", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"DS_CONTR_BLLG_SCHD_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgSchdPk_B1
        {"DS_CONTR_BLLG_SCHD_SMRY_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgSchdSmryPk_B1
        {"DS_CONTR_BLLG_MTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgMtrPk_B1
        {"DS_CONTR_BLLG_SCHD_SQ_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgSchdSqNum_B1
        {"DS_CONTR_BLLG_SCHD_LVL_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgSchdLvlNum_B1
        {"DS_CONTR_PRC_EFF_SQ_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrPrcEffSqNum_B1
        {"SKIP_RECOV_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//skipRecovTpCd_B3
        {"BLLG_SCHD_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgSchdFromDt_B1
        {"BLLG_SCHD_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgSchdThruDt_B1
        {"NEXT_BLLG_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//nextBllgDt_B1
        {"NEXT_BLLG_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//nextBllgDt_B2
        {"RVS_SCHD_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rvsSchdDt_B1
        {"BASE_PRC_DEAL_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//basePrcDealAmt_B1
        {"MTR_ENTRY_CPLT_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrEntryCpltFlg_B1
        {"DS_BLLG_SCHD_STS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsBllgSchdStsCd_B1
        {"DS_BLLG_SCHD_STS_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsBllgSchdStsDescTxt_B1
        {"SVC_INV_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcInvNum_B1
        {"EIP_RPT_RQST_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//eipRptRqstPk_B1
        {"INV_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invDt_B1
        {"BASE_ACTL_PRC_DEAL_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//baseActlPrcDealAmt_B1
        {"DEAL_TAX_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dealTaxAmt_B1
        {"_EZUpdateDateTime",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTime_B1
        {"_EZUpTimeZone",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTimeZone_B1
        {"XX_REC_HIST_CRAT_TS",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratTs_B1
        {"XX_REC_HIST_CRAT_BY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratByNm_B1
        {"XX_REC_HIST_UPD_TS",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdTs_B1
        {"XX_REC_HIST_UPD_BY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdByNm_B1
        {"XX_REC_HIST_TBL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistTblNm_B1
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

