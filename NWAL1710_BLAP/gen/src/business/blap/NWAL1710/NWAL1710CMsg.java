//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20160310174650000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NWAL1710CMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NWAL1710;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NWAL1710 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NWAL1710CMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** DS_ORD_CATG_NM*/
	public final EZDCStringItem              dsOrdCatgNm;

    /** DS_ORD_TP_NM*/
	public final EZDCStringItem              dsOrdTpNm;

    /** ORD_PROC_TP_CD*/
	public final EZDCStringItem              ordProcTpCd;

    /** ORD_PROC_TP_CD_P*/
	public final EZDCStringItemArray              ordProcTpCd_P;

    /** ORD_PROC_TP_DESC_TXT_P*/
	public final EZDCStringItemArray              ordProcTpDescTxt_P;

    /** LINE_BIZ_TP_CD*/
	public final EZDCStringItem              lineBizTpCd;

    /** LINE_BIZ_TP_CD_P*/
	public final EZDCStringItemArray              lineBizTpCd_P;

    /** LINE_BIZ_TP_DESC_TXT_P*/
	public final EZDCStringItemArray              lineBizTpDescTxt_P;

    /** EFF_FROM_DT*/
	public final EZDCDateItem              effFromDt;

    /** EFF_THRU_DT*/
	public final EZDCDateItem              effThruDt;

    /** ACTV_FLG*/
	public final EZDCStringItem              actvFlg;

    /** XX_PAGE_SHOW_FROM_NUM*/
	public final EZDCBigDecimalItem              xxPageShowFromNum;

    /** XX_PAGE_SHOW_TO_NUM*/
	public final EZDCBigDecimalItem              xxPageShowToNum;

    /** XX_PAGE_SHOW_OF_NUM*/
	public final EZDCBigDecimalItem              xxPageShowOfNum;

    /** A*/
	public final business.blap.NWAL1710.NWAL1710_ACMsgArray              A;

    /** XX_FILE_DATA*/
	public final EZDCMimeSourceItem              xxFileData;

    /** XX_SORT_TBL_NM_A*/
	public final EZDCStringItem              xxSortTblNm_A;

    /** XX_SORT_ITEM_NM_A*/
	public final EZDCStringItem              xxSortItemNm_A;

    /** XX_SORT_ORD_BY_TXT_A*/
	public final EZDCStringItem              xxSortOrdByTxt_A;


	/**
	 * NWAL1710CMsg is constructor.
	 * The initialization when the instance of NWAL1710CMsg is generated.
	 */
	public NWAL1710CMsg() {
		this(false, -1);
	}

	/**
	 * NWAL1710CMsg is constructor.
	 * The initialization when the instance of NWAL1710CMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NWAL1710CMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		dsOrdCatgNm = (EZDCStringItem)newItem("dsOrdCatgNm");
		dsOrdTpNm = (EZDCStringItem)newItem("dsOrdTpNm");
		ordProcTpCd = (EZDCStringItem)newItem("ordProcTpCd");
		ordProcTpCd_P = (EZDCStringItemArray)newItemArray("ordProcTpCd_P");
		ordProcTpDescTxt_P = (EZDCStringItemArray)newItemArray("ordProcTpDescTxt_P");
		lineBizTpCd = (EZDCStringItem)newItem("lineBizTpCd");
		lineBizTpCd_P = (EZDCStringItemArray)newItemArray("lineBizTpCd_P");
		lineBizTpDescTxt_P = (EZDCStringItemArray)newItemArray("lineBizTpDescTxt_P");
		effFromDt = (EZDCDateItem)newItem("effFromDt");
		effThruDt = (EZDCDateItem)newItem("effThruDt");
		actvFlg = (EZDCStringItem)newItem("actvFlg");
		xxPageShowFromNum = (EZDCBigDecimalItem)newItem("xxPageShowFromNum");
		xxPageShowToNum = (EZDCBigDecimalItem)newItem("xxPageShowToNum");
		xxPageShowOfNum = (EZDCBigDecimalItem)newItem("xxPageShowOfNum");
		A = (business.blap.NWAL1710.NWAL1710_ACMsgArray)newMsgArray("A");
		xxFileData = (EZDCMimeSourceItem)newItem("xxFileData");
		xxSortTblNm_A = (EZDCStringItem)newItem("xxSortTblNm_A");
		xxSortItemNm_A = (EZDCStringItem)newItem("xxSortItemNm_A");
		xxSortOrdByTxt_A = (EZDCStringItem)newItem("xxSortOrdByTxt_A");
	}

	/**
	 * get the type of array which is stored
	 * @return NWAL1710CMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NWAL1710CMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"dsOrdCatgNm", "dsOrdCatgNm", null, null, TYPE_HANKAKUEISU, "50", null},
	{"dsOrdTpNm", "dsOrdTpNm", null, null, TYPE_HANKAKUEISU, "30", null},
	{"ordProcTpCd", "ordProcTpCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"ordProcTpCd_P", "ordProcTpCd_P", "P", "99", TYPE_HANKAKUEISU, "4", null},
	{"ordProcTpDescTxt_P", "ordProcTpDescTxt_P", "P", "99", TYPE_HANKAKUEISU, "50", null},
	{"lineBizTpCd", "lineBizTpCd", null, null, TYPE_HANKAKUEISU, "8", null},
	{"lineBizTpCd_P", "lineBizTpCd_P", "P", "99", TYPE_HANKAKUEISU, "8", null},
	{"lineBizTpDescTxt_P", "lineBizTpDescTxt_P", "P", "99", TYPE_HANKAKUEISU, "50", null},
	{"effFromDt", "effFromDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt", "effThruDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"actvFlg", "actvFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"xxPageShowFromNum", "xxPageShowFromNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowToNum", "xxPageShowToNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowOfNum", "xxPageShowOfNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"A", "A", null, "100", "business.blap.NWAL1710.NWAL1710_ACMsgArray", null, null},
	
	{"xxFileData", "xxFileData", null, null, TYPE_UPLOAD, null, null},
	{"xxSortTblNm_A", "xxSortTblNm_A", "A", null, TYPE_HANKAKUEISU, "1", null},
	{"xxSortItemNm_A", "xxSortItemNm_A", "A", null, TYPE_HANKAKUEISU, "50", null},
	{"xxSortOrdByTxt_A", "xxSortOrdByTxt_A", "A", null, TYPE_HANKAKUEISU, "4", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"DS_ORD_CATG_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdCatgNm
        {"DS_ORD_TP_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdTpNm
        {"ORD_PROC_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordProcTpCd
        {"ORD_PROC_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordProcTpCd_P
        {"ORD_PROC_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordProcTpDescTxt_P
        {"LINE_BIZ_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//lineBizTpCd
        {"LINE_BIZ_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//lineBizTpCd_P
        {"LINE_BIZ_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//lineBizTpDescTxt_P
        {"EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effFromDt
        {"EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effThruDt
        {"ACTV_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//actvFlg
        {"XX_PAGE_SHOW_FROM_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowFromNum
        {"XX_PAGE_SHOW_TO_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowToNum
        {"XX_PAGE_SHOW_OF_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowOfNum
		null,	//A
        {"XX_FILE_DATA",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxFileData
        {"XX_SORT_TBL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxSortTblNm_A
        {"XX_SORT_ITEM_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxSortItemNm_A
        {"XX_SORT_ORD_BY_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxSortOrdByTxt_A
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

