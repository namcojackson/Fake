//This file was automatically generated by Text File Layout Definition Document and XLA200710010.
// Generated on    :20160302151714000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :TextFileLayoutDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NMAL6700F00FMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.file;

import parts.common.EZDFMsg;
import parts.common.EZDFStringItem;
import parts.common.EZDMsgArray;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NMAL6700F00 File Layout Message class.
 * @author
 * @version XLA200710010
 */
public class NMAL6700F00FMsg extends EZDFMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** LOC_NUM_A0*/
	public final EZDFStringItem              locNum_A0;

    /** FIRST_LINE_ADDR_A0*/
	public final EZDFStringItem              firstLineAddr_A0;

    /** SCD_LINE_ADDR_A0*/
	public final EZDFStringItem              scdLineAddr_A0;

    /** CTY_ADDR_A0*/
	public final EZDFStringItem              ctyAddr_A0;

    /** ST_CD_A0*/
	public final EZDFStringItem              stCd_A0;

    /** POST_CD_A0*/
	public final EZDFStringItem              postCd_A0;

    /** XX_CHK_BOX_AB*/
	public final EZDFStringItem              xxChkBox_AB;

    /** XX_CHK_BOX_AS*/
	public final EZDFStringItem              xxChkBox_AS;

    /** XX_CHK_BOX_AP*/
	public final EZDFStringItem              xxChkBox_AP;

    /** XX_RELN_DS_ACCT_TXT_A0*/
	public final EZDFStringItem              xxRelnDsAcctTxt_A0;

    /** XX_DT_TXT_AF*/
	public final EZDFStringItem              xxDtTxt_AF;

    /** XX_DT_TXT_AT*/
	public final EZDFStringItem              xxDtTxt_AT;

    /** DS_ACCT_STS_NM_A0*/
	public final EZDFStringItem              dsAcctStsNm_A0;


	/**
	 * NMAL6700F00FMsg is constructor.
	 * The initialization when the instance of NMAL6700F00FMsg is generated.
	 */
	public NMAL6700F00FMsg() {
		this(false, -1);
	}

	/**
	 * NMAL6700F00FMsg is constructor.
	 * The initialization when the instance of NMAL6700F00FMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NMAL6700F00FMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		locNum_A0 = (EZDFStringItem)newItem("locNum_A0");
		firstLineAddr_A0 = (EZDFStringItem)newItem("firstLineAddr_A0");
		scdLineAddr_A0 = (EZDFStringItem)newItem("scdLineAddr_A0");
		ctyAddr_A0 = (EZDFStringItem)newItem("ctyAddr_A0");
		stCd_A0 = (EZDFStringItem)newItem("stCd_A0");
		postCd_A0 = (EZDFStringItem)newItem("postCd_A0");
		xxChkBox_AB = (EZDFStringItem)newItem("xxChkBox_AB");
		xxChkBox_AS = (EZDFStringItem)newItem("xxChkBox_AS");
		xxChkBox_AP = (EZDFStringItem)newItem("xxChkBox_AP");
		xxRelnDsAcctTxt_A0 = (EZDFStringItem)newItem("xxRelnDsAcctTxt_A0");
		xxDtTxt_AF = (EZDFStringItem)newItem("xxDtTxt_AF");
		xxDtTxt_AT = (EZDFStringItem)newItem("xxDtTxt_AT");
		dsAcctStsNm_A0 = (EZDFStringItem)newItem("dsAcctStsNm_A0");
	}

	/**
	 * get the type of array which is stored
	 * @return NMAL6700F00FMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NMAL6700F00FMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"locNum_A0", "locNum_A0", "A0", null, TYPE_HANKAKUEISU, "30", null},
	{"firstLineAddr_A0", "firstLineAddr_A0", "A0", null, TYPE_HANKAKUEISU, "60", null},
	{"scdLineAddr_A0", "scdLineAddr_A0", "A0", null, TYPE_HANKAKUEISU, "60", null},
	{"ctyAddr_A0", "ctyAddr_A0", "A0", null, TYPE_HANKAKUEISU, "25", null},
	{"stCd_A0", "stCd_A0", "A0", null, TYPE_HANKAKUEISU, "2", null},
	{"postCd_A0", "postCd_A0", "A0", null, TYPE_HANKAKUEISU, "15", null},
	{"xxChkBox_AB", "xxChkBox_AB", "AB", null, TYPE_HANKAKUEIJI, "1", null},
	{"xxChkBox_AS", "xxChkBox_AS", "AS", null, TYPE_HANKAKUEIJI, "1", null},
	{"xxChkBox_AP", "xxChkBox_AP", "AP", null, TYPE_HANKAKUEIJI, "1", null},
	{"xxRelnDsAcctTxt_A0", "xxRelnDsAcctTxt_A0", "A0", null, TYPE_HANKAKUEISU, "400", null},
	{"xxDtTxt_AF", "xxDtTxt_AF", "AF", null, TYPE_HANKAKUEISU, "10", null},
	{"xxDtTxt_AT", "xxDtTxt_AT", "AT", null, TYPE_HANKAKUEISU, "10", null},
	{"dsAcctStsNm_A0", "dsAcctStsNm_A0", "A0", null, TYPE_HANKAKUEISU, "20", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"LOC_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//locNum_A0
        {"FIRST_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//firstLineAddr_A0
        {"SCD_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//scdLineAddr_A0
        {"CTY_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ctyAddr_A0
        {"ST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//stCd_A0
        {"POST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//postCd_A0
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_AB
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_AS
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_AP
        {"XX_RELN_DS_ACCT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRelnDsAcctTxt_A0
        {"XX_DT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDtTxt_AF
        {"XX_DT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDtTxt_AT
        {"DS_ACCT_STS_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctStsNm_A0
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

