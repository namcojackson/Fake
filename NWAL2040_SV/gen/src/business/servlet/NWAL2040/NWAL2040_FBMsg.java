//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20170915192943000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NWAL2040_FBMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NWAL2040;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NWAL2040 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NWAL2040_FBMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** ORD_RMA_DEF_WH_PK_F1*/
	public final EZDBBigDecimalItem              ordRmaDefWhPk_F1;

    /** DEF_WH_MAP_TMPL_CD_F1*/
	public final EZDBStringItem              defWhMapTmplCd_F1;

    /** MDSE_ITEM_CLS_TP_CD_F1*/
	public final EZDBStringItem              mdseItemClsTpCd_F1;

    /** THIRD_PTY_ITEM_FLG_F1*/
	public final EZDBStringItem              thirdPtyItemFlg_F1;

    /** FROM_POST_CD_F1*/
	public final EZDBStringItem              fromPostCd_F1;

    /** TO_POST_CD_F1*/
	public final EZDBStringItem              toPostCd_F1;

    /** ON_HND_CHK_FLG_F1*/
	public final EZDBStringItem              onHndChkFlg_F1;

    /** THIRD_PTY_DSP_TP_CD_F1*/
	public final EZDBStringItem              thirdPtyDspTpCd_F1;

    /** DROP_RTRN_VND_CD_F1*/
	public final EZDBStringItem              dropRtrnVndCd_F1;

    /** RMA_DEF_WH_CD_F1*/
	public final EZDBStringItem              rmaDefWhCd_F1;

    /** _EZUpdateDateTime_F1*/
	public final EZDBStringItem              ezUpTime_F1;

    /** _EZUpTimeZone_F1*/
	public final EZDBStringItem              ezUpTimeZone_F1;


	/**
	 * NWAL2040_FBMsg is constructor.
	 * The initialization when the instance of NWAL2040_FBMsg is generated.
	 */
	public NWAL2040_FBMsg() {
		this(false, -1);
	}

	/**
	 * NWAL2040_FBMsg is constructor.
	 * The initialization when the instance of NWAL2040_FBMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NWAL2040_FBMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		ordRmaDefWhPk_F1 = (EZDBBigDecimalItem)newItem("ordRmaDefWhPk_F1");
		defWhMapTmplCd_F1 = (EZDBStringItem)newItem("defWhMapTmplCd_F1");
		mdseItemClsTpCd_F1 = (EZDBStringItem)newItem("mdseItemClsTpCd_F1");
		thirdPtyItemFlg_F1 = (EZDBStringItem)newItem("thirdPtyItemFlg_F1");
		fromPostCd_F1 = (EZDBStringItem)newItem("fromPostCd_F1");
		toPostCd_F1 = (EZDBStringItem)newItem("toPostCd_F1");
		onHndChkFlg_F1 = (EZDBStringItem)newItem("onHndChkFlg_F1");
		thirdPtyDspTpCd_F1 = (EZDBStringItem)newItem("thirdPtyDspTpCd_F1");
		dropRtrnVndCd_F1 = (EZDBStringItem)newItem("dropRtrnVndCd_F1");
		rmaDefWhCd_F1 = (EZDBStringItem)newItem("rmaDefWhCd_F1");
		ezUpTime_F1 = (EZDBStringItem)newItem("ezUpTime_F1");
		ezUpTimeZone_F1 = (EZDBStringItem)newItem("ezUpTimeZone_F1");
	}

	/**
	 * get the type of array which is stored
	 * @return NWAL2040_FBMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NWAL2040_FBMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"ordRmaDefWhPk_F1", "ordRmaDefWhPk_F1", "F1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"defWhMapTmplCd_F1", "defWhMapTmplCd_F1", "F1", null, TYPE_HANKAKUEISU, "10", null},
	{"mdseItemClsTpCd_F1", "mdseItemClsTpCd_F1", "F1", null, TYPE_HANKAKUEISU, "2", null},
	{"thirdPtyItemFlg_F1", "thirdPtyItemFlg_F1", "F1", null, TYPE_HANKAKUEISU, "1", null},
	{"fromPostCd_F1", "fromPostCd_F1", "F1", null, TYPE_HANKAKUEISU, "15", null},
	{"toPostCd_F1", "toPostCd_F1", "F1", null, TYPE_HANKAKUEISU, "15", null},
	{"onHndChkFlg_F1", "onHndChkFlg_F1", "F1", null, TYPE_HANKAKUEISU, "1", null},
	{"thirdPtyDspTpCd_F1", "thirdPtyDspTpCd_F1", "F1", null, TYPE_HANKAKUEISU, "2", null},
	{"dropRtrnVndCd_F1", "dropRtrnVndCd_F1", "F1", null, TYPE_HANKAKUEISU, "2", null},
	{"rmaDefWhCd_F1", "rmaDefWhCd_F1", "F1", null, TYPE_HANKAKUEISU, "20", null},
	{"ezUpTime_F1", "ezUpTime_F1", "F1", null, TYPE_HANKAKUEISU, "17", null},
	{"ezUpTimeZone_F1", "ezUpTimeZone_F1", "F1", null, TYPE_HANKAKUEISU, "5", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"ORD_RMA_DEF_WH_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordRmaDefWhPk_F1
        {"DEF_WH_MAP_TMPL_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//defWhMapTmplCd_F1
        {"MDSE_ITEM_CLS_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseItemClsTpCd_F1
        {"THIRD_PTY_ITEM_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//thirdPtyItemFlg_F1
        {"FROM_POST_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//fromPostCd_F1
        {"TO_POST_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//toPostCd_F1
        {"ON_HND_CHK_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//onHndChkFlg_F1
        {"THIRD_PTY_DSP_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//thirdPtyDspTpCd_F1
        {"DROP_RTRN_VND_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dropRtrnVndCd_F1
        {"RMA_DEF_WH_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rmaDefWhCd_F1
        {"_EZUpdateDateTime",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTime_F1
        {"_EZUpTimeZone",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTimeZone_F1
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

