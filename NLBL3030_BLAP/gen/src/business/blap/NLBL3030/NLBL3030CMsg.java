//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20130717225435000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NLBL3030CMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NLBL3030;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NLBL3030 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NLBL3030CMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** MSG_CTRL_TP_DESC_TXT*/
	public final EZDCStringItem              msgCtrlTpDescTxt;

    /** XX_DS_MULT_MSG_DPLY_TXT*/
	public final EZDCStringItem              xxDsMultMsgDplyTxt;

    /** XX_DS_INPUT_TXT_NUM*/
	public final EZDCBigDecimalItem              xxDsInputTxtNum;

    /** MSG_MAX_TXT_NUM*/
	public final EZDCBigDecimalItem              msgMaxTxtNum;

    /** XX_OPS_TP*/
	public final EZDCStringItem              xxOpsTp;

    /** MSG_MAX_LINE_NUM*/
	public final EZDCBigDecimalItem              msgMaxLineNum;

    /** A*/
	public final business.blap.NLBL3030.NLBL3030_ACMsgArray              A;


	/**
	 * NLBL3030CMsg is constructor.
	 * The initialization when the instance of NLBL3030CMsg is generated.
	 */
	public NLBL3030CMsg() {
		this(false, -1);
	}

	/**
	 * NLBL3030CMsg is constructor.
	 * The initialization when the instance of NLBL3030CMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NLBL3030CMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		msgCtrlTpDescTxt = (EZDCStringItem)newItem("msgCtrlTpDescTxt");
		xxDsMultMsgDplyTxt = (EZDCStringItem)newItem("xxDsMultMsgDplyTxt");
		xxDsInputTxtNum = (EZDCBigDecimalItem)newItem("xxDsInputTxtNum");
		msgMaxTxtNum = (EZDCBigDecimalItem)newItem("msgMaxTxtNum");
		xxOpsTp = (EZDCStringItem)newItem("xxOpsTp");
		msgMaxLineNum = (EZDCBigDecimalItem)newItem("msgMaxLineNum");
		A = (business.blap.NLBL3030.NLBL3030_ACMsgArray)newMsgArray("A");
	}

	/**
	 * get the type of array which is stored
	 * @return NLBL3030CMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NLBL3030CMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"msgCtrlTpDescTxt", "msgCtrlTpDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"xxDsMultMsgDplyTxt", "xxDsMultMsgDplyTxt", null, null, TYPE_HANKAKUEISU, "4000", null},
	{"xxDsInputTxtNum", "xxDsInputTxtNum", null, null, TYPE_SEISU_SYOSU, "4", "0"},
	{"msgMaxTxtNum", "msgMaxTxtNum", null, null, TYPE_SEISU_SYOSU, "4", "0"},
	{"xxOpsTp", "xxOpsTp", null, null, TYPE_HANKAKUEISU, "1", null},
	{"msgMaxLineNum", "msgMaxLineNum", null, null, TYPE_SEISU_SYOSU, "3", "0"},
	{"A", "A", null, "99", "business.blap.NLBL3030.NLBL3030_ACMsgArray", null, null},
	
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"MSG_CTRL_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//msgCtrlTpDescTxt
        {"XX_DS_MULT_MSG_DPLY_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDsMultMsgDplyTxt
        {"XX_DS_INPUT_TXT_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDsInputTxtNum
        {"MSG_MAX_TXT_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//msgMaxTxtNum
        {"XX_OPS_TP",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxOpsTp
        {"MSG_MAX_LINE_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//msgMaxLineNum
		null,	//A
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

