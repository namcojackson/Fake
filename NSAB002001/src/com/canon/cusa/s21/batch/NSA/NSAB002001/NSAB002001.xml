<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<sqlMap namespace="NSAB002001">

	<!-- START 2024/01/31 H.Iinuma [QC#61468,ADD] -->
    <typeAlias alias="FRT_CHRG_REPL_INFOTMsg"    type="business.db.FRT_CHRG_REPL_INFOTMsg"/>
    <typeAlias alias="FRT_CHRG_REPL_DTLTMsg"    type="business.db.FRT_CHRG_REPL_DTLTMsg"/>
	<!-- END 2024/01/31 H.Iinuma [QC#61468,ADD] -->

	<statement id="getRegSvcInvKey" parameterClass="Map" resultClass="Map">
	SELECT
        INV_TP_CD
	,	DS_CONTR_PK
	<!-- QC2536 start -->
	,	BASE_BLLG_FLG
	,	MTR_BLLG_FLG
	,	INV_SEPT_BASE_USG_FLG
	<!-- QC2536 end -->
<!-- START 2017/09/11 K.Kitachi [QC#20446, ADD] -->
    ,   SVC_CR_REBIL_PK
<!-- END 2017/09/11 K.Kitachi [QC#20446, ADD] -->
    <!-- START 2018/11/05 K.Kitachi [QC#28627, ADD] -->
    ,   CONTR_LINK_NUM
    <!-- END 2018/11/05 K.Kitachi [QC#28627, ADD] -->        
    <!-- START 2022/02/09 S.Kitamura [QC#59683, ADD] -->
    ,   DS_INV_TGTR_TP_CD
    ,   PRNT_DS_INV_TGTR_TP_CD
    ,   PRNT_INV_SEPT_BASE_USG_FLG
    <!-- END 2022/02/09 S.Kitamura [QC#59683, ADD] -->
	FROM
	(
		SELECT
			DCD.DS_CONTR_PK
		,	CASE 
			WHEN DCT.MAIN_UNIT_LINE_FLG = 'Y'
			THEN
				DCD.SVC_CONFIG_MSTR_PK
			ELSE
				PCD.SVC_CONFIG_MSTR_PK
			END	AS	SVC_CONFIG_MSTR_PK
		<!-- QC2536 start -->
		,	CASE WHEN
		<!-- START 2022/02/09 S.Kitamura [QC#59683, MOD] -->
		<!-- (DCR.INV_SEPT_BASE_USG_FLG is null OR DCR.INV_SEPT_BASE_USG_FLG = 'N') THEN '-' -->
			 (DCR.DS_INV_TGTR_TP_CD is null OR NVL(PCR.DS_INV_TGTR_TP_CD, DCR.DS_INV_TGTR_TP_CD) = '01') THEN '-'
		<!-- END 2022/02/09 S.Kitamura [QC#59683, MOD] -->
			WHEN
			(
					NVL(SCB.OVRD_NEXT_BLLG_DT, SCB.BASE_BLLG_NEXT_BLLG_DT)	&lt;=	#slsDt#
				AND	EXISTS (
					SELECT
						*
					FROM
						SVC_CONTR_BASE_BLLG		SBB
					WHERE
						SBB.SVC_CONTR_BLLG_PK	=	SCB.SVC_CONTR_BLLG_PK
					AND	SBB.DS_CONTR_DTL_PK		=	SCB.DS_CONTR_DTL_PK
					AND	SBB.GLBL_CMPY_CD		=	SCB.GLBL_CMPY_CD
					AND	SBB.EZCANCELFLAG		=	SCB.EZCANCELFLAG
				)
			)
			THEN	'Y'
			ELSE	'N'
			END		AS	BASE_BLLG_FLG
		,	CASE WHEN
		<!-- START 2022/02/09 S.Kitamura [QC#59683, MOD] -->
		<!-- (DCR.INV_SEPT_BASE_USG_FLG is null OR DCR.INV_SEPT_BASE_USG_FLG = 'N') THEN '-' -->
			 (DCR.DS_INV_TGTR_TP_CD is null OR NVL(PCR.DS_INV_TGTR_TP_CD, DCR.DS_INV_TGTR_TP_CD) = '01') THEN '-'
		<!-- END 2022/02/09 S.Kitamura [QC#59683, MOD] -->
			WHEN
			(
					NVL(SCB.OVRD_NEXT_BLLG_DT, SCB.MTR_BLLG_NEXT_BLLG_DT)	&lt;=	#slsDt#
				AND	EXISTS (
					SELECT
						*
					FROM
						SVC_CONTR_MTR_BLLG		SMB
					WHERE
						SMB.SVC_CONTR_BLLG_PK	=	SCB.SVC_CONTR_BLLG_PK
					AND	SMB.DS_CONTR_DTL_PK		=	SCB.DS_CONTR_DTL_PK
					AND	SMB.GLBL_CMPY_CD		=	SCB.GLBL_CMPY_CD
					AND	SMB.EZCANCELFLAG		=	SCB.EZCANCELFLAG
				)
			)
			THEN	'Y'
			ELSE	'N'
			END		AS	MTR_BLLG_FLG
		,	NVL(DCR.INV_SEPT_BASE_USG_FLG, 'N') INV_SEPT_BASE_USG_FLG
		<!-- QC2536 end -->
        ,   SCB.INV_TP_CD
<!-- START 2017/09/11 K.Kitachi [QC#20446, ADD] -->
        ,   SCB.SVC_CR_REBIL_PK
<!-- END 2017/09/11 K.Kitachi [QC#20446, ADD] -->
        <!-- START 2018/11/05 K.Kitachi [QC#28627, ADD] -->
        ,   DCR.CONTR_LINK_NUM
        <!-- END 2018/11/05 K.Kitachi [QC#28627, ADD] -->
        <!-- START 2022/02/09 S.Kitamura [QC#59683, ADD] -->
        ,   NVL(DCR.DS_INV_TGTR_TP_CD, '01') AS DS_INV_TGTR_TP_CD
        ,   PCR.DS_INV_TGTR_TP_CD AS PRNT_DS_INV_TGTR_TP_CD
        ,   PCR.INV_SEPT_BASE_USG_FLG AS PRNT_INV_SEPT_BASE_USG_FLG
        <!-- END 2022/02/09 S.Kitamura [QC#59683, ADD] -->
		FROM
			SVC_CONTR_BLLG						SCB
		,	DS_CONTR_DTL						DCD
		,	DS_CONTR_DTL_TP						DCT
		,	DS_CONTR_DTL						PCD
		,	DS_CONTR							DCR
		<!-- START 2022/02/09 S.Kitamura [QC#59683, ADD] -->
		,	DS_CONTR							PCR
		<!-- END 2022/02/09 S.Kitamura [QC#59683, ADD] -->
		WHERE
            <iterate property="bllgCpltStsCdList" var="bllgCpltStsCd[]" open="SCB.BLLG_CPLT_STS_CD IN (" close=")" conjunction=",">
                #bllgCpltStsCd[]#
            </iterate>
		AND	SCB.BLLG_APVL_CPLT_FLG				=	'Y'
		AND	SCB.GLBL_CMPY_CD					=	#glblCmpyCd#
		AND	SCB.EZCANCELFLAG					=	'0'
		AND	(
			(
					NVL(SCB.OVRD_NEXT_BLLG_DT, SCB.BASE_BLLG_NEXT_BLLG_DT)	&lt;=	#slsDt#
				AND	EXISTS (
					SELECT
						*
					FROM
						SVC_CONTR_BASE_BLLG		SBB
					WHERE
						SBB.SVC_CONTR_BLLG_PK	=	SCB.SVC_CONTR_BLLG_PK
					AND	SBB.DS_CONTR_DTL_PK		=	SCB.DS_CONTR_DTL_PK
					AND	SBB.GLBL_CMPY_CD		=	SCB.GLBL_CMPY_CD
					AND	SBB.EZCANCELFLAG		=	SCB.EZCANCELFLAG
				)
			)
			OR	(
					NVL(SCB.OVRD_NEXT_BLLG_DT, SCB.MTR_BLLG_NEXT_BLLG_DT)	&lt;=	#slsDt#
				AND	EXISTS (
					SELECT
						*
					FROM
						SVC_CONTR_MTR_BLLG		SMB
					WHERE
						SMB.SVC_CONTR_BLLG_PK	=	SCB.SVC_CONTR_BLLG_PK
					AND	SMB.DS_CONTR_DTL_PK		=	SCB.DS_CONTR_DTL_PK
					AND	SMB.GLBL_CMPY_CD		=	SCB.GLBL_CMPY_CD
					AND	SMB.EZCANCELFLAG		=	SCB.EZCANCELFLAG
				)
			)
		)
        <!-- add start 2019/05/09 QC#50145 -->
        <!-- START 2020/01/09 K.Kitachi [QC#55173, MOD] -->
        AND (   SCB.SVC_CR_REBIL_PK IS NULL
             OR (   SCB.INV_TP_CD = #invTpCd#
                AND
                    EXISTS (
                        SELECT
                            1
                        FROM
                            SVC_CR_REBIL A
                        WHERE
                            A.EZCANCELFLAG        = '0'
                        AND A.GLBL_CMPY_CD        = SCB.GLBL_CMPY_CD
                        AND A.SVC_CR_REBIL_PK     = SCB.SVC_CR_REBIL_PK
                        <iterate property="svcCrRebilStsCdList" var="svcCrRebilStsCd[]" open="AND A.SVC_CR_REBIL_STS_CD IN (" close=")" conjunction=",">
                            #svcCrRebilStsCd[]#
                        </iterate>
                    )
                )
            )
        <!-- END 2020/01/09 K.Kitachi [QC#55173, MOD] -->
        <!-- add end 2019/05/09 QC#50145 -->
		AND	DCD.DS_CONTR_DTL_PK			=	SCB.DS_CONTR_DTL_PK
		AND	DCD.GLBL_CMPY_CD			=	SCB.GLBL_CMPY_CD
		AND	DCD.EZCANCELFLAG			=	SCB.EZCANCELFLAG
		AND	DCT.DS_CONTR_DTL_TP_CD		=	DCD.DS_CONTR_DTL_TP_CD
		AND	DCT.GLBL_CMPY_CD			=	DCD.GLBL_CMPY_CD
		AND	DCT.EZCANCELFLAG			=	DCD.EZCANCELFLAG
		AND	DCD.PRNT_DS_CONTR_DTL_PK	=	PCD.DS_CONTR_DTL_PK(+)
		AND	DCD.GLBL_CMPY_CD			=	PCD.GLBL_CMPY_CD(+)
		AND	DCD.EZCANCELFLAG			=	PCD.EZCANCELFLAG(+)
		AND	DCR.DS_CONTR_PK				=	DCD.DS_CONTR_PK
		AND	DCR.GLBL_CMPY_CD			=	DCD.GLBL_CMPY_CD
		AND	DCR.EZCANCELFLAG			=	DCD.EZCANCELFLAG
		AND	DCR.DS_CONTR_CATG_CD		=	#dsContrCatgCd#
		<!-- START 2022/02/09 S.Kitamura [QC#59683, ADD] -->
		AND DCR.EZCANCELFLAG            =   PCR.EZCANCELFLAG(+)
		AND DCR.GLBL_CMPY_CD			=	PCR.GLBL_CMPY_CD(+)
		AND DCR.CONTR_LINK_NUM          =   PCR.DS_CONTR_NUM(+)
		<!-- END 2022/02/09 S.Kitamura [QC#59683, ADD] -->
        AND EXISTS(
        <!-- START 2017/12/21 U.Kim [QC#22141, MOD] -->
        <!--        SELECT -->
        <!--            * -->
        <!--        FROM -->
        <!--            DUAL -->
        <!--        WHERE -->
        <!--            MOD( -->
        <!--                NVL( -->
        <!--                    (SELECT -->
        <!--                         A.SELL_TO_CUST_PK -->
        <!--                     FROM -->
        <!--                         SELL_TO_CUST A -->
        <!--                     WHERE -->
        <!--                         A.EZCANCELFLAG    = '0' -->
        <!--                     AND A.GLBL_CMPY_CD    = SCB.GLBL_CMPY_CD -->
        <!--                     AND A.SELL_TO_CUST_CD = SCB.DS_ACCT_NUM) -->
        <!--                ,0) -->
        <!--            ,#multiCnt#) = #usrVar1# -->
                    SELECT
                         1
                     FROM
                         SELL_TO_CUST A
                     WHERE
                         A.EZCANCELFLAG    = '0'
                     AND A.GLBL_CMPY_CD    = SCB.GLBL_CMPY_CD
                     AND A.SELL_TO_CUST_CD = SCB.DS_ACCT_NUM
                     AND MOD(NVL(A.SELL_TO_CUST_PK,0),#multiCnt#) = #usrVar1#
        <!-- END 2017/12/21 U.Kim [QC#22141, MOD] -->
        )
	)
	WHERE
		SVC_CONFIG_MSTR_PK				IS NOT NULL
	GROUP BY
        INV_TP_CD
	,	DS_CONTR_PK
	<!-- QC2536 start -->
	,	BASE_BLLG_FLG
	,	MTR_BLLG_FLG
    ,   INV_SEPT_BASE_USG_FLG
	<!-- QC2536 end -->
<!-- START 2017/09/11 K.Kitachi [QC#20446, ADD] -->
    ,   SVC_CR_REBIL_PK
<!-- END 2017/09/11 K.Kitachi [QC#20446, ADD] -->
    <!-- START 2018/11/05 K.Kitachi [QC#28627, ADD] -->
    ,   CONTR_LINK_NUM
    <!-- END 2018/11/05 K.Kitachi [QC#28627, ADD] -->
    <!-- START 2022/02/09 S.Kitamura [QC#59683, ADD] -->
    ,   DS_INV_TGTR_TP_CD
    ,   PRNT_DS_INV_TGTR_TP_CD
    ,   PRNT_INV_SEPT_BASE_USG_FLG
    <!-- END 2022/02/09 S.Kitamura [QC#59683, ADD] -->
	ORDER BY
        DECODE(INV_TP_CD, '2', 1)
    ,   INV_TP_CD
	,	DS_CONTR_PK
	<!-- QC2536 start -->
	,	BASE_BLLG_FLG DESC
	,	MTR_BLLG_FLG DESC
	<!-- QC2536 end -->
	</statement>
	<statement id="getFleetSvcInvKey" parameterClass="Map" resultClass="Map">
	<!-- QC2536 start -->
	SELECT
        INV_TP_CD
	,	DS_CONTR_PK
    ,   BILL_TO_CUST_CD
	,	BASE_BLLG_FLG
	,	MTR_BLLG_FLG
	,	INV_SEPT_BASE_USG_FLG
	,   NEXT_BLLG_DT
<!-- START 2017/09/11 K.Kitachi [QC#20446, ADD] -->
    ,   SVC_CR_REBIL_PK
<!-- END 2017/09/11 K.Kitachi [QC#20446, ADD] -->
<!-- START 2017/09/28 M.Kidokoro [QC#21286, ADD] -->
    ,   SVC_CR_REBIL_DTL_PK
<!-- END 2017/09/28 M.Kidokoro [QC#21286, ADD] -->
    <!-- START 2018/07/25 K.Kitachi [QC#17068, ADD] -->
    ,   CTAC_PSN_PK
    <!-- END 2018/07/25 K.Kitachi [QC#17068, ADD] -->
    <!-- START 2018/11/05 K.Kitachi [QC#28627, ADD] -->
    ,   CONTR_LINK_NUM
    <!-- END 2018/11/05 K.Kitachi [QC#28627, ADD] -->
	FROM
	(
	<!-- QC2536 end -->
		SELECT
			DCR.DS_CONTR_PK
		,   NVL(NVL(SCB.OVRD_NEXT_BLLG_DT, SCB.BASE_BLLG_NEXT_BLLG_DT), SCB.MTR_BLLG_NEXT_BLLG_DT) AS NEXT_BLLG_DT
		<!-- QC2536 start -->
		,	CASE WHEN
			(DCR.INV_SEPT_BASE_USG_FLG is null OR DCR.INV_SEPT_BASE_USG_FLG = 'N') THEN '-'
			WHEN
			(
					NVL(SCB.OVRD_NEXT_BLLG_DT, SCB.BASE_BLLG_NEXT_BLLG_DT)	&lt;=	#slsDt#
				AND	EXISTS (
					SELECT
						*
					FROM
						SVC_CONTR_BASE_BLLG		SBB
					WHERE
						SBB.SVC_CONTR_BLLG_PK	=	SCB.SVC_CONTR_BLLG_PK
					AND	SBB.DS_CONTR_DTL_PK		=	SCB.DS_CONTR_DTL_PK
					AND	SBB.GLBL_CMPY_CD		=	SCB.GLBL_CMPY_CD
					AND	SBB.EZCANCELFLAG		=	SCB.EZCANCELFLAG
				)
			)
			THEN	'Y'
			ELSE	'N'
			END		AS	BASE_BLLG_FLG
        ,   SCB.BILL_TO_CUST_CD     AS  BILL_TO_CUST_CD
		,	CASE WHEN
			(DCR.INV_SEPT_BASE_USG_FLG is null OR DCR.INV_SEPT_BASE_USG_FLG = 'N') THEN '-'
			WHEN
			(
					NVL(SCB.OVRD_NEXT_BLLG_DT, SCB.MTR_BLLG_NEXT_BLLG_DT)	&lt;=	#slsDt#
				AND	EXISTS (
					SELECT
						*
					FROM
						SVC_CONTR_MTR_BLLG		SMB
					WHERE
						SMB.SVC_CONTR_BLLG_PK	=	SCB.SVC_CONTR_BLLG_PK
					AND	SMB.DS_CONTR_DTL_PK		=	SCB.DS_CONTR_DTL_PK
					AND	SMB.GLBL_CMPY_CD		=	SCB.GLBL_CMPY_CD
					AND	SMB.EZCANCELFLAG		=	SCB.EZCANCELFLAG
				)
			)
			THEN	'Y'
			ELSE	'N'
			END		AS	MTR_BLLG_FLG
		,	NVL(DCR.INV_SEPT_BASE_USG_FLG, 'N') INV_SEPT_BASE_USG_FLG
		<!-- QC2536 end -->
        ,   SCB.INV_TP_CD
<!-- START 2017/09/11 K.Kitachi [QC#20446, ADD] -->
        ,   SCB.SVC_CR_REBIL_PK
<!-- END 2017/09/11 K.Kitachi [QC#20446, ADD] -->
<!-- START 2017/09/28 M.Kidokoro [QC#21286, ADD] -->
        ,   SCB.SVC_CR_REBIL_DTL_PK
<!-- END 2017/09/28 M.Kidokoro [QC#21286, ADD] -->
<!-- START 2017/10/16 K.Kojima [QC#21785,ADD] -->
        ,    SVC_CONTR_BLLG_FROM_DT
<!-- END 2017/10/16 K.Kojima [QC#21785,ADD] -->
        <!-- START 2018/07/25 K.Kitachi [QC#17068, ADD] -->
        ,   CASE
                WHEN SCB.BASE_CHRG_FLG        = 'Y'
                 AND DCD.CTAC_PSN_PK          IS NOT NULL
                THEN DCD.CTAC_PSN_PK

                WHEN SCB.BASE_CHRG_FLG        = 'Y'
                 AND DCR.ALT_PAYER_CUST_CD    = DCD.BASE_BILL_TO_CUST_CD
                 AND DCR.CTAC_PSN_PK          IS NOT NULL
                THEN DCR.CTAC_PSN_PK

                WHEN SCB.USG_CHRG_FLG         = 'Y'
                 AND CBM.CTAC_PSN_PK          IS NOT NULL
                THEN CBM.CTAC_PSN_PK

                WHEN SCB.USG_CHRG_FLG         = 'Y'
                 AND DCD.BASE_BILL_TO_CUST_CD = CBM.BLLG_MTR_BILL_TO_CUST_CD
                 AND DCD.CTAC_PSN_PK          IS NOT NULL
                THEN DCD.CTAC_PSN_PK

                WHEN SCB.USG_CHRG_FLG         = 'Y'
                 AND DCR.ALT_PAYER_CUST_CD    = CBM.BLLG_MTR_BILL_TO_CUST_CD
                 AND DCR.CTAC_PSN_PK          IS NOT NULL
                THEN DCR.CTAC_PSN_PK

                ELSE NULL
            END AS CTAC_PSN_PK
        <!-- END 2018/07/25 K.Kitachi [QC#17068, ADD] -->
        <!-- START 2018/11/05 K.Kitachi [QC#28627, ADD] -->
        ,   DCR.CONTR_LINK_NUM
        <!-- END 2018/11/05 K.Kitachi [QC#28627, ADD] -->
		FROM
			SVC_CONTR_BLLG						SCB
		,	DS_CONTR_DTL						DCD
		,	DS_CONTR							DCR
        <!-- START 2018/07/25 K.Kitachi [QC#17068, ADD] -->
        ,   DS_CONTR_BLLG_MTR                   CBM
        <!-- END 2018/07/25 K.Kitachi [QC#17068, ADD] -->
		WHERE
            <iterate property="bllgCpltStsCdList" var="bllgCpltStsCd[]" open="SCB.BLLG_CPLT_STS_CD IN (" close=")" conjunction=",">
                #bllgCpltStsCd[]#
            </iterate>
		AND	SCB.BLLG_APVL_CPLT_FLG				=	'Y'
		AND	SCB.GLBL_CMPY_CD					=	#glblCmpyCd#
		AND	SCB.EZCANCELFLAG					=	'0'
		AND	(
			(
					NVL(SCB.OVRD_NEXT_BLLG_DT, SCB.BASE_BLLG_NEXT_BLLG_DT)	&lt;=	#slsDt#
				AND	EXISTS (
					SELECT
						*
					FROM
						SVC_CONTR_BASE_BLLG		SBB
					WHERE
						SBB.SVC_CONTR_BLLG_PK	=	SCB.SVC_CONTR_BLLG_PK
					AND	SBB.DS_CONTR_DTL_PK		=	SCB.DS_CONTR_DTL_PK
					AND	SBB.GLBL_CMPY_CD		=	SCB.GLBL_CMPY_CD
					AND	SBB.EZCANCELFLAG		=	SCB.EZCANCELFLAG
				)
			)
			OR	(
					NVL(SCB.OVRD_NEXT_BLLG_DT, SCB.MTR_BLLG_NEXT_BLLG_DT)	&lt;=	#slsDt#
				AND	EXISTS (
					SELECT
						*
					FROM
						SVC_CONTR_MTR_BLLG		SMB
					WHERE
						SMB.SVC_CONTR_BLLG_PK	=	SCB.SVC_CONTR_BLLG_PK
					AND	SMB.DS_CONTR_DTL_PK		=	SCB.DS_CONTR_DTL_PK
					AND	SMB.GLBL_CMPY_CD		=	SCB.GLBL_CMPY_CD
					AND	SMB.EZCANCELFLAG		=	SCB.EZCANCELFLAG
				)
			)
		)
        <!-- add start 2019/05/09 QC#50145 -->
        <!-- START 2020/01/09 K.Kitachi [QC#55173, MOD] -->
        AND (   SCB.SVC_CR_REBIL_PK IS NULL
             OR (   SCB.INV_TP_CD = #invTpCd#
                AND
                    EXISTS (
                        SELECT
                            1
                        FROM
                            SVC_CR_REBIL A
                        WHERE
                            A.EZCANCELFLAG        = '0'
                        AND A.GLBL_CMPY_CD        = SCB.GLBL_CMPY_CD
                        AND A.SVC_CR_REBIL_PK     = SCB.SVC_CR_REBIL_PK
                        <iterate property="svcCrRebilStsCdList" var="svcCrRebilStsCd[]" open="AND A.SVC_CR_REBIL_STS_CD IN (" close=")" conjunction=",">
                            #svcCrRebilStsCd[]#
                        </iterate>
                    )
                )
            )
        <!-- END 2020/01/09 K.Kitachi [QC#55173, MOD] -->
        <!-- add end 2019/05/09 QC#50145 -->
		AND	DCD.DS_CONTR_DTL_PK			=	SCB.DS_CONTR_DTL_PK
		AND	DCD.GLBL_CMPY_CD			=	SCB.GLBL_CMPY_CD
		AND	DCD.EZCANCELFLAG			=	SCB.EZCANCELFLAG
        <!-- START 2017/12/06 K.Kojima [QC#22871,ADD] -->
        AND DCD.DS_CONTR_DTL_TP_CD      =   #dsContrDtlTpFleetLine#
        <!-- END 2017/12/06 K.Kojima [QC#22871,ADD] -->
		AND	DCR.DS_CONTR_PK				=	DCD.DS_CONTR_PK
		AND	DCR.GLBL_CMPY_CD			=	DCD.GLBL_CMPY_CD
		AND	DCR.EZCANCELFLAG			=	DCD.EZCANCELFLAG
		AND	DCR.DS_CONTR_CATG_CD		=	#dsContrCatgCd#
        <!-- START 2018/07/25 K.Kitachi [QC#17068, ADD] -->
        AND SCB.GLBL_CMPY_CD            =   CBM.GLBL_CMPY_CD         (+)
        AND SCB.DS_CONTR_BLLG_MTR_PK    =   CBM.DS_CONTR_BLLG_MTR_PK (+)
        AND CBM.EZCANCELFLAG        (+) =   '0'
        <!-- END 2018/07/25 K.Kitachi [QC#17068, ADD] -->
        AND EXISTS(
        <!-- START 2017/12/21 U.Kim [QC#22141, MOD] -->
        <!--        SELECT -->
        <!--            * -->
        <!--        FROM -->
        <!--            DUAL -->
        <!--        WHERE -->
        <!--            MOD( -->
        <!--                NVL( -->
        <!--                    (SELECT -->
        <!--                         A.SELL_TO_CUST_PK -->
        <!--                     FROM -->
        <!--                         SELL_TO_CUST A -->
        <!--                     WHERE -->
        <!--                         A.EZCANCELFLAG    = '0' -->
        <!--                     AND A.GLBL_CMPY_CD    = SCB.GLBL_CMPY_CD -->
        <!--                     AND A.SELL_TO_CUST_CD = SCB.DS_ACCT_NUM) -->
        <!--                ,0) -->
        <!--            ,#multiCnt#) = #usrVar1# -->
                    SELECT
                         1
                     FROM
                         SELL_TO_CUST A
                     WHERE
                         A.EZCANCELFLAG    = '0'
                     AND A.GLBL_CMPY_CD    = SCB.GLBL_CMPY_CD
                     AND A.SELL_TO_CUST_CD = SCB.DS_ACCT_NUM
                     AND MOD(NVL(A.SELL_TO_CUST_PK,0),#multiCnt#) = #usrVar1#
        <!-- END 2017/12/21 U.Kim [QC#22141, MOD] -->
        )
	)
	GROUP BY
        INV_TP_CD
	,	DS_CONTR_PK
	,   BILL_TO_CUST_CD
	<!-- QC2536 start -->
	,	BASE_BLLG_FLG
	,	MTR_BLLG_FLG
    ,   INV_SEPT_BASE_USG_FLG
	<!-- QC2536 end -->
	,   NEXT_BLLG_DT
<!-- START 2017/09/11 K.Kitachi [QC#20446, ADD] -->
    ,   SVC_CR_REBIL_PK
<!-- END 2017/09/11 K.Kitachi [QC#20446, ADD] -->
<!-- START 2017/09/28 M.Kidokoro [QC#21286, ADD] -->
    ,   SVC_CR_REBIL_DTL_PK
<!-- END 2017/09/28 M.Kidokoro [QC#21286, ADD] -->
    <!-- START 2018/07/25 K.Kitachi [QC#17068, ADD] -->
    ,   CTAC_PSN_PK
    <!-- END 2018/07/25 K.Kitachi [QC#17068, ADD] -->
    <!-- START 2018/11/05 K.Kitachi [QC#28627, ADD] -->
    ,   CONTR_LINK_NUM
    <!-- END 2018/11/05 K.Kitachi [QC#28627, ADD] -->
	ORDER BY
        DECODE(INV_TP_CD, '2', 1)
    ,   INV_TP_CD
	,	DS_CONTR_PK
<!-- START 2017/12/22 U.Kim [QC#22282, ADD] -->
    ,   SVC_CR_REBIL_PK
    ,   SVC_CR_REBIL_DTL_PK
<!-- END  2017/12/22 U.Kim [QC#22282, ADD] -->
    ,   BILL_TO_CUST_CD
    ,   NEXT_BLLG_DT
	<!-- QC2536 start -->
	,	BASE_BLLG_FLG DESC
	,	MTR_BLLG_FLG DESC
	<!-- QC2536 end -->
<!-- START 2017/10/16 K.Kojima [QC#21785,ADD] -->
    ,   MIN(SVC_CONTR_BLLG_FROM_DT)
<!-- END 2017/10/16 K.Kojima [QC#21785,ADD] -->
	</statement>
    <statement id="getAggSvcInvKey" parameterClass="Map" resultClass="Map">
    SELECT
        INV_TP_CD
    ,   DS_CONTR_PK
    ,   BILL_TO_CUST_CD
    ,   BASE_BLLG_FLG
    ,   MTR_BLLG_FLG
    ,   INV_SEPT_BASE_USG_FLG
    ,   NEXT_BLLG_DT
<!-- START 2017/09/11 K.Kitachi [QC#20446, ADD] -->
    ,   SVC_CR_REBIL_PK
<!-- END 2017/09/11 K.Kitachi [QC#20446, ADD] -->
<!-- START 2017/09/28 M.Kidokoro [QC#21286, ADD] -->
    ,   SVC_CR_REBIL_DTL_PK
<!-- END 2017/09/28 M.Kidokoro [QC#21286, ADD] -->
    <!-- START 2018/07/25 K.Kitachi [QC#17068, ADD] -->
    ,   CTAC_PSN_PK
    <!-- END 2018/07/25 K.Kitachi [QC#17068, ADD] -->
    <!-- START 2018/11/05 K.Kitachi [QC#28627, ADD] -->
    ,   CONTR_LINK_NUM
    <!-- END 2018/11/05 K.Kitachi [QC#28627, ADD] -->
    <!-- START 2022/02/09 S.Kitamura [QC#59683, ADD] -->
    ,   DS_INV_TGTR_TP_CD
    ,   PRNT_DS_INV_TGTR_TP_CD
    ,   PRNT_INV_SEPT_BASE_USG_FLG
    <!-- END 2022/02/09 S.Kitamura [QC#59683, ADD] -->
    FROM
    (
        SELECT
            DCD.DS_CONTR_PK
        ,   NVL(NVL(SCB.OVRD_NEXT_BLLG_DT, SCB.BASE_BLLG_NEXT_BLLG_DT), SCB.MTR_BLLG_NEXT_BLLG_DT) AS NEXT_BLLG_DT
        ,   CASE 
            WHEN DCT.MAIN_UNIT_LINE_FLG = 'Y'
            THEN
                DCD.SVC_CONFIG_MSTR_PK
            ELSE
                PCD.SVC_CONFIG_MSTR_PK
            END AS  SVC_CONFIG_MSTR_PK
        ,   CASE WHEN
        <!-- START 2022/02/09 S.Kitamura [QC#59683, MOD] -->
        <!-- (DCR.INV_SEPT_BASE_USG_FLG is null OR DCR.INV_SEPT_BASE_USG_FLG = 'N') THEN '-' -->
            (DCR.DS_INV_TGTR_TP_CD is null OR NVL(PCR.DS_INV_TGTR_TP_CD, DCR.DS_INV_TGTR_TP_CD) = '01') THEN '-'
        <!-- END 2022/02/09 S.Kitamura [QC#59683, MOD] -->
            WHEN
            (
                    NVL(SCB.OVRD_NEXT_BLLG_DT, SCB.BASE_BLLG_NEXT_BLLG_DT)  &lt;=   #slsDt#
                AND EXISTS (
                    SELECT
                        *
                    FROM
                        SVC_CONTR_BASE_BLLG     SBB
                    WHERE
                        SBB.SVC_CONTR_BLLG_PK   =   SCB.SVC_CONTR_BLLG_PK
                    AND SBB.DS_CONTR_DTL_PK     =   SCB.DS_CONTR_DTL_PK
                    AND SBB.GLBL_CMPY_CD        =   SCB.GLBL_CMPY_CD
                    AND SBB.EZCANCELFLAG        =   SCB.EZCANCELFLAG
                )
            )
            THEN    'Y'
            ELSE    'N'
            END     AS  BASE_BLLG_FLG
        ,   SCB.BILL_TO_CUST_CD      AS  BILL_TO_CUST_CD
        ,   CASE WHEN
        <!-- START 2022/02/09 S.Kitamura [QC#59683, MOD] -->
        <!-- (DCR.INV_SEPT_BASE_USG_FLG is null OR DCR.INV_SEPT_BASE_USG_FLG = 'N') THEN '-' -->
            (DCR.DS_INV_TGTR_TP_CD is null OR NVL(PCR.DS_INV_TGTR_TP_CD, DCR.DS_INV_TGTR_TP_CD) = '01') THEN '-'
        <!-- END 2022/02/09 S.Kitamura [QC#59683, MOD] -->
            WHEN
            (
                    NVL(SCB.OVRD_NEXT_BLLG_DT, SCB.MTR_BLLG_NEXT_BLLG_DT)   &lt;=   #slsDt#
                AND EXISTS (
                    SELECT
                        *
                    FROM
                        SVC_CONTR_MTR_BLLG      SMB
                    WHERE
                        SMB.SVC_CONTR_BLLG_PK   =   SCB.SVC_CONTR_BLLG_PK
                    AND SMB.DS_CONTR_DTL_PK     =   SCB.DS_CONTR_DTL_PK
                    AND SMB.GLBL_CMPY_CD        =   SCB.GLBL_CMPY_CD
                    AND SMB.EZCANCELFLAG        =   SCB.EZCANCELFLAG
                )
            )
            THEN    'Y'
            ELSE    'N'
            END     AS  MTR_BLLG_FLG
        ,   NVL(DCR.INV_SEPT_BASE_USG_FLG, 'N') INV_SEPT_BASE_USG_FLG
        ,   SCB.INV_TP_CD
<!-- START 2017/09/11 K.Kitachi [QC#20446, ADD] -->
        ,   SCB.SVC_CR_REBIL_PK
<!-- END 2017/09/11 K.Kitachi [QC#20446, ADD] -->
<!-- START 2017/09/28 M.Kidokoro [QC#21286, ADD] -->
        ,   SCB.SVC_CR_REBIL_DTL_PK
<!-- END 2017/09/28 M.Kidokoro [QC#21286, ADD] -->
<!-- START 2017/10/16 K.Kojima [QC#21785,ADD] -->
        ,   SVC_CONTR_BLLG_FROM_DT
<!-- END 2017/10/16 K.Kojima [QC#21785,ADD] -->
        <!-- START 2018/07/25 K.Kitachi [QC#17068, ADD] -->
        ,   CASE
                WHEN SCB.BASE_CHRG_FLG        = 'Y'
                 AND DCD.CTAC_PSN_PK          IS NOT NULL
                THEN DCD.CTAC_PSN_PK

                WHEN SCB.BASE_CHRG_FLG        = 'Y'
                 AND DCR.ALT_PAYER_CUST_CD    = DCD.BASE_BILL_TO_CUST_CD
                 AND DCR.CTAC_PSN_PK          IS NOT NULL
                THEN DCR.CTAC_PSN_PK

                WHEN SCB.USG_CHRG_FLG         = 'Y'
                 AND CBM.CTAC_PSN_PK          IS NOT NULL
                THEN CBM.CTAC_PSN_PK

                WHEN SCB.USG_CHRG_FLG         = 'Y'
                 AND DCD.BASE_BILL_TO_CUST_CD = CBM.BLLG_MTR_BILL_TO_CUST_CD
                 AND DCD.CTAC_PSN_PK          IS NOT NULL
                THEN DCD.CTAC_PSN_PK

                WHEN SCB.USG_CHRG_FLG         = 'Y'
                 AND DCR.ALT_PAYER_CUST_CD    = CBM.BLLG_MTR_BILL_TO_CUST_CD
                 AND DCR.CTAC_PSN_PK          IS NOT NULL
                THEN DCR.CTAC_PSN_PK

                ELSE NULL
            END AS CTAC_PSN_PK
        <!-- END 2018/07/25 K.Kitachi [QC#17068, ADD] -->
        <!-- START 2018/11/05 K.Kitachi [QC#28627, ADD] -->
        ,   DCR.CONTR_LINK_NUM
        <!-- END 2018/11/05 K.Kitachi [QC#28627, ADD] -->
        <!-- START 2022/02/09 S.Kitamura [QC#59683, ADD] -->
        ,   NVL(DCR.DS_INV_TGTR_TP_CD, '01') AS DS_INV_TGTR_TP_CD
        ,   PCR.DS_INV_TGTR_TP_CD AS PRNT_DS_INV_TGTR_TP_CD
        ,   PCR.INV_SEPT_BASE_USG_FLG AS PRNT_INV_SEPT_BASE_USG_FLG
        <!-- END 2022/02/09 S.Kitamura [QC#59683, ADD] -->
        FROM
            SVC_CONTR_BLLG                      SCB
        ,   DS_CONTR_DTL                        DCD
        ,   DS_CONTR_DTL_TP                     DCT
        ,   DS_CONTR_DTL                        PCD
        ,   DS_CONTR                            DCR
        <!-- START 2018/07/25 K.Kitachi [QC#17068, ADD] -->
        ,   DS_CONTR_BLLG_MTR                   CBM
        <!-- END 2018/07/25 K.Kitachi [QC#17068, ADD] -->
        <!-- START 2022/02/09 S.Kitamura [QC#59683, ADD] -->
        ,    DS_CONTR                           PCR
		<!-- END 2022/02/09 S.Kitamura [QC#59683, ADD] -->
        WHERE
            <iterate property="bllgCpltStsCdList" var="bllgCpltStsCd[]" open="SCB.BLLG_CPLT_STS_CD IN (" close=")" conjunction=",">
                #bllgCpltStsCd[]#
            </iterate>
        AND SCB.BLLG_APVL_CPLT_FLG              =   'Y'
        AND SCB.GLBL_CMPY_CD                    =   #glblCmpyCd#
        AND SCB.EZCANCELFLAG                    =   '0'
        AND (
            (
                    NVL(SCB.OVRD_NEXT_BLLG_DT, SCB.BASE_BLLG_NEXT_BLLG_DT)  &lt;=   #slsDt#
                AND EXISTS (
                    SELECT
                        *
                    FROM
                        SVC_CONTR_BASE_BLLG     SBB
                    WHERE
                        SBB.SVC_CONTR_BLLG_PK   =   SCB.SVC_CONTR_BLLG_PK
                    AND SBB.DS_CONTR_DTL_PK     =   SCB.DS_CONTR_DTL_PK
                    AND SBB.GLBL_CMPY_CD        =   SCB.GLBL_CMPY_CD
                    AND SBB.EZCANCELFLAG        =   SCB.EZCANCELFLAG
                )
            )
            OR  (
                    NVL(SCB.OVRD_NEXT_BLLG_DT, SCB.MTR_BLLG_NEXT_BLLG_DT)   &lt;=   #slsDt#
                AND EXISTS (
                    SELECT
                        *
                    FROM
                        SVC_CONTR_MTR_BLLG      SMB
                    WHERE
                        SMB.SVC_CONTR_BLLG_PK   =   SCB.SVC_CONTR_BLLG_PK
                    AND SMB.DS_CONTR_DTL_PK     =   SCB.DS_CONTR_DTL_PK
                    AND SMB.GLBL_CMPY_CD        =   SCB.GLBL_CMPY_CD
                    AND SMB.EZCANCELFLAG        =   SCB.EZCANCELFLAG
                )
            )
        )
        <!-- add start 2019/05/09 QC#50145 -->
        <!-- START 2020/01/09 K.Kitachi [QC#55173, MOD] -->
        AND (   SCB.SVC_CR_REBIL_PK IS NULL
             OR (   SCB.INV_TP_CD = #invTpCd#
                AND
                    EXISTS (
                        SELECT
                            1
                        FROM
                            SVC_CR_REBIL A
                        WHERE
                            A.EZCANCELFLAG        = '0'
                        AND A.GLBL_CMPY_CD        = SCB.GLBL_CMPY_CD
                        AND A.SVC_CR_REBIL_PK     = SCB.SVC_CR_REBIL_PK
                        <iterate property="svcCrRebilStsCdList" var="svcCrRebilStsCd[]" open="AND A.SVC_CR_REBIL_STS_CD IN (" close=")" conjunction=",">
                            #svcCrRebilStsCd[]#
                        </iterate>
                    )
                )
            )
        <!-- END 2020/01/09 K.Kitachi [QC#55173, MOD] -->
        <!-- add end 2019/05/09 QC#50145 -->
        AND DCD.DS_CONTR_DTL_PK         =   SCB.DS_CONTR_DTL_PK
        AND DCD.GLBL_CMPY_CD            =   SCB.GLBL_CMPY_CD
        AND DCD.EZCANCELFLAG            =   SCB.EZCANCELFLAG
        AND DCT.DS_CONTR_DTL_TP_CD      =   DCD.DS_CONTR_DTL_TP_CD
        AND DCT.GLBL_CMPY_CD            =   DCD.GLBL_CMPY_CD
        AND DCT.EZCANCELFLAG            =   DCD.EZCANCELFLAG
        AND DCD.PRNT_DS_CONTR_DTL_PK    =   PCD.DS_CONTR_DTL_PK(+)
        AND DCD.GLBL_CMPY_CD            =   PCD.GLBL_CMPY_CD(+)
        AND DCD.EZCANCELFLAG            =   PCD.EZCANCELFLAG(+)
        AND DCR.DS_CONTR_PK             =   DCD.DS_CONTR_PK
        AND DCR.GLBL_CMPY_CD            =   DCD.GLBL_CMPY_CD
        AND DCR.EZCANCELFLAG            =   DCD.EZCANCELFLAG
        AND DCR.DS_CONTR_CATG_CD        =   #dsContrCatgCd#
        <!-- START 2018/07/25 K.Kitachi [QC#17068, ADD] -->
        AND SCB.GLBL_CMPY_CD            =   CBM.GLBL_CMPY_CD         (+)
        AND SCB.DS_CONTR_BLLG_MTR_PK    =   CBM.DS_CONTR_BLLG_MTR_PK (+)
        AND CBM.EZCANCELFLAG        (+) =   '0'
        <!-- END 2018/07/25 K.Kitachi [QC#17068, ADD] -->
        <!-- START 2022/02/09 S.Kitamura [QC#59683, ADD] -->
        AND DCR.EZCANCELFLAG            =   PCR.EZCANCELFLAG(+)
        AND DCR.GLBL_CMPY_CD            =   PCR.GLBL_CMPY_CD(+)
        AND DCR.CONTR_LINK_NUM          =   PCR.DS_CONTR_NUM(+)
        <!-- END 2022/02/09 S.Kitamura [QC#59683, ADD] -->
        AND EXISTS(
        <!-- START 2017/12/21 U.Kim [QC#22141, MOD] -->
        <!--        SELECT -->
        <!--            * -->
        <!--        FROM -->
        <!--            DUAL -->
        <!--        WHERE -->
        <!--            MOD( -->
        <!--                NVL( -->
        <!--                    (SELECT -->
        <!--                         A.SELL_TO_CUST_PK -->
        <!--                     FROM -->
        <!--                         SELL_TO_CUST A -->
        <!--                     WHERE -->
        <!--                         A.EZCANCELFLAG    = '0' -->
        <!--                     AND A.GLBL_CMPY_CD    = SCB.GLBL_CMPY_CD -->
        <!--                     AND A.SELL_TO_CUST_CD = SCB.DS_ACCT_NUM) -->
        <!--                ,0) -->
        <!--            ,#multiCnt#) = #usrVar1# -->
                    SELECT
                         1
                     FROM
                         SELL_TO_CUST A
                     WHERE
                         A.EZCANCELFLAG    = '0'
                     AND A.GLBL_CMPY_CD    = SCB.GLBL_CMPY_CD
                     AND A.SELL_TO_CUST_CD = SCB.DS_ACCT_NUM
                     AND MOD(NVL(A.SELL_TO_CUST_PK,0),#multiCnt#) = #usrVar1#
        <!-- END 2017/12/21 U.Kim [QC#22141, MOD] -->
        )
    )
    WHERE
        SVC_CONFIG_MSTR_PK              IS NOT NULL
    GROUP BY
        INV_TP_CD
    ,   DS_CONTR_PK
    ,   BILL_TO_CUST_CD
    ,   BASE_BLLG_FLG
    ,   MTR_BLLG_FLG
    ,   INV_SEPT_BASE_USG_FLG
    ,   NEXT_BLLG_DT
<!-- START 2017/09/11 K.Kitachi [QC#20446, ADD] -->
    ,   SVC_CR_REBIL_PK
<!-- END 2017/09/11 K.Kitachi [QC#20446, ADD] -->
<!-- START 2017/09/28 M.Kidokoro [QC#21286, ADD] -->
    ,   SVC_CR_REBIL_DTL_PK
<!-- END 2017/09/28 M.Kidokoro [QC#21286, ADD] -->
    <!-- START 2018/07/25 K.Kitachi [QC#17068, ADD] -->
    ,   CTAC_PSN_PK
    <!-- END 2018/07/25 K.Kitachi [QC#17068, ADD] -->
    <!-- START 2018/11/05 K.Kitachi [QC#28627, ADD] -->
    ,   CONTR_LINK_NUM
    <!-- END 2018/11/05 K.Kitachi [QC#28627, ADD] -->
    <!-- START 2022/02/09 S.Kitamura [QC#59683, ADD] -->
    ,   DS_INV_TGTR_TP_CD
    ,   PRNT_DS_INV_TGTR_TP_CD
    ,   PRNT_INV_SEPT_BASE_USG_FLG
    <!-- END 2022/02/09 S.Kitamura [QC#59683, ADD] -->
    ORDER BY
        DECODE(INV_TP_CD, '2', 1)
    ,   INV_TP_CD
    ,   DS_CONTR_PK
<!-- START 2017/12/20 U.Kim [QC#22282, ADD] -->
    ,   SVC_CR_REBIL_PK
<!--  START 2022/09/01 L.Mandanas [QC#58350, DEL] -->
<!--      ,   SVC_CR_REBIL_DTL_PK   -->
<!--  END 2022/09/01 L.Mandanas [QC#58350, DEL] -->
<!-- END  2017/12/20 U.Kim [QC#22282, ADD] -->
    ,   BILL_TO_CUST_CD
    ,   NEXT_BLLG_DT
    ,   BASE_BLLG_FLG DESC
    ,   MTR_BLLG_FLG DESC
<!-- START 2017/10/16 K.Kojima [QC#21785,ADD] -->
    ,   MIN(SVC_CONTR_BLLG_FROM_DT)
<!-- END 2017/10/16 K.Kojima [QC#21785,ADD] -->
    </statement>
	<statement id="getMainUnitInfo" parameterClass="Map" resultClass="Map">
	SELECT
		SMM.SVC_MACH_MSTR_PK
	,	SMM.SHIP_TO_CUST_CD
	,	SMM.MDSE_CD
	,	SMM.SER_NUM
	,	MDS.MDSE_NM
	,	MDN.T_MDL_ID			MDL_ID
	,	MDN.T_MDL_NM			MDL_NM
    <!-- START 2019/10/29 K.Kitachi [QC#54203, ADD] -->
    ,   SMM.SVC_MACH_MSTR_STS_CD
    <!-- END 2019/10/29 K.Kitachi [QC#54203, ADD] -->
	FROM
		DS_CONTR_DTL			DCD
	,	DS_CONTR_DTL_TP			DCT
	,	SVC_MACH_MSTR			SMM
    ,   SVC_CONFIG_MSTR         SCM
	,	MDSE					MDS
	,	MDL_NM					MDN
	WHERE
		DCD.DS_CONTR_PK			=	#dsContrPk#
	AND	DCD.SVC_CONFIG_MSTR_PK	=	#svcConfigMstrPk#
	AND	DCD.GLBL_CMPY_CD		=	#glblCmpyCd#
	AND	DCD.EZCANCELFLAG		=	'0'
	AND	DCT.DS_CONTR_DTL_TP_CD	=	DCD.DS_CONTR_DTL_TP_CD
	AND	DCT.MAIN_UNIT_LINE_FLG	=	'Y'
	AND	DCT.GLBL_CMPY_CD		=	DCD.GLBL_CMPY_CD
	AND	DCT.EZCANCELFLAG		=	DCD.EZCANCELFLAG
	AND	SMM.SVC_MACH_MSTR_PK	=	DCD.SVC_MACH_MSTR_PK
	AND	SMM.GLBL_CMPY_CD		=	DCD.GLBL_CMPY_CD
	AND	SMM.EZCANCELFLAG		=	DCD.EZCANCELFLAG
	AND	MDS.MDSE_CD				=	SMM.MDSE_CD
	AND	MDS.GLBL_CMPY_CD		=	SMM.GLBL_CMPY_CD
	AND	MDS.EZCANCELFLAG		=	SMM.EZCANCELFLAG
    <!-- START 2019/04/04 [QC#31047, MOD] -->
    <!-- START 2018/04/02 K.Kitachi [QC#24973, MOD] -->
    AND SCM.SVC_CONFIG_MSTR_PK(+)  =   DCD.SVC_CONFIG_MSTR_PK
    AND SCM.GLBL_CMPY_CD(+)        =   DCD.GLBL_CMPY_CD
    AND SCM.EZCANCELFLAG(+)        =   DCD.EZCANCELFLAG
    <!-- END 2018/04/02 K.Kitachi [QC#24973, MOD] -->
    AND MDN.T_MDL_ID(+)            =   SCM.MDL_ID
    AND MDN.T_GLBL_CMPY_CD(+)      =   SCM.GLBL_CMPY_CD
    AND MDN.EZCANCELFLAG(+)        =   SCM.EZCANCELFLAG
    <!-- END 2019/04/04 [QC#31047, MOD] -->
    <!-- START 2017/11/17 K.Kojima [QC#21918,MOD] -->
    AND SMM.FIN_BR_CD IS NOT NULL
    <!-- END 2017/11/17 K.Kojima [QC#21918,MOD] -->
	</statement>
	<statement id="getRegDsContrDtlInfo" parameterClass="Map" resultClass="Map">
	WITH
	A AS (
		SELECT
			DCD.GLBL_CMPY_CD
		,	DCD.DS_CONTR_DTL_PK
		,	DCD.DS_CONTR_PK
		,	DCD.DS_CONTR_DTL_TP_CD
		,	DCD.DS_ORD_TP_CD
		,	DCD.DS_ORD_RSN_CD
		,	CASE 
			WHEN DCT.MAIN_UNIT_LINE_FLG = 'Y'
			THEN
				DCD.SVC_MACH_MSTR_PK
			ELSE
				PCD.SVC_MACH_MSTR_PK
			END	AS	SVC_MACH_MSTR_PK
		,	CASE 
			WHEN DCT.MAIN_UNIT_LINE_FLG = 'Y'
			THEN
				DCD.SVC_CONFIG_MSTR_PK
			ELSE
				PCD.SVC_CONFIG_MSTR_PK
			END	AS	SVC_CONFIG_MSTR_PK
		,	DCT.DS_CONTR_DTL_TP_NM
		,	DCT.DS_CONTR_DTL_TP_SORT_NUM
		,	CASE 
			WHEN DCT.MAIN_UNIT_LINE_FLG = 'Y' OR DCD.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCd#
			THEN
				SMM.MDSE_CD
			ELSE
				PMM.MDSE_CD
			END	AS	MDSE_CD
		,	CASE 
			WHEN DCT.MAIN_UNIT_LINE_FLG = 'Y' OR DCD.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCd#
			THEN
				SMD.MDSE_NM
			ELSE
				PMD.MDSE_NM
			END	AS	MDSE_NM
		,	CASE 
			WHEN DCT.MAIN_UNIT_LINE_FLG = 'Y'
			THEN
				SMM.SHIP_TO_CUST_CD
			ELSE
				PMM.SHIP_TO_CUST_CD
			END	AS	SHIP_TO_CUST_CD
		,	SCB.SVC_CONTR_BLLG_PK
		,	SCB.PRNT_SVC_CONTR_BLLG_PK
		,	CASE
			WHEN
			(
					NVL(SCB.OVRD_NEXT_BLLG_DT, SCB.BASE_BLLG_NEXT_BLLG_DT)	&lt;=	#slsDt#
				AND	EXISTS (
					SELECT
						*
					FROM
						SVC_CONTR_BASE_BLLG		SBB
					WHERE
						SBB.SVC_CONTR_BLLG_PK	=	SCB.SVC_CONTR_BLLG_PK
					AND	SBB.DS_CONTR_DTL_PK		=	SCB.DS_CONTR_DTL_PK
					AND	SBB.GLBL_CMPY_CD		=	SCB.GLBL_CMPY_CD
					AND	SBB.EZCANCELFLAG		=	SCB.EZCANCELFLAG
				)
			)
			THEN	'Y'
			ELSE	'N'
			END		AS	BASE_BLLG_FLG
		,	CASE WHEN
			(
					NVL(SCB.OVRD_NEXT_BLLG_DT, SCB.MTR_BLLG_NEXT_BLLG_DT)	&lt;=	#slsDt#
				AND	EXISTS (
					SELECT
						*
					FROM
						SVC_CONTR_MTR_BLLG		SMB
					WHERE
						SMB.SVC_CONTR_BLLG_PK	=	SCB.SVC_CONTR_BLLG_PK
					AND	SMB.DS_CONTR_DTL_PK		=	SCB.DS_CONTR_DTL_PK
					AND	SMB.GLBL_CMPY_CD		=	SCB.GLBL_CMPY_CD
					AND	SMB.EZCANCELFLAG		=	SCB.EZCANCELFLAG
				)
			)
			THEN	'Y'
			ELSE	'N'
			END		AS	MTR_BLLG_FLG
		,	SCB.BASE_BLLG_NEXT_BLLG_DT
		,	SCB.MTR_BLLG_NEXT_BLLG_DT
		,	SCB.OVRD_NEXT_BLLG_DT
        ,   SCB.SVC_CR_REBIL_PK
        ,   SCB.SVC_CR_REBIL_DTL_PK

        ,   CASE
            WHEN SCB.BASE_CHRG_FLG = 'Y'
            THEN
                DCD.BASE_BILL_TO_CUST_CD
            ELSE
                CBM.BLLG_MTR_BILL_TO_CUST_CD
            END AS BILL_TO_CUST_CD
        <!-- START 2018/07/25 K.Kitachi [QC#17068, MOD] -->
        <!-- ,   DCD.CTAC_PSN_PK -->
        ,   CASE
                WHEN SCB.BASE_CHRG_FLG        = 'Y'
                 AND DCD.CTAC_PSN_PK          IS NOT NULL
                THEN DCD.CTAC_PSN_PK

                WHEN SCB.BASE_CHRG_FLG        = 'Y'
                 AND DCR.ALT_PAYER_CUST_CD    = DCD.BASE_BILL_TO_CUST_CD
                 AND DCR.CTAC_PSN_PK          IS NOT NULL
                THEN DCR.CTAC_PSN_PK

                WHEN SCB.USG_CHRG_FLG         = 'Y'
                 AND CBM.CTAC_PSN_PK          IS NOT NULL
                THEN CBM.CTAC_PSN_PK

                WHEN SCB.USG_CHRG_FLG         = 'Y'
                 AND DCD.BASE_BILL_TO_CUST_CD = CBM.BLLG_MTR_BILL_TO_CUST_CD
                 AND DCD.CTAC_PSN_PK          IS NOT NULL
                THEN DCD.CTAC_PSN_PK

                WHEN SCB.USG_CHRG_FLG         = 'Y'
                 AND DCR.ALT_PAYER_CUST_CD    = CBM.BLLG_MTR_BILL_TO_CUST_CD
                 AND DCR.CTAC_PSN_PK          IS NOT NULL
                THEN DCR.CTAC_PSN_PK

                ELSE NULL
            END AS CTAC_PSN_PK
        <!-- END 2018/07/25 K.Kitachi [QC#17068, MOD] -->
        ,   SCB.ORIG_SVC_INV_NUM
        ,   CASE 
            WHEN DCT.MAIN_UNIT_LINE_FLG = 'Y' OR DCD.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCd#
            THEN
                SMM.CUR_LOC_ACCT_NUM
            ELSE
                PMM.CUR_LOC_ACCT_NUM
            END AS  CUR_LOC_ACCT_NUM
        ,   CASE 
            WHEN DCT.MAIN_UNIT_LINE_FLG = 'Y' OR DCD.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCd#
            THEN
                SMM.CUR_LOC_NUM
            ELSE
                PMM.CUR_LOC_NUM
            END AS  CUR_LOC_NUM
        ,   DCR.INV_SEPT_BASE_USG_FLG
        ,   SCB.BASE_CHRG_FLG
        ,   SCB.USG_CHRG_FLG
        ,   SCB.SVC_CONTR_BLLG_FROM_DT
        ,   SCB.SVC_CONTR_BLLG_THRU_DT
        ,   CASE 
            WHEN DCT.MAIN_UNIT_LINE_FLG = 'Y' OR DCD.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCd#
            THEN
                SCM.MDL_ID
            ELSE
                PCM.MDL_ID
            END AS  MDL_ID
        ,   MDN.T_MDL_NM            MDL_NM
        ,   CASE 
            WHEN DCT.MAIN_UNIT_LINE_FLG = 'Y' OR DCD.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCd#
            THEN
                SMM.SER_NUM
            ELSE
                PMM.SER_NUM
            END AS  SER_NUM
        ,   SCB.DS_ACCT_NUM
        ,   DCR.TOC_CD
        ,   DCD.SVC_PGM_MDSE_CD
        ,   CBM.INTG_MDSE_CD
        ,   DCD.BASE_BLLG_CYCLE_CD
        ,   CBM.BLLG_MTR_BLLG_CYCLE_CD
        ,   DCD.PRNT_DS_CONTR_DTL_PK
        ,   DCR.CCY_CD
        ,   CCY.AFT_DECL_PNT_DIGIT_NUM
        ,   CBM.BLLG_MTR_LB_CD
        ,   DCR.DS_CONTR_CATG_CD
        ,   CBM.DS_CONTR_BLLG_MTR_PK
        ,   CTD.SVC_COV_DTL_VAL_TXT
        ,   CBS.DS_CONTR_PRC_EFF_PK
        ,   DCR.PMT_TERM_CASH_DISC_CD
        ,   CLS.FM_TRX_CD
        ,   CLS.FM_TRX_RSN_CD_01
        ,   CLS.FM_TRX_RSN_CD_02
        <!-- START 2017/08/29 M.Kidokoro [QC#20079, ADD] -->
        ,   DCD.MTR_HLD_FLG
        <!-- END 2017/08/29 M.Kidokoro [QC#20079, ADD] -->
        <!-- START 2017/10/19 K.Kojima [QC#21177,ADD] -->
        <!-- START 2017/11/08 K.Kojima [QC#22141,MOD] -->
        <!-- ,   DCPEV.DS_CONTR_CTRL_STS_CD -->
        <!-- ,   DCPEV.BLLBL_FLG -->
        <!-- START 2019/07/17 T.Kanasaka [QC#51576, MOD] -->
        ,   (SELECT DCPEV.DS_CONTR_CTRL_STS_CD FROM DS_CONTR_PRC_EFF_STS_V DCPEV WHERE CBS.GLBL_CMPY_CD = DCPEV.GLBL_CMPY_CD AND CBS.DS_CONTR_PRC_EFF_PK = DCPEV.DS_CONTR_PRC_EFF_PK AND DCPEV.EZCANCELFLAG = '0') AS DS_CONTR_CTRL_STS_CD_PE
        ,   (SELECT DCPEV.BLLBL_FLG FROM DS_CONTR_PRC_EFF_STS_V DCPEV WHERE CBS.GLBL_CMPY_CD = DCPEV.GLBL_CMPY_CD AND CBS.DS_CONTR_PRC_EFF_PK = DCPEV.DS_CONTR_PRC_EFF_PK AND DCPEV.EZCANCELFLAG = '0') AS BLLBL_FLG_PE
        ,   (SELECT DCDV.DS_CONTR_CTRL_STS_CD FROM DS_CONTR_DTL_STS_V DCDV WHERE CBS.GLBL_CMPY_CD = DCDV.GLBL_CMPY_CD AND CBS.DS_CONTR_DTL_PK = DCDV.DS_CONTR_DTL_PK AND DCDV.EZCANCELFLAG = '0') AS DS_CONTR_CTRL_STS_CD_DTL
        ,   (SELECT DCDV.BLLBL_FLG FROM DS_CONTR_DTL_STS_V DCDV WHERE CBS.GLBL_CMPY_CD = DCDV.GLBL_CMPY_CD AND CBS.DS_CONTR_DTL_PK = DCDV.DS_CONTR_DTL_PK AND DCDV.EZCANCELFLAG = '0') AS BLLBL_FLG_DTL
        <!-- END   2019/07/17 T.Kanasaka [QC#51576, MOD] -->
        <!-- END 2017/11/08 K.Kojima [QC#22141,MOD] -->
        <!-- END 2017/10/19 K.Kojima [QC#21177,ADD] -->
        <!-- START 2018/05/08 K.Kitachi [QC#23604, ADD] -->
        <!-- START 2018/06/26 U.Kim [QC#26703, MOD] -->
        <!-- ,   SMM.CTRL_FLD_TXT_01 || ' ' || -->
        <!--     SMM.CTRL_FLD_TXT_02 || ' ' || -->
        <!--     SMM.CTRL_FLD_TXT_03 || ' ' || -->
        <!--     SMM.CTRL_FLD_TXT_04 || ' ' || -->
        <!--     SMM.CTRL_FLD_TXT_05 || ' ' || -->
        <!--     SMM.CTRL_FLD_TXT_06             DEF_INV_GRP_TXT -->
        ,   SMM.CTRL_FLD_TXT_01
        ,   SMM.CTRL_FLD_TXT_02
        ,   SMM.CTRL_FLD_TXT_03
        ,   SMM.CTRL_FLD_TXT_04
        ,   SMM.CTRL_FLD_TXT_05
        ,   SMM.CTRL_FLD_TXT_06
        <!-- END 2018/06/26 U.Kim [QC#26703, MOD] -->
        <!-- END 2018/05/08 K.Kitachi [QC#23604, ADD] -->
        <!-- START 2019/10/29 K.Kitachi [QC#54203, ADD] -->
        ,   SMM.SVC_MACH_MSTR_STS_CD
        ,   DCT.MAIN_UNIT_LINE_FLG
        ,   DCD.SVC_MACH_MSTR_PK   DTL_MACH_MSTR_PK
        ,   DCD.SVC_CONFIG_MSTR_PK DTL_CONFIG_MSTR_PK
        <!-- END 2019/10/29 K.Kitachi [QC#54203, ADD] -->
<!--  START 2022/09/01 L.Mandanas [QC#58350, ADD] -->
        , (
            SELECT 
                MIN(SVC_CONTR_BLLG_FROM_DT)
            FROM
                SVC_CONTR_BLLG X
            WHERE
                    X.EZCANCELFLAG = SCB.EZCANCELFLAG
                AND X.GLBL_CMPY_CD = SCB.GLBL_CMPY_CD
                AND X.DS_CONTR_PK = SCB.DS_CONTR_PK
                <!--  START 2022/11/10 L.Mandanas [QC#60790, DEL] -->
                <!-- AND X.DS_CONTR_DTL_PK = SCB.DS_CONTR_DTL_PK -->
                <!--  END 2022/11/10 L.Mandanas [QC#60790, DEL] -->
                AND X.DS_CONTR_CATG_CD = SCB.DS_CONTR_CATG_CD
                AND X.ORIG_SVC_INV_NUM = SCB.ORIG_SVC_INV_NUM
        ) AS MIN_SVC_CONTR_BLLG_FROM_DT
<!--  END 2022/09/01 L.Mandanas [QC#58350, ADD] -->
		FROM
			DS_CONTR_DTL			DCD
		,	DS_CONTR_DTL_TP			DCT
		,	SVC_MACH_MSTR			SMM
        ,   SVC_CONFIG_MSTR         SCM
		,	MDSE					SMD
		,	SVC_CONTR_BLLG			SCB
		,	DS_CONTR_DTL			PCD
		,	SVC_MACH_MSTR			PMM
        ,   SVC_CONFIG_MSTR         PCM
        ,   MDL_NM                  MDN
		,	MDSE					PMD
		,	DS_CONTR				DCR
        ,   DS_CONTR_BLLG_MTR       CBM
        ,   CCY                     CCY
        ,   MDSE                    DMI
        ,   SVC_COV_TMPL_DTL        CTD
        ,   DS_CONTR_BLLG_SCHD      CBS
        ,   DS_CONTR_CLS            CLS
        <!-- START 2017/10/19 K.Kojima [QC#21177,ADD] -->
        <!-- START 2017/11/08 K.Kojima [QC#22141,DEL] -->
        <!-- ,   DS_CONTR_PRC_EFF_STS_V  DCPEV -->
        <!-- END 2017/11/08 K.Kojima [QC#22141,DEL] -->
        <!-- END 2017/10/19 K.Kojima [QC#21177,ADD] -->
		WHERE
           <iterate property="bllgCpltStsCdList" var="bllgCpltStsCd[]" open="SCB.BLLG_CPLT_STS_CD IN (" close=")" conjunction=",">
               #bllgCpltStsCd[]#
           </iterate>
		AND	SCB.BLLG_APVL_CPLT_FLG		=	'Y'
		AND	SCB.GLBL_CMPY_CD			=	#glblCmpyCd#
		AND	SCB.DS_CONTR_PK				=	#dsContrPk#
        AND SCB.BLLG_CALC_EST_FLG       =   'N'
        AND SCB.INV_TP_CD               =   #invTpCd#
        <!-- add start 2018/07/05 QC#27114 -->
        <isNull property="svcCrRebilPk">
        AND SCB.SVC_CR_REBIL_PK         IS NULL
        </isNull>
        <isNotNull property="svcCrRebilPk">
        AND SCB.SVC_CR_REBIL_PK         =   #svcCrRebilPk#
        </isNotNull>
        <!-- add end 2018/07/05 QC#27114 -->
		AND	SCB.EZCANCELFLAG			=	'0'
		AND	DCD.DS_CONTR_DTL_PK			=	SCB.DS_CONTR_DTL_PK
		AND	DCD.DS_CONTR_PK			    =	SCB.DS_CONTR_PK
		AND	DCD.GLBL_CMPY_CD			=	SCB.GLBL_CMPY_CD
		AND	DCD.EZCANCELFLAG			=	SCB.EZCANCELFLAG
		AND	DCT.DS_CONTR_DTL_TP_CD		=	DCD.DS_CONTR_DTL_TP_CD
		AND	DCT.GLBL_CMPY_CD			=	DCD.GLBL_CMPY_CD
		AND	DCT.EZCANCELFLAG			=	DCD.EZCANCELFLAG
		AND	SMM.SVC_MACH_MSTR_PK		=	DCD.SVC_MACH_MSTR_PK
        <!-- START 2018/04/02 K.Kitachi [QC#24973, DEL] -->
		<!-- AND	SMM.SVC_CONFIG_MSTR_PK		=	DCD.SVC_CONFIG_MSTR_PK -->
        <!-- END 2018/04/02 K.Kitachi [QC#24973, DEL] -->
		AND	SMM.GLBL_CMPY_CD			=	DCD.GLBL_CMPY_CD
		AND	SMM.EZCANCELFLAG			=	DCD.EZCANCELFLAG
        AND SMM.SVC_CONFIG_MSTR_PK      =   SCM.SVC_CONFIG_MSTR_PK(+)
        AND SMM.GLBL_CMPY_CD            =   SCM.GLBL_CMPY_CD(+)
        AND SMM.EZCANCELFLAG            =   SCM.EZCANCELFLAG(+)
        AND SCM.MDL_ID                  =   MDN.T_MDL_ID(+)
        AND SCM.GLBL_CMPY_CD            =   MDN.T_GLBL_CMPY_CD(+)
        AND SCM.EZCANCELFLAG            =   MDN.EZCANCELFLAG(+)
		AND	SMD.MDSE_CD					=	SMM.MDSE_CD
		AND	SMD.GLBL_CMPY_CD			=	SMM.GLBL_CMPY_CD
		AND	SMD.EZCANCELFLAG			=	SMM.EZCANCELFLAG
		AND	DCD.PRNT_DS_CONTR_DTL_PK	=	PCD.DS_CONTR_DTL_PK(+)
		AND	DCD.GLBL_CMPY_CD			=	PCD.GLBL_CMPY_CD(+)
		AND	DCD.EZCANCELFLAG			=	PCD.EZCANCELFLAG(+)
		AND	PCD.SVC_MACH_MSTR_PK		=	PMM.SVC_MACH_MSTR_PK(+)
		AND	PCD.GLBL_CMPY_CD			=	PMM.GLBL_CMPY_CD(+)
		AND	PCD.EZCANCELFLAG			=	PMM.EZCANCELFLAG(+)
        AND PMM.SVC_CONFIG_MSTR_PK      =   PCM.SVC_CONFIG_MSTR_PK(+)
        AND PMM.GLBL_CMPY_CD            =   PCM.GLBL_CMPY_CD(+)
        AND PMM.EZCANCELFLAG            =   PCM.EZCANCELFLAG(+)
		AND	PMM.MDSE_CD					=	PMD.MDSE_CD(+)
		AND	PMM.GLBL_CMPY_CD			=	PMD.GLBL_CMPY_CD(+)
		AND	PMM.EZCANCELFLAG			=	PMD.EZCANCELFLAG(+)
		AND	DCR.DS_CONTR_PK				=	DCD.DS_CONTR_PK
		AND	DCR.GLBL_CMPY_CD			=	DCD.GLBL_CMPY_CD
		AND	DCR.EZCANCELFLAG			=	DCD.EZCANCELFLAG
		AND	DCR.DS_CONTR_CATG_CD		=	#dsContrCatgCd#
        AND SCB.DS_CONTR_BLLG_MTR_PK    =   CBM.DS_CONTR_BLLG_MTR_PK(+)
        AND SCB.GLBL_CMPY_CD            =   CBM.GLBL_CMPY_CD(+)
        AND SCB.EZCANCELFLAG            =   CBM.EZCANCELFLAG(+)
        AND DCR.GLBL_CMPY_CD            =   CCY.GLBL_CMPY_CD
        AND DCR.CCY_CD                  =   CCY.CCY_CD
        AND CCY.EZCANCELFLAG            =   '0'
        AND DCD.GLBL_CMPY_CD            =   DMI.GLBL_CMPY_CD(+)
        AND DCD.SVC_PGM_MDSE_CD         =   DMI.MDSE_CD(+)
        AND DCD.EZCANCELFLAG            =   DMI.EZCANCELFLAG(+)
        AND DMI.GLBL_CMPY_CD            =   CTD.GLBL_CMPY_CD(+)
        AND DMI.SVC_COV_TMPL_TP_CD      =   CTD.SVC_COV_TMPL_TP_CD(+)
        AND DMI.EZCANCELFLAG            =   CTD.EZCANCELFLAG(+)
        AND CTD.SVC_COV_FEAT_CD(+)      =   #svcCovFeatCd#
        AND CTD.EFF_FROM_DT(+)      &lt;=   #slsDt#
        AND NVL(CTD.EFF_THRU_DT(+), #defEffThruDt#) &gt;= #slsDt#
        AND SCB.GLBL_CMPY_CD            =   CBS.GLBL_CMPY_CD(+)
        AND SCB.EZCANCELFLAG            =   CBS.EZCANCELFLAG(+)
        AND SCB.DS_CONTR_BLLG_SCHD_PK   =   CBS.DS_CONTR_BLLG_SCHD_PK(+)
        AND DCR.GLBL_CMPY_CD            =   CLS.GLBL_CMPY_CD(+)
        AND DCR.DS_CONTR_CLS_CD         =   CLS.DS_CONTR_CLS_CD(+)
        AND CLS.EZCANCELFLAG(+)         =   '0'
        <!-- START 2017/10/19 K.Kojima [QC#21177,ADD] -->
        <!-- START 2017/11/08 K.Kojima [QC#22141,DEL] -->
        <!-- AND CBS.GLBL_CMPY_CD            =   DCPEV.GLBL_CMPY_CD(+) -->
        <!-- AND CBS.DS_CONTR_PRC_EFF_PK     =   DCPEV.DS_CONTR_PRC_EFF_PK(+) -->
        <!-- AND DCPEV.EZCANCELFLAG(+)       =   '0' -->
        <!-- END 2017/11/08 K.Kojima [QC#22141,DEL] -->
        <!-- END 2017/10/19 K.Kojima [QC#21177,ADD] -->
        <!-- START 2017/11/17 K.Kojima [QC#21918,MOD] -->
        AND SMM.FIN_BR_CD IS NOT NULL
        <!-- END 2017/11/17 K.Kojima [QC#21918,MOD] -->
	)
	SELECT
        <!-- START 2019/07/17 T.Kanasaka [QC#51576, MOD] -->
         A.*
        ,CASE WHEN A.BLLBL_FLG_PE = 'N' THEN A.DS_CONTR_CTRL_STS_CD_PE
              WHEN A.BLLBL_FLG_DTL = 'N' THEN A.DS_CONTR_CTRL_STS_CD_DTL
              ELSE A.DS_CONTR_CTRL_STS_CD_PE
         END AS DS_CONTR_CTRL_STS_CD
        ,CASE WHEN A.BLLBL_FLG_PE = 'N' OR A.BLLBL_FLG_DTL = 'N' THEN 'N' ELSE 'Y' END AS BLLBL_FLG
        <!-- END   2019/07/17 T.Kanasaka [QC#51576, ADD] -->
	FROM
		A
	WHERE
    <!-- QC2536 start -->
     <isEqual property="invSeptBaseUsgFlg" compareValue="N">
    <!-- QC2536 end -->
    <!-- START 2021/03/08 R.Cabral [QC#58428, MOD] -->
    <!-- 
        A.BASE_BLLG_FLG                 =   'Y'
    OR  A.MTR_BLLG_FLG                  =   'Y'
    -->
        (A.BASE_BLLG_FLG                 =   'Y'
    OR  A.MTR_BLLG_FLG                  =   'Y')
    <!-- END 2021/03/08 R.Cabral [QC#58428, MOD] -->
    <!-- QC2536 start -->
     </isEqual>
     <isEqual property="invSeptBaseUsgFlg" compareValue="Y">
         <isEqual property="baseBllgFlg" compareValue="Y">
        A.BASE_BLLG_FLG                 =   'Y'
    AND A.MTR_BLLG_FLG                  =   'N'
         </isEqual>
         <isEqual property="mtrBllgFlg" compareValue="Y">
        A.BASE_BLLG_FLG                 =   'N'
    AND A.MTR_BLLG_FLG                  =   'Y'
         </isEqual>
     </isEqual>
    <!-- QC2536 end -->
	ORDER BY
        NVL(NVL(A.OVRD_NEXT_BLLG_DT, A.BASE_BLLG_NEXT_BLLG_DT), A.MTR_BLLG_NEXT_BLLG_DT)     ASC
<!-- START 2017/10/16 K.Kojima [QC#21785,ADD] -->
    ,   A.SVC_CONTR_BLLG_FROM_DT        ASC
<!-- END 2017/10/16 K.Kojima [QC#21785,ADD] -->
    ,   A.SVC_CONFIG_MSTR_PK            ASC
    ,   A.BILL_TO_CUST_CD               ASC
	,	A.DS_CONTR_DTL_TP_SORT_NUM		ASC
	,	A.SER_NUM						ASC
	,   A.BLLG_MTR_LB_CD                NULLS FIRST
	</statement>
	<statement id="getFleetDsContrDtlInfo" parameterClass="Map" resultClass="Map">
	WITH
	A AS (
		SELECT
			DCD.GLBL_CMPY_CD
		,	DCD.DS_CONTR_DTL_PK
		,	DCD.DS_CONTR_PK
		,	DCD.DS_CONTR_DTL_TP_CD
		,	DCD.DS_ORD_TP_CD
		,	DCD.DS_ORD_RSN_CD
		,	CASE
			WHEN DCT.FLEET_LINE_FLG = 'Y'
			THEN
				NULL
			WHEN DCT.MAIN_UNIT_LINE_FLG = 'Y'
			THEN
				DCD.SVC_MACH_MSTR_PK
			ELSE
				PCD.SVC_MACH_MSTR_PK
			END	AS	SVC_MACH_MSTR_PK
		,	DCT.DS_CONTR_DTL_TP_NM
		,	DCT.DS_CONTR_DTL_TP_SORT_NUM
		,	CASE
			WHEN DCT.FLEET_LINE_FLG = 'Y'
			THEN
				''
			WHEN DCT.MAIN_UNIT_LINE_FLG = 'Y' OR DCD.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCd#
			THEN
				SMM.MDSE_CD
			ELSE
				PMM.MDSE_CD
			END	AS	MDSE_CD
		,	CASE
			WHEN DCT.FLEET_LINE_FLG = 'Y'
			THEN
				''
			WHEN DCT.MAIN_UNIT_LINE_FLG = 'Y' OR DCD.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCd#
			THEN
				SMD.MDSE_NM
			ELSE
				PMD.MDSE_NM
			END	AS	MDSE_NM
		,	CASE
			WHEN DCT.FLEET_LINE_FLG = 'Y'
			THEN
				''
			WHEN DCT.MAIN_UNIT_LINE_FLG = 'Y'
			THEN
				SMM.SHIP_TO_CUST_CD
			ELSE
				PMM.SHIP_TO_CUST_CD
			END	AS	SHIP_TO_CUST_CD
		,	SCB.SVC_CONTR_BLLG_PK
		,	SCB.PRNT_SVC_CONTR_BLLG_PK
		,	CASE
			WHEN  
			(
					NVL(SCB.OVRD_NEXT_BLLG_DT, SCB.BASE_BLLG_NEXT_BLLG_DT)	&lt;=	#slsDt#
				AND	EXISTS (
					SELECT
						*
					FROM
						SVC_CONTR_BASE_BLLG		SBB
					WHERE
						SBB.SVC_CONTR_BLLG_PK	=	SCB.SVC_CONTR_BLLG_PK
					AND	SBB.DS_CONTR_DTL_PK		=	SCB.DS_CONTR_DTL_PK
					AND	SBB.GLBL_CMPY_CD		=	SCB.GLBL_CMPY_CD
					AND	SBB.EZCANCELFLAG		=	SCB.EZCANCELFLAG
				)
			)
			THEN	'Y'
			ELSE	'N'
			END		AS	BASE_BLLG_FLG
		,	CASE WHEN
			(
					NVL(SCB.OVRD_NEXT_BLLG_DT, SCB.MTR_BLLG_NEXT_BLLG_DT)	&lt;=	#slsDt#
				AND	EXISTS (
					SELECT
						*
					FROM
						SVC_CONTR_MTR_BLLG		SMB
					WHERE
						SMB.SVC_CONTR_BLLG_PK	=	SCB.SVC_CONTR_BLLG_PK
					AND	SMB.DS_CONTR_DTL_PK		=	SCB.DS_CONTR_DTL_PK
					AND	SMB.GLBL_CMPY_CD		=	SCB.GLBL_CMPY_CD
					AND	SMB.EZCANCELFLAG		=	SCB.EZCANCELFLAG
				)
			)
			THEN	'Y'
			ELSE	'N'
			END		AS	MTR_BLLG_FLG
		,	CASE
			WHEN DCT.FLEET_LINE_FLG = 'Y'
			THEN
				''
			WHEN DCT.MAIN_UNIT_LINE_FLG = 'Y'
			THEN
				SMM.SER_NUM
			ELSE
				PMM.SER_NUM
			END	AS	SER_NUM
		,	SCB.BASE_BLLG_NEXT_BLLG_DT
		,	SCB.MTR_BLLG_NEXT_BLLG_DT
		,	SCB.OVRD_NEXT_BLLG_DT
        ,   SCB.SVC_CR_REBIL_PK
        ,   SCB.SVC_CR_REBIL_DTL_PK
		,	DCR.SELL_TO_CUST_CD

<!-- QC#18169
        ,   CASE
            WHEN SCB.BASE_CHRG_FLG = 'Y'
            THEN
                DCD.BASE_BILL_TO_CUST_CD
            ELSE
                CBM.BLLG_MTR_BILL_TO_CUST_CD
            END AS BILL_TO_CUST_CD
 -->
        ,   SCB.BILL_TO_CUST_CD
        <!-- START 2018/07/25 K.Kitachi [QC#17068, MOD] -->
        <!-- ,   DCD.CTAC_PSN_PK -->
        ,   CASE
                WHEN SCB.BASE_CHRG_FLG        = 'Y'
                 AND DCT.FLEET_LINE_FLG       = 'Y'
                 AND DCD.CTAC_PSN_PK          IS NOT NULL
                THEN DCD.CTAC_PSN_PK

                WHEN SCB.BASE_CHRG_FLG        = 'Y'
                 AND DCT.FLEET_LINE_FLG       = 'Y'
                 AND DCR.ALT_PAYER_CUST_CD    = DCD.BASE_BILL_TO_CUST_CD
                 AND DCR.CTAC_PSN_PK          IS NOT NULL
                THEN DCR.CTAC_PSN_PK

                WHEN SCB.USG_CHRG_FLG         = 'Y'
                 AND DCT.FLEET_LINE_FLG       = 'Y'
                 AND CBM.CTAC_PSN_PK          IS NOT NULL
                THEN CBM.CTAC_PSN_PK

                WHEN SCB.USG_CHRG_FLG         = 'Y'
                 AND DCT.FLEET_LINE_FLG       = 'Y'
                 AND DCD.BASE_BILL_TO_CUST_CD = CBM.BLLG_MTR_BILL_TO_CUST_CD
                 AND DCD.CTAC_PSN_PK          IS NOT NULL
                THEN DCD.CTAC_PSN_PK

                WHEN SCB.USG_CHRG_FLG         = 'Y'
                 AND DCT.FLEET_LINE_FLG       = 'Y'
                 AND DCR.ALT_PAYER_CUST_CD    = CBM.BLLG_MTR_BILL_TO_CUST_CD
                 AND DCR.CTAC_PSN_PK          IS NOT NULL
                THEN DCR.CTAC_PSN_PK

                WHEN SCB.USG_CHRG_FLG         = 'Y'
                 AND DCT.FLEET_LINE_FLG       = 'N'
                 AND PBM.CTAC_PSN_PK          IS NOT NULL
                THEN PBM.CTAC_PSN_PK

                WHEN SCB.USG_CHRG_FLG         = 'Y'
                 AND DCT.FLEET_LINE_FLG       = 'N'
                 AND PCD.BASE_BILL_TO_CUST_CD = PBM.BLLG_MTR_BILL_TO_CUST_CD
                 AND PCD.CTAC_PSN_PK          IS NOT NULL
                THEN PCD.CTAC_PSN_PK

                WHEN SCB.USG_CHRG_FLG         = 'Y'
                 AND DCT.FLEET_LINE_FLG       = 'N'
                 AND DCR.ALT_PAYER_CUST_CD    = PBM.BLLG_MTR_BILL_TO_CUST_CD
                 AND DCR.CTAC_PSN_PK          IS NOT NULL
                THEN DCR.CTAC_PSN_PK

                ELSE NULL
            END AS CTAC_PSN_PK
        <!-- END 2018/07/25 K.Kitachi [QC#17068, MOD] -->
        ,   SCB.ORIG_SVC_INV_NUM
        ,   CASE 
            WHEN DCT.MAIN_UNIT_LINE_FLG = 'Y' OR DCD.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCd#
            THEN
                SMM.CUR_LOC_ACCT_NUM
            ELSE
                PMM.CUR_LOC_ACCT_NUM
            END AS  CUR_LOC_ACCT_NUM
        ,   CASE 
            WHEN DCT.MAIN_UNIT_LINE_FLG = 'Y' OR DCD.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCd#
            THEN
                SMM.CUR_LOC_NUM
            ELSE
                PMM.CUR_LOC_NUM
            END AS  CUR_LOC_NUM
        ,   DCR.INV_SEPT_BASE_USG_FLG
        ,   SCB.BASE_CHRG_FLG
        ,   SCB.USG_CHRG_FLG
        ,   SCB.SVC_CONTR_BLLG_FROM_DT
        ,   SCB.SVC_CONTR_BLLG_THRU_DT
        ,   CASE 
            WHEN DCT.MAIN_UNIT_LINE_FLG = 'Y' OR DCD.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCd#
            THEN
                SCM.MDL_ID
            ELSE
                PCM.MDL_ID
            END AS  MDL_ID
        ,   SCB.DS_ACCT_NUM
        ,   DCR.TOC_CD
        ,   NVL(DCD.SVC_PGM_MDSE_CD, PCD.SVC_PGM_MDSE_CD) SVC_PGM_MDSE_CD
        ,   CBM.INTG_MDSE_CD
        ,   DCD.BASE_BLLG_CYCLE_CD
        ,   NVL(CBM.BLLG_MTR_BLLG_CYCLE_CD, PBM.BLLG_MTR_BLLG_CYCLE_CD) BLLG_MTR_BLLG_CYCLE_CD
        ,   DCD.PRNT_DS_CONTR_DTL_PK
        ,   DCR.CCY_CD
        ,   CCY.AFT_DECL_PNT_DIGIT_NUM
        ,   CBM.BLLG_MTR_LB_CD
        ,   MDN.T_MDL_NM            MDL_NM
        ,   DCR.DS_CONTR_CATG_CD
        ,   CBM.DS_CONTR_BLLG_MTR_PK
        ,   NVL(CTD.SVC_COV_DTL_VAL_TXT, PTD.SVC_COV_DTL_VAL_TXT) SVC_COV_DTL_VAL_TXT
        ,   DCD.SHIP_TO_CUST_CD     AS FLEET_SHIP_TO_CUST_CD
        ,   CBS.DS_CONTR_PRC_EFF_PK
        ,   DCR.PMT_TERM_CASH_DISC_CD
        ,   CLS.FM_TRX_CD
        ,   CLS.FM_TRX_RSN_CD_01
        ,   CLS.FM_TRX_RSN_CD_02
        <!-- START 2017/08/29 M.Kidokoro [QC#20079, ADD] -->
        ,   DCD.MTR_HLD_FLG
        <!-- END 2017/08/29 M.Kidokoro [QC#20079, ADD] -->
        <!-- START 2017/10/19 K.Kojima [QC#21177,ADD] -->
        <!-- START 2017/11/08 K.Kojima [QC#22141,MOD] -->
        <!-- ,   DCPEV.DS_CONTR_CTRL_STS_CD -->
        <!-- ,   DCPEV.BLLBL_FLG -->
        ,   (SELECT DCPEV.DS_CONTR_CTRL_STS_CD FROM DS_CONTR_PRC_EFF_STS_V DCPEV WHERE CBS.GLBL_CMPY_CD = DCPEV.GLBL_CMPY_CD AND CBS.DS_CONTR_PRC_EFF_PK = DCPEV.DS_CONTR_PRC_EFF_PK AND DCPEV.EZCANCELFLAG = '0') AS DS_CONTR_CTRL_STS_CD
        ,   (SELECT DCPEV.BLLBL_FLG FROM DS_CONTR_PRC_EFF_STS_V DCPEV WHERE CBS.GLBL_CMPY_CD = DCPEV.GLBL_CMPY_CD AND CBS.DS_CONTR_PRC_EFF_PK = DCPEV.DS_CONTR_PRC_EFF_PK AND DCPEV.EZCANCELFLAG = '0') AS BLLBL_FLG
        <!-- END 2017/11/08 K.Kojima [QC#22141,MOD] -->
        <!-- END 2017/10/19 K.Kojima [QC#21177,ADD] -->
        <!-- START 2019/10/29 K.Kitachi [QC#54203, ADD] -->
        ,   SMM.SVC_MACH_MSTR_STS_CD
        ,   DCT.MAIN_UNIT_LINE_FLG
        ,   DCD.SVC_MACH_MSTR_PK   DTL_MACH_MSTR_PK
        ,   DCD.SVC_CONFIG_MSTR_PK DTL_CONFIG_MSTR_PK
        <!-- END 2019/10/29 K.Kitachi [QC#54203, ADD] -->
		FROM
			DS_CONTR_DTL			DCD
		,	DS_CONTR_DTL_TP			DCT
		,	SVC_MACH_MSTR			SMM
        ,   SVC_CONFIG_MSTR         SCM
		,	MDSE					SMD
		,	SVC_CONTR_BLLG			SCB
		,	DS_CONTR_DTL			PCD
		,	SVC_MACH_MSTR			PMM
		,   SVC_CONFIG_MSTR         PCM
		,	MDSE					PMD
		,	DS_CONTR				DCR
		,   DS_CONTR_BLLG_MTR       CBM
		,   CCY                     CCY
		,   MDL_NM                  MDN
        ,   SVC_CONTR_BLLG          PCB
        ,   DS_CONTR_BLLG_MTR       PBM
        ,   MDSE                    DMI
        ,   SVC_COV_TMPL_DTL        CTD
        ,   MDSE                    PMI
        ,   SVC_COV_TMPL_DTL        PTD
        ,   DS_CONTR_BLLG_SCHD      CBS
        ,   DS_CONTR_CLS            CLS
        <!-- START 2017/10/19 K.Kojima [QC#21177,ADD] -->
        <!-- START 2017/11/08 K.Kojima [QC#22141,DEL] -->
        <!-- ,   DS_CONTR_PRC_EFF_STS_V  DCPEV -->
        <!-- END 2017/11/08 K.Kojima [QC#22141,DEL] -->
        <!-- END 2017/10/19 K.Kojima [QC#21177,ADD] -->
		WHERE
           <iterate property="bllgCpltStsCdList" var="bllgCpltStsCd[]" open="SCB.BLLG_CPLT_STS_CD IN (" close=")" conjunction=",">
               #bllgCpltStsCd[]#
           </iterate>
		AND	SCB.BLLG_APVL_CPLT_FLG		=	'Y'
		AND	SCB.DS_CONTR_CATG_CD		=	#dsContrCatgCd#
		AND	SCB.GLBL_CMPY_CD			=	#glblCmpyCd#
		AND	SCB.DS_CONTR_PK				=	#dsContrPk#
		AND SCB.BLLG_CALC_EST_FLG       =   'N'
        AND SCB.INV_TP_CD               =   #invTpCd#
        <!-- START 2017/09/28 M.Kidokoro [QC#21286, ADD] -->
        <isNull property="svcCrRebilPk">
        AND SCB.SVC_CR_REBIL_PK         IS NULL
        </isNull>
        <isNotNull property="svcCrRebilPk">
        AND SCB.SVC_CR_REBIL_PK         =   #svcCrRebilPk#
        </isNotNull>
        <isNull property="svcCrRebilDtlPk">
        AND SCB.SVC_CR_REBIL_DTL_PK     IS NULL
        </isNull>
        <isNotNull property="svcCrRebilDtlPk">
        AND SCB.SVC_CR_REBIL_DTL_PK     =   #svcCrRebilDtlPk#
        </isNotNull>
        <!-- END 2017/09/28 M.Kidokoro [QC#21286, ADD] -->
        <isNotNull property="billToCustCd">
        AND  SCB.BILL_TO_CUST_CD        =   #billToCustCd#
        </isNotNull>
        <isNotNull property="nextBllgDt">
        AND  NVL(NVL(SCB.OVRD_NEXT_BLLG_DT, SCB.BASE_BLLG_NEXT_BLLG_DT), SCB.MTR_BLLG_NEXT_BLLG_DT) = #nextBllgDt#
        </isNotNull>
		AND	SCB.EZCANCELFLAG			=	'0'
		AND	DCD.DS_CONTR_DTL_PK			=	SCB.DS_CONTR_DTL_PK
		AND	DCD.DS_CONTR_PK				=	SCB.DS_CONTR_PK
		AND	DCD.GLBL_CMPY_CD			=	SCB.GLBL_CMPY_CD
		AND	DCD.EZCANCELFLAG			=	SCB.EZCANCELFLAG
		AND	DCT.DS_CONTR_DTL_TP_CD		=	DCD.DS_CONTR_DTL_TP_CD
		AND	DCT.GLBL_CMPY_CD			=	DCD.GLBL_CMPY_CD
		AND	DCT.EZCANCELFLAG			=	DCD.EZCANCELFLAG
		AND	DCD.SVC_MACH_MSTR_PK		=	SMM.SVC_MACH_MSTR_PK(+)
        <!-- START 2018/04/02 K.Kitachi [QC#24973, DEL] -->
		<!-- AND	DCD.SVC_CONFIG_MSTR_PK		=	SMM.SVC_CONFIG_MSTR_PK(+) -->
        <!-- END 2018/04/02 K.Kitachi [QC#24973, DEL] -->
		AND	DCD.GLBL_CMPY_CD			=	SMM.GLBL_CMPY_CD(+)
		AND	DCD.EZCANCELFLAG			=	SMM.EZCANCELFLAG(+)
        AND SMM.SVC_CONFIG_MSTR_PK      =   SCM.SVC_CONFIG_MSTR_PK(+)
        AND SMM.GLBL_CMPY_CD            =   SCM.GLBL_CMPY_CD(+)
        AND SMM.EZCANCELFLAG            =   SCM.EZCANCELFLAG(+)
        AND SCM.MDL_ID                  =   MDN.T_MDL_ID(+)
        AND SCM.GLBL_CMPY_CD            =   MDN.T_GLBL_CMPY_CD(+)
        AND SCM.EZCANCELFLAG            =   MDN.EZCANCELFLAG(+)
		AND	SMM.MDSE_CD					=	SMD.MDSE_CD(+)
		AND	SMM.GLBL_CMPY_CD			=	SMD.GLBL_CMPY_CD(+)
		AND	SMM.EZCANCELFLAG			=	SMD.EZCANCELFLAG(+)
		AND	DCD.PRNT_DS_CONTR_DTL_PK	=	PCD.DS_CONTR_DTL_PK(+)
		AND	DCD.GLBL_CMPY_CD			=	PCD.GLBL_CMPY_CD(+)
		AND	DCD.EZCANCELFLAG			=	PCD.EZCANCELFLAG(+)
		AND	PCD.SVC_MACH_MSTR_PK		=	PMM.SVC_MACH_MSTR_PK(+)
		AND	PCD.GLBL_CMPY_CD			=	PMM.GLBL_CMPY_CD(+)
		AND	PCD.EZCANCELFLAG			=	PMM.EZCANCELFLAG(+)
        AND PMM.SVC_CONFIG_MSTR_PK      =   PCM.SVC_CONFIG_MSTR_PK(+)
        AND PMM.GLBL_CMPY_CD            =   PCM.GLBL_CMPY_CD(+)
        AND PMM.EZCANCELFLAG            =   PCM.EZCANCELFLAG(+)
		AND	PMM.MDSE_CD					=	PMD.MDSE_CD(+)
		AND	PMM.GLBL_CMPY_CD			=	PMD.GLBL_CMPY_CD(+)
		AND	PMM.EZCANCELFLAG			=	PMD.EZCANCELFLAG(+)
		AND	DCR.DS_CONTR_PK				=	DCD.DS_CONTR_PK
		AND	DCR.GLBL_CMPY_CD			=	DCD.GLBL_CMPY_CD
		AND	DCR.EZCANCELFLAG			=	DCD.EZCANCELFLAG
        AND SCB.DS_CONTR_BLLG_MTR_PK    =   CBM.DS_CONTR_BLLG_MTR_PK(+)
        AND SCB.GLBL_CMPY_CD            =   CBM.GLBL_CMPY_CD(+)
        AND SCB.EZCANCELFLAG            =   CBM.EZCANCELFLAG(+)
        AND DCR.GLBL_CMPY_CD            =   CCY.GLBL_CMPY_CD
        AND DCR.CCY_CD                  =   CCY.CCY_CD
        AND CCY.EZCANCELFLAG            =   '0'
        AND SCB.PRNT_SVC_CONTR_BLLG_PK  =   PCB.SVC_CONTR_BLLG_PK(+)
        AND SCB.GLBL_CMPY_CD            =   PCB.GLBL_CMPY_CD(+)
        AND SCB.EZCANCELFLAG            =   PCB.EZCANCELFLAG(+)
        AND PCB.DS_CONTR_BLLG_MTR_PK    =   PBM.DS_CONTR_BLLG_MTR_PK(+)
        AND PCB.GLBL_CMPY_CD            =   PBM.GLBL_CMPY_CD(+)
        AND PCB.EZCANCELFLAG            =   PBM.EZCANCELFLAG(+)
        AND DCD.GLBL_CMPY_CD            =   DMI.GLBL_CMPY_CD(+)
        AND DCD.SVC_PGM_MDSE_CD         =   DMI.MDSE_CD(+)
        AND DCD.EZCANCELFLAG            =   DMI.EZCANCELFLAG(+)
        AND DMI.GLBL_CMPY_CD            =   CTD.GLBL_CMPY_CD(+)
        AND DMI.SVC_COV_TMPL_TP_CD      =   CTD.SVC_COV_TMPL_TP_CD(+)
        AND DMI.EZCANCELFLAG            =   CTD.EZCANCELFLAG(+)
        AND CTD.SVC_COV_FEAT_CD(+)      =   #svcCovFeatCd#
        AND CTD.EFF_FROM_DT(+)      &lt;=   #slsDt#
        AND NVL(CTD.EFF_THRU_DT(+), #defEffThruDt#) &gt;= #slsDt#
        AND PCD.GLBL_CMPY_CD            =   PMI.GLBL_CMPY_CD(+)
        AND PCD.SVC_PGM_MDSE_CD         =   PMI.MDSE_CD(+)
        AND PCD.EZCANCELFLAG            =   PMI.EZCANCELFLAG(+)
        AND PMI.GLBL_CMPY_CD            =   PTD.GLBL_CMPY_CD(+)
        AND PMI.SVC_COV_TMPL_TP_CD      =   PTD.SVC_COV_TMPL_TP_CD(+)
        AND PMI.EZCANCELFLAG            =   PTD.EZCANCELFLAG(+)
        AND PTD.SVC_COV_FEAT_CD(+)      =   #svcCovFeatCd#
        AND PTD.EFF_FROM_DT(+)      &lt;=   #slsDt#
        AND NVL(PTD.EFF_THRU_DT(+), #defEffThruDt#) &gt;= #slsDt#
        AND SCB.GLBL_CMPY_CD            =   CBS.GLBL_CMPY_CD(+)
        AND SCB.EZCANCELFLAG            =   CBS.EZCANCELFLAG(+)
        AND SCB.DS_CONTR_BLLG_SCHD_PK   =   CBS.DS_CONTR_BLLG_SCHD_PK(+)
        AND DCR.GLBL_CMPY_CD            =   CLS.GLBL_CMPY_CD(+)
        AND DCR.DS_CONTR_CLS_CD         =   CLS.DS_CONTR_CLS_CD(+)
        AND CLS.EZCANCELFLAG(+)         =   '0'
        <!-- START 2017/10/19 K.Kojima [QC#21177,ADD] -->
        <!-- START 2017/11/08 K.Kojima [QC#22141,DEL] -->
        <!-- AND CBS.GLBL_CMPY_CD            =   DCPEV.GLBL_CMPY_CD(+) -->
        <!-- AND CBS.DS_CONTR_PRC_EFF_PK     =   DCPEV.DS_CONTR_PRC_EFF_PK(+) -->
        <!-- AND DCPEV.EZCANCELFLAG(+)       =   '0' -->
        <!-- END 2017/11/08 K.Kojima [QC#22141,DEL] -->
        <!-- END 2017/10/19 K.Kojima [QC#21177,ADD] -->
	)
	SELECT
		*
	FROM
		A
	WHERE
	<!-- QC2536 start -->
	 <isEqual property="invSeptBaseUsgFlg" compareValue="N">
	<!-- QC2536 end -->
		A.BASE_BLLG_FLG					=	'Y'
	OR	A.MTR_BLLG_FLG					=	'Y'
	<!-- QC2536 start -->
	 </isEqual>
	 <isEqual property="invSeptBaseUsgFlg" compareValue="Y">
		 <isEqual property="baseBllgFlg" compareValue="Y">
		A.BASE_BLLG_FLG					=	'Y'
	AND	A.MTR_BLLG_FLG					=	'N'
		 </isEqual>
		 <isEqual property="mtrBllgFlg" compareValue="Y">
		A.BASE_BLLG_FLG					=	'N'
	AND	A.MTR_BLLG_FLG					=	'Y'
		 </isEqual>
	 </isEqual>
	<!-- QC2536 end -->
    <!-- START 2018/07/25 K.Kitachi [QC#17068, ADD] -->
    <isNull property="ctacPsnPk">
    AND A.CTAC_PSN_PK                   IS NULL
    </isNull>
    <isNotNull property="ctacPsnPk">
    AND A.CTAC_PSN_PK                   =   #ctacPsnPk#
    </isNotNull>
    <!-- END 2018/07/25 K.Kitachi [QC#17068, ADD] -->
	ORDER BY
        NVL(NVL(A.OVRD_NEXT_BLLG_DT, A.BASE_BLLG_NEXT_BLLG_DT), A.MTR_BLLG_NEXT_BLLG_DT)     ASC
    ,   A.BILL_TO_CUST_CD               ASC
    ,   A.BLLG_MTR_LB_CD                ASC NULLS FIRST
    ,   A.DS_CONTR_DTL_TP_SORT_NUM      ASC
    ,   A.SER_NUM                       ASC NULLS FIRST
	</statement>

    <statement id="getAggDsContrDtlInfo" parameterClass="Map" resultClass="Map">
    WITH
    A AS (
        SELECT
            DCD.GLBL_CMPY_CD
        ,   DCD.DS_CONTR_DTL_PK
        ,   DCD.DS_CONTR_PK
        ,   DCD.DS_CONTR_DTL_TP_CD
        ,   DCD.DS_ORD_TP_CD
        ,   DCD.DS_ORD_RSN_CD
        ,   CASE 
            WHEN DCT.MAIN_UNIT_LINE_FLG = 'Y'
            THEN
                DCD.SVC_MACH_MSTR_PK
            ELSE
                PCD.SVC_MACH_MSTR_PK
            END AS  SVC_MACH_MSTR_PK
        ,   CASE 
            WHEN DCT.MAIN_UNIT_LINE_FLG = 'Y'
            THEN
                DCD.SVC_CONFIG_MSTR_PK
            ELSE
                PCD.SVC_CONFIG_MSTR_PK
            END AS  SVC_CONFIG_MSTR_PK
        ,   DCT.DS_CONTR_DTL_TP_NM
        ,   DCT.DS_CONTR_DTL_TP_SORT_NUM
        ,   CASE 
            WHEN DCT.MAIN_UNIT_LINE_FLG = 'Y' OR DCD.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCd#
            THEN
                SMM.MDSE_CD
            ELSE
                PMM.MDSE_CD
            END AS  MDSE_CD
        ,   CASE 
            WHEN DCT.MAIN_UNIT_LINE_FLG = 'Y' OR DCD.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCd#
            THEN
                SMD.MDSE_NM
            ELSE
                PMD.MDSE_NM
            END AS  MDSE_NM
        ,   CASE 
            WHEN DCT.MAIN_UNIT_LINE_FLG = 'Y'
            THEN
                SMM.SHIP_TO_CUST_CD
            ELSE
                PMM.SHIP_TO_CUST_CD
            END AS  SHIP_TO_CUST_CD
        ,   SCB.SVC_CONTR_BLLG_PK
        ,   SCB.PRNT_SVC_CONTR_BLLG_PK
        ,   CASE
            WHEN
            (
                    NVL(SCB.OVRD_NEXT_BLLG_DT, SCB.BASE_BLLG_NEXT_BLLG_DT)  &lt;=   #slsDt#
                AND EXISTS (
                    SELECT
                        *
                    FROM
                        SVC_CONTR_BASE_BLLG     SBB
                    WHERE
                        SBB.SVC_CONTR_BLLG_PK   =   SCB.SVC_CONTR_BLLG_PK
                    AND SBB.DS_CONTR_DTL_PK     =   SCB.DS_CONTR_DTL_PK
                    AND SBB.GLBL_CMPY_CD        =   SCB.GLBL_CMPY_CD
                    AND SBB.EZCANCELFLAG        =   SCB.EZCANCELFLAG
                )
            )
            THEN    'Y'
            ELSE    'N'
            END     AS  BASE_BLLG_FLG
        ,   CASE WHEN
            (
                    NVL(SCB.OVRD_NEXT_BLLG_DT, SCB.MTR_BLLG_NEXT_BLLG_DT)   &lt;=   #slsDt#
                AND EXISTS (
                    SELECT
                        *
                    FROM
                        SVC_CONTR_MTR_BLLG      SMB
                    WHERE
                        SMB.SVC_CONTR_BLLG_PK   =   SCB.SVC_CONTR_BLLG_PK
                    AND SMB.DS_CONTR_DTL_PK     =   SCB.DS_CONTR_DTL_PK
                    AND SMB.GLBL_CMPY_CD        =   SCB.GLBL_CMPY_CD
                    AND SMB.EZCANCELFLAG        =   SCB.EZCANCELFLAG
                )
            )
            THEN    'Y'
            ELSE    'N'
            END     AS  MTR_BLLG_FLG
        ,   SCB.BASE_BLLG_NEXT_BLLG_DT
        ,   SCB.MTR_BLLG_NEXT_BLLG_DT
		,	SCB.OVRD_NEXT_BLLG_DT
        ,   SCB.SVC_CR_REBIL_PK
        ,   SCB.SVC_CR_REBIL_DTL_PK

        ,   CASE
            WHEN SCB.BASE_CHRG_FLG = 'Y'
            THEN
                DCD.BASE_BILL_TO_CUST_CD
            ELSE
                CBM.BLLG_MTR_BILL_TO_CUST_CD
            END AS BILL_TO_CUST_CD
        <!-- START 2018/07/25 K.Kitachi [QC#17068, MOD] -->
        <!-- ,   DCD.CTAC_PSN_PK -->
        ,   CASE
                WHEN SCB.BASE_CHRG_FLG        = 'Y'
                 AND DCD.CTAC_PSN_PK          IS NOT NULL
                THEN DCD.CTAC_PSN_PK

                WHEN SCB.BASE_CHRG_FLG        = 'Y'
                 AND DCR.ALT_PAYER_CUST_CD    = DCD.BASE_BILL_TO_CUST_CD
                 AND DCR.CTAC_PSN_PK          IS NOT NULL
                THEN DCR.CTAC_PSN_PK

                WHEN SCB.USG_CHRG_FLG         = 'Y'
                 AND CBM.CTAC_PSN_PK          IS NOT NULL
                THEN CBM.CTAC_PSN_PK

                WHEN SCB.USG_CHRG_FLG         = 'Y'
                 AND DCD.BASE_BILL_TO_CUST_CD = CBM.BLLG_MTR_BILL_TO_CUST_CD
                 AND DCD.CTAC_PSN_PK          IS NOT NULL
                THEN DCD.CTAC_PSN_PK

                WHEN SCB.USG_CHRG_FLG         = 'Y'
                 AND DCR.ALT_PAYER_CUST_CD    = CBM.BLLG_MTR_BILL_TO_CUST_CD
                 AND DCR.CTAC_PSN_PK          IS NOT NULL
                THEN DCR.CTAC_PSN_PK

                ELSE NULL
            END AS CTAC_PSN_PK
        <!-- END 2018/07/25 K.Kitachi [QC#17068, MOD] -->
        ,   SCB.ORIG_SVC_INV_NUM
        ,   CASE 
            WHEN DCT.MAIN_UNIT_LINE_FLG = 'Y' OR DCD.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCd#
            THEN
                SMM.CUR_LOC_ACCT_NUM
            ELSE
                PMM.CUR_LOC_ACCT_NUM
            END AS  CUR_LOC_ACCT_NUM
        ,   CASE 
            WHEN DCT.MAIN_UNIT_LINE_FLG = 'Y' OR DCD.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCd#
            THEN
                SMM.CUR_LOC_NUM
            ELSE
                PMM.CUR_LOC_NUM
            END AS  CUR_LOC_NUM
        ,   DCR.INV_SEPT_BASE_USG_FLG
        ,   SCB.BASE_CHRG_FLG
        ,   SCB.USG_CHRG_FLG
        ,   SCB.SVC_CONTR_BLLG_FROM_DT
        ,   SCB.SVC_CONTR_BLLG_THRU_DT
        ,   CASE 
            WHEN DCT.MAIN_UNIT_LINE_FLG = 'Y' OR DCD.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCd#
            THEN
                SCM.MDL_ID
            ELSE
                PCM.MDL_ID
            END AS  MDL_ID
        ,   CASE 
            WHEN DCT.MAIN_UNIT_LINE_FLG = 'Y' OR DCD.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCd#
            THEN
                SMM.SER_NUM
            ELSE
                PMM.SER_NUM
            END AS  SER_NUM
        ,   SCB.DS_ACCT_NUM
        ,   DCR.TOC_CD
        ,   DCD.SVC_PGM_MDSE_CD
        ,   CBM.INTG_MDSE_CD
        ,   DCD.BASE_BLLG_CYCLE_CD
        ,   CBM.BLLG_MTR_BLLG_CYCLE_CD
        ,   DCD.PRNT_DS_CONTR_DTL_PK
        ,   DCR.CCY_CD
        ,   CCY.AFT_DECL_PNT_DIGIT_NUM
        ,   CBM.BLLG_MTR_LB_CD
        ,   MDN.T_MDL_NM            MDL_NM
        ,   DCR.DS_CONTR_CATG_CD
        ,   CBM.DS_CONTR_BLLG_MTR_PK
        ,   CTD.SVC_COV_DTL_VAL_TXT
        ,   CBS.DS_CONTR_PRC_EFF_PK
        ,   DCR.PMT_TERM_CASH_DISC_CD
        ,   CLS.FM_TRX_CD
        ,   CLS.FM_TRX_RSN_CD_01
        ,   CLS.FM_TRX_RSN_CD_02
        <!-- START 2017/08/29 M.Kidokoro [QC#20079, ADD] -->
        ,   DCD.MTR_HLD_FLG
        <!-- END 2017/08/29 M.Kidokoro [QC#20079, ADD] -->
        <!-- START 2017/10/19 K.Kojima [QC#21177,ADD] -->
        <!-- START 2017/11/08 K.Kojima [QC#22141,MOD] -->
        <!-- ,   DCPEV.DS_CONTR_CTRL_STS_CD -->
        <!-- ,   DCPEV.BLLBL_FLG -->
        ,   (SELECT DCPEV.DS_CONTR_CTRL_STS_CD FROM DS_CONTR_PRC_EFF_STS_V DCPEV WHERE CBS.GLBL_CMPY_CD = DCPEV.GLBL_CMPY_CD AND CBS.DS_CONTR_PRC_EFF_PK = DCPEV.DS_CONTR_PRC_EFF_PK AND DCPEV.EZCANCELFLAG = '0') AS DS_CONTR_CTRL_STS_CD
        ,   (SELECT DCPEV.BLLBL_FLG FROM DS_CONTR_PRC_EFF_STS_V DCPEV WHERE CBS.GLBL_CMPY_CD = DCPEV.GLBL_CMPY_CD AND CBS.DS_CONTR_PRC_EFF_PK = DCPEV.DS_CONTR_PRC_EFF_PK AND DCPEV.EZCANCELFLAG = '0') AS BLLBL_FLG
        <!-- END 2017/11/08 K.Kojima [QC#22141,MOD] -->
        <!-- END 2017/10/19 K.Kojima [QC#21177,ADD] -->
        <!-- START 2019/10/29 K.Kitachi [QC#54203, ADD] -->
        ,   SMM.SVC_MACH_MSTR_STS_CD
        ,   DCT.MAIN_UNIT_LINE_FLG
        ,   DCD.SVC_MACH_MSTR_PK   DTL_MACH_MSTR_PK
        ,   DCD.SVC_CONFIG_MSTR_PK DTL_CONFIG_MSTR_PK
        <!-- END 2019/10/29 K.Kitachi [QC#54203, ADD] -->
        FROM
            DS_CONTR_DTL            DCD
        ,   DS_CONTR_DTL_TP         DCT
        ,   SVC_MACH_MSTR           SMM
        ,   SVC_CONFIG_MSTR         SCM
        ,   MDSE                    SMD
        ,   SVC_CONTR_BLLG          SCB
        ,   DS_CONTR_DTL            PCD
        ,   SVC_MACH_MSTR           PMM
        ,   SVC_CONFIG_MSTR         PCM
        ,   MDSE                    PMD
        ,   DS_CONTR                DCR
        ,   DS_CONTR_BLLG_MTR       CBM
        ,   CCY                     CCY
        ,   MDL_NM                  MDN
        ,   MDSE                    DMI
        ,   SVC_COV_TMPL_DTL        CTD
        ,   DS_CONTR_BLLG_SCHD      CBS
        ,   DS_CONTR_CLS            CLS
        <!-- START 2017/10/19 K.Kojima [QC#21177,ADD] -->
        <!-- START 2017/11/08 K.Kojima [QC#22141,DEL] -->
        <!-- ,   DS_CONTR_PRC_EFF_STS_V  DCPEV -->
        <!-- END 2017/11/08 K.Kojima [QC#22141,DEL] -->
        <!-- END 2017/10/19 K.Kojima [QC#21177,ADD] -->
        WHERE
           <iterate property="bllgCpltStsCdList" var="bllgCpltStsCd[]" open="SCB.BLLG_CPLT_STS_CD IN (" close=")" conjunction=",">
               #bllgCpltStsCd[]#
           </iterate>
        AND SCB.BLLG_APVL_CPLT_FLG      =   'Y'
        AND SCB.GLBL_CMPY_CD            =   #glblCmpyCd#
        AND SCB.DS_CONTR_PK             =   #dsContrPk#
        AND SCB.BLLG_CALC_EST_FLG       =   'N'
        AND SCB.INV_TP_CD               =   #invTpCd#
        <!-- START 2017/09/28 M.Kidokoro [QC#21286, ADD] -->
        <isNull property="svcCrRebilPk">
        AND SCB.SVC_CR_REBIL_PK         IS NULL
        </isNull>
        <isNotNull property="svcCrRebilPk">
        AND SCB.SVC_CR_REBIL_PK         =   #svcCrRebilPk#
        </isNotNull>
        <isNull property="svcCrRebilDtlPk">
        AND SCB.SVC_CR_REBIL_DTL_PK     IS NULL
        </isNull>
        <isNotNull property="svcCrRebilDtlPk">
        AND SCB.SVC_CR_REBIL_DTL_PK     =   #svcCrRebilDtlPk#
        </isNotNull>
        <!-- END 2017/09/28 M.Kidokoro [QC#21286, ADD] -->
        <isNotNull property="billToCustCd">
        AND  SCB.BILL_TO_CUST_CD        =   #billToCustCd#
        </isNotNull>
        <isNotNull property="nextBllgDt">
        AND  NVL(NVL(SCB.OVRD_NEXT_BLLG_DT, SCB.BASE_BLLG_NEXT_BLLG_DT), SCB.MTR_BLLG_NEXT_BLLG_DT) = #nextBllgDt#
        </isNotNull>
        AND SCB.EZCANCELFLAG            =   '0'
        AND DCD.DS_CONTR_DTL_PK         =   SCB.DS_CONTR_DTL_PK
        AND DCD.DS_CONTR_PK             =   SCB.DS_CONTR_PK
        AND DCD.GLBL_CMPY_CD            =   SCB.GLBL_CMPY_CD
        AND DCD.EZCANCELFLAG            =   SCB.EZCANCELFLAG
        AND DCT.DS_CONTR_DTL_TP_CD      =   DCD.DS_CONTR_DTL_TP_CD
        AND DCT.GLBL_CMPY_CD            =   DCD.GLBL_CMPY_CD
        AND DCT.EZCANCELFLAG            =   DCD.EZCANCELFLAG
        AND DCD.SVC_MACH_MSTR_PK        =   SMM.SVC_MACH_MSTR_PK(+)
        <!-- START 2018/04/02 K.Kitachi [QC#24973, DEL] -->
        <!-- AND DCD.SVC_CONFIG_MSTR_PK      =   SMM.SVC_CONFIG_MSTR_PK(+) -->
        <!-- END 2018/04/02 K.Kitachi [QC#24973, DEL] -->
        AND DCD.GLBL_CMPY_CD            =   SMM.GLBL_CMPY_CD(+)
        AND DCD.EZCANCELFLAG            =   SMM.EZCANCELFLAG(+)
        AND SMM.SVC_CONFIG_MSTR_PK      =   SCM.SVC_CONFIG_MSTR_PK(+)
        AND SMM.GLBL_CMPY_CD            =   SCM.GLBL_CMPY_CD(+)
        AND SMM.EZCANCELFLAG            =   SCM.EZCANCELFLAG(+)
        AND PMM.EZCANCELFLAG            =   PMD.EZCANCELFLAG(+)
        AND SCM.MDL_ID                  =   MDN.T_MDL_ID(+)
        AND SCM.GLBL_CMPY_CD            =   MDN.T_GLBL_CMPY_CD(+)
        AND SCM.EZCANCELFLAG            =   MDN.EZCANCELFLAG(+)
        AND SMM.MDSE_CD                 =   SMD.MDSE_CD(+)
        AND SMM.GLBL_CMPY_CD            =   SMD.GLBL_CMPY_CD(+)
        AND SMM.EZCANCELFLAG            =   SMD.EZCANCELFLAG(+)
        AND DCD.PRNT_DS_CONTR_DTL_PK    =   PCD.DS_CONTR_DTL_PK(+)
        AND DCD.GLBL_CMPY_CD            =   PCD.GLBL_CMPY_CD(+)
        AND DCD.EZCANCELFLAG            =   PCD.EZCANCELFLAG(+)
        AND PCD.SVC_MACH_MSTR_PK        =   PMM.SVC_MACH_MSTR_PK(+)
        AND PCD.GLBL_CMPY_CD            =   PMM.GLBL_CMPY_CD(+)
        AND PCD.EZCANCELFLAG            =   PMM.EZCANCELFLAG(+)
        AND PMM.SVC_CONFIG_MSTR_PK      =   PCM.SVC_CONFIG_MSTR_PK(+)
        AND PMM.GLBL_CMPY_CD            =   PCM.GLBL_CMPY_CD(+)
        AND PMM.EZCANCELFLAG            =   PCM.EZCANCELFLAG(+)
        AND PMM.MDSE_CD                 =   PMD.MDSE_CD(+)
        AND PMM.GLBL_CMPY_CD            =   PMD.GLBL_CMPY_CD(+)
        AND DCR.DS_CONTR_PK             =   DCD.DS_CONTR_PK
        AND DCR.GLBL_CMPY_CD            =   DCD.GLBL_CMPY_CD
        AND DCR.EZCANCELFLAG            =   DCD.EZCANCELFLAG
        AND DCR.DS_CONTR_CATG_CD        =   #dsContrCatgCd#
        AND SCB.DS_CONTR_BLLG_MTR_PK    =   CBM.DS_CONTR_BLLG_MTR_PK(+)
        AND SCB.GLBL_CMPY_CD            =   CBM.GLBL_CMPY_CD(+)
        AND SCB.EZCANCELFLAG            =   CBM.EZCANCELFLAG(+)
        AND DCR.GLBL_CMPY_CD            =   CCY.GLBL_CMPY_CD
        AND DCR.CCY_CD                  =   CCY.CCY_CD
        AND CCY.EZCANCELFLAG            =   '0'
        AND DCD.GLBL_CMPY_CD            =   DMI.GLBL_CMPY_CD(+)
        AND DCD.SVC_PGM_MDSE_CD         =   DMI.MDSE_CD(+)
        AND DCD.EZCANCELFLAG            =   DMI.EZCANCELFLAG(+)
        AND DMI.GLBL_CMPY_CD            =   CTD.GLBL_CMPY_CD(+)
        AND DMI.SVC_COV_TMPL_TP_CD      =   CTD.SVC_COV_TMPL_TP_CD(+)
        AND DMI.EZCANCELFLAG            =   CTD.EZCANCELFLAG(+)
        AND CTD.SVC_COV_FEAT_CD(+)      =   #svcCovFeatCd#
        AND CTD.EFF_FROM_DT(+)      &lt;=   #slsDt#
        AND NVL(CTD.EFF_THRU_DT(+), #defEffThruDt#) &gt;= #slsDt#
        AND SCB.GLBL_CMPY_CD            =   CBS.GLBL_CMPY_CD(+)
        AND SCB.EZCANCELFLAG            =   CBS.EZCANCELFLAG(+)
        AND SCB.DS_CONTR_BLLG_SCHD_PK   =   CBS.DS_CONTR_BLLG_SCHD_PK(+)
        AND DCR.GLBL_CMPY_CD            =   CLS.GLBL_CMPY_CD(+)
        AND DCR.DS_CONTR_CLS_CD         =   CLS.DS_CONTR_CLS_CD(+)
        AND CLS.EZCANCELFLAG(+)         =   '0'
        <!-- START 2017/10/19 K.Kojima [QC#21177,ADD] -->
        <!-- START 2017/11/08 K.Kojima [QC#22141,DEL] -->
        <!-- AND CBS.GLBL_CMPY_CD            =   DCPEV.GLBL_CMPY_CD(+) -->
        <!-- AND CBS.DS_CONTR_PRC_EFF_PK     =   DCPEV.DS_CONTR_PRC_EFF_PK(+) -->
        <!-- AND DCPEV.EZCANCELFLAG(+)       =   '0' -->
        <!-- END 2017/11/08 K.Kojima [QC#22141,DEL] -->
        <!-- END 2017/10/19 K.Kojima [QC#21177,ADD] -->
        <!-- START 2017/11/17 K.Kojima [QC#21918,MOD] -->
        AND SMM.FIN_BR_CD(+) IS NOT NULL
        <!-- END 2017/11/17 K.Kojima [QC#21918,MOD] -->
    )
    SELECT
        *
    FROM
        A
    WHERE
     <isEqual property="invSeptBaseUsgFlg" compareValue="N">
     <!-- START 2021/03/08 R.Cabral [QC#58428, MOD] -->
     <!--
        A.BASE_BLLG_FLG                 =   'Y'
    OR  A.MTR_BLLG_FLG                  =   'Y'
    -->
        (A.BASE_BLLG_FLG                 =   'Y'
    OR  A.MTR_BLLG_FLG                  =   'Y')
    <!-- END 2021/03/08 R.Cabral [QC#58428, MOD] --> 
     </isEqual>
     <isEqual property="invSeptBaseUsgFlg" compareValue="Y">
         <isEqual property="baseBllgFlg" compareValue="Y">
        A.BASE_BLLG_FLG                 =   'Y'
    AND A.MTR_BLLG_FLG                  =   'N'
         </isEqual>
         <isEqual property="mtrBllgFlg" compareValue="Y">
        A.BASE_BLLG_FLG                 =   'N'
    AND A.MTR_BLLG_FLG                  =   'Y'
         </isEqual>
     </isEqual>
    <!-- START 2018/07/25 K.Kitachi [QC#17068, ADD] -->
    <isNull property="ctacPsnPk">
    AND A.CTAC_PSN_PK                   IS NULL
    </isNull>
    <isNotNull property="ctacPsnPk">
    AND A.CTAC_PSN_PK                   =   #ctacPsnPk#
    </isNotNull>
    <!-- END 2018/07/25 K.Kitachi [QC#17068, ADD] -->
    ORDER BY
        NVL(NVL(A.OVRD_NEXT_BLLG_DT, A.BASE_BLLG_NEXT_BLLG_DT), A.MTR_BLLG_NEXT_BLLG_DT)     ASC
    ,   A.SVC_CONFIG_MSTR_PK            ASC NULLS FIRST
    ,   A.BILL_TO_CUST_CD               ASC
    ,   A.DS_CONTR_DTL_TP_SORT_NUM      ASC
    ,   A.SER_NUM                       ASC
    ,   A.BLLG_MTR_LB_CD                NULLS FIRST
    </statement>

	<statement id="getMdlMdseInfo" parameterClass="Map" resultClass="Map">
	SELECT
		MDS.MDSE_CD
	,	MDS.MDSE_NM
	,	MDN.T_MDL_ID			MDL_ID
	,	MDN.T_MDL_NM			MDL_NM
	FROM
		MDSE					MDS
	,	MDL_ITEM				MDI
	,	MDL_NM					MDN
	WHERE
		MDS.MDSE_CD				=	#mdseCd#
	AND	MDS.GLBL_CMPY_CD		=	#glblCmpyCd#
	AND	MDS.EZCANCELFLAG		=	'0'
	AND	MDI.T_ITEM_CD			=	MDS.MDSE_CD
	AND	MDI.T_GLBL_CMPY_CD		=	MDS.GLBL_CMPY_CD
	AND	MDI.EZCANCELFLAG		=	MDS.EZCANCELFLAG
	AND	MDN.T_MDL_ID			=	MDI.T_MDL_ID
	AND	MDN.T_GLBL_CMPY_CD		=	MDI.T_GLBL_CMPY_CD
	AND	MDN.EZCANCELFLAG		=	MDI.EZCANCELFLAG
	</statement>
	<statement id="getAcctDlyActlExchRates" parameterClass="Map" resultClass="Map">
	SELECT
		A.CCY_CD
	,	A.ACTL_EXCH_RATE_ENT_DT
	,	A.GLBL_CMPY_CD
	FROM
	(
		SELECT
			CCY_CD
		,	ACTL_EXCH_RATE_ENT_DT
		,	GLBL_CMPY_CD
		,	ROW_NUMBER() OVER (
				ORDER BY
					ACTL_EXCH_RATE_ENT_DT	DESC
		)	ROW_NUM
		FROM
			ACCT_DLY_ACTL_EXCH_RATES
		WHERE
			CCY_CD							=		#ccyCd#
		AND	ACTL_EXCH_RATE_ENT_DT			&lt;=	#actlExchRateEntDt#
		AND	ACTL_EXCH_RATE					IS NOT NULL
		AND	GLBL_CMPY_CD					=		#glblCmpyCd#
		AND	EZCANCELFLAG					=		'0'
	)	A
	WHERE
		A.ROW_NUM	=	1
	</statement>
	<statement id="getInvProcSvcPhysMtrRead" parameterClass="Map" resultClass="Map">
	SELECT
	DISTINCT
		PMR.SVC_PHYS_MTR_READ_PK
	FROM
		CONTR_PHYS_BLLG_MTR_RELN	PBR
	,	SVC_PHYS_MTR_READ			PMR
	,	DS_MTR_READ_TP				MRT
	WHERE
		PBR.GLBL_CMPY_CD			=	#glblCmpyCd#
	AND	PBR.EZCANCELFLAG			=	'0'
    AND (
        (
                PBR.DS_CONTR_BLLG_MTR_PK    =   #dsContrBllgMtrPk#

        )
        OR  PBR.DS_CONTR_BLLG_MTR_PK  IS NULL
    )
	AND	PBR.MACH_MSTR_PK			=	#svcMachMstrPk#
	AND	PBR.DS_CONTR_DTL_PK			=	#dsContrDtlPk#
	AND	PBR.GLBL_CMPY_CD			=	PMR.GLBL_CMPY_CD
	AND	PBR.MACH_MSTR_PK			=	PMR.SVC_MACH_MSTR_PK
    AND PBR.SVC_PHYS_MTR_PK         =   PMR.SVC_PHYS_MTR_PK 
	AND	PBR.EZCANCELFLAG			=	PMR.EZCANCELFLAG
	AND	PMR.INV_PROC_FLG			=	'N'
    AND PMR.SVC_PHYS_MTR_READ_GRP_SQ =  #svcPhysMtrReadGrpSq#
	AND	PMR.GLBL_CMPY_CD			=	MRT.GLBL_CMPY_CD
	AND	PMR.EZCANCELFLAG			=	MRT.EZCANCELFLAG
	AND	PMR.DS_MTR_READ_TP_CD		=	MRT.DS_MTR_READ_TP_CD
	AND	MRT.BLLG_MTR_READ_FLG		=	'Y'
	</statement>
    <statement id="getMaxInvMtrReadDt" parameterClass="Map" resultClass="String">
    SELECT
        MAX(SPMR.MTR_READ_DT)
    FROM
        CONTR_PHYS_BLLG_MTR_RELN    CPBMR
    ,   SVC_PHYS_MTR_READ           SPMR
    ,   DS_MTR_READ_TP              DMRT
    WHERE
        CPBMR.GLBL_CMPY_CD          =   #glblCmpyCd#
    AND CPBMR.EZCANCELFLAG          =   '0'
    AND CPBMR.DS_CONTR_BLLG_MTR_PK  =   #dsContrBllgMtrPk#
    AND CPBMR.DS_CONTR_BLLG_MTR_ID  =   #dsContrBllgMtrId#
    AND CPBMR.MACH_MSTR_PK          =   #svcMachMstrPk#
    AND CPBMR.DS_CONTR_DTL_PK       =   #dsContrDtlPk#
    AND CPBMR.GLBL_CMPY_CD          =   SPMR.GLBL_CMPY_CD
    AND CPBMR.MACH_MSTR_PK          =   SPMR.SVC_MACH_MSTR_PK
    AND CPBMR.PHYS_MTR_ID           =   SPMR.PHYS_MTR_ID
    AND CPBMR.DS_MDL_MTR_PK         =   SPMR.DS_MDL_MTR_PK
    AND CPBMR.EZCANCELFLAG          =   SPMR.EZCANCELFLAG
    AND SPMR.INV_PROC_FLG           =   'Y'
    AND SPMR.GLBL_CMPY_CD           =   DMRT.GLBL_CMPY_CD
    AND SPMR.EZCANCELFLAG           =   DMRT.EZCANCELFLAG
    AND SPMR.DS_MTR_READ_TP_CD      =   DMRT.DS_MTR_READ_TP_CD
    AND DMRT.BLLG_MTR_READ_FLG      =   'Y'
    <isEqual property="reProcFlg" compareValue="Y">
          AND SPMR.MTR_READ_DT         &lt;= #mtrBllgThruDt#
    </isEqual>
    </statement>

    <statement id="getSvcContrBllgAlloc" parameterClass="Map" resultClass="Map">
        SELECT
             A.DFRD_ACCTG_RULE_CD
            ,A.DFRD_ACCTG_RULE_DURN_AOT
        FROM
            SVC_CONTR_BLLG_ALLOC A
        WHERE
                A.EZCANCELFLAG      = '0'
            AND A.GLBL_CMPY_CD      = #glblCmpyCd#
            AND A.SVC_CONTR_BLLG_PK = #svcContrBllgPk#
    </statement>

    <statement id="getDsContrCrCard" parameterClass="Map" resultClass="Map">
<!-- mod start  2019/03/28 QC#30958 -->
        SELECT
             A.CR_CARD_CUST_REF_NUM
        FROM
            DS_CONTR_CR_CARD_PO A
        WHERE
                A.EZCANCELFLAG = '0'
            AND A.GLBL_CMPY_CD = #glblCmpyCd#
            AND (
                <isEqual property="hdrSrchFlg" compareValue="Y">
                    (   A.DS_CONTR_PK          = #dsContrPk#
                    AND A.DS_CONTR_DTL_PK      IS NULL
                    AND A.DS_CONTR_BLLG_MTR_PK IS NULL
                    AND A.CR_CARD_FLG          = 'Y'
                    AND A.DS_CONTR_MACH_LVL_NUM = #dsContrMachLvl1#
                    )
                OR
                </isEqual>
                    (   A.DS_CONTR_PK          = #dsContrPk#
                    AND A.DS_CONTR_DTL_PK      = #dsContrDtlPk#
                    AND A.DS_CONTR_BLLG_MTR_PK IS NULL
                    AND A.CR_CARD_FLG          = 'Y'
                    AND A.DS_CONTR_MACH_LVL_NUM = #dsContrMachLvl2#
                    )
                OR
                    (   A.DS_CONTR_PK          = #dsContrPk#
                    AND A.DS_CONTR_DTL_PK      = #dsContrDtlPk#
                <isNull property="dsContrBllgMtrPk">
                    AND A.DS_CONTR_BLLG_MTR_PK IS NULL
                </isNull>
                <isNotNull property="dsContrBllgMtrPk">
                    AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
                </isNotNull>
                    AND A.CR_CARD_FLG          = 'Y'
                    AND A.DS_CONTR_MACH_LVL_NUM = #dsContrMachLvl3#
                    )
                )
            AND A.CR_CARD_CUST_REF_NUM IS NOT NULL
        ORDER BY
            A.DS_CONTR_MACH_LVL_NUM DESC
<!-- mod end  2019/03/28 QC#30958 -->
    </statement>

    <statement id="getDsContrPo" parameterClass="Map" resultClass="Map">
<!-- mod start  2019/03/28 QC#30958 -->
<!-- mod start  2019/03/01 QC#30590 -->
<!-- mod start  2023/08/30 QC#61805 -->
<!--
        SELECT
             Z.CUST_PO_NUM
            ,Z.PO_DT
        FROM (
            SELECT
                 X.DS_CONTR_PK
                ,X.CUST_PO_NUM
                ,X.PO_DT
                ,ROW_NUMBER() OVER (PARTITION BY X.DS_CONTR_PK ORDER BY X.SORT_NUM_1, X.SORT_NUM_2) ROW_NUM
            FROM (
                SELECT
                     A.DS_CONTR_PK
                    ,A.CUST_PO_NUM
                    ,A.PO_DT
                    ,1 AS SORT_NUM_1
                    ,ROW_NUMBER() OVER (PARTITION BY A.DS_CONTR_PK ORDER BY A.DS_CONTR_MACH_LVL_NUM DESC) SORT_NUM_2
                FROM
                    DS_CONTR_CR_CARD_PO A
                WHERE
                        A.EZCANCELFLAG = '0'
                    AND A.GLBL_CMPY_CD = #glblCmpyCd#
                    AND (
                        <isEqual property="hdrSrchFlg" compareValue="Y">
                            (   A.DS_CONTR_PK          = #dsContrPk#
                            AND A.DS_CONTR_DTL_PK      IS NULL
                            AND A.DS_CONTR_BLLG_MTR_PK IS NULL
                            AND A.PO_FROM_DT           &lt;= #slsDt#
                            AND A.PO_DT                &gt;= #slsDt#
                            AND A.CR_CARD_FLG          = 'N'
                            AND A.DS_CONTR_MACH_LVL_NUM    = #dsContrMachLvl1#
                            )
                        OR
                        </isEqual>
                            (   A.DS_CONTR_PK          = #dsContrPk#
                            AND A.DS_CONTR_DTL_PK      = #dsContrDtlPk#
                            AND A.DS_CONTR_BLLG_MTR_PK IS NULL
                            AND A.PO_FROM_DT           &lt;= #slsDt#
                            AND A.PO_DT                &gt;= #slsDt#
                            AND A.CR_CARD_FLG          = 'N'
                            AND A.DS_CONTR_MACH_LVL_NUM    = #dsContrMachLvl2#
                            )
                        OR
                            (   A.DS_CONTR_PK          = #dsContrPk#
                            AND A.DS_CONTR_DTL_PK      = #dsContrDtlPk#
                        <isNull property="dsContrBllgMtrPk">
                            AND A.DS_CONTR_BLLG_MTR_PK IS NULL
                        </isNull>
                        <isNotNull property="dsContrBllgMtrPk">
                            AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
                        </isNotNull>
                            AND A.PO_FROM_DT           &lt;= #slsDt#
                            AND A.PO_DT                &gt;= #slsDt#
                            AND A.CR_CARD_FLG          = 'N'
                            AND A.DS_CONTR_MACH_LVL_NUM    = #dsContrMachLvl3#
                            )
                        )
                    AND A.CUST_PO_NUM IS NOT NULL
                UNION
                SELECT
                     A.DS_CONTR_PK
                    ,A.CUST_PO_NUM
                    ,A.PO_DT
                    ,2 AS SORT_NUM_1
                    ,ROW_NUMBER() OVER (PARTITION BY A.DS_CONTR_PK ORDER BY A.PO_DT DESC, A.DS_CONTR_MACH_LVL_NUM DESC) SORT_NUM_2
                FROM
                    DS_CONTR_CR_CARD_PO A
                WHERE
                        A.EZCANCELFLAG = '0'
                    AND A.GLBL_CMPY_CD = #glblCmpyCd#
                    AND (
                        <isEqual property="hdrSrchFlg" compareValue="Y">
                            (   A.DS_CONTR_PK          = #dsContrPk#
                            AND A.DS_CONTR_DTL_PK      IS NULL
                            AND A.DS_CONTR_BLLG_MTR_PK IS NULL
                            AND A.PO_DT                &lt; #slsDt#
                            AND A.CR_CARD_FLG          = 'N'
                            AND A.DS_CONTR_MACH_LVL_NUM = #dsContrMachLvl1#
                            )
                        OR
                        </isEqual>
                            (   A.DS_CONTR_PK          = #dsContrPk#
                            AND A.DS_CONTR_DTL_PK      = #dsContrDtlPk#
                            AND A.DS_CONTR_BLLG_MTR_PK IS NULL
                            AND A.PO_DT                &lt; #slsDt#
                            AND A.CR_CARD_FLG          = 'N'
                            AND A.DS_CONTR_MACH_LVL_NUM = #dsContrMachLvl2#
                            )
                        OR
                            (   A.DS_CONTR_PK          = #dsContrPk#
                            AND A.DS_CONTR_DTL_PK      = #dsContrDtlPk#
                        <isNull property="dsContrBllgMtrPk">
                            AND A.DS_CONTR_BLLG_MTR_PK IS NULL
                        </isNull>
                        <isNotNull property="dsContrBllgMtrPk">
                            AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
                        </isNotNull>
                            AND A.PO_DT                &lt; #slsDt#
                            AND A.CR_CARD_FLG          = 'N'
                            AND A.DS_CONTR_MACH_LVL_NUM = #dsContrMachLvl3#
                            )
                        )
                    AND A.CUST_PO_NUM IS NOT NULL
                ) X
            ) Z
        WHERE
            Z.ROW_NUM = 1
-->
        SELECT
             Z.CUST_PO_NUM
            ,Z.PO_DT
        FROM (
            SELECT
                 X.CUST_PO_NUM
                ,X.PO_DT
            FROM
                 DS_CONTR_CR_CARD_PO X
            WHERE
                     X.GLBL_CMPY_CD                             = #glblCmpyCd#
                 AND X.EZCANCELFLAG                             = '0'
                    AND X.GLBL_CMPY_CD                          = #glblCmpyCd#
                    AND X.DS_CONTR_PK                           = #dsContrPk#
                    AND (
                            (   X.PO_FROM_DT                &lt;= #svcContrBllgFromDt#
                            AND X.PO_DT                     &gt;= #svcContrBllgFromDt#
                            )
                        OR 
                            (   X.PO_FROM_DT                &lt;= #slsDt#
                            AND X.PO_DT                     &gt;= #svcContrBllgFromDt#
                            )
                        )
                    AND X.CR_CARD_FLG                           = 'N'
                    AND (
                            (   X.DS_CONTR_MACH_LVL_NUM         = #dsContrMachLvl1#)
                        OR
                            (   X.DS_CONTR_MACH_LVL_NUM         = #dsContrMachLvl2#
                            AND X.DS_CONTR_DTL_PK               = #dsContrDtlPk#
                            )
                        OR
                            (   X.DS_CONTR_MACH_LVL_NUM         = #dsContrMachLvl3#
                            AND X.DS_CONTR_DTL_PK               = #dsContrDtlPk#
                            <isNull property="dsContrBllgMtrPk">
                            AND NVL(X.DS_CONTR_BLLG_MTR_PK, -1) = -1
                            </isNull>
                            <isNotNull property="dsContrBllgMtrPk">
                            AND NVL(X.DS_CONTR_BLLG_MTR_PK, -1) = #dsContrBllgMtrPk#
                            </isNotNull>
                            )
                        )
            ORDER BY
                 X.DS_CONTR_MACH_LVL_NUM DESC
                ,X.PO_DT DESC
               ) Z
        WHERE
            ROWNUM = 1
<!-- mod end  2023/08/30 QC#61805 -->
<!-- mod end  2019/03/01 QC#30590 -->
<!-- mod end  2019/03/28 QC#30958 -->
    </statement>

    <statement id="getBillToCust" parameterClass="Map" resultClass="Map">
        SELECT
            A.SELL_TO_CUST_CD
        FROM
            BILL_TO_CUST A
        WHERE
                A.EZCANCELFLAG    = '0'
            AND A.GLBL_CMPY_CD    = #glblCmpyCd#
            AND A.SELL_TO_CUST_CD = #sellToCustCd#
    </statement>

    <statement id="getSvcInvLine" parameterClass="Map" resultClass="Map">
        SELECT
             A.SLS_TAX_RATE
            ,A.INV_LINE_DEAL_TAX_AMT
            ,A.INV_LINE_FUNC_TAX_AMT
            ,A.SVC_INV_CHRG_TP_CD
        FROM
            SVC_INV_LINE A
        WHERE
                A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.DS_CONTR_BLLG_SCHD_PK = #dsContrBllgSchdPk#
    </statement>

    <statement id="getDsContrBllgMtrStsV" parameterClass="Map" resultClass="Map">
        SELECT
             A.DS_CONTR_CTRL_STS_NM
            <!-- START 2017/10/19 K.Kojima [QC#21468,ADD] -->
            ,A.DS_CONTR_CTRL_STS_CD
            <!-- END 2017/10/19 K.Kojima [QC#21468,ADD] -->
            ,A.BLLBL_FLG
        FROM
            DS_CONTR_BLLG_MTR_STS_V A
        WHERE
                A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
            AND A.DS_CONTR_DTL_PK      = #dsContrDtlPk#
    </statement>

    <statement id="getSvcContrAddlChrgBllg" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            SVC_CONTR_ADDL_CHRG_BLLG_PK
        FROM
            SVC_CONTR_ADDL_CHRG_BLLG A
        WHERE
                A.EZCANCELFLAG           = '0'
            AND A.GLBL_CMPY_CD           = #glblCmpyCd#
            AND A.SVC_CONTR_BLLG_PK      = #svcContrBllgPk#
        <isNotNull property="svcContrBaseBllgPk">
            AND A.SVC_CONTR_BASE_BLLG_PK = #svcContrBaseBllgPk#
        </isNotNull>
        <isNotNull property="svcContrMtrllgPk">
            AND A.SVC_CONTR_MTR_BLLG_PK  = #svcContrMtrllgPk#
        </isNotNull>
    </statement>

<!-- START 2024/01/31 H.Iinuma [QC#61468,ADD] -->
    <statement id="getFrtChrgReplInfoTMsgList" parameterClass="Map" resultMap="result.getFrtChrgReplInfoTMsgList">
        SELECT
            *
        FROM
            FRT_CHRG_REPL_INFO   A
        WHERE
            A.EZCANCELFLAG = '0'
        AND A.GLBL_CMPY_CD = #glblCmpyCd#
        AND A.SVC_INV_NUM = #svcInvNum#
        AND A.FRT_CHRG_REPL_STS_CD = #frtChrgReplStsCd#
    </statement>

    <resultMap id="result.getFrtChrgReplInfoTMsgList" class="FRT_CHRG_REPL_INFOTMsg">
        <result property="glblCmpyCd" column="GLBL_CMPY_CD" javaType="EZDTStringItem" />
        <result property="svcInvNum" column="SVC_INV_NUM" javaType="EZDTStringItem" />
        <result property="svcInvLineNum" column="SVC_INV_LINE_NUM" javaType="EZDTStringItem" />
        <result property="frtChrgReplStsCd" column="FRT_CHRG_REPL_STS_CD" javaType="EZDTStringItem" />
    </resultMap>

    <statement id="getFrtChrgReplDtlTMsgList" parameterClass="Map" resultMap="result.getFrtChrgReplDtlTMsgList">
        SELECT
            *
        FROM
            FRT_CHRG_REPL_DTL   A
        WHERE
            A.EZCANCELFLAG = '0'
        AND A.GLBL_CMPY_CD = #glblCmpyCd#
        AND A.SVC_INV_NUM  = #svcInvNum#
    </statement>
    
    <resultMap id="result.getFrtChrgReplDtlTMsgList" class="FRT_CHRG_REPL_DTLTMsg">
        <result property="glblCmpyCd" column="GLBL_CMPY_CD" javaType="EZDTStringItem" />
        <result property="svcInvNum" column="SVC_INV_NUM" javaType="EZDTStringItem" />
        <result property="svcInvLineNum" column="SVC_INV_LINE_NUM" javaType="EZDTStringItem" />
        <result property="relnInvNum" column="RELN_INV_NUM" javaType="EZDTStringItem" />
        <result property="relnInvBolLineNum" column="RELN_INV_BOL_LINE_NUM" javaType="EZDTStringItem" />
        <result property="relnInvLineNum" column="RELN_INV_LINE_NUM" javaType="EZDTStringItem" />
        <result property="frtChrgReplStsCd" column="FRT_CHRG_REPL_STS_CD" javaType="EZDTStringItem" />
    </resultMap>

    <statement id="getOrigSvcInvLineForFc" parameterClass="Map" resultClass="Map">
        SELECT
            *
        FROM
            SVC_INV_LINE   A
        WHERE
            A.EZCANCELFLAG = '0'
        AND A.GLBL_CMPY_CD = #glblCmpyCd#
        AND A.SVC_INV_NUM = #svcInvNum#
        AND A.SVC_INV_LINE_NUM = #svcInvLineNum#
    </statement>

    <statement id="countSvcInvLineForFc" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(1) AS CNT
        FROM
            SVC_INV_LINE   A
        WHERE
            A.EZCANCELFLAG = '0'
        AND A.GLBL_CMPY_CD = #glblCmpyCd#
        AND A.SVC_INV_NUM = #svcInvNum#
        AND A.SVC_MACH_MSTR_PK = #svcMachMstrPk#
        AND A.SVC_INV_CHRG_TP_CD = #svcInvChrgTpCd#
    </statement>

    <statement id="getBaseDsContrBllgSchdPkList" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.DS_CONTR_BLLG_SCHD_PK
        FROM
            SVC_INV_LINE   A
        WHERE
            A.EZCANCELFLAG = '0'
        AND A.GLBL_CMPY_CD = #glblCmpyCd#
        AND A.SVC_INV_NUM = #svcInvNum#
        AND A.SVC_MACH_MSTR_PK = #svcMachMstrPk#
        AND A.SVC_INV_CHRG_TP_CD = #svcInvChrgTpCd#
    </statement>

    <statement id="getMtrDsContrBllgSchdPkList" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.DS_CONTR_BLLG_SCHD_PK
        FROM
            SVC_INV_LINE   A
        WHERE
            A.EZCANCELFLAG = '0'
        AND A.GLBL_CMPY_CD = #glblCmpyCd#
        AND A.SVC_INV_NUM = #svcInvNum#
        AND A.SVC_MACH_MSTR_PK = #svcMachMstrPk#
        AND A.SVC_INV_CHRG_TP_CD = #svcInvChrgTpCd#
    </statement>

    <statement id="getSvcInvLineInfoList" parameterClass="Map" resultClass="Map">
        SELECT
            A.SVC_MACH_MSTR_PK
           ,A.BLLG_PER_THRU_DT
           ,A.SVC_INV_CHRG_TP_CD
           ,B.DS_CONTR_DTL_TP_CD
           ,B.BASE_BLLG_TMG_CD
           ,B.CONTR_EFF_THRU_DT
        FROM
            SVC_INV_LINE   A
           ,DS_CONTR_DTL   B
        WHERE
            A.EZCANCELFLAG = '0'
        AND A.GLBL_CMPY_CD = #glblCmpyCd#
        AND B.EZCANCELFLAG = '0'
        AND B.GLBL_CMPY_CD = #glblCmpyCd#
        AND A.DS_CONTR_DTL_PK = B.DS_CONTR_DTL_PK 
        AND A.SVC_INV_NUM = #svcInvNum#
    </statement>

    <statement id="getBaseSvcInvLineList" parameterClass="Map" resultClass="Map">
        SELECT 
            *
        FROM
            SVC_INV_LINE A
        WHERE
                A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.EZCANCELFLAG          = '0'
            AND A.SVC_INV_CHRG_TP_CD    = #svcInvChrgTpCd#
            AND A.DS_CONTR_PK           = #dsContrPk#
            AND A.SVC_MACH_MSTR_PK      = #svcMachMstrPk#
        ORDER BY A.BLLG_PER_THRU_DT DESC
    </statement>

    <statement id="getMtrSvcInvLineList" parameterClass="Map" resultClass="Map">
        SELECT 
            *
        FROM
            SVC_INV_LINE A
        WHERE
                A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.EZCANCELFLAG          = '0'
            AND A.SVC_INV_CHRG_TP_CD    = #svcInvChrgTpCd#
            AND A.DS_CONTR_PK           = #dsContrPk#
            AND A.SVC_MACH_MSTR_PK      = #svcMachMstrPk#
        ORDER BY A.BLLG_PER_THRU_DT DESC
    </statement>

    <statement id="getSvcInvChrgTpInfo" parameterClass="Map" resultClass="Map">
        SELECT 
            A.TRX_CD
           ,A.TRX_RSN_CD
        FROM
            SVC_INV_CHRG_TP   A
        WHERE
                A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.EZCANCELFLAG          = '0'
            AND A.SVC_INV_CHRG_TP_CD    = #svcInvChrgTpCd#
    </statement>

    <statement id="getMdseNmforFc" parameterClass="Map" resultClass="String">
        SELECT 
            A.MDSE_NM
        FROM
            MDSE   A
        WHERE
                A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.EZCANCELFLAG          = '0'
            AND A.MDSE_CD               = #mdseCd#
    </statement>

    <statement id="countCpoList" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            SUM(CNT) AS CNT
        FROM
            (
                SELECT 
                     COUNT(1)   AS CNT
                FROM
                    CPO        A
                   ,CPO_DTL    B
                   ,INV        C
                   ,INV_LINE   D
                WHERE
                        A.GLBL_CMPY_CD          = #glblCmpyCd#
                    AND A.EZCANCELFLAG          = '0'
                    AND A.GLBL_CMPY_CD          = B.GLBL_CMPY_CD
                    AND B.EZCANCELFLAG          = '0'
                    AND A.GLBL_CMPY_CD          = C.GLBL_CMPY_CD
                    AND C.EZCANCELFLAG          = '0'
                    AND B.GLBL_CMPY_CD          = D.GLBL_CMPY_CD
                    AND D.EZCANCELFLAG          = '0'
                    AND A.DS_ORD_CATG_CD        = #dsOrdCatgCd#
                    <isNotNull property="frtReplOrdTpList">
                        <iterate property="frtReplOrdTpList" var="frtReplOrdTpList[]" open="AND A.DS_ORD_TP_CD IN (" close=")" conjunction= ", " >
                            #frtReplOrdTpList[]#
                        </iterate>
                    </isNotNull>
                    AND A.CPO_ORD_NUM           = B.CPO_ORD_NUM
                    AND A.CPO_ORD_NUM           = C.CPO_ORD_NUM
                    AND A.CPO_ORD_NUM           = D.CPO_ORD_NUM
                    AND B.CPO_DTL_LINE_NUM      = D.CPO_DTL_LINE_NUM
                    AND B.CPO_DTL_LINE_SUB_NUM  = D.CPO_DTL_LINE_SUB_NUM
                    AND B.DS_CONTR_NUM          = #dsContrNum#
                    AND C.INV_DT                BETWEEN #bllgPerFromDt# AND #bllgPerThruDt#
                    AND D.MDSE_CD               = #mdseCd#
                    AND B.SVC_MACH_MSTR_PK      = #svcMachMstrPk#
                    AND C.DS_INV_TP_CD          = #dsInvTpCd#
                    AND NOT EXISTS (
                            SELECT
                                *
                            FROM
                                FRT_CHRG_REPL_DTL       XA
                            WHERE
                                    XA.GLBL_CMPY_CD             = #glblCmpyCd#
                                AND XA.EZCANCELFLAG             = '0'
                                AND XA.RELN_INV_NUM             = D.INV_NUM
                                AND XA.RELN_INV_BOL_LINE_NUM    = D.INV_BOL_LINE_NUM
                                AND XA.RELN_INV_LINE_NUM        = D.INV_LINE_NUM
                        )
                UNION
                    SELECT 
                     COUNT(1)   AS CNT
                    FROM
                        CPO        A
                       ,CPO_DTL    B
                    WHERE
                            A.GLBL_CMPY_CD          = #glblCmpyCd#
                        AND A.EZCANCELFLAG          = '0'
                        AND A.DS_ORD_CATG_CD        = #dsOrdCatgCd#
                        <isNotNull property="frtReplOrdTpList">
                            <iterate property="frtReplOrdTpList" var="frtReplOrdTpList[]" open="AND A.DS_ORD_TP_CD IN (" close=")" conjunction= ", " >
                                #frtReplOrdTpList[]#
                            </iterate>
                        </isNotNull>
                        AND A.CPO_ORD_NUM           = B.CPO_ORD_NUM
                        AND B.DS_CONTR_NUM          = #dsContrNum#
                        AND B.SVC_MACH_MSTR_PK      = #svcMachMstrPk#
                        AND NOT EXISTS (
                            SELECT
                                *
                            FROM
                                INV        C
                               ,INV_LINE   D
                            WHERE
                                    C.GLBL_CMPY_CD          = A.GLBL_CMPY_CD
                                AND C.EZCANCELFLAG          = '0'
                                AND C.GLBL_CMPY_CD          = D.GLBL_CMPY_CD
                                AND D.EZCANCELFLAG          = '0'
                                AND C.CPO_ORD_NUM           = A.CPO_ORD_NUM
                                AND D.CPO_DTL_LINE_NUM      = B.CPO_DTL_LINE_NUM
                                AND D.CPO_DTL_LINE_SUB_NUM  = B.CPO_DTL_LINE_SUB_NUM
                        )
            )
    </statement>
<!-- END 2024/01/31 H.Iinuma [QC#61468,ADD] -->

    <statement id="getSvcContrAddlChrgBllgInfo" parameterClass="Map" resultClass="Map">
        SELECT
            <!-- START 2018/10/24 K.Kitachi [QC#28579, ADD] -->
            /*+ INDEX(A SVC_CONTR_BLLG_I8) */
            <!-- END 2018/10/24 K.Kitachi [QC#28579, ADD] -->
             A.SVC_CONTR_BLLG_PK
            ,B.SVC_CONTR_ADDL_CHRG_BLLG_PK
        FROM
             SVC_CONTR_BLLG           A
            ,SVC_CONTR_ADDL_CHRG_BLLG B
        WHERE
                A.EZCANCELFLAG           = '0'
            AND A.GLBL_CMPY_CD           = #glblCmpyCd#
            AND A.BLLG_APVL_CPLT_FLG     = 'Y'
<!--
            <iterate property="bllgCpltStsCdList" var="bllgCpltStsCd[]" open="AND A.BLLG_CPLT_STS_CD IN (" close=")" conjunction=",">
                #bllgCpltStsCd[]#
            </iterate>
  -->
            AND A.BLLG_CALC_EST_FLG      = 'N'
            AND A.ADDL_CHRG_FLG          = 'Y'
            AND A.ADDL_CHRG_BLLG_NEXT_BLLG_DT &lt;= #slsDt#
            AND A.PRNT_SVC_CONTR_BLLG_PK = #prntSvcContrBllgPk#
            AND B.EZCANCELFLAG           = '0'
            AND A.GLBL_CMPY_CD           = B.GLBL_CMPY_CD
            AND A.SVC_CONTR_BLLG_PK      = B.SVC_CONTR_BLLG_PK
    </statement>

    <statement id="getSvcContrBllgAllocPkForAddl" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.SVC_CONTR_BLLG_ALLOC_PK
        FROM
            SVC_CONTR_BLLG_ALLOC A
        WHERE
                A.EZCANCELFLAG = '0'
            AND A.GLBL_CMPY_CD = #glblCmpyCd#
            AND A.SVC_CONTR_ADDL_CHRG_BLLG_PK = #svcContrAddlChrgBllgPk#
        ORDER BY
            A.SVC_CONTR_BLLG_ALLOC_PK
    </statement>

    <statement id="getChildSvcContrBllgPkList" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.SVC_CONTR_BLLG_PK
        FROM
            SVC_CONTR_BLLG A
        WHERE
                A.EZCANCELFLAG           = '0'
            AND A.GLBL_CMPY_CD           = #glblCmpyCd#
            AND A.PRNT_SVC_CONTR_BLLG_PK = #prntSvcContrBllgPk#
        ORDER BY
            A.SVC_CONTR_BLLG_PK
    </statement>

    <statement id="getSvcContrBaseBllgPkList" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            <!-- START 2019/02/13 K.Fujimoto [QC#29688,ADD] -->
            /*+ INDEX(A SVC_CONTR_BASE_BLLG_I1) */
            <!-- END 2019/02/13 K.Fujimoto [QC#29688,ADD] -->
            A.SVC_CONTR_BASE_BLLG_PK
        FROM
            SVC_CONTR_BASE_BLLG A
        WHERE
                A.EZCANCELFLAG      = '0'
            AND A.GLBL_CMPY_CD      = #glblCmpyCd#
            AND A.SVC_CONTR_BLLG_PK = #svcContrBllgPk#
        ORDER BY
            A.SVC_CONTR_BASE_BLLG_PK
    </statement>

    <statement id="getSvcContrMtrBllgPkList" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.SVC_CONTR_MTR_BLLG_PK
        FROM
            SVC_CONTR_MTR_BLLG A
        WHERE
                A.EZCANCELFLAG      = '0'
            AND A.GLBL_CMPY_CD      = #glblCmpyCd#
            AND A.SVC_CONTR_BLLG_PK = #svcContrBllgPk#
        ORDER BY
            A.SVC_CONTR_MTR_BLLG_PK
    </statement>

    <statement id="getSvcContrXsMtrBllgPkList" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.SVC_CONTR_XS_MTR_BLLG_PK
        FROM
            SVC_CONTR_XS_MTR_BLLG A
        WHERE
                A.EZCANCELFLAG      = '0'
            AND A.GLBL_CMPY_CD      = #glblCmpyCd#
            AND A.SVC_CONTR_BLLG_PK = #svcContrBllgPk#
        ORDER BY
            A.SVC_CONTR_XS_MTR_BLLG_PK
    </statement>

    <statement id="getSvcContrAddlChrgBllgPkList" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            <!-- START 2018/10/24 K.Kitachi [QC#28579, ADD] -->
            /*+ INDEX(A SVC_CONTR_ADDL_CHRG_BLLG_I1) */
            <!-- END 2018/10/24 K.Kitachi [QC#28579, ADD] -->
            A.SVC_CONTR_ADDL_CHRG_BLLG_PK
        FROM
            SVC_CONTR_ADDL_CHRG_BLLG A
        WHERE
                A.EZCANCELFLAG      = '0'
            AND A.GLBL_CMPY_CD      = #glblCmpyCd#
            AND A.SVC_CONTR_BLLG_PK = #svcContrBllgPk#
        ORDER BY
            A.SVC_CONTR_ADDL_CHRG_BLLG_PK
    </statement>

    <statement id="getSvcContrBllgAllocPkList" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            <!-- START 2018/10/24 K.Kitachi [QC#28579, ADD] -->
            /*+ INDEX(A SVC_CONTR_BLLG_ALLOC_I3) */
            <!-- END 2018/10/24 K.Kitachi [QC#28579, ADD] -->
            A.SVC_CONTR_BLLG_ALLOC_PK
        FROM
            SVC_CONTR_BLLG_ALLOC A
        WHERE
                A.EZCANCELFLAG      = '0'
            AND A.GLBL_CMPY_CD      = #glblCmpyCd#
            AND A.SVC_CONTR_BLLG_PK = #svcContrBllgPk#
        ORDER BY
            A.SVC_CONTR_BLLG_ALLOC_PK
    </statement>

<!-- START 2022/05/23 K.Kitachi [QC#60054, ADD] -->
    <statement id="getAddlChrgSvcContrBllgPkList" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            /*+ INDEX(A SVC_CONTR_BLLG_I8) */
            A.SVC_CONTR_BLLG_PK
        FROM
            SVC_CONTR_BLLG  A
        WHERE
                A.EZCANCELFLAG           = '0'
            AND A.GLBL_CMPY_CD           = #glblCmpyCd#
            AND A.PRNT_SVC_CONTR_BLLG_PK = #prntSvcContrBllgPk#
            AND A.ADDL_CHRG_FLG          = 'Y'
        UNION
        SELECT
            /*+ INDEX(A SVC_CONTR_BLLG_I8) */
            B.SVC_CONTR_BLLG_PK
        FROM
             SVC_CONTR_BLLG A
            ,SVC_CONTR_BLLG B
        WHERE
                A.EZCANCELFLAG           = '0'
            AND A.GLBL_CMPY_CD           = #glblCmpyCd#
            AND A.PRNT_SVC_CONTR_BLLG_PK = #prntSvcContrBllgPk#
            AND B.EZCANCELFLAG           = '0'
            AND B.GLBL_CMPY_CD           = A.GLBL_CMPY_CD
            AND B.PRNT_SVC_CONTR_BLLG_PK = A.SVC_CONTR_BLLG_PK
            AND B.ADDL_CHRG_FLG          = 'Y'
        ORDER BY
            SVC_CONTR_BLLG_PK
    </statement>
<!-- END 2022/05/23 K.Kitachi [QC#60054, ADD] -->

<!-- START 2018/04/12 M.Naito [QC#23378, MOD] -->
    <statement id="getContrAlloc" parameterClass="Map" resultClass="Map">
        SELECT
            *
        FROM (
            SELECT
                 A.COA_CMPY_CD
                ,A.COA_AFFL_CD
                ,A.COA_BR_CD
                ,A.COA_CH_CD
                ,A.COA_CC_CD
                ,A.COA_ACCT_CD
                ,A.COA_PROD_CD
                ,A.COA_PROJ_CD
                ,A.COA_EXTN_CD
                ,A.PRC_ALLOC_RATE
                ,A.PRC_ALLOC_AMT
                ,DENSE_RANK() OVER (
                    ORDER BY
                         A.SVC_INV_CHRG_TP_CD NULLS LAST
                        ,A.DS_CONTR_DTL_PK    NULLS LAST
                ) AS RANK_NUM
            FROM
                 DS_CONTR_PRC_ALLOC        A
            WHERE
                    A.GLBL_CMPY_CD               =  #glblCmpyCd#
                AND A.EZCANCELFLAG               =  '0'
                AND A.DS_CONTR_PK                =  #dsContrPk#
                AND (
                    (
                            A.DS_CONTR_DTL_PK    =  #dsContrDtlPk#
                        AND A.SVC_INV_CHRG_TP_CD =  #svcInvCrhgTpCd#
                    )
                    OR
                    (
                            A.DS_CONTR_DTL_PK    =  #dsContrDtlPk#
                        AND A.SVC_INV_CHRG_TP_CD IS NULL
                    )
                    OR
                    (
                            A.DS_CONTR_DTL_PK    IS NULL
                        AND A.SVC_INV_CHRG_TP_CD IS NULL
                    )
                )
        ) B
        WHERE
            B.RANK_NUM = 1
        ORDER BY
            B.PRC_ALLOC_RATE DESC
    </statement>
<!-- END 2018/04/12 M.Naito [QC#23378, MOD] -->

    <statement id="getContrAllocBr" parameterClass="Map" resultClass="Map">
        SELECT
            *
        FROM (
            SELECT
                 A.COA_BR_CD
                ,A.PRC_ALLOC_RATE
                ,DENSE_RANK() OVER (
                    ORDER BY
                         A.SVC_INV_CHRG_TP_CD NULLS LAST
                        ,A.DS_CONTR_DTL_PK    NULLS LAST
                ) AS RANK_NUM
            FROM
                 DS_CONTR_BR_ALLOC        A
            WHERE
                    A.GLBL_CMPY_CD               =  #glblCmpyCd#
                AND A.EZCANCELFLAG               =  '0'
                AND A.DS_CONTR_PK                =  #dsContrPk#
                AND (
                    (
                            A.DS_CONTR_DTL_PK    =  #dsContrDtlPk#
                        AND A.SVC_INV_CHRG_TP_CD =  #svcInvCrhgTpCd#
                    )
                    OR
                    (
                            A.DS_CONTR_DTL_PK    =  #dsContrDtlPk#
                        AND A.SVC_INV_CHRG_TP_CD IS NULL
                    )
                    OR
                    (
                            A.DS_CONTR_DTL_PK    IS NULL
                        AND A.SVC_INV_CHRG_TP_CD IS NULL
                    )
                )
        ) B
        WHERE
            B.RANK_NUM = 1
        ORDER BY
            B.PRC_ALLOC_RATE DESC
    </statement>

    <statement  id="getdfrdAcctgRule" parameterClass="Map" resultClass="Map">
        SELECT
             B.DFRD_ACCTG_RULE_CD
            ,B.DFRD_ACCTG_RULE_DURN_AOT
        FROM
             MDSE                       A
            ,DFRD_ACCTG_RULE            B
        WHERE
                A.GLBL_CMPY_CD                  =  #glblCmpyCd#
            AND A.EZCANCELFLAG                  =  '0'
            AND A.MDSE_CD                       =  #mdseCd#
            AND A.GLBL_CMPY_CD                  =  B.GLBL_CMPY_CD
            AND A.DFRD_ACCTG_RULE_CD            =  B.DFRD_ACCTG_RULE_CD
            AND B.EZCANCELFLAG                  =  '0'
    </statement>

    <statement  id="getMtrLbDescTxt" parameterClass="Map" resultClass="Map">
        SELECT
             B.MTR_LB_CD
            ,B.MTR_LB_DESC_TXT
        FROM
             DS_CONTR_BLLG_MTR A
            ,MTR_LB B
        WHERE 
                A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
            AND B.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = B.GLBL_CMPY_CD
            AND A.BLLG_MTR_LB_CD       = B.MTR_LB_CD
    </statement>

    <statement  id="getOrigXsMtrFormCopyQty" parameterClass="Map" resultClass="BigDecimal">
<!-- START 2020/03/18 K.Kitachi [QC#55693, MOD] -->
        SELECT
            C.XS_MTR_COPY_QTY
        FROM
<!--         DS_CONTR_BLLG_SCHD   A -->
<!--        ,DS_CONTR_PRC_EFF     B -->
<!--        ,DS_CONTR_PRC_EFF_MTR C -->
            DS_CONTR_PRC_EFF_MTR C
        WHERE
<!--            A.EZCANCELFLAG          = '0' -->
<!--        AND A.GLBL_CMPY_CD          = #glblCmpyCd# -->
<!--        AND A.DS_CONTR_BLLG_SCHD_PK = #dsContrBllgSchdPk# -->
<!--        AND B.EZCANCELFLAG          = '0' -->
<!--        AND A.GLBL_CMPY_CD          = B.GLBL_CMPY_CD -->
<!--        AND A.DS_CONTR_PRC_EFF_PK   = B.DS_CONTR_PRC_EFF_PK -->
<!--        AND A.DS_CONTR_BLLG_MTR_PK  = B.DS_CONTR_BLLG_MTR_PK -->
<!--        AND C.EZCANCELFLAG          = '0' -->
<!--        AND B.GLBL_CMPY_CD          = C.GLBL_CMPY_CD -->
<!--        AND B.DS_CONTR_PRC_EFF_PK   = C.DS_CONTR_PRC_EFF_PK -->
<!--        AND C.CONTR_XS_COPY_PK      = #contrXsCopyPk# -->
                C.EZCANCELFLAG            = '0'
            AND C.GLBL_CMPY_CD            = #glblCmpyCd#
            AND C.DS_CONTR_PRC_EFF_MTR_PK = #contrXsCopyPk#
<!-- END 2020/03/18 K.Kitachi [QC#55693, MOD] -->
    </statement>

    <statement  id="getCopyInclQty" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            SUM(B.XS_MTR_COPY_QTY)
        FROM
             DS_CONTR_BLLG_SCHD_SMRY A
            ,DS_CONTR_BLLG_SCHD_MTR  B
        WHERE
                A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK            = #dsContrDtlPk#
            AND A.BLLG_SCHD_FROM_DT      &lt;= #bllgThruDt#
            AND A.BLLG_SCHD_THRU_DT      &gt;= #bllgThruDt#
            AND A.DS_CONTR_PRC_EFF_PK        IS NOT NULL
            AND A.EZCANCELFLAG               = '0'
            AND A.GLBL_CMPY_CD               = B.GLBL_CMPY_CD
            AND A.DS_CONTR_BLLG_SCHD_SMRY_PK = B.DS_CONTR_BLLG_SCHD_SMRY_PK
            AND A.DS_CONTR_BLLG_MTR_PK       = B.DS_CONTR_BLLG_MTR_PK
            AND B.XS_MTR_FIRST_FLG           = 'Y'
            AND B.EZCANCELFLAG               = '0'
    </statement>

    <statement  id="getFleetMachInfo" parameterClass="Map" resultClass="Map">
        SELECT
             A.DS_CONTR_PK
            ,A.DS_CONTR_DTL_PK
            ,D.TOC_CD
            ,A.SVC_MACH_MSTR_PK
            ,B.MDSE_CD
            ,E.MDSE_NM
            ,B.SER_NUM
            ,B.CTRL_FLD_TXT_01
            ,B.CTRL_FLD_TXT_02
            ,B.CTRL_FLD_TXT_03
            ,B.CTRL_FLD_TXT_04
            ,B.CTRL_FLD_TXT_05
            ,B.CTRL_FLD_TXT_06
            ,G.T_MDL_ID        MDL_ID
            ,G.T_MDL_NM        MDL_NM
        FROM
             DS_CONTR_DTL    A
            ,SVC_MACH_MSTR   B
            ,DS_CONTR_DTL_TP C
            ,DS_CONTR        D
            ,MDSE            E
            ,SVC_CONFIG_MSTR F
            ,MDL_NM          G
        WHERE
                A.EZCANCELFLAG       = '0'
            AND A.GLBL_CMPY_CD       = #glblCmpyCd#
            AND A.DS_CONTR_PK        = #dsContrPk#
            AND A.DS_CONTR_DTL_STS_CD   &lt;&gt; #dsContrDtlStsCd#
            AND A.CONTR_EFF_FROM_DT     &lt;= #slsDt#
            AND (
                    (CONTR_CLO_DT IS NULL
                    AND
                    A.CONTR_EFF_THRU_DT &gt;= #slsDt#)
                OR
                    (CONTR_CLO_DT IS NOT NULL
                    AND
                    A.CONTR_CLO_DT      &gt;= #slsDt#)
                )
            AND B.EZCANCELFLAG       = '0'
            AND A.GLBL_CMPY_CD       = B.GLBL_CMPY_CD
            AND A.SVC_MACH_MSTR_PK   = B.SVC_MACH_MSTR_PK
            AND C.EZCANCELFLAG       = '0'
            AND A.GLBL_CMPY_CD       = C.GLBL_CMPY_CD
            AND A.DS_CONTR_DTL_TP_CD = C.DS_CONTR_DTL_TP_CD
            AND C.MAIN_UNIT_LINE_FLG = 'Y'
        <isEqual property="baseChrgFlg" compareValue="Y">
            AND C.BASE_CHRG_FLG      = #baseChrgFlg#
        </isEqual>
        <isEqual property="usgChrgFlg" compareValue="Y">
            AND C.USG_CHRG_FLG       = #usgChrgFlg#
        </isEqual>
            AND D.EZCANCELFLAG       = '0'
            AND A.GLBL_CMPY_CD       = D.GLBL_CMPY_CD
            AND A.DS_CONTR_PK        = D.DS_CONTR_PK
            AND E.EZCANCELFLAG       = '0'
            AND B.GLBL_CMPY_CD       = E.GLBL_CMPY_CD
            AND B.MDSE_CD            = E.MDSE_CD
            AND F.EZCANCELFLAG       = '0'
            <!-- START 2018/04/02 K.Kitachi [QC#24973, MOD] -->
            AND A.GLBL_CMPY_CD       = F.GLBL_CMPY_CD
            AND A.SVC_CONFIG_MSTR_PK = F.SVC_CONFIG_MSTR_PK
            <!-- END 2018/04/02 K.Kitachi [QC#24973, MOD] -->
            AND G.EZCANCELFLAG       = '0'
            AND F.GLBL_CMPY_CD       = G.T_GLBL_CMPY_CD
            AND F.MDL_ID             = G.T_MDL_ID
            <!-- START 2017/11/17 K.Kojima [QC#21918,MOD] -->
            AND B.FIN_BR_CD IS NOT NULL
            <!-- END 2017/11/17 K.Kojima [QC#21918,MOD] -->
        ORDER BY
            A.DS_CONTR_DTL_PK
    </statement>
    <statement  id="getPrntSvcInvLinePk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             A.SVC_INV_LINE_PK
        FROM
             SVC_INV_LINE     A
        WHERE
                A.EZCANCELFLAG      = '0'
            AND A.GLBL_CMPY_CD      = #glblCmpyCd#
            AND A.SVC_CONTR_BLLG_PK = #svcContrBllgPk#
            <!-- START 2018/08/07 K.Kojima [QC#27510,ADD] -->
            AND A.SVC_INV_NUM       = #svcInvNum#
            <!-- END 2018/08/07 K.Kojima [QC#27510,ADD] -->
    </statement>

    <statement id="getDsContrBllgSchdPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             A.DS_CONTR_BLLG_SCHD_PK
        FROM
             DS_CONTR_BLLG_SCHD      A
        WHERE
                A.EZCANCELFLAG                     = '0'
            AND A.GLBL_CMPY_CD                     = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK                  = #dsContrDtlPk#
            AND NVL(A.RVS_SCHD_DT, A.NEXT_BLLG_DT) = #nextBllgDt#
            <!-- START 2018/04/22 T.Tomita [QC#25452, ADD] -->
            AND A.BLLBL_FLG                        = 'Y'
            <!-- END 2018/04/22 T.Tomita [QC#25452, ADD] -->
            <!-- START 2018/11/12 K.Kitachi [QC#29103, ADD] -->
            AND A.INV_FLG                          = 'N'
            <!-- END 2018/11/12 K.Kitachi [QC#29103, ADD] -->
        <isEqual property="baseChrgFlg" compareValue="Y">
            AND A.BASE_CHRG_FLG                    = 'Y'
        </isEqual>
        <isEqual property="baseChrgFlg" compareValue="N">
            AND A.USG_CHRG_FLG                     = 'Y'
        </isEqual>
        <isNull property="svcCrRebilDtlPk">
            AND A.SVC_CR_REBIL_DTL_PK              IS NULL
        </isNull>
        <isNotNull property="svcCrRebilDtlPk">
            AND A.SVC_CR_REBIL_DTL_PK              = #svcCrRebilDtlPk#
        </isNotNull>
        <!-- START 2018/08/24 K.Kojima [QC#27922,ADD] -->
        <isNotNull property="aggFlg">
            AND NOT EXISTS(
               SELECT
                   1
               FROM
                   DS_CONTR_BLLG_SCHD B
               WHERE
                       A.GLBL_CMPY_CD               = B.GLBL_CMPY_CD
                   AND A.PRNT_DS_CONTR_BLLG_SCHD_PK = B.DS_CONTR_BLLG_SCHD_PK
                   AND B.INV_FLG                    = 'Y'
                   AND B.EZCANCELFLAG               = '0'
            )
        </isNotNull>
        <!-- START 2019/10/09 [QC#54058,ADD] -->
            AND A.INV_TP_CD                         = #invTpCd#
        <!-- END 2019/10/09 [QC#54058,ADD] -->
        <!-- END 2018/08/24 K.Kojima [QC#27922,ADD] -->
    </statement>

    <statement id="getOrigPmtTermInfo" parameterClass="Map" resultClass="Map">
        SELECT
             A.PMT_TERM_CASH_DISC_CD
            ,B.PMT_CC_FLG
        FROM
             SVC_INV            A
            ,PMT_TERM_CASH_DISC B
        WHERE
                A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.SVC_INV_NUM           = #origSvcInvNum#
            AND B.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = B.GLBL_CMPY_CD
            AND A.PMT_TERM_CASH_DISC_CD = B.PMT_TERM_CASH_DISC_CD
    </statement>

    <statement id="getPmtTermInfo" parameterClass="Map" resultClass="Map">
        SELECT
             A.PMT_TERM_CASH_DISC_CD
            ,A.PMT_TERM_CASH_DISC_DESC_TXT
            ,A.PMT_TERM_CD
            ,NVL(B.PMT_TERM_AOT, 0) AS PMT_TERM_AOT
        FROM
             PMT_TERM_CASH_DISC A
            ,PMT_TERM           B
        WHERE
                A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.PMT_TERM_CASH_DISC_CD = #pmtTermCashDiscCd#
            AND B.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = B.GLBL_CMPY_CD
            AND A.PMT_TERM_CD           = B.PMT_TERM_CD
    </statement>

    <statement id="getSellToCustByBillToCust" parameterClass="Map" resultClass="String">
        SELECT
            A.SELL_TO_CUST_CD
        FROM
             BILL_TO_CUST    A
        WHERE
                A.GLBL_CMPY_CD      = #glblCmpyCd#
            AND A.EZCANCELFLAG      = '0'
            AND A.BILL_TO_CUST_CD   = #billToCustCd#
    </statement>

    <!-- START   2019/09/11 K.Fujimoto [QC#53265, ADD] -->    
    <statement id="getSellToCustByShipToCust" parameterClass="Map" resultClass="String">
        SELECT
            A.SELL_TO_CUST_CD
        FROM
             SHIP_TO_CUST    A
        WHERE
                A.GLBL_CMPY_CD      = #glblCmpyCd#
            AND A.EZCANCELFLAG      = '0'
            AND A.SHIP_TO_CUST_CD   = #shipToCustCd#
    </statement>
    <!-- END     2019/09/11 K.Fujimoto [QC#53265, ADD] -->
    
    <statement id="hasSameBillToCust" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            NVL(COUNT(*), 0)    AS SAME_BILL_TO
        FROM
             DS_CONTR_DTL      A
            ,DS_CONTR_BLLG_MTR B
        WHERE
                A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.EZCANCELFLAG          = '0'
            AND A.DS_CONTR_DTL_PK       = #dsContrDtlPk#
            AND A.BASE_BILL_TO_CUST_CD  = #billToCustCd#
            AND A.GLBL_CMPY_CD          = B.GLBL_CMPY_CD
            AND A.DS_CONTR_DTL_PK       = B.DS_CONTR_DTL_PK
            AND A.BASE_BILL_TO_CUST_CD  = B.BLLG_MTR_BILL_TO_CUST_CD
            AND A.EZCANCELFLAG          = '0'
    </statement>

    <statement id="getAddlChrgInvTpCd" parameterClass="Map" resultClass="String">
        SELECT
             C.ADDL_CHRG_INV_TP_CD
        FROM
             SVC_CONTR_ADDL_CHRG_BLLG  A
            ,SVC_CONTR_BLLG            B
            ,DS_CONTR_ADDL_CHRG        C
        WHERE
                A.GLBL_CMPY_CD                 = #glblCmpyCd#
            AND A.SVC_CONTR_ADDL_CHRG_BLLG_PK  = #svcContrAddlChrgBllgPk#
            AND A.EZCANCELFLAG                 = '0'
            AND A.GLBL_CMPY_CD                 = B.GLBL_CMPY_CD
            AND A.SVC_CONTR_BLLG_PK            = B.SVC_CONTR_BLLG_PK
            AND B.EZCANCELFLAG                 = '0'
            AND B.GLBL_CMPY_CD                 = C.GLBL_CMPY_CD
            AND B.DS_CONTR_ADDL_CHRG_PK        = C.DS_CONTR_ADDL_CHRG_PK
            AND C.EZCANCELFLAG                 = '0'
    </statement>

    <statement id="getRolloverExchange" parameterClass="Map" resultClass="String">
        SELECT DISTINCT
             D.CNTR_RESET_TP_CD
        FROM
            <!-- START 2018/07/09 K.Kojima [QC#23685-1,MOD] -->
            <!--  DS_CONTR_DTL             A -->
            <!-- ,CONTR_PHYS_BLLG_MTR_RELN B -->
             CONTR_PHYS_BLLG_MTR_RELN B
            <!-- END 2018/07/09 K.Kojima [QC#23685-1,MOD] -->
            ,SVC_INV_LINE_MTR         C
            ,SVC_PHYS_MTR_READ        D
            ,SVC_PHYS_MTR_READ        PRE
            ,SVC_PHYS_MTR_READ        CUR
        WHERE
            <!-- START 2018/07/09 K.Kojima [QC#23685-1,MOD] -->
            <!--     A.GLBL_CMPY_CD                 = #glblCmpyCd# -->
            <!-- AND A.DS_CONTR_DTL_PK              = #dsContrDtlPk# -->
            <!-- AND A.EZCANCELFLAG                 = '0' -->
            <!-- AND A.GLBL_CMPY_CD                 = B.GLBL_CMPY_CD -->
            <!-- AND A.DS_CONTR_DTL_PK              = B.DS_CONTR_DTL_PK -->
            <!-- AND B.EZCANCELFLAG                 = '0' -->
                B.GLBL_CMPY_CD                 = #glblCmpyCd#
            AND B.DS_CONTR_DTL_PK              = #dsContrDtlPk#
            AND B.EZCANCELFLAG                 = '0'
            <!-- END 2018/07/09 K.Kojima [QC#23685-1,MOD] -->
            AND B.GLBL_CMPY_CD                 = C.GLBL_CMPY_CD
            AND B.BLLG_MTR_LB_CD               = C.MTR_LB_CD
            AND C.SVC_INV_LINE_PK              = #svcInvLinePk#
            AND C.EZCANCELFLAG                 = '0'
            AND C.GLBL_CMPY_CD                 = D.GLBL_CMPY_CD
            AND B.SVC_PHYS_MTR_PK              = D.SVC_PHYS_MTR_PK
<!-- mod start 2018/06/04 QC#26052 -->
<!--             AND D.CNTR_RESET_TP_CD             IN (#cntrResetTpCd_Rollover#, #cntrResetTpCd_Exchange#) -->
            <!-- mod start 2020/04/24 QC#56678 -->
            <!--AND ((D.CNTR_RESET_TP_CD  = #cntrResetTpCd_Rollover#  AND D.DS_MTR_READ_TP_GRP_CD = #billableReads#) -->
            <!-- OR  (D.CNTR_RESET_TP_CD  = #cntrResetTpCd_Exchange#)) -->
            AND D.CNTR_RESET_TP_CD             IN (#cntrResetTpCd_Rollover#, #cntrResetTpCd_Exchange#)
            AND D.DS_MTR_READ_TP_GRP_CD        = #billableReads#
            AND D.CARRY_OVER_TP_CD             = '0'
            <!-- mod end 2020/04/24 QC#56678 -->
<!-- mod end 2018/06/04 QC#26052 -->
            AND D.VLD_MTR_FLG                  = 'Y'
            AND D.EZCANCELFLAG                 = '0'
            AND D.GLBL_CMPY_CD                 = PRE.GLBL_CMPY_CD
            AND D.SVC_PHYS_MTR_PK              = PRE.SVC_PHYS_MTR_PK
            AND C.PREV_PHYS_MTR_READ_GRP_SQ    = PRE.SVC_PHYS_MTR_READ_GRP_SQ
            AND PRE.EZCANCELFLAG               = '0'
            AND D.GLBL_CMPY_CD                 = CUR.GLBL_CMPY_CD
            AND D.SVC_PHYS_MTR_PK              = CUR.SVC_PHYS_MTR_PK
            AND C.SVC_PHYS_MTR_READ_GRP_SQ     = CUR.SVC_PHYS_MTR_READ_GRP_SQ
            AND CUR.EZCANCELFLAG               = '0'
            AND (
                    (    D.MTR_READ_DT               =     PRE.MTR_READ_DT
                     AND D.SVC_PHYS_MTR_READ_GRP_SQ  &gt;  PRE.SVC_PHYS_MTR_READ_GRP_SQ)
                 OR
                    (    D.MTR_READ_DT               &gt;  PRE.MTR_READ_DT
                     AND D.MTR_READ_DT               &lt;  CUR.MTR_READ_DT)
                 OR
                    (    D.MTR_READ_DT               =     CUR.MTR_READ_DT
                     AND D.SVC_PHYS_MTR_READ_GRP_SQ  &lt;= CUR.SVC_PHYS_MTR_READ_GRP_SQ)
            )
    </statement>

    <!-- START 2017/11/17 K.Kojima [QC#21918,ADD] -->
    <statement id="getSalesRep" parameterClass="Map" resultClass="String">
        <!-- START 2018/09/10 K.Kitachi [QC#26260, MOD] -->
        <!-- SELECT -->
        <!--     SCB.TOC_CD -->
        <!-- FROM -->
        <!--      SVC_MACH_MSTR          SMM -->
        <!--     ,COA_BR                 CBR -->
        <!--     ,SUB_CONTR_BR_MAP       SCB -->
        <!-- WHERE -->
        <!--         SMM.GLBL_CMPY_CD     = #glblCmpyCd# -->
        <!--     AND SMM.SVC_MACH_MSTR_PK = #svcMachMstrPk# -->
        <!--     AND SMM.EZCANCELFLAG     = '0' -->
        <!--     AND SMM.GLBL_CMPY_CD     = CBR.GLBL_CMPY_CD -->
        <!--     AND SMM.FIN_BR_CD        = CBR.COA_BR_CD -->
        <!--     AND CBR.EZCANCELFLAG     = '0' -->
        <!--     AND CBR.GLBL_CMPY_CD     = SCB.GLBL_CMPY_CD -->
        <!--     AND CBR.COA_BR_CD        = SCB.SVC_CONTR_BR_CD -->
            <!-- START 2018/01/09 M.Kidokoro [QC#20635,ADD] -->
        <!--     AND SCB.SVC_LINE_BIZ_CD  = SMM.SVC_BY_LINE_BIZ_TP_CD -->
            <!-- END 2018/01/09 M.Kidokoro [QC#20635,ADD] -->
        <!--     AND SCB.ENBL_FLG         = #flgY# -->
        <!--     AND SCB.EZCANCELFLAG     = '0' -->
        <!-- ORDER BY -->
        <!--     SCB.TOC_CD -->
        SELECT
            NVL(SCB2.TOC_CD, SCB.TOC_CD) TOC_CD
        FROM
             SVC_MACH_MSTR          SMM
            ,COA_BR                 CBR
            ,SUB_CONTR_BR_MAP       SCB
            ,SUB_CONTR_BR_MAP       SCB2
        WHERE
                SMM.GLBL_CMPY_CD              = #glblCmpyCd#
            AND SMM.SVC_MACH_MSTR_PK          = #svcMachMstrPk#
            AND SMM.EZCANCELFLAG              = '0'
            AND SMM.GLBL_CMPY_CD              = CBR.GLBL_CMPY_CD
            AND SMM.FIN_BR_CD                 = CBR.COA_BR_CD
            AND CBR.EZCANCELFLAG              = '0'
            AND CBR.GLBL_CMPY_CD              = SCB.GLBL_CMPY_CD     (+)
            AND CBR.COA_BR_CD                 = SCB.SVC_CONTR_BR_CD  (+)
            AND SMM.SVC_BY_LINE_BIZ_TP_CD     = SCB.SVC_LINE_BIZ_CD  (+)
            AND SCB.ENBL_FLG              (+) = #flgY#
            AND SCB.EZCANCELFLAG          (+) = '0'
            AND CBR.GLBL_CMPY_CD              = SCB2.GLBL_CMPY_CD    (+)
            AND CBR.COA_BR_CD                 = SCB2.SVC_CONTR_BR_CD (+)
            AND SMM.SLD_BY_LINE_BIZ_TP_CD     = SCB2.SVC_LINE_BIZ_CD (+)
            AND SCB2.ENBL_FLG             (+) = #flgY#
            AND SCB2.EZCANCELFLAG         (+) = '0'
        <!-- END 2018/09/10 K.Kitachi [QC#26260, MOD] -->
    </statement>
    <statement id="getSalesRepForAddl" parameterClass="Map" resultClass="String">
        <!-- START 2018/09/10 K.Kitachi [QC#26260, MOD] -->
        <!-- SELECT -->
        <!--     SCBM.TOC_CD -->
        <!-- FROM -->
        <!--      SVC_CONTR_ADDL_CHRG_BLLG SCACB -->
        <!--     ,SVC_CONTR_BLLG           SCB -->
        <!--     ,DS_CONTR_DTL             DCD -->
        <!--     ,SVC_MACH_MSTR            SMM -->
        <!--     ,COA_BR                   CB -->
        <!--     ,SUB_CONTR_BR_MAP         SCBM -->
        <!-- WHERE -->
        <!--         SCACB.GLBL_CMPY_CD                = #glblCmpyCd# -->
        <!--     AND SCACB.SVC_CONTR_ADDL_CHRG_BLLG_PK = #svcContrAddlChrgBllgPk# -->
        <!--     AND SCACB.EZCANCELFLAG                = '0' -->
        <!--     AND SCACB.GLBL_CMPY_CD                = SCB.GLBL_CMPY_CD -->
        <!--     AND SCACB.SVC_CONTR_BLLG_PK           = SCB.SVC_CONTR_BLLG_PK -->
        <!--     AND SCB.EZCANCELFLAG                  = '0' -->
        <!--     AND SCB.GLBL_CMPY_CD                  = DCD.GLBL_CMPY_CD -->
        <!--     AND SCB.DS_CONTR_DTL_PK               = DCD.DS_CONTR_DTL_PK -->
        <!--     AND DCD.EZCANCELFLAG                  = '0' -->
        <!--     AND DCD.GLBL_CMPY_CD                  = SMM.GLBL_CMPY_CD -->
        <!--     AND DCD.SVC_MACH_MSTR_PK              = SMM.SVC_MACH_MSTR_PK -->
        <!--     AND SMM.EZCANCELFLAG                  = '0' -->
        <!--     AND SMM.GLBL_CMPY_CD                  = CB.GLBL_CMPY_CD -->
        <!--     AND SMM.FIN_BR_CD                     = CB.COA_BR_CD -->
        <!--     AND CB.EZCANCELFLAG                   = '0' -->
        <!--     AND CB.GLBL_CMPY_CD                   = SCBM.GLBL_CMPY_CD -->
        <!--     AND CB.COA_BR_CD                      = SCBM.SVC_CONTR_BR_CD -->
            <!-- START 2018/01/09 M.Kidokoro [QC#20635,ADD] -->
        <!--     AND SCBM.SVC_LINE_BIZ_CD              = SMM.SVC_BY_LINE_BIZ_TP_CD -->
            <!-- END 2018/01/09 M.Kidokoro [QC#20635,ADD] -->
        <!--     AND SCBM.ENBL_FLG                     = #flgY# -->
        <!--     AND SCBM.EZCANCELFLAG                 = '0' -->
        <!-- ORDER BY -->
        <!--     SCBM.TOC_CD -->
        SELECT
            NVL(SCBM2.TOC_CD, SCBM.TOC_CD) TOC_CD
        FROM
             SVC_CONTR_ADDL_CHRG_BLLG SCACB
            ,SVC_CONTR_BLLG           SCB
            ,DS_CONTR_DTL             DCD
            ,SVC_MACH_MSTR            SMM
            ,COA_BR                   CB
            ,SUB_CONTR_BR_MAP         SCBM
            ,SUB_CONTR_BR_MAP         SCBM2
        WHERE
                SCACB.GLBL_CMPY_CD                     = #glblCmpyCd#
            AND SCACB.SVC_CONTR_ADDL_CHRG_BLLG_PK      = #svcContrAddlChrgBllgPk#
            AND SCACB.EZCANCELFLAG                     = '0'
            AND SCACB.GLBL_CMPY_CD                     = SCB.GLBL_CMPY_CD
            AND SCACB.SVC_CONTR_BLLG_PK                = SCB.SVC_CONTR_BLLG_PK
            AND SCB.EZCANCELFLAG                       = '0'
            AND SCB.GLBL_CMPY_CD                       = DCD.GLBL_CMPY_CD
            AND SCB.DS_CONTR_DTL_PK                    = DCD.DS_CONTR_DTL_PK
            AND DCD.EZCANCELFLAG                       = '0'
            AND DCD.GLBL_CMPY_CD                       = SMM.GLBL_CMPY_CD
            AND DCD.SVC_MACH_MSTR_PK                   = SMM.SVC_MACH_MSTR_PK
            AND SMM.EZCANCELFLAG                       = '0'
            AND SMM.GLBL_CMPY_CD                       = CB.GLBL_CMPY_CD
            AND SMM.FIN_BR_CD                          = CB.COA_BR_CD
            AND CB.EZCANCELFLAG                        = '0'
            AND CB.GLBL_CMPY_CD                        = SCBM.GLBL_CMPY_CD        (+)
            AND CB.COA_BR_CD                           = SCBM.SVC_CONTR_BR_CD     (+)
            AND SMM.SVC_BY_LINE_BIZ_TP_CD              = SCBM.SVC_LINE_BIZ_CD     (+)
            AND SCBM.ENBL_FLG                      (+) = #flgY#
            AND SCBM.EZCANCELFLAG                  (+) = '0'
            AND CB.GLBL_CMPY_CD                        = SCBM2.GLBL_CMPY_CD       (+)
            AND CB.COA_BR_CD                           = SCBM2.SVC_CONTR_BR_CD    (+)
            AND SMM.SLD_BY_LINE_BIZ_TP_CD              = SCBM2.SVC_LINE_BIZ_CD    (+)
            AND SCBM2.ENBL_FLG                     (+) = #flgY#
            AND SCBM2.EZCANCELFLAG                 (+) = '0'
        <!-- END 2018/09/10 K.Kitachi [QC#26260, MOD] -->
    </statement>
    <!-- END 2017/11/17 K.Kojima [QC#21918,ADD] -->
    <!-- START 2018/04/02 K.Kitachi [QC#24973, ADD] -->
    <!-- START 2019/10/29 K.Kitachi [QC#54203, DEL] -->
    <!-- <statement id="getMdlInfo" parameterClass="Map" resultClass="Map"> -->
    <!--     SELECT -->
    <!--          MNM.T_MDL_ID MDL_ID -->
    <!--         ,MNM.T_MDL_NM MDL_NM -->
    <!--     FROM -->
    <!--          DS_CONTR_DTL        DCD -->
    <!--         ,SVC_CONFIG_MSTR_DTL SCMD -->
    <!--         ,MDL_NM              MNM -->
    <!--     WHERE -->
    <!--             DCD.GLBL_CMPY_CD       = #glblCmpyCd# -->
    <!--         AND DCD.DS_CONTR_DTL_PK    = #dsContrDtlPk# -->
    <!--         AND DCD.EZCANCELFLAG       = '0' -->
    <!--         AND DCD.GLBL_CMPY_CD       = SCMD.GLBL_CMPY_CD -->
    <!--         AND DCD.SVC_CONFIG_MSTR_PK = SCMD.SVC_CONFIG_MSTR_PK -->
    <!--         AND DCD.SVC_MACH_MSTR_PK   = SCMD.SVC_MACH_MSTR_PK -->
    <!--         AND SCMD.EZCANCELFLAG      = '0' -->
    <!--         AND SCMD.GLBL_CMPY_CD      = MNM.T_GLBL_CMPY_CD -->
    <!--         AND SCMD.MDL_ID            = MNM.T_MDL_ID -->
    <!--         AND MNM.EZCANCELFLAG       = '0' -->
    <!--     ORDER BY -->
    <!--         SCMD.RGTN_CONFIG_DT DESC -->
    <!-- </statement> -->
    <!-- END 2019/10/29 K.Kitachi [QC#54203, DEL] -->
    <!-- END 2018/04/02 K.Kitachi [QC#24973, ADD] -->
    <!-- START 2018/05/14 K.Kitachi [QC#23541, ADD] -->
    <statement id="getAggLineUsgRecalInfo" parameterClass="Map" resultClass="Map">
        <!-- START 2018/06/05 K.Kojima [QC#21974,MOD] -->
        <!-- SELECT -->
        <!--      BM2.DS_CONTR_BLLG_MTR_PK -->
        <!--     ,AUR.BLLG_FREE_COPY_CNT -->
        <!--     ,AUR.ROLL_OVER_CNT -->
        <!--     ,AUR.USG_FREE_COPY_CNT -->
        <!--     ,AUR.ROLL_OVER_RATIO -->
        <!-- FROM -->
        <!--      DS_CONTR_BLLG_MTR BM1 -->
        <!--     ,DS_CONTR_DTL      DTL -->
        <!--     ,DS_CONTR_BLLG_MTR BM2 -->
        <!--     ,AGGR_USG_RECAL    AUR -->
        <!-- WHERE -->
        <!--         BM1.GLBL_CMPY_CD             = #glblCmpyCd# -->
        <!--     AND BM1.DS_CONTR_BLLG_MTR_PK     = #dsContrBllgMtrPk# -->
        <!--     AND BM1.EZCANCELFLAG             = '0' -->
        <!--     AND BM1.GLBL_CMPY_CD             = DTL.GLBL_CMPY_CD -->
        <!--     AND BM1.DS_CONTR_DTL_PK          = DTL.DS_CONTR_DTL_PK -->
        <!--     AND DTL.EZCANCELFLAG             = '0' -->
        <!--     AND DTL.GLBL_CMPY_CD             = BM2.GLBL_CMPY_CD -->
        <!--     AND DTL.PRNT_DS_CONTR_DTL_PK     = BM2.DS_CONTR_DTL_PK -->
        <!--     AND BM1.BLLG_MTR_LB_CD           = BM2.BLLG_MTR_LB_CD -->
        <!--     AND BM2.EZCANCELFLAG             = '0' -->
        <!--     AND DTL.GLBL_CMPY_CD             = AUR.GLBL_CMPY_CD -->
        <!--     AND DTL.DS_CONTR_PK              = AUR.DS_CONTR_PK -->
        <!--     AND BM1.BLLG_MTR_LB_CD           = AUR.BLLG_MTR_LB_CD -->
        <!--     AND AUR.BLLG_FROM_DT         &lt;= #svcContrBllgThruDt# -->
        <!--     AND AUR.BLLG_THRU_DT         &gt;= #svcContrBllgThruDt# -->
        <!--     AND AUR.EZCANCELFLAG             = '0' -->
        SELECT
             DCBM.DS_CONTR_BLLG_MTR_PK AS DS_CONTR_BLLG_MTR_PK
            ,AUR.BLLG_FREE_COPY_CNT    AS BLLG_FREE_COPY_CNT
            ,AUR.ROLL_OVER_CNT         AS ROLL_OVER_CNT
            ,AUR.USG_FREE_COPY_CNT     AS USG_FREE_COPY_CNT
            ,AUR.ROLL_OVER_RATIO       AS ROLL_OVER_RATIO
        FROM
             SVC_CONTR_BLLG     SCB
            ,SVC_CONTR_BLLG     SCBP
            ,DS_CONTR_BLLG_SCHD DCBS
            ,DS_CONTR_BLLG_MTR  DCBM
            ,AGGR_USG_RECAL     AUR
        WHERE
                SCB.GLBL_CMPY_CD           = #glblCmpyCd#
            AND SCB.SVC_CONTR_BLLG_PK      = #svcContrBllgPk#
            AND SCB.EZCANCELFLAG           = '0'
            AND SCB.GLBL_CMPY_CD           = SCBP.GLBL_CMPY_CD
            AND SCB.PRNT_SVC_CONTR_BLLG_PK = SCBP.SVC_CONTR_BLLG_PK
            AND SCBP.EZCANCELFLAG          = '0'
            AND SCBP.GLBL_CMPY_CD          = DCBS.GLBL_CMPY_CD
            AND SCBP.DS_CONTR_BLLG_SCHD_PK = DCBS.DS_CONTR_BLLG_SCHD_PK
            AND DCBS.EZCANCELFLAG          = '0'
            AND DCBS.GLBL_CMPY_CD          = DCBM.GLBL_CMPY_CD
            AND DCBS.DS_CONTR_BLLG_MTR_PK  = DCBM.DS_CONTR_BLLG_MTR_PK
            AND DCBM.EZCANCELFLAG          = '0'
            AND SCBP.GLBL_CMPY_CD          = AUR.GLBL_CMPY_CD
            AND SCBP.SVC_CONTR_BLLG_GRP_SQ = AUR.SVC_CONTR_BLLG_GRP_SQ
            AND DCBM.BLLG_MTR_LB_CD        = AUR.BLLG_MTR_LB_CD
            AND AUR.EZCANCELFLAG           = '0'
        <!-- END 2018/06/05 K.Kojima [QC#21974,MOD] -->
    </statement>
    <!-- END 2018/05/14 K.Kitachi [QC#23541, ADD] -->
    <!-- START 2018/06/05 K.Kojima [QC#21974,ADD] -->
    <statement id="getAggLineUsgRecalInfoForCreditInvoice" parameterClass="Map" resultClass="Map">
        SELECT
             DCBMU.DS_CONTR_BLLG_MTR_PK AS DS_CONTR_BLLG_MTR_PK
            ,DCBMU.FREE_COPY_CNT        AS BLLG_FREE_COPY_CNT
            ,DCBMU.ROLL_OVER_CNT        AS ROLL_OVER_CNT
            ,DCBMU.USG_FREE_COPY_CNT    AS USG_FREE_COPY_CNT
            ,DCBMU.ROLL_OVER_RATIO      AS ROLL_OVER_RATIO
        FROM
             SVC_CONTR_BLLG         SCB
            ,SVC_CONTR_BLLG         SCBP
            ,DS_CONTR_BLLG_SCHD     DCBS
            ,DS_CONTR_BLLG_SCHD     DCBSO
            ,DS_CONTR_BLLG_MTR_USED DCBMU
        WHERE
                SCB.GLBL_CMPY_CD                = #glblCmpyCd#
            AND SCB.SVC_CONTR_BLLG_PK           = #svcContrBllgPk#
            AND SCB.EZCANCELFLAG                = '0'
            AND SCB.GLBL_CMPY_CD                = SCBP.GLBL_CMPY_CD
            AND SCB.PRNT_SVC_CONTR_BLLG_PK      = SCBP.SVC_CONTR_BLLG_PK
            AND SCBP.EZCANCELFLAG               = '0'
            AND SCBP.GLBL_CMPY_CD               = DCBS.GLBL_CMPY_CD
            AND SCBP.DS_CONTR_BLLG_SCHD_PK      = DCBS.DS_CONTR_BLLG_SCHD_PK
            AND DCBS.EZCANCELFLAG               = '0'
            AND DCBS.GLBL_CMPY_CD               = DCBSO.GLBL_CMPY_CD
            AND DCBS.ORIG_DS_CONTR_BLLG_SCHD_PK = DCBSO.DS_CONTR_BLLG_SCHD_PK
            AND DCBSO.EZCANCELFLAG              = '0'
            AND DCBSO.GLBL_CMPY_CD              = DCBMU.GLBL_CMPY_CD
            AND DCBSO.DS_CONTR_BLLG_SCHD_PK     = DCBMU.DS_CONTR_BLLG_SCHD_PK
            AND DCBMU.EZCANCELFLAG              = '0'
    </statement>
    <!-- END 2018/06/05 K.Kojima [QC#21974,ADD] -->
<!-- START 2018/09/19 T.Tomita [QC#28171, ADD] -->
    <statement id="getContrBrAlloc" parameterClass="Map" resultClass="Map">
        SELECT
            *
        FROM (
            SELECT
                 A.COA_BR_CD
                ,A.PRC_ALLOC_RATE
                ,DENSE_RANK() OVER (
                    ORDER BY
                         A.SVC_INV_CHRG_TP_CD NULLS LAST
                        ,A.DS_CONTR_DTL_PK    NULLS LAST
                ) AS RANK_NUM
            FROM
                 DS_CONTR_BR_ALLOC        A
            WHERE
                    A.GLBL_CMPY_CD               =  #glblCmpyCd#
                AND A.EZCANCELFLAG               =  '0'
                AND A.DS_CONTR_PK                =  #dsContrPk#
                AND (
                    (
                            A.DS_CONTR_DTL_PK    =  #dsContrDtlPk#
                        AND A.SVC_INV_CHRG_TP_CD =  #svcInvCrhgTpCd#
                    )
                    OR
                    (
                            A.DS_CONTR_DTL_PK    =  #dsContrDtlPk#
                        AND A.SVC_INV_CHRG_TP_CD IS NULL
                    )
                    OR
                    (
                            A.DS_CONTR_DTL_PK    IS NULL
                        AND A.SVC_INV_CHRG_TP_CD IS NULL
                    )
                )
        ) B
        WHERE
            B.RANK_NUM = 1
        ORDER BY
             B.PRC_ALLOC_RATE DESC
            ,B.COA_BR_CD
    </statement>
<!-- END 2018/09/19 T.Tomita [QC#28171, ADD] -->
    <!-- START 2018/11/05 K.Kitachi [QC#28627, ADD] -->
    <statement id="countHldHdrByLinkNum" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(1)
        FROM
             DS_CONTR       DC
            ,DS_CONTR_STS_V STS
        WHERE
                DC.GLBL_CMPY_CD          = #glblCmpyCd#
            AND DC.CONTR_LINK_NUM        = #contrLinkNum#
            AND DC.EZCANCELFLAG          = '0'
            AND DC.GLBL_CMPY_CD          = STS.GLBL_CMPY_CD
            AND DC.DS_CONTR_PK           = STS.DS_CONTR_PK
            AND STS.DS_CONTR_CTRL_STS_CD = #dsContrCtrlStsCd#
            AND STS.EZCANCELFLAG         = '0'
            AND ROWNUM                   = 1
            <isEqual property="dsContrCtrlStsCd" compareValue="SYSH">
            AND EXISTS (
                SELECT
                    1
                FROM
                     DS_CONTR_DTL       DCD
                    ,DS_CONTR_BLLG_SCHD DCBS
                WHERE
                        DC.GLBL_CMPY_CD             = DCD.GLBL_CMPY_CD
                    AND DC.DS_CONTR_PK              = DCD.DS_CONTR_PK
                    AND DCD.EZCANCELFLAG            = '0'
                    AND DCD.GLBL_CMPY_CD            = DCBS.GLBL_CMPY_CD
                    AND DCD.DS_CONTR_DTL_PK         = DCBS.DS_CONTR_DTL_PK
                    AND DCBS.USG_CHRG_FLG           = 'Y'
                    AND DCBS.BLLG_STAGE_FLG         = 'Y'
                    AND DCBS.MTR_ENTRY_CPLT_FLG     = 'N'
                    <!-- mod start 2019/10/21 QC#53521 -->
                    <!-- AND DCBS.BLLG_SCHD_THRU_DT  &lt;= #svcContrBllgThruDt# -->
                    AND DCBS.NEXT_BLLG_DT           &lt;= #mtrBllgNextBllgDt#
                    <!-- mod end 2019/10/21 QC#53521 -->
                    AND DCBS.EZCANCELFLAG           = '0'
            )
            </isEqual>
    </statement>
    <statement id="countHldDtlByLinkNum" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(1)
        FROM
             DS_CONTR           DC
            ,DS_CONTR_DTL_STS_V STS
        WHERE
                DC.GLBL_CMPY_CD          = #glblCmpyCd#
            AND DC.CONTR_LINK_NUM        = #contrLinkNum#
            AND DC.EZCANCELFLAG          = '0'
            AND DC.GLBL_CMPY_CD          = STS.GLBL_CMPY_CD
            AND DC.DS_CONTR_PK           = STS.DS_CONTR_PK
            AND STS.DS_CONTR_CTRL_STS_CD = #dsContrCtrlStsCd#
            AND STS.EZCANCELFLAG         = '0'
            AND ROWNUM                   = 1
            <isEqual property="dsContrCtrlStsCd" compareValue="SYSH">
            AND EXISTS (
                SELECT
                    1
                FROM
                    DS_CONTR_BLLG_SCHD DCBS
                WHERE
                        STS.GLBL_CMPY_CD            = DCBS.GLBL_CMPY_CD
                    AND STS.DS_CONTR_DTL_PK         = DCBS.DS_CONTR_DTL_PK
                    AND DCBS.USG_CHRG_FLG           = 'Y'
                    AND DCBS.BLLG_STAGE_FLG         = 'Y'
                    AND DCBS.MTR_ENTRY_CPLT_FLG     = 'N'
                    <!-- mod start 2019/10/21 QC#53521 -->
                    <!-- AND DCBS.BLLG_SCHD_THRU_DT  &lt;= #svcContrBllgThruDt# -->
                    AND DCBS.NEXT_BLLG_DT           &lt;= #mtrBllgNextBllgDt#
                    <!-- mod end 2019/10/21 QC#53521 -->
                    AND DCBS.EZCANCELFLAG           = '0'
            )
            </isEqual>
    </statement>
    <statement id="countHldBllgMtrByLinkNum" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(1)
        FROM
             DS_CONTR                DC
            ,DS_CONTR_DTL            DCD
            ,DS_CONTR_BLLG_MTR_STS_V STS
        WHERE
                DC.GLBL_CMPY_CD          = #glblCmpyCd#
            AND DC.CONTR_LINK_NUM        = #contrLinkNum#
            AND DC.EZCANCELFLAG          = '0'
            AND DC.GLBL_CMPY_CD          = DCD.GLBL_CMPY_CD
            AND DC.DS_CONTR_PK           = DCD.DS_CONTR_PK
            AND DCD.EZCANCELFLAG         = '0'
            AND DCD.GLBL_CMPY_CD         = STS.GLBL_CMPY_CD
            AND DCD.DS_CONTR_DTL_PK      = STS.DS_CONTR_DTL_PK
            AND STS.DS_CONTR_CTRL_STS_CD = #dsContrCtrlStsCd#
            AND STS.EZCANCELFLAG         = '0'
            AND ROWNUM                   = 1
            <isEqual property="dsContrCtrlStsCd" compareValue="SYSH">
            AND EXISTS (
                SELECT
                    1
                FROM
                    DS_CONTR_BLLG_SCHD DCBS
                WHERE
                        STS.GLBL_CMPY_CD             = DCBS.GLBL_CMPY_CD
                    AND STS.DS_CONTR_BLLG_MTR_PK     = DCBS.DS_CONTR_BLLG_MTR_PK
                    AND DCBS.USG_CHRG_FLG            = 'Y'
                    AND DCBS.BLLG_STAGE_FLG          = 'Y'
                    AND DCBS.MTR_ENTRY_CPLT_FLG      = 'N'
                    <!-- mod start 2019/10/21 QC#53521 -->
                    <!-- AND DCBS.BLLG_SCHD_THRU_DT  &lt;= #svcContrBllgThruDt# -->
                    AND DCBS.NEXT_BLLG_DT           &lt;= #mtrBllgNextBllgDt#
                    <!-- mod end 2019/10/21 QC#53521 -->
                    AND DCBS.EZCANCELFLAG            = '0'
            )
            </isEqual>
    </statement>
    <statement id="countHldPrcEffByLinkNum" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(1)
        FROM
             DS_CONTR               DC
            ,DS_CONTR_DTL           DCD
            ,DS_CONTR_PRC_EFF_STS_V STS
        WHERE
                DC.GLBL_CMPY_CD          = #glblCmpyCd#
            AND DC.CONTR_LINK_NUM        = #contrLinkNum#
            AND DC.EZCANCELFLAG          = '0'
            AND DC.GLBL_CMPY_CD          = DCD.GLBL_CMPY_CD
            AND DC.DS_CONTR_PK           = DCD.DS_CONTR_PK
            AND DCD.EZCANCELFLAG         = '0'
            AND DCD.GLBL_CMPY_CD         = STS.GLBL_CMPY_CD
            AND DCD.DS_CONTR_DTL_PK      = STS.DS_CONTR_DTL_PK
            AND STS.DS_CONTR_CTRL_STS_CD = #dsContrCtrlStsCd#
            AND STS.EZCANCELFLAG         = '0'
            AND ROWNUM = 1
            <isEqual property="dsContrCtrlStsCd" compareValue="SYSH">
            AND EXISTS (
                SELECT
                    1
                FROM
                    DS_CONTR_BLLG_SCHD DCBS
                WHERE
                        STS.GLBL_CMPY_CD            = DCBS.GLBL_CMPY_CD
                    AND STS.DS_CONTR_PRC_EFF_PK     = DCBS.DS_CONTR_PRC_EFF_PK
                    AND DCBS.USG_CHRG_FLG           = 'Y'
                    AND DCBS.BLLG_STAGE_FLG         = 'Y'
                    AND DCBS.MTR_ENTRY_CPLT_FLG     = 'N'
                    <!-- mod start 2019/10/21 QC#53521 -->
                    <!-- AND DCBS.BLLG_SCHD_THRU_DT  &lt;= #svcContrBllgThruDt# -->
                    AND DCBS.NEXT_BLLG_DT           &lt;= #mtrBllgNextBllgDt#
                    <!-- mod end 2019/10/21 QC#53521 -->
                    AND DCBS.EZCANCELFLAG           = '0'
            )
            </isEqual>
    </statement>
    <!-- END 2018/11/05 K.Kitachi [QC#28627, ADD] -->
    <!-- START 2019/01/21 K.Kitachi [QC#29083, ADD] -->
    <statement id="getNextBllgSchdDt" parameterClass="Map" resultClass="Map">
        SELECT
             Z.BLLG_SCHD_FROM_DT
            ,Z.BLLG_SCHD_THRU_DT
        FROM (
            SELECT
                 B.BLLG_SCHD_FROM_DT
                ,B.BLLG_SCHD_THRU_DT
            FROM
                 DS_CONTR_BLLG_SCHD A
                ,DS_CONTR_BLLG_SCHD B
            WHERE
                    A.GLBL_CMPY_CD             = #glblCmpyCd#
                AND A.DS_CONTR_BLLG_SCHD_PK    = #dsContrBllgSchdPk#
                AND A.EZCANCELFLAG             = '0'
                AND A.GLBL_CMPY_CD             = B.GLBL_CMPY_CD
                AND A.DS_CONTR_DTL_PK          = B.DS_CONTR_DTL_PK
                AND A.DS_CONTR_BLLG_MTR_PK     = B.DS_CONTR_BLLG_MTR_PK
                AND A.BLLG_SCHD_THRU_DT     &lt; B.BLLG_SCHD_FROM_DT
                AND B.USG_CHRG_FLG             = 'Y'
                AND B.INV_TP_CD                = #invTpCd#
                AND B.SVC_CR_REBIL_PK         IS NULL
                AND B.EZCANCELFLAG             = '0'
            ORDER BY
                B.BLLG_SCHD_FROM_DT
            ) Z
        WHERE
            ROWNUM = 1
    </statement>
    <!-- END 2019/01/21 K.Kitachi [QC#29083, ADD] -->

    <statement id="countNoMeterEntryTogetherGroup" parameterClass="Map" resultClass="BigDecimal">
    <!-- START 2019/07/17 T.Kanasaka [QC#51576, ADD] -->
        SELECT
            COUNT(*)
        FROM (
            SELECT DISTINCT
                 DC.DS_CONTR_PK
                ,DCBM.BLLG_MTR_BILL_TO_CUST_CD
                ,DCBS.NEXT_BLLG_DT
                ,NVL(CARD3.CR_CARD_CUST_REF_NUM, NVL(CARD2.CR_CARD_CUST_REF_NUM, NVL(CARD1.CR_CARD_CUST_REF_NUM, 'N/A'))) AS CR_CARD_CUST_REF_NUM
                ,CASE WHEN DCBM.CTAC_PSN_PK IS NOT NULL THEN DCBM.CTAC_PSN_PK
                      WHEN DCD.BASE_BILL_TO_CUST_CD = DCBM.BLLG_MTR_BILL_TO_CUST_CD AND DCD.CTAC_PSN_PK IS NOT NULL THEN DCD.CTAC_PSN_PK
                      WHEN DC.ALT_PAYER_CUST_CD = DCBM.BLLG_MTR_BILL_TO_CUST_CD AND DC.CTAC_PSN_PK IS NOT NULL THEN DC.CTAC_PSN_PK
                      ELSE -1
                 END AS CTAC_PSN_PK
            FROM
                 DS_CONTR            DC
                ,DS_CONTR_DTL        DCD
                ,DS_CONTR_BLLG_MTR   DCBM
                ,DS_CONTR_BLLG_SCHD  DCBS
                ,DS_CONTR_CR_CARD_PO CARD1
                ,DS_CONTR_CR_CARD_PO CARD2
                ,DS_CONTR_CR_CARD_PO CARD3
            WHERE
                    DC.GLBL_CMPY_CD                = #glblCmpyCd#
                AND DC.EZCANCELFLAG                = '0'
                AND DC.GLBL_CMPY_CD                = DCD.GLBL_CMPY_CD
                AND DC.DS_CONTR_PK                 = DCD.DS_CONTR_PK
                AND DCD.EZCANCELFLAG               = '0'
                AND DCD.GLBL_CMPY_CD               = DCBM.GLBL_CMPY_CD
                AND DCD.DS_CONTR_DTL_PK            = DCBM.DS_CONTR_DTL_PK
                AND DCBM.EZCANCELFLAG              = '0'
                AND DCBM.GLBL_CMPY_CD              = DCBS.GLBL_CMPY_CD
                AND DCBM.DS_CONTR_BLLG_MTR_PK      = DCBS.DS_CONTR_BLLG_MTR_PK
                AND DCBS.EZCANCELFLAG              = '0'
                AND DCBS.USG_CHRG_FLG              = 'Y'
                AND DCBS.INV_FLG                   = 'N'
                AND DCBS.MTR_ENTRY_CPLT_FLG        = 'N'
                AND DCBS.SVC_CR_REBIL_PK           IS NULL
                AND DC.GLBL_CMPY_CD                = CARD1.GLBL_CMPY_CD(+)
                AND DC.DS_CONTR_PK                 = CARD1.DS_CONTR_PK(+)
                AND CARD1.CR_CARD_FLG(+)           = 'Y'
                AND CARD1.DS_CONTR_MACH_LVL_NUM(+) = #dsContrMachLvl1#
                AND CARD1.EZCANCELFLAG(+)          = '0'
                AND DCD.GLBL_CMPY_CD               = CARD2.GLBL_CMPY_CD(+)
                AND DCD.DS_CONTR_DTL_PK            = CARD2.DS_CONTR_DTL_PK(+)
                AND CARD2.CR_CARD_FLG(+)           = 'Y'
                AND CARD2.DS_CONTR_MACH_LVL_NUM(+) = #dsContrMachLvl2#
                AND CARD2.EZCANCELFLAG(+)          = '0'
                AND DCBM.GLBL_CMPY_CD              = CARD3.GLBL_CMPY_CD(+)
                AND DCBM.DS_CONTR_BLLG_MTR_PK      = CARD3.DS_CONTR_BLLG_MTR_PK(+)
                AND CARD3.CR_CARD_FLG(+)           = 'Y'
                AND CARD3.DS_CONTR_MACH_LVL_NUM(+) = #dsContrMachLvl3#
                AND CARD3.EZCANCELFLAG(+)          = '0'
        ) X
        WHERE
                X.DS_CONTR_PK              = #dsContrPk#
            AND X.BLLG_MTR_BILL_TO_CUST_CD = #bllgMtrBillToCustCd#
            AND X.NEXT_BLLG_DT             = #nextBllgDt#
            AND X.CR_CARD_CUST_REF_NUM     = #crCardCustRefNum#
            AND X.CTAC_PSN_PK              = #ctacPsnPk#
    </statement>
    <!-- END   2019/07/17 T.Kanasaka [QC#51576, ADD] -->
    <!-- START 2019/10/29 K.Kitachi [QC#54203, ADD] -->
    <statement id="getSvcMachMstrHist" parameterClass="Map" resultClass="Map">
        SELECT
            *
        FROM
            (
                SELECT
                     A.*
                    ,B.MDSE_NM
                FROM
                     SVC_MACH_MSTR_HIST A
                    ,MDSE               B
                WHERE
                        A.GLBL_CMPY_CD     = #glblCmpyCd#
                    AND A.SVC_MACH_MSTR_PK = #svcMachMstrPk#
                    <iterate property="svcMachMstrStsCdList" var="svcMachMstrStsCd[]" open="AND A.SVC_MACH_MSTR_STS_CD IN (" close=")" conjunction=",">
                        #svcMachMstrStsCd[]#
                    </iterate>
                    AND A.EZCANCELFLAG     = '0'
                    AND A.GLBL_CMPY_CD     = B.GLBL_CMPY_CD
                    AND A.MDSE_CD          = B.MDSE_CD
                    AND B.EZCANCELFLAG     = '0'
                ORDER BY
                    A.HIST_CRAT_TS DESC
            )
        WHERE
            ROWNUM = 1
    </statement>
    <statement id="getSvcConfigMstrDtl" parameterClass="Map" resultClass="Map">
        SELECT
            *
        FROM
            (
                SELECT
                     A.*
                    ,B.T_MDL_NM MDL_NM
                FROM
                     SVC_CONFIG_MSTR_DTL A
                    ,MDL_NM              B
                WHERE
                        A.GLBL_CMPY_CD       = #glblCmpyCd#
                    AND A.SVC_MACH_MSTR_PK   = #svcMachMstrPk#
                    AND A.SVC_CONFIG_MSTR_PK = #svcConfigMstrPk#
                    AND A.EZCANCELFLAG       = '0'
                    AND A.GLBL_CMPY_CD       = B.T_GLBL_CMPY_CD
                    AND A.MDL_ID             = B.T_MDL_ID
                    AND B.EZCANCELFLAG       = '0'
                ORDER BY
                    A.RGTN_CONFIG_DT DESC
            )
        WHERE
            ROWNUM = 1
    </statement>
    <!-- END 2019/10/29 K.Kitachi [QC#54203, ADD] -->
    <!-- START 2019/11/08 K.Kitachi [QC#54368, ADD] -->
    <statement id="countPoInclBllgPeriod" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
            SVC_CONTR_BLLG A
        WHERE
                A.GLBL_CMPY_CD      = #glblCmpyCd#
            AND A.SVC_CONTR_BLLG_PK = #svcContrBllgPk#
            AND A.EZCANCELFLAG      = '0'
            AND EXISTS (
                SELECT
                    1
                FROM
                    DS_CONTR_CR_CARD_PO X
                WHERE
                        A.GLBL_CMPY_CD           = X.GLBL_CMPY_CD
                    AND A.DS_CONTR_PK            = X.DS_CONTR_PK
                    AND A.SVC_CONTR_BLLG_FROM_DT &gt;= X.PO_FROM_DT
                    AND A.SVC_CONTR_BLLG_THRU_DT &lt;= X.PO_DT
                    AND X.CR_CARD_FLG            = 'N'
                    AND X.EZCANCELFLAG           = '0'
                    AND (
                            (X.DS_CONTR_MACH_LVL_NUM            = #dsContrMachLvl1#)
                         OR (X.DS_CONTR_MACH_LVL_NUM            = #dsContrMachLvl2#
                            AND A.DS_CONTR_DTL_PK               = X.DS_CONTR_DTL_PK)
                         OR (X.DS_CONTR_MACH_LVL_NUM            = #dsContrMachLvl3#
                            AND A.DS_CONTR_DTL_PK               = X.DS_CONTR_DTL_PK
                            AND NVL(A.DS_CONTR_BLLG_MTR_PK, -1) = NVL(X.DS_CONTR_BLLG_MTR_PK, -1))
                    )
            )
    </statement>
    <statement id="getLinkContrListForBase" parameterClass="Map" resultClass="Map">
        SELECT DISTINCT
             A.DS_CONTR_PK
            ,A.CONTR_LINK_NUM
            ,A.DS_ACCT_NUM
            ,B.BASE_BILL_TO_CUST_CD BILL_TO_CUST_CD
            ,C.SELL_TO_CUST_CD
        FROM
             DS_CONTR       A
            ,DS_CONTR_DTL   B
            ,BILL_TO_CUST   C
        WHERE
                A.GLBL_CMPY_CD             = #glblCmpyCd#
            AND A.DS_CONTR_PK       &lt;&gt; #dsContrPk#
            AND A.CONTR_LINK_NUM           = #contrLinkNum#
            AND A.EZCANCELFLAG             = '0'
            AND A.GLBL_CMPY_CD             = B.GLBL_CMPY_CD
            AND A.DS_CONTR_PK              = B.DS_CONTR_PK
            AND B.EZCANCELFLAG             = '0'
            AND B.GLBL_CMPY_CD             = C.GLBL_CMPY_CD
            AND B.BASE_BILL_TO_CUST_CD     = C.BILL_TO_CUST_CD
            AND C.EZCANCELFLAG             = '0'
        ORDER BY
             A.DS_CONTR_PK
            ,B.BASE_BILL_TO_CUST_CD
    </statement>
    <statement id="getLinkContrListForUsage" parameterClass="Map" resultClass="Map">
        SELECT DISTINCT
             A.DS_CONTR_PK
            ,A.CONTR_LINK_NUM
            ,A.DS_ACCT_NUM
            ,C.BLLG_MTR_BILL_TO_CUST_CD BILL_TO_CUST_CD
            ,D.SELL_TO_CUST_CD
        FROM
             DS_CONTR          A
            ,DS_CONTR_DTL      B
            ,DS_CONTR_BLLG_MTR C
            ,BILL_TO_CUST      D
        WHERE
                A.GLBL_CMPY_CD             = #glblCmpyCd#
            AND A.DS_CONTR_PK       &lt;&gt; #dsContrPk#
            AND A.CONTR_LINK_NUM           = #contrLinkNum#
            AND A.EZCANCELFLAG             = '0'
            AND A.GLBL_CMPY_CD             = B.GLBL_CMPY_CD
            AND A.DS_CONTR_PK              = B.DS_CONTR_PK
            AND B.EZCANCELFLAG             = '0'
            AND B.GLBL_CMPY_CD             = C.GLBL_CMPY_CD
            AND B.DS_CONTR_DTL_PK          = C.DS_CONTR_DTL_PK
            AND C.EZCANCELFLAG             = '0'
            AND C.GLBL_CMPY_CD             = D.GLBL_CMPY_CD
            AND C.BLLG_MTR_BILL_TO_CUST_CD = D.BILL_TO_CUST_CD
            AND D.EZCANCELFLAG             = '0'
        ORDER BY
             A.DS_CONTR_PK
            ,C.BLLG_MTR_BILL_TO_CUST_CD
    </statement>
    <statement id="countPoExclBllgPeriodForLinkContr" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(B.SVC_CONTR_BLLG_PK)
        FROM
             SVC_CONTR_BLLG A
            ,SVC_CONTR_BLLG B
        WHERE
                A.GLBL_CMPY_CD                     = #glblCmpyCd#
            AND A.SVC_CONTR_BLLG_PK                = #svcContrBllgPk#
            AND A.EZCANCELFLAG                     = '0'
            AND A.GLBL_CMPY_CD                     = B.GLBL_CMPY_CD
            AND A.SVC_CONTR_BLLG_PK         &lt;&gt; B.SVC_CONTR_BLLG_PK
            AND A.BASE_CHRG_FLG                    = B.BASE_CHRG_FLG
            AND A.USG_CHRG_FLG                     = B.USG_CHRG_FLG
            AND NVL(A.BASE_BLLG_NEXT_BLLG_DT, '0') = NVL(B.BASE_BLLG_NEXT_BLLG_DT, '0')
            AND NVL(A.MTR_BLLG_NEXT_BLLG_DT, '0')  = NVL(B.MTR_BLLG_NEXT_BLLG_DT, '0')
            AND B.DS_CONTR_PK                      = #dsContrPk#
            AND B.EZCANCELFLAG                     = '0'
            AND NOT EXISTS (
                SELECT
                    1
                FROM
                    DS_CONTR_CR_CARD_PO X
                WHERE
                        B.GLBL_CMPY_CD               = X.GLBL_CMPY_CD
                    AND B.DS_CONTR_PK                = X.DS_CONTR_PK
                    AND B.SVC_CONTR_BLLG_FROM_DT &gt;= X.PO_FROM_DT
                    AND B.SVC_CONTR_BLLG_THRU_DT &lt;= X.PO_DT
                    AND X.CR_CARD_FLG                = 'N'
                    AND X.EZCANCELFLAG               = '0'
                    AND (
                            (X.DS_CONTR_MACH_LVL_NUM            = #dsContrMachLvl1#)
                         OR (X.DS_CONTR_MACH_LVL_NUM            = #dsContrMachLvl2#
                            AND B.DS_CONTR_DTL_PK               = X.DS_CONTR_DTL_PK)
                         OR (X.DS_CONTR_MACH_LVL_NUM            = #dsContrMachLvl3#
                            AND B.DS_CONTR_DTL_PK               = X.DS_CONTR_DTL_PK
                            AND NVL(B.DS_CONTR_BLLG_MTR_PK, -1) = NVL(X.DS_CONTR_BLLG_MTR_PK, -1))
                    )
            )
    </statement>
    <!-- END 2019/11/08 K.Kitachi [QC#54368, ADD] -->
    <!-- START 2020/01/09 K.Kitachi [QC#55173, ADD] -->
    <statement id="getSvcCrRebilList" parameterClass="Map" resultClass="Map">
        SELECT
             SCRD.ORIG_SVC_INV_NUM
            ,SCR.CUST_INCDT_ID
            ,SCR.SVC_CR_REBIL_PK
            ,SCRD.SVC_CR_REBIL_DTL_PK
            <!-- add start 2020/01/27 QC#56014 -->
            ,DCD.DS_CONTR_PK
            ,SCB.DS_CONTR_CATG_CD
            <!-- add end 2020/01/27 QC#56014 -->
        FROM
             SVC_CR_REBIL     SCR
            ,SVC_CR_REBIL_DTL SCRD
            ,SVC_CONTR_BLLG   SCB
            ,DS_CONTR_DTL     DCD
            ,DS_CONTR_DTL_TP  DCDT
            ,DS_CONTR_DTL     PDCD
        WHERE
                SCR.GLBL_CMPY_CD         = #glblCmpyCd#
            <iterate property="svcCrRebilStsCdList" var="svcCrRebilStsCd[]" open="AND SCR.SVC_CR_REBIL_STS_CD IN (" close=")" conjunction=",">
                #svcCrRebilStsCd[]#
            </iterate>
            AND SCR.EZCANCELFLAG         = '0'
            AND SCR.GLBL_CMPY_CD         = SCRD.GLBL_CMPY_CD
            AND SCR.SVC_CR_REBIL_PK      = SCRD.SVC_CR_REBIL_PK
            AND SCRD.EZCANCELFLAG        = '0'
            AND SCRD.GLBL_CMPY_CD        = SCB.GLBL_CMPY_CD
            AND SCRD.SVC_CR_REBIL_PK     = SCB.SVC_CR_REBIL_PK
            AND SCRD.SVC_CR_REBIL_DTL_PK = SCB.SVC_CR_REBIL_DTL_PK
            AND SCB.BLLG_APVL_CPLT_FLG   = 'Y'
            AND SCB.INV_TP_CD            = #invTpCd#
            <iterate property="bllgCpltStsCdList" var="bllgCpltStsCd[]" open="AND SCB.BLLG_CPLT_STS_CD IN (" close=")" conjunction=",">
                #bllgCpltStsCd[]#
            </iterate>
            AND SCB.EZCANCELFLAG         = '0'
            AND SCB.GLBL_CMPY_CD         = DCD.GLBL_CMPY_CD
            AND SCB.DS_CONTR_DTL_PK      = DCD.DS_CONTR_DTL_PK
            AND DCD.EZCANCELFLAG         = '0'
            AND DCD.GLBL_CMPY_CD         = DCDT.GLBL_CMPY_CD
            AND DCD.DS_CONTR_DTL_TP_CD   = DCDT.DS_CONTR_DTL_TP_CD
            AND DCDT.EZCANCELFLAG        = '0'
            AND DCD.GLBL_CMPY_CD         = PDCD.GLBL_CMPY_CD (+)
            AND DCD.PRNT_DS_CONTR_DTL_PK = PDCD.DS_CONTR_DTL_PK (+)
            AND PDCD.EZCANCELFLAG (+)    = '0'
            AND (
                (
                        SCB.DS_CONTR_CATG_CD = #dsContrCatgCdReg#
                    AND DECODE(DCDT.MAIN_UNIT_LINE_FLG, 'Y', DCD.SVC_CONFIG_MSTR_PK, PDCD.SVC_CONFIG_MSTR_PK) IS NOT NULL
                )
                OR  (
                        SCB.DS_CONTR_CATG_CD = #dsContrCatgCdFlt#
                    AND DCDT.FLEET_LINE_FLG  = 'Y'
                )
                OR  (
                        SCB.DS_CONTR_CATG_CD = #dsContrCatgCdAgg#
                    AND DECODE(DCDT.MAIN_UNIT_LINE_FLG, 'Y', DCD.SVC_CONFIG_MSTR_PK, PDCD.SVC_CONFIG_MSTR_PK) IS NOT NULL
                )
            )
            AND EXISTS (
                SELECT
                    1
                FROM
                    SELL_TO_CUST STC
                WHERE
                        STC.EZCANCELFLAG    = '0'
                    AND STC.GLBL_CMPY_CD    = SCB.GLBL_CMPY_CD
                    AND STC.SELL_TO_CUST_CD = SCB.DS_ACCT_NUM
                    AND MOD(NVL(STC.SELL_TO_CUST_PK, 0), #multiCnt#) = #usrVar1#
            )
        GROUP BY
             SCRD.ORIG_SVC_INV_NUM
            ,SCR.CUST_INCDT_ID
            ,SCR.SVC_CR_REBIL_PK
            ,SCRD.SVC_CR_REBIL_DTL_PK
            <!-- add start 2020/01/27 QC#56014 -->
            ,DCD.DS_CONTR_PK
            ,SCB.DS_CONTR_CATG_CD
            <!-- add end 2020/01/27 QC#56014 -->
        ORDER BY
             SCRD.ORIG_SVC_INV_NUM
            ,SCR.CUST_INCDT_ID
            ,SCR.SVC_CR_REBIL_PK
            ,SCRD.SVC_CR_REBIL_DTL_PK
    </statement>
    <statement id="getSvcContrBllgPkList" parameterClass="Map" resultClass="Map">
        SELECT
             SCB.SVC_CONTR_BLLG_PK
            ,CASE
                WHEN SCB.DS_CONTR_CATG_CD    = #dsContrCatgCdAgg#
                 AND DCDT.MAIN_UNIT_LINE_FLG = 'Y'
                THEN SCB.PRNT_SVC_CONTR_BLLG_PK
                ELSE NULL
             END PRNT_SVC_CONTR_BLLG_PK
        FROM
             SVC_CONTR_BLLG   SCB
            ,DS_CONTR_DTL     DCD
            ,DS_CONTR_DTL_TP  DCDT
            ,DS_CONTR_DTL     PDCD
        WHERE
                SCB.GLBL_CMPY_CD         = #glblCmpyCd#
            AND SCB.SVC_CR_REBIL_PK      = #svcCrRebilPk#
            AND SCB.SVC_CR_REBIL_DTL_PK  = #svcCrRebilDtlPk#
            AND SCB.BLLG_APVL_CPLT_FLG   = 'Y'
            AND SCB.INV_TP_CD            = #invTpCd#
            <iterate property="bllgCpltStsCdList" var="bllgCpltStsCd[]" open="AND SCB.BLLG_CPLT_STS_CD IN (" close=")" conjunction=",">
                #bllgCpltStsCd[]#
            </iterate>
            AND SCB.EZCANCELFLAG         = '0'
            AND SCB.GLBL_CMPY_CD         = DCD.GLBL_CMPY_CD
            AND SCB.DS_CONTR_DTL_PK      = DCD.DS_CONTR_DTL_PK
            AND DCD.EZCANCELFLAG         = '0'
            AND DCD.GLBL_CMPY_CD         = DCDT.GLBL_CMPY_CD
            AND DCD.DS_CONTR_DTL_TP_CD   = DCDT.DS_CONTR_DTL_TP_CD
            AND DCDT.EZCANCELFLAG        = '0'
            AND DCD.GLBL_CMPY_CD         = PDCD.GLBL_CMPY_CD (+)
            AND DCD.PRNT_DS_CONTR_DTL_PK = PDCD.DS_CONTR_DTL_PK (+)
            AND PDCD.EZCANCELFLAG (+)    = '0'
            AND (
                (
                        SCB.DS_CONTR_CATG_CD = #dsContrCatgCdReg#
                    AND DECODE(DCDT.MAIN_UNIT_LINE_FLG, 'Y', DCD.SVC_CONFIG_MSTR_PK, PDCD.SVC_CONFIG_MSTR_PK) IS NOT NULL
                )
                OR  (
                        SCB.DS_CONTR_CATG_CD = #dsContrCatgCdFlt#
                    AND DCDT.FLEET_LINE_FLG  = 'Y'
                )
                OR  (
                        SCB.DS_CONTR_CATG_CD = #dsContrCatgCdAgg#
                    AND DECODE(DCDT.MAIN_UNIT_LINE_FLG, 'Y', DCD.SVC_CONFIG_MSTR_PK, PDCD.SVC_CONFIG_MSTR_PK) IS NOT NULL
                )
            )
            AND EXISTS (
                SELECT
                    1
                FROM
                    SELL_TO_CUST STC
                WHERE
                        STC.EZCANCELFLAG    = '0'
                    AND STC.GLBL_CMPY_CD    = SCB.GLBL_CMPY_CD
                    AND STC.SELL_TO_CUST_CD = SCB.DS_ACCT_NUM
                    AND MOD(NVL(STC.SELL_TO_CUST_PK, 0), #multiCnt#) = #usrVar1#
            )
        ORDER BY
            SCB.SVC_CONTR_BLLG_PK
    </statement>
    <statement id="getCreditDsContrBllgSchdPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            DCBS.DS_CONTR_BLLG_SCHD_PK
        FROM
            DS_CONTR_BLLG_SCHD DCBS
        WHERE
                DCBS.GLBL_CMPY_CD               = #glblCmpyCd#
            AND DCBS.ORIG_DS_CONTR_BLLG_SCHD_PK = #origDsContrBllgSchdPk#
            AND DCBS.DS_BLLG_SCHD_TP_CD         = #dsBllgSchdTpCd#
            AND DCBS.EZCANCELFLAG               = '0'
    </statement>
    <!-- END 2020/01/09 K.Kitachi [QC#55173, ADD] -->
</sqlMap>
