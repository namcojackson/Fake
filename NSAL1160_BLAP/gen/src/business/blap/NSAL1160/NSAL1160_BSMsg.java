//This file was automatically generated by Business Component Interface Definition Document (Define Business Application Global Area) and XLA200710010.
// Generated on    :20160128105025000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSAL1160_BSMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NSAL1160;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL1160 Business Application Global Area Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL1160_BSMsg extends EZDSMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** PROC_DT_D1*/
	public final EZDSDateItem              procDt_D1;

    /** PROC_DT_D2*/
	public final EZDSDateItem              procDt_D2;

    /** SVC_MEMO_TP_DESC_TXT*/
	public final EZDSStringItem              svcMemoTpDescTxt;

    /** SVC_CMNT_TXT*/
	public final EZDSStringItem              svcCmntTxt;


	/**
	 * NSAL1160_BSMsg is constructor.
	 * The initialization when the instance of NSAL1160_BSMsg is generated.
	 */
	public NSAL1160_BSMsg() {
		this(false, -1);
	}

	/**
	 * NSAL1160_BSMsg is constructor.
	 * The initialization when the instance of NSAL1160_BSMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL1160_BSMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		procDt_D1 = (EZDSDateItem)newItem("procDt_D1");
		procDt_D2 = (EZDSDateItem)newItem("procDt_D2");
		svcMemoTpDescTxt = (EZDSStringItem)newItem("svcMemoTpDescTxt");
		svcCmntTxt = (EZDSStringItem)newItem("svcCmntTxt");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL1160_BSMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL1160_BSMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"procDt_D1", "procDt_D1", "D1", null, TYPE_NENTSUKIHI, "8", null},
	{"procDt_D2", "procDt_D2", "D2", null, TYPE_NENTSUKIHI, "8", null},
	{"svcMemoTpDescTxt", "svcMemoTpDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"svcCmntTxt", "svcCmntTxt", null, null, TYPE_HANKAKUEISU, "4000", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"PROC_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//procDt_D1
        {"PROC_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//procDt_D2
        {"SVC_MEMO_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMemoTpDescTxt
        {"SVC_CMNT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcCmntTxt
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

