//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20240325171753000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL1350BMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NSAL1350;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL1350 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL1350BMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** CPO_ORD_NUM_I*/
	public final EZDBStringItem              cpoOrdNum_I;

    /** SHELL_LINE_NUM_I*/
	public final EZDBBigDecimalItem              shellLineNum_I;

    /** ADD_ASRY_FLG_I*/
	public final EZDBStringItem              addAsryFlg_I;

    /** DS_CONTR_NUM_I*/
	public final EZDBStringItem              dsContrNum_I;

    /** XX_SFX_KEY_TXT_I*/
	public final EZDBStringItem              xxSfxKeyTxt_I;

    /** I*/
	public final business.servlet.NSAL1350.NSAL1350_IBMsgArray              I;

    /** MDSE_ITEM_TP_CD*/
	public final EZDBStringItem              mdseItemTpCd;

    /** MDL_ID*/
	public final EZDBBigDecimalItem              mdlId;

    /** DS_ORD_POSN_NUM*/
	public final EZDBStringItem              dsOrdPosnNum;

    /** MDSE_CD*/
	public final EZDBStringItem              mdseCd;

    /** ADD_ASRY_FLG*/
	public final EZDBStringItem              addAsryFlg;

    /** MDSE_ITEM_TP_CD_LC*/
	public final EZDBStringItemArray              mdseItemTpCd_LC;

    /** MDSE_ITEM_TP_NM_LD*/
	public final EZDBStringItemArray              mdseItemTpNm_LD;

    /** MDL_ID_LC*/
	public final EZDBBigDecimalItemArray              mdlId_LC;

    /** T_MDL_NM_LD*/
	public final EZDBStringItemArray              t_MdlNm_LD;

    /** A*/
	public final business.servlet.NSAL1350.NSAL1350_ABMsgArray              A;

    /** XX_SFX_KEY_TXT_O*/
	public final EZDBStringItem              xxSfxKeyTxt_O;

    /** O*/
	public final business.servlet.NSAL1350.NSAL1350_OBMsgArray              O;

    /** P*/
	public final business.servlet.NSAL1350.NSAL1350_PBMsgArray              P;


	/**
	 * NSAL1350BMsg is constructor.
	 * The initialization when the instance of NSAL1350BMsg is generated.
	 */
	public NSAL1350BMsg() {
		this(false, -1);
	}

	/**
	 * NSAL1350BMsg is constructor.
	 * The initialization when the instance of NSAL1350BMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL1350BMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		cpoOrdNum_I = (EZDBStringItem)newItem("cpoOrdNum_I");
		shellLineNum_I = (EZDBBigDecimalItem)newItem("shellLineNum_I");
		addAsryFlg_I = (EZDBStringItem)newItem("addAsryFlg_I");
		dsContrNum_I = (EZDBStringItem)newItem("dsContrNum_I");
		xxSfxKeyTxt_I = (EZDBStringItem)newItem("xxSfxKeyTxt_I");
		I = (business.servlet.NSAL1350.NSAL1350_IBMsgArray)newMsgArray("I");
		mdseItemTpCd = (EZDBStringItem)newItem("mdseItemTpCd");
		mdlId = (EZDBBigDecimalItem)newItem("mdlId");
		dsOrdPosnNum = (EZDBStringItem)newItem("dsOrdPosnNum");
		mdseCd = (EZDBStringItem)newItem("mdseCd");
		addAsryFlg = (EZDBStringItem)newItem("addAsryFlg");
		mdseItemTpCd_LC = (EZDBStringItemArray)newItemArray("mdseItemTpCd_LC");
		mdseItemTpNm_LD = (EZDBStringItemArray)newItemArray("mdseItemTpNm_LD");
		mdlId_LC = (EZDBBigDecimalItemArray)newItemArray("mdlId_LC");
		t_MdlNm_LD = (EZDBStringItemArray)newItemArray("t_MdlNm_LD");
		A = (business.servlet.NSAL1350.NSAL1350_ABMsgArray)newMsgArray("A");
		xxSfxKeyTxt_O = (EZDBStringItem)newItem("xxSfxKeyTxt_O");
		O = (business.servlet.NSAL1350.NSAL1350_OBMsgArray)newMsgArray("O");
		P = (business.servlet.NSAL1350.NSAL1350_PBMsgArray)newMsgArray("P");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL1350BMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL1350BMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"cpoOrdNum_I", "cpoOrdNum_I", "I", null, TYPE_HANKAKUEISU, "8", null},
	{"shellLineNum_I", "shellLineNum_I", "I", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"addAsryFlg_I", "addAsryFlg_I", "I", null, TYPE_HANKAKUEISU, "1", null},
	{"dsContrNum_I", "dsContrNum_I", "I", null, TYPE_HANKAKUEISU, "30", null},
	{"xxSfxKeyTxt_I", "xxSfxKeyTxt_I", "I", null, TYPE_HANKAKUEISU, "30", null},
	{"I", "I", null, "200", "business.servlet.NSAL1350.NSAL1350_IBMsgArray", null, null},
	
	{"mdseItemTpCd", "mdseItemTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"mdlId", "mdlId", null, null, TYPE_SEISU_SYOSU, "22", "0"},
	{"dsOrdPosnNum", "dsOrdPosnNum", null, null, TYPE_HANKAKUEISU, "6", null},
	{"mdseCd", "mdseCd", null, null, TYPE_HANKAKUEISU, "16", null},
	{"addAsryFlg", "addAsryFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"mdseItemTpCd_LC", "mdseItemTpCd_LC", "LC", "99", TYPE_HANKAKUEISU, "2", null},
	{"mdseItemTpNm_LD", "mdseItemTpNm_LD", "LD", "99", TYPE_HANKAKUEISU, "40", null},
	{"mdlId_LC", "mdlId_LC", "LC", "99", TYPE_SEISU_SYOSU, "22", "0"},
	{"t_MdlNm_LD", "t_MdlNm_LD", "LD", "99", TYPE_HANKAKUEISU, "50", null},
	{"A", "A", null, "200", "business.servlet.NSAL1350.NSAL1350_ABMsgArray", null, null},
	
	{"xxSfxKeyTxt_O", "xxSfxKeyTxt_O", "O", null, TYPE_HANKAKUEISU, "30", null},
	{"O", "O", null, "200", "business.servlet.NSAL1350.NSAL1350_OBMsgArray", null, null},
	
	{"P", "P", null, "10", "business.servlet.NSAL1350.NSAL1350_PBMsgArray", null, null},
	
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"CPO_ORD_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cpoOrdNum_I
        {"SHELL_LINE_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shellLineNum_I
        {"ADD_ASRY_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//addAsryFlg_I
        {"DS_CONTR_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrNum_I
        {"XX_SFX_KEY_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxSfxKeyTxt_I
		null,	//I
        {"MDSE_ITEM_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseItemTpCd
        {"MDL_ID",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdlId
        {"DS_ORD_POSN_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdPosnNum
        {"MDSE_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd
        {"ADD_ASRY_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//addAsryFlg
        {"MDSE_ITEM_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseItemTpCd_LC
        {"MDSE_ITEM_TP_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseItemTpNm_LD
        {"MDL_ID",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdlId_LC
        {"T_MDL_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//t_MdlNm_LD
		null,	//A
        {"XX_SFX_KEY_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxSfxKeyTxt_O
		null,	//O
		null,	//P
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

