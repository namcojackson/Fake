//This file was automatically generated by Common Business Component Interface Definition Document and XLA200710010.
// Generated on    :20180823154148000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :CommonBusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSZC115001_svcUsgPrcListPMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.parts;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSZC115001 Common Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSZC115001_svcUsgPrcListPMsg extends EZDPMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_RQST_TP_CD*/
	public final EZDPStringItem              xxRqstTpCd;

    /** SHELL_LINE_NUM*/
	public final EZDPBigDecimalItem              shellLineNum;

    /** MDL_ID*/
	public final EZDPBigDecimalItem              mdlId;

    /** CONTR_PHYS_BLLG_MTR_RELN_PK*/
	public final EZDPBigDecimalItem              contrPhysBllgMtrRelnPk;

    /** DS_CONTR_PK*/
	public final EZDPBigDecimalItem              dsContrPk;

    /** DS_CONTR_DTL_PK*/
	public final EZDPBigDecimalItem              dsContrDtlPk;

    /** PRC_LIST_BAND_CD*/
	public final EZDPStringItem              prcListBandCd;

    /** PRC_BOOK_MDSE_CD*/
	public final EZDPStringItem              prcBookMdseCd;

    /** BLLG_MTR_LB_CD*/
	public final EZDPStringItem              bllgMtrLbCd;

    /** USG_MDSE_CD*/
	public final EZDPStringItem              usgMdseCd;

    /** COPY_INCL_PRC_QTY*/
	public final EZDPBigDecimalItem              copyInclPrcQty;

    /** REG_MTR_LB_CD*/
	public final EZDPStringItem              regMtrLbCd;

    /** XS_MTR_AMT_RATE*/
	public final EZDPBigDecimalItem              xsMtrAmtRate;

    /** CONTR_MTR_MULT_RATE*/
	public final EZDPBigDecimalItem              contrMtrMultRate;

    /** PRC_SVC_TIER_TP_CD*/
	public final EZDPStringItem              prcSvcTierTpCd;

    /** MIN_COPY_VOL_CNT*/
	public final EZDPBigDecimalItem              minCopyVolCnt;

    /** MAX_COPY_VOL_CNT*/
	public final EZDPBigDecimalItem              maxCopyVolCnt;

    /** BILL_TO_CUST_CD*/
	public final EZDPStringItem              billToCustCd;

    /** SELL_TO_CUST_CD*/
	public final EZDPStringItem              sellToCustCd;

    /** ACTV_FLG*/
	public final EZDPStringItem              actvFlg;

    /** DS_ORD_POSN_NUM*/
	public final EZDPStringItem              dsOrdPosnNum;

    /** BLLG_FREE_COPY_CNT*/
	public final EZDPBigDecimalItem              bllgFreeCopyCnt;

    /** BLLG_MIN_CNT*/
	public final EZDPBigDecimalItem              bllgMinCnt;

    /** BLLG_MIN_AMT_RATE*/
	public final EZDPBigDecimalItem              bllgMinAmtRate;

    /** BLLG_ROLL_OVER_RATIO*/
	public final EZDPBigDecimalItem              bllgRollOverRatio;

    /** XX_MSG_ID*/
	public final EZDPStringItem              xxMsgId;


	/**
	 * NSZC115001_svcUsgPrcListPMsg is constructor.
	 * The initialization when the instance of NSZC115001_svcUsgPrcListPMsg is generated.
	 */
	public NSZC115001_svcUsgPrcListPMsg() {
		this(false, -1);
	}

	/**
	 * NSZC115001_svcUsgPrcListPMsg is constructor.
	 * The initialization when the instance of NSZC115001_svcUsgPrcListPMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSZC115001_svcUsgPrcListPMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxRqstTpCd = (EZDPStringItem)newItem("xxRqstTpCd");
		shellLineNum = (EZDPBigDecimalItem)newItem("shellLineNum");
		mdlId = (EZDPBigDecimalItem)newItem("mdlId");
		contrPhysBllgMtrRelnPk = (EZDPBigDecimalItem)newItem("contrPhysBllgMtrRelnPk");
		dsContrPk = (EZDPBigDecimalItem)newItem("dsContrPk");
		dsContrDtlPk = (EZDPBigDecimalItem)newItem("dsContrDtlPk");
		prcListBandCd = (EZDPStringItem)newItem("prcListBandCd");
		prcBookMdseCd = (EZDPStringItem)newItem("prcBookMdseCd");
		bllgMtrLbCd = (EZDPStringItem)newItem("bllgMtrLbCd");
		usgMdseCd = (EZDPStringItem)newItem("usgMdseCd");
		copyInclPrcQty = (EZDPBigDecimalItem)newItem("copyInclPrcQty");
		regMtrLbCd = (EZDPStringItem)newItem("regMtrLbCd");
		xsMtrAmtRate = (EZDPBigDecimalItem)newItem("xsMtrAmtRate");
		contrMtrMultRate = (EZDPBigDecimalItem)newItem("contrMtrMultRate");
		prcSvcTierTpCd = (EZDPStringItem)newItem("prcSvcTierTpCd");
		minCopyVolCnt = (EZDPBigDecimalItem)newItem("minCopyVolCnt");
		maxCopyVolCnt = (EZDPBigDecimalItem)newItem("maxCopyVolCnt");
		billToCustCd = (EZDPStringItem)newItem("billToCustCd");
		sellToCustCd = (EZDPStringItem)newItem("sellToCustCd");
		actvFlg = (EZDPStringItem)newItem("actvFlg");
		dsOrdPosnNum = (EZDPStringItem)newItem("dsOrdPosnNum");
		bllgFreeCopyCnt = (EZDPBigDecimalItem)newItem("bllgFreeCopyCnt");
		bllgMinCnt = (EZDPBigDecimalItem)newItem("bllgMinCnt");
		bllgMinAmtRate = (EZDPBigDecimalItem)newItem("bllgMinAmtRate");
		bllgRollOverRatio = (EZDPBigDecimalItem)newItem("bllgRollOverRatio");
		xxMsgId = (EZDPStringItem)newItem("xxMsgId");
	}

	/**
	 * get the type of array which is stored
	 * @return NSZC115001_svcUsgPrcListPMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSZC115001_svcUsgPrcListPMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxRqstTpCd", "xxRqstTpCd", null, null, TYPE_HANKAKUEISU, "1", null},
	{"shellLineNum", "shellLineNum", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"mdlId", "mdlId", null, null, TYPE_SEISU_SYOSU, "22", "0"},
	{"contrPhysBllgMtrRelnPk", "contrPhysBllgMtrRelnPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrPk", "dsContrPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrDtlPk", "dsContrDtlPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"prcListBandCd", "prcListBandCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"prcBookMdseCd", "prcBookMdseCd", null, null, TYPE_HANKAKUEISU, "16", null},
	{"bllgMtrLbCd", "bllgMtrLbCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"usgMdseCd", "usgMdseCd", null, null, TYPE_HANKAKUEISU, "16", null},
	{"copyInclPrcQty", "copyInclPrcQty", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"regMtrLbCd", "regMtrLbCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"xsMtrAmtRate", "xsMtrAmtRate", null, null, TYPE_SEISU_SYOSU, "19", "6"},
	{"contrMtrMultRate", "contrMtrMultRate", null, null, TYPE_SEISU_SYOSU, "9", "5"},
	{"prcSvcTierTpCd", "prcSvcTierTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"minCopyVolCnt", "minCopyVolCnt", null, null, TYPE_SEISU_SYOSU, "12", "0"},
	{"maxCopyVolCnt", "maxCopyVolCnt", null, null, TYPE_SEISU_SYOSU, "12", "0"},
	{"billToCustCd", "billToCustCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"sellToCustCd", "sellToCustCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"actvFlg", "actvFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"dsOrdPosnNum", "dsOrdPosnNum", null, null, TYPE_HANKAKUEISU, "6", null},
	{"bllgFreeCopyCnt", "bllgFreeCopyCnt", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"bllgMinCnt", "bllgMinCnt", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"bllgMinAmtRate", "bllgMinAmtRate", null, null, TYPE_SEISU_SYOSU, "19", "6"},
	{"bllgRollOverRatio", "bllgRollOverRatio", null, null, TYPE_SEISU_SYOSU, "9", "5"},
	{"xxMsgId", "xxMsgId", null, null, TYPE_HANKAKUEISU, "9", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_RQST_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRqstTpCd
        {"SHELL_LINE_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shellLineNum
        {"MDL_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdlId
        {"CONTR_PHYS_BLLG_MTR_RELN_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrPhysBllgMtrRelnPk
        {"DS_CONTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrPk
        {"DS_CONTR_DTL_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrDtlPk
        {"PRC_LIST_BAND_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcListBandCd
        {"PRC_BOOK_MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcBookMdseCd
        {"BLLG_MTR_LB_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgMtrLbCd
        {"USG_MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//usgMdseCd
        {"COPY_INCL_PRC_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//copyInclPrcQty
        {"REG_MTR_LB_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//regMtrLbCd
        {"XS_MTR_AMT_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xsMtrAmtRate
        {"CONTR_MTR_MULT_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrMtrMultRate
        {"PRC_SVC_TIER_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcSvcTierTpCd
        {"MIN_COPY_VOL_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//minCopyVolCnt
        {"MAX_COPY_VOL_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//maxCopyVolCnt
        {"BILL_TO_CUST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//billToCustCd
        {"SELL_TO_CUST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//sellToCustCd
        {"ACTV_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//actvFlg
        {"DS_ORD_POSN_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdPosnNum
        {"BLLG_FREE_COPY_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgFreeCopyCnt
        {"BLLG_MIN_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgMinCnt
        {"BLLG_MIN_AMT_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgMinAmtRate
        {"BLLG_ROLL_OVER_RATIO",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgRollOverRatio
        {"XX_MSG_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxMsgId
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

