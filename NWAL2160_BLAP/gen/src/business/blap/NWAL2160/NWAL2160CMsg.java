//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20170531113226000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NWAL2160CMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NWAL2160;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NWAL2160 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NWAL2160CMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_PROC_MD_P*/
	public final EZDCStringItem              xxProcMd_P;

    /** CPO_SVC_DTL_PK_P*/
	public final EZDCBigDecimalItem              cpoSvcDtlPk_P;

    /** CPO_SVC_PRC_PK_P*/
	public final EZDCBigDecimalItem              cpoSvcPrcPk_P;

    /** MDL_ID_P*/
	public final EZDCBigDecimalItem              mdlId_P;

    /** BLLG_MTR_LB_CD_P*/
	public final EZDCStringItem              bllgMtrLbCd_P;

    /** DS_CONTR_CATG_CD_P*/
	public final EZDCStringItem              dsContrCatgCd_P;

    /** Q*/
	public final business.blap.NWAL2160.NWAL2160_QCMsgArray              Q;

    /** GLBL_CMPY_CD*/
	public final EZDCStringItem              glblCmpyCd;

    /** T_MDL_NM*/
	public final EZDCStringItem              t_MdlNm;

    /** MTR_LB_DESC_TXT_BL*/
	public final EZDCStringItem              mtrLbDescTxt_BL;

    /** A*/
	public final business.blap.NWAL2160.NWAL2160_ACMsgArray              A;


	/**
	 * NWAL2160CMsg is constructor.
	 * The initialization when the instance of NWAL2160CMsg is generated.
	 */
	public NWAL2160CMsg() {
		this(false, -1);
	}

	/**
	 * NWAL2160CMsg is constructor.
	 * The initialization when the instance of NWAL2160CMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NWAL2160CMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxProcMd_P = (EZDCStringItem)newItem("xxProcMd_P");
		cpoSvcDtlPk_P = (EZDCBigDecimalItem)newItem("cpoSvcDtlPk_P");
		cpoSvcPrcPk_P = (EZDCBigDecimalItem)newItem("cpoSvcPrcPk_P");
		mdlId_P = (EZDCBigDecimalItem)newItem("mdlId_P");
		bllgMtrLbCd_P = (EZDCStringItem)newItem("bllgMtrLbCd_P");
		dsContrCatgCd_P = (EZDCStringItem)newItem("dsContrCatgCd_P");
		Q = (business.blap.NWAL2160.NWAL2160_QCMsgArray)newMsgArray("Q");
		glblCmpyCd = (EZDCStringItem)newItem("glblCmpyCd");
		t_MdlNm = (EZDCStringItem)newItem("t_MdlNm");
		mtrLbDescTxt_BL = (EZDCStringItem)newItem("mtrLbDescTxt_BL");
		A = (business.blap.NWAL2160.NWAL2160_ACMsgArray)newMsgArray("A");
	}

	/**
	 * get the type of array which is stored
	 * @return NWAL2160CMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NWAL2160CMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxProcMd_P", "xxProcMd_P", "P", null, TYPE_HANKAKUEISU, "1", null},
	{"cpoSvcDtlPk_P", "cpoSvcDtlPk_P", "P", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"cpoSvcPrcPk_P", "cpoSvcPrcPk_P", "P", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"mdlId_P", "mdlId_P", "P", null, TYPE_SEISU_SYOSU, "22", "0"},
	{"bllgMtrLbCd_P", "bllgMtrLbCd_P", "P", null, TYPE_HANKAKUEISU, "2", null},
	{"dsContrCatgCd_P", "dsContrCatgCd_P", "P", null, TYPE_HANKAKUEISU, "3", null},
	{"Q", "Q", null, "20", "business.blap.NWAL2160.NWAL2160_QCMsgArray", null, null},
	
	{"glblCmpyCd", "glblCmpyCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"t_MdlNm", "t_MdlNm", null, null, TYPE_HANKAKUEISU, "50", null},
	{"mtrLbDescTxt_BL", "mtrLbDescTxt_BL", "BL", null, TYPE_HANKAKUEISU, "50", null},
	{"A", "A", null, "20", "business.blap.NWAL2160.NWAL2160_ACMsgArray", null, null},
	
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_PROC_MD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxProcMd_P
        {"CPO_SVC_DTL_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cpoSvcDtlPk_P
        {"CPO_SVC_PRC_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cpoSvcPrcPk_P
        {"MDL_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdlId_P
        {"BLLG_MTR_LB_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgMtrLbCd_P
        {"DS_CONTR_CATG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrCatgCd_P
		null,	//Q
        {"GLBL_CMPY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//glblCmpyCd
        {"T_MDL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//t_MdlNm
        {"MTR_LB_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrLbDescTxt_BL
		null,	//A
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

