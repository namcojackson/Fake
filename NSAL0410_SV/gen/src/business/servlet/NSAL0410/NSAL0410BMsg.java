//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20190131174049000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0410BMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NSAL0410;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL0410 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL0410BMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** DS_CONTR_PK_P*/
	public final EZDBBigDecimalItem              dsContrPk_P;

    /** DS_CONTR_DTL_PK_P*/
	public final EZDBBigDecimalItem              dsContrDtlPk_P;

    /** XX_MODE_CD_P*/
	public final EZDBStringItem              xxModeCd_P;

    /** SLS_DT_P*/
	public final EZDBDateItem              slsDt_P;

    /** DS_CONTR_NUM*/
	public final EZDBStringItem              dsContrNum;

    /** XX_SCR_ITEM_34_TXT*/
	public final EZDBStringItem              xxScrItem34Txt;

    /** DS_CONTR_CTRL_STS_NM*/
	public final EZDBStringItem              dsContrCtrlStsNm;

    /** SVC_CONTR_BR_DESC_TXT*/
	public final EZDBStringItem              svcContrBrDescTxt;

    /** DS_CONTR_NM*/
	public final EZDBStringItem              dsContrNm;

    /** DS_ACCT_NUM*/
	public final EZDBStringItem              dsAcctNum;

    /** DS_ACCT_NM*/
	public final EZDBStringItem              dsAcctNm;

    /** DS_CONTR_CATG_CD_H*/
	public final EZDBStringItem              dsContrCatgCd_H;

    /** BLLG_CYCLE_CD_DF*/
	public final EZDBStringItem              bllgCycleCd_DF;

    /** BLLG_CYCLE_SORT_NUM_DF*/
	public final EZDBBigDecimalItem              bllgCycleSortNum_DF;

    /** XX_PG_FLG_DE*/
	public final EZDBStringItem              xxPgFlg_DE;

    /** CONTR_VRSN_EFF_FROM_DT*/
	public final EZDBDateItem              contrVrsnEffFromDt;

    /** CONTR_VRSN_EFF_THRU_DT*/
	public final EZDBDateItem              contrVrsnEffThruDt;

    /** DS_CONTR_DTL_PK_CD*/
	public final EZDBBigDecimalItemArray              dsContrDtlPk_CD;

    /** XX_SCR_ITEM_34_TXT_DI*/
	public final EZDBStringItemArray              xxScrItem34Txt_DI;

    /** ADDL_CHRG_TP_CD_CD*/
	public final EZDBStringItemArray              addlChrgTpCd_CD;

    /** ADDL_CHRG_TP_NM_DI*/
	public final EZDBStringItemArray              addlChrgTpNm_DI;

    /** BLLG_CYCLE_CD_CD*/
	public final EZDBStringItemArray              bllgCycleCd_CD;

    /** BLLG_CYCLE_NM_DI*/
	public final EZDBStringItemArray              bllgCycleNm_DI;

    /** SVC_BILL_BY_TP_CD_CD*/
	public final EZDBStringItemArray              svcBillByTpCd_CD;

    /** SVC_BILL_BY_TP_NM_DI*/
	public final EZDBStringItemArray              svcBillByTpNm_DI;

    /** SVC_BILL_BY_TP_CD_MC*/
	public final EZDBStringItemArray              svcBillByTpCd_MC;

    /** SVC_BILL_BY_TP_NM_MD*/
	public final EZDBStringItemArray              svcBillByTpNm_MD;

    /** ADDL_CHRG_INV_TP_CD_CD*/
	public final EZDBStringItemArray              addlChrgInvTpCd_CD;

    /** ADDL_CHRG_INV_TP_NM_DI*/
	public final EZDBStringItemArray              addlChrgInvTpNm_DI;

    /** EFF_FROM_DT_AC*/
	public final EZDBDateItemArray              effFromDt_AC;

    /** EFF_THRU_DT_AC*/
	public final EZDBDateItemArray              effThruDt_AC;

    /** A*/
	public final business.servlet.NSAL0410.NSAL0410_ABMsgArray              A;

    /** B*/
	public final business.servlet.NSAL0410.NSAL0410_BBMsgArray              B;

    /** T*/
	public final business.servlet.NSAL0410.NSAL0410_TBMsgArray              T;

    /** XX_LIST_NUM_AX*/
	public final EZDBBigDecimalItem              xxListNum_AX;

    /** XX_LIST_NUM_AY*/
	public final EZDBBigDecimalItem              xxListNum_AY;

    /** Z*/
	public final business.servlet.NSAL0410.NSAL0410_ZBMsgArray              Z;


	/**
	 * NSAL0410BMsg is constructor.
	 * The initialization when the instance of NSAL0410BMsg is generated.
	 */
	public NSAL0410BMsg() {
		this(false, -1);
	}

	/**
	 * NSAL0410BMsg is constructor.
	 * The initialization when the instance of NSAL0410BMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL0410BMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		dsContrPk_P = (EZDBBigDecimalItem)newItem("dsContrPk_P");
		dsContrDtlPk_P = (EZDBBigDecimalItem)newItem("dsContrDtlPk_P");
		xxModeCd_P = (EZDBStringItem)newItem("xxModeCd_P");
		slsDt_P = (EZDBDateItem)newItem("slsDt_P");
		dsContrNum = (EZDBStringItem)newItem("dsContrNum");
		xxScrItem34Txt = (EZDBStringItem)newItem("xxScrItem34Txt");
		dsContrCtrlStsNm = (EZDBStringItem)newItem("dsContrCtrlStsNm");
		svcContrBrDescTxt = (EZDBStringItem)newItem("svcContrBrDescTxt");
		dsContrNm = (EZDBStringItem)newItem("dsContrNm");
		dsAcctNum = (EZDBStringItem)newItem("dsAcctNum");
		dsAcctNm = (EZDBStringItem)newItem("dsAcctNm");
		dsContrCatgCd_H = (EZDBStringItem)newItem("dsContrCatgCd_H");
		bllgCycleCd_DF = (EZDBStringItem)newItem("bllgCycleCd_DF");
		bllgCycleSortNum_DF = (EZDBBigDecimalItem)newItem("bllgCycleSortNum_DF");
		xxPgFlg_DE = (EZDBStringItem)newItem("xxPgFlg_DE");
		contrVrsnEffFromDt = (EZDBDateItem)newItem("contrVrsnEffFromDt");
		contrVrsnEffThruDt = (EZDBDateItem)newItem("contrVrsnEffThruDt");
		dsContrDtlPk_CD = (EZDBBigDecimalItemArray)newItemArray("dsContrDtlPk_CD");
		xxScrItem34Txt_DI = (EZDBStringItemArray)newItemArray("xxScrItem34Txt_DI");
		addlChrgTpCd_CD = (EZDBStringItemArray)newItemArray("addlChrgTpCd_CD");
		addlChrgTpNm_DI = (EZDBStringItemArray)newItemArray("addlChrgTpNm_DI");
		bllgCycleCd_CD = (EZDBStringItemArray)newItemArray("bllgCycleCd_CD");
		bllgCycleNm_DI = (EZDBStringItemArray)newItemArray("bllgCycleNm_DI");
		svcBillByTpCd_CD = (EZDBStringItemArray)newItemArray("svcBillByTpCd_CD");
		svcBillByTpNm_DI = (EZDBStringItemArray)newItemArray("svcBillByTpNm_DI");
		svcBillByTpCd_MC = (EZDBStringItemArray)newItemArray("svcBillByTpCd_MC");
		svcBillByTpNm_MD = (EZDBStringItemArray)newItemArray("svcBillByTpNm_MD");
		addlChrgInvTpCd_CD = (EZDBStringItemArray)newItemArray("addlChrgInvTpCd_CD");
		addlChrgInvTpNm_DI = (EZDBStringItemArray)newItemArray("addlChrgInvTpNm_DI");
		effFromDt_AC = (EZDBDateItemArray)newItemArray("effFromDt_AC");
		effThruDt_AC = (EZDBDateItemArray)newItemArray("effThruDt_AC");
		A = (business.servlet.NSAL0410.NSAL0410_ABMsgArray)newMsgArray("A");
		B = (business.servlet.NSAL0410.NSAL0410_BBMsgArray)newMsgArray("B");
		T = (business.servlet.NSAL0410.NSAL0410_TBMsgArray)newMsgArray("T");
		xxListNum_AX = (EZDBBigDecimalItem)newItem("xxListNum_AX");
		xxListNum_AY = (EZDBBigDecimalItem)newItem("xxListNum_AY");
		Z = (business.servlet.NSAL0410.NSAL0410_ZBMsgArray)newMsgArray("Z");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL0410BMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL0410BMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"dsContrPk_P", "dsContrPk_P", "P", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrDtlPk_P", "dsContrDtlPk_P", "P", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"xxModeCd_P", "xxModeCd_P", "P", null, TYPE_HANKAKUEISU, "2", null},
	{"slsDt_P", "slsDt_P", "P", null, TYPE_NENTSUKIHI, "8", null},
	{"dsContrNum", "dsContrNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"xxScrItem34Txt", "xxScrItem34Txt", null, null, TYPE_HANKAKUEISU, "34", null},
	{"dsContrCtrlStsNm", "dsContrCtrlStsNm", null, null, TYPE_HANKAKUEISU, "50", null},
	{"svcContrBrDescTxt", "svcContrBrDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"dsContrNm", "dsContrNm", null, null, TYPE_HANKAKUEISU, "60", null},
	{"dsAcctNum", "dsAcctNum", null, null, TYPE_HANKAKUEISU, "20", null},
	{"dsAcctNm", "dsAcctNm", null, null, TYPE_HANKAKUEISU, "360", null},
	{"dsContrCatgCd_H", "dsContrCatgCd_H", "H", null, TYPE_HANKAKUEISU, "3", null},
	{"bllgCycleCd_DF", "bllgCycleCd_DF", "DF", null, TYPE_HANKAKUEISU, "1", null},
	{"bllgCycleSortNum_DF", "bllgCycleSortNum_DF", "DF", null, TYPE_SEISU_SYOSU, "3", "0"},
	{"xxPgFlg_DE", "xxPgFlg_DE", "DE", null, TYPE_HANKAKUEISU, "1", null},
	{"contrVrsnEffFromDt", "contrVrsnEffFromDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"contrVrsnEffThruDt", "contrVrsnEffThruDt", null, null, TYPE_NENTSUKIHI, "8", null},
	{"dsContrDtlPk_CD", "dsContrDtlPk_CD", "CD", "99", TYPE_SEISU_SYOSU, "28", "0"},
	{"xxScrItem34Txt_DI", "xxScrItem34Txt_DI", "DI", "99", TYPE_HANKAKUEISU, "34", null},
	{"addlChrgTpCd_CD", "addlChrgTpCd_CD", "CD", "99", TYPE_HANKAKUEISU, "16", null},
	{"addlChrgTpNm_DI", "addlChrgTpNm_DI", "DI", "99", TYPE_HANKAKUEISU, "50", null},
	{"bllgCycleCd_CD", "bllgCycleCd_CD", "CD", "99", TYPE_HANKAKUEISU, "1", null},
	{"bllgCycleNm_DI", "bllgCycleNm_DI", "DI", "99", TYPE_HANKAKUEISU, "15", null},
	{"svcBillByTpCd_CD", "svcBillByTpCd_CD", "CD", "99", TYPE_HANKAKUEISU, "4", null},
	{"svcBillByTpNm_DI", "svcBillByTpNm_DI", "DI", "99", TYPE_HANKAKUEISU, "50", null},
	{"svcBillByTpCd_MC", "svcBillByTpCd_MC", "MC", "99", TYPE_HANKAKUEISU, "4", null},
	{"svcBillByTpNm_MD", "svcBillByTpNm_MD", "MD", "99", TYPE_HANKAKUEISU, "50", null},
	{"addlChrgInvTpCd_CD", "addlChrgInvTpCd_CD", "CD", "99", TYPE_HANKAKUEISU, "4", null},
	{"addlChrgInvTpNm_DI", "addlChrgInvTpNm_DI", "DI", "99", TYPE_HANKAKUEISU, "50", null},
	{"effFromDt_AC", "effFromDt_AC", "AC", "99", TYPE_NENTSUKIHI, "8", null},
	{"effThruDt_AC", "effThruDt_AC", "AC", "99", TYPE_NENTSUKIHI, "8", null},
	{"A", "A", null, "200", "business.servlet.NSAL0410.NSAL0410_ABMsgArray", null, null},
	
	{"B", "B", null, "200", "business.servlet.NSAL0410.NSAL0410_BBMsgArray", null, null},
	
	{"T", "T", null, "20", "business.servlet.NSAL0410.NSAL0410_TBMsgArray", null, null},
	
	{"xxListNum_AX", "xxListNum_AX", "AX", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxListNum_AY", "xxListNum_AY", "AY", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"Z", "Z", null, "10", "business.servlet.NSAL0410.NSAL0410_ZBMsgArray", null, null},
	
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"DS_CONTR_PK", YES,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrPk_P
        {"DS_CONTR_DTL_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrDtlPk_P
        {"XX_MODE_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxModeCd_P
        {"SLS_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//slsDt_P
        {"DS_CONTR_NUM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrNum
        {"XX_SCR_ITEM_34_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxScrItem34Txt
        {"DS_CONTR_CTRL_STS_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrCtrlStsNm
        {"SVC_CONTR_BR_DESC_TXT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcContrBrDescTxt
        {"DS_CONTR_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrNm
        {"DS_ACCT_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctNum
        {"DS_ACCT_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctNm
        {"DS_CONTR_CATG_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrCatgCd_H
        {"BLLG_CYCLE_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgCycleCd_DF
        {"BLLG_CYCLE_SORT_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgCycleSortNum_DF
        {"XX_PG_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPgFlg_DE
        {"CONTR_VRSN_EFF_FROM_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO,  NO},	//contrVrsnEffFromDt
        {"CONTR_VRSN_EFF_THRU_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO,  NO},	//contrVrsnEffThruDt
        {"DS_CONTR_DTL_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrDtlPk_CD
        {"XX_SCR_ITEM_34_TXT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxScrItem34Txt_DI
        {"ADDL_CHRG_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//addlChrgTpCd_CD
        {"ADDL_CHRG_TP_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//addlChrgTpNm_DI
        {"BLLG_CYCLE_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgCycleCd_CD
        {"BLLG_CYCLE_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgCycleNm_DI
        {"SVC_BILL_BY_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcBillByTpCd_CD
        {"SVC_BILL_BY_TP_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcBillByTpNm_DI
        {"SVC_BILL_BY_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcBillByTpCd_MC
        {"SVC_BILL_BY_TP_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcBillByTpNm_MD
        {"ADDL_CHRG_INV_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//addlChrgInvTpCd_CD
        {"ADDL_CHRG_INV_TP_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//addlChrgInvTpNm_DI
        {"EFF_FROM_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//effFromDt_AC
        {"EFF_THRU_DT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//effThruDt_AC
		null,	//A
		null,	//B
		null,	//T
        {"XX_LIST_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxListNum_AX
        {"XX_LIST_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxListNum_AY
		null,	//Z
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

