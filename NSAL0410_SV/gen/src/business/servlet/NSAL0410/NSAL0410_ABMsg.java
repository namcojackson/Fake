//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20190131174049000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0410_ABMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NSAL0410;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL0410 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL0410_ABMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** DS_CONTR_ADDL_CHRG_PK_A*/
	public final EZDBBigDecimalItem              dsContrAddlChrgPk_A;

    /** DS_CONTR_PK_A*/
	public final EZDBBigDecimalItem              dsContrPk_A;

    /** XX_CHK_BOX_A*/
	public final EZDBStringItem              xxChkBox_A;

    /** DS_CONTR_NUM_A*/
	public final EZDBStringItem              dsContrNum_A;

    /** DS_CONTR_DTL_PK_A*/
	public final EZDBBigDecimalItem              dsContrDtlPk_A;

    /** XX_SCR_ITEM_34_TXT_A*/
	public final EZDBStringItem              xxScrItem34Txt_A;

    /** SVC_MACH_MSTR_PK_A*/
	public final EZDBBigDecimalItem              svcMachMstrPk_A;

    /** MDSE_DESC_SHORT_TXT_A*/
	public final EZDBStringItem              mdseDescShortTxt_A;

    /** ADDL_CHRG_TP_CD_SE*/
	public final EZDBStringItem              addlChrgTpCd_SE;

    /** EFF_FROM_DT_A*/
	public final EZDBDateItem              effFromDt_A;

    /** EFF_THRU_DT_A*/
	public final EZDBDateItem              effThruDt_A;

    /** TRMN_DT_A*/
	public final EZDBDateItem              trmnDt_A;

    /** BLLG_CYCLE_CD_SE*/
	public final EZDBStringItem              bllgCycleCd_SE;

    /** SVC_BILL_BY_TP_CD_SE*/
	public final EZDBStringItem              svcBillByTpCd_SE;

    /** SVC_BILL_BY_TP_CD_AC*/
	public final EZDBStringItemArray              svcBillByTpCd_AC;

    /** SVC_BILL_BY_TP_NM_AD*/
	public final EZDBStringItemArray              svcBillByTpNm_AD;

    /** ADDL_CHRG_FLAT_DEAL_PRC_AMT_A*/
	public final EZDBBigDecimalItem              addlChrgFlatDealPrcAmt_A;

    /** ADDL_CHRG_APLC_PCT_A*/
	public final EZDBBigDecimalItem              addlChrgAplcPct_A;

    /** ADDL_CHRG_INV_TP_CD_SE*/
	public final EZDBStringItem              addlChrgInvTpCd_SE;

    /** PRINT_DTL_FLG_A*/
	public final EZDBStringItem              printDtlFlg_A;

    /** INTG_MDSE_CD_A*/
	public final EZDBStringItem              intgMdseCd_A;

    /** TERM_COND_OPT_VAL_TXT_A*/
	public final EZDBStringItem              termCondOptValTxt_A;

    /** ADDL_CHRG_INVD_FLG_A*/
	public final EZDBStringItem              addlChrgInvdFlg_A;

    /** CONTR_MACH_AVAL_FLG_A*/
	public final EZDBStringItem              contrMachAvalFlg_A;

    /** INV_FLG_A*/
	public final EZDBStringItem              invFlg_A;

    /** _EZUpdateDateTime_A*/
	public final EZDBStringItem              ezUpTime_A;

    /** _EZUpTimeZone_A*/
	public final EZDBStringItem              ezUpTimeZone_A;

    /** XX_REC_HIST_CRAT_TS_A*/
	public final EZDBStringItem              xxRecHistCratTs_A;

    /** XX_REC_HIST_CRAT_BY_NM_A*/
	public final EZDBStringItem              xxRecHistCratByNm_A;

    /** XX_REC_HIST_UPD_TS_A*/
	public final EZDBStringItem              xxRecHistUpdTs_A;

    /** XX_REC_HIST_UPD_BY_NM_A*/
	public final EZDBStringItem              xxRecHistUpdByNm_A;

    /** XX_REC_HIST_TBL_NM_A*/
	public final EZDBStringItem              xxRecHistTblNm_A;


	/**
	 * NSAL0410_ABMsg is constructor.
	 * The initialization when the instance of NSAL0410_ABMsg is generated.
	 */
	public NSAL0410_ABMsg() {
		this(false, -1);
	}

	/**
	 * NSAL0410_ABMsg is constructor.
	 * The initialization when the instance of NSAL0410_ABMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL0410_ABMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		dsContrAddlChrgPk_A = (EZDBBigDecimalItem)newItem("dsContrAddlChrgPk_A");
		dsContrPk_A = (EZDBBigDecimalItem)newItem("dsContrPk_A");
		xxChkBox_A = (EZDBStringItem)newItem("xxChkBox_A");
		dsContrNum_A = (EZDBStringItem)newItem("dsContrNum_A");
		dsContrDtlPk_A = (EZDBBigDecimalItem)newItem("dsContrDtlPk_A");
		xxScrItem34Txt_A = (EZDBStringItem)newItem("xxScrItem34Txt_A");
		svcMachMstrPk_A = (EZDBBigDecimalItem)newItem("svcMachMstrPk_A");
		mdseDescShortTxt_A = (EZDBStringItem)newItem("mdseDescShortTxt_A");
		addlChrgTpCd_SE = (EZDBStringItem)newItem("addlChrgTpCd_SE");
		effFromDt_A = (EZDBDateItem)newItem("effFromDt_A");
		effThruDt_A = (EZDBDateItem)newItem("effThruDt_A");
		trmnDt_A = (EZDBDateItem)newItem("trmnDt_A");
		bllgCycleCd_SE = (EZDBStringItem)newItem("bllgCycleCd_SE");
		svcBillByTpCd_SE = (EZDBStringItem)newItem("svcBillByTpCd_SE");
		svcBillByTpCd_AC = (EZDBStringItemArray)newItemArray("svcBillByTpCd_AC");
		svcBillByTpNm_AD = (EZDBStringItemArray)newItemArray("svcBillByTpNm_AD");
		addlChrgFlatDealPrcAmt_A = (EZDBBigDecimalItem)newItem("addlChrgFlatDealPrcAmt_A");
		addlChrgAplcPct_A = (EZDBBigDecimalItem)newItem("addlChrgAplcPct_A");
		addlChrgInvTpCd_SE = (EZDBStringItem)newItem("addlChrgInvTpCd_SE");
		printDtlFlg_A = (EZDBStringItem)newItem("printDtlFlg_A");
		intgMdseCd_A = (EZDBStringItem)newItem("intgMdseCd_A");
		termCondOptValTxt_A = (EZDBStringItem)newItem("termCondOptValTxt_A");
		addlChrgInvdFlg_A = (EZDBStringItem)newItem("addlChrgInvdFlg_A");
		contrMachAvalFlg_A = (EZDBStringItem)newItem("contrMachAvalFlg_A");
		invFlg_A = (EZDBStringItem)newItem("invFlg_A");
		ezUpTime_A = (EZDBStringItem)newItem("ezUpTime_A");
		ezUpTimeZone_A = (EZDBStringItem)newItem("ezUpTimeZone_A");
		xxRecHistCratTs_A = (EZDBStringItem)newItem("xxRecHistCratTs_A");
		xxRecHistCratByNm_A = (EZDBStringItem)newItem("xxRecHistCratByNm_A");
		xxRecHistUpdTs_A = (EZDBStringItem)newItem("xxRecHistUpdTs_A");
		xxRecHistUpdByNm_A = (EZDBStringItem)newItem("xxRecHistUpdByNm_A");
		xxRecHistTblNm_A = (EZDBStringItem)newItem("xxRecHistTblNm_A");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL0410_ABMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL0410_ABMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"dsContrAddlChrgPk_A", "dsContrAddlChrgPk_A", "A", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrPk_A", "dsContrPk_A", "A", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"xxChkBox_A", "xxChkBox_A", "A", null, TYPE_HANKAKUEIJI, "1", null},
	{"dsContrNum_A", "dsContrNum_A", "A", null, TYPE_HANKAKUEISU, "30", null},
	{"dsContrDtlPk_A", "dsContrDtlPk_A", "A", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"xxScrItem34Txt_A", "xxScrItem34Txt_A", "A", null, TYPE_HANKAKUEISU, "34", null},
	{"svcMachMstrPk_A", "svcMachMstrPk_A", "A", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"mdseDescShortTxt_A", "mdseDescShortTxt_A", "A", null, TYPE_HANKAKUEISU, "250", null},
	{"addlChrgTpCd_SE", "addlChrgTpCd_SE", "SE", null, TYPE_HANKAKUEISU, "16", null},
	{"effFromDt_A", "effFromDt_A", "A", null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt_A", "effThruDt_A", "A", null, TYPE_NENTSUKIHI, "8", null},
	{"trmnDt_A", "trmnDt_A", "A", null, TYPE_NENTSUKIHI, "8", null},
	{"bllgCycleCd_SE", "bllgCycleCd_SE", "SE", null, TYPE_HANKAKUEISU, "1", null},
	{"svcBillByTpCd_SE", "svcBillByTpCd_SE", "SE", null, TYPE_HANKAKUEISU, "4", null},
	{"svcBillByTpCd_AC", "svcBillByTpCd_AC", "AC", "99", TYPE_HANKAKUEISU, "4", null},
	{"svcBillByTpNm_AD", "svcBillByTpNm_AD", "AD", "99", TYPE_HANKAKUEISU, "50", null},
	{"addlChrgFlatDealPrcAmt_A", "addlChrgFlatDealPrcAmt_A", "A", null, TYPE_SEISU_SYOSU, "19", "4"},
	{"addlChrgAplcPct_A", "addlChrgAplcPct_A", "A", null, TYPE_SEISU_SYOSU, "5", "2"},
	{"addlChrgInvTpCd_SE", "addlChrgInvTpCd_SE", "SE", null, TYPE_HANKAKUEISU, "4", null},
	{"printDtlFlg_A", "printDtlFlg_A", "A", null, TYPE_HANKAKUEISU, "1", null},
	{"intgMdseCd_A", "intgMdseCd_A", "A", null, TYPE_HANKAKUEISU, "16", null},
	{"termCondOptValTxt_A", "termCondOptValTxt_A", "A", null, TYPE_HANKAKUEISU, "10", null},
	{"addlChrgInvdFlg_A", "addlChrgInvdFlg_A", "A", null, TYPE_HANKAKUEISU, "1", null},
	{"contrMachAvalFlg_A", "contrMachAvalFlg_A", "A", null, TYPE_HANKAKUEISU, "1", null},
	{"invFlg_A", "invFlg_A", "A", null, TYPE_HANKAKUEISU, "1", null},
	{"ezUpTime_A", "ezUpTime_A", "A", null, TYPE_HANKAKUEISU, "17", null},
	{"ezUpTimeZone_A", "ezUpTimeZone_A", "A", null, TYPE_HANKAKUEISU, "5", null},
	{"xxRecHistCratTs_A", "xxRecHistCratTs_A", "A", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistCratByNm_A", "xxRecHistCratByNm_A", "A", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistUpdTs_A", "xxRecHistUpdTs_A", "A", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistUpdByNm_A", "xxRecHistUpdByNm_A", "A", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistTblNm_A", "xxRecHistTblNm_A", "A", null, TYPE_HANKAKUEISU, "60", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"DS_CONTR_ADDL_CHRG_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrAddlChrgPk_A
        {"DS_CONTR_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrPk_A
        {"XX_CHK_BOX",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_A
        {"DS_CONTR_NUM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrNum_A
        {"DS_CONTR_DTL_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrDtlPk_A
        {"XX_SCR_ITEM_34_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxScrItem34Txt_A
        {"SVC_MACH_MSTR_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachMstrPk_A
        {"MDSE_DESC_SHORT_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseDescShortTxt_A
        {"ADDL_CHRG_TP_CD", YES,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//addlChrgTpCd_SE
        {"EFF_FROM_DT", YES,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//effFromDt_A
        {"EFF_THRU_DT", YES,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//effThruDt_A
        {"TRMN_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//trmnDt_A
        {"BLLG_CYCLE_CD", YES,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgCycleCd_SE
        {"SVC_BILL_BY_TP_CD", YES,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcBillByTpCd_SE
        {"SVC_BILL_BY_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcBillByTpCd_AC
        {"SVC_BILL_BY_TP_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcBillByTpNm_AD
        {"ADDL_CHRG_FLAT_DEAL_PRC_AMT",  NO,  "0",null,"1", NO,YES, NO, NO,null,null,null, null,  NO,  NO},	//addlChrgFlatDealPrcAmt_A
        {"ADDL_CHRG_APLC_PCT",  NO,  "0","100.00","1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//addlChrgAplcPct_A
        {"ADDL_CHRG_INV_TP_CD", YES,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//addlChrgInvTpCd_SE
        {"PRINT_DTL_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//printDtlFlg_A
        {"INTG_MDSE_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//intgMdseCd_A
        {"TERM_COND_OPT_VAL_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//termCondOptValTxt_A
        {"ADDL_CHRG_INVD_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//addlChrgInvdFlg_A
        {"CONTR_MACH_AVAL_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrMachAvalFlg_A
        {"INV_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invFlg_A
        {"_EZUpdateDateTime",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTime_A
        {"_EZUpTimeZone",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTimeZone_A
        {"XX_REC_HIST_CRAT_TS",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratTs_A
        {"XX_REC_HIST_CRAT_BY_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratByNm_A
        {"XX_REC_HIST_UPD_TS",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdTs_A
        {"XX_REC_HIST_UPD_BY_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdByNm_A
        {"XX_REC_HIST_TBL_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistTblNm_A
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

