//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20190121132648000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0450_ACMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NSAL0450;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL0450 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL0450_ACMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_DPLY_CTRL_FLG*/
	public final EZDCStringItem              xxDplyCtrlFlg;

    /** XX_SMRY_LINE_FLG*/
	public final EZDCStringItem              xxSmryLineFlg;

    /** DS_CONTR_NUM*/
	public final EZDCStringItem              dsContrNum;

    /** SER_NUM*/
	public final EZDCStringItem              serNum;

    /** MDSE_DESC_SHORT_TXT*/
	public final EZDCStringItem              mdseDescShortTxt;

    /** CSA_PRC_CATG_CD*/
	public final EZDCStringItem              csaPrcCatgCd;

    /** COA_BR_CD_L*/
	public final EZDCStringItem              coaBrCd_L;

    /** BASE_CHRG_FLG*/
	public final EZDCStringItem              baseChrgFlg;

    /** COA_AFFL_ACCT_NM*/
	public final EZDCStringItem              coaAfflAcctNm;

    /** USG_CHRG_FLG*/
	public final EZDCStringItem              usgChrgFlg;

    /** DS_CONTR_PK*/
	public final EZDCBigDecimalItem              dsContrPk;

    /** DS_CONTR_DTL_PK*/
	public final EZDCBigDecimalItem              dsContrDtlPk;

    /** SVC_INV_CHRG_TP_CD*/
	public final EZDCStringItem              svcInvChrgTpCd;

    /** COA_CMPY_CD*/
	public final EZDCStringItem              coaCmpyCd;

    /** COA_EXTN_CD*/
	public final EZDCStringItem              coaExtnCd;

    /** COA_BR_CD*/
	public final EZDCStringItem              coaBrCd;

    /** COA_CC_CD*/
	public final EZDCStringItem              coaCcCd;

    /** COA_ACCT_CD*/
	public final EZDCStringItem              coaAcctCd;

    /** COA_PROJ_CD*/
	public final EZDCStringItem              coaProjCd;

    /** COA_PROD_CD*/
	public final EZDCStringItem              coaProdCd;

    /** COA_AFFL_CD*/
	public final EZDCStringItem              coaAfflCd;

    /** COA_CH_CD*/
	public final EZDCStringItem              coaChCd;

    /** MDSE_CD*/
	public final EZDCStringItem              mdseCd;

    /** DS_ACCT_NUM*/
	public final EZDCStringItem              dsAcctNum;

    /** INV_CONSL_NUM*/
	public final EZDCStringItem              invConslNum;

    /** SVC_MACH_MSTR_PK*/
	public final EZDCBigDecimalItem              svcMachMstrPk;

    /** XX_FLG_NM*/
	public final EZDCStringItem              xxFlgNm;


	/**
	 * NSAL0450_ACMsg is constructor.
	 * The initialization when the instance of NSAL0450_ACMsg is generated.
	 */
	public NSAL0450_ACMsg() {
		this(false, -1);
	}

	/**
	 * NSAL0450_ACMsg is constructor.
	 * The initialization when the instance of NSAL0450_ACMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL0450_ACMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxDplyCtrlFlg = (EZDCStringItem)newItem("xxDplyCtrlFlg");
		xxSmryLineFlg = (EZDCStringItem)newItem("xxSmryLineFlg");
		dsContrNum = (EZDCStringItem)newItem("dsContrNum");
		serNum = (EZDCStringItem)newItem("serNum");
		mdseDescShortTxt = (EZDCStringItem)newItem("mdseDescShortTxt");
		csaPrcCatgCd = (EZDCStringItem)newItem("csaPrcCatgCd");
		coaBrCd_L = (EZDCStringItem)newItem("coaBrCd_L");
		baseChrgFlg = (EZDCStringItem)newItem("baseChrgFlg");
		coaAfflAcctNm = (EZDCStringItem)newItem("coaAfflAcctNm");
		usgChrgFlg = (EZDCStringItem)newItem("usgChrgFlg");
		dsContrPk = (EZDCBigDecimalItem)newItem("dsContrPk");
		dsContrDtlPk = (EZDCBigDecimalItem)newItem("dsContrDtlPk");
		svcInvChrgTpCd = (EZDCStringItem)newItem("svcInvChrgTpCd");
		coaCmpyCd = (EZDCStringItem)newItem("coaCmpyCd");
		coaExtnCd = (EZDCStringItem)newItem("coaExtnCd");
		coaBrCd = (EZDCStringItem)newItem("coaBrCd");
		coaCcCd = (EZDCStringItem)newItem("coaCcCd");
		coaAcctCd = (EZDCStringItem)newItem("coaAcctCd");
		coaProjCd = (EZDCStringItem)newItem("coaProjCd");
		coaProdCd = (EZDCStringItem)newItem("coaProdCd");
		coaAfflCd = (EZDCStringItem)newItem("coaAfflCd");
		coaChCd = (EZDCStringItem)newItem("coaChCd");
		mdseCd = (EZDCStringItem)newItem("mdseCd");
		dsAcctNum = (EZDCStringItem)newItem("dsAcctNum");
		invConslNum = (EZDCStringItem)newItem("invConslNum");
		svcMachMstrPk = (EZDCBigDecimalItem)newItem("svcMachMstrPk");
		xxFlgNm = (EZDCStringItem)newItem("xxFlgNm");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL0450_ACMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL0450_ACMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxDplyCtrlFlg", "xxDplyCtrlFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"xxSmryLineFlg", "xxSmryLineFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"dsContrNum", "dsContrNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"serNum", "serNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"mdseDescShortTxt", "mdseDescShortTxt", null, null, TYPE_HANKAKUEISU, "250", null},
	{"csaPrcCatgCd", "csaPrcCatgCd", null, null, TYPE_HANKAKUEISU, "10", null},
	{"coaBrCd_L", "coaBrCd_L", "L", null, TYPE_HANKAKUEISU, "3", null},
	{"baseChrgFlg", "baseChrgFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"coaAfflAcctNm", "coaAfflAcctNm", null, null, TYPE_HANKAKUEISU, "50", null},
	{"usgChrgFlg", "usgChrgFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"dsContrPk", "dsContrPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrDtlPk", "dsContrDtlPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"svcInvChrgTpCd", "svcInvChrgTpCd", null, null, TYPE_HANKAKUEISU, "6", null},
	{"coaCmpyCd", "coaCmpyCd", null, null, TYPE_HANKAKUEISU, "3", null},
	{"coaExtnCd", "coaExtnCd", null, null, TYPE_HANKAKUEISU, "3", null},
	{"coaBrCd", "coaBrCd", null, null, TYPE_HANKAKUEISU, "3", null},
	{"coaCcCd", "coaCcCd", null, null, TYPE_HANKAKUEISU, "6", null},
	{"coaAcctCd", "coaAcctCd", null, null, TYPE_HANKAKUEISU, "8", null},
	{"coaProjCd", "coaProjCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"coaProdCd", "coaProdCd", null, null, TYPE_HANKAKUEISU, "8", null},
	{"coaAfflCd", "coaAfflCd", null, null, TYPE_HANKAKUEISU, "3", null},
	{"coaChCd", "coaChCd", null, null, TYPE_HANKAKUEISU, "3", null},
	{"mdseCd", "mdseCd", null, null, TYPE_HANKAKUEISU, "16", null},
	{"dsAcctNum", "dsAcctNum", null, null, TYPE_HANKAKUEISU, "20", null},
	{"invConslNum", "invConslNum", null, null, TYPE_HANKAKUEISU, "10", null},
	{"svcMachMstrPk", "svcMachMstrPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"xxFlgNm", "xxFlgNm", null, null, TYPE_HANKAKUEISU, "4", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_DPLY_CTRL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDplyCtrlFlg
        {"XX_SMRY_LINE_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxSmryLineFlg
        {"DS_CONTR_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrNum
        {"SER_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNum
        {"MDSE_DESC_SHORT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseDescShortTxt
        {"CSA_PRC_CATG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//csaPrcCatgCd
        {"COA_BR_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaBrCd_L
        {"BASE_CHRG_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//baseChrgFlg
        {"COA_AFFL_ACCT_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaAfflAcctNm
        {"USG_CHRG_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//usgChrgFlg
        {"DS_CONTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrPk
        {"DS_CONTR_DTL_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrDtlPk
        {"SVC_INV_CHRG_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcInvChrgTpCd
        {"COA_CMPY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaCmpyCd
        {"COA_EXTN_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaExtnCd
        {"COA_BR_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaBrCd
        {"COA_CC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaCcCd
        {"COA_ACCT_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaAcctCd
        {"COA_PROJ_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaProjCd
        {"COA_PROD_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaProdCd
        {"COA_AFFL_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaAfflCd
        {"COA_CH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaChCd
        {"MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd
        {"DS_ACCT_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctNum
        {"INV_CONSL_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invConslNum
        {"SVC_MACH_MSTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachMstrPk
        {"XX_FLG_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxFlgNm
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

