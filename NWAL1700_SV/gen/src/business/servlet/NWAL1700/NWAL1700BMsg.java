//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20230427160329000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NWAL1700BMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NWAL1700;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NWAL1700 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NWAL1700BMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** DS_ORD_CATG_CD*/
	public final EZDBStringItem              dsOrdCatgCd;

    /** DS_ORD_CATG_CD_P*/
	public final EZDBStringItemArray              dsOrdCatgCd_P;

    /** DS_ORD_CATG_DESC_TXT_P*/
	public final EZDBStringItemArray              dsOrdCatgDescTxt_P;

    /** DS_ORD_TP_CD*/
	public final EZDBStringItem              dsOrdTpCd;

    /** DS_ORD_TP_NM*/
	public final EZDBStringItem              dsOrdTpNm;

    /** ORD_PROC_TP_CD*/
	public final EZDBStringItem              ordProcTpCd;

    /** ORD_PROC_TP_CD_P*/
	public final EZDBStringItemArray              ordProcTpCd_P;

    /** ORD_PROC_TP_DESC_TXT_P*/
	public final EZDBStringItemArray              ordProcTpDescTxt_P;

    /** DS_ORD_RSN_GRP_CD*/
	public final EZDBStringItem              dsOrdRsnGrpCd;

    /** DS_ORD_RSN_GRP_CD_P*/
	public final EZDBStringItemArray              dsOrdRsnGrpCd_P;

    /** DS_ORD_RSN_GRP_DESC_TXT_P*/
	public final EZDBStringItemArray              dsOrdRsnGrpDescTxt_P;

    /** DS_ORD_TP_DESC_TXT*/
	public final EZDBStringItem              dsOrdTpDescTxt;

    /** DS_ORD_TP_NOTE_TXT*/
	public final EZDBStringItem              dsOrdTpNoteTxt;

    /** LINE_BIZ_TP_CD*/
	public final EZDBStringItem              lineBizTpCd;

    /** LINE_BIZ_TP_CD_P*/
	public final EZDBStringItemArray              lineBizTpCd_P;

    /** LINE_BIZ_TP_DESC_TXT_P*/
	public final EZDBStringItemArray              lineBizTpDescTxt_P;

    /** EFF_FROM_DT*/
	public final EZDBDateItem              effFromDt;

    /** EFF_THRU_DT*/
	public final EZDBDateItem              effThruDt;

    /** ACTV_FLG*/
	public final EZDBStringItem              actvFlg;

    /** REV_RECOG_METH_CD*/
	public final EZDBStringItem              revRecogMethCd;

    /** CPO_ORD_TP_CD*/
	public final EZDBStringItem              cpoOrdTpCd;

    /** VLD_APVL_NODE_USG_FLG*/
	public final EZDBStringItem              vldApvlNodeUsgFlg;

    /** VLD_APVL_NODE_PRFL_CD*/
	public final EZDBStringItem              vldApvlNodePrflCd;

    /** VLD_APVL_NODE_PRFL_CD_PV*/
	public final EZDBStringItemArray              vldApvlNodePrflCd_PV;

    /** ORD_PROC_NODE_PRFL_NM_PV*/
	public final EZDBStringItemArray              ordProcNodePrflNm_PV;

    /** DI_CHK_NODE_USG_FLG*/
	public final EZDBStringItem              diChkNodeUsgFlg;

    /** DI_CHK_NODE_PRFL_CD*/
	public final EZDBStringItem              diChkNodePrflCd;

    /** DI_CHK_NODE_PRFL_CD_PD*/
	public final EZDBStringItemArray              diChkNodePrflCd_PD;

    /** ORD_PROC_NODE_PRFL_NM_PD*/
	public final EZDBStringItemArray              ordProcNodePrflNm_PD;

    /** PRFT_APVL_NODE_USG_FLG*/
	public final EZDBStringItem              prftApvlNodeUsgFlg;

    /** PRFT_APVL_NODE_PRFL_CD*/
	public final EZDBStringItem              prftApvlNodePrflCd;

    /** PRFT_APVL_NODE_PRFL_CD_PP*/
	public final EZDBStringItemArray              prftApvlNodePrflCd_PP;

    /** ORD_PROC_NODE_PRFL_NM_PP*/
	public final EZDBStringItemArray              ordProcNodePrflNm_PP;

    /** CR_APVL_NODE_USG_FLG*/
	public final EZDBStringItem              crApvlNodeUsgFlg;

    /** CR_APVL_NODE_PRFL_CD*/
	public final EZDBStringItem              crApvlNodePrflCd;

    /** CR_APVL_NODE_PRFL_CD_PC*/
	public final EZDBStringItemArray              crApvlNodePrflCd_PC;

    /** ORD_PROC_NODE_PRFL_NM_PC*/
	public final EZDBStringItemArray              ordProcNodePrflNm_PC;

    /** ASSET_NODE_USG_FLG*/
	public final EZDBStringItem              assetNodeUsgFlg;

    /** ASSET_NODE_PRFL_CD*/
	public final EZDBStringItem              assetNodePrflCd;

    /** ASSET_NODE_PRFL_CD_PF*/
	public final EZDBStringItemArray              assetNodePrflCd_PF;

    /** ORD_PROC_NODE_PRFL_NM_PF*/
	public final EZDBStringItemArray              ordProcNodePrflNm_PF;

    /** OUT_OF_WH_NODE_USG_FLG*/
	public final EZDBStringItem              outOfWhNodeUsgFlg;

    /** OUT_OF_WH_NODE_PRFL_CD*/
	public final EZDBStringItem              outOfWhNodePrflCd;

    /** OUT_OF_WH_NODE_PRFL_CD_PO*/
	public final EZDBStringItemArray              outOfWhNodePrflCd_PO;

    /** ORD_PROC_NODE_PRFL_NM_PO*/
	public final EZDBStringItemArray              ordProcNodePrflNm_PO;

    /** SPLY_ABUSE_NODE_USG_FLG*/
	public final EZDBStringItem              splyAbuseNodeUsgFlg;

    /** SPLY_ABUSE_NODE_PRFL_CD*/
	public final EZDBStringItem              splyAbuseNodePrflCd;

    /** SPLY_ABUSE_NODE_PRFL_CD_PS*/
	public final EZDBStringItemArray              splyAbuseNodePrflCd_PS;

    /** ORD_PROC_NODE_PRFL_NM_PS*/
	public final EZDBStringItemArray              ordProcNodePrflNm_PS;

    /** MAN_PRC_NODE_USG_FLG*/
	public final EZDBStringItem              manPrcNodeUsgFlg;

    /** MAN_PRC_NODE_PRFL_CD*/
	public final EZDBStringItem              manPrcNodePrflCd;

    /** MAN_PRC_NODE_PRFL_CD_PM*/
	public final EZDBStringItemArray              manPrcNodePrflCd_PM;

    /** ORD_PROC_NODE_PRFL_NM_PM*/
	public final EZDBStringItemArray              ordProcNodePrflNm_PM;

    /** DS_INV_TP_CD*/
	public final EZDBStringItem              dsInvTpCd;

    /** DS_INV_TP_NM*/
	public final EZDBStringItem              dsInvTpNm;

    /** AUTO_CANC_ORD_FLG*/
	public final EZDBStringItem              autoCancOrdFlg;

    /** DEF_PRC_CATG_CD*/
	public final EZDBStringItem              defPrcCatgCd;

    /** PRC_CATG_DESC_TXT_PR*/
	public final EZDBStringItem              prcCatgDescTxt_PR;

    /** DEF_MAINT_PRC_CATG_CD*/
	public final EZDBStringItem              defMaintPrcCatgCd;

    /** PRC_CATG_DESC_TXT_SP*/
	public final EZDBStringItem              prcCatgDescTxt_SP;

    /** REV_FCST_CD*/
	public final EZDBStringItem              revFcstCd;

    /** REV_FCST_CD_P*/
	public final EZDBStringItemArray              revFcstCd_P;

    /** REV_FCST_DESC_TXT_P*/
	public final EZDBStringItemArray              revFcstDescTxt_P;

    /** FRT_COND_CD*/
	public final EZDBStringItem              frtCondCd;

    /** FRT_COND_CD_P*/
	public final EZDBStringItemArray              frtCondCd_P;

    /** FRT_COND_DESC_TXT_P*/
	public final EZDBStringItemArray              frtCondDescTxt_P;

    /** INV_PRINT_STYLE_CD*/
	public final EZDBStringItem              invPrintStyleCd;

    /** INV_PRINT_STYLE_CD_P*/
	public final EZDBStringItemArray              invPrintStyleCd_P;

    /** INV_PRINT_STYLE_DESC_TXT_P*/
	public final EZDBStringItemArray              invPrintStyleDescTxt_P;

    /** TRTY_GRP_TP_TXT*/
	public final EZDBStringItem              trtyGrpTpTxt;

    /** DEF_BILL_TO_CUST_ACCT_CD*/
	public final EZDBStringItem              defBillToCustAcctCd;

    /** DS_ACCT_NM*/
	public final EZDBStringItem              dsAcctNm;

    /** DEF_BILL_TO_CUST_CD*/
	public final EZDBStringItem              defBillToCustCd;

    /** LOC_DESC_TXT*/
	public final EZDBStringItem              locDescTxt;

    /** DEF_INSTL_TP_CD*/
	public final EZDBStringItem              defInstlTpCd;

    /** DEF_INSTL_TP_CD_P*/
	public final EZDBStringItemArray              defInstlTpCd_P;

    /** SVC_ISTL_TP_DESC_TXT_P*/
	public final EZDBStringItemArray              svcIstlTpDescTxt_P;

    /** DEF_SHPG_SVC_LVL_CD*/
	public final EZDBStringItem              defShpgSvcLvlCd;

    /** DEF_SHPG_SVC_LVL_CD_P*/
	public final EZDBStringItemArray              defShpgSvcLvlCd_P;

    /** SHPG_SVC_LVL_DESC_TXT_P*/
	public final EZDBStringItemArray              shpgSvcLvlDescTxt_P;

    /** DEF_CARR_SVC_LVL_CD*/
	public final EZDBStringItem              defCarrSvcLvlCd;

    /** CARR_SVC_LVL_DESC_TXT*/
	public final EZDBStringItem              carrSvcLvlDescTxt;

    /** DROP_SHIP_AVAL_FLG*/
	public final EZDBStringItem              dropShipAvalFlg;

    /** BASE_LOC_TXT*/
	public final EZDBStringItem              baseLocTxt;

    /** BASE_LOC_TXT_PC*/
	public final EZDBStringItemArray              baseLocTxt_PC;

    /** BASE_LOC_TXT_PD*/
	public final EZDBStringItemArray              baseLocTxt_PD;

    /** _EZUpdateDateTime*/
	public final EZDBStringItem              ezUpTime;

    /** _EZUpTimeZone*/
	public final EZDBStringItem              ezUpTimeZone;

    /** _EZUpdateDateTime_TP*/
	public final EZDBStringItem              ezUpTime_TP;

    /** _EZUpTimeZone_TP*/
	public final EZDBStringItem              ezUpTimeZone_TP;

    /** DS_ORD_LINE_CATG_CD_PL*/
	public final EZDBStringItemArray              dsOrdLineCatgCd_PL;

    /** DS_ORD_LINE_CATG_DESC_TXT_PL*/
	public final EZDBStringItemArray              dsOrdLineCatgDescTxt_PL;

    /** ORD_PROC_TP_CD_PL*/
	public final EZDBStringItemArray              ordProcTpCd_PL;

    /** ORD_PROC_TP_DESC_TXT_PL*/
	public final EZDBStringItemArray              ordProcTpDescTxt_PL;

    /** A*/
	public final business.servlet.NWAL1700.NWAL1700_ABMsgArray              A;

    /** B*/
	public final business.servlet.NWAL1700.NWAL1700_BBMsgArray              B;

    /** C*/
	public final business.servlet.NWAL1700.NWAL1700_CBMsgArray              C;

    /** D*/
	public final business.servlet.NWAL1700.NWAL1700_DBMsgArray              D;

    /** E*/
	public final business.servlet.NWAL1700.NWAL1700_EBMsgArray              E;

    /** F*/
	public final business.servlet.NWAL1700.NWAL1700_FBMsgArray              F;

    /** G*/
	public final business.servlet.NWAL1700.NWAL1700_GBMsgArray              G;

    /** XX_MODE_CD*/
	public final EZDBStringItem              xxModeCd;

    /** XX_ROW_NUM*/
	public final EZDBBigDecimalItem              xxRowNum;

    /** XX_LINK_ANCR_AR*/
	public final EZDBStringItem              xxLinkAncr_AR;

    /** XX_LINK_ANCR_CS*/
	public final EZDBStringItem              xxLinkAncr_CS;

    /** XX_SCR_EVENT_NM*/
	public final EZDBStringItem              xxScrEventNm;

    /** XX_CELL_IDX*/
	public final EZDBBigDecimalItem              xxCellIdx;

    /** XX_LIST_NUM_LY*/
	public final EZDBBigDecimalItem              xxListNum_LY;

    /** P*/
	public final business.servlet.NWAL1700.NWAL1700_PBMsgArray              P;


	/**
	 * NWAL1700BMsg is constructor.
	 * The initialization when the instance of NWAL1700BMsg is generated.
	 */
	public NWAL1700BMsg() {
		this(false, -1);
	}

	/**
	 * NWAL1700BMsg is constructor.
	 * The initialization when the instance of NWAL1700BMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NWAL1700BMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		dsOrdCatgCd = (EZDBStringItem)newItem("dsOrdCatgCd");
		dsOrdCatgCd_P = (EZDBStringItemArray)newItemArray("dsOrdCatgCd_P");
		dsOrdCatgDescTxt_P = (EZDBStringItemArray)newItemArray("dsOrdCatgDescTxt_P");
		dsOrdTpCd = (EZDBStringItem)newItem("dsOrdTpCd");
		dsOrdTpNm = (EZDBStringItem)newItem("dsOrdTpNm");
		ordProcTpCd = (EZDBStringItem)newItem("ordProcTpCd");
		ordProcTpCd_P = (EZDBStringItemArray)newItemArray("ordProcTpCd_P");
		ordProcTpDescTxt_P = (EZDBStringItemArray)newItemArray("ordProcTpDescTxt_P");
		dsOrdRsnGrpCd = (EZDBStringItem)newItem("dsOrdRsnGrpCd");
		dsOrdRsnGrpCd_P = (EZDBStringItemArray)newItemArray("dsOrdRsnGrpCd_P");
		dsOrdRsnGrpDescTxt_P = (EZDBStringItemArray)newItemArray("dsOrdRsnGrpDescTxt_P");
		dsOrdTpDescTxt = (EZDBStringItem)newItem("dsOrdTpDescTxt");
		dsOrdTpNoteTxt = (EZDBStringItem)newItem("dsOrdTpNoteTxt");
		lineBizTpCd = (EZDBStringItem)newItem("lineBizTpCd");
		lineBizTpCd_P = (EZDBStringItemArray)newItemArray("lineBizTpCd_P");
		lineBizTpDescTxt_P = (EZDBStringItemArray)newItemArray("lineBizTpDescTxt_P");
		effFromDt = (EZDBDateItem)newItem("effFromDt");
		effThruDt = (EZDBDateItem)newItem("effThruDt");
		actvFlg = (EZDBStringItem)newItem("actvFlg");
		revRecogMethCd = (EZDBStringItem)newItem("revRecogMethCd");
		cpoOrdTpCd = (EZDBStringItem)newItem("cpoOrdTpCd");
		vldApvlNodeUsgFlg = (EZDBStringItem)newItem("vldApvlNodeUsgFlg");
		vldApvlNodePrflCd = (EZDBStringItem)newItem("vldApvlNodePrflCd");
		vldApvlNodePrflCd_PV = (EZDBStringItemArray)newItemArray("vldApvlNodePrflCd_PV");
		ordProcNodePrflNm_PV = (EZDBStringItemArray)newItemArray("ordProcNodePrflNm_PV");
		diChkNodeUsgFlg = (EZDBStringItem)newItem("diChkNodeUsgFlg");
		diChkNodePrflCd = (EZDBStringItem)newItem("diChkNodePrflCd");
		diChkNodePrflCd_PD = (EZDBStringItemArray)newItemArray("diChkNodePrflCd_PD");
		ordProcNodePrflNm_PD = (EZDBStringItemArray)newItemArray("ordProcNodePrflNm_PD");
		prftApvlNodeUsgFlg = (EZDBStringItem)newItem("prftApvlNodeUsgFlg");
		prftApvlNodePrflCd = (EZDBStringItem)newItem("prftApvlNodePrflCd");
		prftApvlNodePrflCd_PP = (EZDBStringItemArray)newItemArray("prftApvlNodePrflCd_PP");
		ordProcNodePrflNm_PP = (EZDBStringItemArray)newItemArray("ordProcNodePrflNm_PP");
		crApvlNodeUsgFlg = (EZDBStringItem)newItem("crApvlNodeUsgFlg");
		crApvlNodePrflCd = (EZDBStringItem)newItem("crApvlNodePrflCd");
		crApvlNodePrflCd_PC = (EZDBStringItemArray)newItemArray("crApvlNodePrflCd_PC");
		ordProcNodePrflNm_PC = (EZDBStringItemArray)newItemArray("ordProcNodePrflNm_PC");
		assetNodeUsgFlg = (EZDBStringItem)newItem("assetNodeUsgFlg");
		assetNodePrflCd = (EZDBStringItem)newItem("assetNodePrflCd");
		assetNodePrflCd_PF = (EZDBStringItemArray)newItemArray("assetNodePrflCd_PF");
		ordProcNodePrflNm_PF = (EZDBStringItemArray)newItemArray("ordProcNodePrflNm_PF");
		outOfWhNodeUsgFlg = (EZDBStringItem)newItem("outOfWhNodeUsgFlg");
		outOfWhNodePrflCd = (EZDBStringItem)newItem("outOfWhNodePrflCd");
		outOfWhNodePrflCd_PO = (EZDBStringItemArray)newItemArray("outOfWhNodePrflCd_PO");
		ordProcNodePrflNm_PO = (EZDBStringItemArray)newItemArray("ordProcNodePrflNm_PO");
		splyAbuseNodeUsgFlg = (EZDBStringItem)newItem("splyAbuseNodeUsgFlg");
		splyAbuseNodePrflCd = (EZDBStringItem)newItem("splyAbuseNodePrflCd");
		splyAbuseNodePrflCd_PS = (EZDBStringItemArray)newItemArray("splyAbuseNodePrflCd_PS");
		ordProcNodePrflNm_PS = (EZDBStringItemArray)newItemArray("ordProcNodePrflNm_PS");
		manPrcNodeUsgFlg = (EZDBStringItem)newItem("manPrcNodeUsgFlg");
		manPrcNodePrflCd = (EZDBStringItem)newItem("manPrcNodePrflCd");
		manPrcNodePrflCd_PM = (EZDBStringItemArray)newItemArray("manPrcNodePrflCd_PM");
		ordProcNodePrflNm_PM = (EZDBStringItemArray)newItemArray("ordProcNodePrflNm_PM");
		dsInvTpCd = (EZDBStringItem)newItem("dsInvTpCd");
		dsInvTpNm = (EZDBStringItem)newItem("dsInvTpNm");
		autoCancOrdFlg = (EZDBStringItem)newItem("autoCancOrdFlg");
		defPrcCatgCd = (EZDBStringItem)newItem("defPrcCatgCd");
		prcCatgDescTxt_PR = (EZDBStringItem)newItem("prcCatgDescTxt_PR");
		defMaintPrcCatgCd = (EZDBStringItem)newItem("defMaintPrcCatgCd");
		prcCatgDescTxt_SP = (EZDBStringItem)newItem("prcCatgDescTxt_SP");
		revFcstCd = (EZDBStringItem)newItem("revFcstCd");
		revFcstCd_P = (EZDBStringItemArray)newItemArray("revFcstCd_P");
		revFcstDescTxt_P = (EZDBStringItemArray)newItemArray("revFcstDescTxt_P");
		frtCondCd = (EZDBStringItem)newItem("frtCondCd");
		frtCondCd_P = (EZDBStringItemArray)newItemArray("frtCondCd_P");
		frtCondDescTxt_P = (EZDBStringItemArray)newItemArray("frtCondDescTxt_P");
		invPrintStyleCd = (EZDBStringItem)newItem("invPrintStyleCd");
		invPrintStyleCd_P = (EZDBStringItemArray)newItemArray("invPrintStyleCd_P");
		invPrintStyleDescTxt_P = (EZDBStringItemArray)newItemArray("invPrintStyleDescTxt_P");
		trtyGrpTpTxt = (EZDBStringItem)newItem("trtyGrpTpTxt");
		defBillToCustAcctCd = (EZDBStringItem)newItem("defBillToCustAcctCd");
		dsAcctNm = (EZDBStringItem)newItem("dsAcctNm");
		defBillToCustCd = (EZDBStringItem)newItem("defBillToCustCd");
		locDescTxt = (EZDBStringItem)newItem("locDescTxt");
		defInstlTpCd = (EZDBStringItem)newItem("defInstlTpCd");
		defInstlTpCd_P = (EZDBStringItemArray)newItemArray("defInstlTpCd_P");
		svcIstlTpDescTxt_P = (EZDBStringItemArray)newItemArray("svcIstlTpDescTxt_P");
		defShpgSvcLvlCd = (EZDBStringItem)newItem("defShpgSvcLvlCd");
		defShpgSvcLvlCd_P = (EZDBStringItemArray)newItemArray("defShpgSvcLvlCd_P");
		shpgSvcLvlDescTxt_P = (EZDBStringItemArray)newItemArray("shpgSvcLvlDescTxt_P");
		defCarrSvcLvlCd = (EZDBStringItem)newItem("defCarrSvcLvlCd");
		carrSvcLvlDescTxt = (EZDBStringItem)newItem("carrSvcLvlDescTxt");
		dropShipAvalFlg = (EZDBStringItem)newItem("dropShipAvalFlg");
		baseLocTxt = (EZDBStringItem)newItem("baseLocTxt");
		baseLocTxt_PC = (EZDBStringItemArray)newItemArray("baseLocTxt_PC");
		baseLocTxt_PD = (EZDBStringItemArray)newItemArray("baseLocTxt_PD");
		ezUpTime = (EZDBStringItem)newItem("ezUpTime");
		ezUpTimeZone = (EZDBStringItem)newItem("ezUpTimeZone");
		ezUpTime_TP = (EZDBStringItem)newItem("ezUpTime_TP");
		ezUpTimeZone_TP = (EZDBStringItem)newItem("ezUpTimeZone_TP");
		dsOrdLineCatgCd_PL = (EZDBStringItemArray)newItemArray("dsOrdLineCatgCd_PL");
		dsOrdLineCatgDescTxt_PL = (EZDBStringItemArray)newItemArray("dsOrdLineCatgDescTxt_PL");
		ordProcTpCd_PL = (EZDBStringItemArray)newItemArray("ordProcTpCd_PL");
		ordProcTpDescTxt_PL = (EZDBStringItemArray)newItemArray("ordProcTpDescTxt_PL");
		A = (business.servlet.NWAL1700.NWAL1700_ABMsgArray)newMsgArray("A");
		B = (business.servlet.NWAL1700.NWAL1700_BBMsgArray)newMsgArray("B");
		C = (business.servlet.NWAL1700.NWAL1700_CBMsgArray)newMsgArray("C");
		D = (business.servlet.NWAL1700.NWAL1700_DBMsgArray)newMsgArray("D");
		E = (business.servlet.NWAL1700.NWAL1700_EBMsgArray)newMsgArray("E");
		F = (business.servlet.NWAL1700.NWAL1700_FBMsgArray)newMsgArray("F");

		G = (business.servlet.NWAL1700.NWAL1700_GBMsgArray)newMsgArray("G");
		xxModeCd = (EZDBStringItem)newItem("xxModeCd");
		xxRowNum = (EZDBBigDecimalItem)newItem("xxRowNum");
		xxLinkAncr_AR = (EZDBStringItem)newItem("xxLinkAncr_AR");
		xxLinkAncr_CS = (EZDBStringItem)newItem("xxLinkAncr_CS");
		xxScrEventNm = (EZDBStringItem)newItem("xxScrEventNm");
		xxCellIdx = (EZDBBigDecimalItem)newItem("xxCellIdx");
		xxListNum_LY = (EZDBBigDecimalItem)newItem("xxListNum_LY");
		P = (business.servlet.NWAL1700.NWAL1700_PBMsgArray)newMsgArray("P");
	}

	/**
	 * get the type of array which is stored
	 * @return NWAL1700BMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NWAL1700BMsgArray();
	}

	/**
	 * Definition of Sub class for Schema Item Array(Basic data,Visible Field)
	 */
	private static class NWAL1700BMsgSchemaContents1 {

		/**
		 * Array of Schema Items in Sub class(Basic data)
		 */
		private static final String[][] BASE_CONTENTS = {
		//["key name", "variable", "suffix", "array length", "item type", "digits", "after decimal point degits"] <- This is how to define.
			{"dsOrdCatgCd", "dsOrdCatgCd", null, null, TYPE_HANKAKUEISU, "4", null},
			{"dsOrdCatgCd_P", "dsOrdCatgCd_P", "P", "99", TYPE_HANKAKUEISU, "4", null},
			{"dsOrdCatgDescTxt_P", "dsOrdCatgDescTxt_P", "P", "99", TYPE_HANKAKUEISU, "50", null},
			{"dsOrdTpCd", "dsOrdTpCd", null, null, TYPE_HANKAKUEISU, "4", null},
			{"dsOrdTpNm", "dsOrdTpNm", null, null, TYPE_HANKAKUEISU, "30", null},
			{"ordProcTpCd", "ordProcTpCd", null, null, TYPE_HANKAKUEISU, "4", null},
			{"ordProcTpCd_P", "ordProcTpCd_P", "P", "99", TYPE_HANKAKUEISU, "4", null},
			{"ordProcTpDescTxt_P", "ordProcTpDescTxt_P", "P", "99", TYPE_HANKAKUEISU, "50", null},
			{"dsOrdRsnGrpCd", "dsOrdRsnGrpCd", null, null, TYPE_HANKAKUEISU, "3", null},
			{"dsOrdRsnGrpCd_P", "dsOrdRsnGrpCd_P", "P", "99", TYPE_HANKAKUEISU, "3", null},
			{"dsOrdRsnGrpDescTxt_P", "dsOrdRsnGrpDescTxt_P", "P", "99", TYPE_HANKAKUEISU, "50", null},
			{"dsOrdTpDescTxt", "dsOrdTpDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
			{"dsOrdTpNoteTxt", "dsOrdTpNoteTxt", null, null, TYPE_HANKAKUEISU, "200", null},
			{"lineBizTpCd", "lineBizTpCd", null, null, TYPE_HANKAKUEISU, "8", null},
			{"lineBizTpCd_P", "lineBizTpCd_P", "P", "99", TYPE_HANKAKUEISU, "8", null},
			{"lineBizTpDescTxt_P", "lineBizTpDescTxt_P", "P", "99", TYPE_HANKAKUEISU, "50", null},
			{"effFromDt", "effFromDt", null, null, TYPE_NENTSUKIHI, "8", null},
			{"effThruDt", "effThruDt", null, null, TYPE_NENTSUKIHI, "8", null},
			{"actvFlg", "actvFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"revRecogMethCd", "revRecogMethCd", null, null, TYPE_HANKAKUEISU, "3", null},
			{"cpoOrdTpCd", "cpoOrdTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
			{"vldApvlNodeUsgFlg", "vldApvlNodeUsgFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"vldApvlNodePrflCd", "vldApvlNodePrflCd", null, null, TYPE_HANKAKUEISU, "3", null},
			{"vldApvlNodePrflCd_PV", "vldApvlNodePrflCd_PV", "PV", "99", TYPE_HANKAKUEISU, "3", null},
			{"ordProcNodePrflNm_PV", "ordProcNodePrflNm_PV", "PV", "99", TYPE_HANKAKUEISU, "30", null},
			{"diChkNodeUsgFlg", "diChkNodeUsgFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"diChkNodePrflCd", "diChkNodePrflCd", null, null, TYPE_HANKAKUEISU, "3", null},
			{"diChkNodePrflCd_PD", "diChkNodePrflCd_PD", "PD", "99", TYPE_HANKAKUEISU, "3", null},
			{"ordProcNodePrflNm_PD", "ordProcNodePrflNm_PD", "PD", "99", TYPE_HANKAKUEISU, "30", null},
			{"prftApvlNodeUsgFlg", "prftApvlNodeUsgFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"prftApvlNodePrflCd", "prftApvlNodePrflCd", null, null, TYPE_HANKAKUEISU, "3", null},
			{"prftApvlNodePrflCd_PP", "prftApvlNodePrflCd_PP", "PP", "99", TYPE_HANKAKUEISU, "3", null},
			{"ordProcNodePrflNm_PP", "ordProcNodePrflNm_PP", "PP", "99", TYPE_HANKAKUEISU, "30", null},
			{"crApvlNodeUsgFlg", "crApvlNodeUsgFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"crApvlNodePrflCd", "crApvlNodePrflCd", null, null, TYPE_HANKAKUEISU, "3", null},
			{"crApvlNodePrflCd_PC", "crApvlNodePrflCd_PC", "PC", "99", TYPE_HANKAKUEISU, "3", null},
			{"ordProcNodePrflNm_PC", "ordProcNodePrflNm_PC", "PC", "99", TYPE_HANKAKUEISU, "30", null},
			{"assetNodeUsgFlg", "assetNodeUsgFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"assetNodePrflCd", "assetNodePrflCd", null, null, TYPE_HANKAKUEISU, "3", null},
			{"assetNodePrflCd_PF", "assetNodePrflCd_PF", "PF", "99", TYPE_HANKAKUEISU, "3", null},
			{"ordProcNodePrflNm_PF", "ordProcNodePrflNm_PF", "PF", "99", TYPE_HANKAKUEISU, "30", null},
			{"outOfWhNodeUsgFlg", "outOfWhNodeUsgFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"outOfWhNodePrflCd", "outOfWhNodePrflCd", null, null, TYPE_HANKAKUEISU, "3", null},
			{"outOfWhNodePrflCd_PO", "outOfWhNodePrflCd_PO", "PO", "99", TYPE_HANKAKUEISU, "3", null},
			{"ordProcNodePrflNm_PO", "ordProcNodePrflNm_PO", "PO", "99", TYPE_HANKAKUEISU, "30", null},
			{"splyAbuseNodeUsgFlg", "splyAbuseNodeUsgFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"splyAbuseNodePrflCd", "splyAbuseNodePrflCd", null, null, TYPE_HANKAKUEISU, "3", null},
			{"splyAbuseNodePrflCd_PS", "splyAbuseNodePrflCd_PS", "PS", "99", TYPE_HANKAKUEISU, "3", null},
			{"ordProcNodePrflNm_PS", "ordProcNodePrflNm_PS", "PS", "99", TYPE_HANKAKUEISU, "30", null},
			{"manPrcNodeUsgFlg", "manPrcNodeUsgFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"manPrcNodePrflCd", "manPrcNodePrflCd", null, null, TYPE_HANKAKUEISU, "3", null},
			{"manPrcNodePrflCd_PM", "manPrcNodePrflCd_PM", "PM", "99", TYPE_HANKAKUEISU, "3", null},
			{"ordProcNodePrflNm_PM", "ordProcNodePrflNm_PM", "PM", "99", TYPE_HANKAKUEISU, "30", null},
			{"dsInvTpCd", "dsInvTpCd", null, null, TYPE_HANKAKUEISU, "4", null},
			{"dsInvTpNm", "dsInvTpNm", null, null, TYPE_HANKAKUEISU, "60", null},
			{"autoCancOrdFlg", "autoCancOrdFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"defPrcCatgCd", "defPrcCatgCd", null, null, TYPE_HANKAKUEISU, "10", null},
			{"prcCatgDescTxt_PR", "prcCatgDescTxt_PR", "PR", null, TYPE_HANKAKUEISU, "2000", null},
			{"defMaintPrcCatgCd", "defMaintPrcCatgCd", null, null, TYPE_HANKAKUEISU, "10", null},
			{"prcCatgDescTxt_SP", "prcCatgDescTxt_SP", "SP", null, TYPE_HANKAKUEISU, "2000", null},
			{"revFcstCd", "revFcstCd", null, null, TYPE_HANKAKUEISU, "10", null},
			{"revFcstCd_P", "revFcstCd_P", "P", "99", TYPE_HANKAKUEISU, "10", null},
			{"revFcstDescTxt_P", "revFcstDescTxt_P", "P", "99", TYPE_HANKAKUEISU, "50", null},
			{"frtCondCd", "frtCondCd", null, null, TYPE_HANKAKUEISU, "3", null},
			{"frtCondCd_P", "frtCondCd_P", "P", "99", TYPE_HANKAKUEISU, "3", null},
			{"frtCondDescTxt_P", "frtCondDescTxt_P", "P", "99", TYPE_HANKAKUEISU, "50", null},
			{"invPrintStyleCd", "invPrintStyleCd", null, null, TYPE_HANKAKUEISU, "2", null},
			{"invPrintStyleCd_P", "invPrintStyleCd_P", "P", "99", TYPE_HANKAKUEISU, "2", null},
			{"invPrintStyleDescTxt_P", "invPrintStyleDescTxt_P", "P", "99", TYPE_HANKAKUEISU, "50", null},
			{"trtyGrpTpTxt", "trtyGrpTpTxt", null, null, TYPE_HANKAKUEISU, "30", null},
			{"defBillToCustAcctCd", "defBillToCustAcctCd", null, null, TYPE_HANKAKUEISU, "20", null},
			{"dsAcctNm", "dsAcctNm", null, null, TYPE_HANKAKUEISU, "360", null},
			{"defBillToCustCd", "defBillToCustCd", null, null, TYPE_HANKAKUEISU, "20", null},
			{"locDescTxt", "locDescTxt", null, null, TYPE_HANKAKUEISU, "100", null},
			{"defInstlTpCd", "defInstlTpCd", null, null, TYPE_HANKAKUEISU, "10", null},
			{"defInstlTpCd_P", "defInstlTpCd_P", "P", "99", TYPE_HANKAKUEISU, "10", null},
			{"svcIstlTpDescTxt_P", "svcIstlTpDescTxt_P", "P", "99", TYPE_HANKAKUEISU, "50", null},
			{"defShpgSvcLvlCd", "defShpgSvcLvlCd", null, null, TYPE_HANKAKUEISU, "2", null},
			{"defShpgSvcLvlCd_P", "defShpgSvcLvlCd_P", "P", "99", TYPE_HANKAKUEISU, "2", null},
			{"shpgSvcLvlDescTxt_P", "shpgSvcLvlDescTxt_P", "P", "99", TYPE_HANKAKUEISU, "50", null},
			{"defCarrSvcLvlCd", "defCarrSvcLvlCd", null, null, TYPE_HANKAKUEISU, "20", null},
			{"carrSvcLvlDescTxt", "carrSvcLvlDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
			{"dropShipAvalFlg", "dropShipAvalFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"baseLocTxt", "baseLocTxt", null, null, TYPE_HANKAKUEISU, "30", null},
			{"baseLocTxt_PC", "baseLocTxt_PC", "PC", "99", TYPE_HANKAKUEISU, "30", null},
			{"baseLocTxt_PD", "baseLocTxt_PD", "PD", "99", TYPE_HANKAKUEISU, "30", null},
			{"ezUpTime", "ezUpTime", null, null, TYPE_HANKAKUEISU, "17", null},
			{"ezUpTimeZone", "ezUpTimeZone", null, null, TYPE_HANKAKUEISU, "5", null},
			{"ezUpTime_TP", "ezUpTime_TP", "TP", null, TYPE_HANKAKUEISU, "17", null},
			{"ezUpTimeZone_TP", "ezUpTimeZone_TP", "TP", null, TYPE_HANKAKUEISU, "5", null},
			{"dsOrdLineCatgCd_PL", "dsOrdLineCatgCd_PL", "PL", "99", TYPE_HANKAKUEISU, "4", null},
			{"dsOrdLineCatgDescTxt_PL", "dsOrdLineCatgDescTxt_PL", "PL", "99", TYPE_HANKAKUEISU, "50", null},
			{"ordProcTpCd_PL", "ordProcTpCd_PL", "PL", "99", TYPE_HANKAKUEISU, "4", null},
			{"ordProcTpDescTxt_PL", "ordProcTpDescTxt_PL", "PL", "99", TYPE_HANKAKUEISU, "50", null},
			{"A", "A", null, "200", "business.servlet.NWAL1700.NWAL1700_ABMsgArray", null, null},
			{"B", "B", null, "200", "business.servlet.NWAL1700.NWAL1700_BBMsgArray", null, null},
			{"C", "C", null, "200", "business.servlet.NWAL1700.NWAL1700_CBMsgArray", null, null},
			{"D", "D", null, "200", "business.servlet.NWAL1700.NWAL1700_DBMsgArray", null, null},
			{"E", "E", null, "200", "business.servlet.NWAL1700.NWAL1700_EBMsgArray", null, null},
			{"F", "F", null, "200", "business.servlet.NWAL1700.NWAL1700_FBMsgArray", null, null},
		};

		/**
		 * Array of Schema Items in Sub class(Visible Field)
		 */
		private static final String[][] DISP_CONTENTS = {
		// ["message display string","mandotry item", "minimum", "maximum", "I/O type", "yen", "comma", "zero suppress", "plus display flag", "display length", "display length after decimal point digit", "Dividing date", "Year display pattern", "zero pudding for date", "separator for date"] <- This is how to define
	        {"DS_ORD_CATG_CD", YES,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdCatgCd
	        {"DS_ORD_CATG_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdCatgCd_P
	        {"DS_ORD_CATG_DESC_TXT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdCatgDescTxt_P
	        {"DS_ORD_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdTpCd
	        {"DS_ORD_TP_NM", YES,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdTpNm
	        {"ORD_PROC_TP_CD", YES,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordProcTpCd
	        {"ORD_PROC_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordProcTpCd_P
	        {"ORD_PROC_TP_DESC_TXT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordProcTpDescTxt_P
	        {"DS_ORD_RSN_GRP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdRsnGrpCd
	        {"DS_ORD_RSN_GRP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdRsnGrpCd_P
	        {"DS_ORD_RSN_GRP_DESC_TXT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdRsnGrpDescTxt_P
	        {"DS_ORD_TP_DESC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdTpDescTxt
	        {"DS_ORD_TP_NOTE_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdTpNoteTxt
	        {"LINE_BIZ_TP_CD", YES,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//lineBizTpCd
	        {"LINE_BIZ_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//lineBizTpCd_P
	        {"LINE_BIZ_TP_DESC_TXT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//lineBizTpDescTxt_P
	        {"EFF_FROM_DT", YES,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//effFromDt
	        {"EFF_THRU_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//effThruDt
	        {"ACTV_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//actvFlg
	        {"REV_RECOG_METH_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//revRecogMethCd
	        {"CPO_ORD_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cpoOrdTpCd
	        {"VLD_APVL_NODE_USG_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//vldApvlNodeUsgFlg
	        {"VLD_APVL_NODE_PRFL_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//vldApvlNodePrflCd
	        {"VLD_APVL_NODE_PRFL_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//vldApvlNodePrflCd_PV
	        {"ORD_PROC_NODE_PRFL_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordProcNodePrflNm_PV
	        {"DI_CHK_NODE_USG_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//diChkNodeUsgFlg
	        {"DI_CHK_NODE_PRFL_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//diChkNodePrflCd
	        {"DI_CHK_NODE_PRFL_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//diChkNodePrflCd_PD
	        {"ORD_PROC_NODE_PRFL_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordProcNodePrflNm_PD
	        {"PRFT_APVL_NODE_USG_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prftApvlNodeUsgFlg
	        {"PRFT_APVL_NODE_PRFL_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prftApvlNodePrflCd
	        {"PRFT_APVL_NODE_PRFL_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prftApvlNodePrflCd_PP
	        {"ORD_PROC_NODE_PRFL_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordProcNodePrflNm_PP
	        {"CR_APVL_NODE_USG_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//crApvlNodeUsgFlg
	        {"CR_APVL_NODE_PRFL_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//crApvlNodePrflCd
	        {"CR_APVL_NODE_PRFL_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//crApvlNodePrflCd_PC
	        {"ORD_PROC_NODE_PRFL_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordProcNodePrflNm_PC
	        {"ASSET_NODE_USG_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//assetNodeUsgFlg
	        {"ASSET_NODE_PRFL_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//assetNodePrflCd
	        {"ASSET_NODE_PRFL_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//assetNodePrflCd_PF
	        {"ORD_PROC_NODE_PRFL_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordProcNodePrflNm_PF
	        {"OUT_OF_WH_NODE_USG_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//outOfWhNodeUsgFlg
	        {"OUT_OF_WH_NODE_PRFL_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//outOfWhNodePrflCd
	        {"OUT_OF_WH_NODE_PRFL_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//outOfWhNodePrflCd_PO
	        {"ORD_PROC_NODE_PRFL_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordProcNodePrflNm_PO
	        {"SPLY_ABUSE_NODE_USG_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//splyAbuseNodeUsgFlg
	        {"SPLY_ABUSE_NODE_PRFL_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//splyAbuseNodePrflCd
	        {"SPLY_ABUSE_NODE_PRFL_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//splyAbuseNodePrflCd_PS
	        {"ORD_PROC_NODE_PRFL_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordProcNodePrflNm_PS
	        {"MAN_PRC_NODE_USG_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//manPrcNodeUsgFlg
	        {"MAN_PRC_NODE_PRFL_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//manPrcNodePrflCd
	        {"MAN_PRC_NODE_PRFL_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//manPrcNodePrflCd_PM
	        {"ORD_PROC_NODE_PRFL_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordProcNodePrflNm_PM
	        {"DS_INV_TP_CD", YES,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsInvTpCd
	        {"DS_INV_TP_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsInvTpNm
	        {"AUTO_CANC_ORD_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//autoCancOrdFlg
	        {"DEF_PRC_CATG_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//defPrcCatgCd
	        {"PRC_CATG_DESC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCatgDescTxt_PR
	        {"DEF_MAINT_PRC_CATG_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//defMaintPrcCatgCd
	        {"PRC_CATG_DESC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCatgDescTxt_SP
	        {"REV_FCST_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//revFcstCd
	        {"REV_FCST_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//revFcstCd_P
	        {"REV_FCST_DESC_TXT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//revFcstDescTxt_P
	        {"FRT_COND_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//frtCondCd
	        {"FRT_COND_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//frtCondCd_P
	        {"FRT_COND_DESC_TXT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//frtCondDescTxt_P
	        {"INV_PRINT_STYLE_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invPrintStyleCd
	        {"INV_PRINT_STYLE_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invPrintStyleCd_P
	        {"INV_PRINT_STYLE_DESC_TXT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invPrintStyleDescTxt_P
	        {"TRTY_GRP_TP_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trtyGrpTpTxt
	        {"DEF_BILL_TO_CUST_ACCT_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//defBillToCustAcctCd
	        {"DS_ACCT_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctNm
	        {"DEF_BILL_TO_CUST_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//defBillToCustCd
	        {"LOC_DESC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//locDescTxt
	        {"DEF_INSTL_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//defInstlTpCd
	        {"DEF_INSTL_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//defInstlTpCd_P
	        {"SVC_ISTL_TP_DESC_TXT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcIstlTpDescTxt_P
	        {"DEF_SHPG_SVC_LVL_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//defShpgSvcLvlCd
	        {"DEF_SHPG_SVC_LVL_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//defShpgSvcLvlCd_P
	        {"SHPG_SVC_LVL_DESC_TXT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shpgSvcLvlDescTxt_P
	        {"DEF_CARR_SVC_LVL_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//defCarrSvcLvlCd
	        {"CARR_SVC_LVL_DESC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//carrSvcLvlDescTxt
	        {"DROP_SHIP_AVAL_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dropShipAvalFlg
	        {"BASE_LOC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//baseLocTxt
	        {"BASE_LOC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//baseLocTxt_PC
	        {"BASE_LOC_TXT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//baseLocTxt_PD
	        {"_EZUpdateDateTime",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTime
	        {"_EZUpTimeZone",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTimeZone
	        {"_EZUpdateDateTime",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTime_TP
	        {"_EZUpTimeZone",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTimeZone_TP
	        {"DS_ORD_LINE_CATG_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdLineCatgCd_PL
	        {"DS_ORD_LINE_CATG_DESC_TXT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdLineCatgDescTxt_PL
	        {"ORD_PROC_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordProcTpCd_PL
	        {"ORD_PROC_TP_DESC_TXT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordProcTpDescTxt_PL
			null,	//A
			null,	//B
			null,	//C
			null,	//D
			null,	//E
			null,	//F
		};

	}

	private static class NWAL1700BMsgSchemaContents2 {

		/**
		 * Array of Schema Items in Sub class(Basic data)
		 */
		private static final String[][] BASE_CONTENTS = {
		//["key name", "variable", "suffix", "array length", "item type", "digits", "after decimal point degits"] <- This is how to define.
			{"G", "G", null, "200", "business.servlet.NWAL1700.NWAL1700_GBMsgArray", null, null},
			{"xxModeCd", "xxModeCd", null, null, TYPE_HANKAKUEISU, "2", null},
			{"xxRowNum", "xxRowNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
			{"xxLinkAncr_AR", "xxLinkAncr_AR", "AR", null, TYPE_HANKAKUEISU, "30", null},
			{"xxLinkAncr_CS", "xxLinkAncr_CS", "CS", null, TYPE_HANKAKUEISU, "30", null},
			{"xxScrEventNm", "xxScrEventNm", null, null, TYPE_HANKAKUEISU, "50", null},
			{"xxCellIdx", "xxCellIdx", null, null, TYPE_SEISU_SYOSU, "4", "0"},
			{"xxListNum_LY", "xxListNum_LY", "LY", null, TYPE_SEISU_SYOSU, "5", "0"},
			{"P", "P", null, "30", "business.servlet.NWAL1700.NWAL1700_PBMsgArray", null, null},
		};

		/**
		 * Array of Schema Items in Sub class(Visible Field)
		 */
		private static final String[][] DISP_CONTENTS = {
		// ["message display string","mandotry item", "minimum", "maximum", "I/O type", "yen", "comma", "zero suppress", "plus display flag", "display length", "display length after decimal point digit", "Dividing date", "Year display pattern", "zero pudding for date", "separator for date"] <- This is how to define
			null,	//G
	        {"XX_MODE_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxModeCd
	        {"XX_ROW_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRowNum
	        {"XX_LINK_ANCR",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxLinkAncr_AR
	        {"XX_LINK_ANCR",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxLinkAncr_CS
	        {"XX_SCR_EVENT_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxScrEventNm
	        {"XX_CELL_IDX",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxCellIdx
	        {"XX_LIST_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxListNum_LY
			null,	//P
		};

	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = new String[109][NWAL1700BMsgSchemaContents1.BASE_CONTENTS[0].length];
	static {
		int arcpStartPoint=0;
	System.arraycopy(NWAL1700BMsgSchemaContents1.BASE_CONTENTS, 0, BASE_CONTENTS, arcpStartPoint, NWAL1700BMsgSchemaContents1.BASE_CONTENTS.length);
	arcpStartPoint = arcpStartPoint + NWAL1700BMsgSchemaContents1.BASE_CONTENTS.length;
	System.arraycopy(NWAL1700BMsgSchemaContents2.BASE_CONTENTS, 0, BASE_CONTENTS, arcpStartPoint, NWAL1700BMsgSchemaContents2.BASE_CONTENTS.length);
	arcpStartPoint = arcpStartPoint + NWAL1700BMsgSchemaContents2.BASE_CONTENTS.length;
	}

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = new String[109][15];
	static {
		int arcpStartPoint=0;
		System.arraycopy(NWAL1700BMsgSchemaContents1.DISP_CONTENTS, 0, DISP_CONTENTS, arcpStartPoint, NWAL1700BMsgSchemaContents1.DISP_CONTENTS.length);
		arcpStartPoint = arcpStartPoint + NWAL1700BMsgSchemaContents1.DISP_CONTENTS.length;
		System.arraycopy(NWAL1700BMsgSchemaContents2.DISP_CONTENTS, 0, DISP_CONTENTS, arcpStartPoint, NWAL1700BMsgSchemaContents2.DISP_CONTENTS.length);
		arcpStartPoint = arcpStartPoint + NWAL1700BMsgSchemaContents2.DISP_CONTENTS.length;
	}

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

