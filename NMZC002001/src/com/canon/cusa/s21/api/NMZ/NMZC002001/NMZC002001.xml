<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<sqlMap namespace="NMZC002001">
    <statement id="cntSellToCust" parameterClass="Map" resultClass="Integer">
       SELECT COUNT(*) AS CNT
       FROM SELL_TO_CUST SELL
       WHERE SELL.GLBL_CMPY_CD    = #glblCmpyCd#
         AND SELL.EZCANCELFLAG    = '0'
         AND SELL.SELL_TO_CUST_CD = #sellToCustCd#
    </statement>
    <statement id="cntDsAcctPros" parameterClass="Map" resultClass="Integer">
       SELECT COUNT(*) AS CNT
       FROM DS_ACCT_PROS PROS
       WHERE PROS.GLBL_CMPY_CD    = #glblCmpyCd#
         AND PROS.EZCANCELFLAG    = '0'
         AND PROS.DS_ACCT_NUM     = #dsAcctNum#
    </statement>
    <statement id="cntPtyLocWrk" parameterClass="Map" resultClass="Integer">
       SELECT SUM(CNT) FROM (
           SELECT COUNT(*) AS CNT
           FROM PTY_LOC_WRK PTY
           WHERE PTY.GLBL_CMPY_CD = #glblCmpyCd#
             AND PTY.EZCANCELFLAG = '0'
             AND PTY.LOC_NUM      = #locNum#

           UNION

           SELECT COUNT(*) AS CNT
           FROM PROS_PTY_LOC_WRK PTY
           WHERE PTY.GLBL_CMPY_CD = #glblCmpyCd#
             AND PTY.EZCANCELFLAG = '0'
             AND PTY.LOC_NUM      = #locNum#
         )
    </statement>
    <statement id="cntDsCtacPsn" parameterClass="Map" resultClass="Integer">
       SELECT COUNT(*) AS CNT
       FROM CTAC_PSN PSN
       WHERE PSN.GLBL_CMPY_CD       = #glblCmpyCd#
         AND PSN.EZCANCELFLAG       = '0'
         AND PSN.CTAC_PSN_PK        = #ctacPsnPk#
         AND PSN.CTAC_PSN_ACTV_FLG  = 'Y'
    </statement>
    <statement id="cntCtacTp" parameterClass="Map" resultClass="Integer">
       SELECT COUNT(*) AS CNT
       FROM CTAC_TP TP
       WHERE TP.GLBL_CMPY_CD    = #glblCmpyCd#
         AND TP.EZCANCELFLAG    = '0'
         AND TP.CTAC_TP_CD      = #ctacTpCd#
         AND TP.ACTV_FLG        = 'Y'
    </statement>
    <statement id="cntDsPrimCtacTp" parameterClass="Map" resultClass="Integer">
       SELECT COUNT(*) AS CNT
       FROM DS_CTAC_PNT PNT
       WHERE PNT.GLBL_CMPY_CD         = #glblCmpyCd#
         AND PNT.EZCANCELFLAG         = '0'
         AND PNT.DS_CTAC_PNT_TP_CD    = #dsPrimCtacTpCd#
         AND PNT.DS_CTAC_PNT_ACTV_FLG = 'Y'
         AND PNT.DS_OPS_OUT_FLG       = 'N'
    </statement>
    <statement id="getPrimCtacPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT RELN.DS_CTAC_PSN_RELN_PK AS DS_CTAC_PSN_RELN_PK
        FROM
            DS_CTAC_PSN_RELN RELN
            , CTAC_PSN PSN
        WHERE
            RELN.GLBL_CMPY_CD = #glblCmpyCd#
        AND RELN.EZCANCELFLAG = '0'
            
        AND RELN.GLBL_CMPY_CD = PSN.GLBL_CMPY_CD
        AND RELN.CTAC_PSN_PK = PSN.CTAC_PSN_PK
        AND RELN.EFF_FROM_DT   &lt;= #slsDt#
        AND NVL(RELN.EFF_THRU_DT, #maxEffThruDt#) &gt;= #slsDt#
        AND PSN.EZCANCELFLAG = '0'

    <isNotNull property="dsAcctNum">
        AND RELN.DS_ACCT_NUM = #dsAcctNum#
    </isNotNull>
    <isNotNull property="locNum">
        AND RELN.LOC_NUM = #locNum#
    </isNotNull>
    <isNotNull property="ctacPsnPk">
        AND PSN.CTAC_PSN_PK &lt;&gt; #ctacPsnPk#
    </isNotNull>
        AND RELN.DS_PRIM_LOC_FLG = #primFlg#
        AND PSN.CTAC_PSN_ACTV_FLG = 'Y'
        AND RELN.CTAC_TP_CD = #ctacTpCd#
        AND ROWNUM = 1
    </statement>
    <statement id="getDsCtacPsnRelnPk" parameterClass="Map" resultClass="BigDecimal">
       SELECT RELN.DS_CTAC_PSN_RELN_PK AS DS_CTAC_PSN_RELN_PK
       FROM DS_CTAC_PSN_RELN RELN
       WHERE RELN.GLBL_CMPY_CD         = #glblCmpyCd#
         AND RELN.EZCANCELFLAG         = '0'
         AND RELN.CTAC_PSN_PK          = #ctacPsnPk#
         <!-- 2017/08/04 Sol#106/358 Add Start -->
         AND RELN.CTAC_TP_CD           = #ctacTpCd#
         AND RELN.EFF_FROM_DT   &lt;= #slsDt#
         AND NVL(RELN.EFF_THRU_DT, #maxEffThruDt#) &gt;= #slsDt#
         <isNotNull property="dsAcctNum">
         AND RELN.DS_ACCT_NUM = #dsAcctNum#
         </isNotNull>
         <isNotNull property="locNum">
         AND RELN.LOC_NUM = #locNum#
         </isNotNull>
         <!-- 2017/08/04 Sol#106/358 Add End -->
    </statement>
    <statement id="getDsCtacPsnPkListByName" parameterClass="Map" resultClass="BigDecimal">
    <!-- 2017/08/04 Sol#106/358 Mod Start -->
    <!-- 2017/09/08 QC#20790 Optimizer Hint ADD-->
         SELECT /*+ OPTIMIZER_FEATURES_ENABLE('10.2.0.5') */ 
                      CP.CTAC_PSN_PK 
                FROM
                    DS_CTAC_PSN_RELN DCPR, CTAC_PSN CP 
                WHERE
                    DCPR.GLBL_CMPY_CD = #glblCmpyCd# 
                    AND DCPR.EZCANCELFLAG = '0' 

                    AND DCPR.GLBL_CMPY_CD = CP.GLBL_CMPY_CD 
                    AND DCPR.CTAC_PSN_PK = CP.CTAC_PSN_PK 
                    AND CP.EZCANCELFLAG = '0' 
                    AND CP.CTAC_PSN_ACTV_FLG = #actvFlg#
                    AND DCPR.EFF_FROM_DT   &lt;= #slsDt#
                    AND NVL(DCPR.EFF_THRU_DT, #maxEffThruDt#) &gt;= #slsDt#

                    <isNotNull property="ctacPsnFirstNm">
                        AND UPPER(CP.CTAC_PSN_FIRST_NM) = #ctacPsnFirstNm# 
                    </isNotNull>
                    <isNull property="ctacPsnFirstNm">
                        AND CP.CTAC_PSN_FIRST_NM IS NULL
                    </isNull>
                    <isNotNull property="ctacPsnLastNm">
                        AND UPPER(CP.CTAC_PSN_LAST_NM) = #ctacPsnLastNm# 
                    </isNotNull>
                    <isNull property="ctacPsnLastNm">
                        AND CP.CTAC_PSN_LAST_NM IS NULL
                    </isNull>

                    <isNull property="locNum">
                        AND DCPR.DS_ACCT_NUM = #dsAcctNum#
                    </isNull>
                    <isNotNull property="locNum">
                        AND ( DCPR.LOC_NUM = #locNum#
                              OR 
                              DCPR.DS_ACCT_NUM = 
                              ( 
                              SELECT
                                    MAX(AL.DS_ACCT_NUM)
                              FROM
                                  ACCT_LOC AL 
                              WHERE
                                  AL.GLBL_CMPY_CD = #glblCmpyCd# 
                                 AND AL.EZCANCELFLAG = '0' 
                                 AND AL.LOC_NUM = #locNum#
                                 AND AL.EFF_FROM_DT   &lt;= #slsDt#
                                 AND NVL(AL.EFF_THRU_DT, #maxEffThruDt#) &gt;= #slsDt#
                     <!-- 2019/06/05 QC#50651 Add Start -->
                                 AND AL.RGTN_STS_CD   = #rgtnStsCd#
                     <!-- 2019/06/05 QC#50651 Add End -->
                             )
                        ) 
                    </isNotNull>
                UNION

                SELECT /*+ OPTIMIZER_FEATURES_ENABLE('10.2.0.5') */ 
                      CP.CTAC_PSN_PK 
                FROM
                    DS_CTAC_PSN_RELN DCPR, CTAC_PSN CP 
                WHERE
                    DCPR.GLBL_CMPY_CD = #glblCmpyCd# 
                    AND DCPR.EZCANCELFLAG = '0' 

                    AND DCPR.GLBL_CMPY_CD = CP.GLBL_CMPY_CD 
                    AND DCPR.CTAC_PSN_PK = CP.CTAC_PSN_PK 
                    AND CP.EZCANCELFLAG = '0' 
                    AND CP.CTAC_PSN_ACTV_FLG = #actvFlg#
                    AND DCPR.EFF_FROM_DT   &lt;= #slsDt#
                    AND NVL(DCPR.EFF_THRU_DT, #maxEffThruDt#) &gt;= #slsDt#

                    <isNotNull property="ctacPsnFirstNm">
                        AND UPPER(CP.CTAC_PSN_FIRST_NM) = #ctacPsnFirstNm# 
                    </isNotNull>
                    <isNull property="ctacPsnFirstNm">
                        AND CP.CTAC_PSN_FIRST_NM IS NULL
                    </isNull>
                    <isNotNull property="ctacPsnLastNm">
                        AND UPPER(CP.CTAC_PSN_LAST_NM) = #ctacPsnLastNm# 
                    </isNotNull>
                    <isNull property="ctacPsnLastNm">
                        AND CP.CTAC_PSN_LAST_NM IS NULL
                    </isNull>

                    AND DCPR.LOC_NUM IN ( 
                        SELECT
                              AL.LOC_NUM 
                        FROM
                            ACCT_LOC AL 
                        WHERE
                            AL.GLBL_CMPY_CD = #glblCmpyCd# 
                            AND AL.EZCANCELFLAG = '0' 
                            AND AL.EFF_FROM_DT   &lt;= #slsDt#
                            AND NVL(AL.EFF_THRU_DT, #maxEffThruDt#) &gt;= #slsDt#
                     <!-- 2019/06/05 QC#50651 Add Start -->
                            AND AL.RGTN_STS_CD   = #rgtnStsCd#
                     <!-- 2019/06/05 QC#50651 Add End -->
                            <isNull property="locNum">
                                AND AL.DS_ACCT_NUM = #dsAcctNum#
                            </isNull>
                            <isNotNull property="locNum">
                                AND AL.DS_ACCT_NUM = ( 
                                    SELECT
                                          AL.DS_ACCT_NUM 
                                    FROM
                                        ACCT_LOC AL 
                                    WHERE
                                        AL.GLBL_CMPY_CD = #glblCmpyCd# 
                                        AND AL.EZCANCELFLAG = '0' 
                                        AND AL.LOC_NUM = #locNum#
                     <!-- 2019/06/05 QC#50651 Add Start -->
                                        AND AL.EFF_FROM_DT   &lt;= #slsDt#
                                        AND NVL(AL.EFF_THRU_DT, #maxEffThruDt#) &gt;= #slsDt#
                                        AND AL.RGTN_STS_CD   = #rgtnStsCd#
                     <!-- 2019/06/05 QC#50651 Add End -->
                                )
                            </isNotNull>
                            )
    <!-- 2017/08/04 Sol#106/358 Mod End -->
    </statement>
<!-- 2017/08/04 QC#8598 Mod Start -->
    <statement id="getDsCtacPntPkList" parameterClass="Map" resultClass="Map">
        SELECT
            DCP.CTAC_PSN_PK AS CTAC_PSN_PK
            , DCP.DS_CTAC_PNT_PK AS DS_CTAC_PNT_PK
            , DCP.DS_CTAC_PNT_TP_CD
        FROM
            (
                SELECT
                    DCP.CTAC_PSN_PK
                    ,DCP.DS_CTAC_PNT_PK
                    ,DCP.DS_CTAC_PNT_TP_CD
                    ,RANK() OVER(PARTITION BY DCP.DS_CTAC_PNT_TP_CD ORDER BY DCP.DS_CTAC_PNT_TP_CD, DCP.DS_CTAC_PNT_ACTV_FLG DESC, DCP.EZUPTIME DESC, DCP.DS_CTAC_PNT_PK) AS RNK
                FROM
                    DS_CTAC_PNT DCP
                WHERE
                    DCP.EZCANCELFLAG       = '0'
                    AND DCP.GLBL_CMPY_CD   = #glblCmpyCd#
                    AND DCP.CTAC_PSN_PK    = #ctacPsnPk#
            ) DCP
        WHERE
            RNK = 1
    </statement>
<!-- 2017/08/04 QC#8598 Mod End -->
<!-- 2017/08/04 QC#8598 Add Start -->
    <statement id="getMandatoryCtacPntList" parameterClass="Map" resultClass="Map">
        SELECT CTPMD.DS_CTAC_PNT_TP_CD AS DS_CTAC_PNT_TP_CD
            FROM CTAC_TP_PNT_MND_DFN CTPMD
            WHERE CTPMD.GLBL_CMPY_CD         = #glblCmpyCd#
            AND CTPMD.EZCANCELFLAG           = '0'
            AND CTPMD.CTAC_TP_CD            = #ctacTpCd#
    </statement>
    <statement id="getDsCtacPsnRelnList" parameterClass="Map" resultClass="Map">
        SELECT RELN.DS_CTAC_PSN_RELN_PK AS DS_CTAC_PSN_RELN_PK
            FROM DS_CTAC_PSN_RELN RELN
            WHERE RELN.GLBL_CMPY_CD         = #glblCmpyCd#
            AND RELN.EZCANCELFLAG           = '0'
            AND RELN.CTAC_PSN_PK            = #ctacPsnPk#
            <isNotNull property="dsAcctNum">
             AND RELN.DS_ACCT_NUM = #dsAcctNum#
            </isNotNull>
            <isNotNull property="locNum">
             AND RELN.LOC_NUM = #locNum#
            </isNotNull>
    </statement>
    <statement id="cntAutoFmtFlg" parameterClass="Map" resultClass="Integer">
       SELECT COUNT(*) AS CNT
       FROM DS_CTAC_PNT_TP DCPT
       WHERE DCPT.GLBL_CMPY_CD       = #glblCmpyCd#
         AND DCPT.EZCANCELFLAG       = '0'
         AND DCPT.DS_CTAC_PNT_TP_CD  = #dsCtacPntTpCd#
         AND DCPT.AUTO_FMT_FLG       = 'Y'
    </statement>
<!-- 2017/08/04 QC#8598 Add End -->

</sqlMap>
