//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20090917193007000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *ZZXL0050_ABMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.ZZXL0050;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is ZZXL0050 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class ZZXL0050_ABMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_CHK_BOX_A*/
	public final EZDBStringItem              xxChkBox_A;

    /** XX_DSPL_TP_TXT_A*/
	public final EZDBStringItem              xxDsplTpTxt_A;

    /** DT_PROC_CD_A*/
	public final EZDBStringItem              dtProcCd_A;

    /** DT_MGT_PGM_ID_A*/
	public final EZDBStringItem              dtMgtPgmId_A;

    /** MGT_DT_A*/
	public final EZDBDateItem              mgtDt_A;


	/**
	 * ZZXL0050_ABMsg is constructor.
	 * The initialization when the instance of ZZXL0050_ABMsg is generated.
	 */
	public ZZXL0050_ABMsg() {
		this(false, -1);
	}

	/**
	 * ZZXL0050_ABMsg is constructor.
	 * The initialization when the instance of ZZXL0050_ABMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public ZZXL0050_ABMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxChkBox_A = (EZDBStringItem)newItem("xxChkBox_A");
		xxDsplTpTxt_A = (EZDBStringItem)newItem("xxDsplTpTxt_A");
		dtProcCd_A = (EZDBStringItem)newItem("dtProcCd_A");
		dtMgtPgmId_A = (EZDBStringItem)newItem("dtMgtPgmId_A");
		mgtDt_A = (EZDBDateItem)newItem("mgtDt_A");
	}

	/**
	 * get the type of array which is stored
	 * @return ZZXL0050_ABMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new ZZXL0050_ABMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxChkBox_A", "xxChkBox_A", "A", null, TYPE_HANKAKUEIJI, "1", null},
	{"xxDsplTpTxt_A", "xxDsplTpTxt_A", "A", null, TYPE_HANKAKUEISU, "22", null},
	{"dtProcCd_A", "dtProcCd_A", "A", null, TYPE_HANKAKUEISU, "1", null},
	{"dtMgtPgmId_A", "dtMgtPgmId_A", "A", null, TYPE_HANKAKUEISU, "10", null},
	{"mgtDt_A", "mgtDt_A", "A", null, TYPE_NENTSUKIHI, "8", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_CHK_BOX",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_A
        {"XX_DSPL_TP_TXT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDsplTpTxt_A
        {"DT_PROC_CD",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dtProcCd_A
        {"DT_MGT_PGM_ID",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dtMgtPgmId_A
        {"MGT_DT",  NO,  null,null,"0", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//mgtDt_A
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

