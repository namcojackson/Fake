// This file was automatically generated by Screen Field Definition Document and XLA200710010
// Generated on    :20160916131748000
// Velocity Macro:svltdatabean.vm V200604010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0430Bean.java Copyright FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */

package  business.servlet.NSAL0430;

import parts.servletcommon.EZDCommonDataBean;

/*
 * NSAL0430 is data bean class.
 */
public class NSAL0430Bean extends EZDCommonDataBean {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	//Constant Definition Area
	/** SVC_MACH_MSTR_PK*/
	public static final String svcMachMstrPk = "svcMachMstrPk";

	/** SER_NUM*/
	public static final String serNum = "serNum";

	/** MDSE_CD*/
	public static final String mdseCd = "mdseCd";

	/** MDSE_DESC_SHORT_TXT*/
	public static final String mdseDescShortTxt = "mdseDescShortTxt";

	/** MDL_ID*/
	public static final String mdlId = "mdlId";

	/** MDL_NM*/
	public static final String mdlNm = "mdlNm";

	/** A*/
	public static final String A = "A";

	/** SVC_PHYS_MTR_PK_A*/
	public static final String svcPhysMtrPk_A = "svcPhysMtrPk_A";

	/** MTR_LB_CD_A*/
	public static final String mtrLbCd_A = "mtrLbCd_A";

	/** MTR_LB_DESC_TXT_A*/
	public static final String mtrLbDescTxt_A = "mtrLbDescTxt_A";

	/** XX_COPY_UNIT_DAYS_QTY_AH*/
	public static final String xxCopyUnitDaysQty_AH = "xxCopyUnitDaysQty_AH";

	/** XX_COPY_UNIT_DAYS_QTY_AE*/
	public static final String xxCopyUnitDaysQty_AE = "xxCopyUnitDaysQty_AE";

	/** READ_MTR_CNT_AE*/
	public static final String readMtrCnt_AE = "readMtrCnt_AE";

	/** B*/
	public static final String B = "B";

	/** DS_MTR_READ_TP_GRP_CD_B*/
	public static final String dsMtrReadTpGrpCd_B = "dsMtrReadTpGrpCd_B";

	/** XX_GENL_FLD_AREA_TXT_B*/
	public static final String xxGenlFldAreaTxt_B = "xxGenlFldAreaTxt_B";

	/** SLS_DT*/
	public static final String slsDt = "slsDt";

	/** MTR_EST_PROC_DT*/
	public static final String mtrEstProcDt = "mtrEstProcDt";

	/** C*/
	public static final String C = "C";

	/** MTR_LB_CD_C*/
	public static final String mtrLbCd_C = "mtrLbCd_C";

	/** MTR_LB_DESC_TXT_C*/
	public static final String mtrLbDescTxt_C = "mtrLbDescTxt_C";

	/** XX_ROW_NUM*/
	public static final String xxRowNum = "xxRowNum";

	/** D*/
	public static final String D = "D";

	/** XX_CHK_BOX_D*/
	public static final String xxChkBox_D = "xxChkBox_D";

	/** SVC_PHYS_MTR_READ_GRP_SQ_D*/
	public static final String svcPhysMtrReadGrpSq_D = "svcPhysMtrReadGrpSq_D";

	/** MTR_READ_DT_D*/
	public static final String mtrReadDt_D = "mtrReadDt_D";

	/** DS_MTR_READ_TP_GRP_CD_D*/
	public static final String dsMtrReadTpGrpCd_D = "dsMtrReadTpGrpCd_D";

	/** DS_MTR_READ_TP_CD_D*/
	public static final String dsMtrReadTpCd_D = "dsMtrReadTpCd_D";

	/** DS_MTR_READ_TP_DESC_TXT_D*/
	public static final String dsMtrReadTpDescTxt_D = "dsMtrReadTpDescTxt_D";

	/** SVC_PHYS_MTR_READ_PK_D*/
	public static final String svcPhysMtrReadPk_D = "svcPhysMtrReadPk_D";

	/** SVC_PHYS_MTR_PK_D*/
	public static final String svcPhysMtrPk_D = "svcPhysMtrPk_D";

	/** MTR_LB_CD_D*/
	public static final String mtrLbCd_D = "mtrLbCd_D";

	/** READ_MTR_CNT_D*/
	public static final String readMtrCnt_D = "readMtrCnt_D";

	/** XX_COPY_UNIT_DAYS_QTY_DH*/
	public static final String xxCopyUnitDaysQty_DH = "xxCopyUnitDaysQty_DH";

	/** P*/
	public static final String P = "P";

	/** SVC_PHYS_MTR_PK*/
	public static final String svcPhysMtrPk = "svcPhysMtrPk";

	/** READ_MTR_CNT*/
	public static final String readMtrCnt = "readMtrCnt";

	/** MTR_ENTRY_CMNT_TXT*/
	public static final String mtrEntryCmntTxt = "mtrEntryCmntTxt";

	/**
	 * Method name:NSAL0430 is Bean's Constructor.
	 * <dd>method explanation:Initialization when instance of NSAL0430Bean is generated
	 * <dd>Remarks:
	 */
	public NSAL0430Bean() {
		super("business.servlet.NSAL0430.NSAL0430BMsg");
	}

	/**
	 * get  SVC_MACH_MSTR_PK.
	 * @return SVC_MACH_MSTR_PK
	 */
	public String getSvcMachMstrPk() {
		return outputValue(svcMachMstrPk);
	}

	/**
	 * set  SVC_MACH_MSTR_PK.
	 * @param data SVC_MACH_MSTR_PK
	 */
	public void setSvcMachMstrPk(String data) {
		inputValue(svcMachMstrPk,data);
	}

	/**
	 * get  SER_NUM.
	 * @return SER_NUM
	 */
	public String getSerNum() {
		return outputValue(serNum);
	}

	/**
	 * set  SER_NUM.
	 * @param data SER_NUM
	 */
	public void setSerNum(String data) {
		inputValue(serNum,data);
	}

	/**
	 * get  MDSE_CD.
	 * @return MDSE_CD
	 */
	public String getMdseCd() {
		return outputValue(mdseCd);
	}

	/**
	 * set  MDSE_CD.
	 * @param data MDSE_CD
	 */
	public void setMdseCd(String data) {
		inputValue(mdseCd,data);
	}

	/**
	 * get  MDSE_DESC_SHORT_TXT.
	 * @return MDSE_DESC_SHORT_TXT
	 */
	public String getMdseDescShortTxt() {
		return outputValue(mdseDescShortTxt);
	}

	/**
	 * set  MDSE_DESC_SHORT_TXT.
	 * @param data MDSE_DESC_SHORT_TXT
	 */
	public void setMdseDescShortTxt(String data) {
		inputValue(mdseDescShortTxt,data);
	}

	/**
	 * get  MDL_ID.
	 * @return MDL_ID
	 */
	public String getMdlId() {
		return outputValue(mdlId);
	}

	/**
	 * set  MDL_ID.
	 * @param data MDL_ID
	 */
	public void setMdlId(String data) {
		inputValue(mdlId,data);
	}

	/**
	 * get  MDL_NM.
	 * @return MDL_NM
	 */
	public String getMdlNm() {
		return outputValue(mdlNm);
	}

	/**
	 * set  MDL_NM.
	 * @param data MDL_NM
	 */
	public void setMdlNm(String data) {
		inputValue(mdlNm,data);
	}

	/**
	 * get  SVC_PHYS_MTR_PK_A.
	 * @param idx1 List Number
	 * @return SVC_PHYS_MTR_PK_A
	 */
	public String getSvcPhysMtrPk_A(int idx1) {
		return outputValue(A, idx1, svcPhysMtrPk_A);
	}

	/**
	 * set  SVC_PHYS_MTR_PK_A.
	 * @param data SVC_PHYS_MTR_PK_AArray
	 */
	public void setSvcPhysMtrPk_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcPhysMtrPk_A, data[j]);
		}
	}

	/**
	 * get  MTR_LB_CD_A.
	 * @param idx1 List Number
	 * @return MTR_LB_CD_A
	 */
	public String getMtrLbCd_A(int idx1) {
		return outputValue(A, idx1, mtrLbCd_A);
	}

	/**
	 * set  MTR_LB_CD_A.
	 * @param data MTR_LB_CD_AArray
	 */
	public void setMtrLbCd_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, mtrLbCd_A, data[j]);
		}
	}

	/**
	 * get  MTR_LB_DESC_TXT_A.
	 * @param idx1 List Number
	 * @return MTR_LB_DESC_TXT_A
	 */
	public String getMtrLbDescTxt_A(int idx1) {
		return outputValue(A, idx1, mtrLbDescTxt_A);
	}

	/**
	 * set  MTR_LB_DESC_TXT_A.
	 * @param data MTR_LB_DESC_TXT_AArray
	 */
	public void setMtrLbDescTxt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, mtrLbDescTxt_A, data[j]);
		}
	}

	/**
	 * get  XX_COPY_UNIT_DAYS_QTY_AH.
	 * @param idx1 List Number
	 * @return XX_COPY_UNIT_DAYS_QTY_AH
	 */
	public String getXxCopyUnitDaysQty_AH(int idx1) {
		return outputValue(A, idx1, xxCopyUnitDaysQty_AH);
	}

	/**
	 * set  XX_COPY_UNIT_DAYS_QTY_AH.
	 * @param data XX_COPY_UNIT_DAYS_QTY_AHArray
	 */
	public void setXxCopyUnitDaysQty_AH(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxCopyUnitDaysQty_AH, data[j]);
		}
	}

	/**
	 * get  XX_COPY_UNIT_DAYS_QTY_AE.
	 * @param idx1 List Number
	 * @return XX_COPY_UNIT_DAYS_QTY_AE
	 */
	public String getXxCopyUnitDaysQty_AE(int idx1) {
		return outputValue(A, idx1, xxCopyUnitDaysQty_AE);
	}

	/**
	 * set  XX_COPY_UNIT_DAYS_QTY_AE.
	 * @param data XX_COPY_UNIT_DAYS_QTY_AEArray
	 */
	public void setXxCopyUnitDaysQty_AE(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxCopyUnitDaysQty_AE, data[j]);
		}
	}

	/**
	 * get  READ_MTR_CNT_AE.
	 * @param idx1 List Number
	 * @return READ_MTR_CNT_AE
	 */
	public String getReadMtrCnt_AE(int idx1) {
		return outputValue(A, idx1, readMtrCnt_AE);
	}

	/**
	 * set  READ_MTR_CNT_AE.
	 * @param data READ_MTR_CNT_AEArray
	 */
	public void setReadMtrCnt_AE(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, readMtrCnt_AE, data[j]);
		}
	}

	/**
	 * get  DS_MTR_READ_TP_GRP_CD_B.
	 * @param idx1 List Number
	 * @return DS_MTR_READ_TP_GRP_CD_B
	 */
	public String getDsMtrReadTpGrpCd_B(int idx1) {
		return outputValue(B, idx1, dsMtrReadTpGrpCd_B);
	}

	/**
	 * set  DS_MTR_READ_TP_GRP_CD_B.
	 * @param data DS_MTR_READ_TP_GRP_CD_BArray
	 */
	public void setDsMtrReadTpGrpCd_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, dsMtrReadTpGrpCd_B, data[j]);
		}
	}

	/**
	 * get  XX_GENL_FLD_AREA_TXT_B.
	 * @param idx1 List Number
	 * @return XX_GENL_FLD_AREA_TXT_B
	 */
	public String getXxGenlFldAreaTxt_B(int idx1) {
		return outputValue(B, idx1, xxGenlFldAreaTxt_B);
	}

	/**
	 * set  XX_GENL_FLD_AREA_TXT_B.
	 * @param data XX_GENL_FLD_AREA_TXT_BArray
	 */
	public void setXxGenlFldAreaTxt_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, xxGenlFldAreaTxt_B, data[j]);
		}
	}

	/**
	 * get  SLS_DT.
	 * @return SLS_DT
	 */
	public String getSlsDt() {
		return outputValue(slsDt, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  SLS_DT.
	 * @param data SLS_DT
	 */
	public void setSlsDt(String data) {
		inputValue(slsDt, data, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * get  MTR_EST_PROC_DT.
	 * @return MTR_EST_PROC_DT
	 */
	public String getMtrEstProcDt() {
		return outputValue(mtrEstProcDt, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  MTR_EST_PROC_DT.
	 * @param data MTR_EST_PROC_DT
	 */
	public void setMtrEstProcDt(String data) {
		inputValue(mtrEstProcDt, data, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * get  MTR_LB_CD_C.
	 * @param idx1 List Number
	 * @return MTR_LB_CD_C
	 */
	public String getMtrLbCd_C(int idx1) {
		return outputValue(C, idx1, mtrLbCd_C);
	}

	/**
	 * set  MTR_LB_CD_C.
	 * @param data MTR_LB_CD_CArray
	 */
	public void setMtrLbCd_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, mtrLbCd_C, data[j]);
		}
	}

	/**
	 * get  MTR_LB_DESC_TXT_C.
	 * @param idx1 List Number
	 * @return MTR_LB_DESC_TXT_C
	 */
	public String getMtrLbDescTxt_C(int idx1) {
		return outputValue(C, idx1, mtrLbDescTxt_C);
	}

	/**
	 * set  MTR_LB_DESC_TXT_C.
	 * @param data MTR_LB_DESC_TXT_CArray
	 */
	public void setMtrLbDescTxt_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, mtrLbDescTxt_C, data[j]);
		}
	}

	/**
	 * get  XX_ROW_NUM.
	 * @return XX_ROW_NUM
	 */
	public String getXxRowNum() {
		return outputValue(xxRowNum);
	}

	/**
	 * set  XX_ROW_NUM.
	 * @param data XX_ROW_NUM
	 */
	public void setXxRowNum(String data) {
		inputValue(xxRowNum,data);
	}

	/**
	 * get  XX_CHK_BOX_D.
	 * @param idx1 List Number
	 * @return XX_CHK_BOX_D
	 */
	public String getXxChkBox_D(int idx1) {
		return outputValue(D, idx1, xxChkBox_D);
	}

	/**
	 * set  XX_CHK_BOX_D.
	 * @param data XX_CHK_BOX_DArray
	 */
	public void setXxChkBox_D(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(D);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(D, i, xxChkBox_D, data[j]);
		}
	}

	/**
	 * get  SVC_PHYS_MTR_READ_GRP_SQ_D.
	 * @param idx1 List Number
	 * @return SVC_PHYS_MTR_READ_GRP_SQ_D
	 */
	public String getSvcPhysMtrReadGrpSq_D(int idx1) {
		return outputValue(D, idx1, svcPhysMtrReadGrpSq_D);
	}

	/**
	 * set  SVC_PHYS_MTR_READ_GRP_SQ_D.
	 * @param data SVC_PHYS_MTR_READ_GRP_SQ_DArray
	 */
	public void setSvcPhysMtrReadGrpSq_D(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(D);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(D, i, svcPhysMtrReadGrpSq_D, data[j]);
		}
	}

	/**
	 * get  MTR_READ_DT_D.
	 * @param idx1 List Number
	 * @return MTR_READ_DT_D
	 */
	public String getMtrReadDt_D(int idx1) {
		return outputValue(D, idx1, mtrReadDt_D, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  MTR_READ_DT_D.
	 * @param data MTR_READ_DT_DArray
	 */
	public void setMtrReadDt_D(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(D);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(D, i,  mtrReadDt_D, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  DS_MTR_READ_TP_GRP_CD_D.
	 * @param idx1 List Number
	 * @return DS_MTR_READ_TP_GRP_CD_D
	 */
	public String getDsMtrReadTpGrpCd_D(int idx1) {
		return outputValue(D, idx1, dsMtrReadTpGrpCd_D);
	}

	/**
	 * set  DS_MTR_READ_TP_GRP_CD_D.
	 * @param data DS_MTR_READ_TP_GRP_CD_DArray
	 */
	public void setDsMtrReadTpGrpCd_D(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(D);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(D, i, dsMtrReadTpGrpCd_D, data[j]);
		}
	}

	/**
	 * get  DS_MTR_READ_TP_CD_D.
	 * @param idx1 List Number
	 * @return DS_MTR_READ_TP_CD_D
	 */
	public String getDsMtrReadTpCd_D(int idx1) {
		return outputValue(D, idx1, dsMtrReadTpCd_D);
	}

	/**
	 * set  DS_MTR_READ_TP_CD_D.
	 * @param data DS_MTR_READ_TP_CD_DArray
	 */
	public void setDsMtrReadTpCd_D(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(D);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(D, i, dsMtrReadTpCd_D, data[j]);
		}
	}

	/**
	 * get  DS_MTR_READ_TP_DESC_TXT_D.
	 * @param idx1 List Number
	 * @return DS_MTR_READ_TP_DESC_TXT_D
	 */
	public String getDsMtrReadTpDescTxt_D(int idx1) {
		return outputValue(D, idx1, dsMtrReadTpDescTxt_D);
	}

	/**
	 * set  DS_MTR_READ_TP_DESC_TXT_D.
	 * @param data DS_MTR_READ_TP_DESC_TXT_DArray
	 */
	public void setDsMtrReadTpDescTxt_D(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(D);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(D, i, dsMtrReadTpDescTxt_D, data[j]);
		}
	}

	/**
	 * get  SVC_PHYS_MTR_READ_PK_D.
	 * @param idx1 List Number
	 * @return SVC_PHYS_MTR_READ_PK_D
	 */
	public String getSvcPhysMtrReadPk_D(int idx1) {
		return outputValue(D, idx1, svcPhysMtrReadPk_D);
	}

	/**
	 * set  SVC_PHYS_MTR_READ_PK_D.
	 * @param data SVC_PHYS_MTR_READ_PK_DArray
	 */
	public void setSvcPhysMtrReadPk_D(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(D);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(D, i, svcPhysMtrReadPk_D, data[j]);
		}
	}

	/**
	 * get  SVC_PHYS_MTR_PK_D.
	 * @param idx1 List Number
	 * @return SVC_PHYS_MTR_PK_D
	 */
	public String getSvcPhysMtrPk_D(int idx1) {
		return outputValue(D, idx1, svcPhysMtrPk_D);
	}

	/**
	 * set  SVC_PHYS_MTR_PK_D.
	 * @param data SVC_PHYS_MTR_PK_DArray
	 */
	public void setSvcPhysMtrPk_D(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(D);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(D, i, svcPhysMtrPk_D, data[j]);
		}
	}

	/**
	 * get  MTR_LB_CD_D.
	 * @param idx1 List Number
	 * @return MTR_LB_CD_D
	 */
	public String getMtrLbCd_D(int idx1) {
		return outputValue(D, idx1, mtrLbCd_D);
	}

	/**
	 * set  MTR_LB_CD_D.
	 * @param data MTR_LB_CD_DArray
	 */
	public void setMtrLbCd_D(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(D);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(D, i, mtrLbCd_D, data[j]);
		}
	}

	/**
	 * get  READ_MTR_CNT_D.
	 * @param idx1 List Number
	 * @return READ_MTR_CNT_D
	 */
	public String getReadMtrCnt_D(int idx1) {
		return outputValue(D, idx1, readMtrCnt_D);
	}

	/**
	 * set  READ_MTR_CNT_D.
	 * @param data READ_MTR_CNT_DArray
	 */
	public void setReadMtrCnt_D(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(D);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(D, i, readMtrCnt_D, data[j]);
		}
	}

	/**
	 * get  XX_COPY_UNIT_DAYS_QTY_DH.
	 * @param idx1 List Number
	 * @return XX_COPY_UNIT_DAYS_QTY_DH
	 */
	public String getXxCopyUnitDaysQty_DH(int idx1) {
		return outputValue(D, idx1, xxCopyUnitDaysQty_DH);
	}

	/**
	 * set  XX_COPY_UNIT_DAYS_QTY_DH.
	 * @param data XX_COPY_UNIT_DAYS_QTY_DHArray
	 */
	public void setXxCopyUnitDaysQty_DH(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(D);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(D, i, xxCopyUnitDaysQty_DH, data[j]);
		}
	}

	/**
	 * get  SVC_PHYS_MTR_PK.
	 * @param idx1 List Number
	 * @return SVC_PHYS_MTR_PK
	 */
	public String getSvcPhysMtrPk(int idx1) {
		return outputValue(P, idx1, svcPhysMtrPk);
	}

	/**
	 * set  SVC_PHYS_MTR_PK.
	 * @param data SVC_PHYS_MTR_PKArray
	 */
	public void setSvcPhysMtrPk(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(P);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(P, i, svcPhysMtrPk, data[j]);
		}
	}

	/**
	 * get  READ_MTR_CNT.
	 * @param idx1 List Number
	 * @return READ_MTR_CNT
	 */
	public String getReadMtrCnt(int idx1) {
		return outputValue(P, idx1, readMtrCnt);
	}

	/**
	 * set  READ_MTR_CNT.
	 * @param data READ_MTR_CNTArray
	 */
	public void setReadMtrCnt(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(P);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(P, i, readMtrCnt, data[j]);
		}
	}

	/**
	 * get  MTR_ENTRY_CMNT_TXT.
	 * @param idx1 List Number
	 * @return MTR_ENTRY_CMNT_TXT
	 */
	public String getMtrEntryCmntTxt(int idx1) {
		return outputValue(P, idx1, mtrEntryCmntTxt);
	}

	/**
	 * set  MTR_ENTRY_CMNT_TXT.
	 * @param data MTR_ENTRY_CMNT_TXTArray
	 */
	public void setMtrEntryCmntTxt(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(P);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(P, i, mtrEntryCmntTxt, data[j]);
		}
	}

}

