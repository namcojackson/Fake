//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20160916131748000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0430_DBMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NSAL0430;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL0430 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL0430_DBMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_CHK_BOX_D*/
	public final EZDBStringItem              xxChkBox_D;

    /** SVC_PHYS_MTR_READ_GRP_SQ_D*/
	public final EZDBBigDecimalItem              svcPhysMtrReadGrpSq_D;

    /** MTR_READ_DT_D*/
	public final EZDBDateItem              mtrReadDt_D;

    /** DS_MTR_READ_TP_GRP_CD_D*/
	public final EZDBStringItem              dsMtrReadTpGrpCd_D;

    /** DS_MTR_READ_TP_CD_D*/
	public final EZDBStringItem              dsMtrReadTpCd_D;

    /** DS_MTR_READ_TP_DESC_TXT_D*/
	public final EZDBStringItem              dsMtrReadTpDescTxt_D;

    /** SVC_PHYS_MTR_READ_PK_D*/
	public final EZDBBigDecimalItem              svcPhysMtrReadPk_D;

    /** SVC_PHYS_MTR_PK_D*/
	public final EZDBBigDecimalItem              svcPhysMtrPk_D;

    /** MTR_LB_CD_D*/
	public final EZDBStringItem              mtrLbCd_D;

    /** READ_MTR_CNT_D*/
	public final EZDBBigDecimalItem              readMtrCnt_D;

    /** XX_COPY_UNIT_DAYS_QTY_DH*/
	public final EZDBBigDecimalItem              xxCopyUnitDaysQty_DH;


	/**
	 * NSAL0430_DBMsg is constructor.
	 * The initialization when the instance of NSAL0430_DBMsg is generated.
	 */
	public NSAL0430_DBMsg() {
		this(false, -1);
	}

	/**
	 * NSAL0430_DBMsg is constructor.
	 * The initialization when the instance of NSAL0430_DBMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL0430_DBMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxChkBox_D = (EZDBStringItem)newItem("xxChkBox_D");
		svcPhysMtrReadGrpSq_D = (EZDBBigDecimalItem)newItem("svcPhysMtrReadGrpSq_D");
		mtrReadDt_D = (EZDBDateItem)newItem("mtrReadDt_D");
		dsMtrReadTpGrpCd_D = (EZDBStringItem)newItem("dsMtrReadTpGrpCd_D");
		dsMtrReadTpCd_D = (EZDBStringItem)newItem("dsMtrReadTpCd_D");
		dsMtrReadTpDescTxt_D = (EZDBStringItem)newItem("dsMtrReadTpDescTxt_D");
		svcPhysMtrReadPk_D = (EZDBBigDecimalItem)newItem("svcPhysMtrReadPk_D");
		svcPhysMtrPk_D = (EZDBBigDecimalItem)newItem("svcPhysMtrPk_D");
		mtrLbCd_D = (EZDBStringItem)newItem("mtrLbCd_D");
		readMtrCnt_D = (EZDBBigDecimalItem)newItem("readMtrCnt_D");
		xxCopyUnitDaysQty_DH = (EZDBBigDecimalItem)newItem("xxCopyUnitDaysQty_DH");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL0430_DBMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL0430_DBMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxChkBox_D", "xxChkBox_D", "D", null, TYPE_HANKAKUEIJI, "1", null},
	{"svcPhysMtrReadGrpSq_D", "svcPhysMtrReadGrpSq_D", "D", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"mtrReadDt_D", "mtrReadDt_D", "D", null, TYPE_NENTSUKIHI, "8", null},
	{"dsMtrReadTpGrpCd_D", "dsMtrReadTpGrpCd_D", "D", null, TYPE_HANKAKUEISU, "10", null},
	{"dsMtrReadTpCd_D", "dsMtrReadTpCd_D", "D", null, TYPE_HANKAKUEISU, "10", null},
	{"dsMtrReadTpDescTxt_D", "dsMtrReadTpDescTxt_D", "D", null, TYPE_HANKAKUEISU, "50", null},
	{"svcPhysMtrReadPk_D", "svcPhysMtrReadPk_D", "D", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"svcPhysMtrPk_D", "svcPhysMtrPk_D", "D", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"mtrLbCd_D", "mtrLbCd_D", "D", null, TYPE_HANKAKUEISU, "2", null},
	{"readMtrCnt_D", "readMtrCnt_D", "D", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"xxCopyUnitDaysQty_DH", "xxCopyUnitDaysQty_DH", "DH", null, TYPE_SEISU_SYOSU, "10", "0"},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_CHK_BOX",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_D
        {"SVC_PHYS_MTR_READ_GRP_SQ",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcPhysMtrReadGrpSq_D
        {"MTR_READ_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//mtrReadDt_D
        {"DS_MTR_READ_TP_GRP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsMtrReadTpGrpCd_D
        {"DS_MTR_READ_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsMtrReadTpCd_D
        {"DS_MTR_READ_TP_DESC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsMtrReadTpDescTxt_D
        {"SVC_PHYS_MTR_READ_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcPhysMtrReadPk_D
        {"SVC_PHYS_MTR_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcPhysMtrPk_D
        {"MTR_LB_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrLbCd_D
        {"READ_MTR_CNT",  NO,  null,null,"1", NO,YES, NO, NO,null,null,null, null,  NO,  NO},	//readMtrCnt_D
        {"XX_COPY_UNIT_DAYS_QTY",  NO,  null,null,"1", NO,YES, NO, NO,null,null,null, null,  NO,  NO},	//xxCopyUnitDaysQty_DH
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

