//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20221012082348000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0350_HBMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NSAL0350;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL0350 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL0350_HBMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** DS_CONTR_BLLG_SCHD_PK_H1*/
	public final EZDBBigDecimalItem              dsContrBllgSchdPk_H1;

    /** DS_CONTR_BLLG_SCHD_SMRY_PK_H1*/
	public final EZDBBigDecimalItem              dsContrBllgSchdSmryPk_H1;

    /** DS_CONTR_BLLG_MTR_PK_H1*/
	public final EZDBBigDecimalItem              dsContrBllgMtrPk_H1;

    /** DS_CONTR_BLLG_SCHD_SQ_NUM_H1*/
	public final EZDBStringItem              dsContrBllgSchdSqNum_H1;

    /** DS_CONTR_BLLG_SCHD_LVL_NUM_H1*/
	public final EZDBStringItem              dsContrBllgSchdLvlNum_H1;

    /** DS_CONTR_PRC_EFF_SQ_NUM_H1*/
	public final EZDBBigDecimalItem              dsContrPrcEffSqNum_H1;

    /** SKIP_RECOV_TP_CD_H3*/
	public final EZDBStringItem              skipRecovTpCd_H3;

    /** BLLG_SCHD_FROM_DT_H1*/
	public final EZDBDateItem              bllgSchdFromDt_H1;

    /** BLLG_SCHD_THRU_DT_H1*/
	public final EZDBDateItem              bllgSchdThruDt_H1;

    /** NEXT_BLLG_DT_H1*/
	public final EZDBDateItem              nextBllgDt_H1;

    /** NEXT_BLLG_DT_H2*/
	public final EZDBDateItem              nextBllgDt_H2;

    /** RVS_SCHD_DT_H1*/
	public final EZDBDateItem              rvsSchdDt_H1;

    /** BASE_PRC_DEAL_AMT_H1*/
	public final EZDBBigDecimalItem              basePrcDealAmt_H1;

    /** MTR_ENTRY_CPLT_FLG_H1*/
	public final EZDBStringItem              mtrEntryCpltFlg_H1;

    /** DS_BLLG_SCHD_STS_CD_H1*/
	public final EZDBStringItem              dsBllgSchdStsCd_H1;

    /** DS_BLLG_SCHD_STS_DESC_TXT_H1*/
	public final EZDBStringItem              dsBllgSchdStsDescTxt_H1;

    /** SVC_INV_NUM_H1*/
	public final EZDBStringItem              svcInvNum_H1;

    /** EIP_RPT_RQST_PK_H1*/
	public final EZDBBigDecimalItem              eipRptRqstPk_H1;

    /** INV_DT_H1*/
	public final EZDBDateItem              invDt_H1;

    /** BASE_ACTL_PRC_DEAL_AMT_H1*/
	public final EZDBBigDecimalItem              baseActlPrcDealAmt_H1;

    /** DEAL_TAX_AMT_H1*/
	public final EZDBBigDecimalItem              dealTaxAmt_H1;

    /** _EZUpdateDateTime_H1*/
	public final EZDBStringItem              ezUpTime_H1;

    /** _EZUpTimeZone_H1*/
	public final EZDBStringItem              ezUpTimeZone_H1;

    /** XX_REC_HIST_CRAT_TS_H1*/
	public final EZDBStringItem              xxRecHistCratTs_H1;

    /** XX_REC_HIST_CRAT_BY_NM_H1*/
	public final EZDBStringItem              xxRecHistCratByNm_H1;

    /** XX_REC_HIST_UPD_TS_H1*/
	public final EZDBStringItem              xxRecHistUpdTs_H1;

    /** XX_REC_HIST_UPD_BY_NM_H1*/
	public final EZDBStringItem              xxRecHistUpdByNm_H1;

    /** XX_REC_HIST_TBL_NM_H1*/
	public final EZDBStringItem              xxRecHistTblNm_H1;


	/**
	 * NSAL0350_HBMsg is constructor.
	 * The initialization when the instance of NSAL0350_HBMsg is generated.
	 */
	public NSAL0350_HBMsg() {
		this(false, -1);
	}

	/**
	 * NSAL0350_HBMsg is constructor.
	 * The initialization when the instance of NSAL0350_HBMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL0350_HBMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		dsContrBllgSchdPk_H1 = (EZDBBigDecimalItem)newItem("dsContrBllgSchdPk_H1");
		dsContrBllgSchdSmryPk_H1 = (EZDBBigDecimalItem)newItem("dsContrBllgSchdSmryPk_H1");
		dsContrBllgMtrPk_H1 = (EZDBBigDecimalItem)newItem("dsContrBllgMtrPk_H1");
		dsContrBllgSchdSqNum_H1 = (EZDBStringItem)newItem("dsContrBllgSchdSqNum_H1");
		dsContrBllgSchdLvlNum_H1 = (EZDBStringItem)newItem("dsContrBllgSchdLvlNum_H1");
		dsContrPrcEffSqNum_H1 = (EZDBBigDecimalItem)newItem("dsContrPrcEffSqNum_H1");
		skipRecovTpCd_H3 = (EZDBStringItem)newItem("skipRecovTpCd_H3");
		bllgSchdFromDt_H1 = (EZDBDateItem)newItem("bllgSchdFromDt_H1");
		bllgSchdThruDt_H1 = (EZDBDateItem)newItem("bllgSchdThruDt_H1");
		nextBllgDt_H1 = (EZDBDateItem)newItem("nextBllgDt_H1");
		nextBllgDt_H2 = (EZDBDateItem)newItem("nextBllgDt_H2");
		rvsSchdDt_H1 = (EZDBDateItem)newItem("rvsSchdDt_H1");
		basePrcDealAmt_H1 = (EZDBBigDecimalItem)newItem("basePrcDealAmt_H1");
		mtrEntryCpltFlg_H1 = (EZDBStringItem)newItem("mtrEntryCpltFlg_H1");
		dsBllgSchdStsCd_H1 = (EZDBStringItem)newItem("dsBllgSchdStsCd_H1");
		dsBllgSchdStsDescTxt_H1 = (EZDBStringItem)newItem("dsBllgSchdStsDescTxt_H1");
		svcInvNum_H1 = (EZDBStringItem)newItem("svcInvNum_H1");
		eipRptRqstPk_H1 = (EZDBBigDecimalItem)newItem("eipRptRqstPk_H1");
		invDt_H1 = (EZDBDateItem)newItem("invDt_H1");
		baseActlPrcDealAmt_H1 = (EZDBBigDecimalItem)newItem("baseActlPrcDealAmt_H1");
		dealTaxAmt_H1 = (EZDBBigDecimalItem)newItem("dealTaxAmt_H1");
		ezUpTime_H1 = (EZDBStringItem)newItem("ezUpTime_H1");
		ezUpTimeZone_H1 = (EZDBStringItem)newItem("ezUpTimeZone_H1");
		xxRecHistCratTs_H1 = (EZDBStringItem)newItem("xxRecHistCratTs_H1");
		xxRecHistCratByNm_H1 = (EZDBStringItem)newItem("xxRecHistCratByNm_H1");
		xxRecHistUpdTs_H1 = (EZDBStringItem)newItem("xxRecHistUpdTs_H1");
		xxRecHistUpdByNm_H1 = (EZDBStringItem)newItem("xxRecHistUpdByNm_H1");
		xxRecHistTblNm_H1 = (EZDBStringItem)newItem("xxRecHistTblNm_H1");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL0350_HBMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL0350_HBMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"dsContrBllgSchdPk_H1", "dsContrBllgSchdPk_H1", "H1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrBllgSchdSmryPk_H1", "dsContrBllgSchdSmryPk_H1", "H1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrBllgMtrPk_H1", "dsContrBllgMtrPk_H1", "H1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrBllgSchdSqNum_H1", "dsContrBllgSchdSqNum_H1", "H1", null, TYPE_HANKAKUEISU, "3", null},
	{"dsContrBllgSchdLvlNum_H1", "dsContrBllgSchdLvlNum_H1", "H1", null, TYPE_HANKAKUEISU, "3", null},
	{"dsContrPrcEffSqNum_H1", "dsContrPrcEffSqNum_H1", "H1", null, TYPE_SEISU_SYOSU, "4", "0"},
	{"skipRecovTpCd_H3", "skipRecovTpCd_H3", "H3", null, TYPE_HANKAKUEISU, "2", null},
	{"bllgSchdFromDt_H1", "bllgSchdFromDt_H1", "H1", null, TYPE_NENTSUKIHI, "8", null},
	{"bllgSchdThruDt_H1", "bllgSchdThruDt_H1", "H1", null, TYPE_NENTSUKIHI, "8", null},
	{"nextBllgDt_H1", "nextBllgDt_H1", "H1", null, TYPE_NENTSUKIHI, "8", null},
	{"nextBllgDt_H2", "nextBllgDt_H2", "H2", null, TYPE_NENTSUKIHI, "8", null},
	{"rvsSchdDt_H1", "rvsSchdDt_H1", "H1", null, TYPE_NENTSUKIHI, "8", null},
	{"basePrcDealAmt_H1", "basePrcDealAmt_H1", "H1", null, TYPE_SEISU_SYOSU, "19", "4"},
	{"mtrEntryCpltFlg_H1", "mtrEntryCpltFlg_H1", "H1", null, TYPE_HANKAKUEISU, "1", null},
	{"dsBllgSchdStsCd_H1", "dsBllgSchdStsCd_H1", "H1", null, TYPE_HANKAKUEISU, "2", null},
	{"dsBllgSchdStsDescTxt_H1", "dsBllgSchdStsDescTxt_H1", "H1", null, TYPE_HANKAKUEISU, "50", null},
	{"svcInvNum_H1", "svcInvNum_H1", "H1", null, TYPE_HANKAKUEISU, "13", null},
	{"eipRptRqstPk_H1", "eipRptRqstPk_H1", "H1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"invDt_H1", "invDt_H1", "H1", null, TYPE_NENTSUKIHI, "8", null},
	{"baseActlPrcDealAmt_H1", "baseActlPrcDealAmt_H1", "H1", null, TYPE_SEISU_SYOSU, "19", "4"},
	{"dealTaxAmt_H1", "dealTaxAmt_H1", "H1", null, TYPE_SEISU_SYOSU, "19", "4"},
	{"ezUpTime_H1", "ezUpTime_H1", "H1", null, TYPE_HANKAKUEISU, "17", null},
	{"ezUpTimeZone_H1", "ezUpTimeZone_H1", "H1", null, TYPE_HANKAKUEISU, "5", null},
	{"xxRecHistCratTs_H1", "xxRecHistCratTs_H1", "H1", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistCratByNm_H1", "xxRecHistCratByNm_H1", "H1", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistUpdTs_H1", "xxRecHistUpdTs_H1", "H1", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistUpdByNm_H1", "xxRecHistUpdByNm_H1", "H1", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistTblNm_H1", "xxRecHistTblNm_H1", "H1", null, TYPE_HANKAKUEISU, "60", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"DS_CONTR_BLLG_SCHD_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgSchdPk_H1
        {"DS_CONTR_BLLG_SCHD_SMRY_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgSchdSmryPk_H1
        {"DS_CONTR_BLLG_MTR_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgMtrPk_H1
        {"DS_CONTR_BLLG_SCHD_SQ_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgSchdSqNum_H1
        {"DS_CONTR_BLLG_SCHD_LVL_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgSchdLvlNum_H1
        {"DS_CONTR_PRC_EFF_SQ_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrPrcEffSqNum_H1
        {"SKIP_RECOV_TP_CD", YES,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//skipRecovTpCd_H3
        {"BLLG_SCHD_FROM_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//bllgSchdFromDt_H1
        {"BLLG_SCHD_THRU_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//bllgSchdThruDt_H1
        {"NEXT_BLLG_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//nextBllgDt_H1
        {"NEXT_BLLG_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//nextBllgDt_H2
        {"RVS_SCHD_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//rvsSchdDt_H1
        {"BASE_PRC_DEAL_AMT",  NO,  null,null,"1", NO,YES, NO, NO,null,null,null, null,  NO,  NO},	//basePrcDealAmt_H1
        {"MTR_ENTRY_CPLT_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrEntryCpltFlg_H1
        {"DS_BLLG_SCHD_STS_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsBllgSchdStsCd_H1
        {"DS_BLLG_SCHD_STS_DESC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsBllgSchdStsDescTxt_H1
        {"SVC_INV_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcInvNum_H1
        {"EIP_RPT_RQST_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//eipRptRqstPk_H1
        {"INV_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//invDt_H1
        {"BASE_ACTL_PRC_DEAL_AMT",  NO,  null,null,"1", NO,YES, NO, NO,null,null,null, null,  NO,  NO},	//baseActlPrcDealAmt_H1
        {"DEAL_TAX_AMT",  NO,  null,null,"1", NO,YES, NO, NO,null,null,null, null,  NO,  NO},	//dealTaxAmt_H1
        {"_EZUpdateDateTime",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTime_H1
        {"_EZUpTimeZone",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTimeZone_H1
        {"XX_REC_HIST_CRAT_TS",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratTs_H1
        {"XX_REC_HIST_CRAT_BY_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratByNm_H1
        {"XX_REC_HIST_UPD_TS",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdTs_H1
        {"XX_REC_HIST_UPD_BY_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdByNm_H1
        {"XX_REC_HIST_TBL_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistTblNm_H1
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

