//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20221012082348000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0350_FBMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NSAL0350;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL0350 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL0350_FBMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** DS_CONTR_BLLG_SCHD_PK_F1*/
	public final EZDBBigDecimalItem              dsContrBllgSchdPk_F1;

    /** DS_CONTR_BLLG_SCHD_SMRY_PK_F1*/
	public final EZDBBigDecimalItem              dsContrBllgSchdSmryPk_F1;

    /** DS_CONTR_BLLG_MTR_PK_F1*/
	public final EZDBBigDecimalItem              dsContrBllgMtrPk_F1;

    /** DS_CONTR_BLLG_SCHD_SQ_NUM_F1*/
	public final EZDBStringItem              dsContrBllgSchdSqNum_F1;

    /** DS_CONTR_BLLG_SCHD_LVL_NUM_F1*/
	public final EZDBStringItem              dsContrBllgSchdLvlNum_F1;

    /** DS_CONTR_PRC_EFF_SQ_NUM_F1*/
	public final EZDBBigDecimalItem              dsContrPrcEffSqNum_F1;

    /** SKIP_RECOV_TP_CD_F3*/
	public final EZDBStringItem              skipRecovTpCd_F3;

    /** BLLG_SCHD_FROM_DT_F1*/
	public final EZDBDateItem              bllgSchdFromDt_F1;

    /** BLLG_SCHD_THRU_DT_F1*/
	public final EZDBDateItem              bllgSchdThruDt_F1;

    /** NEXT_BLLG_DT_F1*/
	public final EZDBDateItem              nextBllgDt_F1;

    /** NEXT_BLLG_DT_F2*/
	public final EZDBDateItem              nextBllgDt_F2;

    /** RVS_SCHD_DT_F1*/
	public final EZDBDateItem              rvsSchdDt_F1;

    /** BASE_PRC_DEAL_AMT_F1*/
	public final EZDBBigDecimalItem              basePrcDealAmt_F1;

    /** MTR_ENTRY_CPLT_FLG_F1*/
	public final EZDBStringItem              mtrEntryCpltFlg_F1;

    /** DS_BLLG_SCHD_STS_CD_F1*/
	public final EZDBStringItem              dsBllgSchdStsCd_F1;

    /** DS_BLLG_SCHD_STS_DESC_TXT_F1*/
	public final EZDBStringItem              dsBllgSchdStsDescTxt_F1;

    /** SVC_INV_NUM_F1*/
	public final EZDBStringItem              svcInvNum_F1;

    /** EIP_RPT_RQST_PK_F1*/
	public final EZDBBigDecimalItem              eipRptRqstPk_F1;

    /** INV_DT_F1*/
	public final EZDBDateItem              invDt_F1;

    /** BASE_ACTL_PRC_DEAL_AMT_F1*/
	public final EZDBBigDecimalItem              baseActlPrcDealAmt_F1;

    /** DEAL_TAX_AMT_F1*/
	public final EZDBBigDecimalItem              dealTaxAmt_F1;

    /** _EZUpdateDateTime_F1*/
	public final EZDBStringItem              ezUpTime_F1;

    /** _EZUpTimeZone_F1*/
	public final EZDBStringItem              ezUpTimeZone_F1;

    /** XX_REC_HIST_CRAT_TS_F1*/
	public final EZDBStringItem              xxRecHistCratTs_F1;

    /** XX_REC_HIST_CRAT_BY_NM_F1*/
	public final EZDBStringItem              xxRecHistCratByNm_F1;

    /** XX_REC_HIST_UPD_TS_F1*/
	public final EZDBStringItem              xxRecHistUpdTs_F1;

    /** XX_REC_HIST_UPD_BY_NM_F1*/
	public final EZDBStringItem              xxRecHistUpdByNm_F1;

    /** XX_REC_HIST_TBL_NM_F1*/
	public final EZDBStringItem              xxRecHistTblNm_F1;


	/**
	 * NSAL0350_FBMsg is constructor.
	 * The initialization when the instance of NSAL0350_FBMsg is generated.
	 */
	public NSAL0350_FBMsg() {
		this(false, -1);
	}

	/**
	 * NSAL0350_FBMsg is constructor.
	 * The initialization when the instance of NSAL0350_FBMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL0350_FBMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		dsContrBllgSchdPk_F1 = (EZDBBigDecimalItem)newItem("dsContrBllgSchdPk_F1");
		dsContrBllgSchdSmryPk_F1 = (EZDBBigDecimalItem)newItem("dsContrBllgSchdSmryPk_F1");
		dsContrBllgMtrPk_F1 = (EZDBBigDecimalItem)newItem("dsContrBllgMtrPk_F1");
		dsContrBllgSchdSqNum_F1 = (EZDBStringItem)newItem("dsContrBllgSchdSqNum_F1");
		dsContrBllgSchdLvlNum_F1 = (EZDBStringItem)newItem("dsContrBllgSchdLvlNum_F1");
		dsContrPrcEffSqNum_F1 = (EZDBBigDecimalItem)newItem("dsContrPrcEffSqNum_F1");
		skipRecovTpCd_F3 = (EZDBStringItem)newItem("skipRecovTpCd_F3");
		bllgSchdFromDt_F1 = (EZDBDateItem)newItem("bllgSchdFromDt_F1");
		bllgSchdThruDt_F1 = (EZDBDateItem)newItem("bllgSchdThruDt_F1");
		nextBllgDt_F1 = (EZDBDateItem)newItem("nextBllgDt_F1");
		nextBllgDt_F2 = (EZDBDateItem)newItem("nextBllgDt_F2");
		rvsSchdDt_F1 = (EZDBDateItem)newItem("rvsSchdDt_F1");
		basePrcDealAmt_F1 = (EZDBBigDecimalItem)newItem("basePrcDealAmt_F1");
		mtrEntryCpltFlg_F1 = (EZDBStringItem)newItem("mtrEntryCpltFlg_F1");
		dsBllgSchdStsCd_F1 = (EZDBStringItem)newItem("dsBllgSchdStsCd_F1");
		dsBllgSchdStsDescTxt_F1 = (EZDBStringItem)newItem("dsBllgSchdStsDescTxt_F1");
		svcInvNum_F1 = (EZDBStringItem)newItem("svcInvNum_F1");
		eipRptRqstPk_F1 = (EZDBBigDecimalItem)newItem("eipRptRqstPk_F1");
		invDt_F1 = (EZDBDateItem)newItem("invDt_F1");
		baseActlPrcDealAmt_F1 = (EZDBBigDecimalItem)newItem("baseActlPrcDealAmt_F1");
		dealTaxAmt_F1 = (EZDBBigDecimalItem)newItem("dealTaxAmt_F1");
		ezUpTime_F1 = (EZDBStringItem)newItem("ezUpTime_F1");
		ezUpTimeZone_F1 = (EZDBStringItem)newItem("ezUpTimeZone_F1");
		xxRecHistCratTs_F1 = (EZDBStringItem)newItem("xxRecHistCratTs_F1");
		xxRecHistCratByNm_F1 = (EZDBStringItem)newItem("xxRecHistCratByNm_F1");
		xxRecHistUpdTs_F1 = (EZDBStringItem)newItem("xxRecHistUpdTs_F1");
		xxRecHistUpdByNm_F1 = (EZDBStringItem)newItem("xxRecHistUpdByNm_F1");
		xxRecHistTblNm_F1 = (EZDBStringItem)newItem("xxRecHistTblNm_F1");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL0350_FBMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL0350_FBMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"dsContrBllgSchdPk_F1", "dsContrBllgSchdPk_F1", "F1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrBllgSchdSmryPk_F1", "dsContrBllgSchdSmryPk_F1", "F1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrBllgMtrPk_F1", "dsContrBllgMtrPk_F1", "F1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrBllgSchdSqNum_F1", "dsContrBllgSchdSqNum_F1", "F1", null, TYPE_HANKAKUEISU, "3", null},
	{"dsContrBllgSchdLvlNum_F1", "dsContrBllgSchdLvlNum_F1", "F1", null, TYPE_HANKAKUEISU, "3", null},
	{"dsContrPrcEffSqNum_F1", "dsContrPrcEffSqNum_F1", "F1", null, TYPE_SEISU_SYOSU, "4", "0"},
	{"skipRecovTpCd_F3", "skipRecovTpCd_F3", "F3", null, TYPE_HANKAKUEISU, "2", null},
	{"bllgSchdFromDt_F1", "bllgSchdFromDt_F1", "F1", null, TYPE_NENTSUKIHI, "8", null},
	{"bllgSchdThruDt_F1", "bllgSchdThruDt_F1", "F1", null, TYPE_NENTSUKIHI, "8", null},
	{"nextBllgDt_F1", "nextBllgDt_F1", "F1", null, TYPE_NENTSUKIHI, "8", null},
	{"nextBllgDt_F2", "nextBllgDt_F2", "F2", null, TYPE_NENTSUKIHI, "8", null},
	{"rvsSchdDt_F1", "rvsSchdDt_F1", "F1", null, TYPE_NENTSUKIHI, "8", null},
	{"basePrcDealAmt_F1", "basePrcDealAmt_F1", "F1", null, TYPE_SEISU_SYOSU, "19", "4"},
	{"mtrEntryCpltFlg_F1", "mtrEntryCpltFlg_F1", "F1", null, TYPE_HANKAKUEISU, "1", null},
	{"dsBllgSchdStsCd_F1", "dsBllgSchdStsCd_F1", "F1", null, TYPE_HANKAKUEISU, "2", null},
	{"dsBllgSchdStsDescTxt_F1", "dsBllgSchdStsDescTxt_F1", "F1", null, TYPE_HANKAKUEISU, "50", null},
	{"svcInvNum_F1", "svcInvNum_F1", "F1", null, TYPE_HANKAKUEISU, "13", null},
	{"eipRptRqstPk_F1", "eipRptRqstPk_F1", "F1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"invDt_F1", "invDt_F1", "F1", null, TYPE_NENTSUKIHI, "8", null},
	{"baseActlPrcDealAmt_F1", "baseActlPrcDealAmt_F1", "F1", null, TYPE_SEISU_SYOSU, "19", "4"},
	{"dealTaxAmt_F1", "dealTaxAmt_F1", "F1", null, TYPE_SEISU_SYOSU, "19", "4"},
	{"ezUpTime_F1", "ezUpTime_F1", "F1", null, TYPE_HANKAKUEISU, "17", null},
	{"ezUpTimeZone_F1", "ezUpTimeZone_F1", "F1", null, TYPE_HANKAKUEISU, "5", null},
	{"xxRecHistCratTs_F1", "xxRecHistCratTs_F1", "F1", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistCratByNm_F1", "xxRecHistCratByNm_F1", "F1", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistUpdTs_F1", "xxRecHistUpdTs_F1", "F1", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistUpdByNm_F1", "xxRecHistUpdByNm_F1", "F1", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistTblNm_F1", "xxRecHistTblNm_F1", "F1", null, TYPE_HANKAKUEISU, "60", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"DS_CONTR_BLLG_SCHD_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgSchdPk_F1
        {"DS_CONTR_BLLG_SCHD_SMRY_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgSchdSmryPk_F1
        {"DS_CONTR_BLLG_MTR_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgMtrPk_F1
        {"DS_CONTR_BLLG_SCHD_SQ_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgSchdSqNum_F1
        {"DS_CONTR_BLLG_SCHD_LVL_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgSchdLvlNum_F1
        {"DS_CONTR_PRC_EFF_SQ_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrPrcEffSqNum_F1
        {"SKIP_RECOV_TP_CD", YES,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//skipRecovTpCd_F3
        {"BLLG_SCHD_FROM_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//bllgSchdFromDt_F1
        {"BLLG_SCHD_THRU_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//bllgSchdThruDt_F1
        {"NEXT_BLLG_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//nextBllgDt_F1
        {"NEXT_BLLG_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//nextBllgDt_F2
        {"RVS_SCHD_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//rvsSchdDt_F1
        {"BASE_PRC_DEAL_AMT",  NO,  null,null,"1", NO,YES, NO, NO,null,null,null, null,  NO,  NO},	//basePrcDealAmt_F1
        {"MTR_ENTRY_CPLT_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrEntryCpltFlg_F1
        {"DS_BLLG_SCHD_STS_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsBllgSchdStsCd_F1
        {"DS_BLLG_SCHD_STS_DESC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsBllgSchdStsDescTxt_F1
        {"SVC_INV_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcInvNum_F1
        {"EIP_RPT_RQST_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//eipRptRqstPk_F1
        {"INV_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//invDt_F1
        {"BASE_ACTL_PRC_DEAL_AMT",  NO,  null,null,"1", NO,YES, NO, NO,null,null,null, null,  NO,  NO},	//baseActlPrcDealAmt_F1
        {"DEAL_TAX_AMT",  NO,  null,null,"1", NO,YES, NO, NO,null,null,null, null,  NO,  NO},	//dealTaxAmt_F1
        {"_EZUpdateDateTime",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTime_F1
        {"_EZUpTimeZone",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTimeZone_F1
        {"XX_REC_HIST_CRAT_TS",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratTs_F1
        {"XX_REC_HIST_CRAT_BY_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratByNm_F1
        {"XX_REC_HIST_UPD_TS",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdTs_F1
        {"XX_REC_HIST_UPD_BY_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdByNm_F1
        {"XX_REC_HIST_TBL_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistTblNm_F1
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

