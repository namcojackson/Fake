//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20221012082348000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0350_ABMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NSAL0350;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL0350 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL0350_ABMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** DS_CONTR_BLLG_SCHD_PK_A1*/
	public final EZDBBigDecimalItem              dsContrBllgSchdPk_A1;

    /** DS_CONTR_BLLG_SCHD_SMRY_PK_A1*/
	public final EZDBBigDecimalItem              dsContrBllgSchdSmryPk_A1;

    /** DS_CONTR_BLLG_MTR_PK_A1*/
	public final EZDBBigDecimalItem              dsContrBllgMtrPk_A1;

    /** DS_CONTR_BLLG_SCHD_SQ_NUM_A1*/
	public final EZDBStringItem              dsContrBllgSchdSqNum_A1;

    /** DS_CONTR_BLLG_SCHD_LVL_NUM_A1*/
	public final EZDBStringItem              dsContrBllgSchdLvlNum_A1;

    /** DS_CONTR_PRC_EFF_SQ_NUM_A1*/
	public final EZDBBigDecimalItem              dsContrPrcEffSqNum_A1;

    /** SKIP_RECOV_TP_CD_A3*/
	public final EZDBStringItem              skipRecovTpCd_A3;

    /** BLLG_SCHD_FROM_DT_A1*/
	public final EZDBDateItem              bllgSchdFromDt_A1;

    /** BLLG_SCHD_THRU_DT_A1*/
	public final EZDBDateItem              bllgSchdThruDt_A1;

    /** NEXT_BLLG_DT_A1*/
	public final EZDBDateItem              nextBllgDt_A1;

    /** NEXT_BLLG_DT_A2*/
	public final EZDBDateItem              nextBllgDt_A2;

    /** RVS_SCHD_DT_A1*/
	public final EZDBDateItem              rvsSchdDt_A1;

    /** BASE_PRC_DEAL_AMT_A1*/
	public final EZDBBigDecimalItem              basePrcDealAmt_A1;

    /** MTR_ENTRY_CPLT_FLG_A1*/
	public final EZDBStringItem              mtrEntryCpltFlg_A1;

    /** DS_BLLG_SCHD_STS_CD_A1*/
	public final EZDBStringItem              dsBllgSchdStsCd_A1;

    /** DS_BLLG_SCHD_STS_DESC_TXT_A1*/
	public final EZDBStringItem              dsBllgSchdStsDescTxt_A1;

    /** SVC_INV_NUM_A1*/
	public final EZDBStringItem              svcInvNum_A1;

    /** EIP_RPT_RQST_PK_A1*/
	public final EZDBBigDecimalItem              eipRptRqstPk_A1;

    /** INV_DT_A1*/
	public final EZDBDateItem              invDt_A1;

    /** BASE_ACTL_PRC_DEAL_AMT_A1*/
	public final EZDBBigDecimalItem              baseActlPrcDealAmt_A1;

    /** DEAL_TAX_AMT_A1*/
	public final EZDBBigDecimalItem              dealTaxAmt_A1;

    /** _EZUpdateDateTime_A1*/
	public final EZDBStringItem              ezUpTime_A1;

    /** _EZUpTimeZone_A1*/
	public final EZDBStringItem              ezUpTimeZone_A1;

    /** XX_REC_HIST_CRAT_TS_A1*/
	public final EZDBStringItem              xxRecHistCratTs_A1;

    /** XX_REC_HIST_CRAT_BY_NM_A1*/
	public final EZDBStringItem              xxRecHistCratByNm_A1;

    /** XX_REC_HIST_UPD_TS_A1*/
	public final EZDBStringItem              xxRecHistUpdTs_A1;

    /** XX_REC_HIST_UPD_BY_NM_A1*/
	public final EZDBStringItem              xxRecHistUpdByNm_A1;

    /** XX_REC_HIST_TBL_NM_A1*/
	public final EZDBStringItem              xxRecHistTblNm_A1;


	/**
	 * NSAL0350_ABMsg is constructor.
	 * The initialization when the instance of NSAL0350_ABMsg is generated.
	 */
	public NSAL0350_ABMsg() {
		this(false, -1);
	}

	/**
	 * NSAL0350_ABMsg is constructor.
	 * The initialization when the instance of NSAL0350_ABMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL0350_ABMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		dsContrBllgSchdPk_A1 = (EZDBBigDecimalItem)newItem("dsContrBllgSchdPk_A1");
		dsContrBllgSchdSmryPk_A1 = (EZDBBigDecimalItem)newItem("dsContrBllgSchdSmryPk_A1");
		dsContrBllgMtrPk_A1 = (EZDBBigDecimalItem)newItem("dsContrBllgMtrPk_A1");
		dsContrBllgSchdSqNum_A1 = (EZDBStringItem)newItem("dsContrBllgSchdSqNum_A1");
		dsContrBllgSchdLvlNum_A1 = (EZDBStringItem)newItem("dsContrBllgSchdLvlNum_A1");
		dsContrPrcEffSqNum_A1 = (EZDBBigDecimalItem)newItem("dsContrPrcEffSqNum_A1");
		skipRecovTpCd_A3 = (EZDBStringItem)newItem("skipRecovTpCd_A3");
		bllgSchdFromDt_A1 = (EZDBDateItem)newItem("bllgSchdFromDt_A1");
		bllgSchdThruDt_A1 = (EZDBDateItem)newItem("bllgSchdThruDt_A1");
		nextBllgDt_A1 = (EZDBDateItem)newItem("nextBllgDt_A1");
		nextBllgDt_A2 = (EZDBDateItem)newItem("nextBllgDt_A2");
		rvsSchdDt_A1 = (EZDBDateItem)newItem("rvsSchdDt_A1");
		basePrcDealAmt_A1 = (EZDBBigDecimalItem)newItem("basePrcDealAmt_A1");
		mtrEntryCpltFlg_A1 = (EZDBStringItem)newItem("mtrEntryCpltFlg_A1");
		dsBllgSchdStsCd_A1 = (EZDBStringItem)newItem("dsBllgSchdStsCd_A1");
		dsBllgSchdStsDescTxt_A1 = (EZDBStringItem)newItem("dsBllgSchdStsDescTxt_A1");
		svcInvNum_A1 = (EZDBStringItem)newItem("svcInvNum_A1");
		eipRptRqstPk_A1 = (EZDBBigDecimalItem)newItem("eipRptRqstPk_A1");
		invDt_A1 = (EZDBDateItem)newItem("invDt_A1");
		baseActlPrcDealAmt_A1 = (EZDBBigDecimalItem)newItem("baseActlPrcDealAmt_A1");
		dealTaxAmt_A1 = (EZDBBigDecimalItem)newItem("dealTaxAmt_A1");
		ezUpTime_A1 = (EZDBStringItem)newItem("ezUpTime_A1");
		ezUpTimeZone_A1 = (EZDBStringItem)newItem("ezUpTimeZone_A1");
		xxRecHistCratTs_A1 = (EZDBStringItem)newItem("xxRecHistCratTs_A1");
		xxRecHistCratByNm_A1 = (EZDBStringItem)newItem("xxRecHistCratByNm_A1");
		xxRecHistUpdTs_A1 = (EZDBStringItem)newItem("xxRecHistUpdTs_A1");
		xxRecHistUpdByNm_A1 = (EZDBStringItem)newItem("xxRecHistUpdByNm_A1");
		xxRecHistTblNm_A1 = (EZDBStringItem)newItem("xxRecHistTblNm_A1");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL0350_ABMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL0350_ABMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"dsContrBllgSchdPk_A1", "dsContrBllgSchdPk_A1", "A1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrBllgSchdSmryPk_A1", "dsContrBllgSchdSmryPk_A1", "A1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrBllgMtrPk_A1", "dsContrBllgMtrPk_A1", "A1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrBllgSchdSqNum_A1", "dsContrBllgSchdSqNum_A1", "A1", null, TYPE_HANKAKUEISU, "3", null},
	{"dsContrBllgSchdLvlNum_A1", "dsContrBllgSchdLvlNum_A1", "A1", null, TYPE_HANKAKUEISU, "3", null},
	{"dsContrPrcEffSqNum_A1", "dsContrPrcEffSqNum_A1", "A1", null, TYPE_SEISU_SYOSU, "4", "0"},
	{"skipRecovTpCd_A3", "skipRecovTpCd_A3", "A3", null, TYPE_HANKAKUEISU, "2", null},
	{"bllgSchdFromDt_A1", "bllgSchdFromDt_A1", "A1", null, TYPE_NENTSUKIHI, "8", null},
	{"bllgSchdThruDt_A1", "bllgSchdThruDt_A1", "A1", null, TYPE_NENTSUKIHI, "8", null},
	{"nextBllgDt_A1", "nextBllgDt_A1", "A1", null, TYPE_NENTSUKIHI, "8", null},
	{"nextBllgDt_A2", "nextBllgDt_A2", "A2", null, TYPE_NENTSUKIHI, "8", null},
	{"rvsSchdDt_A1", "rvsSchdDt_A1", "A1", null, TYPE_NENTSUKIHI, "8", null},
	{"basePrcDealAmt_A1", "basePrcDealAmt_A1", "A1", null, TYPE_SEISU_SYOSU, "19", "4"},
	{"mtrEntryCpltFlg_A1", "mtrEntryCpltFlg_A1", "A1", null, TYPE_HANKAKUEISU, "1", null},
	{"dsBllgSchdStsCd_A1", "dsBllgSchdStsCd_A1", "A1", null, TYPE_HANKAKUEISU, "2", null},
	{"dsBllgSchdStsDescTxt_A1", "dsBllgSchdStsDescTxt_A1", "A1", null, TYPE_HANKAKUEISU, "50", null},
	{"svcInvNum_A1", "svcInvNum_A1", "A1", null, TYPE_HANKAKUEISU, "13", null},
	{"eipRptRqstPk_A1", "eipRptRqstPk_A1", "A1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"invDt_A1", "invDt_A1", "A1", null, TYPE_NENTSUKIHI, "8", null},
	{"baseActlPrcDealAmt_A1", "baseActlPrcDealAmt_A1", "A1", null, TYPE_SEISU_SYOSU, "19", "4"},
	{"dealTaxAmt_A1", "dealTaxAmt_A1", "A1", null, TYPE_SEISU_SYOSU, "19", "4"},
	{"ezUpTime_A1", "ezUpTime_A1", "A1", null, TYPE_HANKAKUEISU, "17", null},
	{"ezUpTimeZone_A1", "ezUpTimeZone_A1", "A1", null, TYPE_HANKAKUEISU, "5", null},
	{"xxRecHistCratTs_A1", "xxRecHistCratTs_A1", "A1", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistCratByNm_A1", "xxRecHistCratByNm_A1", "A1", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistUpdTs_A1", "xxRecHistUpdTs_A1", "A1", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistUpdByNm_A1", "xxRecHistUpdByNm_A1", "A1", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistTblNm_A1", "xxRecHistTblNm_A1", "A1", null, TYPE_HANKAKUEISU, "60", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"DS_CONTR_BLLG_SCHD_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgSchdPk_A1
        {"DS_CONTR_BLLG_SCHD_SMRY_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgSchdSmryPk_A1
        {"DS_CONTR_BLLG_MTR_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgMtrPk_A1
        {"DS_CONTR_BLLG_SCHD_SQ_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgSchdSqNum_A1
        {"DS_CONTR_BLLG_SCHD_LVL_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrBllgSchdLvlNum_A1
        {"DS_CONTR_PRC_EFF_SQ_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrPrcEffSqNum_A1
        {"SKIP_RECOV_TP_CD", YES,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//skipRecovTpCd_A3
        {"BLLG_SCHD_FROM_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//bllgSchdFromDt_A1
        {"BLLG_SCHD_THRU_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//bllgSchdThruDt_A1
        {"NEXT_BLLG_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//nextBllgDt_A1
        {"NEXT_BLLG_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//nextBllgDt_A2
        {"RVS_SCHD_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//rvsSchdDt_A1
        {"BASE_PRC_DEAL_AMT",  NO,  null,null,"1", NO,YES, NO, NO,null,null,null, null,  NO,  NO},	//basePrcDealAmt_A1
        {"MTR_ENTRY_CPLT_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrEntryCpltFlg_A1
        {"DS_BLLG_SCHD_STS_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsBllgSchdStsCd_A1
        {"DS_BLLG_SCHD_STS_DESC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsBllgSchdStsDescTxt_A1
        {"SVC_INV_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcInvNum_A1
        {"EIP_RPT_RQST_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//eipRptRqstPk_A1
        {"INV_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//invDt_A1
        {"BASE_ACTL_PRC_DEAL_AMT",  NO,  null,null,"1", NO,YES, NO, NO,null,null,null, null,  NO,  NO},	//baseActlPrcDealAmt_A1
        {"DEAL_TAX_AMT",  NO,  null,null,"1", NO,YES, NO, NO,null,null,null, null,  NO,  NO},	//dealTaxAmt_A1
        {"_EZUpdateDateTime",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTime_A1
        {"_EZUpTimeZone",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTimeZone_A1
        {"XX_REC_HIST_CRAT_TS",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratTs_A1
        {"XX_REC_HIST_CRAT_BY_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratByNm_A1
        {"XX_REC_HIST_UPD_TS",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdTs_A1
        {"XX_REC_HIST_UPD_BY_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdByNm_A1
        {"XX_REC_HIST_TBL_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistTblNm_A1
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

