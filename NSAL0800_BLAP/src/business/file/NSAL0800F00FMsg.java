//This file was automatically generated by Text File Layout Definition Document and XLA200710010.
// Generated on    :20220405102502000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :TextFileLayoutDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0800F00FMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.file;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL0800F00 File Layout Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL0800F00FMsg extends EZDFMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** CONTR_INTFC_SRC_TP_DESC_TXT_U1*/
	public final EZDFStringItem              contrIntfcSrcTpDescTxt_U1;

    /** DS_CONTR_CLS_DESC_TXT_U1*/
	public final EZDFStringItem              dsContrClsDescTxt_U1;

    /** SVC_LINE_BIZ_CD_U1*/
	public final EZDFStringItem              svcLineBizCd_U1;

    /** EFF_FROM_DT_U1*/
	public final EZDFDateItem              effFromDt_U1;

    /** ENBL_FLG_U1*/
	public final EZDFStringItem              enblFlg_U1;

    /** DS_ACCT_NM_U1*/
	public final EZDFStringItem              dsAcctNm_U1;

    /** MTR_READ_METH_DESC_TXT_U1*/
	public final EZDFStringItem              mtrReadMethDescTxt_U1;

    /** DS_CONTR_SLS_CR_TP_DESC_TXT_U1*/
	public final EZDFStringItem              dsContrSlsCrTpDescTxt_U1;

    /** MTR_EST_TP_DESC_TXT_U1*/
	public final EZDFStringItem              mtrEstTpDescTxt_U1;

    /** DS_INV_TGTR_TP_DESC_TXT_U1*/
	public final EZDFStringItem              dsInvTgtrTpDescTxt_U1;

    /** INV_SEPT_BASE_USG_MSTR_FLG_U1*/
	public final EZDFStringItem              invSeptBaseUsgMstrFlg_U1;

    /** PRC_ALLOC_BY_MACH_QTY_FLG_U1*/
	public final EZDFStringItem              prcAllocByMachQtyFlg_U1;

    /** BLLG_CYCLE_DESC_TXT_U1*/
	public final EZDFStringItem              bllgCycleDescTxt_U1;

    /** PRINT_DTL_FLG_U1*/
	public final EZDFStringItem              printDtlFlg_U1;

    /** BLLG_CYCLE_DESC_TXT_U2*/
	public final EZDFStringItem              bllgCycleDescTxt_U2;

    /** CONTR_AUTO_RNW_TP_DESC_TXT_U1*/
	public final EZDFStringItem              contrAutoRnwTpDescTxt_U1;

    /** BEF_END_RNW_DAYS_AOT_U1*/
	public final EZDFBigDecimalItem              befEndRnwDaysAot_U1;

    /** RNW_PRC_METH_DESC_TXT_U1*/
	public final EZDFStringItem              rnwPrcMethDescTxt_U1;

    /** BASE_PRC_UP_RATIO_U1*/
	public final EZDFBigDecimalItem              basePrcUpRatio_U1;

    /** MTR_PRC_UP_RATIO_U1*/
	public final EZDFBigDecimalItem              mtrPrcUpRatio_U1;

    /** RNW_EXT_MTH_AOT_U1*/
	public final EZDFBigDecimalItem              rnwExtMthAot_U1;

    /** CONTR_UPLFT_TP_DESC_TXT_U1*/
	public final EZDFStringItem              contrUplftTpDescTxt_U1;

    /** BEF_END_UPLFT_DAYS_AOT_U1*/
	public final EZDFBigDecimalItem              befEndUplftDaysAot_U1;

    /** UPLFT_PRC_METH_DESC_TXT_U1*/
	public final EZDFStringItem              uplftPrcMethDescTxt_U1;

    /** UPLFT_BASE_PRC_UP_RATIO_U1*/
	public final EZDFBigDecimalItem              uplftBasePrcUpRatio_U1;

    /** UPLFT_MTR_PRC_UP_RATIO_U1*/
	public final EZDFBigDecimalItem              uplftMtrPrcUpRatio_U1;

    /** START_READ_VLD_TP_DESC_TXT_U1*/
	public final EZDFStringItem              startReadVldTpDescTxt_U1;

    /** MTR_READ_WIN_DAYS_AOT_U1*/
	public final EZDFBigDecimalItem              mtrReadWinDaysAot_U1;

    /** ISTL_CALL_MTR_READ_USE_FLG_U1*/
	public final EZDFStringItem              istlCallMtrReadUseFlg_U1;

    /** BLLG_ROLL_OVER_RATIO_U1*/
	public final EZDFBigDecimalItem              bllgRollOverRatio_U1;

    /** MTR_READ_WIN_MLY_DAYS_AOT_U1*/
	public final EZDFBigDecimalItem              mtrReadWinMlyDaysAot_U1;

    /** MTR_READ_WIN_OTH_DAYS_AOT_U1*/
	public final EZDFBigDecimalItem              mtrReadWinOthDaysAot_U1;

    /** BLLG_LIMIT_AMT_U1*/
	public final EZDFBigDecimalItem              bllgLimitAmt_U1;

    /** BLLG_THRU_TP_DESC_TXT_U1*/
	public final EZDFStringItem              bllgThruTpDescTxt_U1;

    /** BLLG_THRU_DT_U1*/
	public final EZDFDateItem              bllgThruDt_U1;

    /** XX_DT_TXT_U1*/
	public final EZDFStringItem              xxDtTxt_U1;

    /** XX_DT_TXT_U2*/
	public final EZDFStringItem              xxDtTxt_U2;

    /** BLLG_TMG_TP_DESC_TXT_U1*/
	public final EZDFStringItem              bllgTmgTpDescTxt_U1;

    /** ALLW_DATA_CRCT_FLG_U1*/
	public final EZDFStringItem              allwDataCrctFlg_U1;

    /** STUB_PREP_FROM_TP_DESC_TXT_U1*/
	public final EZDFStringItem              stubPrepFromTpDescTxt_U1;

    /** STUB_PREP_THRU_TP_DESC_TXT_U1*/
	public final EZDFStringItem              stubPrepThruTpDescTxt_U1;

    /** AUTO_EFF_FLEET_FLG_U1*/
	public final EZDFStringItem              autoEffFleetFlg_U1;

    /** AUTO_EFF_AGGR_FLG_U1*/
	public final EZDFStringItem              autoEffAggrFlg_U1;


	/**
	 * NSAL0800F00FMsg is constructor.
	 * The initialization when the instance of NSAL0800F00FMsg is generated.
	 */
	public NSAL0800F00FMsg() {
		this(false, -1);
	}

	/**
	 * NSAL0800F00FMsg is constructor.
	 * The initialization when the instance of NSAL0800F00FMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL0800F00FMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		contrIntfcSrcTpDescTxt_U1 = (EZDFStringItem)newItem("contrIntfcSrcTpDescTxt_U1");
		dsContrClsDescTxt_U1 = (EZDFStringItem)newItem("dsContrClsDescTxt_U1");
		svcLineBizCd_U1 = (EZDFStringItem)newItem("svcLineBizCd_U1");
		effFromDt_U1 = (EZDFDateItem)newItem("effFromDt_U1");
		enblFlg_U1 = (EZDFStringItem)newItem("enblFlg_U1");
		dsAcctNm_U1 = (EZDFStringItem)newItem("dsAcctNm_U1");
		mtrReadMethDescTxt_U1 = (EZDFStringItem)newItem("mtrReadMethDescTxt_U1");
		dsContrSlsCrTpDescTxt_U1 = (EZDFStringItem)newItem("dsContrSlsCrTpDescTxt_U1");
		mtrEstTpDescTxt_U1 = (EZDFStringItem)newItem("mtrEstTpDescTxt_U1");
		dsInvTgtrTpDescTxt_U1 = (EZDFStringItem)newItem("dsInvTgtrTpDescTxt_U1");
		invSeptBaseUsgMstrFlg_U1 = (EZDFStringItem)newItem("invSeptBaseUsgMstrFlg_U1");
		prcAllocByMachQtyFlg_U1 = (EZDFStringItem)newItem("prcAllocByMachQtyFlg_U1");
		bllgCycleDescTxt_U1 = (EZDFStringItem)newItem("bllgCycleDescTxt_U1");
		printDtlFlg_U1 = (EZDFStringItem)newItem("printDtlFlg_U1");
		bllgCycleDescTxt_U2 = (EZDFStringItem)newItem("bllgCycleDescTxt_U2");
		contrAutoRnwTpDescTxt_U1 = (EZDFStringItem)newItem("contrAutoRnwTpDescTxt_U1");
		befEndRnwDaysAot_U1 = (EZDFBigDecimalItem)newItem("befEndRnwDaysAot_U1");
		rnwPrcMethDescTxt_U1 = (EZDFStringItem)newItem("rnwPrcMethDescTxt_U1");
		basePrcUpRatio_U1 = (EZDFBigDecimalItem)newItem("basePrcUpRatio_U1");
		mtrPrcUpRatio_U1 = (EZDFBigDecimalItem)newItem("mtrPrcUpRatio_U1");
		rnwExtMthAot_U1 = (EZDFBigDecimalItem)newItem("rnwExtMthAot_U1");
		contrUplftTpDescTxt_U1 = (EZDFStringItem)newItem("contrUplftTpDescTxt_U1");
		befEndUplftDaysAot_U1 = (EZDFBigDecimalItem)newItem("befEndUplftDaysAot_U1");
		uplftPrcMethDescTxt_U1 = (EZDFStringItem)newItem("uplftPrcMethDescTxt_U1");
		uplftBasePrcUpRatio_U1 = (EZDFBigDecimalItem)newItem("uplftBasePrcUpRatio_U1");
		uplftMtrPrcUpRatio_U1 = (EZDFBigDecimalItem)newItem("uplftMtrPrcUpRatio_U1");
		startReadVldTpDescTxt_U1 = (EZDFStringItem)newItem("startReadVldTpDescTxt_U1");
		mtrReadWinDaysAot_U1 = (EZDFBigDecimalItem)newItem("mtrReadWinDaysAot_U1");
		istlCallMtrReadUseFlg_U1 = (EZDFStringItem)newItem("istlCallMtrReadUseFlg_U1");
		bllgRollOverRatio_U1 = (EZDFBigDecimalItem)newItem("bllgRollOverRatio_U1");
		mtrReadWinMlyDaysAot_U1 = (EZDFBigDecimalItem)newItem("mtrReadWinMlyDaysAot_U1");
		mtrReadWinOthDaysAot_U1 = (EZDFBigDecimalItem)newItem("mtrReadWinOthDaysAot_U1");
		bllgLimitAmt_U1 = (EZDFBigDecimalItem)newItem("bllgLimitAmt_U1");
		bllgThruTpDescTxt_U1 = (EZDFStringItem)newItem("bllgThruTpDescTxt_U1");
		bllgThruDt_U1 = (EZDFDateItem)newItem("bllgThruDt_U1");
		xxDtTxt_U1 = (EZDFStringItem)newItem("xxDtTxt_U1");
		xxDtTxt_U2 = (EZDFStringItem)newItem("xxDtTxt_U2");
		bllgTmgTpDescTxt_U1 = (EZDFStringItem)newItem("bllgTmgTpDescTxt_U1");
		allwDataCrctFlg_U1 = (EZDFStringItem)newItem("allwDataCrctFlg_U1");
		stubPrepFromTpDescTxt_U1 = (EZDFStringItem)newItem("stubPrepFromTpDescTxt_U1");
		stubPrepThruTpDescTxt_U1 = (EZDFStringItem)newItem("stubPrepThruTpDescTxt_U1");
		autoEffFleetFlg_U1 = (EZDFStringItem)newItem("autoEffFleetFlg_U1");
		autoEffAggrFlg_U1 = (EZDFStringItem)newItem("autoEffAggrFlg_U1");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL0800F00FMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL0800F00FMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"contrIntfcSrcTpDescTxt_U1", "contrIntfcSrcTpDescTxt_U1", "U1", null, TYPE_HANKAKUEISU, "50", null},
	{"dsContrClsDescTxt_U1", "dsContrClsDescTxt_U1", "U1", null, TYPE_HANKAKUEISU, "50", null},
	{"svcLineBizCd_U1", "svcLineBizCd_U1", "U1", null, TYPE_HANKAKUEISU, "20", null},
	{"effFromDt_U1", "effFromDt_U1", "U1", null, TYPE_NENTSUKIHI, "8", null},
	{"enblFlg_U1", "enblFlg_U1", "U1", null, TYPE_HANKAKUEISU, "1", null},
	{"dsAcctNm_U1", "dsAcctNm_U1", "U1", null, TYPE_HANKAKUEISU, "360", null},
	{"mtrReadMethDescTxt_U1", "mtrReadMethDescTxt_U1", "U1", null, TYPE_HANKAKUEISU, "50", null},
	{"dsContrSlsCrTpDescTxt_U1", "dsContrSlsCrTpDescTxt_U1", "U1", null, TYPE_HANKAKUEISU, "50", null},
	{"mtrEstTpDescTxt_U1", "mtrEstTpDescTxt_U1", "U1", null, TYPE_HANKAKUEISU, "50", null},
	{"dsInvTgtrTpDescTxt_U1", "dsInvTgtrTpDescTxt_U1", "U1", null, TYPE_HANKAKUEISU, "50", null},
	{"invSeptBaseUsgMstrFlg_U1", "invSeptBaseUsgMstrFlg_U1", "U1", null, TYPE_HANKAKUEISU, "1", null},
	{"prcAllocByMachQtyFlg_U1", "prcAllocByMachQtyFlg_U1", "U1", null, TYPE_HANKAKUEISU, "1", null},
	{"bllgCycleDescTxt_U1", "bllgCycleDescTxt_U1", "U1", null, TYPE_HANKAKUEISU, "50", null},
	{"printDtlFlg_U1", "printDtlFlg_U1", "U1", null, TYPE_HANKAKUEISU, "1", null},
	{"bllgCycleDescTxt_U2", "bllgCycleDescTxt_U2", "U2", null, TYPE_HANKAKUEISU, "50", null},
	{"contrAutoRnwTpDescTxt_U1", "contrAutoRnwTpDescTxt_U1", "U1", null, TYPE_HANKAKUEISU, "50", null},
	{"befEndRnwDaysAot_U1", "befEndRnwDaysAot_U1", "U1", null, TYPE_SEISU_SYOSU, "3", "0"},
	{"rnwPrcMethDescTxt_U1", "rnwPrcMethDescTxt_U1", "U1", null, TYPE_HANKAKUEISU, "50", null},
	{"basePrcUpRatio_U1", "basePrcUpRatio_U1", "U1", null, TYPE_SEISU_SYOSU, "9", "5"},
	{"mtrPrcUpRatio_U1", "mtrPrcUpRatio_U1", "U1", null, TYPE_SEISU_SYOSU, "9", "5"},
	{"rnwExtMthAot_U1", "rnwExtMthAot_U1", "U1", null, TYPE_SEISU_SYOSU, "3", "0"},
	{"contrUplftTpDescTxt_U1", "contrUplftTpDescTxt_U1", "U1", null, TYPE_HANKAKUEISU, "50", null},
	{"befEndUplftDaysAot_U1", "befEndUplftDaysAot_U1", "U1", null, TYPE_SEISU_SYOSU, "3", "0"},
	{"uplftPrcMethDescTxt_U1", "uplftPrcMethDescTxt_U1", "U1", null, TYPE_HANKAKUEISU, "50", null},
	{"uplftBasePrcUpRatio_U1", "uplftBasePrcUpRatio_U1", "U1", null, TYPE_SEISU_SYOSU, "9", "5"},
	{"uplftMtrPrcUpRatio_U1", "uplftMtrPrcUpRatio_U1", "U1", null, TYPE_SEISU_SYOSU, "9", "5"},
	{"startReadVldTpDescTxt_U1", "startReadVldTpDescTxt_U1", "U1", null, TYPE_HANKAKUEISU, "50", null},
	{"mtrReadWinDaysAot_U1", "mtrReadWinDaysAot_U1", "U1", null, TYPE_SEISU_SYOSU, "3", "0"},
	{"istlCallMtrReadUseFlg_U1", "istlCallMtrReadUseFlg_U1", "U1", null, TYPE_HANKAKUEISU, "1", null},
	{"bllgRollOverRatio_U1", "bllgRollOverRatio_U1", "U1", null, TYPE_SEISU_SYOSU, "9", "5"},
	{"mtrReadWinMlyDaysAot_U1", "mtrReadWinMlyDaysAot_U1", "U1", null, TYPE_SEISU_SYOSU, "3", "0"},
	{"mtrReadWinOthDaysAot_U1", "mtrReadWinOthDaysAot_U1", "U1", null, TYPE_SEISU_SYOSU, "3", "0"},
	{"bllgLimitAmt_U1", "bllgLimitAmt_U1", "U1", null, TYPE_SEISU_SYOSU, "19", "4"},
	{"bllgThruTpDescTxt_U1", "bllgThruTpDescTxt_U1", "U1", null, TYPE_HANKAKUEISU, "50", null},
	{"bllgThruDt_U1", "bllgThruDt_U1", "U1", null, TYPE_NENTSUKIHI, "8", null},
	{"xxDtTxt_U1", "xxDtTxt_U1", "U1", null, TYPE_HANKAKUEISU, "10", null},
	{"xxDtTxt_U2", "xxDtTxt_U2", "U2", null, TYPE_HANKAKUEISU, "10", null},
	{"bllgTmgTpDescTxt_U1", "bllgTmgTpDescTxt_U1", "U1", null, TYPE_HANKAKUEISU, "50", null},
	{"allwDataCrctFlg_U1", "allwDataCrctFlg_U1", "U1", null, TYPE_HANKAKUEISU, "1", null},
	{"stubPrepFromTpDescTxt_U1", "stubPrepFromTpDescTxt_U1", "U1", null, TYPE_HANKAKUEISU, "50", null},
	{"stubPrepThruTpDescTxt_U1", "stubPrepThruTpDescTxt_U1", "U1", null, TYPE_HANKAKUEISU, "50", null},
	{"autoEffFleetFlg_U1", "autoEffFleetFlg_U1", "U1", null, TYPE_HANKAKUEISU, "1", null},
	{"autoEffAggrFlg_U1", "autoEffAggrFlg_U1", "U1", null, TYPE_HANKAKUEISU, "1", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"CONTR_INTFC_SRC_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrIntfcSrcTpDescTxt_U1
        {"DS_CONTR_CLS_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrClsDescTxt_U1
        {"SVC_LINE_BIZ_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcLineBizCd_U1
        {"EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effFromDt_U1
        {"ENBL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//enblFlg_U1
        {"DS_ACCT_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctNm_U1
        {"MTR_READ_METH_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrReadMethDescTxt_U1
        {"DS_CONTR_SLS_CR_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrSlsCrTpDescTxt_U1
        {"MTR_EST_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrEstTpDescTxt_U1
        {"DS_INV_TGTR_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsInvTgtrTpDescTxt_U1
        {"INV_SEPT_BASE_USG_MSTR_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invSeptBaseUsgMstrFlg_U1
        {"PRC_ALLOC_BY_MACH_QTY_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcAllocByMachQtyFlg_U1
        {"BLLG_CYCLE_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgCycleDescTxt_U1
        {"PRINT_DTL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//printDtlFlg_U1
        {"BLLG_CYCLE_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgCycleDescTxt_U2
        {"CONTR_AUTO_RNW_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrAutoRnwTpDescTxt_U1
        {"BEF_END_RNW_DAYS_AOT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//befEndRnwDaysAot_U1
        {"RNW_PRC_METH_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rnwPrcMethDescTxt_U1
        {"BASE_PRC_UP_RATIO",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//basePrcUpRatio_U1
        {"MTR_PRC_UP_RATIO",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrPrcUpRatio_U1
        {"RNW_EXT_MTH_AOT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rnwExtMthAot_U1
        {"CONTR_UPLFT_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrUplftTpDescTxt_U1
        {"BEF_END_UPLFT_DAYS_AOT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//befEndUplftDaysAot_U1
        {"UPLFT_PRC_METH_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//uplftPrcMethDescTxt_U1
        {"UPLFT_BASE_PRC_UP_RATIO",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//uplftBasePrcUpRatio_U1
        {"UPLFT_MTR_PRC_UP_RATIO",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//uplftMtrPrcUpRatio_U1
        {"START_READ_VLD_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//startReadVldTpDescTxt_U1
        {"MTR_READ_WIN_DAYS_AOT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrReadWinDaysAot_U1
        {"ISTL_CALL_MTR_READ_USE_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//istlCallMtrReadUseFlg_U1
        {"BLLG_ROLL_OVER_RATIO",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgRollOverRatio_U1
        {"MTR_READ_WIN_MLY_DAYS_AOT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrReadWinMlyDaysAot_U1
        {"MTR_READ_WIN_OTH_DAYS_AOT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrReadWinOthDaysAot_U1
        {"BLLG_LIMIT_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgLimitAmt_U1
        {"BLLG_THRU_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgThruTpDescTxt_U1
        {"BLLG_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgThruDt_U1
        {"XX_DT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDtTxt_U1
        {"XX_DT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDtTxt_U2
        {"BLLG_TMG_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgTmgTpDescTxt_U1
        {"ALLW_DATA_CRCT_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//allwDataCrctFlg_U1
        {"STUB_PREP_FROM_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//stubPrepFromTpDescTxt_U1
        {"STUB_PREP_THRU_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//stubPrepThruTpDescTxt_U1
        {"AUTO_EFF_FLEET_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//autoEffFleetFlg_U1
        {"AUTO_EFF_AGGR_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//autoEffAggrFlg_U1
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

