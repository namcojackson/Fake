//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20230227160343000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NLAL2030_BCMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NLAL2030;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NLAL2030 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NLAL2030_BCMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_NUM_B1*/
	public final EZDCBigDecimalItem              xxNum_B1;

    /** XX_CHK_BOX_B1*/
	public final EZDCStringItem              xxChkBox_B1;

    /** XX_CHK_BOX_BK*/
	public final EZDCStringItem              xxChkBox_BK;

    /** RWS_STS_DESC_TXT_B1*/
	public final EZDCStringItem              rwsStsDescTxt_B1;

    /** RWS_NUM_B1*/
	public final EZDCStringItem              rwsNum_B1;

    /** XX_CRAT_DT_B1*/
	public final EZDCDateItem              xxCratDt_B1;

    /** RWS_DTL_LINE_NUM_B1*/
	public final EZDCStringItem              rwsDtlLineNum_B1;

    /** RTL_WH_CD_B1*/
	public final EZDCStringItem              rtlWhCd_B1;

    /** RTL_WH_NM_B1*/
	public final EZDCStringItem              rtlWhNm_B1;

    /** RTL_WH_CD_B2*/
	public final EZDCStringItem              rtlWhCd_B2;

    /** XX_DPLY_CTRL_FLG_WH*/
	public final EZDCStringItem              xxDplyCtrlFlg_WH;

    /** INVTY_OWNR_CD_B1*/
	public final EZDCStringItem              invtyOwnrCd_B1;

    /** RWS_REF_NUM_B1*/
	public final EZDCStringItem              rwsRefNum_B1;

    /** THIRD_PTY_DSP_TP_CD_B1*/
	public final EZDCStringItem              thirdPtyDspTpCd_B1;

    /** THIRD_PTY_DSP_TP_CD_B2*/
	public final EZDCStringItem              thirdPtyDspTpCd_B2;

    /** XX_DPLY_CTRL_FLG_TP*/
	public final EZDCStringItem              xxDplyCtrlFlg_TP;

    /** IMPT_INV_BOL_NUM_B1*/
	public final EZDCStringItem              imptInvBolNum_B1;

    /** SCE_ORD_TP_CD_B1*/
	public final EZDCStringItem              sceOrdTpCd_B1;

    /** SCE_ORD_TP_NM_B1*/
	public final EZDCStringItem              sceOrdTpNm_B1;

    /** TRX_ORD_NUM_B1*/
	public final EZDCStringItem              trxOrdNum_B1;

    /** TRX_LINE_NUM_B1*/
	public final EZDCStringItem              trxLineNum_B1;

    /** TRX_LINE_SUB_NUM_B1*/
	public final EZDCStringItem              trxLineSubNum_B1;

    /** DPLY_LINE_NUM_B1*/
	public final EZDCStringItem              dplyLineNum_B1;

    /** FROM_LOC_CD_B1*/
	public final EZDCStringItem              fromLocCd_B1;

    /** DS_ACCT_NM_B1*/
	public final EZDCStringItem              dsAcctNm_B1;

    /** SVC_CONFIG_MSTR_PK_B1*/
	public final EZDCBigDecimalItem              svcConfigMstrPk_B1;

    /** MDSE_CD_B1*/
	public final EZDCStringItem              mdseCd_B1;

    /** FLIP_MDSE_CD_B1*/
	public final EZDCStringItem              flipMdseCd_B1;

    /** MDSE_DESC_SHORT_TXT_B1*/
	public final EZDCStringItem              mdseDescShortTxt_B1;

    /** RWS_QTY_B1*/
	public final EZDCBigDecimalItem              rwsQty_B1;

    /** XX_QTY_10_NUM_B1*/
	public final EZDCBigDecimalItem              xxQty10Num_B1;

    /** RWS_PUT_AWAY_QTY_B1*/
	public final EZDCBigDecimalItem              rwsPutAwayQty_B1;

    /** SER_NUM_B1*/
	public final EZDCStringItem              serNum_B1;

    /** RTL_SWH_CD_B1*/
	public final EZDCStringItem              rtlSwhCd_B1;

    /** RTL_SWH_NM_B1*/
	public final EZDCStringItem              rtlSwhNm_B1;

    /** XX_RTL_WH_SRCH_TXT_B1*/
	public final EZDCStringItem              xxRtlWhSrchTxt_B1;

    /** SER_NUM_TAKE_FLG_B1*/
	public final EZDCStringItem              serNumTakeFlg_B1;

    /** RCV_INVTY_LOC_CD_B1*/
	public final EZDCStringItem              rcvInvtyLocCd_B1;

    /** OPEN_FLG_BH*/
	public final EZDCStringItem              openFlg_BH;

    /** OPEN_FLG_BD*/
	public final EZDCStringItem              openFlg_BD;

    /** RCV_FLG_BH*/
	public final EZDCStringItem              rcvFlg_BH;

    /** RCV_FLG_BD*/
	public final EZDCStringItem              rcvFlg_BD;

    /** DS_ORD_POSN_NUM_B1*/
	public final EZDCStringItem              dsOrdPosnNum_B1;


	/**
	 * NLAL2030_BCMsg is constructor.
	 * The initialization when the instance of NLAL2030_BCMsg is generated.
	 */
	public NLAL2030_BCMsg() {
		this(false, -1);
	}

	/**
	 * NLAL2030_BCMsg is constructor.
	 * The initialization when the instance of NLAL2030_BCMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NLAL2030_BCMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxNum_B1 = (EZDCBigDecimalItem)newItem("xxNum_B1");
		xxChkBox_B1 = (EZDCStringItem)newItem("xxChkBox_B1");
		xxChkBox_BK = (EZDCStringItem)newItem("xxChkBox_BK");
		rwsStsDescTxt_B1 = (EZDCStringItem)newItem("rwsStsDescTxt_B1");
		rwsNum_B1 = (EZDCStringItem)newItem("rwsNum_B1");
		xxCratDt_B1 = (EZDCDateItem)newItem("xxCratDt_B1");
		rwsDtlLineNum_B1 = (EZDCStringItem)newItem("rwsDtlLineNum_B1");
		rtlWhCd_B1 = (EZDCStringItem)newItem("rtlWhCd_B1");
		rtlWhNm_B1 = (EZDCStringItem)newItem("rtlWhNm_B1");
		rtlWhCd_B2 = (EZDCStringItem)newItem("rtlWhCd_B2");
		xxDplyCtrlFlg_WH = (EZDCStringItem)newItem("xxDplyCtrlFlg_WH");
		invtyOwnrCd_B1 = (EZDCStringItem)newItem("invtyOwnrCd_B1");
		rwsRefNum_B1 = (EZDCStringItem)newItem("rwsRefNum_B1");
		thirdPtyDspTpCd_B1 = (EZDCStringItem)newItem("thirdPtyDspTpCd_B1");
		thirdPtyDspTpCd_B2 = (EZDCStringItem)newItem("thirdPtyDspTpCd_B2");
		xxDplyCtrlFlg_TP = (EZDCStringItem)newItem("xxDplyCtrlFlg_TP");
		imptInvBolNum_B1 = (EZDCStringItem)newItem("imptInvBolNum_B1");
		sceOrdTpCd_B1 = (EZDCStringItem)newItem("sceOrdTpCd_B1");
		sceOrdTpNm_B1 = (EZDCStringItem)newItem("sceOrdTpNm_B1");
		trxOrdNum_B1 = (EZDCStringItem)newItem("trxOrdNum_B1");
		trxLineNum_B1 = (EZDCStringItem)newItem("trxLineNum_B1");
		trxLineSubNum_B1 = (EZDCStringItem)newItem("trxLineSubNum_B1");
		dplyLineNum_B1 = (EZDCStringItem)newItem("dplyLineNum_B1");
		fromLocCd_B1 = (EZDCStringItem)newItem("fromLocCd_B1");
		dsAcctNm_B1 = (EZDCStringItem)newItem("dsAcctNm_B1");
		svcConfigMstrPk_B1 = (EZDCBigDecimalItem)newItem("svcConfigMstrPk_B1");
		mdseCd_B1 = (EZDCStringItem)newItem("mdseCd_B1");
		flipMdseCd_B1 = (EZDCStringItem)newItem("flipMdseCd_B1");
		mdseDescShortTxt_B1 = (EZDCStringItem)newItem("mdseDescShortTxt_B1");
		rwsQty_B1 = (EZDCBigDecimalItem)newItem("rwsQty_B1");
		xxQty10Num_B1 = (EZDCBigDecimalItem)newItem("xxQty10Num_B1");
		rwsPutAwayQty_B1 = (EZDCBigDecimalItem)newItem("rwsPutAwayQty_B1");
		serNum_B1 = (EZDCStringItem)newItem("serNum_B1");
		rtlSwhCd_B1 = (EZDCStringItem)newItem("rtlSwhCd_B1");
		rtlSwhNm_B1 = (EZDCStringItem)newItem("rtlSwhNm_B1");
		xxRtlWhSrchTxt_B1 = (EZDCStringItem)newItem("xxRtlWhSrchTxt_B1");
		serNumTakeFlg_B1 = (EZDCStringItem)newItem("serNumTakeFlg_B1");
		rcvInvtyLocCd_B1 = (EZDCStringItem)newItem("rcvInvtyLocCd_B1");
		openFlg_BH = (EZDCStringItem)newItem("openFlg_BH");
		openFlg_BD = (EZDCStringItem)newItem("openFlg_BD");
		rcvFlg_BH = (EZDCStringItem)newItem("rcvFlg_BH");
		rcvFlg_BD = (EZDCStringItem)newItem("rcvFlg_BD");
		dsOrdPosnNum_B1 = (EZDCStringItem)newItem("dsOrdPosnNum_B1");
	}

	/**
	 * get the type of array which is stored
	 * @return NLAL2030_BCMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NLAL2030_BCMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxNum_B1", "xxNum_B1", "B1", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxChkBox_B1", "xxChkBox_B1", "B1", null, TYPE_HANKAKUEIJI, "1", null},
	{"xxChkBox_BK", "xxChkBox_BK", "BK", null, TYPE_HANKAKUEIJI, "1", null},
	{"rwsStsDescTxt_B1", "rwsStsDescTxt_B1", "B1", null, TYPE_HANKAKUEISU, "50", null},
	{"rwsNum_B1", "rwsNum_B1", "B1", null, TYPE_HANKAKUEISU, "8", null},
	{"xxCratDt_B1", "xxCratDt_B1", "B1", null, TYPE_NENTSUKIHI, "8", null},
	{"rwsDtlLineNum_B1", "rwsDtlLineNum_B1", "B1", null, TYPE_HANKAKUEISU, "3", null},
	{"rtlWhCd_B1", "rtlWhCd_B1", "B1", null, TYPE_HANKAKUEISU, "20", null},
	{"rtlWhNm_B1", "rtlWhNm_B1", "B1", null, TYPE_HANKAKUEISU, "30", null},
	{"rtlWhCd_B2", "rtlWhCd_B2", "B2", null, TYPE_HANKAKUEISU, "20", null},
	{"xxDplyCtrlFlg_WH", "xxDplyCtrlFlg_WH", "WH", null, TYPE_HANKAKUEISU, "1", null},
	{"invtyOwnrCd_B1", "invtyOwnrCd_B1", "B1", null, TYPE_HANKAKUEISU, "3", null},
	{"rwsRefNum_B1", "rwsRefNum_B1", "B1", null, TYPE_HANKAKUEISU, "15", null},
	{"thirdPtyDspTpCd_B1", "thirdPtyDspTpCd_B1", "B1", null, TYPE_HANKAKUEISU, "2", null},
	{"thirdPtyDspTpCd_B2", "thirdPtyDspTpCd_B2", "B2", null, TYPE_HANKAKUEISU, "2", null},
	{"xxDplyCtrlFlg_TP", "xxDplyCtrlFlg_TP", "TP", null, TYPE_HANKAKUEISU, "1", null},
	{"imptInvBolNum_B1", "imptInvBolNum_B1", "B1", null, TYPE_HANKAKUEISU, "25", null},
	{"sceOrdTpCd_B1", "sceOrdTpCd_B1", "B1", null, TYPE_HANKAKUEISU, "2", null},
	{"sceOrdTpNm_B1", "sceOrdTpNm_B1", "B1", null, TYPE_HANKAKUEISU, "30", null},
	{"trxOrdNum_B1", "trxOrdNum_B1", "B1", null, TYPE_HANKAKUEISU, "10", null},
	{"trxLineNum_B1", "trxLineNum_B1", "B1", null, TYPE_HANKAKUEISU, "3", null},
	{"trxLineSubNum_B1", "trxLineSubNum_B1", "B1", null, TYPE_HANKAKUEISU, "3", null},
	{"dplyLineNum_B1", "dplyLineNum_B1", "B1", null, TYPE_HANKAKUEISU, "20", null},
	{"fromLocCd_B1", "fromLocCd_B1", "B1", null, TYPE_HANKAKUEISU, "20", null},
	{"dsAcctNm_B1", "dsAcctNm_B1", "B1", null, TYPE_HANKAKUEISU, "360", null},
	{"svcConfigMstrPk_B1", "svcConfigMstrPk_B1", "B1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"mdseCd_B1", "mdseCd_B1", "B1", null, TYPE_HANKAKUEISU, "16", null},
	{"flipMdseCd_B1", "flipMdseCd_B1", "B1", null, TYPE_HANKAKUEISU, "16", null},
	{"mdseDescShortTxt_B1", "mdseDescShortTxt_B1", "B1", null, TYPE_HANKAKUEISU, "250", null},
	{"rwsQty_B1", "rwsQty_B1", "B1", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"xxQty10Num_B1", "xxQty10Num_B1", "B1", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"rwsPutAwayQty_B1", "rwsPutAwayQty_B1", "B1", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"serNum_B1", "serNum_B1", "B1", null, TYPE_HANKAKUEISU, "30", null},
	{"rtlSwhCd_B1", "rtlSwhCd_B1", "B1", null, TYPE_HANKAKUEISU, "20", null},
	{"rtlSwhNm_B1", "rtlSwhNm_B1", "B1", null, TYPE_HANKAKUEISU, "30", null},
	{"xxRtlWhSrchTxt_B1", "xxRtlWhSrchTxt_B1", "B1", null, TYPE_HANKAKUEISU, "1000", null},
	{"serNumTakeFlg_B1", "serNumTakeFlg_B1", "B1", null, TYPE_HANKAKUEISU, "1", null},
	{"rcvInvtyLocCd_B1", "rcvInvtyLocCd_B1", "B1", null, TYPE_HANKAKUEISU, "20", null},
	{"openFlg_BH", "openFlg_BH", "BH", null, TYPE_HANKAKUEISU, "1", null},
	{"openFlg_BD", "openFlg_BD", "BD", null, TYPE_HANKAKUEISU, "1", null},
	{"rcvFlg_BH", "rcvFlg_BH", "BH", null, TYPE_HANKAKUEISU, "1", null},
	{"rcvFlg_BD", "rcvFlg_BD", "BD", null, TYPE_HANKAKUEISU, "1", null},
	{"dsOrdPosnNum_B1", "dsOrdPosnNum_B1", "B1", null, TYPE_HANKAKUEISU, "6", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxNum_B1
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_B1
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_BK
        {"RWS_STS_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rwsStsDescTxt_B1
        {"RWS_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rwsNum_B1
        {"XX_CRAT_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxCratDt_B1
        {"RWS_DTL_LINE_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rwsDtlLineNum_B1
        {"RTL_WH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlWhCd_B1
        {"RTL_WH_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlWhNm_B1
        {"RTL_WH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlWhCd_B2
        {"XX_DPLY_CTRL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDplyCtrlFlg_WH
        {"INVTY_OWNR_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invtyOwnrCd_B1
        {"RWS_REF_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rwsRefNum_B1
        {"THIRD_PTY_DSP_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//thirdPtyDspTpCd_B1
        {"THIRD_PTY_DSP_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//thirdPtyDspTpCd_B2
        {"XX_DPLY_CTRL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDplyCtrlFlg_TP
        {"IMPT_INV_BOL_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//imptInvBolNum_B1
        {"SCE_ORD_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//sceOrdTpCd_B1
        {"SCE_ORD_TP_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//sceOrdTpNm_B1
        {"TRX_ORD_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trxOrdNum_B1
        {"TRX_LINE_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trxLineNum_B1
        {"TRX_LINE_SUB_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trxLineSubNum_B1
        {"DPLY_LINE_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dplyLineNum_B1
        {"FROM_LOC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//fromLocCd_B1
        {"DS_ACCT_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctNm_B1
        {"SVC_CONFIG_MSTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcConfigMstrPk_B1
        {"MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd_B1
        {"FLIP_MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//flipMdseCd_B1
        {"MDSE_DESC_SHORT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseDescShortTxt_B1
        {"RWS_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rwsQty_B1
        {"XX_QTY_10_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxQty10Num_B1
        {"RWS_PUT_AWAY_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rwsPutAwayQty_B1
        {"SER_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNum_B1
        {"RTL_SWH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlSwhCd_B1
        {"RTL_SWH_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlSwhNm_B1
        {"XX_RTL_WH_SRCH_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRtlWhSrchTxt_B1
        {"SER_NUM_TAKE_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNumTakeFlg_B1
        {"RCV_INVTY_LOC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rcvInvtyLocCd_B1
        {"OPEN_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//openFlg_BH
        {"OPEN_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//openFlg_BD
        {"RCV_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rcvFlg_BH
        {"RCV_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rcvFlg_BD
        {"DS_ORD_POSN_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdPosnNum_B1
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

