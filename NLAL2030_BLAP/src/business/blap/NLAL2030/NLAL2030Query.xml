<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<sqlMap namespace="NLAL2030Query">

	<typeAlias alias="NLAL2030SMsg" type="business.blap.NLAL2030.NLAL2030SMsg" />
	<typeAlias alias="NLAL2030_ASMsg" type="business.blap.NLAL2030.NLAL2030_ASMsg" />
	<typeAlias alias="NLAL2030_BSMsg" type="business.blap.NLAL2030.NLAL2030_BSMsg" />
	<typeAlias alias="SCE_ORD_TPTMsg" type="business.db.SCE_ORD_TPTMsg" />
	<typeAlias alias="SVC_MACH_MSTR_HISTTMsg" type="business.db.SVC_MACH_MSTR_HISTTMsg"/>

	<statement id="getSavedSearchOptionList" parameterClass="Map"
		resultClass="Map">
		SELECT
		SSO.SRCH_OPT_PK
		,SSO.SRCH_OPT_NM
		FROM
		SAVE_SRCH_OPT SSO
		WHERE
		SSO.GLBL_CMPY_CD = #glblCmpyCd#
		AND SSO.SRCH_OPT_APL_ID = #srchOptAplId#
		AND SSO.SRCH_OPT_USR_ID = #srchOptUsrId#
		AND SSO.EZCANCELFLAG = '0'
		ORDER BY
		SSO.SRCH_OPT_NM
    </statement>

	<statement id="getSceOrdTpList" parameterClass="Map"
		resultMap="result.getSceOrdTpList">
		SELECT
		SCE_ORD_TP_CD
		,SCE_ORD_TP_NM
		FROM
		(
		SELECT
		DCC.DS_COND_CONST_VAL_TXT_04 AS SCE_ORD_TP_CD
		,DCC.DS_COND_CONST_VAL_TXT_05 AS SCE_ORD_TP_NM
		,DCC.DS_COND_CONST_SORT_NUM
		,ROW_NUMBER() OVER (PARTITION BY DCC.DS_COND_CONST_VAL_TXT_04,
		DCC.DS_COND_CONST_VAL_TXT_05 ORDER BY SCE.SCE_ORD_TP_SORT_NUM) AS
		ROW_NUM
		FROM
		SCE_ORD_TP SCE
		,AVAL_SCE_ORD_TP_APP_ID APP
		,DS_COND_CONST DCC
		WHERE
		APP.GLBL_CMPY_CD = #glblCmpyCd#
		AND APP.BIZ_APP_ID = #bizId#
		AND APP.EZCANCELFLAG = '0'
		AND APP.GLBL_CMPY_CD = SCE.GLBL_CMPY_CD
		AND APP.SCE_ORD_TP_CD = SCE.SCE_ORD_TP_CD
		AND SCE.INBD_OTBD_CD = #inbdOtbdCd#
		AND SCE.EZCANCELFLAG = '0'
		AND SCE.GLBL_CMPY_CD = DCC.GLBL_CMPY_CD
		AND SCE.SCE_ORD_TP_CD = DCC.DS_COND_CONST_VAL_TXT_06
		AND DCC.DS_COND_CONST_GRP_ID = #dsCondConstGrpId#
		AND DCC.EZCANCELFLAG = '0'
		)
		WHERE
		ROW_NUM = 1
		ORDER BY
		DS_COND_CONST_SORT_NUM
    </statement>

	<resultMap id="result.getSceOrdTpList" class="SCE_ORD_TPTMsg">
		<result property="sceOrdTpCd" column="SCE_ORD_TP_CD" javaType="EZDSStringItem" />
		<result property="sceOrdTpNm" column="SCE_ORD_TP_NM" javaType="EZDSStringItem" />
	</resultMap>

	<statement id="getSsmIdBySrcOrd" parameterClass="Map"
		resultClass="Map">
		SELECT
		P.PO_ORD_NUM AS PO_ORD_NUM
		,NULL AS CPO_ORD_NUM
		,NULL AS DS_ORD_CATG_CD
		,NULL AS PRCH_REQ_NUM
		,NULL AS WRK_ORD_NUM
		,NULL AS WRK_ORD_STS_CD
		,NULL AS DS_WRK_ORD_TP_CD
		,NULL AS RMNF_ORD_NUM
		FROM
		PO P
		WHERE
		P.GLBL_CMPY_CD = #glblCmpyCd#
		AND P.PO_ORD_NUM = #trxOrdNum#
		AND P.EZCANCELFLAG = '0'
		UNION
		SELECT
		NULL AS PO_ORD_NUM
		,DC.CPO_ORD_NUM AS CPO_ORD_NUM
		,DC.DS_ORD_CATG_CD AS DS_ORD_CATG_CD
		,NULL AS PRCH_REQ_NUM
		,NULL AS WRK_ORD_NUM
		,NULL AS WRK_ORD_STS_CD
		,NULL AS DS_WRK_ORD_TP_CD
		,NULL AS RMNF_ORD_NUM
		FROM
		CPO DC
		WHERE
		DC.GLBL_CMPY_CD = #glblCmpyCd#
		AND DC.CPO_ORD_NUM = #trxOrdNum#
		AND DC.EZCANCELFLAG = '0'
		UNION
		SELECT
		NULL AS PO_ORD_NUM
		,NULL AS CPO_ORD_NUM
		,NULL AS DS_ORD_CATG_CD
		,PR.PRCH_REQ_NUM AS PRCH_REQ_NUM
		,NULL AS WRK_ORD_NUM
		,NULL AS WRK_ORD_STS_CD
		,NULL AS DS_WRK_ORD_TP_CD
		,NULL AS RMNF_ORD_NUM
		FROM
		PRCH_REQ PR
		WHERE
		PR.GLBL_CMPY_CD = #glblCmpyCd#
		AND PR.PRCH_REQ_NUM = #trxOrdNum#
		AND PR.EZCANCELFLAG = '0'
		UNION
		SELECT
		NULL AS PO_ORD_NUM
		,NULL AS CPO_ORD_NUM
		,NULL AS DS_ORD_CATG_CD
		,NULL AS PRCH_REQ_NUM
		,WO.WRK_ORD_NUM AS WRK_ORD_NUM
		,WO.WRK_ORD_STS_CD AS WRK_ORD_STS_CD
		,WO.DS_WRK_ORD_TP_CD AS DS_WRK_ORD_TP_CD
		,NULL AS RMNF_ORD_NUM
		FROM
		WRK_ORD WO
		WHERE
		WO.GLBL_CMPY_CD = #glblCmpyCd#
		AND WO.WRK_ORD_NUM = #trxOrdNum#
		AND WO.EZCANCELFLAG = '0'
		UNION
		SELECT
		NULL AS PO_ORD_NUM
		,NULL AS CPO_ORD_NUM
		,NULL AS DS_ORD_CATG_CD
		,NULL AS PRCH_REQ_NUM
		,NULL AS WRK_ORD_NUM
		,NULL AS WRK_ORD_STS_CD
		,NULL AS DS_WRK_ORD_TP_CD
		,RO.RMNF_ORD_NUM AS RMNF_ORD_NUM
		FROM
		RMNF_ORD RO
		WHERE
		RO.GLBL_CMPY_CD = #glblCmpyCd#
		AND RO.RMNF_ORD_NUM = #trxOrdNum#
		AND RO.EZCANCELFLAG = '0'
    </statement>

	<statement id="getSceOrdTpListBefMarg" parameterClass="Map"
		resultClass="String">
		SELECT DISTINCT
		SCE.SCE_ORD_TP_CD
		FROM
		SCE_ORD_TP SCE
		,AVAL_SCE_ORD_TP_APP_ID APP
		,DS_COND_CONST DCC
		WHERE
		APP.GLBL_CMPY_CD = #glblCmpyCd#
		AND APP.BIZ_APP_ID = #bizId#
		AND APP.EZCANCELFLAG = '0'
		AND APP.GLBL_CMPY_CD = SCE.GLBL_CMPY_CD
		AND APP.SCE_ORD_TP_CD = SCE.SCE_ORD_TP_CD
		AND SCE.INBD_OTBD_CD = #inbdOtbdCd#
		AND SCE.EZCANCELFLAG = '0'
		AND SCE.GLBL_CMPY_CD = DCC.GLBL_CMPY_CD
		AND SCE.SCE_ORD_TP_CD = DCC.DS_COND_CONST_VAL_TXT_06
		AND DCC.DS_COND_CONST_GRP_ID = #dsCondConstGrpId#
		AND DCC.DS_COND_CONST_VAL_TXT_04 = #sceOrdTpCd#
		AND DCC.EZCANCELFLAG = '0'
    </statement>

	<statement id="getRwsSceOrdTp" parameterClass="Map"
		resultClass="String">
		SELECT DISTINCT
		RH.SCE_ORD_TP_CD
		FROM
		RWS_HDR RH
		,RWS_DTL RD
		,SCE_ORD_TP SCE
		,AVAL_SCE_ORD_TP_APP_ID APP
		WHERE
		RH.GLBL_CMPY_CD = #glblCmpyCd#
		<isNotNull property="rwsNum">
			AND RH.RWS_NUM = #rwsNum#
        </isNotNull>
		<isNotNull property="rwsRefNum">
			AND RH.RWS_REF_NUM = #rwsRefNum#
        </isNotNull>
		<isNotNull property="imptInvBolNum">
			AND RH.IMPT_INV_BOL_NUM = #imptInvBolNum#
        </isNotNull>
		<isNotNull property="fromLocCd">
			AND RH.FROM_LOC_CD = #fromLocCd#
        </isNotNull>
		<isNotNull property="sceOrdTpList">
			<iterate property="sceOrdTpList" var="sceOrdTpList[]"
				open="AND RH.SCE_ORD_TP_CD IN (" conjunction=", " close=")">
				#sceOrdTpList[]#
            </iterate>
		</isNotNull>
		AND RH.EZCANCELFLAG = '0'
		AND RH.GLBL_CMPY_CD = RD.GLBL_CMPY_CD
		AND RH.RWS_NUM = RD.RWS_NUM
		<isNotNull property="mdseCd">
			AND RD.MDSE_CD = #mdseCd#
        </isNotNull>
		<isNotNull property="rwsStsCd">
			AND RD.RWS_STS_CD = #rwsStsCd#
        </isNotNull>
		<isNotNull property="whInEtaDt_FR">
			AND RD.WH_IN_ETA_DT &gt;= #whInEtaDt_FR#
        </isNotNull>
        <isNotNull property="whInEtaDt_TO">
        AND RD.WH_IN_ETA_DT &lt;= #whInEtaDt_TO#
        </isNotNull>
        AND RD.EZCANCELFLAG     = '0'
        AND RH.GLBL_CMPY_CD     = SCE.GLBL_CMPY_CD
        AND RH.SCE_ORD_TP_CD    = SCE.SCE_ORD_TP_CD
        AND SCE.INBD_OTBD_CD    = #inbdOtbdCd#
        AND SCE.EZCANCELFLAG    = '0'
        AND SCE.GLBL_CMPY_CD    = APP.GLBL_CMPY_CD
        AND SCE.SCE_ORD_TP_CD   = APP.SCE_ORD_TP_CD
        AND APP.BIZ_APP_ID      = #bizId#
        AND APP.EZCANCELFLAG    = '0'
    </statement>

    <statement id="getDsCondConstForRwsCtrl" parameterClass="Map" resultClass="String">
        SELECT
            DS_COND_CONST_VAL_TXT_03
        FROM
            (
             SELECT
                 DS_COND_CONST_VAL_TXT_03
                ,DS_COND_CONST_SORT_NUM
                ,ROW_NUMBER() OVER (PARTITION BY DS_COND_CONST_VAL_TXT_03 ORDER BY DS_COND_CONST_SORT_NUM) AS ROW_NUM
             FROM
                 DS_COND_CONST
             WHERE
                 GLBL_CMPY_CD             = #glblCmpyCd#
             AND DS_COND_CONST_GRP_ID     = #dsCondConstGrpId#
             <isNotNull property="sceOrdTpList">
                 <iterate property="sceOrdTpList" var="sceOrdTpList[]" open="AND DS_COND_CONST_VAL_TXT_06 IN (" conjunction= ", " close=")">
                     #sceOrdTpList[]#
                 </iterate>
             </isNotNull>
             <isNotNull property="dplySceOrdTpCd">
             AND DS_COND_CONST_VAL_TXT_04 = #dplySceOrdTpCd#
             </isNotNull>
             AND EZCANCELFLAG             = '0'
            )
        WHERE
            ROW_NUM = 1
        ORDER BY
            DS_COND_CONST_SORT_NUM
    </statement>


    <statement id="searchRws" parameterClass="Map" resultClass="Map">
        WITH RWS_LST AS (
            SELECT
                RH.GLBL_CMPY_CD                        AS GLBL_CMPY_CD
               ,HS.RWS_STS_DESC_TXT                    AS RWS_HDR_STS_DESC_TXT
               ,RH.RWS_STS_CD                          AS RWS_HDR_STS_CD
               ,RH.RWS_NUM                             AS RWS_NUM
               ,RD.RWS_DTL_LINE_NUM                    AS RWS_DTL_LINE_NUM
               ,DILV.RTL_WH_CD                         AS RCV_RTL_WH_CD
               ,DILV.RTL_WH_NM                         AS RCV_RTL_WH_NM
               ,RH.RWS_REF_NUM                         AS RWS_REF_NUM
               ,RH.IMPT_INV_BOL_NUM                    AS BOL_NUM
               ,RH.SCE_ORD_TP_CD                       AS SCE_ORD_TP_CD
               ,DCC.DS_COND_CONST_VAL_TXT_05           AS SCE_ORD_TP_NM
               ,RH.FROM_LOC_CD                         AS SHIP_FROM_LOC_CD
               ,RH.SVC_CONFIG_MSTR_PK                  AS SVC_CONFIG_MSTR_PK
               ,MD.MDSE_DESC_SHORT_TXT                 AS MDSE_DESC_SHORT_TXT
               ,RD.RWS_QTY                             AS RWS_QTY
               ,RD.RWS_QTY - RD.RWS_PUT_AWAY_QTY       AS RWS_BAL_QTY
               ,RD.RWS_PUT_AWAY_QTY                    AS RWS_PUT_AWAY_QTY
               ,DILV.RTL_SWH_CD                        AS RCV_RTL_SWH_CD
               ,DILV.RTL_SWH_NM                        AS RCV_RTL_SWH_NM
               ,NVL(SRC.RWS_SCR_CANC_AVAL_FLG, #flgN#) AS RWS_SCR_CANC_AVAL_FLG
               ,RD.RWS_STS_CD                          AS RWS_DTL_STS_CD
               ,RD.SER_NUM_TAKE_FLG                    AS SER_NUM_TAKE_FLG
               ,HS.RWS_OPEN_FLG                        AS RWS_HDR_OPEN_FLG
               ,DS.RWS_OPEN_FLG                        AS RWS_DTL_OPEN_FLG
               ,HS.RCV_FLG                             AS RWS_HDR_RCV_FLG
               ,DS.RCV_FLG                             AS RWS_DTL_RCV_FLG
               ,RH.TRX_ORD_NUM                         AS TRX_ORD_NUM
               ,RD.TRX_LINE_NUM                        AS TRX_LINE_NUM
               ,CASE WHEN RH.WMS_DROP_STS_CD = '1' THEN #flgY#
                     ELSE #flgN#
                END                                    AS WMS_DROP_FLG
               ,CASE WHEN RH.PICK_UP_RQST_FLG = #flgY#   THEN #flgY#
                     WHEN RH.PICK_UP_RQST_TS IS NOT NULL THEN #flgY#
                     ELSE #flgN#
                END                                    AS SEND_RQST_FLG
               ,RD.INVTY_STK_STS_CD                    AS RWS_STK_STS_CD
               ,RD.INVTY_LOC_CD                        AS RCV_INVTY_LOC_CD
               ,RH.EZUPTIME                            AS EZUPTIME_RWSH
               ,RH.EZUPTIMEZONE                        AS EZUPTIMEZONE_RWSH
               ,RD.EZUPTIME                            AS EZUPTIME_RWSD
               ,RD.EZUPTIMEZONE                        AS EZUPTIMEZONE_RWSD
               ,PRH.EZUPTIME                           AS EZUPTIME_PORH
               ,PRH.EZUPTIMEZONE                       AS EZUPTIMEZONE_PORH
               ,PRD.EZUPTIME                           AS EZUPTIME_PORD
               ,PRD.EZUPTIMEZONE                       AS EZUPTIMEZONE_PORD
               ,ROW_NUMBER() OVER (PARTITION BY RH.GLBL_CMPY_CD ORDER BY RH.RWS_NUM, RD.RWS_DTL_LINE_NUM) AS ROW_NUM

               <isEqual property="searchRwsTp" compareValue="PO">
               ,PD.PO_ORD_NUM                          AS SRC_ORD_NUM
               ,PD.DISP_PO_DTL_LINE_NUM                AS DPLY_LINE_NUM
               ,PD.PO_ORD_DTL_LINE_NUM                 AS SRC_ORD_LINE_NUM
               ,NULL                                   AS SRC_ORD_LINE_SUB_NUM
               ,PV.PRNT_VND_NM || ' - ' || V.LOC_NM    AS SHIP_FROM_LOC_NM  <!-- QC#56542 2020/04/27 PO_VND_V to VND -->              
               ,NVL(PD.ORIG_MDSE_CD, RD.MDSE_CD)       AS MDSE_CD
               ,CASE WHEN PD.ORIG_MDSE_CD IS NOT NULL AND PD.ORIG_MDSE_CD &lt;&gt; RD.MDSE_CD THEN RD.MDSE_CD
                     ELSE NULL
                END                                    AS FLIP_MDSE_CD
               ,P.PO_ORD_NUM                           AS PO_ORD_NUM
               ,PD.PO_ORD_DTL_LINE_NUM                 AS PO_ORD_DTL_LINE_NUM
               </isEqual>

               <isEqual property="searchRwsTp" compareValue="CPO">
               ,DCRV.CPO_ORD_NUM                       AS SRC_ORD_NUM
               ,CONCAT(DCRV.DS_ORD_POSN_NUM, '.') || CONCAT(DCRV.DS_CPO_LINE_NUM, DECODE(DCRV.DS_CPO_LINE_SUB_NUM, NULL, '', '.')) || DCRV.DS_CPO_LINE_SUB_NUM
                                                       AS DPLY_LINE_NUM
               ,DCRV.DS_CPO_RTRN_LINE_NUM              AS SRC_ORD_LINE_NUM
               ,DCRV.DS_CPO_RTRN_LINE_SUB_NUM          AS SRC_ORD_LINE_SUB_NUM
               ,DAC.DS_ACCT_NM                         AS SHIP_FROM_LOC_NM
               ,RD.MDSE_CD                             AS MDSE_CD
               ,NULL                                   AS FLIP_MDSE_CD
               <!-- QC#18461-Sol#085 Add -->
               ,DCRV.DS_ORD_POSN_NUM                   AS DS_ORD_POSN_NUM
               </isEqual>

               <isEqual property="searchRwsTp" compareValue="DT">
               ,DCV.CPO_ORD_NUM                        AS SRC_ORD_NUM
               ,CONCAT(DCV.DS_ORD_POSN_NUM, '.') || CONCAT(DCV.DS_CPO_LINE_NUM, DECODE(DCV.DS_CPO_LINE_SUB_NUM, NULL, '', '.')) || DCV.DS_CPO_LINE_SUB_NUM
                                                       AS DPLY_LINE_NUM
               ,DCV.CPO_DTL_LINE_NUM                   AS SRC_ORD_LINE_NUM
               ,DCV.CPO_DTL_LINE_SUB_NUM               AS SRC_ORD_LINE_SUB_NUM
               ,RH.FROM_LOC_NM_01                      AS SHIP_FROM_LOC_NM
               ,RD.MDSE_CD                             AS MDSE_CD
               ,NULL                                   AS FLIP_MDSE_CD
               </isEqual>

               <isEqual property="searchRwsTp" compareValue="PR">
               ,RD.PRCH_REQ_NUM                        AS SRC_ORD_NUM
               ,TO_CHAR(TO_NUMBER(RD.PRCH_REQ_LINE_NUM)) || '.' || TO_CHAR(RD.PRCH_REQ_LINE_SUB_NUM)
                                                       AS DPLY_LINE_NUM
               ,RD.PRCH_REQ_LINE_NUM                   AS SRC_ORD_LINE_NUM
               ,TO_CHAR(RD.PRCH_REQ_LINE_SUB_NUM)      AS SRC_ORD_LINE_SUB_NUM
               ,RH.FROM_LOC_NM_01                      AS SHIP_FROM_LOC_NM
               ,NVL(PRQ.ORIG_RQST_MDSE_CD, RD.MDSE_CD) AS MDSE_CD
               ,CASE WHEN PRQ.ORIG_RQST_MDSE_CD IS NOT NULL AND PRQ.ORIG_RQST_MDSE_CD &lt;&gt; RD.MDSE_CD THEN RD.MDSE_CD
                     ELSE NULL
                END                                    AS FLIP_MDSE_CD
               </isEqual>

               <isEqual property="searchRwsTp" compareValue="KT">
               ,SO.TRX_HDR_NUM                         AS SRC_ORD_NUM
               ,NULL                                   AS DPLY_LINE_NUM
               ,NULL                                   AS SRC_ORD_LINE_NUM
               ,NULL                                   AS SRC_ORD_LINE_SUB_NUM
               ,RH.FROM_LOC_NM_01                      AS SHIP_FROM_LOC_NM
               ,RD.MDSE_CD                             AS MDSE_CD
               ,NULL                                   AS FLIP_MDSE_CD
               </isEqual>

               <isEqual property="searchRwsTp" compareValue="KC">
               ,SD.TRX_HDR_NUM                         AS SRC_ORD_NUM
               ,SD.TRX_LINE_NUM                        AS DPLY_LINE_NUM
               ,SD.TRX_LINE_NUM                        AS SRC_ORD_LINE_NUM
               ,SD.TRX_LINE_SUB_NUM                    AS SRC_ORD_LINE_SUB_NUM
               ,RH.FROM_LOC_NM_01                      AS SHIP_FROM_LOC_NM
               ,RD.MDSE_CD                             AS MDSE_CD
               ,NULL                                   AS FLIP_MDSE_CD
               </isEqual>

               <isEqual property="searchRwsTp" compareValue="KU">
               ,SO.TRX_HDR_NUM                         AS SRC_ORD_NUM
               ,RD.PO_RCV_TRX_LINE_NUM                 AS DPLY_LINE_NUM
               ,RD.PO_RCV_TRX_LINE_NUM                 AS SRC_ORD_LINE_NUM
               ,NULL                                   AS SRC_ORD_LINE_SUB_NUM
               ,RH.FROM_LOC_NM_01                      AS SHIP_FROM_LOC_NM
               ,RD.MDSE_CD                             AS MDSE_CD
               ,NULL                                   AS FLIP_MDSE_CD
               </isEqual>

               <isEqual property="searchRwsTp" compareValue="UC">
               ,SD.TRX_HDR_NUM                         AS SRC_ORD_NUM
               ,SD.TRX_LINE_NUM                        AS DPLY_LINE_NUM
               ,SD.TRX_LINE_NUM                        AS SRC_ORD_LINE_NUM
               ,SD.TRX_LINE_SUB_NUM                    AS SRC_ORD_LINE_SUB_NUM
               ,RH.FROM_LOC_NM_01                      AS SHIP_FROM_LOC_NM
               ,RD.MDSE_CD                             AS MDSE_CD
               ,NULL                                   AS FLIP_MDSE_CD
               </isEqual>

               <isEqual property="searchRwsTp" compareValue="RU">
               ,RO.RMNF_ORD_NUM                        AS SRC_ORD_NUM
               ,RD.TRX_LINE_NUM                        AS DPLY_LINE_NUM
               ,RD.TRX_LINE_NUM                        AS SRC_ORD_LINE_NUM
               ,NULL                                   AS SRC_ORD_LINE_SUB_NUM
               ,NULL                                   AS SHIP_FROM_LOC_NM
               ,RD.MDSE_CD                             AS MDSE_CD
               ,NULL                                   AS FLIP_MDSE_CD
               </isEqual>

               <isEqual property="searchRwsTp" compareValue="SO">
               ,SD.TRX_HDR_NUM                         AS SRC_ORD_NUM
               ,SD.TRX_LINE_NUM                        AS DPLY_LINE_NUM
               ,SD.TRX_LINE_NUM                        AS SRC_ORD_LINE_NUM
               ,SD.TRX_LINE_SUB_NUM                    AS SRC_ORD_LINE_SUB_NUM
               ,RH.FROM_LOC_NM_01                      AS SHIP_FROM_LOC_NM
               ,RD.MDSE_CD                             AS MDSE_CD
               ,NULL                                   AS FLIP_MDSE_CD
               </isEqual>

               <isNotEqual property="searchRwsTp" compareValue="PO">
               ,NULL                                   AS PO_ORD_NUM
               ,NULL                                   AS PO_ORD_DTL_LINE_NUM
               </isNotEqual>

               <!-- QC#18461-Sol#085 Add -->
               <isNotEqual property="searchRwsTp" compareValue="CPO">
               ,NULL                                   AS DS_ORD_POSN_NUM
               </isNotEqual>
               <!-- QC#18461-Sol#085 Add -->
               ,RD.THIRD_PTY_DSP_TP_CD
               ,TPDT.THIRD_PTY_DSP_TP_DESC_TXT
               ,RW.INVTY_OWNR_CD
            FROM
                RWS_HDR                RH
               ,RWS_STS                HS
               ,SCE_ORD_TP             SOT
               ,RWS_DTL                RD
               ,MDSE                   MD
               ,RWS_STS                DS
               ,DS_INVTY_LOC_V         DILV
               ,SO_RWS_SCR_CANC_CTRL   SRC
               ,PO_RCV_HDR             PRH
               ,PO_RCV_DTL             PRD
               ,AVAL_SCE_ORD_TP_APP_ID ASI
               ,DS_COND_CONST          DCC

               <isEqual property="searchRwsTp" compareValue="PO">
               ,PO                     P
               ,PO_DTL                 PD
               ,VND                    V     <!-- QC#56542 2020/04/27 PO_VND_V to VND -->
               ,PRNT_VND               PV    <!-- QC#56542 2020/04/27 PO_VND_V to VND -->
               ,VND_TP_RELN            VTR   <!-- QC#56542 2020/04/27 PO_VND_V to VND -->
               </isEqual>

               <isEqual property="searchRwsTp" compareValue="CPO">
               ,DS_CPO_RTRN_DTL        DCRV
               ,SHIP_TO_CUST           STC
               ,SELL_TO_CUST           DAC
               </isEqual>

               <isEqual property="searchRwsTp" compareValue="DT">
               ,SHPG_ORD_DTL           SD
               ,CPO_DTL                DCV
               </isEqual>

               <isEqual property="searchRwsTp" compareValue="PR">
               ,PRCH_REQ_DTL           PRQ
               </isEqual>

               <isEqual property="searchRwsTp" compareValue="KT">
               ,SHPG_ORD               SO
               </isEqual>

               <isEqual property="searchRwsTp" compareValue="KC">
               ,SHPG_ORD_DTL           SD
               ,WRK_ORD                DWO
               </isEqual>

               <isEqual property="searchRwsTp" compareValue="KU">
               ,SHPG_ORD               SO
               </isEqual>

               <isEqual property="searchRwsTp" compareValue="UC">
               ,SHPG_ORD_DTL           SD
               ,WRK_ORD                DWO
               </isEqual>

               <isEqual property="searchRwsTp" compareValue="RU">
               ,RMNF_ORD               RO
               </isEqual>

               <isEqual property="searchRwsTp" compareValue="SO">
               ,SHPG_ORD_DTL           SD
               </isEqual>

               <!-- QC#18461-Sol#085 Add -->
               ,THIRD_PTY_DSP_TP       TPDT
               ,RTL_WH                 RW
            WHERE
                RH.GLBL_CMPY_CD             = #glblCmpyCd#
            <isNotNull property="rwsNum">
            AND RH.RWS_NUM                  = #rwsNum#
            </isNotNull>
            <isNotNull property="rwsNumList">
                <iterate property="rwsNumList" var="rwsNumList[]" open="AND RH.RWS_NUM IN (" conjunction= ", " close=")">
                    #rwsNumList[]#
                </iterate>
            </isNotNull>
            <isNotNull property="sceOrdTpList">
                <iterate property="sceOrdTpList" var="sceOrdTpList[]" open="AND RH.SCE_ORD_TP_CD IN (" conjunction= ", " close=")">
                    #sceOrdTpList[]#
                </iterate>
            </isNotNull>
            <isNotNull property="rwsRefNum">
            AND RH.RWS_REF_NUM              = #rwsRefNum#
            </isNotNull>
            <isNotNull property="rwsStsCd">
            AND RH.RWS_STS_CD               = #rwsStsCd#
            </isNotNull>
            <isNotNull property="imptInvBolNum">
            AND RH.IMPT_INV_BOL_NUM         = #imptInvBolNum#
            </isNotNull>
            <isNotNull property="fromLocCd">
            AND RH.FROM_LOC_CD              = #fromLocCd#
            </isNotNull>
            <isNotNull property="svcConfigMstrPk">
            AND RH.SVC_CONFIG_MSTR_PK       = #svcConfigMstrPk#
            </isNotNull>
            AND RH.EZCANCELFLAG             = '0'
            AND RH.GLBL_CMPY_CD             = HS.GLBL_CMPY_CD
            AND RH.RWS_STS_CD               = HS.RWS_STS_CD
            AND HS.EZCANCELFLAG             = '0'
            AND RH.GLBL_CMPY_CD             = SOT.GLBL_CMPY_CD
            AND RH.SCE_ORD_TP_CD            = SOT.SCE_ORD_TP_CD
            AND SOT.INBD_OTBD_CD            = #inbdOtbdCd#
            AND SOT.EZCANCELFLAG            = '0'
            AND RH.GLBL_CMPY_CD             = RD.GLBL_CMPY_CD
            AND RH.RWS_NUM                  = RD.RWS_NUM
            AND RD.EZCANCELFLAG             = '0'
            AND RD.GLBL_CMPY_CD             = MD.GLBL_CMPY_CD
            AND RD.MDSE_CD                  = MD.MDSE_CD
            AND MD.EZCANCELFLAG             = '0'
            AND RD.GLBL_CMPY_CD             = DS.GLBL_CMPY_CD
            AND RD.RWS_STS_CD               = DS.RWS_STS_CD
            AND DS.EZCANCELFLAG             = '0'
            AND RD.GLBL_CMPY_CD             = DILV.GLBL_CMPY_CD
            AND RD.INVTY_LOC_CD             = DILV.INVTY_LOC_CD
            AND DILV.EZCANCELFLAG           = '0'
            AND RH.GLBL_CMPY_CD             = SRC.GLBL_CMPY_CD(+)
            AND RH.SCE_ORD_TP_CD            = SRC.SCE_ORD_TP_CD(+)
            AND DILV.WH_SYS_TP_CD           = SRC.WH_SYS_TP_CD(+)
            AND SRC.EZCANCELFLAG(+)         = '0'
            AND RH.GLBL_CMPY_CD             = PRH.GLBL_CMPY_CD(+)
            AND RH.TRX_ORD_NUM              = PRH.PO_RCV_NUM(+)
            AND PRH.EZCANCELFLAG(+)         = '0'
            AND PRH.GLBL_CMPY_CD            = PRD.GLBL_CMPY_CD(+)
            AND PRH.PO_RCV_NUM              = PRD.PO_RCV_NUM(+)
            AND RD.TRX_LINE_NUM             = PRD.PO_RCV_LINE_NUM(+)
            AND PRD.EZCANCELFLAG(+)         = '0'
            AND RH.GLBL_CMPY_CD             = ASI.GLBL_CMPY_CD
            AND RH.SCE_ORD_TP_CD            = ASI.SCE_ORD_TP_CD
            AND ASI.BIZ_APP_ID              = #bizId#
            AND ASI.EZCANCELFLAG            = '0'
            AND RH.GLBL_CMPY_CD             = DCC.GLBL_CMPY_CD
            AND RH.SCE_ORD_TP_CD            = DCC.DS_COND_CONST_VAL_TXT_06
            AND DCC.DS_COND_CONST_GRP_ID    = #NLAL2030_RWS_CTRL#
            AND DCC.EZCANCELFLAG            = '0'
            <!-- QC#18461-Sol#085 Add -->
            AND RD.GLBL_CMPY_CD             = TPDT.GLBL_CMPY_CD (+)
            AND RD.THIRD_PTY_DSP_TP_CD      = TPDT.THIRD_PTY_DSP_TP_CD (+)
            AND TPDT.EZCANCELFLAG (+)       = '0'
            AND RD.GLBL_CMPY_CD             = RW.GLBL_CMPY_CD (+)
            AND RD.RTL_WH_CD                = RW.RTL_WH_CD (+)
            AND RW.EZCANCELFLAG (+)         = '0'


            <isEqual property="searchRwsTp" compareValue="PO">
            AND RH.GLBL_CMPY_CD             = P.GLBL_CMPY_CD
            AND RH.PO_RCV_TRX_HDR_NUM       = P.PO_ORD_NUM
            <isNotNull property="trxOrdNum">
            AND P.PO_ORD_NUM                = #trxOrdNum#
            </isNotNull>
            <isNotNull property="trxOrdNumList">
                <iterate property="trxOrdNumList" var="trxOrdNumList[]" open="AND P.PO_ORD_NUM IN (" conjunction= ", " close=")">
                    #trxOrdNumList[]#
                </iterate>
            </isNotNull>
            AND P.EZCANCELFLAG              = '0'
            AND P.GLBL_CMPY_CD              = V.GLBL_CMPY_CD
            AND P.VND_CD                    = V.VND_CD
            AND V.EZCANCELFLAG              = '0'
            <!-- QC#56542 2020/04/27 PO_VND_V to VND -->
            AND PV.EZCANCELFLAG             = '0'
            AND V.GLBL_CMPY_CD              = PV.GLBL_CMPY_CD
            AND V.PRNT_VND_PK               = PV.PRNT_VND_PK
            AND V.VND_CD                    = VTR.VND_CD
            AND V.GLBL_CMPY_CD              = VTR.GLBL_CMPY_CD
            AND VTR.VND_TP_CD               = '01'        
            AND VTR.EZCANCELFLAG            = '0'
            <!-- QC#56542 2020/04/27 PO_VND_V to VND -->
            AND P.GLBL_CMPY_CD              = PD.GLBL_CMPY_CD
            AND P.PO_ORD_NUM                = PD.PO_ORD_NUM
            AND RD.PO_RCV_TRX_LINE_NUM      = PD.PO_ORD_DTL_LINE_NUM
            AND PD.EZCANCELFLAG             = '0'
            AND DCC.DS_COND_CONST_VAL_TXT_03 = #dplyTpPo#
            <isNotNull property="mdseCd">
            AND (   EXISTS (SELECT
                                1
                            FROM
                                PO_DTL    PD2
                               ,PO_DTL    PD3
                            WHERE
                                PD2.GLBL_CMPY_CD        = P.GLBL_CMPY_CD
                            AND PD2.PO_ORD_NUM          = P.PO_ORD_NUM
                            AND PD2.EZCANCELFLAG        = '0'
                            AND PD2.GLBL_CMPY_CD        = PD3.GLBL_CMPY_CD
                            AND PD2.PO_ORD_NUM          = PD3.PO_ORD_NUM
                            AND PD2.PO_ORD_DTL_LINE_NUM = PD3.PO_ORD_DTL_LINE_NUM
                            AND PD2.MDSE_CD      &lt;&gt; PD3.ORIG_MDSE_CD
                            AND PD3.ORIG_MDSE_CD IS NOT NULL
                            AND PD3.ORIG_MDSE_CD        = #mdseCd#
                            AND PD3.EZCANCELFLAG        = '0'
                           )
                 OR EXISTS (SELECT
                                1
                            FROM
                                PO_DTL    PD2
                               ,PO_DTL    PD3
                            WHERE
                                PD2.GLBL_CMPY_CD        = P.GLBL_CMPY_CD
                            AND PD2.PO_ORD_NUM          = P.PO_ORD_NUM
                            AND PD2.MDSE_CD             = #mdseCd#
                            AND PD2.EZCANCELFLAG        = '0'
                            AND PD2.GLBL_CMPY_CD        = PD3.GLBL_CMPY_CD
                            AND PD2.PO_ORD_NUM          = PD3.PO_ORD_NUM
                            AND PD2.PO_ORD_DTL_LINE_NUM = PD3.PO_ORD_DTL_LINE_NUM
                            AND (   PD2.MDSE_CD = PD3.ORIG_MDSE_CD
                                 OR PD3.ORIG_MDSE_CD IS NULL
                                )
                            AND PD3.EZCANCELFLAG       = '0'
                           )
                )
            </isNotNull>
            <isNotNull property="flipMdseCd">
            AND EXISTS (SELECT
                            1
                        FROM
                            PO_DTL    PD2
                           ,PO_DTL    PD3
                        WHERE
                            PD2.GLBL_CMPY_CD        = P.GLBL_CMPY_CD
                        AND PD2.PO_ORD_NUM          = P.PO_ORD_NUM
                        AND PD2.EZCANCELFLAG        = '0'
                        AND PD2.GLBL_CMPY_CD        = PD3.GLBL_CMPY_CD
                        AND PD2.PO_ORD_NUM          = PD3.PO_ORD_NUM
                        AND PD2.PO_ORD_DTL_LINE_NUM = PD3.PO_ORD_DTL_LINE_NUM
                        AND PD3.ORIG_MDSE_CD IS NOT NULL
                        AND PD2.MDSE_CD      &lt;&gt; PD3.ORIG_MDSE_CD
                        AND PD2.MDSE_CD             = #flipMdseCd#
                        AND PD3.EZCANCELFLAG       = '0'
                       )
            </isNotNull>
            </isEqual>

            <isEqual property="searchRwsTp" compareValue="CPO">
            AND RH.GLBL_CMPY_CD             = DCRV.GLBL_CMPY_CD
            AND RH.TRX_ORD_NUM              = DCRV.CPO_ORD_NUM
            AND RD.TRX_LINE_NUM             = DCRV.DS_CPO_RTRN_LINE_NUM
            AND RD.TRX_LINE_SUB_NUM         = DCRV.DS_CPO_RTRN_LINE_SUB_NUM
            <isNotNull property="trxOrdNum">
            AND DCRV.CPO_ORD_NUM            = #trxOrdNum#
            </isNotNull>
            <isNotNull property="trxOrdNumList">
                <iterate property="trxOrdNumList" var="trxOrdNumList[]" open="AND DCRV.CPO_ORD_NUM IN (" conjunction= ", " close=")">
                    #trxOrdNumList[]#
                </iterate>
            </isNotNull>
            AND DCRV.EZCANCELFLAG           = '0'
            AND DCRV.GLBL_CMPY_CD           = STC.GLBL_CMPY_CD
            AND DCRV.SHIP_TO_CUST_CD        = STC.SHIP_TO_CUST_CD
            AND STC.EZCANCELFLAG            = '0'
            AND STC.GLBL_CMPY_CD            = DAC.GLBL_CMPY_CD
            AND STC.SELL_TO_CUST_CD         = DAC.SELL_TO_CUST_CD
            AND DAC.EZCANCELFLAG            = '0'
            AND DCC.DS_COND_CONST_VAL_TXT_03 = #dplyTpCpo#
            </isEqual>

            <isEqual property="searchRwsTp" compareValue="DT">
            AND RH.GLBL_CMPY_CD             = SD.GLBL_CMPY_CD
            AND RH.PO_RCV_TRX_HDR_NUM       = SD.SO_NUM
            AND RD.PO_RCV_TRX_LINE_NUM      = SD.SO_SLP_NUM
            AND SD.EZCANCELFLAG             = '0'
            AND SD.GLBL_CMPY_CD             = DCV.GLBL_CMPY_CD
            AND SD.TRX_HDR_NUM              = DCV.CPO_ORD_NUM
            AND SD.TRX_LINE_NUM             = DCV.CPO_DTL_LINE_NUM
            AND SD.TRX_LINE_SUB_NUM         = DCV.CPO_DTL_LINE_SUB_NUM
            <isNotNull property="trxOrdNum">
            AND DCV.CPO_ORD_NUM             = #trxOrdNum#
            </isNotNull>
            <isNotNull property="trxOrdNumList">
                <iterate property="trxOrdNumList" var="trxOrdNumList[]" open="AND DCV.CPO_ORD_NUM IN (" conjunction= ", " close=")">
                    #trxOrdNumList[]#
                </iterate>
            </isNotNull>
            AND DCV.EZCANCELFLAG            = '0'
            AND DCC.DS_COND_CONST_VAL_TXT_03 = #dplyTpDt#
            </isEqual>

            <isEqual property="searchRwsTp" compareValue="PR">
            <isNotNull property="trxOrdNum">
            AND RD.PRCH_REQ_NUM            = #trxOrdNum#
            </isNotNull>
            <isNotNull property="trxOrdNumList">
                <iterate property="trxOrdNumList" var="trxOrdNumList[]" open="AND RD.PRCH_REQ_NUM IN (" conjunction= ", " close=")">
                    #trxOrdNumList[]#
                </iterate>
            </isNotNull>
            AND RD.GLBL_CMPY_CD             = PRQ.GLBL_CMPY_CD
            AND RD.PRCH_REQ_NUM             = PRQ.PRCH_REQ_NUM
            AND RD.PRCH_REQ_LINE_NUM        = PRQ.PRCH_REQ_LINE_NUM
            AND RD.PRCH_REQ_LINE_SUB_NUM    = PRQ.PRCH_REQ_LINE_SUB_NUM
            AND DCC.DS_COND_CONST_VAL_TXT_03 = #dplyTpPr#
            AND PRQ.EZCANCELFLAG            = '0'
            <isNotNull property="mdseCd">
            AND (   EXISTS (SELECT
                                1
                            FROM
                                PRCH_REQ_DTL PRQ2
                            WHERE
                                PRQ2.GLBL_CMPY_CD      = PRQ.GLBL_CMPY_CD
                            AND PRQ2.PRCH_REQ_NUM      = PRQ.PRCH_REQ_NUM
                            AND PRQ2.ORIG_RQST_MDSE_CD = #mdseCd#
                            AND PRQ2.ORIG_RQST_MDSE_CD IS NOT NULL
                            AND PRQ2.ORIG_RQST_MDSE_CD &lt;&gt; PRQ2.MDSE_CD
                            AND PRQ2.EZCANCELFLAG      = '0'
                           )
                 OR EXISTS (SELECT
                                1
                            FROM
                                PRCH_REQ_DTL PRQ2
                            WHERE
                                PRQ2.GLBL_CMPY_CD = PRQ.GLBL_CMPY_CD
                            AND PRQ2.PRCH_REQ_NUM = PRQ.PRCH_REQ_NUM
                            AND PRQ2.MDSE_CD      = #mdseCd#
                            AND (   PRQ2.MDSE_CD = PRQ2.ORIG_RQST_MDSE_CD
                                 OR PRQ2.ORIG_RQST_MDSE_CD IS NULL
                                )
                            AND PRQ2.EZCANCELFLAG = '0'
                           )
                )
            </isNotNull>
            <isNotNull property="flipMdseCd">
            AND EXISTS (SELECT
                            1
                        FROM
                            PRCH_REQ_DTL PRQ2
                        WHERE
                            PRQ2.GLBL_CMPY_CD = PRQ.GLBL_CMPY_CD
                        AND PRQ2.PRCH_REQ_NUM = PRQ.PRCH_REQ_NUM
                        AND PRQ2.MDSE_CD      = #flipMdseCd#
                        AND PRQ2.ORIG_RQST_MDSE_CD IS NOT NULL
                        AND PRQ2.ORIG_RQST_MDSE_CD &lt;&gt; PRQ2.MDSE_CD
                        AND PRQ2.EZCANCELFLAG = '0'
                       )
            </isNotNull>
            </isEqual>

            <isEqual property="searchRwsTp" compareValue="KT">
            AND RH.GLBL_CMPY_CD             = SO.GLBL_CMPY_CD
            AND RH.PO_RCV_TRX_HDR_NUM       = SO.SO_NUM
            <isNotNull property="trxOrdNum">
            AND SO.TRX_HDR_NUM              = #trxOrdNum#
            </isNotNull>
            <isNotNull property="trxOrdNumList">
                <iterate property="trxOrdNumList" var="trxOrdNumList[]" open="AND SO.TRX_HDR_NUM IN (" conjunction= ", " close=")">
                    #trxOrdNumList[]#
                </iterate>
            </isNotNull>
            AND SO.EZCANCELFLAG             = '0'
            AND RH.SCE_ORD_TP_CD     &lt;&gt; #sceOrdTpCdKc#
            AND DCC.DS_COND_CONST_VAL_TXT_03 = #dplyTpKt#
            </isEqual>

            <isEqual property="searchRwsTp" compareValue="KC">
            AND RH.GLBL_CMPY_CD              = SD.GLBL_CMPY_CD
            AND RH.PO_RCV_TRX_HDR_NUM        = SD.SO_NUM
            AND RD.PO_RCV_TRX_LINE_NUM       = SD.SO_SLP_NUM
            <isNotNull property="trxOrdNum">
            AND SD.TRX_HDR_NUM               = #trxOrdNum#
            </isNotNull>
            <isNotNull property="trxOrdNumList">
                <iterate property="trxOrdNumList" var="trxOrdNumList[]" open="AND SD.TRX_HDR_NUM IN (" conjunction= ", " close=")">
                    #trxOrdNumList[]#
                </iterate>
            </isNotNull>
            AND SD.EZCANCELFLAG              = '0'
            AND SD.GLBL_CMPY_CD              = DWO.GLBL_CMPY_CD
            AND SD.TRX_HDR_NUM               = DWO.WRK_ORD_NUM
            AND DWO.DS_WRK_ORD_TP_CD         = #dsWrkOrdTpCdKit#
            AND DWO.EZCANCELFLAG             = '0'
            AND RH.SCE_ORD_TP_CD             = #sceOrdTpCdKc#
            AND DCC.DS_COND_CONST_VAL_TXT_03 = #dplyTpKc#
            </isEqual>

            <isEqual property="searchRwsTp" compareValue="KU">
            AND RH.GLBL_CMPY_CD             = SO.GLBL_CMPY_CD
            AND RH.PO_RCV_TRX_HDR_NUM       = SO.SO_NUM
            <isNotNull property="trxOrdNum">
            AND SO.TRX_HDR_NUM              = #trxOrdNum#
            </isNotNull>
            <isNotNull property="trxOrdNumList">
                <iterate property="trxOrdNumList" var="trxOrdNumList[]" open="AND SO.TRX_HDR_NUM IN (" conjunction= ", " close=")">
                    #trxOrdNumList[]#
                </iterate>
            </isNotNull>
            AND SO.EZCANCELFLAG             = '0'
            AND RH.SCE_ORD_TP_CD     &lt;&gt; #sceOrdTpCdKc#
            AND DCC.DS_COND_CONST_VAL_TXT_03 = #dplyTpKu#
            </isEqual>

            <isEqual property="searchRwsTp" compareValue="UC">
            AND RH.GLBL_CMPY_CD              = SD.GLBL_CMPY_CD
            AND RH.PO_RCV_TRX_HDR_NUM        = SD.SO_NUM
            AND RD.PO_RCV_TRX_LINE_NUM       = SD.SO_SLP_NUM
            <isNotNull property="trxOrdNum">
            AND SD.TRX_HDR_NUM               = #trxOrdNum#
            </isNotNull>
            <isNotNull property="trxOrdNumList">
                <iterate property="trxOrdNumList" var="trxOrdNumList[]" open="AND SD.TRX_HDR_NUM IN (" conjunction= ", " close=")">
                    #trxOrdNumList[]#
                </iterate>
            </isNotNull>
            AND SD.EZCANCELFLAG              = '0'
            AND SD.GLBL_CMPY_CD              = DWO.GLBL_CMPY_CD
            AND SD.TRX_HDR_NUM               = DWO.WRK_ORD_NUM
            AND DWO.DS_WRK_ORD_TP_CD         = #dsWrkOrdTpCdUnKit#
            AND DWO.EZCANCELFLAG             = '0'
            AND RH.SCE_ORD_TP_CD             = #sceOrdTpCdKc#
            AND DCC.DS_COND_CONST_VAL_TXT_03 = #dplyTpUc#
            </isEqual>

            <isEqual property="searchRwsTp" compareValue="RU">
            AND RH.GLBL_CMPY_CD             = RO.GLBL_CMPY_CD
            AND RH.PO_RCV_TRX_HDR_NUM       = RO.RMNF_ORD_NUM
            <isNotNull property="trxOrdNum">
            AND RO.RMNF_ORD_NUM             = #trxOrdNum#
            </isNotNull>
            <isNotNull property="trxOrdNumList">
                <iterate property="trxOrdNumList" var="trxOrdNumList[]" open="AND RO.RMNF_ORD_NUM IN (" conjunction= ", " close=")">
                    #trxOrdNumList[]#
                </iterate>
            </isNotNull>
            AND RO.EZCANCELFLAG             = '0'
            AND DCC.DS_COND_CONST_VAL_TXT_03 = #dplyTpRu#
            </isEqual>

            <isEqual property="searchRwsTp" compareValue="SO">
            AND RH.GLBL_CMPY_CD             = SD.GLBL_CMPY_CD
            AND RH.PO_RCV_TRX_HDR_NUM       = SD.SO_NUM
            AND RD.PO_RCV_TRX_LINE_NUM      = SD.SO_SLP_NUM
            <isNotNull property="trxOrdNum">
            AND SD.TRX_HDR_NUM              = #trxOrdNum#
            </isNotNull>
            <isNotNull property="trxOrdNumList">
                <iterate property="trxOrdNumList" var="trxOrdNumList[]" open="AND SD.TRX_HDR_NUM IN (" conjunction= ", " close=")">
                    #trxOrdNumList[]#
                </iterate>
            </isNotNull>
            AND SD.EZCANCELFLAG             = '0'
            AND RH.SCE_ORD_TP_CD     &lt;&gt; #sceOrdTpCdKc#
            </isEqual>

            <isEqual property="dtlSrchFlg" compareValue="Y">
            AND EXISTS (
                        SELECT
                            1
                        FROM
                            RWS_HDR      RH2
                           ,RWS_DTL      RD2
                           <isNotNull property="whCd">
                           ,RWS_STS      STS
                           ,RWS_PUT_AWAY AWY
                           ,RTL_SWH      RSW
                           </isNotNull>
                        WHERE
                            RH2.GLBL_CMPY_CD     = RH.GLBL_CMPY_CD
                        AND RH2.RWS_NUM          = RH.RWS_NUM
                        <isNotEqual property="searchRwsTp" compareValue="CPO">
                        <isNotNull property="carrCd">
                        AND RH2.RWS_CARR_CD      = #carrCd#
                        </isNotNull>
                        </isNotEqual>
                        AND RH2.EZCANCELFLAG     = '0'
                        AND RH2.GLBL_CMPY_CD     = RD2.GLBL_CMPY_CD
                        AND RH2.RWS_NUM          = RD2.RWS_NUM
                        <isNotNull property="mdseCd">
                            <isNotNull property="flipMdseCd">
                            AND (   RD2.MDSE_CD  = #mdseCd#
                                 OR RD2.MDSE_CD  = #flipMdseCd#
                                )
                            </isNotNull>
                            <isNull property="flipMdseCd">
                            AND RD2.MDSE_CD      = #mdseCd#
                            </isNull>
                        </isNotNull>
                        <isNull property="mdseCd">
                            <isNotNull property="flipMdseCd">
                            AND RD2.MDSE_CD      = #flipMdseCd#
                            </isNotNull>
                        </isNull>
                        <isNotNull property="whInEtaDt_FR">
                        AND RD2.WH_IN_ETA_DT &gt;= #whInEtaDt_FR#
                        </isNotNull>
                        <isNotNull property="whInEtaDt_TO">
                        AND RD2.WH_IN_ETA_DT &lt;= #whInEtaDt_TO#
                        </isNotNull>
                        <isNotNull property="rtlWhCd">
                        AND RD2.RTL_WH_CD       = #rtlWhCd#
                        </isNotNull>
                        <isNotNull property="rtlSwhCd">
                        AND RD2.RTL_SWH_CD      = #rtlSwhCd#
                        </isNotNull>
                        AND RD2.EZCANCELFLAG     = '0'
                        <isEqual property="searchRwsTp" compareValue="CPO">
                            <isNotNull property="carrCd">
                                AND RD2.CARR_CD          = #carrCd#
                            </isNotNull>
                        </isEqual>
                        <isNotNull property="whCd">
                        AND RD2.GLBL_CMPY_CD     = STS.GLBL_CMPY_CD
                        AND RD2.RWS_STS_CD       = STS.RWS_STS_CD
                        AND STS.RCV_FLG          = #flgY#
                        AND STS.EZCANCELFLAG     = '0'
                        AND RD2.GLBL_CMPY_CD     = AWY.GLBL_CMPY_CD
                        AND RD2.RWS_NUM          = AWY.RWS_NUM
                        AND RD2.RWS_DTL_LINE_NUM = AWY.RWS_DTL_LINE_NUM
                        AND AWY.EZCANCELFLAG     = '0'
                        AND AWY.GLBL_CMPY_CD     = RSW.GLBL_CMPY_CD
                        AND AWY.WH_CD            = RSW.INVTY_LOC_CD
                        AND RSW.EZCANCELFLAG     = '0'
                        AND (   RSW.RTL_WH_CD = #whCd#
                             OR EXISTS (SELECT
                                            1
                                        FROM
                                            INVTY_ORD_DTL IOD
                                        WHERE
                                            AWY.GLBL_CMPY_CD     = IOD.GLBL_CMPY_CD
                                        AND AWY.RWS_NUM          = IOD.TRX_REF_NUM
                                        AND AWY.RWS_DTL_LINE_NUM = IOD.TRX_REF_LINE_NUM
                                        AND IOD.TO_RTL_WH_CD     = #whCd#
                                        AND IOD.EZCANCELFLAG     = '0'
                                        AND ROWNUM               = 1
                                       )
                            )
                        </isNotNull>
                       )
            </isEqual>

            <isNotNull property="serNum">
            AND (
                   EXISTS (
                           SELECT
                               1
                           FROM
                               RWS_SER RS
                           WHERE
                               RS.GLBL_CMPY_CD = RH.GLBL_CMPY_CD
                           AND RS.RWS_NUM      = RH.RWS_NUM
                           AND RS.SER_NUM      = #serNum#
                           AND RS.EZCANCELFLAG = '0'
                           AND NOT EXISTS (SELECT
                                               1
                                           FROM
                                               RWS_PUT_AWAY_SER PA
                                           WHERE
                                               PA.GLBL_CMPY_CD = RS.GLBL_CMPY_CD
                                           AND PA.RWS_NUM      = RS.RWS_NUM
                                           AND PA.RWS_LINE_NUM = RS.RWS_LINE_NUM
                                           AND PA.SER_NUM      = RS.SER_NUM
                                           AND PA.EZCANCELFLAG = '0'
                                          )
                          )
                OR EXISTS (
                           SELECT
                               1
                           FROM
                               RWS_PUT_AWAY_SER PS
                           WHERE
                               PS.GLBL_CMPY_CD = RH.GLBL_CMPY_CD
                           AND PS.RWS_NUM      = RH.RWS_NUM
                           AND PS.SER_NUM      = #serNum#
                           AND PS.EZCANCELFLAG = '0'
                          )
                )
            </isNotNull>
        )
        , ALT_PUT_AWAY_V AS (
            SELECT
                A.RWS_NUM
               ,A.RWS_DTL_LINE_NUM
               ,SUM(NVL(IOD.ORD_QTY, 0)) AS PUT_AWAY_QTY
            FROM
                RWS_LST          RV
               ,RWS_PUT_AWAY     A
               ,INVTY_ORD_DTL    IOD
            WHERE
                A.GLBL_CMPY_CD          = RV.GLBL_CMPY_CD
            AND A.RWS_NUM               = RV.RWS_NUM
            AND A.RWS_DTL_LINE_NUM      = RV.RWS_DTL_LINE_NUM
            AND A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = IOD.GLBL_CMPY_CD(+)
            AND A.RWS_NUM               = IOD.TRX_REF_NUM(+)
            AND A.RWS_DTL_LINE_NUM      = IOD.TRX_REF_LINE_NUM(+)
            AND A.INVTY_STK_STS_CD      = IOD.STK_STS_CD(+)
            AND IOD.EZCANCELFLAG(+)     = '0'
            GROUP BY
                A.RWS_NUM
               ,A.RWS_DTL_LINE_NUM
        )
        , ACTL_PUT_AWAY_V AS (
            SELECT
                A.RWS_NUM
               ,A.RWS_DTL_LINE_NUM
               ,IOD.TO_RTL_WH_CD
               ,RWH.RTL_WH_NM
               ,IOD.TO_RTL_SWH_CD
               ,IOD.TO_INVTY_LOC_CD
               ,SUM(IOD.ORD_QTY) AS PUT_AWAY_QTY
            FROM
                RWS_LST          RV
               ,RWS_PUT_AWAY     A
               ,INVTY_ORD_DTL    IOD
               ,RTL_WH           RWH
            WHERE
                A.GLBL_CMPY_CD          = RV.GLBL_CMPY_CD
            AND A.RWS_NUM               = RV.RWS_NUM
            AND A.RWS_DTL_LINE_NUM      = RV.RWS_DTL_LINE_NUM
            AND A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = IOD.GLBL_CMPY_CD
            AND A.RWS_NUM               = IOD.TRX_REF_NUM
            AND A.RWS_DTL_LINE_NUM      = IOD.TRX_REF_LINE_NUM
            AND A.INVTY_STK_STS_CD      = IOD.STK_STS_CD
            AND IOD.EZCANCELFLAG        = '0'
            AND IOD.GLBL_CMPY_CD        = RWH.GLBL_CMPY_CD
            AND IOD.TO_RTL_WH_CD        = RWH.RTL_WH_CD
            AND RWH.EZCANCELFLAG        = '0'
            GROUP BY
                A.RWS_NUM
               ,A.RWS_DTL_LINE_NUM
               ,IOD.TO_RTL_WH_CD
               ,RWH.RTL_WH_NM
               ,IOD.TO_RTL_SWH_CD
               ,IOD.TO_INVTY_LOC_CD
        )
        , PUT_AWAY_V AS (
            SELECT
                RWS_NUM
               ,RWS_DTL_LINE_NUM
               ,SUBSTR(LTRIM(SYS_CONNECT_BY_PATH(RTL_WH_NM, ', '),', '), 1, 1000) AS RTL_WH_NM
            FROM
                (
                 SELECT
                     RWS_NUM
                    ,RWS_DTL_LINE_NUM
                    ,RTL_WH_CD
                    ,REPLACE(RTL_WH_NM, ',', ' ') AS RTL_WH_NM
                    ,ROW_NUMBER() OVER (PARTITION BY RWS_NUM, RWS_DTL_LINE_NUM ORDER BY PUT_AWAY_SORT_NUM, RTL_WH_CD) AS NUM
                    ,COUNT(*) OVER (PARTITION BY RWS_NUM, RWS_DTL_LINE_NUM) AS CNT
                 FROM
                     (
                      SELECT
                          AP.RWS_NUM
                         ,AP.RWS_DTL_LINE_NUM
                         ,AP.TO_RTL_WH_CD  AS RTL_WH_CD
                         ,AP.RTL_WH_NM
                         ,AP.PUT_AWAY_QTY
                         ,2                AS PUT_AWAY_SORT_NUM
                      FROM
                          RWS_LST         RV
                         ,ACTL_PUT_AWAY_V AP
                      WHERE
                          RV.RWS_NUM          = AP.RWS_NUM
                      AND RV.RWS_DTL_LINE_NUM = AP.RWS_DTL_LINE_NUM
                      UNION
                      SELECT
                          RV.RWS_NUM
                         ,RV.RWS_DTL_LINE_NUM
                         ,RV.RCV_RTL_WH_CD                      AS RTL_WH_CD
                         ,RV.RCV_RTL_WH_NM                      AS RTL_WH_NM
                         ,RV.RWS_PUT_AWAY_QTY - AP.PUT_AWAY_QTY AS PUT_AWAY_QTY
                         ,1                                     AS PUT_AWAY_SORT_NUM
                      FROM
                          RWS_LST        RV
                         ,ALT_PUT_AWAY_V AP
                      WHERE
                          RV.RWS_NUM          = AP.RWS_NUM
                      AND RV.RWS_DTL_LINE_NUM = AP.RWS_DTL_LINE_NUM
                      AND RV.RWS_PUT_AWAY_QTY &gt; AP.PUT_AWAY_QTY
                     )
                )
            WHERE
                LEVEL = CNT
                START WITH NUM = 1
                CONNECT BY PRIOR RWS_NUM          = RWS_NUM
                       AND PRIOR RWS_DTL_LINE_NUM = RWS_DTL_LINE_NUM
                       AND PRIOR NUM              = NUM - 1
        )
        , SCHD_SER AS (
            SELECT
                RL.GLBL_CMPY_CD
               ,RL.RWS_NUM
               ,RL.RWS_DTL_LINE_NUM
               ,COUNT(*)        AS SER_CNT
               ,MAX(RS.SER_NUM) AS SER_NUM
            FROM
                RWS_LST RL
               ,RWS_SER RS
            WHERE
                RS.GLBL_CMPY_CD = RL.GLBL_CMPY_CD
            AND RS.RWS_NUM      = RL.RWS_NUM
            AND RS.RWS_LINE_NUM = RL.RWS_DTL_LINE_NUM
            AND RS.EZCANCELFLAG = '0'
            AND NOT EXISTS (SELECT
                                1
                            FROM
                                RWS_PUT_AWAY_SER PA
                            WHERE
                                PA.GLBL_CMPY_CD = RS.GLBL_CMPY_CD
                            AND PA.RWS_NUM      = RS.RWS_NUM
                            AND PA.RWS_LINE_NUM = RS.RWS_LINE_NUM
                            AND PA.SER_NUM      = RS.SER_NUM
                            AND PA.EZCANCELFLAG = '0'
                           )
            GROUP BY
                RL.GLBL_CMPY_CD
               ,RL.RWS_NUM
               ,RL.RWS_DTL_LINE_NUM
        )
        , ACTL_SER AS (
            SELECT
                RL.GLBL_CMPY_CD
               ,RL.RWS_NUM
               ,RL.RWS_DTL_LINE_NUM
               ,COUNT(*)        AS SER_CNT
               ,MAX(RS.SER_NUM) AS SER_NUM
            FROM
                RWS_LST          RL
               ,RWS_PUT_AWAY_SER RS
            WHERE
                RS.GLBL_CMPY_CD = RL.GLBL_CMPY_CD
            AND RS.RWS_NUM      = RL.RWS_NUM
            AND RS.RWS_LINE_NUM = RL.RWS_DTL_LINE_NUM
            AND RS.EZCANCELFLAG = '0'
            GROUP BY
                RL.GLBL_CMPY_CD
               ,RL.RWS_NUM
               ,RL.RWS_DTL_LINE_NUM
        )
        <!-- START 2023/02/22 TZ.Win [QC#61161, ADD] -->
        , ASN_INFO AS (
            SELECT
                RL.GLBL_CMPY_CD
                ,RL.RWS_NUM
                ,SUBSTR(MIN(EAHW.EZINTIME), 1, 8) AS ASN_CRAT_DT
            FROM
                RWS_LST          RL
                ,EDI_ASN_HDR_WRK  EAHW
            WHERE
                EAHW.GLBL_CMPY_CD = RL.GLBL_CMPY_CD
            AND EAHW.RWS_NUM      = RL.RWS_NUM
            AND EAHW.EZCANCELFLAG = '0'
            GROUP BY
                RL.GLBL_CMPY_CD
                ,RL.RWS_NUM
        )
        <!-- END 2023/02/22 TZ.Win [QC#61161, ADD] -->
        SELECT
            RWS.GLBL_CMPY_CD
           ,RWS.RWS_HDR_STS_DESC_TXT
           ,RWS.RWS_HDR_STS_CD
           ,RWS.RWS_NUM
           ,RWS.RWS_DTL_LINE_NUM
           ,RWS.RCV_RTL_WH_CD
           ,RWS.RCV_RTL_WH_NM
           ,RWS.RWS_REF_NUM
           ,RWS.BOL_NUM
           ,RWS.SCE_ORD_TP_CD
           ,RWS.SCE_ORD_TP_NM
           ,RWS.SRC_ORD_NUM
           ,RWS.DPLY_LINE_NUM
           ,RWS.SRC_ORD_LINE_NUM
           ,RWS.SRC_ORD_LINE_SUB_NUM
           ,RWS.SHIP_FROM_LOC_CD
           ,RWS.SHIP_FROM_LOC_NM
           ,RWS.SVC_CONFIG_MSTR_PK
           ,RWS.MDSE_CD
           ,RWS.FLIP_MDSE_CD
           ,RWS.MDSE_DESC_SHORT_TXT
           ,RWS.RWS_QTY
           ,RWS.RWS_BAL_QTY
           ,RWS.RWS_PUT_AWAY_QTY
           ,RWS.RCV_RTL_SWH_CD
           ,RWS.RCV_RTL_SWH_NM
           ,RWS.RWS_SCR_CANC_AVAL_FLG
           ,RWS.RWS_DTL_STS_CD
           ,CASE WHEN RWS.RWS_DTL_RCV_FLG = #flgY# AND PS.SER_CNT = 1 THEN PS.SER_NUM
                 WHEN RWS.RWS_DTL_RCV_FLG = #flgN# AND SS.SER_CNT = 1 THEN SS.SER_NUM
            END               AS SER_NUM
           ,CASE WHEN RWS.RWS_DTL_RCV_FLG = #flgY# AND PS.SER_CNT &gt; 1 THEN #flgY#
                 WHEN RWS.RWS_DTL_RCV_FLG = #flgN# AND SS.SER_CNT &gt; 1 THEN #flgY#
                 ELSE #flgN#
            END               AS SER_NUM_TAKE_FLG
           ,RWS.RWS_HDR_OPEN_FLG
           ,RWS.RWS_DTL_OPEN_FLG
           ,RWS.PO_ORD_NUM
           ,RWS.PO_ORD_DTL_LINE_NUM
           ,RWS.RWS_HDR_RCV_FLG
           ,RWS.RWS_DTL_RCV_FLG
           ,RWS.TRX_ORD_NUM
           ,RWS.TRX_LINE_NUM
           ,RWS.WMS_DROP_FLG
           ,RWS.SEND_RQST_FLG
           ,RWS.RWS_STK_STS_CD
           ,RWS.RCV_INVTY_LOC_CD
           ,RWS.EZUPTIME_RWSH
           ,RWS.EZUPTIMEZONE_RWSH
           ,RWS.EZUPTIME_RWSD
           ,RWS.EZUPTIMEZONE_RWSD
           ,RWS.EZUPTIME_PORH
           ,RWS.EZUPTIMEZONE_PORH
           ,RWS.EZUPTIME_PORD
           ,RWS.EZUPTIMEZONE_PORD
           ,PAV.RTL_WH_NM     AS ACTL_RTL_WH_NM
           <!-- QC#18461-Sol#085 Add -->
           ,RWS.THIRD_PTY_DSP_TP_CD
           ,RWS.THIRD_PTY_DSP_TP_DESC_TXT
           ,RWS.INVTY_OWNR_CD
           ,RWS.DS_ORD_POSN_NUM
           <!-- START 2023/02/22 TZ.Win [QC#61161, ADD] -->
           ,AI.ASN_CRAT_DT
           <!-- END 2023/02/22 TZ.Win [QC#61161, ADD] -->
        FROM
            RWS_LST    RWS
           ,PUT_AWAY_V PAV
           ,SCHD_SER   SS
           ,ACTL_SER   PS
           <!-- START 2023/02/22 TZ.Win [QC#61161, ADD] -->
           ,ASN_INFO   AI
           <!-- END 2023/02/22 TZ.Win [QC#61161, ADD] -->
        WHERE
            PAV.RWS_NUM(+)         = RWS.RWS_NUM
        AND PAV.RWS_DTL_LINE_NUM(+)= RWS.RWS_DTL_LINE_NUM
        AND SS.GLBL_CMPY_CD(+)     = RWS.GLBL_CMPY_CD
        AND SS.RWS_NUM(+)          = RWS.RWS_NUM
        AND SS.RWS_DTL_LINE_NUM(+) = RWS.RWS_DTL_LINE_NUM
        AND PS.GLBL_CMPY_CD(+)     = RWS.GLBL_CMPY_CD
        AND PS.RWS_NUM(+)          = RWS.RWS_NUM
        AND PS.RWS_DTL_LINE_NUM(+) = RWS.RWS_DTL_LINE_NUM
        <!-- START 2023/02/22 TZ.Win [QC#61161, ADD] -->
        AND AI.RWS_NUM(+)          = RWS.RWS_NUM
        <!-- END 2023/02/22 TZ.Win [QC#61161, ADD] -->
        AND RWS.ROW_NUM        &lt;= #rowNum#
        ORDER BY
            RWS.ROW_NUM
    </statement>

    <statement id="getSerNumListForOrd" parameterClass="Map" resultClass="Map">
        WITH SER AS (
        -- PO SERIAL
        SELECT
             PSN.GLBL_CMPY_CD       AS GLBL_CMPY_CD
            ,PSN.KEY_INFO_CD_04     AS SRC_DOC_NUM
            ,PSN.KEY_INFO_CD_05     AS SRC_DOC_LINE_NUM
            ,NULL                   AS SRC_DOC_LINE_SUB_NUM
            ,PSN.SER_NUM
            ,PSN.MDSE_CD
        FROM
            PO_SER_NUM PSN
        WHERE
            PSN.EZCANCELFLAG   = '0'

        -- CPO RETURN SERIAL
        UNION ALL
        SELECT
             CRD.GLBL_CMPY_CD                   AS GLBL_CMPY_CD
            ,CRD.CPO_ORD_NUM                    AS SRC_DOC_NUM
            ,CRD.DS_CPO_RTRN_LINE_NUM           AS SRC_DOC_LINE_NUM
            ,CRD.DS_CPO_RTRN_LINE_SUB_NUM       AS SRC_DOC_LINE_SUB_NUM
            ,CRD.SER_NUM
            ,CRD.MDSE_CD
        FROM
            DS_CPO_RTRN_DTL        CRD
        WHERE
            CRD.EZCANCELFLAG   = '0'

        -- SHIP SERIAL
        UNION ALL
        SELECT
                 SD.GLBL_CMPY_CD            AS GLBL_CMPY_CD
                ,SD.TRX_HDR_NUM             AS SRC_DOC_NUM
                ,SD.TRX_LINE_NUM            AS SRC_DOC_LINE_NUM
                ,SD.TRX_LINE_SUB_NUM        AS SRC_DOC_LINE_SUB_NUM
                ,SN.SER_NUM
                ,SN.MDSE_CD
        FROM
             SHPG_ORD_DTL SD
            ,SHIP_SER_NUM SN
        WHERE
            SD.EZCANCELFLAG     = '0'
        AND SD.GLBL_CMPY_CD     = SN.GLBL_CMPY_CD
        AND SD.SO_NUM           = SN.SO_NUM
        AND SD.SO_SLP_NUM       = SN.SO_SLP_NUM
        AND SN.EZCANCELFLAG     = '0'

        -- RWS SERIAL (WRK_ORD)
        UNION ALL
        SELECT
             WO_SER.GLBL_CMPY_CD
            ,WO_SER.SRC_DOC_NUM
            ,WO_SER.SRC_DOC_LINE_NUM
            ,WO_SER.SRC_DOC_LINE_SUB_NUM
            ,WO_SER.SER_NUM
            ,WO_SER.MDSE_CD   
        FROM
            (
                SELECT
                     WO.GLBL_CMPY_CD                            AS GLBL_CMPY_CD
                    ,WO.WRK_ORD_NUM                             AS SRC_DOC_NUM
                    ,CASE WO.DS_WRK_ORD_TP_CD 
                        WHEN '1' THEN -- KIT
                            CASE RH.SCE_ORD_TP_CD
                                WHEN 'KC' THEN WOD.WRK_ORD_DTL_LINE_NUM
                                ELSE NULL
                                END
                        ELSE  --UN KIT
                            CASE RH.SCE_ORD_TP_CD
                                WHEN 'KC' THEN NULL
                                ELSE WOD.WRK_ORD_DTL_LINE_NUM
                                END
                        END                                     AS SRC_DOC_LINE_NUM
                    ,NULL                                       AS SRC_DOC_LINE_SUB_NUM
                    ,RS.SER_NUM                                 AS SER_NUM
                    ,RS.MDSE_CD
                FROM
                     WRK_ORD        WO
                    ,WRK_ORD_DTL    WOD
                    ,RWS_HDR        RH
                    ,RWS_DTL        RD
                    ,RWS_SER        RS
                WHERE
                    WO.EZCANCELFLAG     = '0'
                AND WO.WRK_ORD_NUM      = RD.RWS_NUM
                AND RD.EZCANCELFLAG     = '0'
                AND WO.WRK_ORD_NUM      = RH.SRC_ORD_NUM
                AND RH.EZCANCELFLAG     = '0'
                AND RH.RWS_NUM          = RD.RWS_NUM
                AND WOD.WRK_ORD_DTL_LINE_NUM    = RD.PO_RCV_TRX_LINE_NUM
                AND RD.EZCANCELFLAG     = '0'
                AND RD.RWS_NUM          = RS.RWS_NUM
                AND RD.RWS_DTL_LINE_NUM = RS.RWS_LINE_NUM
                AND RS.EZCANCELFLAG     = '0'
            ) WO_SER

        -- RWS SERIAL (REMAN)
        UNION ALL
        SELECT
             RO.GLBL_CMPY_CD            AS GLBL_CMPY_CD
            ,RO.RMNF_ORD_NUM            AS SRC_DOC_NUM
            ,RU.RMNF_TASK_NUM           AS SRC_DOC_LINE_NUM
            ,RU.RMNF_USG_LINE_NUM       AS SRC_DOC_LINE_SUB_NUM
            ,RS.SER_NUM
            ,RS.MDSE_CD
        FROM
             RMNF_ORD               RO
            ,RMNF_USG               RU
            ,RWS_HDR                RH
            ,RWS_DTL                RD
            ,RWS_SER                RS
        WHERE
            RO.EZCANCELFLAG         = '0'
        AND RO.GLBL_CMPY_CD         = RU.GLBL_CMPY_CD
        AND RO.RMNF_ORD_NUM         = RU.RMNF_ORD_NUM
        AND RO.EZCANCELFLAG         = '0'
        AND RO.GLBL_CMPY_CD         = RH.GLBL_CMPY_CD
        AND RO.RMNF_ORD_NUM         = RH.PO_RCV_TRX_HDR_NUM
        AND RH.EZCANCELFLAG         = '0'
        AND RH.GLBL_CMPY_CD         = RD.GLBL_CMPY_CD
        AND RH.RWS_NUM              = RD.RWS_NUM
        AND RU.RMNF_USG_LINE_NUM    = RD.PO_RCV_TRX_LINE_NUM
        AND RD.EZCANCELFLAG         = '0'
        AND RD.GLBL_CMPY_CD         = RS.GLBL_CMPY_CD
        AND RD.RWS_NUM              = RS.RWS_NUM
        AND RD.RWS_DTL_LINE_NUM     = RS.RWS_LINE_NUM
        AND RS.EZCANCELFLAG         = '0'

        )
        SELECT
             S.SER_NUM
            ,S.MDSE_CD
            ,S.SRC_DOC_NUM
            ,S.SRC_DOC_LINE_NUM
            ,S.SRC_DOC_LINE_SUB_NUM
        FROM
            SER S
        WHERE
            S.GLBL_CMPY_CD = #glblCmpyCd#
        AND S.SRC_DOC_NUM  = #trxOrdNum#
        <isNotNull property="trxLineNum">
        AND S.SRC_DOC_LINE_NUM = #trxLineNum#
        </isNotNull>
        <isNotNull property="trxLineSubNum">
        AND S.SRC_DOC_LINE_SUB_NUM = #trxLineSubNum#
        </isNotNull>
        AND NOT EXISTS (
        SELECT
            1
        FROM
             RWS_HDR          RH
            ,RWS_DTL          RD
            ,RWS_PUT_AWAY_SER RPAS
            ,RWS_STS          RS
        WHERE
            RH.GLBL_CMPY_CD          = S.GLBL_CMPY_CD
        AND RH.SRC_ORD_NUM           = S.SRC_DOC_NUM
        AND RH.GLBL_CMPY_CD          = RD.GLBL_CMPY_CD
        AND RH.RWS_NUM               = RD.RWS_NUM
        <isNotNull property="trxLineNum">
        AND RD.PO_RCV_TRX_LINE_NUM   = #trxLineNum#
        </isNotNull>
        <isNotNull property="trxLineSubNum">
        AND RD.TRX_LINE_SUB_NUM      = #trxLineSubNum#
        </isNotNull>
        AND RD.GLBL_CMPY_CD          = RPAS.GLBL_CMPY_CD
        AND RD.RWS_NUM               = RPAS.RWS_NUM
        AND RD.RWS_DTL_LINE_NUM      = RPAS.RWS_LINE_NUM  
        AND S.SER_NUM                = RPAS.SER_NUM
        AND RD.GLBL_CMPY_CD          = RS.GLBL_CMPY_CD
        AND RD.RWS_STS_CD            = RS.RWS_STS_CD
        AND RS.RCV_FLG               = 'Y'
        AND RH.EZCANCELFLAG          = '0'
        AND RD.EZCANCELFLAG          = '0'
        AND RPAS.EZCANCELFLAG        = '0'
        UNION ALL
        SELECT
            1
        FROM
             RWS_HDR          RH
            ,RWS_DTL          RD
            ,RWS_SER          RSER
            ,RWS_STS          RS
        WHERE
            RH.GLBL_CMPY_CD          = S.GLBL_CMPY_CD
        AND RH.SRC_ORD_NUM           = S.SRC_DOC_NUM
        AND RH.GLBL_CMPY_CD          = RD.GLBL_CMPY_CD
        AND RH.RWS_NUM               = RD.RWS_NUM
        <isNotNull property="trxLineNum">
        AND RD.PO_RCV_TRX_LINE_NUM   = #trxLineNum#
        </isNotNull>
        <isNotNull property="trxLineSubNum">
        AND RD.TRX_LINE_SUB_NUM      = #trxLineSubNum#
        </isNotNull>
        AND RD.GLBL_CMPY_CD          = RSER.GLBL_CMPY_CD
        AND RD.RWS_NUM               = RSER.RWS_NUM
        AND RD.RWS_DTL_LINE_NUM      = RSER.RWS_LINE_NUM
        AND S.SER_NUM                = RSER.SER_NUM
        AND RD.GLBL_CMPY_CD          = RS.GLBL_CMPY_CD
        AND RD.RWS_STS_CD            = RS.RWS_STS_CD
        AND RD.RWS_STS_CD            != #partially#
        AND RS.RWS_OPEN_FLG          = 'Y'
        AND RH.EZCANCELFLAG          = '0'
        AND RD.EZCANCELFLAG          = '0'
        AND RSER.EZCANCELFLAG        = '0'
        )
    </statement>

    <statement id="getPoRcvRws" parameterClass="Map" resultClass="Map">
          SELECT 
                PH.PO_RCV_NUM       AS PO_RCV_NUM
               ,PD.PO_RCV_LINE_NUM  AS PO_RCV_LINE_NUM
               ,RH.RWS_NUM          AS RWS_NUM
               ,RD.RWS_DTL_LINE_NUM AS RWS_DTL_LINE_NUM
          FROM 
                PO_RCV_HDR PH
               ,PO_RCV_DTL PD
               ,RWS_HDR RH
               ,RWS_DTL RD
          WHERE
                PH.GLBL_CMPY_CD    = #glblCmpyCd#
            AND PH.PO_RCV_NUM      = #poRcvNum#
            AND PH.EZCANCELFLAG    = '0'
            AND PH.GLBL_CMPY_CD    = PD.GLBL_CMPY_CD
            AND PH.PO_RCV_NUM      = PD.PO_RCV_NUM
            AND PD.EZCANCELFLAG    = '0'
            AND PH.GLBL_CMPY_CD    = RH.GLBL_CMPY_CD
            AND PH.PO_RCV_NUM      = RH.TRX_ORD_NUM
            AND RH.RWS_NUM         = #rwsNum#
            AND RH.EZCANCELFLAG    = '0'
            AND RH.GLBL_CMPY_CD    = RD.GLBL_CMPY_CD
            AND RH.RWS_NUM         = RD.RWS_NUM
            AND RD.EZCANCELFLAG    = '0'
            AND PD.PO_RCV_LINE_NUM = RD.TRX_LINE_NUM
          ORDER BY
                PH.PO_RCV_NUM
               ,PD.PO_RCV_LINE_NUM
     </statement>

     <statement id="checkShpgStsForRP" parameterClass="Map" resultClass="Map">
         SELECT
             DSLS.SO_LINE_OPEN_FLG
         FROM
             PRCH_REQ_DTL      PRD
            ,SHPG_ORD_DTL      SOD
            ,DS_SO_LINE_STS    DSLS
            ,SHPG_ORD          SO
            ,SHPG_STS          SPS
         WHERE
             PRD.GLBL_CMPY_CD          = #glblCmpyCd#
         AND PRD.RWS_NUM               = #rwsNum#
         AND PRD.PO_ORD_NUM            = #poOrdNum#
         AND PRD.EZCANCELFLAG          = '0'
         AND PRD.GLBL_CMPY_CD          = SOD.GLBL_CMPY_CD
         AND PRD.PRCH_REQ_NUM          = SOD.PRCH_REQ_NUM
         AND PRD.PRCH_REQ_LINE_NUM     = SOD.PRCH_REQ_LINE_NUM
         AND PRD.PRCH_REQ_LINE_SUB_NUM = SOD.PRCH_REQ_LINE_SUB_NUM
         AND SOD.EZCANCELFLAG          = '0'
         AND SOD.GLBL_CMPY_CD          = DSLS.GLBL_CMPY_CD
         AND SOD.DS_SO_LINE_STS_CD     = DSLS.DS_SO_LINE_STS_CD
         AND DSLS.EZCANCELFLAG         = '0'
         AND SOD.GLBL_CMPY_CD          = SO.GLBL_CMPY_CD
         AND SOD.SO_NUM                = SO.SO_NUM
         AND SO.EZCANCELFLAG           = '0'
         AND SO.GLBL_CMPY_CD           = SPS.GLBL_CMPY_CD
         AND SO.SHPG_STS_CD            = SPS.SHPG_STS_CD
         AND SPS.EZCANCELFLAG          = '0'
         AND (DSLS.SO_LINE_OPEN_FLG = #flgY#
              OR (SPS.SO_PRINT_FLG = #flgY# AND SPS.SHIP_FLG = #flgN#)
             )
         AND ROWNUM = 1
     </statement>

     <statement id="getPartyNm" parameterClass="Map" resultClass="Map">
        SELECT
            *
        FROM
            (
             $sqlTxt$
            )
        WHERE
            ROWNUM = 1
    </statement>

    <statement id="getPutAwaySerNumList" parameterClass="Map" resultClass="Map">
        SELECT
            SER_NUM
           ,MDSE_CD
        FROM
            RWS_PUT_AWAY_SER
        WHERE
            GLBL_CMPY_CD = #glblCmpyCd#
        AND RWS_NUM      = #rwsNum#
        AND RWS_LINE_NUM = #rwsLineNum#
        AND EZCANCELFLAG = '0'
    </statement>

    <statement id="getRwsSerNumList" parameterClass="Map" resultClass="Map">
        SELECT
            SER_NUM
           ,MDSE_CD
        FROM
            RWS_SER
        WHERE
            GLBL_CMPY_CD = #glblCmpyCd#
        AND RWS_NUM      = #rwsNum#
        AND RWS_LINE_NUM = #rwsLineNum#
        AND EZCANCELFLAG = '0'
    </statement>

    <statement id="searchOrd" parameterClass="Map" resultMap="result.searchOrd">
        WITH SCE_ORDER AS (
            -- PO
            SELECT
                 PH.GLBL_CMPY_CD                    AS GLBL_CMPY_CD
                ,PD.EZUPTIME                        AS EZUPTIME
                ,PD.EZUPTIMEZONE                    AS EZUPTIMEZONE
                ,PH.PO_ORD_NUM                      AS SRC_DOC_NUM
                ,PD.PO_ORD_DTL_LINE_NUM             AS SRC_DOC_LINE_NUM
                ,NULL                               AS SRC_DOC_LINE_SUB_NUM
                ,PD.DISP_PO_DTL_LINE_NUM            AS DPLY_LINE_NUM
                ,NULL                               AS DS_ORD_POSN_NUM
                ,PH.VND_CD                          AS PTY_CD
                ,PV.PRNT_VND_NM || ' - ' || V.LOC_NM   AS PTY_NM  <!-- QC#56542 2020/04/27 PO_VND_V to VND -->
                ,PD.DEST_RTL_WH_CD                  AS RTL_WH_CD
                ,PD.DEST_RTL_SWH_CD                 AS RTL_SWH_CD
                ,NVL(PD.ORIG_MDSE_CD, PD.MDSE_CD)   AS MDSE_CD
                ,CASE WHEN PD.ORIG_MDSE_CD IS NOT NULL AND PD.ORIG_MDSE_CD != PD.MDSE_CD THEN PD.MDSE_CD
                     ELSE NULL
                 END                                AS FLIP_MDSE_CD
                ,PD.ASL_MDSE_CD                     AS ASL_MDSE_CD
                ,PD.SVC_CONFIG_MSTR_PK              AS SVC_CONFIG_MSTR_PK
                ,PD.PO_QTY                          AS ORD_QTY
                ,PD.PO_BAL_QTY                      AS BAL_QTY
                ,CASE WHEN PD.PO_BAL_QTY = 0 THEN #flgN#
                    ELSE PS.OPEN_PO_FLG
                 END                                AS SRC_DOC_LINE_OPEN_FLG
                ,PD.ETA_DT                          AS ETA_DT
                ,PD.CARR_CD                         AS CARR_CD
                ,RH.SCE_ORD_TP_CD                   AS SCE_ORD_TP_CD
                ,CASE WHEN HS.RWS_OPEN_FLG = #flgY# AND LS.RWS_OPEN_FLG = #flgY# THEN #flgY#
                    ELSE #flgN#
                 END                                AS RWS_OPEN_FLG
                ,RD.RWS_NUM                         AS RWS_NUM
                ,RD.RWS_DTL_LINE_NUM                AS RWS_DTL_LINE_NUM
                ,RH.RWS_REF_NUM                     AS RWS_REF_NUM
                ,RH.IMPT_INV_BOL_NUM                AS IMPT_INV_BOL_NUM
                ,RD.RWS_STS_CD                      AS RWS_STS_CD
                ,ROW_NUMBER() OVER (PARTITION BY PH.PO_ORD_NUM, PD.PO_ORD_DTL_LINE_NUM ORDER BY RD.RWS_NUM DESC)
                                                    AS SORT_NUM
            FROM
                 PO                 PH
                ,PO_DTL             PD
                ,VND                V     <!-- QC#56542 2020/04/27 PO_VND_V to VND -->
                ,PRNT_VND           PV    <!-- QC#56542 2020/04/27 PO_VND_V to VND -->
                ,VND_TP_RELN        VTR   <!-- QC#56542 2020/04/27 PO_VND_V to VND -->
                ,PO_STS             PS
                ,RWS_HDR            RH
                ,RWS_DTL            RD
                ,RWS_STS            HS
                ,RWS_STS            LS
            WHERE
                PH.EZCANCELFLAG             = '0'
            AND PH.GLBL_CMPY_CD             = PD.GLBL_CMPY_CD
            AND PH.PO_ORD_NUM               = PD.PO_ORD_NUM
            AND PD.EZCANCELFLAG             = '0'
            AND PH.GLBL_CMPY_CD             = V.GLBL_CMPY_CD   <!-- QC#56542 2020/04/27 PO_VND_V to VND -->
            AND PH.VND_CD                   = V.VND_CD         <!-- QC#56542 2020/04/27 PO_VND_V to VND -->
            AND V.EZCANCELFLAG              = '0'              <!-- QC#56542 2020/04/27 PO_VND_V to VND -->
            <!-- QC#56542 2020/04/27 PO_VND_V to VND -->
            AND V.GLBL_CMPY_CD              = PV.GLBL_CMPY_CD
            AND V.PRNT_VND_PK               = PV.PRNT_VND_PK
            AND PV.EZCANCELFLAG             = '0'
            AND V.VND_CD                    = VTR.VND_CD
            AND V.GLBL_CMPY_CD              = VTR.GLBL_CMPY_CD
            AND VTR.VND_TP_CD               = '01'        
            AND VTR.EZCANCELFLAG            = '0'
            <!-- QC#56542 2020/04/27 PO_VND_V to VND -->
            AND PD.GLBL_CMPY_CD             = PS.GLBL_CMPY_CD
            AND PD.PO_STS_CD                = PS.PO_STS_CD
            AND PS.EZCANCELFLAG             = '0'
            AND PD.GLBL_CMPY_CD             = RH.GLBL_CMPY_CD
            AND PD.PO_ORD_NUM               = RH.PO_RCV_TRX_HDR_NUM
            AND RH.EZCANCELFLAG             = '0'
            AND RH.GLBL_CMPY_CD             = RD.GLBL_CMPY_CD
            <!-- START 2021/03/29 F.Deola [QC#58611, ADD] -->
            <isNotNull property="rwsNum">
            AND RH.RWS_NUM                  = #rwsNum#
            </isNotNull>
            <!-- END 2021/03/29 F.Deola [QC#58611, ADD] -->
            AND RH.RWS_NUM                  = RD.RWS_NUM
            AND RD.PO_RCV_TRX_LINE_NUM      = PD.PO_ORD_DTL_LINE_NUM
            AND RD.EZCANCELFLAG             = '0'
            AND RH.GLBL_CMPY_CD             = HS.GLBL_CMPY_CD
            AND RH.RWS_STS_CD               = HS.RWS_STS_CD
            AND HS.EZCANCELFLAG             = '0'
            AND RD.GLBL_CMPY_CD             = LS.GLBL_CMPY_CD
            AND RD.RWS_STS_CD               = LS.RWS_STS_CD
            AND LS.EZCANCELFLAG             = '0'

            -- PR
            UNION ALL
            SELECT
                 PRD.GLBL_CMPY_CD                           AS GLBL_CMPY_CD
                ,PRD.EZUPTIME                               AS EZUPTIME
                ,PRD.EZUPTIMEZONE                           AS EZUPTIMEZONE
                ,PRD.PRCH_REQ_NUM                           AS SRC_DOC_NUM
                ,TO_CHAR(PRD.PRCH_REQ_LINE_NUM)             AS SRC_DOC_LINE_NUM
                ,TO_CHAR(PRD.PRCH_REQ_LINE_SUB_NUM)         AS SRC_DOC_LINE_SUB_NUM
                ,TO_CHAR(TO_NUMBER(PRD.PRCH_REQ_LINE_NUM)) || '.' ||  TO_CHAR(PRD.PRCH_REQ_LINE_SUB_NUM)   AS DPLY_LINE_NUM
                ,NULL                                       AS DS_ORD_POSN_NUM
                ,RH.FROM_LOC_CD                             AS PTY_CD
                ,RW.RTL_WH_NM                               AS PTY_NM
                ,RD.RTL_WH_CD                               AS RTL_WH_CD
                ,RD.RTL_SWH_CD                              AS RTL_SWH_CD
                ,NVL(PRD.ORIG_RQST_MDSE_CD, PRD.MDSE_CD)    AS MDSE_CD
                ,CASE WHEN PRD.ORIG_RQST_MDSE_CD IS NOT NULL AND PRD.ORIG_RQST_MDSE_CD != PRD.MDSE_CD THEN PRD.MDSE_CD
                    ELSE NULL
                 END                                        AS FLIP_MDSE_CD
                ,NULL                                       AS ASL_MDSE_CD
                ,RH.SVC_CONFIG_MSTR_PK                      AS SVC_CONFIG_MSTR_PK
                ,PRD.PRCH_REQ_QTY                           AS ORD_QTY
                ,PRD.PRCH_REQ_QTY - PRD.RWS_PUT_AWAY_QTY    AS BAL_QTY
                ,CASE WHEN PRD.PRCH_REQ_BAL_QTY = 0 THEN #flgN#
                    ELSE PRLS.OPEN_STS_FLG
                 END                                        AS SRC_DOC_LINE_OPEN_FLG
                ,RD.WH_IN_ETA_DT                            AS ETA_DT
                ,RH.RWS_CARR_CD                             AS CARR_CD
                ,RH.SCE_ORD_TP_CD                           AS SCE_ORD_TP_CD
                ,CASE WHEN HS.RWS_OPEN_FLG = #flgY# AND LS.RWS_OPEN_FLG = #flgY# THEN #flgY#
                    ELSE #flgN#
                 END                                        AS RWS_OPEN_FLG
                ,RD.RWS_NUM                                 AS RWS_NUM
                ,RD.RWS_DTL_LINE_NUM                        AS RWS_DTL_LINE_NUM
                ,RH.RWS_REF_NUM                             AS RWS_REF_NUM
                ,RH.IMPT_INV_BOL_NUM                        AS IMPT_INV_BOL_NUM
                ,RD.RWS_STS_CD                              AS RWS_STS_CD
                ,ROW_NUMBER() OVER (PARTITION BY PRD.PRCH_REQ_NUM, TO_CHAR(PRD.PRCH_REQ_LINE_NUM), TO_CHAR(PRD.PRCH_REQ_LINE_SUB_NUM) ORDER BY RD.RWS_NUM DESC)
                                                            AS SORT_NUM
            FROM
                 PRCH_REQ_DTL         PRD
                ,PRCH_REQ_LINE_STS    PRLS
                ,RWS_HDR              RH
                ,RWS_DTL              RD
                ,RTL_WH               RW
                ,RWS_STS              HS
                ,RWS_STS              LS
            WHERE
                PRD.EZCANCELFLAG             = '0'
            AND PRD.GLBL_CMPY_CD             = PRLS.GLBL_CMPY_CD
            AND PRD.PRCH_REQ_LINE_STS_CD     = PRLS.PRCH_REQ_LINE_STS_CD
            AND PRLS.EZCANCELFLAG            = '0'
            AND PRD.GLBL_CMPY_CD             = RH.GLBL_CMPY_CD
            AND PRD.PRCH_REQ_NUM             = RH.SRC_ORD_NUM
            AND RH.EZCANCELFLAG              = '0'
            AND RH.GLBL_CMPY_CD              = RD.GLBL_CMPY_CD
            <!-- START 2021/03/29 F.Deola [QC#58611, ADD] -->
            <isNotNull property="rwsNum">
            AND RH.RWS_NUM                   = #rwsNum#
            </isNotNull>
            <!-- END 2021/03/29 F.Deola [QC#58611, ADD] -->
            AND RH.RWS_NUM                   = RD.RWS_NUM
            AND RD.EZCANCELFLAG              = '0'
            AND RH.GLBL_CMPY_CD              = RW.GLBL_CMPY_CD
            AND RH.FROM_LOC_CD               = RW.RTL_WH_CD
            AND RW.EZCANCELFLAG              = '0'
            AND RH.GLBL_CMPY_CD             = HS.GLBL_CMPY_CD
            AND RH.RWS_STS_CD               = HS.RWS_STS_CD
            AND HS.EZCANCELFLAG             = '0'
            AND RD.GLBL_CMPY_CD             = LS.GLBL_CMPY_CD
            AND RD.RWS_STS_CD               = LS.RWS_STS_CD
            AND LS.EZCANCELFLAG             = '0'

            -- RETURN CPO
            UNION ALL
            SELECT
                 CRD.GLBL_CMPY_CD                           AS GLBL_CMPY_CD
                ,CRD.EZUPTIME                               AS EZUPTIME
                ,CRD.EZUPTIMEZONE                           AS EZUPTIMEZONE
                ,CRD.CPO_ORD_NUM                            AS SRC_DOC_NUM
                ,CRD.DS_CPO_RTRN_LINE_NUM                   AS SRC_DOC_LINE_NUM
                ,CRD.DS_CPO_RTRN_LINE_SUB_NUM               AS SRC_DOC_LINE_SUB_NUM
                ,CONCAT (CRD.DS_ORD_POSN_NUM, '.') 
                    || CONCAT (CRD.DS_CPO_LINE_NUM, DECODE(CRD.DS_CPO_LINE_SUB_NUM, NULL, '', '.')) 
                    || CRD.DS_CPO_LINE_SUB_NUM              AS DPLY_LINE_NUM
                ,CRD.DS_ORD_POSN_NUM                        AS DS_ORD_POSN_NUM
                ,CRD.SHIP_TO_CUST_CD                        AS PTY_CD
                ,AC.DS_ACCT_NM                              AS PTY_NM
                ,CRD.RTL_WH_CD                              AS RTL_WH_CD
                ,CRD.RTL_SWH_CD                             AS RTL_SWH_CD
                ,CRD.MDSE_CD                                AS MDSE_CD
                ,NULL                                       AS FLIP_MDSE_CD
                ,NULL                                       AS ASL_MDSE_CD
                ,CRD.SVC_CONFIG_MSTR_PK                     AS SVC_CONFIG_MSTR_PK
                ,ABS(CRD.ORD_QTY)                           AS ORD_QTY
                ,ABS(CRD.ORD_QTY) - ABS(CRD.CANC_QTY) - ABS(CRD.RTRN_QTY)    AS BAL_QTY
                ,CASE WHEN ABS(CRD.ORD_QTY) - ABS(CRD.CANC_QTY) - ABS(CRD.RTRN_QTY) = 0 THEN #flgN#
                    ELSE CRD.OPEN_FLG
                 END                                        AS SRC_DOC_LINE_OPEN_FLG
                ,RD.WH_IN_ETA_DT                            AS ETA_DT
                ,RD.CARR_CD                                 AS CARR_CD
                ,RH.SCE_ORD_TP_CD                           AS SCE_ORD_TP_CD
                ,CASE WHEN HS.RWS_OPEN_FLG = #flgY# AND LS.RWS_OPEN_FLG = #flgY# THEN #flgY#
                    ELSE #flgN#
                 END                                        AS RWS_OPEN_FLG
                ,RD.RWS_NUM                                 AS RWS_NUM
                ,RD.RWS_DTL_LINE_NUM                        AS RWS_DTL_LINE_NUM
                ,RH.RWS_REF_NUM                             AS RWS_REF_NUM
                ,RH.IMPT_INV_BOL_NUM                        AS IMPT_INV_BOL_NUM
                ,RD.RWS_STS_CD                              AS RWS_STS_CD
                ,ROW_NUMBER() OVER (PARTITION BY CRD.CPO_ORD_NUM, CRD.DS_CPO_RTRN_LINE_NUM, CRD.DS_CPO_RTRN_LINE_SUB_NUM ORDER BY RD.RWS_NUM DESC)
                                                            AS SORT_NUM
            FROM
                 DS_CPO_RTRN_DTL      CRD
                ,SHIP_TO_CUST         STC
                ,SELL_TO_CUST         AC
                ,RWS_HDR              RH
                ,RWS_DTL              RD
                ,RWS_STS              HS
                ,RWS_STS              LS
            WHERE
                CRD.EZCANCELFLAG             = '0'
            AND CRD.GLBL_CMPY_CD            = STC.GLBL_CMPY_CD
            AND CRD.SHIP_TO_CUST_CD         = STC.SHIP_TO_CUST_CD
            AND STC.EZCANCELFLAG            = '0'
            AND STC.GLBL_CMPY_CD            = AC.GLBL_CMPY_CD
            AND STC.SELL_TO_CUST_CD         = AC.SELL_TO_CUST_CD
            AND AC.EZCANCELFLAG             = '0'
            AND CRD.GLBL_CMPY_CD            = RH.GLBL_CMPY_CD
            AND CRD.CPO_ORD_NUM             = RH.TRX_ORD_NUM
            AND RH.EZCANCELFLAG              = '0'
            AND RH.GLBL_CMPY_CD             = RD.GLBL_CMPY_CD
            <!-- START 2021/03/29 F.Deola [QC#58611, ADD] -->
            <isNotNull property="rwsNum">
            AND RH.RWS_NUM                  = #rwsNum#
            </isNotNull>
            <!-- END 2021/03/29 F.Deola [QC#58611, ADD] -->
            AND RH.RWS_NUM                  = RD.RWS_NUM
            AND RD.TRX_LINE_NUM             = CRD.DS_CPO_RTRN_LINE_NUM
            AND RD.TRX_LINE_SUB_NUM         = CRD.DS_CPO_RTRN_LINE_SUB_NUM
            AND RD.EZCANCELFLAG              = '0'
            AND RH.GLBL_CMPY_CD             = HS.GLBL_CMPY_CD
            AND RH.RWS_STS_CD               = HS.RWS_STS_CD
            AND HS.EZCANCELFLAG             = '0'
            AND RD.GLBL_CMPY_CD             = LS.GLBL_CMPY_CD
            AND RD.RWS_STS_CD               = LS.RWS_STS_CD
            AND LS.EZCANCELFLAG             = '0'

            -- CPO
            UNION ALL
            SELECT
                 CD.GLBL_CMPY_CD                            AS GLBL_CMPY_CD
                ,CD.EZUPTIME                                AS EZUPTIME
                ,CD.EZUPTIMEZONE                            AS EZUPTIMEZONE
                ,CD.CPO_ORD_NUM                             AS SRC_DOC_NUM
                ,CD.CPO_DTL_LINE_NUM                        AS SRC_DOC_LINE_NUM
                ,CD.CPO_DTL_LINE_SUB_NUM                    AS SRC_DOC_LINE_SUB_NUM
                ,CONCAT (CD.DS_ORD_POSN_NUM, '.')
                    || CONCAT (CD.DS_CPO_LINE_NUM, DECODE(CD.DS_CPO_LINE_SUB_NUM, NULL, '', '.'))
                    || CD.DS_CPO_LINE_SUB_NUM               AS DPLY_LINE_NUM
                ,CD.DS_ORD_POSN_NUM                         AS DS_ORD_POSN_NUM
                ,RD.SHIP_FROM_RTL_WH_CD                     AS PTY_CD
                ,RW.RTL_WH_NM                               AS PTY_NM
                ,RD.RTL_WH_CD                               AS RTL_WH_CD
                ,RD.RTL_SWH_CD                              AS RTL_SWH_CD
                ,CD.MDSE_CD                                 AS MDSE_CD
                ,NULL                                       AS FLIP_MDSE_CD
                ,NULL                                       AS ASL_MDSE_CD
                ,RH.SVC_CONFIG_MSTR_PK                      AS SVC_CONFIG_MSTR_PK
                ,CD.ORD_QTY                                 AS ORD_QTY
                ,BL.BAL_QTY                                 AS BAL_QTY
                ,CASE WHEN CH.OPEN_FLG = #flgY# AND CD.OPEN_FLG = #flgY# THEN #flgY#
                    ELSE #flgN#
                 END                                        AS SRC_DOC_LINE_OPEN_FLG
                ,RD.WH_IN_ETA_DT                            AS ETA_DT
                ,RH.RWS_CARR_CD                             AS CARR_CD
                ,RH.SCE_ORD_TP_CD                           AS SCE_ORD_TP_CD
                ,CASE WHEN HS.RWS_OPEN_FLG = #flgY# AND LS.RWS_OPEN_FLG = #flgY# THEN #flgY#
                    ELSE #flgN#
                 END                                        AS RWS_OPEN_FLG
                ,RD.RWS_NUM                                 AS RWS_NUM
                ,RD.RWS_DTL_LINE_NUM                        AS RWS_DTL_LINE_NUM
                ,RH.RWS_REF_NUM                             AS RWS_REF_NUM
                ,RH.IMPT_INV_BOL_NUM                        AS IMPT_INV_BOL_NUM
                ,RD.RWS_STS_CD                              AS RWS_STS_CD
                ,ROW_NUMBER() OVER (PARTITION BY CD.CPO_ORD_NUM, CD.CPO_DTL_LINE_NUM, CD.CPO_DTL_LINE_SUB_NUM ORDER BY RD.RWS_NUM DESC)
                                                            AS SORT_NUM
            FROM
                 CPO                  CH
                ,CPO_DTL              CD
                ,SHPG_ORD_DTL         SOD
                ,RWS_HDR              RH
                ,RWS_DTL              RD
                ,RTL_WH               RW
                ,RWS_STS              HS
                ,RWS_STS              LS
                ,(SELECT
                        SD.GLBL_CMPY_CD
                        , SD.TRX_HDR_NUM
                        , SD.TRX_LINE_NUM
                        , SD.TRX_LINE_SUB_NUM
                        , SUM(L.RWS_QTY - L.RWS_PUT_AWAY_QTY) AS BAL_QTY
                    FROM
                        SHPG_ORD_DTL    SD
                       ,RWS_HDR         H
                       ,RWS_DTL         L
                   WHERE
                        SD.EZCANCELFLAG       = '0'
                    AND SD.GLBL_CMPY_CD       = H.GLBL_CMPY_CD
                    AND SD.SO_NUM             = H.PO_RCV_TRX_HDR_NUM
                    AND H.EZCANCELFLAG        = '0'
                    AND H.GLBL_CMPY_CD        = L.GLBL_CMPY_CD
                    AND H.RWS_NUM             = L.RWS_NUM
                    AND L.PO_RCV_TRX_LINE_NUM = SD.SO_SLP_NUM
                    AND L.EZCANCELFLAG        = '0'
                    GROUP BY
                        SD.GLBL_CMPY_CD
                       ,SD.TRX_HDR_NUM
                       ,SD.TRX_LINE_NUM
                       ,SD.TRX_LINE_SUB_NUM ) BL
            WHERE
                CH.EZCANCELFLAG             = '0'
            AND CH.GLBL_CMPY_CD             = CD.GLBL_CMPY_CD
            AND CH.CPO_ORD_NUM              = CD.CPO_ORD_NUM
            AND CD.EZCANCELFLAG             = '0'
            AND CD.GLBL_CMPY_CD             = SOD.GLBL_CMPY_CD
            AND CD.CPO_ORD_NUM              = SOD.TRX_HDR_NUM
            AND CD.CPO_DTL_LINE_NUM         = SOD.TRX_LINE_NUM
            AND CD.CPO_DTL_LINE_SUB_NUM     = SOD.TRX_LINE_SUB_NUM
            AND SOD.EZCANCELFLAG            = '0'
            AND SOD.GLBL_CMPY_CD            = RH.GLBL_CMPY_CD
            AND SOD.SO_NUM                  = RH.PO_RCV_TRX_HDR_NUM
            AND RH.EZCANCELFLAG             = '0'
            AND RH.GLBL_CMPY_CD             = RD.GLBL_CMPY_CD
            <!-- START 2021/03/29 F.Deola [QC#58611, ADD] -->
            <isNotNull property="rwsNum">
            AND RH.RWS_NUM                  = #rwsNum#
            </isNotNull>
            <!-- END 2021/03/29 F.Deola [QC#58611, ADD] -->
            AND RH.RWS_NUM                  = RD.RWS_NUM
            AND RD.PO_RCV_TRX_LINE_NUM      = SOD.SO_SLP_NUM
            AND RD.EZCANCELFLAG             = '0'
            AND RD.GLBL_CMPY_CD             = RW.GLBL_CMPY_CD
            AND RD.SHIP_FROM_RTL_WH_CD      = RW.RTL_WH_CD
            AND RW.EZCANCELFLAG             = '0'
            AND RH.GLBL_CMPY_CD             = HS.GLBL_CMPY_CD
            AND RH.RWS_STS_CD               = HS.RWS_STS_CD
            AND HS.EZCANCELFLAG             = '0'
            AND RD.GLBL_CMPY_CD             = LS.GLBL_CMPY_CD
            AND RD.RWS_STS_CD               = LS.RWS_STS_CD
            AND LS.EZCANCELFLAG             = '0'
            AND CD.GLBL_CMPY_CD             = BL.GLBL_CMPY_CD
            AND CD.CPO_ORD_NUM              = BL.TRX_HDR_NUM
            AND CD.CPO_DTL_LINE_NUM         = BL.TRX_LINE_NUM
            AND CD.CPO_DTL_LINE_SUB_NUM     = BL.TRX_LINE_SUB_NUM

            -- WO
            UNION ALL
            SELECT
                GLBL_CMPY_CD
                ,EZUPTIME
                ,EZUPTIMEZONE
                ,SRC_DOC_NUM
                ,SRC_DOC_LINE_NUM
                ,SRC_DOC_LINE_SUB_NUM
                ,DPLY_LINE_NUM
                ,DS_ORD_POSN_NUM
                ,PTY_CD
                ,PTY_NM
                ,RTL_WH_CD
                ,RTL_SWH_CD
                ,MDSE_CD
                ,FLIP_MDSE_CD
                ,ASL_MDSE_CD
                ,SVC_CONFIG_MSTR_PK
                ,ORD_QTY
                ,BAL_QTY
                ,SRC_DOC_LINE_OPEN_FLG
                ,ETA_DT
                ,CARR_CD
                ,SCE_ORD_TP_CD
                ,RWS_OPEN_FLG
                ,RWS_NUM
                ,RWS_DTL_LINE_NUM
                ,RWS_REF_NUM
                ,IMPT_INV_BOL_NUM
                ,RWS_STS_CD
                ,ROW_NUMBER() OVER (PARTITION BY SRC_DOC_NUM, SRC_DOC_LINE_NUM, SRC_DOC_LINE_SUB_NUM ORDER BY RWS_NUM DESC)
                                                            AS SORT_NUM
            FROM
            (
                SELECT
                     WO.GLBL_CMPY_CD                            AS GLBL_CMPY_CD
                    ,CASE WO.DS_WRK_ORD_TP_CD 
                        WHEN #dsWrkOrdTpCdKit# THEN -- KIT
                            CASE RH.SCE_ORD_TP_CD
                                WHEN #sceOrdTpCdKc# THEN WOD.EZUPTIME
                                ELSE WO.EZUPTIME
                                END
                        ELSE  --UN KIT
                            CASE RH.SCE_ORD_TP_CD
                                WHEN #sceOrdTpCdKc# THEN WO.EZUPTIME
                                ELSE WOD.EZUPTIME
                                END
                        END                                     AS EZUPTIME
                    ,CASE WO.DS_WRK_ORD_TP_CD 
                        WHEN #dsWrkOrdTpCdKit# THEN -- KIT
                            CASE RH.SCE_ORD_TP_CD
                                WHEN #sceOrdTpCdKc# THEN WOD.EZUPTIMEZONE
                                ELSE WO.EZUPTIMEZONE
                                END
                        ELSE  --UN KIT
                            CASE RH.SCE_ORD_TP_CD
                                WHEN #sceOrdTpCdKc# THEN WO.EZUPTIMEZONE
                                ELSE WOD.EZUPTIMEZONE
                                END
                        END                                     AS EZUPTIMEZONE
                    ,WO.WRK_ORD_NUM                             AS SRC_DOC_NUM
                    ,CASE WO.DS_WRK_ORD_TP_CD 
                        WHEN #dsWrkOrdTpCdKit# THEN -- KIT
                            CASE RH.SCE_ORD_TP_CD
                                WHEN #sceOrdTpCdKc# THEN WOD.WRK_ORD_DTL_LINE_NUM
                                ELSE NULL
                                END
                        ELSE  --UN KIT
                            CASE RH.SCE_ORD_TP_CD
                                WHEN #sceOrdTpCdKc# THEN NULL
                                ELSE WOD.WRK_ORD_DTL_LINE_NUM
                                END
                        END                                     AS SRC_DOC_LINE_NUM
                    ,NULL                                       AS SRC_DOC_LINE_SUB_NUM
                    ,CASE WO.DS_WRK_ORD_TP_CD 
                        WHEN #dsWrkOrdTpCdKit# THEN -- KIT
                            CASE RH.SCE_ORD_TP_CD
                                WHEN #sceOrdTpCdKc# THEN WOD.WRK_ORD_DTL_LINE_NUM
                                ELSE NULL
                                END
                        ELSE  --UN KIT
                            CASE RH.SCE_ORD_TP_CD
                                WHEN #sceOrdTpCdKc# THEN NULL
                                ELSE WOD.WRK_ORD_DTL_LINE_NUM
                                END
                        END                                     AS DPLY_LINE_NUM
                    ,NULL                                       AS DS_ORD_POSN_NUM
                    ,RH.FROM_LOC_CD                             AS PTY_CD
                    ,RW.RTL_WH_NM                               AS PTY_NM
                    ,RD.RTL_WH_CD                               AS RTL_WH_CD
                    ,RD.RTL_SWH_CD                              AS RTL_SWH_CD
                    ,CASE WO.DS_WRK_ORD_TP_CD 
                        WHEN #dsWrkOrdTpCdKit# THEN -- KIT
                            CASE RH.SCE_ORD_TP_CD
                                WHEN #sceOrdTpCdKc# THEN WOD.ORIG_GOODS_MDSE_CD
                                ELSE WO.FNSH_GOODS_MDSE_CD
                                END
                        ELSE  --UN KIT
                            CASE RH.SCE_ORD_TP_CD
                                WHEN #sceOrdTpCdKc# THEN WO.FNSH_GOODS_MDSE_CD
                                ELSE WOD.ORIG_GOODS_MDSE_CD
                                END
                        END                                     AS MDSE_CD
                    ,NULL                                       AS FLIP_MDSE_CD
                    ,NULL                                       AS ASL_MDSE_CD
                    ,RH.SVC_CONFIG_MSTR_PK                      AS SVC_CONFIG_MSTR_PK
                    ,CASE WO.DS_WRK_ORD_TP_CD 
                        WHEN #dsWrkOrdTpCdKit# THEN -- KIT
                            CASE RH.SCE_ORD_TP_CD
                                WHEN #sceOrdTpCdKc# THEN WOD.ORIG_GOODS_ORD_QTY
                                ELSE WO.FNSH_GOODS_ORD_QTY
                                END
                        ELSE  --UN KIT
                            CASE RH.SCE_ORD_TP_CD
                                WHEN #sceOrdTpCdKc# THEN WO.FNSH_GOODS_ORD_QTY
                                ELSE WOD.ORIG_GOODS_ORD_QTY
                                END
                        END                                     AS ORD_QTY
                    ,CASE WO.DS_WRK_ORD_TP_CD 
                        WHEN #dsWrkOrdTpCdKit# THEN -- KIT
                            CASE RH.SCE_ORD_TP_CD
                                WHEN #sceOrdTpCdKc# THEN WOD.ORIG_GOODS_BAL_QTY
                                ELSE WO.FNSH_GOODS_BAL_QTY
                                END
                        ELSE  --UN KIT
                            CASE RH.SCE_ORD_TP_CD
                                WHEN #sceOrdTpCdKc# THEN WO.FNSH_GOODS_BAL_QTY
                                ELSE WOD.ORIG_GOODS_BAL_QTY
                                END
                        END                                     AS BAL_QTY
                    ,CASE WHEN WO.WRK_ORD_STS_CD IN 
                            (#wrkOrdStsAllc#, #wrkOrdStsValid#, #wrkOrdStsShip#, #wrkOrdStsRcv#, #wrkOrdStsRcvComp#) THEN #flgY#
                        ELSE #flgN#
                     END                                        AS SRC_DOC_LINE_OPEN_FLG
                    ,RD.WH_IN_ETA_DT                            AS ETA_DT
                    ,RH.RWS_CARR_CD                             AS CARR_CD
                    ,RH.SCE_ORD_TP_CD                           AS SCE_ORD_TP_CD
                    ,CASE WHEN HS.RWS_OPEN_FLG = #flgY# AND LS.RWS_OPEN_FLG = #flgY# THEN #flgY#
                        ELSE #flgN#
                     END                                        AS RWS_OPEN_FLG
                    ,RD.RWS_NUM                                 AS RWS_NUM
                    ,RD.RWS_DTL_LINE_NUM                        AS RWS_DTL_LINE_NUM
                    ,RH.RWS_REF_NUM                             AS RWS_REF_NUM
                    ,RH.IMPT_INV_BOL_NUM                        AS IMPT_INV_BOL_NUM
                    ,RD.RWS_STS_CD                              AS RWS_STS_CD
                FROM
                     WRK_ORD                WO
                    ,WRK_ORD_DTL            WOD
                    ,SHPG_ORD               SO
                    ,RWS_HDR                RH
                    ,RWS_DTL                RD
                    ,RTL_WH                 RW
                    ,RWS_STS                HS
                    ,RWS_STS                LS
                WHERE
                    WO.EZCANCELFLAG             = '0'
                AND WO.GLBL_CMPY_CD             = WOD.GLBL_CMPY_CD
                AND WO.WRK_ORD_NUM              = WOD.WRK_ORD_NUM
                AND WOD.EZCANCELFLAG            = '0'
                AND WO.GLBL_CMPY_CD             = SO.GLBL_CMPY_CD
                AND WO.WRK_ORD_NUM              = SO.TRX_HDR_NUM
                AND SO.EZCANCELFLAG             = '0'
                AND SO.GLBL_CMPY_CD             = RH.GLBL_CMPY_CD
                AND SO.SO_NUM                   = RH.PO_RCV_TRX_HDR_NUM
                AND RH.EZCANCELFLAG             = '0'
                AND RH.GLBL_CMPY_CD             = RD.GLBL_CMPY_CD
                <!-- START 2021/03/29 F.Deola [QC#58611, ADD] -->
                <isNotNull property="rwsNum">
                AND RH.RWS_NUM                  = #rwsNum#
                </isNotNull>
                <!-- END 2021/03/29 F.Deola [QC#58611, ADD] -->
                AND RH.RWS_NUM                  = RD.RWS_NUM
                AND RD.PO_RCV_TRX_LINE_NUM      = WOD.WRK_ORD_DTL_LINE_NUM  --Notes:Kit, Un-Kit cancel 
                AND RD.EZCANCELFLAG             = '0'
                AND RH.GLBL_CMPY_CD             = RW.GLBL_CMPY_CD
                AND RH.FROM_LOC_CD              = RW.RTL_WH_CD
                AND RW.EZCANCELFLAG             = '0'
                AND RH.GLBL_CMPY_CD             = HS.GLBL_CMPY_CD
                AND RH.RWS_STS_CD               = HS.RWS_STS_CD
                AND HS.EZCANCELFLAG             = '0'
                AND RD.GLBL_CMPY_CD             = LS.GLBL_CMPY_CD
                AND RD.RWS_STS_CD               = LS.RWS_STS_CD
                AND LS.EZCANCELFLAG             = '0'
            )

            -- REMAN
            UNION ALL
            SELECT
                 RO.GLBL_CMPY_CD                            AS GLBL_CMPY_CD
                ,RH.EZUPTIME                                AS EZUPTIME
                ,RH.EZUPTIMEZONE                            AS EZUPTIMEZONE
                ,RO.RMNF_ORD_NUM                            AS SRC_DOC_NUM
                ,RU.RMNF_TASK_NUM                           AS SRC_DOC_LINE_NUM
                ,RU.RMNF_USG_LINE_NUM                       AS SRC_DOC_LINE_SUB_NUM
                ,RU.RMNF_TASK_NUM                           AS DPLY_LINE_NUM
                ,NULL                                       AS DS_ORD_POSN_NUM
                ,RO.RMNF_USG_RTL_WH_CD                      AS PTY_CD
                ,URW.RTL_WH_NM                              AS PTY_NM
                ,RW.RTL_WH_CD                               AS RTL_WH_CD
                ,RSW.RTL_SWH_CD                             AS RTL_SWH_CD
                ,RU.MDSE_CD                                 AS MDSE_CD
                ,NULL                                       AS FLIP_MDSE_CD
                ,NULL                                       AS ASL_MDSE_CD
                ,RH.SVC_CONFIG_MSTR_PK                      AS SVC_CONFIG_MSTR_PK
                ,RU.RMNF_PRT_QTY                            AS ORD_QTY
                ,CASE WHEN HS.RWS_OPEN_FLG = #flgY# THEN RU.RMNF_PRT_QTY
                    ELSE 0
                 END                                        AS BAL_QTY
                ,CASE WHEN HS.RWS_OPEN_FLG = #flgY# AND LS.RWS_OPEN_FLG = #flgY# THEN #flgY#
                    ELSE #flgN#
                 END                                        AS SRC_DOC_LINE_OPEN_FLG
                ,RD.WH_IN_ETA_DT                            AS ETA_DT
                ,RH.RWS_CARR_CD                             AS CARR_CD
                ,RH.SCE_ORD_TP_CD                           AS SCE_ORD_TP_CD
                ,CASE WHEN HS.RWS_OPEN_FLG = #flgY# AND LS.RWS_OPEN_FLG = #flgY# THEN #flgY#
                    ELSE #flgN#
                 END                                        AS RWS_OPEN_FLG
                ,RD.RWS_NUM                                 AS RWS_NUM
                ,RD.RWS_DTL_LINE_NUM                        AS RWS_DTL_LINE_NUM
                ,RH.RWS_REF_NUM                             AS RWS_REF_NUM
                ,RH.IMPT_INV_BOL_NUM                        AS IMPT_INV_BOL_NUM
                ,RD.RWS_STS_CD                              AS RWS_STS_CD
                ,ROW_NUMBER() OVER (PARTITION BY RO.RMNF_ORD_NUM, RU.RMNF_TASK_NUM, RU.RMNF_USG_LINE_NUM ORDER BY RD.RWS_NUM DESC)
                                                            AS SORT_NUM
            FROM
                 RMNF_ORD               RO
                ,RMNF_USG               RU
                ,RTL_SWH                RSW
                ,RTL_WH                 RW
                ,RTL_WH                 URW
                ,RWS_HDR                RH
                ,RWS_DTL                RD
                ,RWS_STS                HS
                ,RWS_STS                LS
            WHERE
                RO.EZCANCELFLAG                 = '0'
            AND RO.GLBL_CMPY_CD                 = RU.GLBL_CMPY_CD
            AND RO.RMNF_ORD_NUM                 = RU.RMNF_ORD_NUM
            AND RU.EZCANCELFLAG                 = '0'
            AND RU.GLBL_CMPY_CD                 = RSW.GLBL_CMPY_CD
            AND RU.RMNF_USG_RTRN_INVTY_LOC_CD   = RSW.INVTY_LOC_CD
            AND RSW.EZCANCELFLAG                = '0'
            AND RSW.GLBL_CMPY_CD                = RW.GLBL_CMPY_CD
            AND RSW.RTL_WH_CD                   = RW.RTL_WH_CD
            AND RW.EZCANCELFLAG                 = '0'
            AND RO.GLBL_CMPY_CD                 = URW.GLBL_CMPY_CD
            AND RO.RMNF_USG_RTL_WH_CD           = URW.RTL_WH_CD
            AND URW.EZCANCELFLAG                = '0'
            AND RO.GLBL_CMPY_CD                 = RH.GLBL_CMPY_CD
            AND RO.RMNF_ORD_NUM                 = RH.PO_RCV_TRX_HDR_NUM
            AND RH.EZCANCELFLAG                 = '0'
            AND RH.GLBL_CMPY_CD                 = HS.GLBL_CMPY_CD
            AND RH.RWS_STS_CD                   = HS.RWS_STS_CD
            AND HS.EZCANCELFLAG                 = '0'
            AND RH.GLBL_CMPY_CD                 = RD.GLBL_CMPY_CD
            <!-- START 2021/03/29 F.Deola [QC#58611, ADD] -->
            <isNotNull property="rwsNum">
            AND RH.RWS_NUM                      = #rwsNum#
            </isNotNull>
            <!-- END 2021/03/29 F.Deola [QC#58611, ADD] -->
            AND RH.RWS_NUM                      = RD.RWS_NUM
            AND RU.RMNF_USG_LINE_NUM            = RD.PO_RCV_TRX_LINE_NUM
            AND RU.MDSE_CD                      = RD.MDSE_CD
            AND RU.RMNF_PRT_QTY                 = RD.RWS_QTY
            AND RD.EZCANCELFLAG                 = '0'
            AND RH.GLBL_CMPY_CD                 = HS.GLBL_CMPY_CD
            AND RH.RWS_STS_CD                   = HS.RWS_STS_CD
            AND HS.EZCANCELFLAG                 = '0'
            AND RD.GLBL_CMPY_CD                 = LS.GLBL_CMPY_CD
            AND RD.RWS_STS_CD                   = LS.RWS_STS_CD
            AND LS.EZCANCELFLAG                 = '0'
        )
        <isNotNull property="whCd">
        , RCV_WH AS (
            SELECT
                  RD.GLBL_CMPY_CD
                 ,RD.RWS_NUM
                 ,RD.RWS_DTL_LINE_NUM
            FROM
                 RWS_DTL                RD
                ,RWS_PUT_AWAY           RPA
                ,RTL_SWH                RSW
                ,RWS_STS                RS
            WHERE
                 RD.EZCANCELFLAG            = '0'
             AND RD.GLBL_CMPY_CD            = RS.GLBL_CMPY_CD
             AND RD.RWS_STS_CD              = RS.RWS_STS_CD
             AND RS.RCV_FLG                 = #flgY#
             AND RS.EZCANCELFLAG            = '0'
             AND RD.GLBL_CMPY_CD            = RPA.GLBL_CMPY_CD
             AND RD.RWS_NUM                 = RPA.RWS_NUM
             AND RD.RWS_DTL_LINE_NUM        = RPA.RWS_DTL_LINE_NUM
             AND RPA.EZCANCELFLAG           = '0'
             AND RPA.GLBL_CMPY_CD           = RSW.GLBL_CMPY_CD
             AND RPA.WH_CD                  = RSW.INVTY_LOC_CD
             AND RSW.EZCANCELFLAG           = '0'
             AND (   RSW.RTL_WH_CD = #whCd#
                  OR EXISTS (SELECT
                                 1
                             FROM
                                 INVTY_ORD_DTL DIOD
                             WHERE
                                 RPA.GLBL_CMPY_CD     = DIOD.GLBL_CMPY_CD
                             AND RPA.RWS_NUM          = DIOD.TRX_REF_NUM
                             AND RPA.RWS_DTL_LINE_NUM = DIOD.TRX_REF_LINE_NUM
                             AND DIOD.TO_RTL_WH_CD    = #whCd#
                             AND DIOD.EZCANCELFLAG    = '0'
                             AND ROWNUM               = 1
                            )
                  )
        )
        </isNotNull>
        , SER AS (
            SELECT
                 SER_INFO.GLBL_CMPY_CD
                ,SER_INFO.SRC_DOC_NUM
                ,SER_INFO.SRC_DOC_LINE_NUM
                ,SER_INFO.SRC_DOC_LINE_SUB_NUM
                ,SER_INFO.SER_NUM_COUNT
                ,SER_INFO.SER_NUM
            FROM
                (
                -- PO SERIAL
                SELECT
                     PSN.GLBL_CMPY_CD       AS GLBL_CMPY_CD
                    ,PSN.KEY_INFO_CD_04     AS SRC_DOC_NUM
                    ,PSN.KEY_INFO_CD_05     AS SRC_DOC_LINE_NUM
                    ,NULL                   AS SRC_DOC_LINE_SUB_NUM
                    ,COUNT(PSN.SER_NUM)     AS SER_NUM_COUNT
                    ,CASE WHEN COUNT(PSN.SER_NUM) = 1 THEN MAX(PSN.SER_NUM)
                        ELSE NULL
                     END                    AS SER_NUM
                FROM
                    PO_SER_NUM PSN
                WHERE
                    PSN.EZCANCELFLAG   = '0'
                GROUP BY
                     PSN.GLBL_CMPY_CD
                    ,PSN.KEY_INFO_CD_04
                    ,PSN.KEY_INFO_CD_05
                
                -- CPO RETURN SERIAL
                UNION ALL
                SELECT
                     CRD.GLBL_CMPY_CD                   AS GLBL_CMPY_CD
                    ,CRD.CPO_ORD_NUM                    AS SRC_DOC_NUM
                    ,CRD.DS_CPO_RTRN_LINE_NUM           AS SRC_DOC_LINE_NUM
                    ,CRD.DS_CPO_RTRN_LINE_SUB_NUM       AS SRC_DOC_LINE_SUB_NU
                    ,1                                  AS SER_NUM_COUNT
                    ,CRD.SER_NUM                        AS SER_NUM
                FROM
                    DS_CPO_RTRN_DTL        CRD
                WHERE
                    CRD.EZCANCELFLAG   = '0'
                
                -- SHIP SERIAL
                UNION ALL
                SELECT
                    SD.GLBL_CMPY_CD            AS GLBL_CMPY_CD
                    ,CASE SO.SCE_ORD_TP_CD
                         WHEN #sceOrdTpCdTr# THEN SD.PRCH_REQ_NUM
                         ELSE SD.TRX_HDR_NUM
                         END                   AS SRC_DOC_NUM
                    ,CASE SO.SCE_ORD_TP_CD
                         WHEN #sceOrdTpCdTr# THEN TO_CHAR(SD.PRCH_REQ_LINE_NUM)
                         ELSE SD.TRX_LINE_NUM
                         END                   AS SRC_DOC_LINE_NUM
                    ,CASE SO.SCE_ORD_TP_CD
                         WHEN #sceOrdTpCdTr# THEN TO_CHAR(SD.PRCH_REQ_LINE_SUB_NUM)
                         ELSE SD.TRX_LINE_SUB_NUM
                         END                   AS SRC_DOC_LINE_SUB_NUM
                    ,COUNT(SN.SER_NUM)         AS SER_NUM_COUNT
                    ,CASE WHEN COUNT(SN.SER_NUM) = 1 THEN MAX(SN.SER_NUM)
                         ELSE NULL
                         END                   AS SER_NUM
                FROM
                     SHPG_ORD_DTL SD
                    ,SHIP_SER_NUM SN
                    ,SHPG_ORD     SO
                WHERE
                    SD.EZCANCELFLAG     = '0'
                AND SD.GLBL_CMPY_CD     = SN.GLBL_CMPY_CD
                AND SD.SO_NUM           = SN.SO_NUM
                AND SD.SO_SLP_NUM       = SN.SO_SLP_NUM
                AND SN.EZCANCELFLAG     = '0'
                AND SD.GLBL_CMPY_CD     = SO.GLBL_CMPY_CD
                AND SD.SO_NUM           = SO.SO_NUM
                AND SO.SCE_ORD_TP_CD    IN (#sceOrdTpCdDt#, #sceOrdTpCdTr#)
                AND SO.EZCANCELFLAG     = '0'
                GROUP BY
                    SD.GLBL_CMPY_CD
                   ,SD.TRX_HDR_NUM
                   ,SD.TRX_LINE_NUM
                   ,SD.TRX_LINE_SUB_NUM
                   ,SD.PRCH_REQ_NUM
                   ,SD.PRCH_REQ_LINE_NUM
                   ,SD.PRCH_REQ_LINE_SUB_NUM
                   ,SO.SCE_ORD_TP_CD
                
                -- RWS SERIAL (WRK_ORD)
                UNION ALL
                SELECT
                     WO_SER.GLBL_CMPY_CD
                    ,WO_SER.SRC_DOC_NUM
                    ,WO_SER.SRC_DOC_LINE_NUM
                    ,WO_SER.SRC_DOC_LINE_SUB_NUM
                    ,COUNT(WO_SER.SER_NUM)          AS SER_NUM_COUNT
                    ,CASE WHEN COUNT(WO_SER.SER_NUM) = 1 THEN MAX(WO_SER.SER_NUM)
                        ELSE NULL
                     END                            AS SER_NUM
                FROM
                    (
                        SELECT
                             WO.GLBL_CMPY_CD                            AS GLBL_CMPY_CD
                            ,WO.WRK_ORD_NUM                             AS SRC_DOC_NUM
                            ,CASE WO.DS_WRK_ORD_TP_CD 
                                WHEN '1' THEN -- KIT
                                    CASE RH.SCE_ORD_TP_CD
                                        WHEN 'KC' THEN WOD.WRK_ORD_DTL_LINE_NUM
                                        ELSE NULL
                                        END
                                ELSE  --UN KIT
                                    CASE RH.SCE_ORD_TP_CD
                                        WHEN 'KC' THEN NULL
                                        ELSE WOD.WRK_ORD_DTL_LINE_NUM
                                        END
                                END                                     AS SRC_DOC_LINE_NUM
                            ,NULL                                       AS SRC_DOC_LINE_SUB_NUM
                            ,RS.SER_NUM                                 AS SER_NUM
                        FROM
                             WRK_ORD        WO
                            ,WRK_ORD_DTL    WOD
                            ,RWS_HDR        RH
                            ,RWS_DTL        RD
                            ,RWS_SER        RS
                        WHERE
                            WO.EZCANCELFLAG     = '0'
                        AND WO.WRK_ORD_NUM      = RD.RWS_NUM
                        AND RD.EZCANCELFLAG     = '0'
                        AND WO.WRK_ORD_NUM      = RH.SRC_ORD_NUM
                        AND RH.EZCANCELFLAG     = '0'
                        AND RH.RWS_NUM          = RD.RWS_NUM
                        AND WOD.WRK_ORD_DTL_LINE_NUM    = RD.PO_RCV_TRX_LINE_NUM
                        AND RD.EZCANCELFLAG     = '0'
                        AND RD.RWS_NUM          = RS.RWS_NUM
                        AND RD.RWS_DTL_LINE_NUM = RS.RWS_LINE_NUM
                        AND RS.EZCANCELFLAG     = '0'
                    ) WO_SER
                GROUP BY
                    WO_SER.GLBL_CMPY_CD
                   ,WO_SER.SRC_DOC_NUM
                   ,WO_SER.SRC_DOC_LINE_NUM
                   ,WO_SER.SRC_DOC_LINE_SUB_NUM
                
                -- RWS SERIAL (REMAN)
                UNION ALL
                SELECT
                     RO.GLBL_CMPY_CD            AS GLBL_CMPY_CD
                    ,RO.RMNF_ORD_NUM            AS SRC_DOC_NUM
                    ,RU.RMNF_TASK_NUM           AS SRC_DOC_LINE_NUM
                    ,RU.RMNF_USG_LINE_NUM       AS SRC_DOC_LINE_SUB_NUM
                    ,COUNT(RS.SER_NUM)          AS SER_NUM_COUNT
                    ,CASE WHEN COUNT(RS.SER_NUM) = 1 THEN MAX(RS.SER_NUM)
                        ELSE NULL
                     END                        AS SER_NUM
                FROM
                     RMNF_ORD               RO
                    ,RMNF_USG               RU
                    ,RWS_HDR                RH
                    ,RWS_DTL                RD
                    ,RWS_SER                RS
                WHERE
                    RO.EZCANCELFLAG         = '0'
                AND RO.GLBL_CMPY_CD         = RU.GLBL_CMPY_CD
                AND RO.RMNF_ORD_NUM         = RU.RMNF_ORD_NUM
                AND RO.EZCANCELFLAG         = '0'
                AND RO.GLBL_CMPY_CD         = RH.GLBL_CMPY_CD
                AND RO.RMNF_ORD_NUM         = RH.PO_RCV_TRX_HDR_NUM
                AND RH.EZCANCELFLAG         = '0'
                AND RH.GLBL_CMPY_CD         = RD.GLBL_CMPY_CD
                AND RH.RWS_NUM              = RD.RWS_NUM
                AND RU.RMNF_USG_LINE_NUM    = RD.PO_RCV_TRX_LINE_NUM
                AND RD.EZCANCELFLAG         = '0'
                AND RD.GLBL_CMPY_CD         = RS.GLBL_CMPY_CD
                AND RD.RWS_NUM              = RS.RWS_NUM
                AND RD.RWS_DTL_LINE_NUM     = RS.RWS_LINE_NUM
                AND RS.EZCANCELFLAG         = '0'
                GROUP BY
                     RO.GLBL_CMPY_CD
                    ,RO.RMNF_ORD_NUM
                    ,RU.RMNF_TASK_NUM
                    ,RU.RMNF_USG_LINE_NUM
                ) SER_INFO
            GROUP BY
             SER_INFO.GLBL_CMPY_CD
            ,SER_INFO.SRC_DOC_NUM
            ,SER_INFO.SRC_DOC_LINE_NUM
            ,SER_INFO.SRC_DOC_LINE_SUB_NUM
            ,SER_INFO.SER_NUM_COUNT
            ,SER_INFO.SER_NUM
        )
        SELECT
            O.GLBL_CMPY_CD
            ,O.EZUPTIME
            ,O.EZUPTIMEZONE
            ,O.SRC_DOC_NUM
            ,O.SRC_DOC_LINE_NUM
            ,O.SRC_DOC_LINE_SUB_NUM
            ,O.DPLY_LINE_NUM
            ,O.DS_ORD_POSN_NUM
            ,O.PTY_CD
            ,O.PTY_NM
            ,O.RTL_WH_CD
            ,RW.RTL_WH_NM
            ,O.RTL_SWH_CD
            ,RSW.RTL_SWH_NM
            ,O.MDSE_CD
            ,MD.MDSE_DESC_SHORT_TXT
            ,MD.COA_MDSE_TP_CD
            ,O.FLIP_MDSE_CD
            ,O.ASL_MDSE_CD
            ,O.SVC_CONFIG_MSTR_PK
            ,O.ORD_QTY
            ,O.BAL_QTY
            ,O.SRC_DOC_LINE_OPEN_FLG
            ,O.ETA_DT
            ,O.CARR_CD
            ,DCC.DS_COND_CONST_VAL_TXT_05              AS SCE_ORD_TP_NM
            ,DCC.DS_COND_CONST_VAL_TXT_04              AS SCE_ORD_TP_CD
            ,SOT.SCE_ORD_TP_SORT_NUM
            ,NVL(DCC.DS_COND_CONST_VAL_TXT_01, #flgN#) AS RWS_CRT_CTRL_FLG
            ,DCC.DS_COND_CONST_VAL_TXT_02              AS RWS_CRT_CTRL_MODE
            ,O.RWS_OPEN_FLG
            ,S.SER_NUM
            ,CASE WHEN S.SER_NUM_COUNT &gt; 1 THEN #flgY#
                ELSE #flgN#
             END  AS SER_NUM_TAKE_FLG
            ,CASE WHEN SRC_DOC_LINE_OPEN_FLG = #flgN# THEN #flgN#
                ELSE NVL(DCC.DS_COND_CONST_VAL_TXT_01, #flgN#)
             END                                       AS RWS_FLG
            ,O.RWS_NUM
        FROM
             SCE_ORDER       O
            ,MDSE           MD
            ,RTL_WH         RW
            ,RTL_SWH        RSW
            ,SCE_ORD_TP     SOT
            ,DS_COND_CONST  DCC
            ,SER            S
        WHERE
            O.GLBL_CMPY_CD              = MD.GLBL_CMPY_CD
        AND O.MDSE_CD                   = MD.MDSE_CD
        AND MD.EZCANCELFLAG             = '0'
        AND O.GLBL_CMPY_CD              = RW.GLBL_CMPY_CD
        AND O.RTL_WH_CD                 = RW.RTL_WH_CD
        AND RW.EZCANCELFLAG             = '0'
        AND O.GLBL_CMPY_CD              = RSW.GLBL_CMPY_CD
        AND O.RTL_WH_CD                 = RSW.RTL_WH_CD
        AND O.RTL_SWH_CD                = RSW.RTL_SWH_CD
        AND RSW.EZCANCELFLAG            = '0' 
        AND O.GLBL_CMPY_CD              = SOT.GLBL_CMPY_CD
        AND O.SCE_ORD_TP_CD             = SOT.SCE_ORD_TP_CD
        AND SOT.INBD_OTBD_CD            = #inbdOtbdCd# -- INBOUND
        AND SOT.EZCANCELFLAG            = '0'
        AND SOT.GLBL_CMPY_CD            = DCC.GLBL_CMPY_CD
        AND SOT.SCE_ORD_TP_CD           = DCC.DS_COND_CONST_VAL_TXT_06
        AND DCC.DS_COND_CONST_GRP_ID    = #NLAL2030_RWS_CTRL#
        AND DCC.EZCANCELFLAG            = '0'
        AND O.GLBL_CMPY_CD              = S.GLBL_CMPY_CD(+)
        AND O.SRC_DOC_NUM               = S.SRC_DOC_NUM(+)
        AND O.SRC_DOC_LINE_NUM          = S.SRC_DOC_LINE_NUM(+)
       AND NVL(O.SRC_DOC_LINE_SUB_NUM, '1') = NVL(S.SRC_DOC_LINE_SUB_NUM(+), '1')
        AND O.GLBL_CMPY_CD              =  #glblCmpyCd#
        <isNotNull property="trxOrdNum">
        AND O.SRC_DOC_NUM               = #trxOrdNum#
        </isNotNull>
        <isNotNull property="mdseCd">
        AND O.MDSE_CD                   = #mdseCd#
        </isNotNull>
        <isNotNull property="flipMdseCd">
        AND O.FLIP_MDSE_CD              = #flipMdseCd#
        </isNotNull>
        <isNotNull property="fromLocCd">
        AND O.PTY_CD                    = #fromLocCd#
        </isNotNull>
        <isNotNull property="rwsRefNum">
        AND O.RWS_REF_NUM               = #rwsRefNum#
        </isNotNull>
        <!-- START 2021/03/29 F.Deola [QC#58611, DEL] -->
        <!-- <isNotNull property="rwsNum">
        AND O.RWS_NUM                   = #rwsNum#
        </isNotNull> -->
        <!-- END 2021/03/29 F.Deola [QC#58611, DEL] -->
        <isNotNull property="imptInvBolNum">
        AND O.IMPT_INV_BOL_NUM          = #imptInvBolNum#
        </isNotNull>
        <isNotNull property="carrCd">
        AND O.CARR_CD                   = #carrCd#
        </isNotNull>
        <isNotNull property="svcConfigMstrPk">
        AND O.SVC_CONFIG_MSTR_PK        = #svcConfigMstrPk#
        </isNotNull>
        <isNotNull property="rwsStsCd">
        AND O.RWS_STS_CD                = #rwsStsCd#
        </isNotNull>
        <isNotNull property="whInEtaDt_FR">
        AND O.ETA_DT                &gt;= #whInEtaDt_FR#
        </isNotNull>
        <isNotNull property="whInEtaDt_TO">
        AND O.ETA_DT                &lt;= #whInEtaDt_TO#
        </isNotNull>
        <isNotNull property="rtlWhCd">
        AND O.RTL_WH_CD                 = #rtlWhCd#
        </isNotNull>
        <isNotNull property="rtlSwhCd">
        AND O.RTL_SWH_CD                = #rtlSwhCd#
        </isNotNull>
        <isNotNull property="serNum">
        AND S.SER_NUM                   = #serNum#
        </isNotNull>
        <isNotNull property="sceOrdTpList">
            <iterate property="sceOrdTpList" var="sceOrdTpList[]" open="AND O.SCE_ORD_TP_CD IN (" conjunction= ", " close=")">
                #sceOrdTpList[]#
            </iterate>
        </isNotNull>
        
        <isNotNull property="whCd">
        AND EXISTS (
                SELECT 1
                FROM RCV_WH RCV
                WHERE
                    RCV.GLBL_CMPY_CD        = O.GLBL_CMPY_CD
                AND RCV.RWS_NUM             = O.RWS_NUM
                AND RCV.RWS_DTL_LINE_NUM    = O.RWS_DTL_LINE_NUM
            )
        </isNotNull>
        AND ROWNUM &lt; #rowNum#
        AND SORT_NUM = 1
        ORDER BY
             O.SRC_DOC_NUM
            ,O.SRC_DOC_LINE_NUM
            ,O.SRC_DOC_LINE_SUB_NUM
    </statement>

    <resultMap id="result.searchOrd" class="NLAL2030_ASMsg">
        <result property="ezUpTime_A1"          column="EZUPTIME"               javaType="EZDSStringItem"/>
        <result property="ezUpTimeZone_A1"      column="EZUPTIMEZONE"           javaType="EZDSStringItem"/>
        <result property="trxOrdNum_A1"         column="SRC_DOC_NUM"            javaType="EZDSStringItem"/>
        <result property="trxLineNum_A1"        column="SRC_DOC_LINE_NUM"       javaType="EZDSStringItem"/>
        <result property="trxLineSubNum_A1"     column="SRC_DOC_LINE_SUB_NUM"   javaType="EZDSStringItem"/>
        <result property="dplyLineNum_A1"       column="DPLY_LINE_NUM"          javaType="EZDSStringItem"/>
        <result property="dsOrdPosnNum_A1"      column="DS_ORD_POSN_NUM"        javaType="EZDSStringItem"/>
        <result property="fromLocCd_A1"         column="PTY_CD"                 javaType="EZDSStringItem"/>
        <result property="dsAcctNm_A1"          column="PTY_NM"                 javaType="EZDSStringItem"/>
        <result property="rtlWhCd_A1"           column="RTL_WH_CD"              javaType="EZDSStringItem"/>
        <result property="rtlWhNm_A1"           column="RTL_WH_NM"              javaType="EZDSStringItem"/>
        <result property="rtlSwhCd_A1"          column="RTL_SWH_CD"             javaType="EZDSStringItem"/>
        <result property="rtlSwhNm_A1"          column="RTL_SWH_NM"             javaType="EZDSStringItem"/>
        <result property="mdseCd_A1"            column="MDSE_CD"                javaType="EZDSStringItem"/>
        <result property="mdseDescShortTxt_A1"  column="MDSE_DESC_SHORT_TXT"    javaType="EZDSStringItem"/>
        <result property="coaMdseTpCd_A1"       column="COA_MDSE_TP_CD"         javaType="EZDSStringItem"/>
        <result property="flipMdseCd_A1"        column="FLIP_MDSE_CD"           javaType="EZDSStringItem"/>
        <result property="aslMdseCd_A1"         column="ASL_MDSE_CD"            javaType="EZDSStringItem"/>
        <result property="svcConfigMstrPk_A1"   column="SVC_CONFIG_MSTR_PK"     javaType="EZDSBigDecimalItem"/>
        <result property="rwsQty_A1"            column="ORD_QTY"                javaType="EZDSBigDecimalItem"/>
        <result property="xxQty10Num_A1"        column="BAL_QTY"                javaType="EZDSBigDecimalItem"/>
        <result property="rwsFlg_A1"            column="RWS_FLG"                javaType="EZDSStringItem"/>
        <result property="sceOrdTpNm_A1"        column="SCE_ORD_TP_NM"          javaType="EZDSStringItem"/>
        <result property="sceOrdTpCd_A1"        column="SCE_ORD_TP_CD"          javaType="EZDSStringItem"/>
        <result property="procModeCd_A1"        column="RWS_CRT_CTRL_MODE"      javaType="EZDSStringItem"/>
        <result property="serNum_A1"            column="SER_NUM"                javaType="EZDSStringItem"/>
        <result property="serNumTakeFlg_A1"     column="SER_NUM_TAKE_FLG"       javaType="EZDSStringItem"/>
        <result property="rwsNum_A1"            column="RWS_NUM"                javaType="EZDSStringItem"/>
        <result property="rwsOpenFlg_A1"        column="RWS_OPEN_FLG"           javaType="EZDSStringItem"/>
    </resultMap>

    <statement id="getRwsAllView" parameterClass="Map" resultClass="Map">
   WITH RWS_ALL
           AS (SELECT 
                      D.EZCANCELFLAG
                      ,D.EZINTIME
                      ,D.EZINTIMEZONE
                      ,D.EZINCOMPANYCODE
                      ,D.EZINUSERID
                      ,D.EZINAPLID
                      ,D.EZUPTIME
                      ,D.EZUPTIMEZONE
                      ,D.EZUPCOMPANYCODE
                      ,D.EZUPUSERID
                      ,D.EZUPAPLID
                      ,D.GLBL_CMPY_CD
                      ,R.RWS_NUM
                      ,R.RWS_STS_CD AS RWS_HDR_STS_CD
                      ,D.RWS_DTL_LINE_NUM
                      ,D.RWS_STS_CD AS RWS_DTL_STS_CD
                      ,D.MDSE_CD
                      ,R.SCE_ORD_TP_CD
                      ,R.RWS_REF_NUM
                      ,R.IMPT_INV_BOL_NUM
                      ,R.FROM_LOC_CD
                      ,R.FROM_LOC_TP_CD
                      ,R.FROM_LOC_NM_01
                      ,R.FROM_LOC_ADDR_01
                      ,R.FROM_LOC_ADDR_02
                      ,R.FROM_LOC_ADDR_03
                      ,R.FROM_LOC_ADDR_04
                      ,R.FROM_LOC_CTY_ADDR
                      ,R.FROM_LOC_ST_CD
                      ,R.FROM_LOC_CTRY_CD
                      ,R.FROM_LOC_PSN_NM
                      ,R.FROM_LOC_TEL_NUM
                      ,R.WMS_DROP_STS_CD
                      ,R.RWS_CARR_CD
                      ,D.INVTY_STK_STS_CD
                      ,D.WH_IN_ETA_DT
                      ,D.RWS_QTY
                      ,D.RWS_PUT_AWAY_QTY
                      ,R.TRX_ORD_NUM
                      ,D.TRX_LINE_NUM
                      ,D.TRX_LINE_SUB_NUM
                      ,R.PO_RCV_TRX_HDR_NUM
                      ,D.PO_RCV_TRX_LINE_NUM
                      ,R.TRX_SRC_TP_CD
                      ,R.PICK_UP_RQST_FLG
                      ,R.PICK_UP_RQST_TS
                      ,R.SVC_CONFIG_MSTR_PK
                      ,R.SHIP_FROM_SO_NUM
                      ,D.RTL_WH_CD
                      ,D.RTL_SWH_CD
                      ,D.INVTY_LOC_CD
                      ,D.SHIP_FROM_RTL_WH_CD
                      ,D.SHIP_FROM_RTL_SWH_CD
                      ,D.SHIP_FROM_INVTY_LOC_CD
                      ,D.PRCH_REQ_NUM
                      ,D.PRCH_REQ_LINE_NUM
                      ,D.PRCH_REQ_LINE_SUB_NUM
                      ,D.ACTL_PICK_UP_DT
                      ,D.INSP_CPLT_DT
                      ,D.THIRD_PTY_DSP_TP_CD
                      ,D.CARR_CD
                      ,D.SCHD_COORD_STS_CD
                      ,D.SCHD_COORD_PSN_CD
                      ,D.SCHD_PICK_UP_DT
                      ,D.SHPG_SVC_LVL_CD
                      ,D.RTRN_TRK_STS_CD
                      ,D.RTRN_TRK_NTFY_GRP_CD
                 FROM
                      RWS_HDR R
                    , RWS_DTL D
                WHERE     D.GLBL_CMPY_CD = R.GLBL_CMPY_CD
                      AND D.RWS_NUM = R.RWS_NUM
                      AND D.EZCANCELFLAG = '0'
                      AND R.GLBL_CMPY_CD = #glblCmpyCd#
                      AND R.RWS_NUM      = #rwsNum#
                      AND R.EZCANCELFLAG = '0'
                      )
   SELECT
           RA.EZCANCELFLAG
          ,RA.EZINTIME
          ,RA.EZINTIMEZONE
          ,RA.EZINCOMPANYCODE
          ,RA.EZINUSERID
          ,RA.EZINAPLID
          ,RA.EZUPTIME
          ,RA.EZUPTIMEZONE
          ,RA.EZUPCOMPANYCODE
          ,RA.EZUPUSERID
          ,RA.EZUPAPLID
          ,RA.GLBL_CMPY_CD
          ,RA.RWS_NUM
          ,RA.RWS_HDR_STS_CD
          ,HS.RWS_STS_DESC_TXT
          ,HS.RWS_OPEN_FLG
          ,HS.RCV_FLG
          ,RC.RWS_CLO_DT_TM_TS
          ,RA.RWS_DTL_LINE_NUM
          ,RA.RWS_DTL_STS_CD
          ,LS.RWS_STS_DESC_TXT
          ,LS.RWS_OPEN_FLG
          ,LS.RCV_FLG
          ,RA.MDSE_CD
          ,DECODE (MD.MDSE_CD,
                  NULL, OMD.MDSE_DESC_SHORT_TXT,
                  MD.MDSE_DESC_SHORT_TXT)   AS MDSE_DESC_SHORT_TXT
          ,DECODE (MD.MDSE_CD, NULL, OMD.INVTY_CTRL_FLG, MD.INVTY_CTRL_FLG) AS INVTY_CTRL_FLG
          ,DECODE (MD.MDSE_CD, NULL, OMD.COA_MDSE_TP_CD, MD.COA_MDSE_TP_CD) AS COA_MDSE_TP_CD
          ,DECODE (MD.MDSE_CD,
                  NULL, OMD.INSTL_BASE_CTRL_FLG,
                  MD.INSTL_BASE_CTRL_FLG)   AS INSTL_BASE_CTRL_FLG
          ,RA.SCE_ORD_TP_CD
          ,ST.SCE_ORD_TP_NM
          ,RA.TRX_SRC_TP_CD
          ,RA.RWS_REF_NUM
          ,RA.IMPT_INV_BOL_NUM
          ,RW.RWS_PRIN_REQ_FLG
          ,CASE WHEN RA.WMS_DROP_STS_CD = #wmsDropStsCd# THEN 'Y' ELSE 'N' END AS WMS_DROP_FLG
          ,RA.RTL_WH_CD         AS RCV_RTL_WH_CD
          ,RW.RTL_WH_NM         AS RCV_RTL_WH_NM
          ,RA.RTL_SWH_CD        AS RCV_RTL_SWH_CD
          ,RSW.RTL_SWH_NM       AS RCV_RTL_SWH_NM
          ,RA.INVTY_LOC_CD      AS RCV_INVTY_LOC_CD
          ,RW.INVTY_ACCT_CD     AS RCV_INVTY_ACCT_CD
          ,RW.INVTY_OWNR_CD     AS RCV_INVTY_OWNR_CD
          ,IO.CMPY_INVTY_FLG    AS RCV_CMPY_INVTY_FLG
          ,RW.WH_OWNR_CD        AS RCV_WH_OWNR_CD
          ,RW.WH_SYS_TP_CD      AS RCV_WH_SYS_TP_CD
          ,RA.FROM_LOC_CD
          ,RA.SHIP_FROM_RTL_WH_CD
          ,RA.SHIP_FROM_RTL_SWH_CD
          ,RA.SHIP_FROM_INVTY_LOC_CD
          ,RA.FROM_LOC_TP_CD
          ,LT.LOC_TP_DESC_TXT
          ,CASE
             WHEN RA.FROM_LOC_TP_CD = #fromLocTpCust#
             THEN
                NVL (AC.DS_ACCT_NM, RA.FROM_LOC_NM_01)
             ELSE
                RA.FROM_LOC_NM_01
          END   AS SHIP_FROM_LOC_NM
          ,RA.FROM_LOC_ADDR_01
          ,RA.FROM_LOC_ADDR_02
          ,RA.FROM_LOC_ADDR_03
          ,RA.FROM_LOC_ADDR_04
          ,RA.FROM_LOC_CTY_ADDR
          ,RA.FROM_LOC_ST_CD
          ,RA.FROM_LOC_CTRY_CD
          ,RA.FROM_LOC_PSN_NM
          ,RA.FROM_LOC_TEL_NUM
          ,NVL (RA.CARR_CD, RA.RWS_CARR_CD)
          ,DECODE (RA.CARR_CD, NULL, RV.LOC_NM, SV.LOC_NM)  AS CARR_NM
          ,CASE
             WHEN WO.MAN_SEND_RQST_FLG = 'Y'
             THEN
                'Y'
             WHEN DECODE (RA.CARR_CD,
                          NULL, RCT.MAN_SEND_RQST_FLG,
                          SCT.MAN_SEND_RQST_FLG) = 'Y'
             THEN
                'Y'
             ELSE
                'N'
          END   AS MAN_SEND_RQST_FLG
          ,CASE
             WHEN RA.PICK_UP_RQST_FLG = 'Y' THEN 'Y'
             WHEN RA.PICK_UP_RQST_TS IS NOT NULL THEN 'Y'
             ELSE 'N'
          END   AS SEND_RQST_FLG
          ,RA.PICK_UP_RQST_FLG
          ,RA.PICK_UP_RQST_TS
          ,RA.SVC_CONFIG_MSTR_PK
          ,RA.SHIP_FROM_SO_NUM
          ,RA.INVTY_STK_STS_CD
          ,RA.WH_IN_ETA_DT
          ,RA.RWS_QTY
          ,RA.RWS_PUT_AWAY_QTY
          ,RA.RWS_QTY - RA.RWS_PUT_AWAY_QTY AS RWS_BAL_QTY
          ,CASE
             WHEN RA.SCE_ORD_TP_CD = #sceOrdTpRM# THEN DIOD.TRX_REF_NUM
             <!-- START 2023/05/09 A.Cullano [QC#61461, ADD] -->
             WHEN PD.PO_ORD_NUM IS NOT NULL AND RA.PRCH_REQ_NUM IS NOT NULL THEN PD.PO_ORD_NUM
             <!-- END 2023/05/09 A.Cullano [QC#61461, ADD] -->
             WHEN RA.PRCH_REQ_NUM IS NOT NULL THEN RA.PRCH_REQ_NUM
             WHEN PD.PO_ORD_NUM IS NOT NULL THEN PD.PO_ORD_NUM
             WHEN CRD.CPO_ORD_NUM IS NOT NULL THEN CRD.CPO_ORD_NUM
             WHEN PSO.SO_NUM IS NOT NULL THEN PSO.TRX_HDR_NUM
             WHEN TSO.SO_NUM IS NOT NULL THEN TSO.TRX_HDR_NUM
          END AS SRC_ORD_NUM
          ,CASE
             WHEN RA.SCE_ORD_TP_CD = #sceOrdTpRM# THEN DIOD.TRX_REF_LINE_NUM
             <!-- START 2023/05/09 A.Cullano [QC#61461, ADD] -->
             WHEN PD.PO_ORD_NUM IS NOT NULL AND RA.PRCH_REQ_NUM IS NOT NULL THEN PD.PO_ORD_DTL_LINE_NUM
             <!-- END 2023/05/09 A.Cullano [QC#61461, ADD] -->
             WHEN RA.PRCH_REQ_NUM IS NOT NULL THEN RA.PRCH_REQ_LINE_NUM
             WHEN PD.PO_ORD_NUM IS NOT NULL THEN PD.PO_ORD_DTL_LINE_NUM
             WHEN CRD.CPO_ORD_NUM IS NOT NULL THEN CRD.DS_CPO_RTRN_LINE_NUM
             WHEN PSO.SO_NUM IS NOT NULL THEN PSO.TRX_LINE_NUM
             WHEN TSO.SO_NUM IS NOT NULL THEN TSO.TRX_LINE_NUM
          END   AS SRC_ORD_LINE_NUM
          ,CASE
             WHEN RA.SCE_ORD_TP_CD = #sceOrdTpRM#
             THEN
                DIOD.TRX_REF_LINE_SUB_NUM
             WHEN RA.PRCH_REQ_NUM IS NOT NULL
             THEN
                TO_CHAR (RA.PRCH_REQ_LINE_SUB_NUM)
             WHEN PD.PO_ORD_NUM IS NOT NULL
             THEN
                NULL
             WHEN CRD.CPO_ORD_NUM IS NOT NULL
             THEN
                CRD.DS_CPO_RTRN_LINE_SUB_NUM
             WHEN PSO.SO_NUM IS NOT NULL
             THEN
                PSO.TRX_LINE_SUB_NUM
             WHEN TSO.SO_NUM IS NOT NULL
             THEN
                TSO.TRX_LINE_SUB_NUM
          END   AS SRC_ORD_LINE_SUB_NUM
          ,PD.PO_ORD_NUM
          ,PD.PO_ORD_DTL_LINE_NUM
          ,CRD.CPO_ORD_NUM
          ,CRD.DS_ORD_POSN_NUM
          ,CRD.DS_CPO_RTRN_LINE_NUM
          ,CRD.DS_CPO_RTRN_LINE_SUB_NUM
          ,RA.PRCH_REQ_NUM
          ,RA.PRCH_REQ_LINE_NUM
          ,RA.PRCH_REQ_LINE_SUB_NUM
          ,NVL (PSO.SO_NUM, TSO.SO_NUM) AS SO_NUM
          ,NVL (PSO.SO_SLP_NUM, TSO.SO_SLP_NUM) AS SO_SLP_NUM
          ,RA.TRX_ORD_NUM
          ,RA.TRX_LINE_NUM
          ,RA.TRX_LINE_SUB_NUM
          ,RA.PO_RCV_TRX_HDR_NUM
          ,RA.PO_RCV_TRX_LINE_NUM
          ,RA.SCHD_COORD_STS_CD
          ,SCS.SCHD_COORD_STS_DESC_TXT
          ,SCS.SCHD_OPEN_FLG
          ,SCS.SCHD_CONF_FLG
          ,RA.SCHD_COORD_PSN_CD
          ,PSN.PSN_FIRST_NM || PSN.PSN_LAST_NM
          ,RA.SCHD_PICK_UP_DT
          ,RA.ACTL_PICK_UP_DT
          ,RA.INSP_CPLT_DT
          ,RA.SHPG_SVC_LVL_CD
          ,SSL.SHPG_SVC_LVL_DESC_TXT
          ,RA.RTRN_TRK_STS_CD
          ,RTS.RTRN_TRK_STS_DESC_TXT
          ,NVL (RTS.NTFY_ML_SEND_FLG, 'N')
          ,RA.RTRN_TRK_NTFY_GRP_CD
          ,RTNG.RTRN_TRK_NTFY_GRP_DESC_TXT
          ,RA.THIRD_PTY_DSP_TP_CD
          ,CASE
             WHEN RA.SCE_ORD_TP_CD = #sceOrdTpDT# THEN PSO.TRX_HDR_NUM
             WHEN RA.SCE_ORD_TP_CD = #sceOrdTpRM# THEN DIOD.TRX_REF_NUM
             WHEN PD.PO_ORD_NUM IS NOT NULL THEN PD.PO_ORD_NUM
             WHEN CRD.CPO_ORD_NUM IS NOT NULL THEN CRD.CPO_ORD_NUM
             WHEN RA.PRCH_REQ_NUM IS NOT NULL THEN RA.PRCH_REQ_NUM
             WHEN PSO.SO_NUM IS NOT NULL THEN PSO.TRX_HDR_NUM
             WHEN TSO.SO_NUM IS NOT NULL THEN TSO.TRX_HDR_NUM
          END   AS SER_ALLOC_TRX_HDR_NUM
          ,CASE
             WHEN RA.SCE_ORD_TP_CD = #sceOrdTpDT# THEN PSO.TRX_LINE_NUM
             WHEN RA.SCE_ORD_TP_CD = #sceOrdTpRM# THEN DIOD.TRX_REF_LINE_NUM
             WHEN PD.PO_ORD_NUM IS NOT NULL THEN PD.PO_ORD_DTL_LINE_NUM
             WHEN CRD.CPO_ORD_NUM IS NOT NULL THEN CRD.DS_CPO_RTRN_LINE_NUM
             WHEN RA.PRCH_REQ_NUM IS NOT NULL THEN RA.PRCH_REQ_LINE_NUM
             WHEN PSO.SO_NUM IS NOT NULL THEN PSO.TRX_LINE_NUM
             WHEN TSO.SO_NUM IS NOT NULL THEN TSO.TRX_LINE_NUM
          END   AS SER_ALLOC_TRX_LINE_NUM
          ,CASE
             WHEN RA.SCE_ORD_TP_CD = 'DT'
             THEN
                PSO.TRX_LINE_SUB_NUM
             WHEN RA.SCE_ORD_TP_CD = 'RM'
             THEN
                DIOD.TRX_REF_LINE_SUB_NUM
             WHEN PD.PO_ORD_NUM IS NOT NULL
             THEN
                NULL
             WHEN CRD.CPO_ORD_NUM IS NOT NULL
             THEN
                CRD.DS_CPO_RTRN_LINE_SUB_NUM
             WHEN RA.PRCH_REQ_NUM IS NOT NULL
             THEN
                TO_CHAR (RA.PRCH_REQ_LINE_SUB_NUM)
             WHEN PSO.SO_NUM IS NOT NULL
             THEN
                PSO.TRX_LINE_SUB_NUM
             WHEN TSO.SO_NUM IS NOT NULL
             THEN
                TSO.TRX_LINE_SUB_NUM
          END   AS SER_ALLOC_TRX_LINE_SUB_NUM
     FROM
           RWS_ALL RA
          ,RWS_CPLT RC
          ,RWS_STS HS
          ,RWS_STS LS
          ,SCE_ORD_TP ST
          ,MDSE MD
          ,ORD_TAKE_MDSE OTM
          ,MDSE OMD
          ,SHIP_TO_CUST SC
          ,SELL_TO_CUST AC
          ,LOC_TP LT
          ,RTRN_TRK_STS RTS
          ,RTRN_TRK_NTFY_GRP RTNG
          ,SCHD_COORD_STS SCS
          ,S21_PSN PSN
          ,RTL_WH RW
          ,RTL_SWH RSW
          ,INVTY_OWNR IO
          ,WH_OWNR WO
          ,SHPG_ORD_DTL PSO
          ,SHPG_ORD_DTL TSO
          ,DS_CPO_RTRN_DTL CRD
          ,PO_DTL PD
          ,INVTY_ORD_DTL DIOD
          ,VND RV
          ,CARR_TP RCT
          ,VND SV
          ,CARR_TP SCT
          ,SHPG_SVC_LVL SSL
    WHERE     
              RC.GLBL_CMPY_CD(+) = RA.GLBL_CMPY_CD
          AND RC.RWS_NUM(+) = RA.RWS_NUM
          AND RC.EZCANCELFLAG(+) = '0'
          AND HS.GLBL_CMPY_CD = RA.GLBL_CMPY_CD
          AND HS.RWS_STS_CD = RA.RWS_HDR_STS_CD
          AND HS.EZCANCELFLAG = '0'
          AND LS.GLBL_CMPY_CD = RA.GLBL_CMPY_CD
          AND LS.RWS_STS_CD = RA.RWS_DTL_STS_CD
          AND LS.EZCANCELFLAG = '0'
          AND ST.GLBL_CMPY_CD = RA.GLBL_CMPY_CD
          AND ST.SCE_ORD_TP_CD = RA.SCE_ORD_TP_CD
          AND ST.INBD_OTBD_CD = #inbdCd#
          AND ST.EZCANCELFLAG = '0'
          AND LT.GLBL_CMPY_CD = RA.GLBL_CMPY_CD
          AND LT.LOC_TP_CD = RA.FROM_LOC_TP_CD
          AND LT.EZCANCELFLAG = '0'
          -- SO
          AND PSO.GLBL_CMPY_CD(+) = RA.GLBL_CMPY_CD
          AND PSO.SO_NUM(+) = RA.PO_RCV_TRX_HDR_NUM
          AND PSO.SO_SLP_NUM(+) = RA.PO_RCV_TRX_LINE_NUM
          AND PSO.EZCANCELFLAG(+) = '0'
          AND TSO.GLBL_CMPY_CD(+) = RA.GLBL_CMPY_CD
          AND TSO.SO_NUM(+) = RA.TRX_ORD_NUM
          AND TSO.SO_SLP_NUM(+) = RA.TRX_LINE_NUM
          AND TSO.EZCANCELFLAG(+) = '0'
          -- Inventory Order
          AND DIOD.GLBL_CMPY_CD(+) = TSO.GLBL_CMPY_CD
          AND DIOD.INVTY_ORD_NUM(+) = TSO.TRX_HDR_NUM
          AND DIOD.INVTY_ORD_LINE_NUM(+) = TSO.TRX_LINE_NUM
          AND DIOD.EZCANCELFLAG(+) = '0'
          -- PO
          AND PD.GLBL_CMPY_CD(+) = RA.GLBL_CMPY_CD
          AND PD.PO_ORD_NUM(+) = RA.PO_RCV_TRX_HDR_NUM
          AND PD.PO_ORD_DTL_LINE_NUM(+) = RA.PO_RCV_TRX_LINE_NUM
          AND PD.EZCANCELFLAG(+) = '0'
          -- CPO
          AND CRD.GLBL_CMPY_CD(+) = RA.GLBL_CMPY_CD
          AND CRD.CPO_ORD_NUM(+) = RA.TRX_ORD_NUM
          AND CRD.DS_CPO_RTRN_LINE_NUM(+) = RA.TRX_LINE_NUM
          AND CRD.DS_CPO_RTRN_LINE_SUB_NUM(+) = RA.TRX_LINE_SUB_NUM
          AND CRD.EZCANCELFLAG(+) = '0'
          -- Retail WH
          AND RW.GLBL_CMPY_CD = RA.GLBL_CMPY_CD
          AND RW.RTL_WH_CD = RA.RTL_WH_CD
          AND RW.EZCANCELFLAG = '0'
          AND WO.GLBL_CMPY_CD(+) = RW.GLBL_CMPY_CD
          AND WO.WH_OWNR_CD(+) = RW.WH_OWNR_CD
          AND WO.EZCANCELFLAG(+) = '0'
          AND IO.GLBL_CMPY_CD(+) = RW.GLBL_CMPY_CD
          AND IO.INVTY_OWNR_CD(+) = RW.INVTY_OWNR_CD
          AND IO.EZCANCELFLAG(+) = '0'
          AND RSW.GLBL_CMPY_CD = RA.GLBL_CMPY_CD
          AND RSW.RTL_WH_CD = RA.RTL_WH_CD
          AND RSW.RTL_SWH_CD = RA.RTL_SWH_CD
          AND RSW.EZCANCELFLAG = '0'
          -- Schedule
          AND RTS.GLBL_CMPY_CD(+) = RA.GLBL_CMPY_CD
          AND RTS.RTRN_TRK_STS_CD(+) = RA.RTRN_TRK_STS_CD
          AND RTS.EZCANCELFLAG(+) = '0'
          AND RTNG.GLBL_CMPY_CD(+) = RA.GLBL_CMPY_CD
          AND RTNG.RTRN_TRK_NTFY_GRP_CD(+) = RA.RTRN_TRK_NTFY_GRP_CD
          AND RTNG.EZCANCELFLAG(+) = '0'
          AND PSN.GLBL_CMPY_CD(+) = RA.GLBL_CMPY_CD
          AND PSN.PSN_CD(+) = RA.SCHD_COORD_PSN_CD
          AND PSN.EZCANCELFLAG(+) = '0'
          AND SCS.GLBL_CMPY_CD(+) = RA.GLBL_CMPY_CD
          AND SCS.SCHD_COORD_STS_CD(+) = RA.SCHD_COORD_STS_CD
          AND SCS.EZCANCELFLAG(+) = '0'
          AND SSL.GLBL_CMPY_CD(+) = RA.GLBL_CMPY_CD
          AND SSL.SHPG_SVC_LVL_CD(+) = RA.SHPG_SVC_LVL_CD
          AND SSL.EZCANCELFLAG(+) = '0'
          -- MDSE
          AND MD.GLBL_CMPY_CD(+) = RA.GLBL_CMPY_CD
          AND MD.MDSE_CD(+) = RA.MDSE_CD
          AND MD.EZCANCELFLAG(+) = '0'
          AND OTM.GLBL_CMPY_CD(+) = RA.GLBL_CMPY_CD
          AND OTM.ORD_TAKE_MDSE_CD(+) = RA.MDSE_CD
          AND OTM.EZCANCELFLAG(+) = '0'
          AND OMD.GLBL_CMPY_CD(+) = OTM.GLBL_CMPY_CD
          AND OMD.MDSE_CD(+) = OTM.MDSE_CD
          AND OMD.EZCANCELFLAG(+) = '0'
          -- Ship To
          AND SC.GLBL_CMPY_CD(+) = RA.GLBL_CMPY_CD
          AND SC.SHIP_TO_CUST_CD(+) = RA.SHIP_FROM_INVTY_LOC_CD
          AND SC.EZCANCELFLAG(+) = '0'
          AND AC.GLBL_CMPY_CD(+) = SC.GLBL_CMPY_CD
          AND AC.SELL_TO_CUST_CD(+) = SC.SELL_TO_CUST_CD
          AND AC.EZCANCELFLAG(+) = '0'
          -- Carrier
          AND SV.GLBL_CMPY_CD(+) = RA.GLBL_CMPY_CD
          AND SV.VND_CD(+) = RA.CARR_CD
          AND SV.EZCANCELFLAG(+) = '0'
          AND SCT.GLBL_CMPY_CD(+) = SV.GLBL_CMPY_CD
          AND SCT.CARR_TP_CD(+) = SV.CARR_TP_CD
          AND SCT.EZCANCELFLAG(+) = '0'
          AND RV.GLBL_CMPY_CD(+) = RA.GLBL_CMPY_CD
          AND RV.VND_CD(+) = RA.RWS_CARR_CD
          AND RV.EZCANCELFLAG(+) = '0'
          AND RCT.GLBL_CMPY_CD(+) = RV.GLBL_CMPY_CD
          AND RCT.CARR_TP_CD(+) = RV.CARR_TP_CD
          AND RCT.EZCANCELFLAG(+) = '0'
          ORDER BY
               RA.RWS_NUM
              ,RA.RWS_DTL_LINE_NUM
    </statement>

    <statement id="searchOrdDl" parameterClass="Map" resultClass="Map">
        WITH SCE_ORDER AS (
            -- PO
            SELECT
                 PH.GLBL_CMPY_CD                    AS GLBL_CMPY_CD
                ,PD.EZUPTIME                        AS EZUPTIME
                ,PD.EZUPTIMEZONE                    AS EZUPTIMEZONE
                ,PH.PO_ORD_NUM                      AS SRC_DOC_NUM
                ,PD.PO_ORD_DTL_LINE_NUM             AS SRC_DOC_LINE_NUM
                ,NULL                               AS SRC_DOC_LINE_SUB_NUM
                ,PD.DISP_PO_DTL_LINE_NUM            AS DPLY_LINE_NUM
                ,NULL                               AS DS_ORD_POSN_NUM
                ,PH.VND_CD                          AS PTY_CD
                ,PV.PRNT_VND_NM || ' - ' || V.LOC_NM   AS PTY_NM  <!-- QC#56542 2020/04/27 PO_VND_V to VND -->
                ,PD.DEST_RTL_WH_CD                  AS RTL_WH_CD
                ,PD.DEST_RTL_SWH_CD                 AS RTL_SWH_CD
                ,NVL(PD.ORIG_MDSE_CD, PD.MDSE_CD)   AS MDSE_CD
                ,CASE WHEN PD.ORIG_MDSE_CD IS NOT NULL AND PD.ORIG_MDSE_CD != PD.MDSE_CD THEN PD.MDSE_CD
                     ELSE NULL
                 END                                AS FLIP_MDSE_CD
                ,PD.ASL_MDSE_CD                     AS ASL_MDSE_CD
                ,PD.SVC_CONFIG_MSTR_PK              AS SVC_CONFIG_MSTR_PK
                ,PD.PO_QTY                          AS ORD_QTY
                ,PD.PO_BAL_QTY                      AS BAL_QTY
                ,CASE WHEN PD.PO_BAL_QTY = 0 THEN #flgN#
                    ELSE PS.OPEN_PO_FLG
                 END                                AS SRC_DOC_LINE_OPEN_FLG
                ,PD.ETA_DT                          AS ETA_DT
                ,PD.CARR_CD                         AS CARR_CD
                ,RH.SCE_ORD_TP_CD                   AS SCE_ORD_TP_CD
                ,CASE WHEN HS.RWS_OPEN_FLG = #flgY# AND LS.RWS_OPEN_FLG = #flgY# THEN #flgY#
                    ELSE #flgN#
                 END                                AS RWS_OPEN_FLG
                ,RD.RWS_NUM                         AS RWS_NUM
                ,RD.RWS_DTL_LINE_NUM                AS RWS_DTL_LINE_NUM
                ,RH.RWS_REF_NUM                     AS RWS_REF_NUM
                ,RH.IMPT_INV_BOL_NUM                AS IMPT_INV_BOL_NUM
                ,RD.RWS_STS_CD                      AS RWS_STS_CD
                ,ROW_NUMBER() OVER (PARTITION BY PH.PO_ORD_NUM, PD.PO_ORD_DTL_LINE_NUM ORDER BY RD.RWS_NUM DESC)
                                                    AS SORT_NUM
            FROM
                 PO                 PH
                ,PO_DTL             PD
                ,VND                V     <!-- QC#56542 2020/04/27 PO_VND_V to VND -->
                ,PRNT_VND           PV    <!-- QC#56542 2020/04/27 PO_VND_V to VND -->
                ,VND_TP_RELN        VTR   <!-- QC#56542 2020/04/27 PO_VND_V to VND -->
                ,PO_STS             PS
                ,RWS_HDR            RH
                ,RWS_DTL            RD
                ,RWS_STS            HS
                ,RWS_STS            LS
            WHERE
                PH.EZCANCELFLAG             = '0'
            AND PH.GLBL_CMPY_CD             = PD.GLBL_CMPY_CD
            AND PH.PO_ORD_NUM               = PD.PO_ORD_NUM
            AND PD.EZCANCELFLAG             = '0'
            AND PH.GLBL_CMPY_CD             = V.GLBL_CMPY_CD  <!-- QC#56542 2020/04/27 PO_VND_V to VND -->
            AND PH.VND_CD                   = V.VND_CD        <!-- QC#56542 2020/04/27 PO_VND_V to VND -->
            AND V.EZCANCELFLAG              = '0'             <!-- QC#56542 2020/04/27 PO_VND_V to VND -->
            <!-- QC#56542 2020/04/27 PO_VND_V to VND -->
            AND V.GLBL_CMPY_CD              = PV.GLBL_CMPY_CD
            AND V.PRNT_VND_PK               = PV.PRNT_VND_PK
            AND PV.EZCANCELFLAG             = '0'
            AND V.VND_CD                    = VTR.VND_CD
            AND V.GLBL_CMPY_CD              = VTR.GLBL_CMPY_CD
            AND VTR.VND_TP_CD               = '01'        
            AND VTR.EZCANCELFLAG            = '0'
            <!-- QC#56542 2020/04/27 PO_VND_V to VND -->
            AND PD.GLBL_CMPY_CD             = PS.GLBL_CMPY_CD
            AND PD.PO_STS_CD                = PS.PO_STS_CD
            AND PS.EZCANCELFLAG             = '0'
            AND PD.GLBL_CMPY_CD             = RH.GLBL_CMPY_CD
            AND PD.PO_ORD_NUM               = RH.PO_RCV_TRX_HDR_NUM
            AND RH.EZCANCELFLAG             = '0'
            AND RH.GLBL_CMPY_CD             = RD.GLBL_CMPY_CD
            <!-- START 2021/04/05 F.Deola [QC#58611, ADD] -->
            <isNotNull property="rwsNum">
            AND RH.RWS_NUM                  = #rwsNum#
            </isNotNull>
            <!-- END 2021/04/05 F.Deola [QC#58611, ADD] -->
            AND RH.RWS_NUM                  = RD.RWS_NUM
            AND RD.PO_RCV_TRX_LINE_NUM      = PD.PO_ORD_DTL_LINE_NUM
            AND RD.EZCANCELFLAG             = '0'
            AND RH.GLBL_CMPY_CD             = HS.GLBL_CMPY_CD
            AND RH.RWS_STS_CD               = HS.RWS_STS_CD
            AND HS.EZCANCELFLAG             = '0'
            AND RD.GLBL_CMPY_CD             = LS.GLBL_CMPY_CD
            AND RD.RWS_STS_CD               = LS.RWS_STS_CD
            AND LS.EZCANCELFLAG             = '0'

            -- PR
            UNION ALL
            SELECT
                 PRD.GLBL_CMPY_CD                           AS GLBL_CMPY_CD
                ,PRD.EZUPTIME                               AS EZUPTIME
                ,PRD.EZUPTIMEZONE                           AS EZUPTIMEZONE
                ,PRD.PRCH_REQ_NUM                           AS SRC_DOC_NUM
                ,TO_CHAR(PRD.PRCH_REQ_LINE_NUM)             AS SRC_DOC_LINE_NUM
                ,TO_CHAR(PRD.PRCH_REQ_LINE_SUB_NUM)         AS SRC_DOC_LINE_SUB_NUM
                ,TO_CHAR(TO_NUMBER(PRD.PRCH_REQ_LINE_NUM)) || '.' ||  TO_CHAR(PRD.PRCH_REQ_LINE_SUB_NUM)   AS DPLY_LINE_NUM
                ,NULL                                       AS DS_ORD_POSN_NUM
                ,RH.FROM_LOC_CD                             AS PTY_CD
                ,RW.RTL_WH_NM                               AS PTY_NM
                ,RD.RTL_WH_CD                               AS RTL_WH_CD
                ,RD.RTL_SWH_CD                              AS RTL_SWH_CD
                ,NVL(PRD.ORIG_RQST_MDSE_CD, PRD.MDSE_CD)    AS MDSE_CD
                ,CASE WHEN PRD.ORIG_RQST_MDSE_CD IS NOT NULL AND PRD.ORIG_RQST_MDSE_CD != PRD.MDSE_CD THEN PRD.MDSE_CD
                    ELSE NULL
                 END                                        AS FLIP_MDSE_CD
                ,NULL                                       AS ASL_MDSE_CD
                ,RH.SVC_CONFIG_MSTR_PK                      AS SVC_CONFIG_MSTR_PK
                ,PRD.PRCH_REQ_QTY                           AS ORD_QTY
                ,PRD.PRCH_REQ_QTY - PRD.RWS_PUT_AWAY_QTY    AS BAL_QTY
                ,CASE WHEN PRD.PRCH_REQ_BAL_QTY = 0 THEN #flgN#
                    ELSE PRLS.OPEN_STS_FLG
                 END                                        AS SRC_DOC_LINE_OPEN_FLG
                ,RD.WH_IN_ETA_DT                            AS ETA_DT
                ,RH.RWS_CARR_CD                             AS CARR_CD
                ,RH.SCE_ORD_TP_CD                           AS SCE_ORD_TP_CD
                ,CASE WHEN HS.RWS_OPEN_FLG = #flgY# AND LS.RWS_OPEN_FLG = #flgY# THEN #flgY#
                    ELSE #flgN#
                 END                                        AS RWS_OPEN_FLG
                ,RD.RWS_NUM                                 AS RWS_NUM
                ,RD.RWS_DTL_LINE_NUM                        AS RWS_DTL_LINE_NUM
                ,RH.RWS_REF_NUM                             AS RWS_REF_NUM
                ,RH.IMPT_INV_BOL_NUM                        AS IMPT_INV_BOL_NUM
                ,RD.RWS_STS_CD                              AS RWS_STS_CD
                ,ROW_NUMBER() OVER (PARTITION BY PRD.PRCH_REQ_NUM, TO_CHAR(PRD.PRCH_REQ_LINE_NUM), TO_CHAR(PRD.PRCH_REQ_LINE_SUB_NUM) ORDER BY RD.RWS_NUM DESC)
                                                            AS SORT_NUM
            FROM
                 PRCH_REQ_DTL         PRD
                ,PRCH_REQ_LINE_STS    PRLS
                ,RWS_HDR              RH
                ,RWS_DTL              RD
                ,RTL_WH               RW
                ,RWS_STS              HS
                ,RWS_STS              LS
            WHERE
                PRD.EZCANCELFLAG             = '0'
            AND PRD.GLBL_CMPY_CD             = PRLS.GLBL_CMPY_CD
            AND PRD.PRCH_REQ_LINE_STS_CD     = PRLS.PRCH_REQ_LINE_STS_CD
            AND PRLS.EZCANCELFLAG            = '0'
            AND PRD.GLBL_CMPY_CD             = RH.GLBL_CMPY_CD
            AND PRD.PRCH_REQ_NUM             = RH.SRC_ORD_NUM
            AND RH.EZCANCELFLAG              = '0'
            AND RH.GLBL_CMPY_CD              = RD.GLBL_CMPY_CD
            <!-- START 2021/04/05 F.Deola [QC#58611, ADD] -->
            <isNotNull property="rwsNum">
            AND RH.RWS_NUM                   = #rwsNum#
            </isNotNull>
            <!-- END 2021/04/05 F.Deola [QC#58611, ADD] -->
            AND RH.RWS_NUM                   = RD.RWS_NUM
            AND RD.EZCANCELFLAG              = '0'
            AND RH.GLBL_CMPY_CD              = RW.GLBL_CMPY_CD
            AND RH.FROM_LOC_CD               = RW.RTL_WH_CD
            AND RW.EZCANCELFLAG              = '0'
            AND RH.GLBL_CMPY_CD             = HS.GLBL_CMPY_CD
            AND RH.RWS_STS_CD               = HS.RWS_STS_CD
            AND HS.EZCANCELFLAG             = '0'
            AND RD.GLBL_CMPY_CD             = LS.GLBL_CMPY_CD
            AND RD.RWS_STS_CD               = LS.RWS_STS_CD
            AND LS.EZCANCELFLAG             = '0'

            -- RETURN CPO
            UNION ALL
            SELECT
                 CRD.GLBL_CMPY_CD                           AS GLBL_CMPY_CD
                ,CRD.EZUPTIME                               AS EZUPTIME
                ,CRD.EZUPTIMEZONE                           AS EZUPTIMEZONE
                ,CRD.CPO_ORD_NUM                            AS SRC_DOC_NUM
                ,CRD.DS_CPO_RTRN_LINE_NUM                   AS SRC_DOC_LINE_NUM
                ,CRD.DS_CPO_RTRN_LINE_SUB_NUM               AS SRC_DOC_LINE_SUB_NUM
                ,CONCAT (CRD.DS_ORD_POSN_NUM, '.') 
                    || CONCAT (CRD.DS_CPO_LINE_NUM, DECODE(CRD.DS_CPO_LINE_SUB_NUM, NULL, '', '.')) 
                    || CRD.DS_CPO_LINE_SUB_NUM              AS DPLY_LINE_NUM
                ,CRD.DS_ORD_POSN_NUM                        AS DS_ORD_POSN_NUM
                ,CRD.SHIP_TO_CUST_CD                        AS PTY_CD
                ,AC.DS_ACCT_NM                              AS PTY_NM
                ,CRD.RTL_WH_CD                              AS RTL_WH_CD
                ,CRD.RTL_SWH_CD                             AS RTL_SWH_CD
                ,CRD.MDSE_CD                                AS MDSE_CD
                ,NULL                                       AS FLIP_MDSE_CD
                ,NULL                                       AS ASL_MDSE_CD
                ,CRD.SVC_CONFIG_MSTR_PK                     AS SVC_CONFIG_MSTR_PK
                ,ABS(CRD.ORD_QTY)                           AS ORD_QTY
                ,ABS(CRD.ORD_QTY) - ABS(CRD.CANC_QTY) - ABS(CRD.RTRN_QTY)    AS BAL_QTY
                ,CASE WHEN ABS(CRD.ORD_QTY) - ABS(CRD.CANC_QTY) - ABS(CRD.RTRN_QTY) = 0 THEN #flgN#
                    ELSE CRD.OPEN_FLG
                 END                                        AS SRC_DOC_LINE_OPEN_FLG
                ,RD.WH_IN_ETA_DT                            AS ETA_DT
                ,RD.CARR_CD                                 AS CARR_CD
                ,RH.SCE_ORD_TP_CD                           AS SCE_ORD_TP_CD
                ,CASE WHEN HS.RWS_OPEN_FLG = #flgY# AND LS.RWS_OPEN_FLG = #flgY# THEN #flgY#
                    ELSE #flgN#
                 END                                        AS RWS_OPEN_FLG
                ,RD.RWS_NUM                                 AS RWS_NUM
                ,RD.RWS_DTL_LINE_NUM                        AS RWS_DTL_LINE_NUM
                ,RH.RWS_REF_NUM                             AS RWS_REF_NUM
                ,RH.IMPT_INV_BOL_NUM                        AS IMPT_INV_BOL_NUM
                ,RD.RWS_STS_CD                              AS RWS_STS_CD
                ,ROW_NUMBER() OVER (PARTITION BY CRD.CPO_ORD_NUM, CRD.DS_CPO_RTRN_LINE_NUM, CRD.DS_CPO_RTRN_LINE_SUB_NUM ORDER BY RD.RWS_NUM DESC)
                                                            AS SORT_NUM
            FROM
                 DS_CPO_RTRN_DTL      CRD
                ,SHIP_TO_CUST         STC
                ,SELL_TO_CUST         AC
                ,RWS_HDR              RH
                ,RWS_DTL              RD
                ,RWS_STS              HS
                ,RWS_STS              LS
            WHERE
                CRD.EZCANCELFLAG             = '0'
            AND CRD.GLBL_CMPY_CD            = STC.GLBL_CMPY_CD
            AND CRD.SHIP_TO_CUST_CD         = STC.SHIP_TO_CUST_CD
            AND STC.EZCANCELFLAG            = '0'
            AND STC.GLBL_CMPY_CD            = AC.GLBL_CMPY_CD
            AND STC.SELL_TO_CUST_CD         = AC.SELL_TO_CUST_CD
            AND AC.EZCANCELFLAG             = '0'
            AND CRD.GLBL_CMPY_CD            = RH.GLBL_CMPY_CD
            AND CRD.CPO_ORD_NUM             = RH.TRX_ORD_NUM
            AND RH.EZCANCELFLAG              = '0'
            AND RH.GLBL_CMPY_CD             = RD.GLBL_CMPY_CD
            <!-- START 2021/04/05 F.Deola [QC#58611, ADD] -->
            <isNotNull property="rwsNum">
            AND RH.RWS_NUM                  = #rwsNum#
            </isNotNull>
            <!-- END 2021/04/05 F.Deola [QC#58611, ADD] -->
            AND RH.RWS_NUM                  = RD.RWS_NUM
            AND RD.TRX_LINE_NUM             = CRD.DS_CPO_RTRN_LINE_NUM
            AND RD.TRX_LINE_SUB_NUM         = CRD.DS_CPO_RTRN_LINE_SUB_NUM
            AND RD.EZCANCELFLAG              = '0'
            AND RH.GLBL_CMPY_CD             = HS.GLBL_CMPY_CD
            AND RH.RWS_STS_CD               = HS.RWS_STS_CD
            AND HS.EZCANCELFLAG             = '0'
            AND RD.GLBL_CMPY_CD             = LS.GLBL_CMPY_CD
            AND RD.RWS_STS_CD               = LS.RWS_STS_CD
            AND LS.EZCANCELFLAG             = '0'

            -- CPO
            UNION ALL
            SELECT
                 CD.GLBL_CMPY_CD                            AS GLBL_CMPY_CD
                ,CD.EZUPTIME                                AS EZUPTIME
                ,CD.EZUPTIMEZONE                            AS EZUPTIMEZONE
                ,CD.CPO_ORD_NUM                             AS SRC_DOC_NUM
                ,CD.CPO_DTL_LINE_NUM                        AS SRC_DOC_LINE_NUM
                ,CD.CPO_DTL_LINE_SUB_NUM                    AS SRC_DOC_LINE_SUB_NUM
                ,CONCAT (CD.DS_ORD_POSN_NUM, '.')
                    || CONCAT (CD.DS_CPO_LINE_NUM, DECODE(CD.DS_CPO_LINE_SUB_NUM, NULL, '', '.'))
                    || CD.DS_CPO_LINE_SUB_NUM               AS DPLY_LINE_NUM
                ,CD.DS_ORD_POSN_NUM                         AS DS_ORD_POSN_NUM
                ,RD.SHIP_FROM_RTL_WH_CD                     AS PTY_CD
                ,RW.RTL_WH_NM                               AS PTY_NM
                ,RD.RTL_WH_CD                               AS RTL_WH_CD
                ,RD.RTL_SWH_CD                              AS RTL_SWH_CD
                ,CD.MDSE_CD                                 AS MDSE_CD
                ,NULL                                       AS FLIP_MDSE_CD
                ,NULL                                       AS ASL_MDSE_CD
                ,RH.SVC_CONFIG_MSTR_PK                      AS SVC_CONFIG_MSTR_PK
                ,CD.ORD_QTY                                 AS ORD_QTY
                ,BL.BAL_QTY                                 AS BAL_QTY
                ,CASE WHEN CH.OPEN_FLG = #flgY# AND CD.OPEN_FLG = #flgY# THEN #flgY#
                    ELSE #flgN#
                 END                                        AS SRC_DOC_LINE_OPEN_FLG
                ,RD.WH_IN_ETA_DT                            AS ETA_DT
                ,RH.RWS_CARR_CD                             AS CARR_CD
                ,RH.SCE_ORD_TP_CD                           AS SCE_ORD_TP_CD
                ,CASE WHEN HS.RWS_OPEN_FLG = #flgY# AND LS.RWS_OPEN_FLG = #flgY# THEN #flgY#
                    ELSE #flgN#
                 END                                        AS RWS_OPEN_FLG
                ,RD.RWS_NUM                                 AS RWS_NUM
                ,RD.RWS_DTL_LINE_NUM                        AS RWS_DTL_LINE_NUM
                ,RH.RWS_REF_NUM                             AS RWS_REF_NUM
                ,RH.IMPT_INV_BOL_NUM                        AS IMPT_INV_BOL_NUM
                ,RD.RWS_STS_CD                              AS RWS_STS_CD
                ,ROW_NUMBER() OVER (PARTITION BY CD.CPO_ORD_NUM, CD.CPO_DTL_LINE_NUM, CD.CPO_DTL_LINE_SUB_NUM ORDER BY RD.RWS_NUM DESC)
                                                            AS SORT_NUM
            FROM
                 CPO                  CH
                ,CPO_DTL              CD
                ,SHPG_ORD_DTL         SOD
                ,RWS_HDR              RH
                ,RWS_DTL              RD
                ,RTL_WH               RW
                ,RWS_STS              HS
                ,RWS_STS              LS
                ,(SELECT
                        SD.GLBL_CMPY_CD
                        , SD.TRX_HDR_NUM
                        , SD.TRX_LINE_NUM
                        , SD.TRX_LINE_SUB_NUM
                        , SUM(L.RWS_QTY - L.RWS_PUT_AWAY_QTY) AS BAL_QTY
                    FROM
                        SHPG_ORD_DTL    SD
                       ,RWS_HDR         H
                       ,RWS_DTL         L
                   WHERE
                        SD.EZCANCELFLAG       = '0'
                    AND SD.GLBL_CMPY_CD       = H.GLBL_CMPY_CD
                    AND SD.SO_NUM             = H.PO_RCV_TRX_HDR_NUM
                    AND H.EZCANCELFLAG        = '0'
                    AND H.GLBL_CMPY_CD        = L.GLBL_CMPY_CD
                    AND H.RWS_NUM             = L.RWS_NUM
                    AND L.PO_RCV_TRX_LINE_NUM = SD.SO_SLP_NUM
                    AND L.EZCANCELFLAG        = '0'
                    GROUP BY
                        SD.GLBL_CMPY_CD
                       ,SD.TRX_HDR_NUM
                       ,SD.TRX_LINE_NUM
                       ,SD.TRX_LINE_SUB_NUM ) BL
            WHERE
                CH.EZCANCELFLAG             = '0'
            AND CH.GLBL_CMPY_CD             = CD.GLBL_CMPY_CD
            AND CH.CPO_ORD_NUM              = CD.CPO_ORD_NUM
            AND CD.EZCANCELFLAG             = '0'
            AND CD.GLBL_CMPY_CD             = SOD.GLBL_CMPY_CD
            AND CD.CPO_ORD_NUM              = SOD.TRX_HDR_NUM
            AND CD.CPO_DTL_LINE_NUM         = SOD.TRX_LINE_NUM
            AND CD.CPO_DTL_LINE_SUB_NUM     = SOD.TRX_LINE_SUB_NUM
            AND SOD.EZCANCELFLAG            = '0'
            AND SOD.GLBL_CMPY_CD            = RH.GLBL_CMPY_CD
            AND SOD.SO_NUM                  = RH.PO_RCV_TRX_HDR_NUM
            AND RH.EZCANCELFLAG             = '0'
            AND RH.GLBL_CMPY_CD             = RD.GLBL_CMPY_CD
            <!-- START 2021/04/05 F.Deola [QC#58611, ADD] -->
            <isNotNull property="rwsNum">
            AND RH.RWS_NUM                  = #rwsNum#
            </isNotNull>
            <!-- END 2021/04/05 F.Deola [QC#58611, ADD] -->
            AND RH.RWS_NUM                  = RD.RWS_NUM
            AND RD.PO_RCV_TRX_LINE_NUM      = SOD.SO_SLP_NUM
            AND RD.EZCANCELFLAG             = '0'
            AND RD.GLBL_CMPY_CD             = RW.GLBL_CMPY_CD
            AND RD.SHIP_FROM_RTL_WH_CD      = RW.RTL_WH_CD
            AND RW.EZCANCELFLAG             = '0'
            AND RH.GLBL_CMPY_CD             = HS.GLBL_CMPY_CD
            AND RH.RWS_STS_CD               = HS.RWS_STS_CD
            AND HS.EZCANCELFLAG             = '0'
            AND RD.GLBL_CMPY_CD             = LS.GLBL_CMPY_CD
            AND RD.RWS_STS_CD               = LS.RWS_STS_CD
            AND LS.EZCANCELFLAG             = '0'
            AND CD.GLBL_CMPY_CD             = BL.GLBL_CMPY_CD
            AND CD.CPO_ORD_NUM              = BL.TRX_HDR_NUM
            AND CD.CPO_DTL_LINE_NUM         = BL.TRX_LINE_NUM
            AND CD.CPO_DTL_LINE_SUB_NUM     = BL.TRX_LINE_SUB_NUM

            -- WO
            UNION ALL
            SELECT
                GLBL_CMPY_CD
                ,EZUPTIME
                ,EZUPTIMEZONE
                ,SRC_DOC_NUM
                ,SRC_DOC_LINE_NUM
                ,SRC_DOC_LINE_SUB_NUM
                ,DPLY_LINE_NUM
                ,DS_ORD_POSN_NUM
                ,PTY_CD
                ,PTY_NM
                ,RTL_WH_CD
                ,RTL_SWH_CD
                ,MDSE_CD
                ,FLIP_MDSE_CD
                ,ASL_MDSE_CD
                ,SVC_CONFIG_MSTR_PK
                ,ORD_QTY
                ,BAL_QTY
                ,SRC_DOC_LINE_OPEN_FLG
                ,ETA_DT
                ,CARR_CD
                ,SCE_ORD_TP_CD
                ,RWS_OPEN_FLG
                ,RWS_NUM
                ,RWS_DTL_LINE_NUM
                ,RWS_REF_NUM
                ,IMPT_INV_BOL_NUM
                ,RWS_STS_CD
                ,ROW_NUMBER() OVER (PARTITION BY SRC_DOC_NUM, SRC_DOC_LINE_NUM, SRC_DOC_LINE_SUB_NUM ORDER BY RWS_NUM DESC)
                                                            AS SORT_NUM
            FROM
            (
                SELECT
                     WO.GLBL_CMPY_CD                            AS GLBL_CMPY_CD
                    ,CASE WO.DS_WRK_ORD_TP_CD 
                        WHEN #dsWrkOrdTpCdKit# THEN -- KIT
                            CASE RH.SCE_ORD_TP_CD
                                WHEN #sceOrdTpCdKc# THEN WOD.EZUPTIME
                                ELSE WO.EZUPTIME
                                END
                        ELSE  --UN KIT
                            CASE RH.SCE_ORD_TP_CD
                                WHEN #sceOrdTpCdKc# THEN WO.EZUPTIME
                                ELSE WOD.EZUPTIME
                                END
                        END                                     AS EZUPTIME
                    ,CASE WO.DS_WRK_ORD_TP_CD 
                        WHEN #dsWrkOrdTpCdKit# THEN -- KIT
                            CASE RH.SCE_ORD_TP_CD
                                WHEN #sceOrdTpCdKc# THEN WOD.EZUPTIMEZONE
                                ELSE WO.EZUPTIMEZONE
                                END
                        ELSE  --UN KIT
                            CASE RH.SCE_ORD_TP_CD
                                WHEN #sceOrdTpCdKc# THEN WO.EZUPTIMEZONE
                                ELSE WOD.EZUPTIMEZONE
                                END
                        END                                     AS EZUPTIMEZONE
                    ,WO.WRK_ORD_NUM                             AS SRC_DOC_NUM
                    ,CASE WO.DS_WRK_ORD_TP_CD 
                        WHEN #dsWrkOrdTpCdKit# THEN -- KIT
                            CASE RH.SCE_ORD_TP_CD
                                WHEN #sceOrdTpCdKc# THEN WOD.WRK_ORD_DTL_LINE_NUM
                                ELSE NULL
                                END
                        ELSE  --UN KIT
                            CASE RH.SCE_ORD_TP_CD
                                WHEN #sceOrdTpCdKc# THEN NULL
                                ELSE WOD.WRK_ORD_DTL_LINE_NUM
                                END
                        END                                     AS SRC_DOC_LINE_NUM
                    ,NULL                                       AS SRC_DOC_LINE_SUB_NUM
                    ,CASE WO.DS_WRK_ORD_TP_CD 
                        WHEN #dsWrkOrdTpCdKit# THEN -- KIT
                            CASE RH.SCE_ORD_TP_CD
                                WHEN #sceOrdTpCdKc# THEN WOD.WRK_ORD_DTL_LINE_NUM
                                ELSE NULL
                                END
                        ELSE  --UN KIT
                            CASE RH.SCE_ORD_TP_CD
                                WHEN #sceOrdTpCdKc# THEN NULL
                                ELSE WOD.WRK_ORD_DTL_LINE_NUM
                                END
                        END                                     AS DPLY_LINE_NUM
                    ,NULL                                       AS DS_ORD_POSN_NUM
                    ,RH.FROM_LOC_CD                             AS PTY_CD
                    ,RW.RTL_WH_NM                               AS PTY_NM
                    ,RD.RTL_WH_CD                               AS RTL_WH_CD
                    ,RD.RTL_SWH_CD                              AS RTL_SWH_CD
                    ,CASE WO.DS_WRK_ORD_TP_CD 
                        WHEN #dsWrkOrdTpCdKit# THEN -- KIT
                            CASE RH.SCE_ORD_TP_CD
                                WHEN #sceOrdTpCdKc# THEN WOD.ORIG_GOODS_MDSE_CD
                                ELSE WO.FNSH_GOODS_MDSE_CD
                                END
                        ELSE  --UN KIT
                            CASE RH.SCE_ORD_TP_CD
                                WHEN #sceOrdTpCdKc# THEN WO.FNSH_GOODS_MDSE_CD
                                ELSE WOD.ORIG_GOODS_MDSE_CD
                                END
                        END                                     AS MDSE_CD
                    ,NULL                                       AS FLIP_MDSE_CD
                    ,NULL                                       AS ASL_MDSE_CD
                    ,RH.SVC_CONFIG_MSTR_PK                      AS SVC_CONFIG_MSTR_PK
                    ,CASE WO.DS_WRK_ORD_TP_CD 
                        WHEN #dsWrkOrdTpCdKit# THEN -- KIT
                            CASE RH.SCE_ORD_TP_CD
                                WHEN #sceOrdTpCdKc# THEN WOD.ORIG_GOODS_ORD_QTY
                                ELSE WO.FNSH_GOODS_ORD_QTY
                                END
                        ELSE  --UN KIT
                            CASE RH.SCE_ORD_TP_CD
                                WHEN #sceOrdTpCdKc# THEN WO.FNSH_GOODS_ORD_QTY
                                ELSE WOD.ORIG_GOODS_ORD_QTY
                                END
                        END                                     AS ORD_QTY
                    ,CASE WO.DS_WRK_ORD_TP_CD 
                        WHEN #dsWrkOrdTpCdKit# THEN -- KIT
                            CASE RH.SCE_ORD_TP_CD
                                WHEN #sceOrdTpCdKc# THEN WOD.ORIG_GOODS_BAL_QTY
                                ELSE WO.FNSH_GOODS_BAL_QTY
                                END
                        ELSE  --UN KIT
                            CASE RH.SCE_ORD_TP_CD
                                WHEN #sceOrdTpCdKc# THEN WO.FNSH_GOODS_BAL_QTY
                                ELSE WOD.ORIG_GOODS_BAL_QTY
                                END
                        END                                     AS BAL_QTY
                    ,CASE WHEN WO.WRK_ORD_STS_CD IN 
                            (#wrkOrdStsAllc#, #wrkOrdStsValid#, #wrkOrdStsShip#, #wrkOrdStsRcv#, #wrkOrdStsRcvComp#) THEN #flgY#
                        ELSE #flgN#
                     END                                        AS SRC_DOC_LINE_OPEN_FLG
                    ,RD.WH_IN_ETA_DT                            AS ETA_DT
                    ,RH.RWS_CARR_CD                             AS CARR_CD
                    ,RH.SCE_ORD_TP_CD                           AS SCE_ORD_TP_CD
                    ,CASE WHEN HS.RWS_OPEN_FLG = #flgY# AND LS.RWS_OPEN_FLG = #flgY# THEN #flgY#
                        ELSE #flgN#
                     END                                        AS RWS_OPEN_FLG
                    ,RD.RWS_NUM                                 AS RWS_NUM
                    ,RD.RWS_DTL_LINE_NUM                        AS RWS_DTL_LINE_NUM
                    ,RH.RWS_REF_NUM                             AS RWS_REF_NUM
                    ,RH.IMPT_INV_BOL_NUM                        AS IMPT_INV_BOL_NUM
                    ,RD.RWS_STS_CD                              AS RWS_STS_CD
                FROM
                     WRK_ORD                WO
                    ,WRK_ORD_DTL            WOD
                    ,SHPG_ORD               SO
                    ,RWS_HDR                RH
                    ,RWS_DTL                RD
                    ,RTL_WH                 RW
                    ,RWS_STS                HS
                    ,RWS_STS                LS
                WHERE
                    WO.EZCANCELFLAG             = '0'
                AND WO.GLBL_CMPY_CD             = WOD.GLBL_CMPY_CD
                AND WO.WRK_ORD_NUM              = WOD.WRK_ORD_NUM
                AND WOD.EZCANCELFLAG            = '0'
                AND WO.GLBL_CMPY_CD             = SO.GLBL_CMPY_CD
                AND WO.WRK_ORD_NUM              = SO.TRX_HDR_NUM
                AND SO.EZCANCELFLAG             = '0'
                AND SO.GLBL_CMPY_CD             = RH.GLBL_CMPY_CD
                AND SO.SO_NUM                   = RH.PO_RCV_TRX_HDR_NUM
                AND RH.EZCANCELFLAG             = '0'
                AND RH.GLBL_CMPY_CD             = RD.GLBL_CMPY_CD
                <!-- START 2021/04/05 F.Deola [QC#58611, ADD] -->
                <isNotNull property="rwsNum">
                AND RH.RWS_NUM                  = #rwsNum#
                </isNotNull>
                <!-- END 2021/04/05 F.Deola [QC#58611, ADD] -->
                AND RH.RWS_NUM                  = RD.RWS_NUM
                AND RD.PO_RCV_TRX_LINE_NUM      = WOD.WRK_ORD_DTL_LINE_NUM  --Notes:Kit, Un-Kit cancel 
                AND RD.EZCANCELFLAG             = '0'
                AND RH.GLBL_CMPY_CD             = RW.GLBL_CMPY_CD
                AND RH.FROM_LOC_CD              = RW.RTL_WH_CD
                AND RW.EZCANCELFLAG             = '0'
                AND RH.GLBL_CMPY_CD             = HS.GLBL_CMPY_CD
                AND RH.RWS_STS_CD               = HS.RWS_STS_CD
                AND HS.EZCANCELFLAG             = '0'
                AND RD.GLBL_CMPY_CD             = LS.GLBL_CMPY_CD
                AND RD.RWS_STS_CD               = LS.RWS_STS_CD
                AND LS.EZCANCELFLAG             = '0'
            )

            -- REMAN
            UNION ALL
            SELECT
                 RO.GLBL_CMPY_CD                            AS GLBL_CMPY_CD
                ,RH.EZUPTIME                                AS EZUPTIME
                ,RH.EZUPTIMEZONE                            AS EZUPTIMEZONE
                ,RO.RMNF_ORD_NUM                            AS SRC_DOC_NUM
                ,RU.RMNF_TASK_NUM                           AS SRC_DOC_LINE_NUM
                ,RU.RMNF_USG_LINE_NUM                       AS SRC_DOC_LINE_SUB_NUM
                ,RU.RMNF_TASK_NUM                           AS DPLY_LINE_NUM
                ,NULL                                       AS DS_ORD_POSN_NUM
                ,RO.RMNF_USG_RTL_WH_CD                      AS PTY_CD
                ,URW.RTL_WH_NM                              AS PTY_NM
                ,RW.RTL_WH_CD                               AS RTL_WH_CD
                ,RSW.RTL_SWH_CD                             AS RTL_SWH_CD
                ,RU.MDSE_CD                                 AS MDSE_CD
                ,NULL                                       AS FLIP_MDSE_CD
                ,NULL                                       AS ASL_MDSE_CD
                ,RH.SVC_CONFIG_MSTR_PK                      AS SVC_CONFIG_MSTR_PK
                ,RU.RMNF_PRT_QTY                            AS ORD_QTY
                ,CASE WHEN HS.RWS_OPEN_FLG = #flgY# THEN RU.RMNF_PRT_QTY
                    ELSE 0
                 END                                        AS BAL_QTY
                ,CASE WHEN HS.RWS_OPEN_FLG = #flgY# AND LS.RWS_OPEN_FLG = #flgY# THEN #flgY#
                    ELSE #flgN#
                 END                                        AS SRC_DOC_LINE_OPEN_FLG
                ,RD.WH_IN_ETA_DT                            AS ETA_DT
                ,RH.RWS_CARR_CD                             AS CARR_CD
                ,RH.SCE_ORD_TP_CD                           AS SCE_ORD_TP_CD
                ,CASE WHEN HS.RWS_OPEN_FLG = #flgY# AND LS.RWS_OPEN_FLG = #flgY# THEN #flgY#
                    ELSE #flgN#
                 END                                        AS RWS_OPEN_FLG
                ,RD.RWS_NUM                                 AS RWS_NUM
                ,RD.RWS_DTL_LINE_NUM                        AS RWS_DTL_LINE_NUM
                ,RH.RWS_REF_NUM                             AS RWS_REF_NUM
                ,RH.IMPT_INV_BOL_NUM                        AS IMPT_INV_BOL_NUM
                ,RD.RWS_STS_CD                              AS RWS_STS_CD
                ,ROW_NUMBER() OVER (PARTITION BY RO.RMNF_ORD_NUM, RU.RMNF_TASK_NUM, RU.RMNF_USG_LINE_NUM ORDER BY RD.RWS_NUM DESC)
                                                            AS SORT_NUM
            FROM
                 RMNF_ORD               RO
                ,RMNF_USG               RU
                ,RTL_SWH                RSW
                ,RTL_WH                 RW
                ,RTL_WH                 URW
                ,RWS_HDR                RH
                ,RWS_DTL                RD
                ,RWS_STS                HS
                ,RWS_STS                LS
            WHERE
                RO.EZCANCELFLAG                 = '0'
            AND RO.GLBL_CMPY_CD                 = RU.GLBL_CMPY_CD
            AND RO.RMNF_ORD_NUM                 = RU.RMNF_ORD_NUM
            AND RU.EZCANCELFLAG                 = '0'
            AND RU.GLBL_CMPY_CD                 = RSW.GLBL_CMPY_CD
            AND RU.RMNF_USG_RTRN_INVTY_LOC_CD   = RSW.INVTY_LOC_CD
            AND RSW.EZCANCELFLAG                = '0'
            AND RSW.GLBL_CMPY_CD                = RW.GLBL_CMPY_CD
            AND RSW.RTL_WH_CD                   = RW.RTL_WH_CD
            AND RW.EZCANCELFLAG                 = '0'
            AND RO.GLBL_CMPY_CD                 = URW.GLBL_CMPY_CD
            AND RO.RMNF_USG_RTL_WH_CD           = URW.RTL_WH_CD
            AND URW.EZCANCELFLAG                = '0'
            AND RO.GLBL_CMPY_CD                 = RH.GLBL_CMPY_CD
            AND RO.RMNF_ORD_NUM                 = RH.PO_RCV_TRX_HDR_NUM
            AND RH.EZCANCELFLAG                 = '0'
            AND RH.GLBL_CMPY_CD                 = HS.GLBL_CMPY_CD
            AND RH.RWS_STS_CD                   = HS.RWS_STS_CD
            AND HS.EZCANCELFLAG                 = '0'
            AND RH.GLBL_CMPY_CD                 = RD.GLBL_CMPY_CD
            <!-- START 2021/04/05 F.Deola [QC#58611, ADD] -->
            <isNotNull property="rwsNum">
            AND RH.RWS_NUM                      = #rwsNum#
            </isNotNull>
            <!-- END 2021/04/05 F.Deola [QC#58611, ADD] -->
            AND RH.RWS_NUM                      = RD.RWS_NUM
            AND RU.RMNF_USG_LINE_NUM            = RD.PO_RCV_TRX_LINE_NUM
            AND RU.MDSE_CD                      = RD.MDSE_CD
            AND RU.RMNF_PRT_QTY                 = RD.RWS_QTY
            AND RD.EZCANCELFLAG                 = '0'
            AND RH.GLBL_CMPY_CD                 = HS.GLBL_CMPY_CD
            AND RH.RWS_STS_CD                   = HS.RWS_STS_CD
            AND HS.EZCANCELFLAG                 = '0'
            AND RD.GLBL_CMPY_CD                 = LS.GLBL_CMPY_CD
            AND RD.RWS_STS_CD                   = LS.RWS_STS_CD
            AND LS.EZCANCELFLAG                 = '0'
        )
        <isNotNull property="whCd">
        , RCV_WH AS (
            SELECT
                  RD.GLBL_CMPY_CD
                 ,RD.RWS_NUM
                 ,RD.RWS_DTL_LINE_NUM
            FROM
                 RWS_DTL                RD
                ,RWS_PUT_AWAY           RPA
                ,RTL_SWH                RSW
                ,RWS_STS                RS
            WHERE
                 RD.EZCANCELFLAG            = '0'
             AND RD.GLBL_CMPY_CD            = RS.GLBL_CMPY_CD
             AND RD.RWS_STS_CD              = RS.RWS_STS_CD
             AND RS.RCV_FLG                 = #flgY#
             AND RS.EZCANCELFLAG            = '0'
             AND RD.GLBL_CMPY_CD            = RPA.GLBL_CMPY_CD
             AND RD.RWS_NUM                 = RPA.RWS_NUM
             AND RD.RWS_DTL_LINE_NUM        = RPA.RWS_DTL_LINE_NUM
             AND RPA.EZCANCELFLAG           = '0'
             AND RPA.GLBL_CMPY_CD           = RSW.GLBL_CMPY_CD
             AND RPA.WH_CD                  = RSW.INVTY_LOC_CD
             AND RSW.EZCANCELFLAG           = '0'
             AND (   RSW.RTL_WH_CD = #whCd#
                  OR EXISTS (SELECT
                                 1
                             FROM
                                 INVTY_ORD_DTL DIOD
                             WHERE
                                 RPA.GLBL_CMPY_CD     = DIOD.GLBL_CMPY_CD
                             AND RPA.RWS_NUM          = DIOD.TRX_REF_NUM
                             AND RPA.RWS_DTL_LINE_NUM = DIOD.TRX_REF_LINE_NUM
                             AND DIOD.TO_RTL_WH_CD    = #whCd#
                             AND DIOD.EZCANCELFLAG    = '0'
                             AND ROWNUM               = 1
                            )
                  )
        )
        </isNotNull>
        , SER AS (
            SELECT
                 SER_INFO.GLBL_CMPY_CD
                ,SER_INFO.SRC_DOC_NUM
                ,SER_INFO.SRC_DOC_LINE_NUM
                ,SER_INFO. SRC_DOC_LINE_SUB_NUM
                ,SER_INFO.SER_NUM_COUNT
                ,SER_INFO.SER_NUM
            FROM
                (
                -- PO SERIAL
                SELECT
                     PSN.GLBL_CMPY_CD       AS GLBL_CMPY_CD
                    ,PSN.KEY_INFO_CD_04     AS SRC_DOC_NUM
                    ,PSN.KEY_INFO_CD_05     AS SRC_DOC_LINE_NUM
                    ,NULL                   AS SRC_DOC_LINE_SUB_NUM
                    ,COUNT(PSN.SER_NUM)     AS SER_NUM_COUNT
                    ,CASE WHEN COUNT(PSN.SER_NUM) = 1 THEN MAX(PSN.SER_NUM)
                        ELSE NULL
                     END                    AS SER_NUM
                FROM
                    PO_SER_NUM PSN
                WHERE
                    PSN.EZCANCELFLAG   = '0'
                GROUP BY
                     PSN.GLBL_CMPY_CD
                    ,PSN.KEY_INFO_CD_04
                    ,PSN.KEY_INFO_CD_05
                
                -- CPO RETURN SERIAL
                UNION ALL
                SELECT
                     CRD.GLBL_CMPY_CD                   AS GLBL_CMPY_CD
                    ,CRD.CPO_ORD_NUM                    AS SRC_DOC_NUM
                    ,CRD.DS_CPO_RTRN_LINE_NUM           AS SRC_DOC_LINE_NUM
                    ,CRD.DS_CPO_RTRN_LINE_SUB_NUM       AS SRC_DOC_LINE_SUB_NU
                    ,1                                  AS SER_NUM_COUNT
                    ,CRD.SER_NUM                        AS SER_NUM
                FROM
                    DS_CPO_RTRN_DTL        CRD
                WHERE
                    CRD.EZCANCELFLAG   = '0'
                
                -- SHIP SERIAL
                UNION ALL
                SELECT
                    SD.GLBL_CMPY_CD            AS GLBL_CMPY_CD
                    ,CASE SO.SCE_ORD_TP_CD
                         WHEN #sceOrdTpCdTr# THEN SD.PRCH_REQ_NUM
                         ELSE SD.TRX_HDR_NUM
                         END                   AS SRC_DOC_NUM
                    ,CASE SO.SCE_ORD_TP_CD
                         WHEN #sceOrdTpCdTr# THEN TO_CHAR(SD.PRCH_REQ_LINE_NUM)
                         ELSE SD.TRX_LINE_NUM
                         END                   AS SRC_DOC_LINE_NUM
                    ,CASE SO.SCE_ORD_TP_CD
                         WHEN #sceOrdTpCdTr# THEN TO_CHAR(SD.PRCH_REQ_LINE_SUB_NUM)
                         ELSE SD.TRX_LINE_SUB_NUM
                         END                   AS SRC_DOC_LINE_SUB_NUM
                    ,COUNT(SN.SER_NUM)         AS SER_NUM_COUNT
                    ,CASE WHEN COUNT(SN.SER_NUM) = 1 THEN MAX(SN.SER_NUM)
                         ELSE NULL
                         END                   AS SER_NUM
                FROM
                     SHPG_ORD_DTL SD
                    ,SHIP_SER_NUM SN
                    ,SHPG_ORD     SO
                WHERE
                    SD.EZCANCELFLAG     = '0'
                AND SD.GLBL_CMPY_CD     = SN.GLBL_CMPY_CD
                AND SD.SO_NUM           = SN.SO_NUM
                AND SD.SO_SLP_NUM       = SN.SO_SLP_NUM
                AND SN.EZCANCELFLAG     = '0'
                AND SD.GLBL_CMPY_CD     = SO.GLBL_CMPY_CD
                AND SD.SO_NUM           = SO.SO_NUM
                AND SO.SCE_ORD_TP_CD    IN (#sceOrdTpCdDt#, #sceOrdTpCdTr#)
                AND SO.EZCANCELFLAG     = '0'
                GROUP BY
                    SD.GLBL_CMPY_CD
                   ,SD.TRX_HDR_NUM
                   ,SD.TRX_LINE_NUM
                   ,SD.TRX_LINE_SUB_NUM
                   ,SD.PRCH_REQ_NUM
                   ,SD.PRCH_REQ_LINE_NUM
                   ,SD.PRCH_REQ_LINE_SUB_NUM
                   ,SO.SCE_ORD_TP_CD
                
                -- RWS SERIAL (WRK_ORD)
                UNION ALL
                SELECT
                     WO_SER.GLBL_CMPY_CD
                    ,WO_SER.SRC_DOC_NUM
                    ,WO_SER.SRC_DOC_LINE_NUM
                    ,WO_SER.SRC_DOC_LINE_SUB_NUM
                    ,COUNT(WO_SER.SER_NUM)          AS SER_NUM_COUNT
                    ,CASE WHEN COUNT(WO_SER.SER_NUM) = 1 THEN MAX(WO_SER.SER_NUM)
                        ELSE NULL
                     END                            AS SER_NUM
                FROM
                    (
                        SELECT
                             WO.GLBL_CMPY_CD                            AS GLBL_CMPY_CD
                            ,WO.WRK_ORD_NUM                             AS SRC_DOC_NUM
                            ,CASE WO.DS_WRK_ORD_TP_CD 
                                WHEN '1' THEN -- KIT
                                    CASE RH.SCE_ORD_TP_CD
                                        WHEN 'KC' THEN WOD.WRK_ORD_DTL_LINE_NUM
                                        ELSE NULL
                                        END
                                ELSE  --UN KIT
                                    CASE RH.SCE_ORD_TP_CD
                                        WHEN 'KC' THEN NULL
                                        ELSE WOD.WRK_ORD_DTL_LINE_NUM
                                        END
                                END                                     AS SRC_DOC_LINE_NUM
                            ,NULL                                       AS SRC_DOC_LINE_SUB_NUM
                            ,RS.SER_NUM                                 AS SER_NUM
                        FROM
                             WRK_ORD        WO
                            ,WRK_ORD_DTL    WOD
                            ,RWS_HDR        RH
                            ,RWS_DTL        RD
                            ,RWS_SER        RS
                        WHERE
                            WO.EZCANCELFLAG     = '0'
                        AND WO.WRK_ORD_NUM      = RD.RWS_NUM
                        AND RD.EZCANCELFLAG     = '0'
                        AND WO.WRK_ORD_NUM      = RH.SRC_ORD_NUM
                        AND RH.EZCANCELFLAG     = '0'
                        AND RH.RWS_NUM          = RD.RWS_NUM
                        AND WOD.WRK_ORD_DTL_LINE_NUM    = RD.PO_RCV_TRX_LINE_NUM
                        AND RD.EZCANCELFLAG     = '0'
                        AND RD.RWS_NUM          = RS.RWS_NUM
                        AND RD.RWS_DTL_LINE_NUM = RS.RWS_LINE_NUM
                        AND RS.EZCANCELFLAG     = '0'
                    ) WO_SER
                GROUP BY
                    WO_SER.GLBL_CMPY_CD
                   ,WO_SER.SRC_DOC_NUM
                   ,WO_SER.SRC_DOC_LINE_NUM
                   ,WO_SER.SRC_DOC_LINE_SUB_NUM
                
                -- RWS SERIAL (REMAN)
                UNION ALL
                SELECT
                     RO.GLBL_CMPY_CD            AS GLBL_CMPY_CD
                    ,RO.RMNF_ORD_NUM            AS SRC_DOC_NUM
                    ,RU.RMNF_TASK_NUM           AS SRC_DOC_LINE_NUM
                    ,RU.RMNF_USG_LINE_NUM       AS SRC_DOC_LINE_SUB_NUM
                    ,COUNT(RS.SER_NUM)          AS SER_NUM_COUNT
                    ,CASE WHEN COUNT(RS.SER_NUM) = 1 THEN MAX(RS.SER_NUM)
                        ELSE NULL
                     END                        AS SER_NUM
                FROM
                     RMNF_ORD               RO
                    ,RMNF_USG               RU
                    ,RWS_HDR                RH
                    ,RWS_DTL                RD
                    ,RWS_SER                RS
                WHERE
                    RO.EZCANCELFLAG         = '0'
                AND RO.GLBL_CMPY_CD         = RU.GLBL_CMPY_CD
                AND RO.RMNF_ORD_NUM         = RU.RMNF_ORD_NUM
                AND RO.EZCANCELFLAG         = '0'
                AND RO.GLBL_CMPY_CD         = RH.GLBL_CMPY_CD
                AND RO.RMNF_ORD_NUM         = RH.PO_RCV_TRX_HDR_NUM
                AND RH.EZCANCELFLAG         = '0'
                AND RH.GLBL_CMPY_CD         = RD.GLBL_CMPY_CD
                AND RH.RWS_NUM              = RD.RWS_NUM
                AND RU.RMNF_USG_LINE_NUM    = RD.PO_RCV_TRX_LINE_NUM
                AND RD.EZCANCELFLAG         = '0'
                AND RD.GLBL_CMPY_CD         = RS.GLBL_CMPY_CD
                AND RD.RWS_NUM              = RS.RWS_NUM
                AND RD.RWS_DTL_LINE_NUM     = RS.RWS_LINE_NUM
                AND RS.EZCANCELFLAG         = '0'
                GROUP BY
                     RO.GLBL_CMPY_CD
                    ,RO.RMNF_ORD_NUM
                    ,RU.RMNF_TASK_NUM
                    ,RU.RMNF_USG_LINE_NUM
                ) SER_INFO
            GROUP BY
             SER_INFO.GLBL_CMPY_CD
            ,SER_INFO.SRC_DOC_NUM
            ,SER_INFO.SRC_DOC_LINE_NUM
            ,SER_INFO.SRC_DOC_LINE_SUB_NUM
            ,SER_INFO.SER_NUM_COUNT
            ,SER_INFO.SER_NUM
        )
        SELECT
            O.GLBL_CMPY_CD
            ,O.EZUPTIME
            ,O.EZUPTIMEZONE
            ,O.SRC_DOC_NUM
            ,O.SRC_DOC_LINE_NUM
            ,O.SRC_DOC_LINE_SUB_NUM
            ,O.DPLY_LINE_NUM
            ,O.DS_ORD_POSN_NUM
            ,O.PTY_CD
            ,O.PTY_NM
            ,O.RTL_WH_CD
            ,RW.RTL_WH_NM
            ,O.RTL_SWH_CD
            ,RSW.RTL_SWH_NM
            ,O.MDSE_CD
            ,MD.MDSE_DESC_SHORT_TXT
            ,MD.COA_MDSE_TP_CD
            ,O.FLIP_MDSE_CD
            ,O.ASL_MDSE_CD
            ,O.SVC_CONFIG_MSTR_PK
            ,O.ORD_QTY
            ,O.BAL_QTY
            ,O.SRC_DOC_LINE_OPEN_FLG
            ,O.ETA_DT
            ,O.CARR_CD
            ,DCC.DS_COND_CONST_VAL_TXT_05              AS SCE_ORD_TP_NM
            ,DCC.DS_COND_CONST_VAL_TXT_04              AS SCE_ORD_TP_CD
            ,SOT.SCE_ORD_TP_SORT_NUM
            ,NVL(DCC.DS_COND_CONST_VAL_TXT_01, #flgN#) AS RWS_CRT_CTRL_FLG
            ,DCC.DS_COND_CONST_VAL_TXT_02              AS RWS_CRT_CTRL_MODE
            ,O.RWS_OPEN_FLG
            ,S.SER_NUM
            ,CASE WHEN S.SER_NUM_COUNT &gt; 1 THEN #flgY#
                ELSE #flgN#
             END  AS SER_NUM_TAKE_FLG
            ,CASE WHEN SRC_DOC_LINE_OPEN_FLG = #flgN# THEN #flgN#
                ELSE NVL(DCC.DS_COND_CONST_VAL_TXT_01, #flgN#)
             END                                       AS RWS_FLG
            ,O.RWS_NUM
        FROM
             SCE_ORDER       O
            ,MDSE           MD
            ,RTL_WH         RW
            ,RTL_SWH        RSW
            ,SCE_ORD_TP     SOT
            ,DS_COND_CONST  DCC
            ,SER            S
        WHERE
            O.GLBL_CMPY_CD              = MD.GLBL_CMPY_CD
        AND O.MDSE_CD                   = MD.MDSE_CD
        AND MD.EZCANCELFLAG             = '0'
        AND O.GLBL_CMPY_CD              = RW.GLBL_CMPY_CD
        AND O.RTL_WH_CD                 = RW.RTL_WH_CD
        AND RW.EZCANCELFLAG             = '0'
        AND O.GLBL_CMPY_CD              = RSW.GLBL_CMPY_CD
        AND O.RTL_WH_CD                 = RSW.RTL_WH_CD
        AND O.RTL_SWH_CD                = RSW.RTL_SWH_CD
        AND RSW.EZCANCELFLAG            = '0' 
        AND O.GLBL_CMPY_CD              = SOT.GLBL_CMPY_CD
        AND O.SCE_ORD_TP_CD             = SOT.SCE_ORD_TP_CD
        AND SOT.INBD_OTBD_CD            = #inbdOtbdCd# -- INBOUND
        AND SOT.EZCANCELFLAG            = '0'
        AND SOT.GLBL_CMPY_CD            = DCC.GLBL_CMPY_CD
        AND SOT.SCE_ORD_TP_CD           = DCC.DS_COND_CONST_VAL_TXT_06
        AND DCC.DS_COND_CONST_GRP_ID    = #NLAL2030_RWS_CTRL#
        AND DCC.EZCANCELFLAG            = '0'
        AND O.GLBL_CMPY_CD              = S.GLBL_CMPY_CD(+)
        AND O.SRC_DOC_NUM               = S.SRC_DOC_NUM(+)
        AND O.SRC_DOC_LINE_NUM          = S.SRC_DOC_LINE_NUM(+)
        AND O.SRC_DOC_LINE_SUB_NUM      = S.SRC_DOC_LINE_SUB_NUM(+)
        AND O.GLBL_CMPY_CD              =  #glblCmpyCd#
        <isNotNull property="trxOrdNum">
        AND O.SRC_DOC_NUM               = #trxOrdNum#
        </isNotNull>
        <isNotNull property="mdseCd">
        AND O.MDSE_CD                   = #mdseCd#
        </isNotNull>
        <isNotNull property="flipMdseCd">
        AND O.FLIP_MDSE_CD              = #flipMdseCd#
        </isNotNull>
        <isNotNull property="fromLocCd">
        AND O.PTY_CD                    = #fromLocCd#
        </isNotNull>
        <isNotNull property="rwsRefNum">
        AND O.RWS_REF_NUM               = #rwsRefNum#
        </isNotNull>
        <!-- START 2021/04/05 F.Deola [QC#58611, DEL] -->
        <!-- <isNotNull property="rwsNum">
        AND O.RWS_NUM                   = #rwsNum#
        </isNotNull> -->
        <!-- END 2021/04/05 F.Deola [QC#58611, DEL] -->
        <isNotNull property="imptInvBolNum">
        AND O.IMPT_INV_BOL_NUM          = #imptInvBolNum#
        </isNotNull>
        <isNotNull property="carrCd">
        AND O.CARR_CD                   = #carrCd#
        </isNotNull>
        <isNotNull property="svcConfigMstrPk">
        AND O.SVC_CONFIG_MSTR_PK        = #svcConfigMstrPk#
        </isNotNull>
        <isNotNull property="rwsStsCd">
        AND O.RWS_STS_CD                = #rwsStsCd#
        </isNotNull>
        <isNotNull property="whInEtaDt_FR">
        AND O.ETA_DT                &gt;= #whInEtaDt_FR#
        </isNotNull>
        <isNotNull property="whInEtaDt_TO">
        AND O.ETA_DT                &lt;= #whInEtaDt_TO#
        </isNotNull>
        <isNotNull property="rtlWhCd">
        AND O.RTL_WH_CD                 = #rtlWhCd#
        </isNotNull>
        <isNotNull property="rtlSwhCd">
        AND O.RTL_SWH_CD                = #rtlSwhCd#
        </isNotNull>
        <isNotNull property="serNum">
        AND S.SER_NUM                   = #serNum#
        </isNotNull>
        <isNotNull property="sceOrdTpList">
            <iterate property="sceOrdTpList" var="sceOrdTpList[]" open="AND O.SCE_ORD_TP_CD IN (" conjunction= ", " close=")">
                #sceOrdTpList[]#
            </iterate>
        </isNotNull>
        
        <isNotNull property="whCd">
        AND EXISTS (
                SELECT 1
                FROM RCV_WH RCV
                WHERE
                    RCV.GLBL_CMPY_CD        = O.GLBL_CMPY_CD
                AND RCV.RWS_NUM             = O.RWS_NUM
                AND RCV.RWS_DTL_LINE_NUM    = O.RWS_DTL_LINE_NUM
            )
        </isNotNull>
        AND ROWNUM &lt; #rowNum#
        AND SORT_NUM = 1
        ORDER BY
             O.SRC_DOC_NUM
            ,O.SRC_DOC_LINE_NUM
            ,O.SRC_DOC_LINE_SUB_NUM
    </statement>

    <statement id="checkKittingCancel" parameterClass="Map" resultClass="String">
        SELECT
            CASE WHEN SO.SCE_ORD_TP_CD = #ku# THEN #uc#
                ELSE #kc#
            END AS SCE_ORD_TP_CD
        FROM
            RWS_HDR  RH
           ,SHPG_ORD SO
        WHERE
            RH.GLBL_CMPY_CD       = #glblCmpyCd#
        AND RH.RWS_NUM            = #rwsNum#
        AND RH.GLBL_CMPY_CD       = SO.GLBL_CMPY_CD
        AND RH.PO_RCV_TRX_HDR_NUM = SO.SO_NUM
        AND RH.EZCANCELFLAG       = '0'
        AND SO.EZCANCELFLAG       = '0'
    </statement>

	<!-- START 2017/08/10 S.Katsuma [QC#19232,ADD] -->
    <statement id="checkOrdRwsQty" parameterClass="Map" resultClass="Map">
                SELECT
           <isEqual property="searchRwsTp" compareValue="PO">
            PD.PO_ORD_NUM                          AS SRC_ORD_NUM
           ,PD.PO_ORD_DTL_LINE_NUM                 AS SRC_ORD_LINE_NUM
           ,NULL                                   AS SRC_ORD_LINE_SUB_NUM
           </isEqual>

           <isEqual property="searchRwsTp" compareValue="CPO">
            DCRV.CPO_ORD_NUM                       AS SRC_ORD_NUM
           ,DCRV.DS_CPO_RTRN_LINE_NUM              AS SRC_ORD_LINE_NUM
           ,DCRV.DS_CPO_RTRN_LINE_SUB_NUM          AS SRC_ORD_LINE_SUB_NUM
           </isEqual>

           ,SUM(RD.RWS_QTY - RD.RWS_PUT_AWAY_QTY)  AS RWS_OPEN_QTY
        FROM
            RWS_HDR                RH
           ,RWS_DTL                RD
           ,RWS_STS                RS

           <isEqual property="searchRwsTp" compareValue="PO">
           ,PO                     P
           ,PO_DTL                 PD
           </isEqual>

           <isEqual property="searchRwsTp" compareValue="CPO">
           ,DS_CPO_RTRN_DTL        DCRV
           </isEqual>

        WHERE
            RH.GLBL_CMPY_CD               = #glblCmpyCd#
        AND RH.EZCANCELFLAG               = '0'
        AND RD.GLBL_CMPY_CD               = #glblCmpyCd#
        AND RD.EZCANCELFLAG               = '0'
        AND RS.GLBL_CMPY_CD               = #glblCmpyCd#
        AND RS.EZCANCELFLAG               = '0'
        AND RH.GLBL_CMPY_CD               = RD.GLBL_CMPY_CD
        AND RH.RWS_NUM                    = RD.RWS_NUM
        AND RD.RWS_STS_CD                 = RS.RWS_STS_CD
        AND RS.RWS_OPEN_FLG               = 'Y'

        <isEqual property="searchRwsTp" compareValue="PO">
        AND P.PO_ORD_NUM                  = #trxOrdNum#
        AND P.EZCANCELFLAG                = '0'
        AND PD.PO_ORD_DTL_LINE_NUM        = #trxLineNum#
        AND PD.EZCANCELFLAG               = '0'
        AND RH.GLBL_CMPY_CD               = P.GLBL_CMPY_CD
        AND RH.PO_RCV_TRX_HDR_NUM         = P.PO_ORD_NUM
        AND P.GLBL_CMPY_CD                = PD.GLBL_CMPY_CD
        AND P.PO_ORD_NUM                  = PD.PO_ORD_NUM
        AND RD.PO_RCV_TRX_LINE_NUM        = PD.PO_ORD_DTL_LINE_NUM
        </isEqual>

        <isEqual property="searchRwsTp" compareValue="CPO">
        AND DCRV.CPO_ORD_NUM              = #trxOrdNum#
        AND DCRV.DS_CPO_RTRN_LINE_NUM     = #trxLineNum#
        AND DCRV.DS_CPO_RTRN_LINE_SUB_NUM = #trxLineSubNum#
        AND DCRV.EZCANCELFLAG             = '0'
        AND RH.GLBL_CMPY_CD               = DCRV.GLBL_CMPY_CD
        AND RH.TRX_ORD_NUM                = DCRV.CPO_ORD_NUM
        AND RD.TRX_LINE_NUM               = DCRV.DS_CPO_RTRN_LINE_NUM
        AND RD.TRX_LINE_SUB_NUM           = DCRV.DS_CPO_RTRN_LINE_SUB_NUM
        </isEqual>

        GROUP BY
           <isEqual property="searchRwsTp" compareValue="PO">
            PD.PO_ORD_NUM
           ,PD.PO_ORD_DTL_LINE_NUM
           ,NULL
           </isEqual>

           <isEqual property="searchRwsTp" compareValue="CPO">
            DCRV.CPO_ORD_NUM
           ,DCRV.DS_CPO_RTRN_LINE_NUM
           ,DCRV.DS_CPO_RTRN_LINE_SUB_NUM
           </isEqual>

    </statement>
    <!-- END 2017/08/10 S.Katsuma [QC#19232,ADD] -->
    <!-- 2017/09/21 S.Endo Add Sol#069(QC#18270) START -->
    <statement id="getBuyBackFromRtlWh" parameterClass="Map" resultClass="Map">
        SELECT
            RD.SHIP_FROM_RTL_WH_CD
           ,RD.SHIP_FROM_RTL_SWH_CD
        FROM
            RWS_DTL RD
        WHERE 
            RD.GLBL_CMPY_CD     = #glblCmpyCd#
        AND RD.RWS_NUM          = #rwsNum#
        AND RD.RWS_DTL_LINE_NUM = #rwsDtlLineNum#
        AND RD.EZCANCELFLAG     = '0'
    </statement>
	<!-- 2017/09/21 S.Endo Add Sol#069(QC#18270) END -->

    <statement id="getSvcMachMstrHist" parameterClass="Map" resultMap="result.getSvcMachMstrHist">
        SELECT
              MMH.GLBL_CMPY_CD
            , MMH.SVC_MACH_MSTR_H_PK
            , MMH.SVC_MACH_MSTR_PK
            , MMH.SVC_MACH_MSTR_STS_CD
        FROM
            SVC_MACH_MSTR_HIST MMH
        WHERE
            MMH.GLBL_CMPY_CD         = #glblCmpyCd#
            AND MMH.SVC_MACH_MSTR_PK = #svcMachMstrPk#
            AND MMH.EZCANCELFLAG     = '0'
        ORDER BY
            MMH.HIST_CRAT_TS DESC
    </statement>
    <resultMap id="result.getSvcMachMstrHist" class="SVC_MACH_MSTR_HISTTMsg">
        <result property="glblCmpyCd"         column="GLBL_CMPY_CD"           javaType="EZDTStringItem"/>
        <result property="svcMachMstrHPk"     column="SVC_MACH_MSTR_H_PK"     javaType="EZDTBigDecimalItem"/>
        <result property="svcMachMstrPk"      column="SVC_MACH_MSTR_PK"       javaType="EZDTBigDecimalItem"/>
        <result property="svcMachMstrStsCd"   column="SVC_MACH_MSTR_STS_CD"   javaType="EZDTStringItem"/>
    </resultMap>

    <!-- START 2023/03/02 F.Fadriquela [QC#61225,DEL] -->
    <!-- <statement id="getSvcMachMstrPk" parameterClass="Map" resultClass="BigDecimal"> -->
        <!-- SELECT
              SMM.SVC_MACH_MSTR_PK
        FROM
            SVC_MACH_MSTR SMM
        WHERE
            SMM.GLBL_CMPY_CD         = #glblCmpyCd#
            AND SMM.TRX_HDR_NUM      = #trxHdrNum#
            AND SMM.TRX_LINE_NUM     = #trxLineNum#
            AND SMM.TRX_LINE_SUB_NUM = #trxLineSubNum#
            AND SMM.EZCANCELFLAG     = '0' -->
    <!-- </statement> -->
    <!-- END 2023/03/02 F.Fadriquela [QC#61225,DEL] -->

    <statement id="getPermissionWhList" parameterClass="Map" resultClass="String">
        SELECT
            SCWP.RTL_WH_CD
        FROM 
            SCHD_COORD_WH_PMSN SCWP
        WHERE
            SCWP.GLBL_CMPY_CD      = #glblCmpyCd#
        AND SCWP.SCHD_COORD_PSN_CD = #schdCoordPsnCd#
        AND #salesDate# BETWEEN SCWP.EFF_FROM_DT AND NVL(SCWP.EFF_THRU_DT,'99991231')
        AND SCWP.EZCANCELFLAG      = '0'
        <!-- START 2023/10/11 G.Quan [QC#61793, ADD] -->

        UNION

        SELECT
              RW.RTL_WH_CD
        FROM 
              SCHD_COORD_WH_PMSN    SCWP
            , RTL_WH                RW
        WHERE
            SCWP.GLBL_CMPY_CD       = #glblCmpyCd#
        AND SCWP.SCHD_COORD_PSN_CD  = #schdCoordPsnCd#
        AND #salesDate# BETWEEN SCWP.EFF_FROM_DT AND NVL(SCWP.EFF_THRU_DT, '99991231')
        AND SCWP.RTL_WH_CATG_CD     IS NOT NULL
        AND SCWP.GLBL_CMPY_CD       = RW.GLBL_CMPY_CD
        AND SCWP.RTL_WH_CATG_CD     = RW.RTL_WH_CATG_CD
        AND SCWP.EZCANCELFLAG       = '0'
        AND RW.EZCANCELFLAG         = '0'

        UNION

        SELECT
              RW.RTL_WH_CD
        FROM 
              SCHD_COORD_WH_PMSN    SCWP
            , RTL_WH                RW
        WHERE
            SCWP.GLBL_CMPY_CD       = #glblCmpyCd#
        AND SCWP.SCHD_COORD_PSN_CD  = #schdCoordPsnCd#
        AND #salesDate# BETWEEN SCWP.EFF_FROM_DT AND NVL(SCWP.EFF_THRU_DT, '99991231')
        AND SCWP.PHYS_WH_CD         IS NOT NULL
        AND SCWP.GLBL_CMPY_CD       = RW.GLBL_CMPY_CD
        AND SCWP.PHYS_WH_CD         = RW.PHYS_WH_CD
        AND SCWP.EZCANCELFLAG       = '0'
        AND RW.EZCANCELFLAG         = '0'
        <!-- END 2023/10/11 G.Quan [QC#61793, ADD] -->
    </statement>

    <statement id="getSerialFromReturnOrdRws" parameterClass="Map" resultClass="String">
        SELECT
            RS.SER_NUM
        FROM 
            RWS_SER RS
        WHERE
            RS.GLBL_CMPY_CD = #glblCmpyCd#
        AND RS.RWS_NUM      = #rwsNum#
        AND RS.RWS_LINE_NUM = #rwsLineNum#
        AND RS.MDSE_CD      = #mdseCd#
        AND RS.EZCANCELFLAG = '0'
    </statement>

    <statement id="getSerialFromPoRws" parameterClass="Map" resultClass="Map">
        SELECT
             RS.SER_NUM
            ,RD_NEW.RWS_DTL_LINE_NUM
            ,RD_NEW.MDSE_CD
        FROM
             RWS_DTL RD_OLD
            ,RWS_DTL RD_NEW
            ,RWS_SER RS
        WHERE
            RD_OLD.GLBL_CMPY_CD     = #glblCmpyCd#
        AND RD_OLD.RWS_NUM          = #oldRwsNum#
        AND RD_OLD.EZCANCELFLAG     = '0'
        AND RD_NEW.GLBL_CMPY_CD     = RD_OLD.GLBL_CMPY_CD
        AND RD_NEW.TRX_LINE_NUM     = RD_OLD.TRX_LINE_NUM
        AND RD_NEW.TRX_LINE_SUB_NUM = RD_OLD.TRX_LINE_SUB_NUM
        AND RD_NEW.MDSE_CD          = RD_OLD.MDSE_CD
        AND RD_NEW.RWS_NUM          = #newRwsNum#
        AND RD_NEW.EZCANCELFLAG     = '0'
        AND RS.GLBL_CMPY_CD         = RD_OLD.GLBL_CMPY_CD
        AND RS.RWS_LINE_NUM         = RD_OLD.RWS_DTL_LINE_NUM
        AND RS.MDSE_CD              = RD_OLD.MDSE_CD
        AND RS.EZCANCELFLAG         = '0'
    </statement>

    <statement id="getDsCpoRtrnInfo" parameterClass="Map" resultClass="Map">
        SELECT
              DCRD.SVC_MACH_MSTR_PK
             ,DCRD.STK_STS_CD
             ,DCRD.INVTY_LOC_CD
             ,DCRD.CPO_ORD_NUM
             ,DCRD.DS_CPO_RTRN_LINE_NUM
             ,DCRD.DS_CPO_RTRN_LINE_SUB_NUM
        FROM
              CPO CPO
             ,DS_CPO_RTRN_DTL DCRD
        WHERE
            CPO.GLBL_CMPY_CD              = #glblCmpyCd#
        AND CPO.CPO_ORD_NUM               = #cpoOrdNum#
        AND CPO.CPO_ORD_NUM               = DCRD.CPO_ORD_NUM
        AND DCRD.DS_CPO_RTRN_LINE_NUM     = #dsCpoRtrnLineNum#
        AND DCRD.DS_CPO_RTRN_LINE_SUB_NUM = #dsCpoRtrnLineSubNum#
        AND DCRD.DS_ORD_POSN_NUM          = #dsOrdPosnNum#
        AND CPO.EZCANCELFLAG              = '0'
        AND DCRD.EZCANCELFLAG             = '0'
    </statement>

    <statement id="getOpenRwsQty" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            MAIN.RCV_QTY - MAIN.ACTL_RCV_QTY AS OPEN_QTY
        FROM (
            SELECT
                 SUM(PRD.PO_RCV_QTY) AS RCV_QTY
                ,SUM(PRD.ACTL_RCV_QTY) AS ACTL_RCV_QTY
            FROM
                 PO_RCV_HDR PRH
                ,PO_RCV_DTL PRD
            WHERE
                PRH.GLBL_CMPY_CD              = #glblCmpyCd#
            AND PRH.PO_RCV_TRX_HDR_NUM        = #trxOrdNum#
            AND PRH.GLBL_CMPY_CD              = PRD.GLBL_CMPY_CD
            AND PRH.PO_RCV_NUM                = PRD.PO_RCV_NUM
            <isNotNull property="trxLineNum">
            AND PRD.PO_RCV_TRX_LINE_NUM       = #trxLineNum#
            </isNotNull>
            AND PRD.RWS_STS_CD                IN(#printed#, #partially#)
            AND PRH.EZCANCELFLAG              = '0'
            AND PRD.EZCANCELFLAG              = '0'
        ) MAIN
    </statement>

    <statement id="getRwsLineNum" parameterClass="Map" resultClass="String">
        SELECT
            RD.RWS_DTL_LINE_NUM
        FROM
            RWS_DTL RD
        WHERE
            RD.GLBL_CMPY_CD     = #glblCmpyCd#
        AND RD.RWS_NUM          = #rwsNum#
        AND RD.TRX_LINE_NUM     = #dsCpoRtrnLineNum#
        AND RD.TRX_LINE_SUB_NUM = #dsCpoRtrnLineSubNum#
        AND RD.EZCANCELFLAG     = '0'
    </statement>

    <statement id="getRwsCnt" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(RD.GLBL_CMPY_CD) AS CNT
        FROM
            RWS_DTL RD
        WHERE
            RD.GLBL_CMPY_CD = #glblCmpyCd#
        AND RD.RWS_NUM      = #rwsNum#
        <iterate property="rwsDtlLineList" var="rwsDtlLineList[]" open="AND RD.RWS_DTL_LINE_NUM NOT IN (" conjunction= ", " close=")">
            #rwsDtlLineList[]#
        </iterate>
        AND RD.EZCANCELFLAG       = '0'
    </statement>
 
    <!-- START 2020/12/14 A.Marte [QC#58069,ADD] -->
    <statement id="getWmsPdlt" parameterClass="Map" resultClass="Map">
        SELECT
            *
        FROM
            WMS_INBD_TRX TRX
        WHERE
            GLBL_CMPY_CD = #glblCmpyCd#
        AND INBD_ORD_NUM = #inbdOrdNum#
        AND WMS_TASK_CD   = #wmsTaskCd#
    </statement>
    <!-- END 2020/12/14 A.Marte [QC#58069,ADD] -->
    <!-- START 2021/03/22 A.Marte [QC#57124,ADD] -->
    <statement id="getPrchReqRef" parameterClass="Map" resultClass="Map">
        SELECT
            RD.PRCH_REQ_NUM,
            RD.PRCH_REQ_LINE_NUM,
            RD.PRCH_REQ_LINE_SUB_NUM
        FROM
            RWS_DTL RD
        WHERE
            RD.GLBL_CMPY_CD                = #glblCmpyCd#
        AND RD.RWS_NUM                     = #rwsNum#
        <isNotNull property="trxLineNum">
        AND RD.TRX_LINE_NUM                = #trxLineNum#
        </isNotNull>
        <isNotNull property="trxLineSubNum">
        AND RD.TRX_LINE_SUB_NUM            = #trxLineSubNum#
        </isNotNull>
        AND RD.EZCANCELFLAG                = '0'
    </statement>
    <!-- END 2021/03/22 A.Marte [QC#57124,ADD] -->
    <!-- START 2021/11/11 A.Marte [QC#59350,ADD] -->
    <statement id="getValidInvtyLocCd" parameterClass="Map" resultClass="String">
        SELECT
            DILV.INVTY_LOC_CD
        FROM
            DS_INVTY_LOC_V DILV
        WHERE
            DILV.GLBL_CMPY_CD                = #glblCmpyCd#
        AND DILV.RTL_WH_CD                   = #rtlWhCd#
        AND DILV.RTL_SWH_CD                  = #rtlSwhCd#
        AND DILV.EZCANCELFLAG                = '0'
    </statement>
    <!-- END 2021/11/11 A.Marte [QC#59350,ADD] -->
    <!-- START 2022/10/26 M.Kikushima [QC#60413,ADD] -->
    <statement id="countValidAPInvoiceForCancel" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             COUNT(*)
        FROM
             CM_AP_INV_HDR      CAIH
            ,CM_AP_INV_DTL      CAID
        WHERE 
             CAIH.GLBL_CMPY_CD        = #glblCmpyCd#
        AND  CAIH.PO_NUM              = #poNum#
        AND  CAIH.ACCT_INV_STS_CD     = #acctInvStsCd#
        AND  CAIH.EZCANCELFLAG        = '0'
        AND  CAIH.GLBL_CMPY_CD        = CAID.GLBL_CMPY_CD
        AND  CAIH.AP_VND_INV_NUM      = CAID.AP_VND_INV_NUM
        AND  CAIH.PO_NUM              = CAID.PO_NUM
        AND  CAID.EZCANCELFLAG        = '0'
    </statement>
    <!-- END 2022/10/26 M.Kikushima [QC#60413,ADD] -->

    <!-- START 2022/11/23 R.Azucena [QC#60835,ADD] -->
    <statement id="getExistRwsRefNumList" parameterClass="Map" resultClass="String">
        SELECT
             R.RWS_REF_NUM
        FROM
             RWS_HDR R
        WHERE 1=1
        AND  R.GLBL_CMPY_CD = #glblCmpyCd#
        AND  R.WH_CD        = #whCd#
        AND  REGEXP_LIKE(R.RWS_REF_NUM, #rwsRefNum#)
        AND  R.EZCANCELFLAG = '0'
    </statement>
    <!-- END 2022/11/23 R.Azucena [QC#60835,ADD] -->
</sqlMap>
