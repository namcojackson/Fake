//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20231106144517000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NMAL6700_FBMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NMAL6700;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NMAL6700 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NMAL6700_FBMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_CHK_BOX_F1*/
	public final EZDBStringItem              xxChkBox_F1;

    /** DS_CUST_TRX_RULE_PK_F1*/
	public final EZDBBigDecimalItem              dsCustTrxRulePk_F1;

    /** DS_TRX_RULE_TP_CD_F1*/
	public final EZDBStringItemArray              dsTrxRuleTpCd_F1;

    /** DS_TRX_RULE_TP_NM_F2*/
	public final EZDBStringItemArray              dsTrxRuleTpNm_F2;

    /** DS_TRX_RULE_TP_CD_F3*/
	public final EZDBStringItem              dsTrxRuleTpCd_F3;

    /** DS_PO_REQ_FLG_F1*/
	public final EZDBStringItem              dsPoReqFlg_F1;

    /** HARD_COPY_REQ_FLG_F1*/
	public final EZDBStringItem              hardCopyReqFlg_F1;

    /** DS_BLKT_PO_NUM_F1*/
	public final EZDBStringItem              dsBlktPoNum_F1;

    /** DS_PO_EXPR_DT_F1*/
	public final EZDBDateItem              dsPoExprDt_F1;

    /** DS_DEF_BILL_TO_CD_F1*/
	public final EZDBStringItem              dsDefBillToCd_F1;

    /** DS_DEF_SHIP_TO_CD_F1*/
	public final EZDBStringItem              dsDefShipToCd_F1;

    /** CUST_EFF_LVL_CD_F1*/
	public final EZDBStringItemArray              custEffLvlCd_F1;

    /** CUST_EFF_LVL_NM_F2*/
	public final EZDBStringItemArray              custEffLvlNm_F2;

    /** CUST_EFF_LVL_CD_F3*/
	public final EZDBStringItem              custEffLvlCd_F3;

    /** DS_CR_CARD_REQ_FLG_F1*/
	public final EZDBStringItem              dsCrCardReqFlg_F1;

    /** DS_OVNGT_ALLW_FLG_F1*/
	public final EZDBStringItem              dsOvngtAllwFlg_F1;

    /** _EZUpdateDateTime_F1*/
	public final EZDBStringItem              ezUpTime_F1;

    /** _EZUpTimeZone_F1*/
	public final EZDBStringItem              ezUpTimeZone_F1;

    /** XX_REC_HIST_CRAT_TS_F1*/
	public final EZDBStringItem              xxRecHistCratTs_F1;

    /** XX_REC_HIST_CRAT_BY_NM_F1*/
	public final EZDBStringItem              xxRecHistCratByNm_F1;

    /** XX_REC_HIST_UPD_TS_F1*/
	public final EZDBStringItem              xxRecHistUpdTs_F1;

    /** XX_REC_HIST_UPD_BY_NM_F1*/
	public final EZDBStringItem              xxRecHistUpdByNm_F1;

    /** XX_REC_HIST_TBL_NM_F1*/
	public final EZDBStringItem              xxRecHistTblNm_F1;


	/**
	 * NMAL6700_FBMsg is constructor.
	 * The initialization when the instance of NMAL6700_FBMsg is generated.
	 */
	public NMAL6700_FBMsg() {
		this(false, -1);
	}

	/**
	 * NMAL6700_FBMsg is constructor.
	 * The initialization when the instance of NMAL6700_FBMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NMAL6700_FBMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxChkBox_F1 = (EZDBStringItem)newItem("xxChkBox_F1");
		dsCustTrxRulePk_F1 = (EZDBBigDecimalItem)newItem("dsCustTrxRulePk_F1");
		dsTrxRuleTpCd_F1 = (EZDBStringItemArray)newItemArray("dsTrxRuleTpCd_F1");
		dsTrxRuleTpNm_F2 = (EZDBStringItemArray)newItemArray("dsTrxRuleTpNm_F2");
		dsTrxRuleTpCd_F3 = (EZDBStringItem)newItem("dsTrxRuleTpCd_F3");
		dsPoReqFlg_F1 = (EZDBStringItem)newItem("dsPoReqFlg_F1");
		hardCopyReqFlg_F1 = (EZDBStringItem)newItem("hardCopyReqFlg_F1");
		dsBlktPoNum_F1 = (EZDBStringItem)newItem("dsBlktPoNum_F1");
		dsPoExprDt_F1 = (EZDBDateItem)newItem("dsPoExprDt_F1");
		dsDefBillToCd_F1 = (EZDBStringItem)newItem("dsDefBillToCd_F1");
		dsDefShipToCd_F1 = (EZDBStringItem)newItem("dsDefShipToCd_F1");
		custEffLvlCd_F1 = (EZDBStringItemArray)newItemArray("custEffLvlCd_F1");
		custEffLvlNm_F2 = (EZDBStringItemArray)newItemArray("custEffLvlNm_F2");
		custEffLvlCd_F3 = (EZDBStringItem)newItem("custEffLvlCd_F3");
		dsCrCardReqFlg_F1 = (EZDBStringItem)newItem("dsCrCardReqFlg_F1");
		dsOvngtAllwFlg_F1 = (EZDBStringItem)newItem("dsOvngtAllwFlg_F1");
		ezUpTime_F1 = (EZDBStringItem)newItem("ezUpTime_F1");
		ezUpTimeZone_F1 = (EZDBStringItem)newItem("ezUpTimeZone_F1");
		xxRecHistCratTs_F1 = (EZDBStringItem)newItem("xxRecHistCratTs_F1");
		xxRecHistCratByNm_F1 = (EZDBStringItem)newItem("xxRecHistCratByNm_F1");
		xxRecHistUpdTs_F1 = (EZDBStringItem)newItem("xxRecHistUpdTs_F1");
		xxRecHistUpdByNm_F1 = (EZDBStringItem)newItem("xxRecHistUpdByNm_F1");
		xxRecHistTblNm_F1 = (EZDBStringItem)newItem("xxRecHistTblNm_F1");
	}

	/**
	 * get the type of array which is stored
	 * @return NMAL6700_FBMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NMAL6700_FBMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxChkBox_F1", "xxChkBox_F1", "F1", null, TYPE_HANKAKUEIJI, "1", null},
	{"dsCustTrxRulePk_F1", "dsCustTrxRulePk_F1", "F1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsTrxRuleTpCd_F1", "dsTrxRuleTpCd_F1", "F1", "99", TYPE_HANKAKUEISU, "2", null},
	{"dsTrxRuleTpNm_F2", "dsTrxRuleTpNm_F2", "F2", "99", TYPE_HANKAKUEISU, "60", null},
	{"dsTrxRuleTpCd_F3", "dsTrxRuleTpCd_F3", "F3", null, TYPE_HANKAKUEISU, "2", null},
	{"dsPoReqFlg_F1", "dsPoReqFlg_F1", "F1", null, TYPE_HANKAKUEISU, "1", null},
	{"hardCopyReqFlg_F1", "hardCopyReqFlg_F1", "F1", null, TYPE_HANKAKUEISU, "1", null},
	{"dsBlktPoNum_F1", "dsBlktPoNum_F1", "F1", null, TYPE_HANKAKUEISU, "30", null},
	{"dsPoExprDt_F1", "dsPoExprDt_F1", "F1", null, TYPE_NENTSUKIHI, "8", null},
	{"dsDefBillToCd_F1", "dsDefBillToCd_F1", "F1", null, TYPE_HANKAKUEISU, "20", null},
	{"dsDefShipToCd_F1", "dsDefShipToCd_F1", "F1", null, TYPE_HANKAKUEISU, "20", null},
	{"custEffLvlCd_F1", "custEffLvlCd_F1", "F1", "99", TYPE_HANKAKUEISU, "2", null},
	{"custEffLvlNm_F2", "custEffLvlNm_F2", "F2", "99", TYPE_HANKAKUEISU, "60", null},
	{"custEffLvlCd_F3", "custEffLvlCd_F3", "F3", null, TYPE_HANKAKUEISU, "2", null},
	{"dsCrCardReqFlg_F1", "dsCrCardReqFlg_F1", "F1", null, TYPE_HANKAKUEISU, "1", null},
	{"dsOvngtAllwFlg_F1", "dsOvngtAllwFlg_F1", "F1", null, TYPE_HANKAKUEISU, "1", null},
	{"ezUpTime_F1", "ezUpTime_F1", "F1", null, TYPE_HANKAKUEISU, "17", null},
	{"ezUpTimeZone_F1", "ezUpTimeZone_F1", "F1", null, TYPE_HANKAKUEISU, "5", null},
	{"xxRecHistCratTs_F1", "xxRecHistCratTs_F1", "F1", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistCratByNm_F1", "xxRecHistCratByNm_F1", "F1", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistUpdTs_F1", "xxRecHistUpdTs_F1", "F1", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistUpdByNm_F1", "xxRecHistUpdByNm_F1", "F1", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistTblNm_F1", "xxRecHistTblNm_F1", "F1", null, TYPE_HANKAKUEISU, "60", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_CHK_BOX",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_F1
        {"DS_CUST_TRX_RULE_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsCustTrxRulePk_F1
        {"DS_TRX_RULE_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsTrxRuleTpCd_F1
        {"DS_TRX_RULE_TP_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsTrxRuleTpNm_F2
        {"DS_TRX_RULE_TP_CD", YES,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsTrxRuleTpCd_F3
        {"DS_PO_REQ_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsPoReqFlg_F1
        {"HARD_COPY_REQ_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//hardCopyReqFlg_F1
        {"DS_BLKT_PO_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsBlktPoNum_F1
        {"DS_PO_EXPR_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//dsPoExprDt_F1
        {"DS_DEF_BILL_TO_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsDefBillToCd_F1
        {"DS_DEF_SHIP_TO_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsDefShipToCd_F1
        {"CUST_EFF_LVL_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//custEffLvlCd_F1
        {"CUST_EFF_LVL_NM",  NO,  null,null,"0", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//custEffLvlNm_F2
        {"CUST_EFF_LVL_CD", YES,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//custEffLvlCd_F3
        {"DS_CR_CARD_REQ_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsCrCardReqFlg_F1
        {"DS_OVNGT_ALLW_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOvngtAllwFlg_F1
        {"_EZUpdateDateTime",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTime_F1
        {"_EZUpTimeZone",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTimeZone_F1
        {"XX_REC_HIST_CRAT_TS",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratTs_F1
        {"XX_REC_HIST_CRAT_BY_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratByNm_F1
        {"XX_REC_HIST_UPD_TS",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdTs_F1
        {"XX_REC_HIST_UPD_BY_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdByNm_F1
        {"XX_REC_HIST_TBL_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistTblNm_F1
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

