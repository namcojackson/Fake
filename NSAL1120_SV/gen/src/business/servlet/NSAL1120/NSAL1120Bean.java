// This file was automatically generated by Screen Field Definition Document and XLA200710010
// Generated on    :20220404140844000
// Velocity Macro:svltdatabean.vm V200604010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL1120Bean.java Copyright FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */

package  business.servlet.NSAL1120;

import parts.servletcommon.EZDCommonDataBean;

/*
 * NSAL1120 is data bean class.
 */
public class NSAL1120Bean extends EZDCommonDataBean {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	//Constant Definition Area
	/** XX_MODE_CD*/
	public static final String xxModeCd = "xxModeCd";

	/** SVC_CR_REBIL_PK*/
	public static final String svcCrRebilPk = "svcCrRebilPk";

	/** SVC_CR_REBIL_STS_CD*/
	public static final String svcCrRebilStsCd = "svcCrRebilStsCd";

	/** SVC_CR_REBIL_DTL_PK*/
	public static final String svcCrRebilDtlPk = "svcCrRebilDtlPk";

	/** SVC_INV_LINE_PK*/
	public static final String svcInvLinePk = "svcInvLinePk";

	/** SVC_MACH_MSTR_PK_P*/
	public static final String svcMachMstrPk_P = "svcMachMstrPk_P";

	/** MTR_LB_CD_P*/
	public static final String mtrLbCd_P = "mtrLbCd_P";

	/** GLBL_CMPY_CD*/
	public static final String glblCmpyCd = "glblCmpyCd";

	/** CUST_INCDT_ID*/
	public static final String custIncdtId = "custIncdtId";

	/** SVC_CR_REBIL_STS_DESC_TXT*/
	public static final String svcCrRebilStsDescTxt = "svcCrRebilStsDescTxt";

	/** SVC_CR_REBIL_DESC_TXT*/
	public static final String svcCrRebilDescTxt = "svcCrRebilDescTxt";

	/** DS_CONTR_CATG_CD*/
	public static final String dsContrCatgCd = "dsContrCatgCd";

	/** DS_CONTR_CATG_ABBR_NM*/
	public static final String dsContrCatgAbbrNm = "dsContrCatgAbbrNm";

	/** DS_CONTR_NUM*/
	public static final String dsContrNum = "dsContrNum";

	/** XX_MODE_IND*/
	public static final String xxModeInd = "xxModeInd";

	/** _EZUpdateDateTime*/
	public static final String ezUpTime = "ezUpTime";

	/** _EZUpTimeZone*/
	public static final String ezUpTimeZone = "ezUpTimeZone";

	/** XX_PAGE_SHOW_FROM_NUM_A*/
	public static final String xxPageShowFromNum_A = "xxPageShowFromNum_A";

	/** XX_PAGE_SHOW_TO_NUM_A*/
	public static final String xxPageShowToNum_A = "xxPageShowToNum_A";

	/** XX_PAGE_SHOW_OF_NUM_A*/
	public static final String xxPageShowOfNum_A = "xxPageShowOfNum_A";

	/** XX_PAGE_SHOW_FROM_NUM_B*/
	public static final String xxPageShowFromNum_B = "xxPageShowFromNum_B";

	/** XX_PAGE_SHOW_TO_NUM_B*/
	public static final String xxPageShowToNum_B = "xxPageShowToNum_B";

	/** XX_PAGE_SHOW_OF_NUM_B*/
	public static final String xxPageShowOfNum_B = "xxPageShowOfNum_B";

	/** XX_PAGE_SHOW_FROM_NUM_C*/
	public static final String xxPageShowFromNum_C = "xxPageShowFromNum_C";

	/** XX_PAGE_SHOW_TO_NUM_C*/
	public static final String xxPageShowToNum_C = "xxPageShowToNum_C";

	/** XX_PAGE_SHOW_OF_NUM_C*/
	public static final String xxPageShowOfNum_C = "xxPageShowOfNum_C";

	/** A*/
	public static final String A = "A";

	/** SVC_CR_REBIL_PK_A*/
	public static final String svcCrRebilPk_A = "svcCrRebilPk_A";

	/** SVC_CR_REBIL_DTL_PK_A*/
	public static final String svcCrRebilDtlPk_A = "svcCrRebilDtlPk_A";

	/** ORIG_SVC_INV_NUM_A*/
	public static final String origSvcInvNum_A = "origSvcInvNum_A";

	/** DS_CONTR_DTL_PK_A*/
	public static final String dsContrDtlPk_A = "dsContrDtlPk_A";

	/** SVC_MACH_MSTR_PK_A*/
	public static final String svcMachMstrPk_A = "svcMachMstrPk_A";

	/** XX_SCR_ITEM_40_TXT_A*/
	public static final String xxScrItem40Txt_A = "xxScrItem40Txt_A";

	/** SER_NUM_A*/
	public static final String serNum_A = "serNum_A";

	/** MDSE_CD_A*/
	public static final String mdseCd_A = "mdseCd_A";

	/** MDSE_DESC_SHORT_TXT_A*/
	public static final String mdseDescShortTxt_A = "mdseDescShortTxt_A";

	/** BASE_BLLG_FROM_DT_A*/
	public static final String baseBllgFromDt_A = "baseBllgFromDt_A";

	/** BASE_BLLG_THRU_DT_A*/
	public static final String baseBllgThruDt_A = "baseBllgThruDt_A";

	/** OLD_BASE_DEAL_AMT_A*/
	public static final String oldBaseDealAmt_A = "oldBaseDealAmt_A";

	/** NEW_BASE_DEAL_AMT_A*/
	public static final String newBaseDealAmt_A = "newBaseDealAmt_A";

	/** OLD_BASE_UNIT_AMT_A*/
	public static final String oldBaseUnitAmt_A = "oldBaseUnitAmt_A";

	/** NEW_BASE_UNIT_AMT_A*/
	public static final String newBaseUnitAmt_A = "newBaseUnitAmt_A";

	/** XX_REC_HIST_CRAT_TS_A*/
	public static final String xxRecHistCratTs_A = "xxRecHistCratTs_A";

	/** XX_REC_HIST_CRAT_BY_NM_A*/
	public static final String xxRecHistCratByNm_A = "xxRecHistCratByNm_A";

	/** XX_REC_HIST_UPD_TS_A*/
	public static final String xxRecHistUpdTs_A = "xxRecHistUpdTs_A";

	/** XX_REC_HIST_UPD_BY_NM_A*/
	public static final String xxRecHistUpdByNm_A = "xxRecHistUpdByNm_A";

	/** XX_REC_HIST_TBL_NM_A*/
	public static final String xxRecHistTblNm_A = "xxRecHistTblNm_A";

	/** B*/
	public static final String B = "B";

	/** XX_ROW_NUM_B*/
	public static final String xxRowNum_B = "xxRowNum_B";

	/** XX_CHK_BOX_B*/
	public static final String xxChkBox_B = "xxChkBox_B";

	/** SVC_CR_REBIL_PK_B*/
	public static final String svcCrRebilPk_B = "svcCrRebilPk_B";

	/** SVC_CR_REBIL_MTR_READ_PK_B*/
	public static final String svcCrRebilMtrReadPk_B = "svcCrRebilMtrReadPk_B";

	/** SVC_CR_REBIL_MTR_BLLG_PK_B*/
	public static final String svcCrRebilMtrBllgPk_B = "svcCrRebilMtrBllgPk_B";

	/** SVC_MACH_MSTR_PK_B*/
	public static final String svcMachMstrPk_B = "svcMachMstrPk_B";

	/** SVC_INV_LINE_MTR_PK_B*/
	public static final String svcInvLineMtrPk_B = "svcInvLineMtrPk_B";

	/** ORIG_SVC_INV_NUM_B*/
	public static final String origSvcInvNum_B = "origSvcInvNum_B";

	/** BLLG_MTR_LB_CD_B*/
	public static final String bllgMtrLbCd_B = "bllgMtrLbCd_B";

	/** MTR_LB_CD_B*/
	public static final String mtrLbCd_B = "mtrLbCd_B";

	/** SER_NUM_B*/
	public static final String serNum_B = "serNum_B";

	/** START_MTR_READ_DT_B*/
	public static final String startMtrReadDt_B = "startMtrReadDt_B";

	/** END_MTR_READ_DT_B*/
	public static final String endMtrReadDt_B = "endMtrReadDt_B";

	/** MTR_LB_DESC_TXT_B*/
	public static final String mtrLbDescTxt_B = "mtrLbDescTxt_B";

	/** OLD_START_READ_MTR_CNT_B*/
	public static final String oldStartReadMtrCnt_B = "oldStartReadMtrCnt_B";

	/** OLD_END_READ_MTR_CNT_B*/
	public static final String oldEndReadMtrCnt_B = "oldEndReadMtrCnt_B";

	/** OLD_TEST_MTR_CNT_B*/
	public static final String oldTestMtrCnt_B = "oldTestMtrCnt_B";

	/** NEW_START_READ_MTR_CNT_B*/
	public static final String newStartReadMtrCnt_B = "newStartReadMtrCnt_B";

	/** NEW_END_READ_MTR_CNT_B*/
	public static final String newEndReadMtrCnt_B = "newEndReadMtrCnt_B";

	/** NEW_TEST_MTR_CNT_B*/
	public static final String newTestMtrCnt_B = "newTestMtrCnt_B";

	/** XX_REC_HIST_CRAT_TS_B*/
	public static final String xxRecHistCratTs_B = "xxRecHistCratTs_B";

	/** XX_REC_HIST_CRAT_BY_NM_B*/
	public static final String xxRecHistCratByNm_B = "xxRecHistCratByNm_B";

	/** XX_REC_HIST_UPD_TS_B*/
	public static final String xxRecHistUpdTs_B = "xxRecHistUpdTs_B";

	/** XX_REC_HIST_UPD_BY_NM_B*/
	public static final String xxRecHistUpdByNm_B = "xxRecHistUpdByNm_B";

	/** XX_REC_HIST_TBL_NM_B*/
	public static final String xxRecHistTblNm_B = "xxRecHistTblNm_B";

	/** C*/
	public static final String C = "C";

	/** XX_ROW_NUM_C1*/
	public static final String xxRowNum_C1 = "xxRowNum_C1";

	/** XX_ROW_NUM_C2*/
	public static final String xxRowNum_C2 = "xxRowNum_C2";

	/** XX_DPLY_CTRL_FLG_C1*/
	public static final String xxDplyCtrlFlg_C1 = "xxDplyCtrlFlg_C1";

	/** XX_DPLY_CTRL_FLG_C2*/
	public static final String xxDplyCtrlFlg_C2 = "xxDplyCtrlFlg_C2";

	/** SVC_CR_REBIL_MTR_BLLG_PK_C*/
	public static final String svcCrRebilMtrBllgPk_C = "svcCrRebilMtrBllgPk_C";

	/** SVC_INV_LINE_MTR_PK_C*/
	public static final String svcInvLineMtrPk_C = "svcInvLineMtrPk_C";

	/** SVC_CR_REBIL_XS_MTR_BLLG_PK_C*/
	public static final String svcCrRebilXsMtrBllgPk_C = "svcCrRebilXsMtrBllgPk_C";

	/** SVC_INV_LINE_XS_MTR_PK_C*/
	public static final String svcInvLineXsMtrPk_C = "svcInvLineXsMtrPk_C";

	/** XX_SCR_ITEM_40_TXT_C*/
	public static final String xxScrItem40Txt_C = "xxScrItem40Txt_C";

	/** SER_NUM_C*/
	public static final String serNum_C = "serNum_C";

	/** MTR_BLLG_FROM_DT_C*/
	public static final String mtrBllgFromDt_C = "mtrBllgFromDt_C";

	/** MTR_BLLG_THRU_DT_C*/
	public static final String mtrBllgThruDt_C = "mtrBllgThruDt_C";

	/** MTR_LB_CD_C*/
	public static final String mtrLbCd_C = "mtrLbCd_C";

	/** MTR_LB_DESC_TXT_C*/
	public static final String mtrLbDescTxt_C = "mtrLbDescTxt_C";

	/** NEW_MTR_CNT_C*/
	public static final String newMtrCnt_C = "newMtrCnt_C";

	/** XX_LIST_NUM_C*/
	public static final String xxListNum_C = "xxListNum_C";

	/** OLD_MTR_CHRG_DEAL_AMT_C*/
	public static final String oldMtrChrgDealAmt_C = "oldMtrChrgDealAmt_C";

	/** OLD_XS_COPY_QTY_C*/
	public static final String oldXsCopyQty_C = "oldXsCopyQty_C";

	/** OLD_XS_MTR_AMT_RATE_C*/
	public static final String oldXsMtrAmtRate_C = "oldXsMtrAmtRate_C";

	/** NEW_XS_COPY_QTY_C*/
	public static final String newXsCopyQty_C = "newXsCopyQty_C";

	/** NEW_XS_MTR_AMT_RATE_C*/
	public static final String newXsMtrAmtRate_C = "newXsMtrAmtRate_C";

	/** OLD_UNIT_XS_COPY_QTY_C*/
	public static final String oldUnitXsCopyQty_C = "oldUnitXsCopyQty_C";

	/** NEW_UNIT_XS_COPY_QTY_C*/
	public static final String newUnitXsCopyQty_C = "newUnitXsCopyQty_C";

	/** ORIG_SVC_INV_NUM_C*/
	public static final String origSvcInvNum_C = "origSvcInvNum_C";

	/** XX_REC_HIST_CRAT_TS_C*/
	public static final String xxRecHistCratTs_C = "xxRecHistCratTs_C";

	/** XX_REC_HIST_CRAT_BY_NM_C*/
	public static final String xxRecHistCratByNm_C = "xxRecHistCratByNm_C";

	/** XX_REC_HIST_UPD_TS_C*/
	public static final String xxRecHistUpdTs_C = "xxRecHistUpdTs_C";

	/** XX_REC_HIST_UPD_BY_NM_C*/
	public static final String xxRecHistUpdByNm_C = "xxRecHistUpdByNm_C";

	/** XX_REC_HIST_TBL_NM_C*/
	public static final String xxRecHistTblNm_C = "xxRecHistTblNm_C";

	/**
	 * Method name:NSAL1120 is Bean's Constructor.
	 * <dd>method explanation:Initialization when instance of NSAL1120Bean is generated
	 * <dd>Remarks:
	 */
	public NSAL1120Bean() {
		super("business.servlet.NSAL1120.NSAL1120BMsg");
	}

	/**
	 * get  XX_MODE_CD.
	 * @return XX_MODE_CD
	 */
	public String getXxModeCd() {
		return outputValue(xxModeCd);
	}

	/**
	 * set  XX_MODE_CD.
	 * @param data XX_MODE_CD
	 */
	public void setXxModeCd(String data) {
		inputValue(xxModeCd,data);
	}

	/**
	 * get  SVC_CR_REBIL_PK.
	 * @return SVC_CR_REBIL_PK
	 */
	public String getSvcCrRebilPk() {
		return outputValue(svcCrRebilPk);
	}

	/**
	 * set  SVC_CR_REBIL_PK.
	 * @param data SVC_CR_REBIL_PK
	 */
	public void setSvcCrRebilPk(String data) {
		inputValue(svcCrRebilPk,data);
	}

	/**
	 * get  SVC_CR_REBIL_STS_CD.
	 * @return SVC_CR_REBIL_STS_CD
	 */
	public String getSvcCrRebilStsCd() {
		return outputValue(svcCrRebilStsCd);
	}

	/**
	 * set  SVC_CR_REBIL_STS_CD.
	 * @param data SVC_CR_REBIL_STS_CD
	 */
	public void setSvcCrRebilStsCd(String data) {
		inputValue(svcCrRebilStsCd,data);
	}

	/**
	 * get  SVC_CR_REBIL_DTL_PK.
	 * @return SVC_CR_REBIL_DTL_PK
	 */
	public String getSvcCrRebilDtlPk() {
		return outputValue(svcCrRebilDtlPk);
	}

	/**
	 * set  SVC_CR_REBIL_DTL_PK.
	 * @param data SVC_CR_REBIL_DTL_PK
	 */
	public void setSvcCrRebilDtlPk(String data) {
		inputValue(svcCrRebilDtlPk,data);
	}

	/**
	 * get  SVC_INV_LINE_PK.
	 * @return SVC_INV_LINE_PK
	 */
	public String getSvcInvLinePk() {
		return outputValue(svcInvLinePk);
	}

	/**
	 * set  SVC_INV_LINE_PK.
	 * @param data SVC_INV_LINE_PK
	 */
	public void setSvcInvLinePk(String data) {
		inputValue(svcInvLinePk,data);
	}

	/**
	 * get  SVC_MACH_MSTR_PK_P.
	 * @return SVC_MACH_MSTR_PK_P
	 */
	public String getSvcMachMstrPk_P() {
		return outputValue(svcMachMstrPk_P);
	}

	/**
	 * set  SVC_MACH_MSTR_PK_P.
	 * @param data SVC_MACH_MSTR_PK_P
	 */
	public void setSvcMachMstrPk_P(String data) {
		inputValue(svcMachMstrPk_P,data);
	}

	/**
	 * get  MTR_LB_CD_P.
	 * @return MTR_LB_CD_P
	 */
	public String getMtrLbCd_P() {
		return outputValue(mtrLbCd_P);
	}

	/**
	 * set  MTR_LB_CD_P.
	 * @param data MTR_LB_CD_P
	 */
	public void setMtrLbCd_P(String data) {
		inputValue(mtrLbCd_P,data);
	}

	/**
	 * get  GLBL_CMPY_CD.
	 * @return GLBL_CMPY_CD
	 */
	public String getGlblCmpyCd() {
		return outputValue(glblCmpyCd);
	}

	/**
	 * set  GLBL_CMPY_CD.
	 * @param data GLBL_CMPY_CD
	 */
	public void setGlblCmpyCd(String data) {
		inputValue(glblCmpyCd,data);
	}

	/**
	 * get  CUST_INCDT_ID.
	 * @return CUST_INCDT_ID
	 */
	public String getCustIncdtId() {
		return outputValue(custIncdtId);
	}

	/**
	 * set  CUST_INCDT_ID.
	 * @param data CUST_INCDT_ID
	 */
	public void setCustIncdtId(String data) {
		inputValue(custIncdtId,data);
	}

	/**
	 * get  SVC_CR_REBIL_STS_DESC_TXT.
	 * @return SVC_CR_REBIL_STS_DESC_TXT
	 */
	public String getSvcCrRebilStsDescTxt() {
		return outputValue(svcCrRebilStsDescTxt);
	}

	/**
	 * set  SVC_CR_REBIL_STS_DESC_TXT.
	 * @param data SVC_CR_REBIL_STS_DESC_TXT
	 */
	public void setSvcCrRebilStsDescTxt(String data) {
		inputValue(svcCrRebilStsDescTxt,data);
	}

	/**
	 * get  SVC_CR_REBIL_DESC_TXT.
	 * @return SVC_CR_REBIL_DESC_TXT
	 */
	public String getSvcCrRebilDescTxt() {
		return outputValue(svcCrRebilDescTxt);
	}

	/**
	 * set  SVC_CR_REBIL_DESC_TXT.
	 * @param data SVC_CR_REBIL_DESC_TXT
	 */
	public void setSvcCrRebilDescTxt(String data) {
		inputValue(svcCrRebilDescTxt,data);
	}

	/**
	 * get  DS_CONTR_CATG_CD.
	 * @return DS_CONTR_CATG_CD
	 */
	public String getDsContrCatgCd() {
		return outputValue(dsContrCatgCd);
	}

	/**
	 * set  DS_CONTR_CATG_CD.
	 * @param data DS_CONTR_CATG_CD
	 */
	public void setDsContrCatgCd(String data) {
		inputValue(dsContrCatgCd,data);
	}

	/**
	 * get  DS_CONTR_CATG_ABBR_NM.
	 * @return DS_CONTR_CATG_ABBR_NM
	 */
	public String getDsContrCatgAbbrNm() {
		return outputValue(dsContrCatgAbbrNm);
	}

	/**
	 * set  DS_CONTR_CATG_ABBR_NM.
	 * @param data DS_CONTR_CATG_ABBR_NM
	 */
	public void setDsContrCatgAbbrNm(String data) {
		inputValue(dsContrCatgAbbrNm,data);
	}

	/**
	 * get  DS_CONTR_NUM.
	 * @return DS_CONTR_NUM
	 */
	public String getDsContrNum() {
		return outputValue(dsContrNum);
	}

	/**
	 * set  DS_CONTR_NUM.
	 * @param data DS_CONTR_NUM
	 */
	public void setDsContrNum(String data) {
		inputValue(dsContrNum,data);
	}

	/**
	 * get  XX_MODE_IND.
	 * @return XX_MODE_IND
	 */
	public String getXxModeInd() {
		return outputValue(xxModeInd);
	}

	/**
	 * set  XX_MODE_IND.
	 * @param data XX_MODE_IND
	 */
	public void setXxModeInd(String data) {
		inputValue(xxModeInd,data);
	}

	/**
	 * get  _EZUpdateDateTime.
	 * @return _EZUpdateDateTime
	 */
	public String getEzUpTime() {
		return outputValue(ezUpTime);
	}

	/**
	 * set  _EZUpdateDateTime.
	 * @param data _EZUpdateDateTime
	 */
	public void setEzUpTime(String data) {
		inputValue(ezUpTime,data);
	}

	/**
	 * get  _EZUpTimeZone.
	 * @return _EZUpTimeZone
	 */
	public String getEzUpTimeZone() {
		return outputValue(ezUpTimeZone);
	}

	/**
	 * set  _EZUpTimeZone.
	 * @param data _EZUpTimeZone
	 */
	public void setEzUpTimeZone(String data) {
		inputValue(ezUpTimeZone,data);
	}

	/**
	 * get  XX_PAGE_SHOW_FROM_NUM_A.
	 * @return XX_PAGE_SHOW_FROM_NUM_A
	 */
	public String getXxPageShowFromNum_A() {
		return outputValue(xxPageShowFromNum_A);
	}

	/**
	 * set  XX_PAGE_SHOW_FROM_NUM_A.
	 * @param data XX_PAGE_SHOW_FROM_NUM_A
	 */
	public void setXxPageShowFromNum_A(String data) {
		inputValue(xxPageShowFromNum_A,data);
	}

	/**
	 * get  XX_PAGE_SHOW_TO_NUM_A.
	 * @return XX_PAGE_SHOW_TO_NUM_A
	 */
	public String getXxPageShowToNum_A() {
		return outputValue(xxPageShowToNum_A);
	}

	/**
	 * set  XX_PAGE_SHOW_TO_NUM_A.
	 * @param data XX_PAGE_SHOW_TO_NUM_A
	 */
	public void setXxPageShowToNum_A(String data) {
		inputValue(xxPageShowToNum_A,data);
	}

	/**
	 * get  XX_PAGE_SHOW_OF_NUM_A.
	 * @return XX_PAGE_SHOW_OF_NUM_A
	 */
	public String getXxPageShowOfNum_A() {
		return outputValue(xxPageShowOfNum_A);
	}

	/**
	 * set  XX_PAGE_SHOW_OF_NUM_A.
	 * @param data XX_PAGE_SHOW_OF_NUM_A
	 */
	public void setXxPageShowOfNum_A(String data) {
		inputValue(xxPageShowOfNum_A,data);
	}

	/**
	 * get  XX_PAGE_SHOW_FROM_NUM_B.
	 * @return XX_PAGE_SHOW_FROM_NUM_B
	 */
	public String getXxPageShowFromNum_B() {
		return outputValue(xxPageShowFromNum_B);
	}

	/**
	 * set  XX_PAGE_SHOW_FROM_NUM_B.
	 * @param data XX_PAGE_SHOW_FROM_NUM_B
	 */
	public void setXxPageShowFromNum_B(String data) {
		inputValue(xxPageShowFromNum_B,data);
	}

	/**
	 * get  XX_PAGE_SHOW_TO_NUM_B.
	 * @return XX_PAGE_SHOW_TO_NUM_B
	 */
	public String getXxPageShowToNum_B() {
		return outputValue(xxPageShowToNum_B);
	}

	/**
	 * set  XX_PAGE_SHOW_TO_NUM_B.
	 * @param data XX_PAGE_SHOW_TO_NUM_B
	 */
	public void setXxPageShowToNum_B(String data) {
		inputValue(xxPageShowToNum_B,data);
	}

	/**
	 * get  XX_PAGE_SHOW_OF_NUM_B.
	 * @return XX_PAGE_SHOW_OF_NUM_B
	 */
	public String getXxPageShowOfNum_B() {
		return outputValue(xxPageShowOfNum_B);
	}

	/**
	 * set  XX_PAGE_SHOW_OF_NUM_B.
	 * @param data XX_PAGE_SHOW_OF_NUM_B
	 */
	public void setXxPageShowOfNum_B(String data) {
		inputValue(xxPageShowOfNum_B,data);
	}

	/**
	 * get  XX_PAGE_SHOW_FROM_NUM_C.
	 * @return XX_PAGE_SHOW_FROM_NUM_C
	 */
	public String getXxPageShowFromNum_C() {
		return outputValue(xxPageShowFromNum_C);
	}

	/**
	 * set  XX_PAGE_SHOW_FROM_NUM_C.
	 * @param data XX_PAGE_SHOW_FROM_NUM_C
	 */
	public void setXxPageShowFromNum_C(String data) {
		inputValue(xxPageShowFromNum_C,data);
	}

	/**
	 * get  XX_PAGE_SHOW_TO_NUM_C.
	 * @return XX_PAGE_SHOW_TO_NUM_C
	 */
	public String getXxPageShowToNum_C() {
		return outputValue(xxPageShowToNum_C);
	}

	/**
	 * set  XX_PAGE_SHOW_TO_NUM_C.
	 * @param data XX_PAGE_SHOW_TO_NUM_C
	 */
	public void setXxPageShowToNum_C(String data) {
		inputValue(xxPageShowToNum_C,data);
	}

	/**
	 * get  XX_PAGE_SHOW_OF_NUM_C.
	 * @return XX_PAGE_SHOW_OF_NUM_C
	 */
	public String getXxPageShowOfNum_C() {
		return outputValue(xxPageShowOfNum_C);
	}

	/**
	 * set  XX_PAGE_SHOW_OF_NUM_C.
	 * @param data XX_PAGE_SHOW_OF_NUM_C
	 */
	public void setXxPageShowOfNum_C(String data) {
		inputValue(xxPageShowOfNum_C,data);
	}

	/**
	 * get  SVC_CR_REBIL_PK_A.
	 * @param idx1 List Number
	 * @return SVC_CR_REBIL_PK_A
	 */
	public String getSvcCrRebilPk_A(int idx1) {
		return outputValue(A, idx1, svcCrRebilPk_A);
	}

	/**
	 * set  SVC_CR_REBIL_PK_A.
	 * @param data SVC_CR_REBIL_PK_AArray
	 */
	public void setSvcCrRebilPk_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcCrRebilPk_A, data[j]);
		}
	}

	/**
	 * get  SVC_CR_REBIL_DTL_PK_A.
	 * @param idx1 List Number
	 * @return SVC_CR_REBIL_DTL_PK_A
	 */
	public String getSvcCrRebilDtlPk_A(int idx1) {
		return outputValue(A, idx1, svcCrRebilDtlPk_A);
	}

	/**
	 * set  SVC_CR_REBIL_DTL_PK_A.
	 * @param data SVC_CR_REBIL_DTL_PK_AArray
	 */
	public void setSvcCrRebilDtlPk_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcCrRebilDtlPk_A, data[j]);
		}
	}

	/**
	 * get  ORIG_SVC_INV_NUM_A.
	 * @param idx1 List Number
	 * @return ORIG_SVC_INV_NUM_A
	 */
	public String getOrigSvcInvNum_A(int idx1) {
		return outputValue(A, idx1, origSvcInvNum_A);
	}

	/**
	 * set  ORIG_SVC_INV_NUM_A.
	 * @param data ORIG_SVC_INV_NUM_AArray
	 */
	public void setOrigSvcInvNum_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, origSvcInvNum_A, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_DTL_PK_A.
	 * @param idx1 List Number
	 * @return DS_CONTR_DTL_PK_A
	 */
	public String getDsContrDtlPk_A(int idx1) {
		return outputValue(A, idx1, dsContrDtlPk_A);
	}

	/**
	 * set  DS_CONTR_DTL_PK_A.
	 * @param data DS_CONTR_DTL_PK_AArray
	 */
	public void setDsContrDtlPk_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsContrDtlPk_A, data[j]);
		}
	}

	/**
	 * get  SVC_MACH_MSTR_PK_A.
	 * @param idx1 List Number
	 * @return SVC_MACH_MSTR_PK_A
	 */
	public String getSvcMachMstrPk_A(int idx1) {
		return outputValue(A, idx1, svcMachMstrPk_A);
	}

	/**
	 * set  SVC_MACH_MSTR_PK_A.
	 * @param data SVC_MACH_MSTR_PK_AArray
	 */
	public void setSvcMachMstrPk_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, svcMachMstrPk_A, data[j]);
		}
	}

	/**
	 * get  XX_SCR_ITEM_40_TXT_A.
	 * @param idx1 List Number
	 * @return XX_SCR_ITEM_40_TXT_A
	 */
	public String getXxScrItem40Txt_A(int idx1) {
		return outputValue(A, idx1, xxScrItem40Txt_A);
	}

	/**
	 * set  XX_SCR_ITEM_40_TXT_A.
	 * @param data XX_SCR_ITEM_40_TXT_AArray
	 */
	public void setXxScrItem40Txt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxScrItem40Txt_A, data[j]);
		}
	}

	/**
	 * get  SER_NUM_A.
	 * @param idx1 List Number
	 * @return SER_NUM_A
	 */
	public String getSerNum_A(int idx1) {
		return outputValue(A, idx1, serNum_A);
	}

	/**
	 * set  SER_NUM_A.
	 * @param data SER_NUM_AArray
	 */
	public void setSerNum_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, serNum_A, data[j]);
		}
	}

	/**
	 * get  MDSE_CD_A.
	 * @param idx1 List Number
	 * @return MDSE_CD_A
	 */
	public String getMdseCd_A(int idx1) {
		return outputValue(A, idx1, mdseCd_A);
	}

	/**
	 * set  MDSE_CD_A.
	 * @param data MDSE_CD_AArray
	 */
	public void setMdseCd_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, mdseCd_A, data[j]);
		}
	}

	/**
	 * get  MDSE_DESC_SHORT_TXT_A.
	 * @param idx1 List Number
	 * @return MDSE_DESC_SHORT_TXT_A
	 */
	public String getMdseDescShortTxt_A(int idx1) {
		return outputValue(A, idx1, mdseDescShortTxt_A);
	}

	/**
	 * set  MDSE_DESC_SHORT_TXT_A.
	 * @param data MDSE_DESC_SHORT_TXT_AArray
	 */
	public void setMdseDescShortTxt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, mdseDescShortTxt_A, data[j]);
		}
	}

	/**
	 * get  BASE_BLLG_FROM_DT_A.
	 * @param idx1 List Number
	 * @return BASE_BLLG_FROM_DT_A
	 */
	public String getBaseBllgFromDt_A(int idx1) {
		return outputValue(A, idx1, baseBllgFromDt_A, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  BASE_BLLG_FROM_DT_A.
	 * @param data BASE_BLLG_FROM_DT_AArray
	 */
	public void setBaseBllgFromDt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i,  baseBllgFromDt_A, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  BASE_BLLG_THRU_DT_A.
	 * @param idx1 List Number
	 * @return BASE_BLLG_THRU_DT_A
	 */
	public String getBaseBllgThruDt_A(int idx1) {
		return outputValue(A, idx1, baseBllgThruDt_A, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  BASE_BLLG_THRU_DT_A.
	 * @param data BASE_BLLG_THRU_DT_AArray
	 */
	public void setBaseBllgThruDt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i,  baseBllgThruDt_A, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  OLD_BASE_DEAL_AMT_A.
	 * @param idx1 List Number
	 * @return OLD_BASE_DEAL_AMT_A
	 */
	public String getOldBaseDealAmt_A(int idx1) {
		return outputValue(A, idx1, oldBaseDealAmt_A);
	}

	/**
	 * set  OLD_BASE_DEAL_AMT_A.
	 * @param data OLD_BASE_DEAL_AMT_AArray
	 */
	public void setOldBaseDealAmt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, oldBaseDealAmt_A, data[j]);
		}
	}

	/**
	 * get  NEW_BASE_DEAL_AMT_A.
	 * @param idx1 List Number
	 * @return NEW_BASE_DEAL_AMT_A
	 */
	public String getNewBaseDealAmt_A(int idx1) {
		return outputValue(A, idx1, newBaseDealAmt_A);
	}

	/**
	 * set  NEW_BASE_DEAL_AMT_A.
	 * @param data NEW_BASE_DEAL_AMT_AArray
	 */
	public void setNewBaseDealAmt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, newBaseDealAmt_A, data[j]);
		}
	}

	/**
	 * get  OLD_BASE_UNIT_AMT_A.
	 * @param idx1 List Number
	 * @return OLD_BASE_UNIT_AMT_A
	 */
	public String getOldBaseUnitAmt_A(int idx1) {
		return outputValue(A, idx1, oldBaseUnitAmt_A);
	}

	/**
	 * set  OLD_BASE_UNIT_AMT_A.
	 * @param data OLD_BASE_UNIT_AMT_AArray
	 */
	public void setOldBaseUnitAmt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, oldBaseUnitAmt_A, data[j]);
		}
	}

	/**
	 * get  NEW_BASE_UNIT_AMT_A.
	 * @param idx1 List Number
	 * @return NEW_BASE_UNIT_AMT_A
	 */
	public String getNewBaseUnitAmt_A(int idx1) {
		return outputValue(A, idx1, newBaseUnitAmt_A);
	}

	/**
	 * set  NEW_BASE_UNIT_AMT_A.
	 * @param data NEW_BASE_UNIT_AMT_AArray
	 */
	public void setNewBaseUnitAmt_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, newBaseUnitAmt_A, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_CRAT_TS_A.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_CRAT_TS_A
	 */
	public String getXxRecHistCratTs_A(int idx1) {
		return outputValue(A, idx1, xxRecHistCratTs_A);
	}

	/**
	 * set  XX_REC_HIST_CRAT_TS_A.
	 * @param data XX_REC_HIST_CRAT_TS_AArray
	 */
	public void setXxRecHistCratTs_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRecHistCratTs_A, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_CRAT_BY_NM_A.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_CRAT_BY_NM_A
	 */
	public String getXxRecHistCratByNm_A(int idx1) {
		return outputValue(A, idx1, xxRecHistCratByNm_A);
	}

	/**
	 * set  XX_REC_HIST_CRAT_BY_NM_A.
	 * @param data XX_REC_HIST_CRAT_BY_NM_AArray
	 */
	public void setXxRecHistCratByNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRecHistCratByNm_A, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_UPD_TS_A.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_UPD_TS_A
	 */
	public String getXxRecHistUpdTs_A(int idx1) {
		return outputValue(A, idx1, xxRecHistUpdTs_A);
	}

	/**
	 * set  XX_REC_HIST_UPD_TS_A.
	 * @param data XX_REC_HIST_UPD_TS_AArray
	 */
	public void setXxRecHistUpdTs_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRecHistUpdTs_A, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_UPD_BY_NM_A.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_UPD_BY_NM_A
	 */
	public String getXxRecHistUpdByNm_A(int idx1) {
		return outputValue(A, idx1, xxRecHistUpdByNm_A);
	}

	/**
	 * set  XX_REC_HIST_UPD_BY_NM_A.
	 * @param data XX_REC_HIST_UPD_BY_NM_AArray
	 */
	public void setXxRecHistUpdByNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRecHistUpdByNm_A, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_TBL_NM_A.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_TBL_NM_A
	 */
	public String getXxRecHistTblNm_A(int idx1) {
		return outputValue(A, idx1, xxRecHistTblNm_A);
	}

	/**
	 * set  XX_REC_HIST_TBL_NM_A.
	 * @param data XX_REC_HIST_TBL_NM_AArray
	 */
	public void setXxRecHistTblNm_A(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxRecHistTblNm_A, data[j]);
		}
	}

	/**
	 * get  XX_ROW_NUM_B.
	 * @param idx1 List Number
	 * @return XX_ROW_NUM_B
	 */
	public String getXxRowNum_B(int idx1) {
		return outputValue(B, idx1, xxRowNum_B);
	}

	/**
	 * set  XX_ROW_NUM_B.
	 * @param data XX_ROW_NUM_BArray
	 */
	public void setXxRowNum_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, xxRowNum_B, data[j]);
		}
	}

	/**
	 * get  XX_CHK_BOX_B.
	 * @param idx1 List Number
	 * @return XX_CHK_BOX_B
	 */
	public String getXxChkBox_B(int idx1) {
		return outputValue(B, idx1, xxChkBox_B);
	}

	/**
	 * set  XX_CHK_BOX_B.
	 * @param data XX_CHK_BOX_BArray
	 */
	public void setXxChkBox_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, xxChkBox_B, data[j]);
		}
	}

	/**
	 * get  SVC_CR_REBIL_PK_B.
	 * @param idx1 List Number
	 * @return SVC_CR_REBIL_PK_B
	 */
	public String getSvcCrRebilPk_B(int idx1) {
		return outputValue(B, idx1, svcCrRebilPk_B);
	}

	/**
	 * set  SVC_CR_REBIL_PK_B.
	 * @param data SVC_CR_REBIL_PK_BArray
	 */
	public void setSvcCrRebilPk_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, svcCrRebilPk_B, data[j]);
		}
	}

	/**
	 * get  SVC_CR_REBIL_MTR_READ_PK_B.
	 * @param idx1 List Number
	 * @return SVC_CR_REBIL_MTR_READ_PK_B
	 */
	public String getSvcCrRebilMtrReadPk_B(int idx1) {
		return outputValue(B, idx1, svcCrRebilMtrReadPk_B);
	}

	/**
	 * set  SVC_CR_REBIL_MTR_READ_PK_B.
	 * @param data SVC_CR_REBIL_MTR_READ_PK_BArray
	 */
	public void setSvcCrRebilMtrReadPk_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, svcCrRebilMtrReadPk_B, data[j]);
		}
	}

	/**
	 * get  SVC_CR_REBIL_MTR_BLLG_PK_B.
	 * @param idx1 List Number
	 * @return SVC_CR_REBIL_MTR_BLLG_PK_B
	 */
	public String getSvcCrRebilMtrBllgPk_B(int idx1) {
		return outputValue(B, idx1, svcCrRebilMtrBllgPk_B);
	}

	/**
	 * set  SVC_CR_REBIL_MTR_BLLG_PK_B.
	 * @param data SVC_CR_REBIL_MTR_BLLG_PK_BArray
	 */
	public void setSvcCrRebilMtrBllgPk_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, svcCrRebilMtrBllgPk_B, data[j]);
		}
	}

	/**
	 * get  SVC_MACH_MSTR_PK_B.
	 * @param idx1 List Number
	 * @return SVC_MACH_MSTR_PK_B
	 */
	public String getSvcMachMstrPk_B(int idx1) {
		return outputValue(B, idx1, svcMachMstrPk_B);
	}

	/**
	 * set  SVC_MACH_MSTR_PK_B.
	 * @param data SVC_MACH_MSTR_PK_BArray
	 */
	public void setSvcMachMstrPk_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, svcMachMstrPk_B, data[j]);
		}
	}

	/**
	 * get  SVC_INV_LINE_MTR_PK_B.
	 * @param idx1 List Number
	 * @return SVC_INV_LINE_MTR_PK_B
	 */
	public String getSvcInvLineMtrPk_B(int idx1) {
		return outputValue(B, idx1, svcInvLineMtrPk_B);
	}

	/**
	 * set  SVC_INV_LINE_MTR_PK_B.
	 * @param data SVC_INV_LINE_MTR_PK_BArray
	 */
	public void setSvcInvLineMtrPk_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, svcInvLineMtrPk_B, data[j]);
		}
	}

	/**
	 * get  ORIG_SVC_INV_NUM_B.
	 * @param idx1 List Number
	 * @return ORIG_SVC_INV_NUM_B
	 */
	public String getOrigSvcInvNum_B(int idx1) {
		return outputValue(B, idx1, origSvcInvNum_B);
	}

	/**
	 * set  ORIG_SVC_INV_NUM_B.
	 * @param data ORIG_SVC_INV_NUM_BArray
	 */
	public void setOrigSvcInvNum_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, origSvcInvNum_B, data[j]);
		}
	}

	/**
	 * get  BLLG_MTR_LB_CD_B.
	 * @param idx1 List Number
	 * @return BLLG_MTR_LB_CD_B
	 */
	public String getBllgMtrLbCd_B(int idx1) {
		return outputValue(B, idx1, bllgMtrLbCd_B);
	}

	/**
	 * set  BLLG_MTR_LB_CD_B.
	 * @param data BLLG_MTR_LB_CD_BArray
	 */
	public void setBllgMtrLbCd_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, bllgMtrLbCd_B, data[j]);
		}
	}

	/**
	 * get  MTR_LB_CD_B.
	 * @param idx1 List Number
	 * @return MTR_LB_CD_B
	 */
	public String getMtrLbCd_B(int idx1) {
		return outputValue(B, idx1, mtrLbCd_B);
	}

	/**
	 * set  MTR_LB_CD_B.
	 * @param data MTR_LB_CD_BArray
	 */
	public void setMtrLbCd_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, mtrLbCd_B, data[j]);
		}
	}

	/**
	 * get  SER_NUM_B.
	 * @param idx1 List Number
	 * @return SER_NUM_B
	 */
	public String getSerNum_B(int idx1) {
		return outputValue(B, idx1, serNum_B);
	}

	/**
	 * set  SER_NUM_B.
	 * @param data SER_NUM_BArray
	 */
	public void setSerNum_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, serNum_B, data[j]);
		}
	}

	/**
	 * get  START_MTR_READ_DT_B.
	 * @param idx1 List Number
	 * @return START_MTR_READ_DT_B
	 */
	public String getStartMtrReadDt_B(int idx1) {
		return outputValue(B, idx1, startMtrReadDt_B, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  START_MTR_READ_DT_B.
	 * @param data START_MTR_READ_DT_BArray
	 */
	public void setStartMtrReadDt_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i,  startMtrReadDt_B, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  END_MTR_READ_DT_B.
	 * @param idx1 List Number
	 * @return END_MTR_READ_DT_B
	 */
	public String getEndMtrReadDt_B(int idx1) {
		return outputValue(B, idx1, endMtrReadDt_B, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  END_MTR_READ_DT_B.
	 * @param data END_MTR_READ_DT_BArray
	 */
	public void setEndMtrReadDt_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i,  endMtrReadDt_B, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  MTR_LB_DESC_TXT_B.
	 * @param idx1 List Number
	 * @return MTR_LB_DESC_TXT_B
	 */
	public String getMtrLbDescTxt_B(int idx1) {
		return outputValue(B, idx1, mtrLbDescTxt_B);
	}

	/**
	 * set  MTR_LB_DESC_TXT_B.
	 * @param data MTR_LB_DESC_TXT_BArray
	 */
	public void setMtrLbDescTxt_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, mtrLbDescTxt_B, data[j]);
		}
	}

	/**
	 * get  OLD_START_READ_MTR_CNT_B.
	 * @param idx1 List Number
	 * @return OLD_START_READ_MTR_CNT_B
	 */
	public String getOldStartReadMtrCnt_B(int idx1) {
		return outputValue(B, idx1, oldStartReadMtrCnt_B);
	}

	/**
	 * set  OLD_START_READ_MTR_CNT_B.
	 * @param data OLD_START_READ_MTR_CNT_BArray
	 */
	public void setOldStartReadMtrCnt_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, oldStartReadMtrCnt_B, data[j]);
		}
	}

	/**
	 * get  OLD_END_READ_MTR_CNT_B.
	 * @param idx1 List Number
	 * @return OLD_END_READ_MTR_CNT_B
	 */
	public String getOldEndReadMtrCnt_B(int idx1) {
		return outputValue(B, idx1, oldEndReadMtrCnt_B);
	}

	/**
	 * set  OLD_END_READ_MTR_CNT_B.
	 * @param data OLD_END_READ_MTR_CNT_BArray
	 */
	public void setOldEndReadMtrCnt_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, oldEndReadMtrCnt_B, data[j]);
		}
	}

	/**
	 * get  OLD_TEST_MTR_CNT_B.
	 * @param idx1 List Number
	 * @return OLD_TEST_MTR_CNT_B
	 */
	public String getOldTestMtrCnt_B(int idx1) {
		return outputValue(B, idx1, oldTestMtrCnt_B);
	}

	/**
	 * set  OLD_TEST_MTR_CNT_B.
	 * @param data OLD_TEST_MTR_CNT_BArray
	 */
	public void setOldTestMtrCnt_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, oldTestMtrCnt_B, data[j]);
		}
	}

	/**
	 * get  NEW_START_READ_MTR_CNT_B.
	 * @param idx1 List Number
	 * @return NEW_START_READ_MTR_CNT_B
	 */
	public String getNewStartReadMtrCnt_B(int idx1) {
		return outputValue(B, idx1, newStartReadMtrCnt_B);
	}

	/**
	 * set  NEW_START_READ_MTR_CNT_B.
	 * @param data NEW_START_READ_MTR_CNT_BArray
	 */
	public void setNewStartReadMtrCnt_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, newStartReadMtrCnt_B, data[j]);
		}
	}

	/**
	 * get  NEW_END_READ_MTR_CNT_B.
	 * @param idx1 List Number
	 * @return NEW_END_READ_MTR_CNT_B
	 */
	public String getNewEndReadMtrCnt_B(int idx1) {
		return outputValue(B, idx1, newEndReadMtrCnt_B);
	}

	/**
	 * set  NEW_END_READ_MTR_CNT_B.
	 * @param data NEW_END_READ_MTR_CNT_BArray
	 */
	public void setNewEndReadMtrCnt_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, newEndReadMtrCnt_B, data[j]);
		}
	}

	/**
	 * get  NEW_TEST_MTR_CNT_B.
	 * @param idx1 List Number
	 * @return NEW_TEST_MTR_CNT_B
	 */
	public String getNewTestMtrCnt_B(int idx1) {
		return outputValue(B, idx1, newTestMtrCnt_B);
	}

	/**
	 * set  NEW_TEST_MTR_CNT_B.
	 * @param data NEW_TEST_MTR_CNT_BArray
	 */
	public void setNewTestMtrCnt_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, newTestMtrCnt_B, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_CRAT_TS_B.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_CRAT_TS_B
	 */
	public String getXxRecHistCratTs_B(int idx1) {
		return outputValue(B, idx1, xxRecHistCratTs_B);
	}

	/**
	 * set  XX_REC_HIST_CRAT_TS_B.
	 * @param data XX_REC_HIST_CRAT_TS_BArray
	 */
	public void setXxRecHistCratTs_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, xxRecHistCratTs_B, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_CRAT_BY_NM_B.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_CRAT_BY_NM_B
	 */
	public String getXxRecHistCratByNm_B(int idx1) {
		return outputValue(B, idx1, xxRecHistCratByNm_B);
	}

	/**
	 * set  XX_REC_HIST_CRAT_BY_NM_B.
	 * @param data XX_REC_HIST_CRAT_BY_NM_BArray
	 */
	public void setXxRecHistCratByNm_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, xxRecHistCratByNm_B, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_UPD_TS_B.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_UPD_TS_B
	 */
	public String getXxRecHistUpdTs_B(int idx1) {
		return outputValue(B, idx1, xxRecHistUpdTs_B);
	}

	/**
	 * set  XX_REC_HIST_UPD_TS_B.
	 * @param data XX_REC_HIST_UPD_TS_BArray
	 */
	public void setXxRecHistUpdTs_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, xxRecHistUpdTs_B, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_UPD_BY_NM_B.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_UPD_BY_NM_B
	 */
	public String getXxRecHistUpdByNm_B(int idx1) {
		return outputValue(B, idx1, xxRecHistUpdByNm_B);
	}

	/**
	 * set  XX_REC_HIST_UPD_BY_NM_B.
	 * @param data XX_REC_HIST_UPD_BY_NM_BArray
	 */
	public void setXxRecHistUpdByNm_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, xxRecHistUpdByNm_B, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_TBL_NM_B.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_TBL_NM_B
	 */
	public String getXxRecHistTblNm_B(int idx1) {
		return outputValue(B, idx1, xxRecHistTblNm_B);
	}

	/**
	 * set  XX_REC_HIST_TBL_NM_B.
	 * @param data XX_REC_HIST_TBL_NM_BArray
	 */
	public void setXxRecHistTblNm_B(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(B);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(B, i, xxRecHistTblNm_B, data[j]);
		}
	}

	/**
	 * get  XX_ROW_NUM_C1.
	 * @param idx1 List Number
	 * @return XX_ROW_NUM_C1
	 */
	public String getXxRowNum_C1(int idx1) {
		return outputValue(C, idx1, xxRowNum_C1);
	}

	/**
	 * set  XX_ROW_NUM_C1.
	 * @param data XX_ROW_NUM_C1Array
	 */
	public void setXxRowNum_C1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, xxRowNum_C1, data[j]);
		}
	}

	/**
	 * get  XX_ROW_NUM_C2.
	 * @param idx1 List Number
	 * @return XX_ROW_NUM_C2
	 */
	public String getXxRowNum_C2(int idx1) {
		return outputValue(C, idx1, xxRowNum_C2);
	}

	/**
	 * set  XX_ROW_NUM_C2.
	 * @param data XX_ROW_NUM_C2Array
	 */
	public void setXxRowNum_C2(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, xxRowNum_C2, data[j]);
		}
	}

	/**
	 * get  XX_DPLY_CTRL_FLG_C1.
	 * @param idx1 List Number
	 * @return XX_DPLY_CTRL_FLG_C1
	 */
	public String getXxDplyCtrlFlg_C1(int idx1) {
		return outputValue(C, idx1, xxDplyCtrlFlg_C1);
	}

	/**
	 * set  XX_DPLY_CTRL_FLG_C1.
	 * @param data XX_DPLY_CTRL_FLG_C1Array
	 */
	public void setXxDplyCtrlFlg_C1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, xxDplyCtrlFlg_C1, data[j]);
		}
	}

	/**
	 * get  XX_DPLY_CTRL_FLG_C2.
	 * @param idx1 List Number
	 * @return XX_DPLY_CTRL_FLG_C2
	 */
	public String getXxDplyCtrlFlg_C2(int idx1) {
		return outputValue(C, idx1, xxDplyCtrlFlg_C2);
	}

	/**
	 * set  XX_DPLY_CTRL_FLG_C2.
	 * @param data XX_DPLY_CTRL_FLG_C2Array
	 */
	public void setXxDplyCtrlFlg_C2(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, xxDplyCtrlFlg_C2, data[j]);
		}
	}

	/**
	 * get  SVC_CR_REBIL_MTR_BLLG_PK_C.
	 * @param idx1 List Number
	 * @return SVC_CR_REBIL_MTR_BLLG_PK_C
	 */
	public String getSvcCrRebilMtrBllgPk_C(int idx1) {
		return outputValue(C, idx1, svcCrRebilMtrBllgPk_C);
	}

	/**
	 * set  SVC_CR_REBIL_MTR_BLLG_PK_C.
	 * @param data SVC_CR_REBIL_MTR_BLLG_PK_CArray
	 */
	public void setSvcCrRebilMtrBllgPk_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, svcCrRebilMtrBllgPk_C, data[j]);
		}
	}

	/**
	 * get  SVC_INV_LINE_MTR_PK_C.
	 * @param idx1 List Number
	 * @return SVC_INV_LINE_MTR_PK_C
	 */
	public String getSvcInvLineMtrPk_C(int idx1) {
		return outputValue(C, idx1, svcInvLineMtrPk_C);
	}

	/**
	 * set  SVC_INV_LINE_MTR_PK_C.
	 * @param data SVC_INV_LINE_MTR_PK_CArray
	 */
	public void setSvcInvLineMtrPk_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, svcInvLineMtrPk_C, data[j]);
		}
	}

	/**
	 * get  SVC_CR_REBIL_XS_MTR_BLLG_PK_C.
	 * @param idx1 List Number
	 * @return SVC_CR_REBIL_XS_MTR_BLLG_PK_C
	 */
	public String getSvcCrRebilXsMtrBllgPk_C(int idx1) {
		return outputValue(C, idx1, svcCrRebilXsMtrBllgPk_C);
	}

	/**
	 * set  SVC_CR_REBIL_XS_MTR_BLLG_PK_C.
	 * @param data SVC_CR_REBIL_XS_MTR_BLLG_PK_CArray
	 */
	public void setSvcCrRebilXsMtrBllgPk_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, svcCrRebilXsMtrBllgPk_C, data[j]);
		}
	}

	/**
	 * get  SVC_INV_LINE_XS_MTR_PK_C.
	 * @param idx1 List Number
	 * @return SVC_INV_LINE_XS_MTR_PK_C
	 */
	public String getSvcInvLineXsMtrPk_C(int idx1) {
		return outputValue(C, idx1, svcInvLineXsMtrPk_C);
	}

	/**
	 * set  SVC_INV_LINE_XS_MTR_PK_C.
	 * @param data SVC_INV_LINE_XS_MTR_PK_CArray
	 */
	public void setSvcInvLineXsMtrPk_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, svcInvLineXsMtrPk_C, data[j]);
		}
	}

	/**
	 * get  XX_SCR_ITEM_40_TXT_C.
	 * @param idx1 List Number
	 * @return XX_SCR_ITEM_40_TXT_C
	 */
	public String getXxScrItem40Txt_C(int idx1) {
		return outputValue(C, idx1, xxScrItem40Txt_C);
	}

	/**
	 * set  XX_SCR_ITEM_40_TXT_C.
	 * @param data XX_SCR_ITEM_40_TXT_CArray
	 */
	public void setXxScrItem40Txt_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, xxScrItem40Txt_C, data[j]);
		}
	}

	/**
	 * get  SER_NUM_C.
	 * @param idx1 List Number
	 * @return SER_NUM_C
	 */
	public String getSerNum_C(int idx1) {
		return outputValue(C, idx1, serNum_C);
	}

	/**
	 * set  SER_NUM_C.
	 * @param data SER_NUM_CArray
	 */
	public void setSerNum_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, serNum_C, data[j]);
		}
	}

	/**
	 * get  MTR_BLLG_FROM_DT_C.
	 * @param idx1 List Number
	 * @return MTR_BLLG_FROM_DT_C
	 */
	public String getMtrBllgFromDt_C(int idx1) {
		return outputValue(C, idx1, mtrBllgFromDt_C, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  MTR_BLLG_FROM_DT_C.
	 * @param data MTR_BLLG_FROM_DT_CArray
	 */
	public void setMtrBllgFromDt_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i,  mtrBllgFromDt_C, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  MTR_BLLG_THRU_DT_C.
	 * @param idx1 List Number
	 * @return MTR_BLLG_THRU_DT_C
	 */
	public String getMtrBllgThruDt_C(int idx1) {
		return outputValue(C, idx1, mtrBllgThruDt_C, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  MTR_BLLG_THRU_DT_C.
	 * @param data MTR_BLLG_THRU_DT_CArray
	 */
	public void setMtrBllgThruDt_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i,  mtrBllgThruDt_C, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  MTR_LB_CD_C.
	 * @param idx1 List Number
	 * @return MTR_LB_CD_C
	 */
	public String getMtrLbCd_C(int idx1) {
		return outputValue(C, idx1, mtrLbCd_C);
	}

	/**
	 * set  MTR_LB_CD_C.
	 * @param data MTR_LB_CD_CArray
	 */
	public void setMtrLbCd_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, mtrLbCd_C, data[j]);
		}
	}

	/**
	 * get  MTR_LB_DESC_TXT_C.
	 * @param idx1 List Number
	 * @return MTR_LB_DESC_TXT_C
	 */
	public String getMtrLbDescTxt_C(int idx1) {
		return outputValue(C, idx1, mtrLbDescTxt_C);
	}

	/**
	 * set  MTR_LB_DESC_TXT_C.
	 * @param data MTR_LB_DESC_TXT_CArray
	 */
	public void setMtrLbDescTxt_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, mtrLbDescTxt_C, data[j]);
		}
	}

	/**
	 * get  NEW_MTR_CNT_C.
	 * @param idx1 List Number
	 * @return NEW_MTR_CNT_C
	 */
	public String getNewMtrCnt_C(int idx1) {
		return outputValue(C, idx1, newMtrCnt_C);
	}

	/**
	 * set  NEW_MTR_CNT_C.
	 * @param data NEW_MTR_CNT_CArray
	 */
	public void setNewMtrCnt_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, newMtrCnt_C, data[j]);
		}
	}

	/**
	 * get  XX_LIST_NUM_C.
	 * @param idx1 List Number
	 * @return XX_LIST_NUM_C
	 */
	public String getXxListNum_C(int idx1) {
		return outputValue(C, idx1, xxListNum_C);
	}

	/**
	 * set  XX_LIST_NUM_C.
	 * @param data XX_LIST_NUM_CArray
	 */
	public void setXxListNum_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, xxListNum_C, data[j]);
		}
	}

	/**
	 * get  OLD_MTR_CHRG_DEAL_AMT_C.
	 * @param idx1 List Number
	 * @return OLD_MTR_CHRG_DEAL_AMT_C
	 */
	public String getOldMtrChrgDealAmt_C(int idx1) {
		return outputValue(C, idx1, oldMtrChrgDealAmt_C);
	}

	/**
	 * set  OLD_MTR_CHRG_DEAL_AMT_C.
	 * @param data OLD_MTR_CHRG_DEAL_AMT_CArray
	 */
	public void setOldMtrChrgDealAmt_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, oldMtrChrgDealAmt_C, data[j]);
		}
	}

	/**
	 * get  OLD_XS_COPY_QTY_C.
	 * @param idx1 List Number
	 * @return OLD_XS_COPY_QTY_C
	 */
	public String getOldXsCopyQty_C(int idx1) {
		return outputValue(C, idx1, oldXsCopyQty_C);
	}

	/**
	 * set  OLD_XS_COPY_QTY_C.
	 * @param data OLD_XS_COPY_QTY_CArray
	 */
	public void setOldXsCopyQty_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, oldXsCopyQty_C, data[j]);
		}
	}

	/**
	 * get  OLD_XS_MTR_AMT_RATE_C.
	 * @param idx1 List Number
	 * @return OLD_XS_MTR_AMT_RATE_C
	 */
	public String getOldXsMtrAmtRate_C(int idx1) {
		return outputValue(C, idx1, oldXsMtrAmtRate_C);
	}

	/**
	 * set  OLD_XS_MTR_AMT_RATE_C.
	 * @param data OLD_XS_MTR_AMT_RATE_CArray
	 */
	public void setOldXsMtrAmtRate_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, oldXsMtrAmtRate_C, data[j]);
		}
	}

	/**
	 * get  NEW_XS_COPY_QTY_C.
	 * @param idx1 List Number
	 * @return NEW_XS_COPY_QTY_C
	 */
	public String getNewXsCopyQty_C(int idx1) {
		return outputValue(C, idx1, newXsCopyQty_C);
	}

	/**
	 * set  NEW_XS_COPY_QTY_C.
	 * @param data NEW_XS_COPY_QTY_CArray
	 */
	public void setNewXsCopyQty_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, newXsCopyQty_C, data[j]);
		}
	}

	/**
	 * get  NEW_XS_MTR_AMT_RATE_C.
	 * @param idx1 List Number
	 * @return NEW_XS_MTR_AMT_RATE_C
	 */
	public String getNewXsMtrAmtRate_C(int idx1) {
		return outputValue(C, idx1, newXsMtrAmtRate_C);
	}

	/**
	 * set  NEW_XS_MTR_AMT_RATE_C.
	 * @param data NEW_XS_MTR_AMT_RATE_CArray
	 */
	public void setNewXsMtrAmtRate_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, newXsMtrAmtRate_C, data[j]);
		}
	}

	/**
	 * get  OLD_UNIT_XS_COPY_QTY_C.
	 * @param idx1 List Number
	 * @return OLD_UNIT_XS_COPY_QTY_C
	 */
	public String getOldUnitXsCopyQty_C(int idx1) {
		return outputValue(C, idx1, oldUnitXsCopyQty_C);
	}

	/**
	 * set  OLD_UNIT_XS_COPY_QTY_C.
	 * @param data OLD_UNIT_XS_COPY_QTY_CArray
	 */
	public void setOldUnitXsCopyQty_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, oldUnitXsCopyQty_C, data[j]);
		}
	}

	/**
	 * get  NEW_UNIT_XS_COPY_QTY_C.
	 * @param idx1 List Number
	 * @return NEW_UNIT_XS_COPY_QTY_C
	 */
	public String getNewUnitXsCopyQty_C(int idx1) {
		return outputValue(C, idx1, newUnitXsCopyQty_C);
	}

	/**
	 * set  NEW_UNIT_XS_COPY_QTY_C.
	 * @param data NEW_UNIT_XS_COPY_QTY_CArray
	 */
	public void setNewUnitXsCopyQty_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, newUnitXsCopyQty_C, data[j]);
		}
	}

	/**
	 * get  ORIG_SVC_INV_NUM_C.
	 * @param idx1 List Number
	 * @return ORIG_SVC_INV_NUM_C
	 */
	public String getOrigSvcInvNum_C(int idx1) {
		return outputValue(C, idx1, origSvcInvNum_C);
	}

	/**
	 * set  ORIG_SVC_INV_NUM_C.
	 * @param data ORIG_SVC_INV_NUM_CArray
	 */
	public void setOrigSvcInvNum_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, origSvcInvNum_C, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_CRAT_TS_C.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_CRAT_TS_C
	 */
	public String getXxRecHistCratTs_C(int idx1) {
		return outputValue(C, idx1, xxRecHistCratTs_C);
	}

	/**
	 * set  XX_REC_HIST_CRAT_TS_C.
	 * @param data XX_REC_HIST_CRAT_TS_CArray
	 */
	public void setXxRecHistCratTs_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, xxRecHistCratTs_C, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_CRAT_BY_NM_C.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_CRAT_BY_NM_C
	 */
	public String getXxRecHistCratByNm_C(int idx1) {
		return outputValue(C, idx1, xxRecHistCratByNm_C);
	}

	/**
	 * set  XX_REC_HIST_CRAT_BY_NM_C.
	 * @param data XX_REC_HIST_CRAT_BY_NM_CArray
	 */
	public void setXxRecHistCratByNm_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, xxRecHistCratByNm_C, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_UPD_TS_C.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_UPD_TS_C
	 */
	public String getXxRecHistUpdTs_C(int idx1) {
		return outputValue(C, idx1, xxRecHistUpdTs_C);
	}

	/**
	 * set  XX_REC_HIST_UPD_TS_C.
	 * @param data XX_REC_HIST_UPD_TS_CArray
	 */
	public void setXxRecHistUpdTs_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, xxRecHistUpdTs_C, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_UPD_BY_NM_C.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_UPD_BY_NM_C
	 */
	public String getXxRecHistUpdByNm_C(int idx1) {
		return outputValue(C, idx1, xxRecHistUpdByNm_C);
	}

	/**
	 * set  XX_REC_HIST_UPD_BY_NM_C.
	 * @param data XX_REC_HIST_UPD_BY_NM_CArray
	 */
	public void setXxRecHistUpdByNm_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, xxRecHistUpdByNm_C, data[j]);
		}
	}

	/**
	 * get  XX_REC_HIST_TBL_NM_C.
	 * @param idx1 List Number
	 * @return XX_REC_HIST_TBL_NM_C
	 */
	public String getXxRecHistTblNm_C(int idx1) {
		return outputValue(C, idx1, xxRecHistTblNm_C);
	}

	/**
	 * set  XX_REC_HIST_TBL_NM_C.
	 * @param data XX_REC_HIST_TBL_NM_CArray
	 */
	public void setXxRecHistTblNm_C(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(C);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(C, i, xxRecHistTblNm_C, data[j]);
		}
	}

}

