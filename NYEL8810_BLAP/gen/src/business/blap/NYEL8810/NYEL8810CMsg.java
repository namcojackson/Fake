//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20230905122203000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NYEL8810CMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NYEL8810;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NYEL8810 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NYEL8810CMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** SRCH_OPT_PK_S*/
	public final EZDCBigDecimalItem              srchOptPk_S;

    /** SRCH_OPT_PK_L*/
	public final EZDCBigDecimalItemArray              srchOptPk_L;

    /** SRCH_OPT_NM_L*/
	public final EZDCStringItemArray              srchOptNm_L;

    /** SRCH_OPT_NM_S*/
	public final EZDCStringItem              srchOptNm_S;

    /** XX_COMN_COL_ORD_TXT*/
	public final EZDCStringItem              xxComnColOrdTxt;

    /** USR_ID*/
	public final EZDCStringItem              usrId;

    /** USR_NM*/
	public final EZDCStringItem              usrNm;

    /** WF_PROC_PK*/
	public final EZDCBigDecimalItem              wfProcPk;

    /** XX_WF_PROC_GRP_CD*/
	public final EZDCStringItem              xxWfProcGrpCd;

    /** PROC_STS_CD*/
	public final EZDCStringItem              procStsCd;

    /** PROC_STS_CD_L*/
	public final EZDCStringItemArray              procStsCd_L;

    /** PROC_STS_NM_L*/
	public final EZDCStringItemArray              procStsNm_L;

    /** WF_PROC_NM*/
	public final EZDCStringItem              wfProcNm;

    /** WF_PROC_NM_L*/
	public final EZDCStringItemArray              wfProcNm_L;

    /** WF_PROC_NM_LD*/
	public final EZDCStringItemArray              wfProcNm_LD;

    /** WF_WRK_ITEM_NM*/
	public final EZDCStringItem              wfWrkItemNm;

    /** WF_WRK_ITEM_NM_L*/
	public final EZDCStringItemArray              wfWrkItemNm_L;

    /** WF_WRK_ITEM_NM_LD*/
	public final EZDCStringItemArray              wfWrkItemNm_LD;

    /** XX_WF_CONF_FLG*/
	public final EZDCStringItem              xxWfConfFlg;

    /** XX_WF_APR_CHK_FLG*/
	public final EZDCStringItem              xxWfAprChkFlg;

    /** XX_WF_INP_CHK_FLG*/
	public final EZDCStringItem              xxWfInpChkFlg;

    /** XX_WF_RASG_CHK_FLG*/
	public final EZDCStringItem              xxWfRasgChkFlg;

    /** XX_WF_FYI_CHK_FLG*/
	public final EZDCStringItem              xxWfFyiChkFlg;

    /** XX_WF_SUB_CHK_FLG*/
	public final EZDCStringItem              xxWfSubChkFlg;

    /** XX_WF_VIS_CHK_FLG*/
	public final EZDCStringItem              xxWfVisChkFlg;

    /** CANC_FLG*/
	public final EZDCStringItem              cancFlg;

    /** WF_BIZ_ATTRB_TXT*/
	public final EZDCStringItem              wfBizAttrbTxt;

    /** WF_PROC_DOC_ID*/
	public final EZDCStringItem              wfProcDocId;

    /** XX_WF_APR_ALL_CHK_FLG*/
	public final EZDCStringItem              xxWfAprAllChkFlg;

    /** XX_WF_FYI_ALL_CHK_FLG*/
	public final EZDCStringItem              xxWfFyiAllChkFlg;

    /** XX_WF_RASG_ALL_CHK_FLG*/
	public final EZDCStringItem              xxWfRasgAllChkFlg;

    /** CANC_FLG_AL*/
	public final EZDCStringItem              cancFlg_AL;

    /** XX_GRP_FLG_F*/
	public final EZDCStringItem              xxGrpFlg_F;

    /** XX_GRP_FLG_FL*/
	public final EZDCStringItemArray              xxGrpFlg_FL;

    /** XX_COND_NM_FD*/
	public final EZDCStringItemArray              xxCondNm_FD;

    /** WF_USR_GRP_NM_F*/
	public final EZDCStringItem              wfUsrGrpNm_F;

    /** XX_DTL_NM_F*/
	public final EZDCStringItem              xxDtlNm_F;

    /** XX_GRP_FLG_T*/
	public final EZDCStringItem              xxGrpFlg_T;

    /** XX_GRP_FLG_TL*/
	public final EZDCStringItemArray              xxGrpFlg_TL;

    /** XX_COND_NM_TD*/
	public final EZDCStringItemArray              xxCondNm_TD;

    /** WF_USR_GRP_NM_T*/
	public final EZDCStringItem              wfUsrGrpNm_T;

    /** XX_DTL_NM_T*/
	public final EZDCStringItem              xxDtlNm_T;

    /** XX_FROM_DT_SS*/
	public final EZDCDateItem              xxFromDt_SS;

    /** XX_THRU_DT_SE*/
	public final EZDCDateItem              xxThruDt_SE;

    /** XX_FROM_DT_DS*/
	public final EZDCDateItem              xxFromDt_DS;

    /** XX_THRU_DT_DE*/
	public final EZDCDateItem              xxThruDt_DE;

    /** XX_FILE_DATA*/
	public final EZDCMimeSourceItem              xxFileData;

    /** A*/
	public final business.blap.NYEL8810.NYEL8810_ACMsgArray              A;

    /** XX_WF_ASG_CD*/
	public final EZDCStringItem              xxWfAsgCd;

    /** XX_WF_ASG_NM*/
	public final EZDCStringItem              xxWfAsgNm;

    /** WF_CMNT_TXT*/
	public final EZDCStringItem              wfCmntTxt;

    /** XX_PAGE_SHOW_FROM_NUM*/
	public final EZDCBigDecimalItem              xxPageShowFromNum;

    /** XX_PAGE_SHOW_TO_NUM*/
	public final EZDCBigDecimalItem              xxPageShowToNum;

    /** XX_PAGE_SHOW_OF_NUM*/
	public final EZDCBigDecimalItem              xxPageShowOfNum;

    /** XX_SORT_TBL_NM*/
	public final EZDCStringItem              xxSortTblNm;

    /** XX_SORT_ITEM_NM*/
	public final EZDCStringItem              xxSortItemNm;

    /** XX_SORT_ORD_BY_TXT*/
	public final EZDCStringItem              xxSortOrdByTxt;

    /** P*/
	public final business.blap.NYEL8810.NYEL8810_PCMsgArray              P;

    /** Q*/
	public final business.blap.NYEL8810.NYEL8810_QCMsgArray              Q;

    /** XX_SCR_EVENT_NM*/
	public final EZDCStringItem              xxScrEventNm;

    /** R*/
	public final business.blap.NYEL8810.NYEL8810_RCMsgArray              R;


	/**
	 * NYEL8810CMsg is constructor.
	 * The initialization when the instance of NYEL8810CMsg is generated.
	 */
	public NYEL8810CMsg() {
		this(false, -1);
	}

	/**
	 * NYEL8810CMsg is constructor.
	 * The initialization when the instance of NYEL8810CMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NYEL8810CMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		srchOptPk_S = (EZDCBigDecimalItem)newItem("srchOptPk_S");
		srchOptPk_L = (EZDCBigDecimalItemArray)newItemArray("srchOptPk_L");
		srchOptNm_L = (EZDCStringItemArray)newItemArray("srchOptNm_L");
		srchOptNm_S = (EZDCStringItem)newItem("srchOptNm_S");
		xxComnColOrdTxt = (EZDCStringItem)newItem("xxComnColOrdTxt");
		usrId = (EZDCStringItem)newItem("usrId");
		usrNm = (EZDCStringItem)newItem("usrNm");
		wfProcPk = (EZDCBigDecimalItem)newItem("wfProcPk");
		xxWfProcGrpCd = (EZDCStringItem)newItem("xxWfProcGrpCd");
		procStsCd = (EZDCStringItem)newItem("procStsCd");
		procStsCd_L = (EZDCStringItemArray)newItemArray("procStsCd_L");
		procStsNm_L = (EZDCStringItemArray)newItemArray("procStsNm_L");
		wfProcNm = (EZDCStringItem)newItem("wfProcNm");
		wfProcNm_L = (EZDCStringItemArray)newItemArray("wfProcNm_L");
		wfProcNm_LD = (EZDCStringItemArray)newItemArray("wfProcNm_LD");
		wfWrkItemNm = (EZDCStringItem)newItem("wfWrkItemNm");
		wfWrkItemNm_L = (EZDCStringItemArray)newItemArray("wfWrkItemNm_L");
		wfWrkItemNm_LD = (EZDCStringItemArray)newItemArray("wfWrkItemNm_LD");
		xxWfConfFlg = (EZDCStringItem)newItem("xxWfConfFlg");
		xxWfAprChkFlg = (EZDCStringItem)newItem("xxWfAprChkFlg");
		xxWfInpChkFlg = (EZDCStringItem)newItem("xxWfInpChkFlg");
		xxWfRasgChkFlg = (EZDCStringItem)newItem("xxWfRasgChkFlg");
		xxWfFyiChkFlg = (EZDCStringItem)newItem("xxWfFyiChkFlg");
		xxWfSubChkFlg = (EZDCStringItem)newItem("xxWfSubChkFlg");
		xxWfVisChkFlg = (EZDCStringItem)newItem("xxWfVisChkFlg");
		cancFlg = (EZDCStringItem)newItem("cancFlg");
		wfBizAttrbTxt = (EZDCStringItem)newItem("wfBizAttrbTxt");
		wfProcDocId = (EZDCStringItem)newItem("wfProcDocId");
		xxWfAprAllChkFlg = (EZDCStringItem)newItem("xxWfAprAllChkFlg");
		xxWfFyiAllChkFlg = (EZDCStringItem)newItem("xxWfFyiAllChkFlg");
		xxWfRasgAllChkFlg = (EZDCStringItem)newItem("xxWfRasgAllChkFlg");
		cancFlg_AL = (EZDCStringItem)newItem("cancFlg_AL");
		xxGrpFlg_F = (EZDCStringItem)newItem("xxGrpFlg_F");
		xxGrpFlg_FL = (EZDCStringItemArray)newItemArray("xxGrpFlg_FL");
		xxCondNm_FD = (EZDCStringItemArray)newItemArray("xxCondNm_FD");
		wfUsrGrpNm_F = (EZDCStringItem)newItem("wfUsrGrpNm_F");
		xxDtlNm_F = (EZDCStringItem)newItem("xxDtlNm_F");
		xxGrpFlg_T = (EZDCStringItem)newItem("xxGrpFlg_T");
		xxGrpFlg_TL = (EZDCStringItemArray)newItemArray("xxGrpFlg_TL");
		xxCondNm_TD = (EZDCStringItemArray)newItemArray("xxCondNm_TD");
		wfUsrGrpNm_T = (EZDCStringItem)newItem("wfUsrGrpNm_T");
		xxDtlNm_T = (EZDCStringItem)newItem("xxDtlNm_T");
		xxFromDt_SS = (EZDCDateItem)newItem("xxFromDt_SS");
		xxThruDt_SE = (EZDCDateItem)newItem("xxThruDt_SE");
		xxFromDt_DS = (EZDCDateItem)newItem("xxFromDt_DS");
		xxThruDt_DE = (EZDCDateItem)newItem("xxThruDt_DE");
		xxFileData = (EZDCMimeSourceItem)newItem("xxFileData");
		A = (business.blap.NYEL8810.NYEL8810_ACMsgArray)newMsgArray("A");
		xxWfAsgCd = (EZDCStringItem)newItem("xxWfAsgCd");
		xxWfAsgNm = (EZDCStringItem)newItem("xxWfAsgNm");
		wfCmntTxt = (EZDCStringItem)newItem("wfCmntTxt");
		xxPageShowFromNum = (EZDCBigDecimalItem)newItem("xxPageShowFromNum");
		xxPageShowToNum = (EZDCBigDecimalItem)newItem("xxPageShowToNum");
		xxPageShowOfNum = (EZDCBigDecimalItem)newItem("xxPageShowOfNum");
		xxSortTblNm = (EZDCStringItem)newItem("xxSortTblNm");
		xxSortItemNm = (EZDCStringItem)newItem("xxSortItemNm");
		xxSortOrdByTxt = (EZDCStringItem)newItem("xxSortOrdByTxt");
		P = (business.blap.NYEL8810.NYEL8810_PCMsgArray)newMsgArray("P");
		Q = (business.blap.NYEL8810.NYEL8810_QCMsgArray)newMsgArray("Q");
		xxScrEventNm = (EZDCStringItem)newItem("xxScrEventNm");
		R = (business.blap.NYEL8810.NYEL8810_RCMsgArray)newMsgArray("R");
	}

	/**
	 * get the type of array which is stored
	 * @return NYEL8810CMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NYEL8810CMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"srchOptPk_S", "srchOptPk_S", "S", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"srchOptPk_L", "srchOptPk_L", "L", "99", TYPE_SEISU_SYOSU, "28", "0"},
	{"srchOptNm_L", "srchOptNm_L", "L", "99", TYPE_HANKAKUEISU, "50", null},
	{"srchOptNm_S", "srchOptNm_S", "S", null, TYPE_HANKAKUEISU, "50", null},
	{"xxComnColOrdTxt", "xxComnColOrdTxt", null, null, TYPE_HANKAKUEISU, "2000", null},
	{"usrId", "usrId", null, null, TYPE_HANKAKUEISU, "16", null},
	{"usrNm", "usrNm", null, null, TYPE_HANKAKUEISU, "30", null},
	{"wfProcPk", "wfProcPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"xxWfProcGrpCd", "xxWfProcGrpCd", null, null, TYPE_HANKAKUEISU, "30", null},
	{"procStsCd", "procStsCd", null, null, TYPE_HANKAKUEISU, "1", null},
	{"procStsCd_L", "procStsCd_L", "L", "99", TYPE_HANKAKUEISU, "1", null},
	{"procStsNm_L", "procStsNm_L", "L", "99", TYPE_HANKAKUEISU, "30", null},
	{"wfProcNm", "wfProcNm", null, null, TYPE_HANKAKUEISU, "40", null},
	{"wfProcNm_L", "wfProcNm_L", "L", "99", TYPE_HANKAKUEISU, "40", null},
	{"wfProcNm_LD", "wfProcNm_LD", "LD", "99", TYPE_HANKAKUEISU, "40", null},
	{"wfWrkItemNm", "wfWrkItemNm", null, null, TYPE_HANKAKUEISU, "40", null},
	{"wfWrkItemNm_L", "wfWrkItemNm_L", "L", "99", TYPE_HANKAKUEISU, "40", null},
	{"wfWrkItemNm_LD", "wfWrkItemNm_LD", "LD", "99", TYPE_HANKAKUEISU, "40", null},
	{"xxWfConfFlg", "xxWfConfFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"xxWfAprChkFlg", "xxWfAprChkFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"xxWfInpChkFlg", "xxWfInpChkFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"xxWfRasgChkFlg", "xxWfRasgChkFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"xxWfFyiChkFlg", "xxWfFyiChkFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"xxWfSubChkFlg", "xxWfSubChkFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"xxWfVisChkFlg", "xxWfVisChkFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"cancFlg", "cancFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"wfBizAttrbTxt", "wfBizAttrbTxt", null, null, TYPE_HANKAKUEISU, "40", null},
	{"wfProcDocId", "wfProcDocId", null, null, TYPE_HANKAKUEISU, "40", null},
	{"xxWfAprAllChkFlg", "xxWfAprAllChkFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"xxWfFyiAllChkFlg", "xxWfFyiAllChkFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"xxWfRasgAllChkFlg", "xxWfRasgAllChkFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"cancFlg_AL", "cancFlg_AL", "AL", null, TYPE_HANKAKUEISU, "1", null},
	{"xxGrpFlg_F", "xxGrpFlg_F", "F", null, TYPE_HANKAKUEISU, "1", null},
	{"xxGrpFlg_FL", "xxGrpFlg_FL", "FL", "99", TYPE_HANKAKUEISU, "1", null},
	{"xxCondNm_FD", "xxCondNm_FD", "FD", "99", TYPE_HANKAKUEISU, "70", null},
	{"wfUsrGrpNm_F", "wfUsrGrpNm_F", "F", null, TYPE_HANKAKUEISU, "16", null},
	{"xxDtlNm_F", "xxDtlNm_F", "F", null, TYPE_HANKAKUEISU, "70", null},
	{"xxGrpFlg_T", "xxGrpFlg_T", "T", null, TYPE_HANKAKUEISU, "1", null},
	{"xxGrpFlg_TL", "xxGrpFlg_TL", "TL", "99", TYPE_HANKAKUEISU, "1", null},
	{"xxCondNm_TD", "xxCondNm_TD", "TD", "99", TYPE_HANKAKUEISU, "70", null},
	{"wfUsrGrpNm_T", "wfUsrGrpNm_T", "T", null, TYPE_HANKAKUEISU, "16", null},
	{"xxDtlNm_T", "xxDtlNm_T", "T", null, TYPE_HANKAKUEISU, "70", null},
	{"xxFromDt_SS", "xxFromDt_SS", "SS", null, TYPE_NENTSUKIHI, "8", null},
	{"xxThruDt_SE", "xxThruDt_SE", "SE", null, TYPE_NENTSUKIHI, "8", null},
	{"xxFromDt_DS", "xxFromDt_DS", "DS", null, TYPE_NENTSUKIHI, "8", null},
	{"xxThruDt_DE", "xxThruDt_DE", "DE", null, TYPE_NENTSUKIHI, "8", null},
	{"xxFileData", "xxFileData", null, null, TYPE_UPLOAD, null, null},
	{"A", "A", null, "20", "business.blap.NYEL8810.NYEL8810_ACMsgArray", null, null},
	
	{"xxWfAsgCd", "xxWfAsgCd", null, null, TYPE_HANKAKUEISU, "32", null},
	{"xxWfAsgNm", "xxWfAsgNm", null, null, TYPE_HANKAKUEISU, "255", null},
	{"wfCmntTxt", "wfCmntTxt", null, null, TYPE_HANKAKUEISU, "400", null},
	{"xxPageShowFromNum", "xxPageShowFromNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowToNum", "xxPageShowToNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowOfNum", "xxPageShowOfNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxSortTblNm", "xxSortTblNm", null, null, TYPE_HANKAKUEISU, "1", null},
	{"xxSortItemNm", "xxSortItemNm", null, null, TYPE_HANKAKUEISU, "50", null},
	{"xxSortOrdByTxt", "xxSortOrdByTxt", null, null, TYPE_HANKAKUEISU, "4", null},
	{"P", "P", null, "200", "business.blap.NYEL8810.NYEL8810_PCMsgArray", null, null},
	
	{"Q", "Q", null, "11", "business.blap.NYEL8810.NYEL8810_QCMsgArray", null, null},
	
	{"xxScrEventNm", "xxScrEventNm", null, null, TYPE_HANKAKUEISU, "50", null},
	{"R", "R", null, "2", "business.blap.NYEL8810.NYEL8810_RCMsgArray", null, null},
	
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"SRCH_OPT_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//srchOptPk_S
        {"SRCH_OPT_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//srchOptPk_L
        {"SRCH_OPT_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//srchOptNm_L
        {"SRCH_OPT_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//srchOptNm_S
        {"XX_COMN_COL_ORD_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxComnColOrdTxt
        {"USR_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//usrId
        {"USR_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//usrNm
        {"WF_PROC_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//wfProcPk
        {"XX_WF_PROC_GRP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxWfProcGrpCd
        {"PROC_STS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//procStsCd
        {"PROC_STS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//procStsCd_L
        {"PROC_STS_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//procStsNm_L
        {"WF_PROC_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//wfProcNm
        {"WF_PROC_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//wfProcNm_L
        {"WF_PROC_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//wfProcNm_LD
        {"WF_WRK_ITEM_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//wfWrkItemNm
        {"WF_WRK_ITEM_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//wfWrkItemNm_L
        {"WF_WRK_ITEM_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//wfWrkItemNm_LD
        {"XX_WF_CONF_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxWfConfFlg
        {"XX_WF_APR_CHK_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxWfAprChkFlg
        {"XX_WF_INP_CHK_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxWfInpChkFlg
        {"XX_WF_RASG_CHK_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxWfRasgChkFlg
        {"XX_WF_FYI_CHK_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxWfFyiChkFlg
        {"XX_WF_SUB_CHK_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxWfSubChkFlg
        {"XX_WF_VIS_CHK_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxWfVisChkFlg
        {"CANC_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cancFlg
        {"WF_BIZ_ATTRB_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//wfBizAttrbTxt
        {"WF_PROC_DOC_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//wfProcDocId
        {"XX_WF_APR_ALL_CHK_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxWfAprAllChkFlg
        {"XX_WF_FYI_ALL_CHK_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxWfFyiAllChkFlg
        {"XX_WF_RASG_ALL_CHK_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxWfRasgAllChkFlg
        {"CANC_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cancFlg_AL
        {"XX_GRP_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxGrpFlg_F
        {"XX_GRP_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxGrpFlg_FL
        {"XX_COND_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxCondNm_FD
        {"WF_USR_GRP_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//wfUsrGrpNm_F
        {"XX_DTL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDtlNm_F
        {"XX_GRP_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxGrpFlg_T
        {"XX_GRP_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxGrpFlg_TL
        {"XX_COND_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxCondNm_TD
        {"WF_USR_GRP_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//wfUsrGrpNm_T
        {"XX_DTL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDtlNm_T
        {"XX_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxFromDt_SS
        {"XX_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxThruDt_SE
        {"XX_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxFromDt_DS
        {"XX_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxThruDt_DE
        {"XX_FILE_DATA",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxFileData
		null,	//A
        {"XX_WF_ASG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxWfAsgCd
        {"XX_WF_ASG_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxWfAsgNm
        {"WF_CMNT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//wfCmntTxt
        {"XX_PAGE_SHOW_FROM_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowFromNum
        {"XX_PAGE_SHOW_TO_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowToNum
        {"XX_PAGE_SHOW_OF_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowOfNum
        {"XX_SORT_TBL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxSortTblNm
        {"XX_SORT_ITEM_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxSortItemNm
        {"XX_SORT_ORD_BY_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxSortOrdByTxt
		null,	//P
		null,	//Q
        {"XX_SCR_EVENT_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxScrEventNm
		null,	//R
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

