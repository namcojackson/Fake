<?xml version="1.0" encoding="UTF-8"?>
<sqlMap namespace="NSAL0300Query">
<statement id="getDsContrPk" parameterClass="Map" resultClass="BigDecimal">
SELECT
    DS_CONTR_PK
FROM
    DS_CONTR
WHERE
        GLBL_CMPY_CD           =    #glblCmpyCd#
    AND    EZCANCELFLAG        =    '0'
    AND    DS_CONTR_NUM        =    #dsContrNum#
    AND    DS_CONTR_STS_CD &lt;&gt; #dsContrSts#
    <isNotNull property="dsContrSqNum">
    AND    DS_CONTR_SQ_NUM     =    #dsContrSqNum#
    </isNotNull>
    <isNull property="dsContrSqNum">
    AND    DS_CONTR_SQ_NUM     =    (
        SELECT
            MAX(DS_CONTR_SQ_NUM)
        FROM
            DS_CONTR
        WHERE
            DS_CONTR_NUM       =    #dsContrNum#
        AND    GLBL_CMPY_CD    =    #glblCmpyCd#
        AND    EZCANCELFLAG    =    '0'
    )
    </isNull>
ORDER BY
    CONTR_VRSN_EFF_THRU_DT    DESC
,    CONTR_VRSN_EFF_FROM_DT    DESC
</statement>

<statement id="getDsContr" parameterClass="Map" resultClass="Map">
SELECT
     DCR.EZUPTIME
,    DCR.EZUPTIMEZONE
,    DCR.DS_CONTR_PK
,    DCR.DS_CONTR_NUM
,    DCR.DS_CONTR_SQ_NUM
<!-- START 2018/11/07 K.Fujimoto [QC#28627, ADD] -->
,    DCR.CONTR_LINK_NUM
<!-- END   2018/11/07 K.Fujimoto [QC#28627, ADD] -->
,    DCR.SVC_CONTR_BR_CD
,    DCR.TOC_CD
<!-- START 2016/04/26 T.Tomita [QC#4668, MOD] -->
,    T.TOC_NM
<!-- END 2016/04/26 T.Tomita [QC#4668, MOD] -->
,    DCR.DS_CONTR_CATG_CD
,    DCR.DS_CONTR_NM
,    DCR.DS_CONTR_STS_CD
,    DCS.DS_CONTR_CTRL_STS_NM          AS    DS_CONTR_STS_DESC_TXT
,    STC.DS_ACCT_NM                    AS    DS_ACCT_NM
,    DCR.DS_ACCT_NUM
<!-- Bill To -->
,    DCR.LEASE_CMPY_CD
<!-- START 2016/04/26 T.Tomita [QC#5979, MOD] -->
,    LCP.LOC_NM                        AS    DS_ACCT_NM_L
<!-- END 2016/04/26 T.Tomita [QC#5979, MOD] -->
,    DCR.BASE_CHRG_TO_LEASE_CMPY_FLG
,    DCR.USG_CHRG_TO_LEASE_CMPY_FLG
<!-- START 2018/05/15 K.Kitachi [QC#24265, ADD] -->
,    DCR.CFS_LEASE_NUM_CMNT_TXT
<!-- END 2018/05/15 K.Kitachi [QC#24265, ADD] -->
<!-- START 2019/01/09 K.Kitachi [QC#26928, MOD] -->
<!-- ,    DCP.EZUPTIME                      AS    EZUPTIME_P -->
<!-- ,    DCP.EZUPTIMEZONE                  AS    EZUPTIMEZONE_P -->
<!-- ,    DCP.DS_CONTR_CR_CARD_PO_PK -->
<!-- ,    DCP.CUST_PO_NUM -->
<!-- ,    DCP.PO_DT -->
<!-- ,    DCP.CR_CARD_CUST_REF_NUM -->
<!-- ,    SUBSTR(DCP.CR_CARD_EXPR_YR_MTH, 5, 2) AS CR_CARD_EXPR_MTH -->
<!-- ,    SUBSTR(DCP.CR_CARD_EXPR_YR_MTH, 1, 4) AS CR_CARD_EXPR_YR -->
,    DCPO.EZUPTIME                     AS    EZUPTIME_PO
,    DCPO.EZUPTIMEZONE                 AS    EZUPTIMEZONE_PO
,    DCPO.DS_CONTR_CR_CARD_PO_PK       AS    DS_CONTR_CR_CARD_PO_PK_PO
,    DCPO.CUST_PO_NUM
,    DCPO.PO_DT
,    DCPO.PO_FROM_DT
,    DCCC.EZUPTIME                     AS    EZUPTIME_CC
,    DCCC.EZUPTIMEZONE                 AS    EZUPTIMEZONE_CC
,    DCCC.DS_CONTR_CR_CARD_PO_PK       AS    DS_CONTR_CR_CARD_PO_PK_CC
,    DCCC.CR_CARD_CUST_REF_NUM
<!-- START 2019/11/27 E.Kameishi [QC#54594, ADD] -->
,    CRC.CR_CARD_LAST_DIGIT_NUM
<!-- END 2019/11/27 E.Kameishi [QC#54594, ADD] -->
,    SUBSTR(DCCC.CR_CARD_EXPR_YR_MTH, 5, 2) AS CR_CARD_EXPR_MTH
,    SUBSTR(DCCC.CR_CARD_EXPR_YR_MTH, 1, 4) AS CR_CARD_EXPR_YR
<!-- END 2019/01/09 K.Kitachi [QC#26928, MOD] -->
,    DCR.PMT_TERM_CASH_DISC_CD
,    PTC.PMT_TERM_CASH_DISC_DESC_TXT
,    DRE.DS_CONTR_RNW_ESCL_PK
,    DRE.EZUPTIME                      AS    EZUPTIME_S
,    DRE.EZUPTIMEZONE                  AS    EZUPTIMEZONE_S
,    DRE.CONTR_AUTO_RNW_TP_CD
,    DRE.BEF_END_RNW_DAYS_AOT
,    RNW.CONTR_RNW_TOT_CNT
,    DRE.RNW_PRC_METH_CD
,    DRE.BASE_PRC_UP_RATIO
,    DRE.MTR_PRC_UP_RATIO
,    DCR.CONTR_VRSN_EFF_FROM_DT
,    DCR.CONTR_VRSN_EFF_THRU_DT
,    DCR.CONTR_DURN_AOT
,    DCR.BLLG_CYCLE_UOM_CD
,    DCR.MTR_EST_TP_CD
,    INV_SEPT_BASE_USG_FLG
,    PRC_ALLOC_BY_MACH_QTY_FLG
,    DRE.CONTR_UPLFT_TP_CD
,    DRE.UPLFT_PRC_METH_CD
,    DRE.UPLFT_BASE_PRC_UP_RATIO
,    DRE.UPLFT_MTR_PRC_UP_RATIO
<!-- -->
,    DCR.DS_CONTR_TP_CD
,    DCR.DS_CONTR_CRAT_DT
,    DCR.DS_CONTR_CRAT_PSN_CD
,    DCR.DS_CONTR_LAST_UPD_DT
,    DCR.DS_CONTR_LAST_UPD_PSN_CD
,    DCR.DS_CONTR_APVL_DT
,    DCR.DS_CONTR_APVL_PSN_CD
,    DCR.DS_CONTR_BLLG_STS_CD
,    DCR.RNW_PER_MTH
,    DCC.DS_CONTR_CATG_ABBR_NM
,    DCR.SVC_LINE_BIZ_CD
,    SCB.SVC_CONTR_BR_DESC_TXT
,    DCR.CONTR_ADMIN_PSN_CD
,    RTRIM(PSN.PSN_FIRST_NM || ' ' || PSN.PSN_LAST_NM) AS PSN_NM
,    DCR.DS_CONTR_CLS_CD
,    DCR.DS_CONTR_RPT_GRP_NUM
<!-- START 2017/01/31 [QC#17278, ADD] -->
,    CRG.DS_CONTR_RPT_GRP_DESC_TXT
<!-- END   2017/01/31 [QC#17278, ADD] -->
,    DCR.DS_CONTR_EDI_CD
,    DCR.CONTR_INV_CMNT_TXT
,    DCR.SVC_CONTR_REF_CMNT_TXT
,    DCR.CTAC_PSN_PK
<!-- START 2018/06/18 K.Kitachi [QC#18591, MOD] -->
<!-- ,    RTRIM(CTP.CTAC_PSN_FIRST_NM || ' ' || CTP.CTAC_PSN_LAST_NM) AS PSN_NM_CP -->
,    CTP.CTAC_PSN_FIRST_NM AS CTAC_PSN_FIRST_NM_CP
,    CTP.CTAC_PSN_LAST_NM  AS CTAC_PSN_LAST_NM_CP
<!-- END 2018/06/18 K.Kitachi [QC#18591, MOD] -->
,    DCR.ALT_PAYER_CUST_CD
,    BTC.LOC_NM
,    DCR.SVC_PGM_MDSE_CD
,    MDS.MDSE_DESC_SHORT_TXT
,    DCR.BASE_BLLG_CYCLE_CD
,    DCR.MTR_BLLG_CYCLE_CD
,    DCR.CRAT_DRAFT_PSN_CD
,    BTC.SELL_TO_CUST_CD
<!-- START 2017/07/26 M.Kidokoro [QC#18122, ADD] -->
,    DCS.CONTR_TRMN_AVAL_FLG
<!-- END 2017/07/26 M.Kidokoro [QC#18122, ADD] -->
<!-- START 2018/07/23 K.Kim [QC#26831, ADD] -->
,    DCS.CONTR_RNW_AVAL_FLG
<!-- END 2018/07/23 K.Kim [QC#26831, ADD] -->
<!-- START 2022/03/22 [QC#59683, ADD] -->
,    DCR.DS_INV_TGTR_TP_CD
<!-- END   2022/03/22 [QC#59683, ADD] -->
<!-- START "2023/02/14 R.Takau [QC#55645, ADD]-->
,   CNTB.EZUPTIME AS EZUPTIME_CP
,   CNTB.EZUPTIMEZONE AS EZUPTIMEZONE_CP
,   CNTB.DS_CUST_BANK_ACCT_RELN_PK 
,   DBA.BANK_RTE_NUM
,   CASE WHEN LENGTH(DBA.DS_BANK_ACCT_NUM) &lt;= 4
       THEN REGEXP_REPLACE(DBA.DS_BANK_ACCT_NUM,'.','*')
       ELSE REGEXP_REPLACE(SUBSTR(DBA.DS_BANK_ACCT_NUM, 1, LENGTH(DBA.DS_BANK_ACCT_NUM) - 4),'.','*')
              || SUBSTR(DBA.DS_BANK_ACCT_NUM, LENGTH(DBA.DS_BANK_ACCT_NUM) - 4 + 1)
     END AS MASK_BANK_ACCT_NUM
<!-- END "2023/02/14 R.Takau [QC#55645, ADD]-->
FROM
     DS_CONTR           DCR
,    DS_CONTR_STS_V     DCS
,    SELL_TO_CUST       STC
<!-- START 2016/04/26 T.Tomita [QC#5979, MOD] -->
,    BILL_TO_CUST       LCP
<!-- END 2016/04/26 T.Tomita [QC#5979, MOD] -->
,    DS_CONTR_CATG      DCC
,    SVC_CONTR_BR       SCB
,    S21_PSN            PSN
,    CTAC_PSN           CTP
,    BILL_TO_CUST       BTC
,    PMT_TERM_CASH_DISC PTC
,    MDSE               MDS
<!-- START 2016/04/26 T.Tomita [QC#4668, MOD] -->
<!-- START 2017/01/31 [QC#17278, ADD] -->
,    DS_CONTR_RPT_GRP   CRG
<!-- END   2017/01/31 [QC#17278, ADD] -->
<!-- START 2019/11/27 E.Kameishi [QC#54594, ADD] -->
,    DS_CR_CARD         CRC
<!-- END 2019/11/27 E.Kameishi [QC#54594, ADD] -->
,    (
        SELECT
             T.TOC_CD
            ,T.TOC_NM
        FROM
             TOC              T
            ,ORG_FUNC_ROLE_TP OFRT
            ,BIZ_AREA_ORG     BAO
            ,ORG_FUNC_ASG     OFA
            ,S21_PSN          SP
        WHERE
                T.GLBL_CMPY_CD            = #glblCmpyCd#
            AND T.EZCANCELFLAG            = '0'
            AND T.GLBL_CMPY_CD            = OFRT.GLBL_CMPY_CD
            AND T.ORG_FUNC_ROLE_TP_CD     = OFRT.ORG_FUNC_ROLE_TP_CD
            AND OFRT.SLS_REP_FLG          = 'Y'
            AND OFRT.EZCANCELFLAG         = '0'
            AND OFRT.GLBL_CMPY_CD         = BAO.GLBL_CMPY_CD
            AND OFRT.FIRST_ORG_CD         = BAO.BIZ_AREA_ORG_CD
            AND BAO.SLS_FLG               = 'Y'
            AND BAO.ORG_STRU_TP_CD        = #orgStruTpCd#
            AND T.GLBL_CMPY_CD            = OFA.GLBL_CMPY_CD
            AND T.TOC_CD                  = OFA.TOC_CD
            AND OFA.EZCANCELFLAG          = '0'
            AND OFA.GLBL_CMPY_CD          = SP.GLBL_CMPY_CD
            AND OFA.PSN_CD                = SP.PSN_CD
            AND SP.EZCANCELFLAG           = '0'
    )                T
<!-- END 2016/04/26 T.Tomita [QC#4668, MOD] -->
<!-- START 2019/01/09 K.Kitachi [QC#26928, MOD] -->
<!-- ,    ( -->
<!--         SELECT -->
<!--             A.DS_CONTR_CR_CARD_PO_PK -->
<!--         ,    A.DS_CONTR_PK -->
<!--         ,    A.CUST_PO_NUM -->
<!--         ,    A.PO_DT -->
<!--         ,    A.CR_CARD_CUST_REF_NUM -->
<!--         ,    A.CR_CARD_EXPR_YR_MTH -->
<!--         ,    A.EZUPTIME -->
<!--         ,    A.EZUPTIMEZONE -->
<!--         FROM -->
<!--             DS_CONTR_CR_CARD_PO        A -->
<!--         WHERE -->
<!--             A.DS_CONTR_PK                =    #dsContrPk# -->
<!--         AND    A.DS_CONTR_DTL_PK         IS NULL -->
<!--         AND    A.DS_CONTR_BLLG_MTR_PK    IS NULL -->
<!--         AND    A.GLBL_CMPY_CD            =    #glblCmpyCd# -->
<!--         AND    A.EZCANCELFLAG            =    '0' -->
<!--     )                DCP -->
,    (
<!-- START 2019/02/20 K.Kitachi [QC#30430, MOD] -->
<!--    SELECT -->
<!--         A.DS_CONTR_CR_CARD_PO_PK -->
<!--        ,A.DS_CONTR_PK -->
<!--        ,A.CUST_PO_NUM -->
<!--        ,A.PO_DT -->
<!--        ,A.PO_FROM_DT -->
<!--        ,A.EZUPTIME -->
<!--        ,A.EZUPTIMEZONE -->
<!--    FROM -->
<!--        DS_CONTR_CR_CARD_PO A -->
<!--    WHERE -->
<!--            A.GLBL_CMPY_CD          = #glblCmpyCd# -->
<!--        AND A.DS_CONTR_PK           = #dsContrPk# -->
<!--        AND A.DS_CONTR_DTL_PK       IS NULL -->
<!--        AND A.DS_CONTR_BLLG_MTR_PK  IS NULL -->
<!--        AND A.CR_CARD_FLG           = 'N' -->
<!--        AND A.PO_FROM_DT            &lt;= #slsDt# -->
<!--        AND A.PO_DT                 &gt;= #slsDt# -->
<!--        AND A.EZCANCELFLAG          = '0' -->
        SELECT
             Z.DS_CONTR_CR_CARD_PO_PK
            ,Z.DS_CONTR_PK
            ,Z.CUST_PO_NUM
            ,Z.PO_FROM_DT
            ,Z.PO_DT
            ,Z.EZUPTIME
            ,Z.EZUPTIMEZONE
        FROM (
            SELECT
                 X.DS_CONTR_CR_CARD_PO_PK
                ,X.DS_CONTR_PK
                ,X.CUST_PO_NUM
                ,X.PO_FROM_DT
                ,X.PO_DT
                ,X.EZUPTIME
                ,X.EZUPTIMEZONE
                ,ROW_NUMBER() OVER (PARTITION BY X.DS_CONTR_PK ORDER BY X.SORT_NUM_1, X.SORT_NUM_2) ROW_NUM
            FROM (
                SELECT
                     A.DS_CONTR_CR_CARD_PO_PK
                    ,A.DS_CONTR_PK
                    ,A.CUST_PO_NUM
                    ,A.PO_FROM_DT
                    ,A.PO_DT
                    ,A.EZUPTIME
                    ,A.EZUPTIMEZONE
                    ,1 SORT_NUM_1
                    ,1 SORT_NUM_2
                FROM
                    DS_CONTR_CR_CARD_PO A
                WHERE
                        A.GLBL_CMPY_CD         = #glblCmpyCd#
                    AND A.DS_CONTR_PK          = #dsContrPk#
                    AND A.DS_CONTR_DTL_PK      IS NULL
                    AND A.DS_CONTR_BLLG_MTR_PK IS NULL
                    AND A.CR_CARD_FLG          = 'N'
                    AND A.PO_FROM_DT           &lt;= #slsDt#
                    AND A.PO_DT                &gt;= #slsDt#
                    AND A.EZCANCELFLAG         = '0'
                UNION
                SELECT
                     A.DS_CONTR_CR_CARD_PO_PK
                    ,A.DS_CONTR_PK
                    ,A.CUST_PO_NUM
                    ,A.PO_FROM_DT
                    ,A.PO_DT
                    ,A.EZUPTIME
                    ,A.EZUPTIMEZONE
                    ,2 SORT_NUM_1
                    ,ROW_NUMBER() OVER (PARTITION BY A.DS_CONTR_PK ORDER BY A.PO_FROM_DT) SORT_NUM_2
                FROM
                    DS_CONTR_CR_CARD_PO A
                WHERE
                        A.GLBL_CMPY_CD         = #glblCmpyCd#
                    AND A.DS_CONTR_PK          = #dsContrPk#
                    AND A.DS_CONTR_DTL_PK      IS NULL
                    AND A.DS_CONTR_BLLG_MTR_PK IS NULL
                    AND A.CR_CARD_FLG          = 'N'
                    AND A.PO_FROM_DT           &gt; #slsDt#
                    AND A.EZCANCELFLAG         = '0'
                UNION
                SELECT
                     A.DS_CONTR_CR_CARD_PO_PK
                    ,A.DS_CONTR_PK
                    ,A.CUST_PO_NUM
                    ,A.PO_FROM_DT
                    ,A.PO_DT
                    ,A.EZUPTIME
                    ,A.EZUPTIMEZONE
                    ,3 SORT_NUM_1
                    ,ROW_NUMBER() OVER (PARTITION BY A.DS_CONTR_PK ORDER BY A.PO_DT DESC) SORT_NUM_2
                FROM
                    DS_CONTR_CR_CARD_PO A
                WHERE
                        A.GLBL_CMPY_CD         = #glblCmpyCd#
                    AND A.DS_CONTR_PK          = #dsContrPk#
                    AND A.DS_CONTR_DTL_PK      IS NULL
                    AND A.DS_CONTR_BLLG_MTR_PK IS NULL
                    AND A.CR_CARD_FLG          = 'N'
                    AND A.PO_DT                &lt; #slsDt#
                    AND A.EZCANCELFLAG         = '0'
                ) X
            ) Z
        WHERE
            Z.ROW_NUM = 1
<!-- END 2019/02/20 K.Kitachi [QC#30430, MOD] -->
    )                DCPO
,    (
        SELECT
             A.DS_CONTR_CR_CARD_PO_PK
            ,A.DS_CONTR_PK
            ,A.CR_CARD_CUST_REF_NUM
            ,A.CR_CARD_EXPR_YR_MTH
            ,A.EZUPTIME
            ,A.EZUPTIMEZONE
<!-- START 2019/11/27 E.Kameishi [QC#54594, ADD] -->
            ,A.GLBL_CMPY_CD
            ,A.EZCANCELFLAG
<!-- END 2019/11/27 E.Kameishi [QC#54594, ADD] -->
        FROM
            DS_CONTR_CR_CARD_PO A
        WHERE
                A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.DS_CONTR_PK           = #dsContrPk#
            AND A.DS_CONTR_DTL_PK       IS NULL
            AND A.DS_CONTR_BLLG_MTR_PK  IS NULL
            AND A.CR_CARD_FLG           = 'Y'
            AND A.EZCANCELFLAG          = '0'
    )                DCCC
<!-- END 2019/01/09 K.Kitachi [QC#26928, MOD] -->
,    (
        SELECT
            A.DS_CONTR_RNW_ESCL_PK
        ,    A.DS_CONTR_PK
        ,    A.CONTR_AUTO_RNW_TP_CD
        ,    A.RNW_PRC_METH_CD
        ,    A.BEF_END_RNW_DAYS_AOT
        ,    A.BASE_PRC_UP_RATIO
        ,    A.MTR_PRC_UP_RATIO
        ,    A.CONTR_UPLFT_TP_CD
        ,    A.UPLFT_PRC_METH_CD
        ,    A.UPLFT_BASE_PRC_UP_RATIO
        ,    A.UPLFT_MTR_PRC_UP_RATIO
        ,    A.EZUPTIME
        ,    A.EZUPTIMEZONE
        FROM
            DS_CONTR_RNW_ESCL        A
        WHERE
            A.DS_CONTR_PK                =    #dsContrPk#
        AND    A.DS_CONTR_DTL_PK         IS NULL
        AND    A.GLBL_CMPY_CD            =    #glblCmpyCd#
        AND    A.EZCANCELFLAG            =    '0'
    )                DRE
,    (
        SELECT
            A.DS_CONTR_PK
        ,    MAX(NVL(A.CONTR_RNW_TOT_CNT, 0))    AS    CONTR_RNW_TOT_CNT
        FROM
            DS_CONTR_DTL            A
        WHERE
            A.DS_CONTR_PK            =    #dsContrPk#
        <!-- START 2017/06/17 K.Kojima [QC#19256,ADD] -->
        AND A.GLBL_CMPY_CD           =    #glblCmpyCd#
        AND A.EZCANCELFLAG           =    '0'
        AND A.DS_CONTR_DTL_STS_CD &lt;&gt; #dsContrDtlStsOrdr#
        <!-- END 2017/06/17 K.Kojima [QC#19256,ADD] -->
        GROUP BY
            A.DS_CONTR_PK
    )                RNW
<!-- START "2023/02/14 R.Takau [QC#55645, ADD]-->
,   DS_CONTR_BANK_ACCT_RELN CNTB
,   DS_CUST_BANK_ACCT_RELN  CSTB
,   DS_BANK_ACCT DBA
<!-- END "2023/02/14 R.Takau [QC#55645, ADD]-->
WHERE
    DCR.DS_CONTR_PK             =    #dsContrPk#
AND    DCR.GLBL_CMPY_CD         =    #glblCmpyCd#
AND    DCR.DS_CONTR_STS_CD &lt;&gt;  #dsContrSts#
AND    DCR.EZCANCELFLAG         =    '0'
AND    DCR.DS_CONTR_PK          =    DCS.DS_CONTR_PK(+)
AND    DCR.GLBL_CMPY_CD         =    DCS.GLBL_CMPY_CD(+)
AND    DCR.EZCANCELFLAG         =    DCS.EZCANCELFLAG(+)
AND    DCR.DS_ACCT_NUM          =    STC.SELL_TO_CUST_CD(+)
AND    DCR.GLBL_CMPY_CD         =    STC.GLBL_CMPY_CD(+)
AND    DCR.EZCANCELFLAG         =    STC.EZCANCELFLAG(+)
<!-- START 2016/04/26 T.Tomita [QC#5979, MOD] -->
AND    DCR.LEASE_CMPY_CD        =    LCP.BILL_TO_CUST_CD(+)
AND    DCR.GLBL_CMPY_CD         =    LCP.GLBL_CMPY_CD(+)
AND    DCR.EZCANCELFLAG         =    LCP.EZCANCELFLAG(+)
<!-- END 2016/04/26 T.Tomita [QC#5979, MOD] -->
AND    DCR.DS_CONTR_CATG_CD     =    DCC.DS_CONTR_CATG_CD(+)
AND    DCR.GLBL_CMPY_CD         =    DCC.GLBL_CMPY_CD(+)
AND    DCR.EZCANCELFLAG         =    DCC.EZCANCELFLAG(+)
AND    DCR.SVC_CONTR_BR_CD      =    SCB.SVC_CONTR_BR_CD(+)
AND    DCR.GLBL_CMPY_CD         =    SCB.GLBL_CMPY_CD(+)
AND    DCR.EZCANCELFLAG         =    SCB.EZCANCELFLAG(+)
AND    DCR.CONTR_ADMIN_PSN_CD   =    PSN.PSN_CD(+)
AND    DCR.GLBL_CMPY_CD         =    PSN.GLBL_CMPY_CD(+)
AND    DCR.EZCANCELFLAG         =    PSN.EZCANCELFLAG(+)
AND    DCR.CTAC_PSN_PK          =    CTP.CTAC_PSN_PK(+)
AND    DCR.GLBL_CMPY_CD         =    CTP.GLBL_CMPY_CD(+)
AND    DCR.EZCANCELFLAG         =    CTP.EZCANCELFLAG(+)
AND    DCR.ALT_PAYER_CUST_CD    =    BTC.BILL_TO_CUST_CD(+)
AND    DCR.GLBL_CMPY_CD         =    BTC.GLBL_CMPY_CD(+)
AND    DCR.EZCANCELFLAG         =    BTC.EZCANCELFLAG(+)
<!-- START 2019/01/09 K.Kitachi [QC#26928, MOD] -->
<!-- AND    DCR.DS_CONTR_PK          =    DCP.DS_CONTR_PK(+) -->
AND    DCR.DS_CONTR_PK          =    DCPO.DS_CONTR_PK(+)
AND    DCR.DS_CONTR_PK          =    DCCC.DS_CONTR_PK(+)
<!-- END 2019/01/09 K.Kitachi [QC#26928, MOD] -->
AND    DCR.DS_CONTR_PK          =    DRE.DS_CONTR_PK(+)
AND    DCR.DS_CONTR_PK          =    RNW.DS_CONTR_PK(+)
AND    DCR.PMT_TERM_CASH_DISC_CD =   PTC.PMT_TERM_CASH_DISC_CD(+)
AND    DCR.GLBL_CMPY_CD         =    PTC.GLBL_CMPY_CD(+)
AND    DCR.EZCANCELFLAG         =    PTC.EZCANCELFLAG(+)
<!-- START 2016/04/26 T.Tomita [QC#4668, MOD] -->
AND    DCR.TOC_CD               =    T.TOC_CD(+)
<!-- END 2016/04/26 T.Tomita [QC#4668, MOD] -->
AND    DCR.GLBL_CMPY_CD         =    MDS.GLBL_CMPY_CD(+)
AND    DCR.SVC_PGM_MDSE_CD      =    MDS.MDSE_CD(+)
AND    DCR.EZCANCELFLAG         =    MDS.EZCANCELFLAG(+)
<!-- START 2017/01/31 [QC#17278, ADD] -->
AND    DCR.GLBL_CMPY_CD         =    CRG.GLBL_CMPY_CD(+)
AND    DCR.DS_CONTR_RPT_GRP_NUM =    CRG.DS_CONTR_RPT_GRP_NUM(+)
AND    DCR.EZCANCELFLAG         =    CRG.EZCANCELFLAG(+)
<!-- END   2017/01/31 [QC#17278, ADD] -->
<!-- START 2019/11/27 [QC#54594, ADD] -->
AND    DCCC.CR_CARD_CUST_REF_NUM =   CRC.CR_CARD_CUST_REF_NUM(+)
AND    DCCC.GLBL_CMPY_CD         =   CRC.GLBL_CMPY_CD(+)
AND    DCCC.EZCANCELFLAG         =   CRC.EZCANCELFLAG(+)
<!-- END 2019/11/27 E.Kameishi [QC#54594, ADD] -->
<!-- START 2023/02/14 R.Takau [QC#55645, ADD] -->
AND    DCR.GLBL_CMPY_CD                = CNTB.GLBL_CMPY_CD(+)
AND    DCR.DS_CONTR_PK                 = CNTB.DS_CONTR_PK(+)
AND    CNTB.EZCANCELFLAG(+)            = '0'
AND    CNTB.GLBL_CMPY_CD               = CSTB.GLBL_CMPY_CD(+)
AND    CNTB.DS_CUST_BANK_ACCT_RELN_PK  = CSTB.DS_CUST_BANK_ACCT_RELN_PK(+)
AND    CSTB.EZCANCELFLAG(+)            = '0'
AND    CSTB.GLBL_CMPY_CD               = DBA.GLBL_CMPY_CD(+)
AND    CSTB.DS_BANK_ACCT_PK            = DBA.DS_BANK_ACCT_PK(+)
AND    DBA.EZCANCELFLAG(+)             = '0'
<!-- END 2023/02/14 R.Takau [QC#55645, ADD] -->
</statement>

<statement id="getContrPhysBllgMtrReln" parameterClass="Map" resultClass="Map">
SELECT
     DBM.DS_CONTR_BLLG_MTR_PK
,    DBM.BLLG_MTR_LB_CD
,    LBP.MTR_LB_DESC_TXT            AS    MDL_MTR_LB_DESC_TXT
,    PBR.CONTR_MTR_MULT_RATE
FROM
     DS_CONTR_DTL                   DCD
,    DS_CONTR                      DCR
,    CONTR_PHYS_BLLG_MTR_RELN      PBR
,    SVC_PHYS_MTR                  SPM
,    DS_CONTR_BLLG_MTR             DBM
,    MTR_LB                        LBP
,    MTR_LB                        LBB
WHERE
    DCD.DS_CONTR_PK                    =    #dsContrPk#
AND    DCD.GLBL_CMPY_CD                =    #glblCmpyCd#
<!-- START 2017/06/17 K.Kojima [QC#19256,ADD] -->
AND    DCD.DS_CONTR_DTL_STS_CD  &lt;&gt;    #dsContrDtlStsOrdr#
<!-- END 2017/06/17 K.Kojima [QC#19256,ADD] -->
AND    DCD.EZCANCELFLAG                =    '0'
AND    DCR.DS_CONTR_PK                 =    DCD.DS_CONTR_PK
AND    DCR.GLBL_CMPY_CD                =    DCD.GLBL_CMPY_CD
AND    DCR.EZCANCELFLAG                =    DCD.EZCANCELFLAG
AND    PBR.DS_CONTR_DTL_PK             =    DCD.DS_CONTR_DTL_PK
AND    PBR.GLBL_CMPY_CD                =    DCD.GLBL_CMPY_CD
AND    PBR.EZCANCELFLAG                =    DCD.EZCANCELFLAG
AND    SPM.SVC_PHYS_MTR_PK             =    PBR.SVC_PHYS_MTR_PK
AND    SPM.GLBL_CMPY_CD                =    PBR.GLBL_CMPY_CD
AND    SPM.EZCANCELFLAG                =    PBR.EZCANCELFLAG
AND    LBP.MTR_LB_CD                   =    SPM.MDL_MTR_LB_CD
AND    LBP.GLBL_CMPY_CD                =    SPM.GLBL_CMPY_CD
AND    LBP.EZCANCELFLAG                =    SPM.EZCANCELFLAG
AND    DBM.DS_CONTR_BLLG_MTR_PK        =    PBR.DS_CONTR_BLLG_MTR_PK
AND    DBM.GLBL_CMPY_CD                =    PBR.GLBL_CMPY_CD
AND    DBM.EZCANCELFLAG                =    PBR.EZCANCELFLAG
<!-- START 2017/08/25 U.Kim [QC#20728,ADD] -->
AND    DBM.DS_CONTR_BLLG_MTR_STS_CD &lt;&gt; #dsContrDtlStsOrdr#
<!-- END 2017/08/25 U.Kim [QC#20728,ADD] -->
AND    LBB.MTR_LB_CD                   =    DBM.BLLG_MTR_LB_CD
AND    LBB.GLBL_CMPY_CD                =    DBM.GLBL_CMPY_CD
AND    LBB.EZCANCELFLAG                =    DBM.EZCANCELFLAG
ORDER BY
    DBM.DS_CONTR_BLLG_MTR_PK
,    LBP.MTR_LB_SORT_NUM
</statement>

<statement id="getDsContrDtlTmpl1" parameterClass="Map" resultClass="Map">
SELECT
     SMM.SVC_MACH_MSTR_PK
,    SMM.SER_NUM
,    SMM.MDSE_CD
,    MDN.T_MDL_NM                AS    MDL_NM
,    STC.FIRST_LINE_ADDR
,    STC.SCD_LINE_ADDR
,    STC.THIRD_LINE_ADDR
,    STC.FRTH_LINE_ADDR
,    STC.CTY_ADDR
,    STC.ST_CD
,    STC.POST_CD
,    SMM.SVC_CONFIG_MSTR_PK
,    SMM.SVC_MACH_TP_CD
,    DMD.MTR_REQ_MDL_FLG
<!-- START 2018/01/15 T.Tomita [QC#18552, ADD] -->
,    MD.MDSE_DESC_SHORT_TXT
,    STC.SHIP_TO_CUST_CD
,    STC.LOC_NM
,    SMM.FLD_SVC_BR_CD
,    (
     SELECT
         A.SVC_BR_CD_DESC_TXT
     FROM (
         SELECT DISTINCT
             SBPX.SVC_BR_CD_DESC_TXT
         FROM
             SVC_BR_POST_XREF SBPX
         WHERE
             SBPX.GLBL_CMPY_CD    = SMM.GLBL_CMPY_CD
         AND SBPX.EZCANCELFLAG    = SMM.EZCANCELFLAG
         AND SBPX.SVC_LINE_BIZ_CD = SMM.SVC_BY_LINE_BIZ_TP_CD
         AND SBPX.SVC_BR_CD       = SMM.FLD_SVC_BR_CD
         ) A
     WHERE
         ROWNUM                   = 1
     )                               AS    SVC_BR_CD_DESC_TXT
<!-- END   2018/01/15 T.Tomita [QC#18552, ADD] -->
FROM
     SVC_MACH_MSTR       SMM
<!-- START 2018/01/15 T.Tomita [QC#18552, ADD] -->
,    MDSE                MD
<!-- END   2018/01/15 T.Tomita [QC#18552, ADD] -->
,    SHIP_TO_CUST        STC
,    SVC_CONFIG_MSTR     SCM
,    MDL_NM              MDN
,    DS_MDL              DMD
WHERE
    SMM.SVC_MACH_MSTR_PK           =    #svcMachMstrPk#
AND    SMM.GLBL_CMPY_CD            =    #glblCmpyCd#
AND    SMM.EZCANCELFLAG            =    '0'
<!-- START 2018/01/15 T.Tomita [QC#18552, ADD] -->
AND    SMM.MDSE_CD                 =    MD.MDSE_CD(+)
AND    SMM.GLBL_CMPY_CD            =    MD.GLBL_CMPY_CD(+)
AND    SMM.EZCANCELFLAG            =    MD.EZCANCELFLAG(+)
<!-- END   2018/01/15 T.Tomita [QC#18552, ADD] -->
AND    SMM.CUR_LOC_NUM             =    STC.SHIP_TO_CUST_CD(+)
AND    SMM.GLBL_CMPY_CD            =    STC.GLBL_CMPY_CD(+)
AND    SMM.EZCANCELFLAG            =    STC.EZCANCELFLAG(+)
AND    SMM.SVC_CONFIG_MSTR_PK      =    SCM.SVC_CONFIG_MSTR_PK(+)
AND    SMM.GLBL_CMPY_CD            =    SCM.GLBL_CMPY_CD(+)
AND    SMM.EZCANCELFLAG            =    SCM.EZCANCELFLAG(+)
AND    SCM.MDL_ID                  =    MDN.T_MDL_ID(+)
AND    SCM.GLBL_CMPY_CD            =    MDN.T_GLBL_CMPY_CD(+)
AND    SCM.EZCANCELFLAG            =    MDN.EZCANCELFLAG(+)
AND    SCM.MDL_ID                  =    DMD.MDL_ID(+)
AND    SCM.GLBL_CMPY_CD            =    DMD.GLBL_CMPY_CD(+)
AND    SCM.EZCANCELFLAG            =    DMD.EZCANCELFLAG(+)
</statement>

<statement id="getDsContrDtl1_Reg" parameterClass="Map" resultClass="Map">
SELECT
     DCD.EZUPTIME
,    DCD.EZUPTIMEZONE
,    DCD.DS_CONTR_DTL_PK
,    DCD.PRNT_DS_CONTR_DTL_PK
,    SMM.SVC_MACH_MSTR_PK
,    SMM.SER_NUM
,    SMM.MDSE_CD
,    MDN.T_MDL_NM    AS    MDL_NM
,    STC.FIRST_LINE_ADDR
,    STC.SCD_LINE_ADDR
,    STC.THIRD_LINE_ADDR
,    STC.FRTH_LINE_ADDR
,    STC.CTY_ADDR
,    STC.ST_CD
,    STC.POST_CD
,    SMM.SVC_CONFIG_MSTR_PK
,    DCD.DS_CONTR_DTL_TP_CD
,    DDS.DS_CONTR_DTL_STS_CD
,    DDS.DS_CONTR_DTL_STS_DESC_TXT
,    DCD.CONTR_EFF_FROM_DT
,    DCD.CONTR_EFF_THRU_DT
<!-- START 2017/09/26 K.Kojima [QC#21221,MOD] -->
<!-- ,    DCD.BASE_BLLG_CYCLE_CD -->
<!-- ,    BBC.BLLG_CYCLE_DESC_TXT -->
<!-- ,    DCD.BASE_PRC_DEAL_AMT -->
,    NVL(BSCHD.BLLG_CYCLE_CD, DCD.BASE_BLLG_CYCLE_CD)        AS BASE_BLLG_CYCLE_CD
,    NVL(BSCHD.BLLG_CYCLE_DESC_TXT, BBC.BLLG_CYCLE_DESC_TXT) AS BLLG_CYCLE_DESC_TXT
,    NVL(BSCHD.BASE_PRC_DEAL_AMT, DCD.BASE_PRC_DEAL_AMT)     AS BASE_PRC_DEAL_AMT
<!-- END 2017/09/26 K.Kojima [QC#21221,MOD] -->
,    DCD.MTR_READ_METH_CD
,    DCD.RNW_EFF_FROM_DT
,    DCD.CONTR_RNW_TOT_CNT
<!-- START 2018/02/22 M.Naito [QC#23179,MOD] -->
<!--,    DECODE(DCD.CONTR_CLO_DT, NULL, NULL, TO_CHAR(TO_DATE(DCD.CONTR_CLO_DT,'YYYYMMDD') + 1, 'YYYYMMDD')) AS CONTR_CLO_DT -->
,    DCD.CONTR_CLO_DT
<!-- END 2018/02/22 M.Naito [QC#23179,MOD] -->
,    DDT.BASE_CHRG_FLG
,    DDT.USG_CHRG_FLG
,    (
        CASE
            WHEN
                EXISTS(
                    SELECT
                        *
                    FROM
                        DS_CONTR_DTL ASRY
                    WHERE
                            DCD.DS_CONTR_DTL_PK     =    ASRY.PRNT_DS_CONTR_DTL_PK
                        AND DCD.GLBL_CMPY_CD        =    ASRY.GLBL_CMPY_CD
                        AND DCD.EZCANCELFLAG        =    ASRY.EZCANCELFLAG
                        AND ASRY.DS_CONTR_DTL_TP_CD =    #dsContrDtlTpCd_Accessory#
                )
            THEN
                'Y'
            ELSE
                'N'
        END
     ) AS ASRY_FLG
,    (
        CASE
            WHEN
                EXISTS(
                    SELECT
                        *
                    FROM
                        DS_CONTR_BLLG_SCHD DCBS
                    WHERE
                            DCD.DS_CONTR_DTL_PK     =    DCBS.DS_CONTR_DTL_PK
                        AND DCD.GLBL_CMPY_CD        =    DCBS.GLBL_CMPY_CD
                        AND DCD.EZCANCELFLAG        =    DCBS.EZCANCELFLAG
                        AND DCBS.BASE_CHRG_FLG      =    'Y'
                )
            THEN
                'Y'
            ELSE
                'N'
        END
     ) AS BASE_PRC_DTL_FLG
,    (
        CASE
            WHEN
                EXISTS(
                    SELECT
                        *
                    FROM
                        DS_CONTR_BLLG_SCHD DCBS
                    WHERE
                            DCD.DS_CONTR_DTL_PK     =    DCBS.DS_CONTR_DTL_PK
                        AND DCD.GLBL_CMPY_CD        =    DCBS.GLBL_CMPY_CD
                        AND DCD.EZCANCELFLAG        =    DCBS.EZCANCELFLAG
                        AND DCBS.USG_CHRG_FLG       =    'Y'
                )
            THEN
                'Y'
            ELSE
                'N'
        END
     ) AS USG_PRC_DTL_FLG
,    NVL(SMMP.SER_NUM, SMM.SER_NUM)      AS SORT_SER_NUM
,    NVL(SMMP.MDSE_CD, SMM.MDSE_CD)      AS SORT_MDSE_CD
<!-- START 2017/02/06 N.Arai [QC#17197, MOD] -->
<!-- START 2018/02/19 K.Kojima [QC#24105, MOD] -->
<!-- ,    DCDV.DS_CONTR_CTRL_STS_NM -->
,    CASE
         WHEN     DCDV.DS_CONTR_CTRL_STS_CD = #entered#
             AND  SMM.SVC_MACH_MSTR_STS_CD  = #w4i#
         THEN #pendingInstallation#
         WHEN     DCDV.DS_CONTR_CTRL_STS_CD = #dsContrCtrlStsCdActive#
             AND (
                  SELECT
                      COUNT(*)
                  FROM
                       DS_CONTR_PRC_EFF       DCPE
                      ,DS_CONTR_PRC_EFF_STS_V DCPESV
                  WHERE
                        DCPE.GLBL_CMPY_CD           = DCD.GLBL_CMPY_CD
                    AND DCPE.DS_CONTR_DTL_PK        = DCD.DS_CONTR_DTL_PK
                    AND DCPE.EZCANCELFLAG           = '0'
                    AND DCPE.GLBL_CMPY_CD           = DCPESV.GLBL_CMPY_CD
                    AND DCPE.DS_CONTR_PRC_EFF_PK    = DCPESV.DS_CONTR_PRC_EFF_PK
                    AND DCPESV.DS_CONTR_CTRL_STS_CD = #dsContrCtrlStsCdRenewalHoldForPO#
                    AND DCPESV.EZCANCELFLAG         = '0'
                 ) &gt; 0
         THEN #activePendingPO#
         WHEN     DCDV.DS_CONTR_CTRL_STS_CD = #dsContrCtrlStsCdActive#
             AND (
                  SELECT
                      COUNT(*)
                  FROM
                       DS_CONTR_PRC_EFF       DCPE
                      ,DS_CONTR_PRC_EFF_STS_V DCPESV
                  WHERE
                        DCPE.GLBL_CMPY_CD           = DCD.GLBL_CMPY_CD
                    AND DCPE.DS_CONTR_DTL_PK        = DCD.DS_CONTR_DTL_PK
                    AND DCPE.EZCANCELFLAG           = '0'
                    AND DCPE.GLBL_CMPY_CD           = DCPESV.GLBL_CMPY_CD
                    AND DCPE.DS_CONTR_PRC_EFF_PK    = DCPESV.DS_CONTR_PRC_EFF_PK
                    AND DCPESV.DS_CONTR_CTRL_STS_CD = #dsContrCtrlStsCdRenewalHold#
                    AND DCPESV.EZCANCELFLAG         = '0'
                 ) &gt; 0
         THEN #activeRenewalHold#
         <!-- START 2022/02/04 K.Kitachi [QC#59684, ADD] -->
         WHEN     DCDV.QLTY_ASRN_HLD_FLG    = 'N'
             AND  DCD.MAN_TRMN_TP_CD        = #manTrmnTpCd#
         THEN #allPeriodTermination#
         <!-- END 2022/02/04 K.Kitachi [QC#59684, ADD] -->
         ELSE DCDV.DS_CONTR_CTRL_STS_NM
     END                            AS DS_CONTR_CTRL_STS_NM
<!-- END 2018/02/19 K.Kojima [QC#24105, MOD] -->
,    MDS.MDSE_DESC_SHORT_TXT
,    MRM.MTR_READ_METH_DESC_TXT
<!-- END 2017/02/06 N.Arai [QC#17197, MOD] -->
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
,    DCD.SVC_PGM_MDSE_CD
,    DCD.PRC_MTR_PKG_PK
,    PMP.PRC_MTR_PKG_NM
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
<!-- START 2019/01/21 T.Wada [QC#29371, ADD] -->
,    DCD.SVC_INV_MERGE_TP_CD
<!-- END 2019/01/21 T.Wada [QC#29371, ADD] -->
FROM
     DS_CONTR_DTL        DCD
,    SVC_MACH_MSTR       SMM
,    SHIP_TO_CUST        STC
,    SVC_CONFIG_MSTR     SCM
,    MDL_NM              MDN
,    DS_CONTR_DTL_STS    DDS
,    BLLG_CYCLE          BBC
,    DS_CONTR_DTL_TP     DDT
,    DS_CONTR_DTL        DCDP
,    SVC_MACH_MSTR       SMMP
<!-- START 2017/02/06 N.Arai [QC#17197, MOD] -->
,    DS_CONTR_DTL_STS_V  DCDV
,    MDSE                MDS
,    MTR_READ_METH       MRM
<!-- END 2017/02/06 N.Arai [QC#17197, MOD] -->
<!-- START 2017/09/26 K.Kojima [QC#21221,ADD] -->
    ,(
        SELECT
             DS_CONTR_DTL_PK
            ,BLLG_CYCLE_CD
            ,BASE_PRC_DEAL_AMT
            ,BLLG_CYCLE_DESC_TXT
        FROM
            (
                SELECT
                     BDCD.DS_CONTR_DTL_PK
                    ,BDCPE.BLLG_CYCLE_CD
                    ,BDCPE.BASE_PRC_DEAL_AMT
                    ,BBBC.BLLG_CYCLE_DESC_TXT
                    ,DENSE_RANK() OVER (PARTITION BY BDCD.DS_CONTR_DTL_PK ORDER BY BDCBS.NEXT_BLLG_DT, BDCBS.DS_CONTR_BLLG_SCHD_PK) AS BASE_RANK
                FROM
                     DS_CONTR_DTL       BDCD
                    ,DS_CONTR_BLLG_SCHD BDCBS
                    ,DS_CONTR_PRC_EFF   BDCPE
                    ,BLLG_CYCLE         BBBC
                WHERE
                        BDCD.GLBL_CMPY_CD         = #glblCmpyCd#
                    AND BDCD.DS_CONTR_PK          = #dsContrPk#
                    AND BDCD.EZCANCELFLAG         = '0'
                    AND BDCD.GLBL_CMPY_CD         = BDCBS.GLBL_CMPY_CD
                    AND BDCD.DS_CONTR_DTL_PK      = BDCBS.DS_CONTR_DTL_PK
                    AND BDCBS.INV_FLG             = 'N'
                    AND BDCBS.BASE_CHRG_FLG       = 'Y'
                    <!-- START 2023/12/21 t.aizawa [QC#63377,ADD] -->
                    AND BDCBS.SKIP_RECOV_TP_CD    &lt;&gt; #skip#
                    <!-- END   2023/12/21 t.aizawa [QC#63377,ADD] -->
                    AND BDCBS.DS_BLLG_SCHD_TP_CD  = #dsBllgSchdTpRegular#
                    AND BDCBS.EZCANCELFLAG        = '0'
                    AND BDCBS.GLBL_CMPY_CD        = BDCPE.GLBL_CMPY_CD
                    AND BDCBS.DS_CONTR_PRC_EFF_PK = BDCPE.DS_CONTR_PRC_EFF_PK
                    AND BDCPE.EZCANCELFLAG        = '0'
                    AND BDCPE.GLBL_CMPY_CD        = BBBC.GLBL_CMPY_CD
                    AND BDCPE.BLLG_CYCLE_CD       = BBBC.BLLG_CYCLE_CD
                    AND BBBC.EZCANCELFLAG         = '0'
            )
        WHERE
            BASE_RANK = 1
     ) BSCHD
<!-- END 2017/09/26 K.Kojima [QC#21221,ADD] -->
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
,    PRC_MTR_PKG         PMP
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
<!-- START 2019/01/17 [QC#29782, ADD] -->
,    SVC_PGM_TP          SPT
<!-- END 2019/01/17 [QC#29782, ADD] -->
WHERE
    DCD.DS_CONTR_PK            =    #dsContrPk#
AND    DCD.GLBL_CMPY_CD        =    #glblCmpyCd#
AND    DCD.EZCANCELFLAG        =    '0'
AND    DCD.SVC_MACH_MSTR_PK    =    SMM.SVC_MACH_MSTR_PK(+)
AND    DCD.GLBL_CMPY_CD        =    SMM.GLBL_CMPY_CD(+)
AND    DCD.EZCANCELFLAG        =    SMM.EZCANCELFLAG(+)
AND    SMM.CUR_LOC_NUM         =    STC.SHIP_TO_CUST_CD(+)
AND    SMM.GLBL_CMPY_CD        =    STC.GLBL_CMPY_CD(+)
AND    SMM.EZCANCELFLAG        =    STC.EZCANCELFLAG(+)
AND    SMM.SVC_CONFIG_MSTR_PK  =    SCM.SVC_CONFIG_MSTR_PK(+)
AND    SMM.GLBL_CMPY_CD        =    SCM.GLBL_CMPY_CD(+)
AND    SMM.EZCANCELFLAG        =    SCM.EZCANCELFLAG(+)
AND    SCM.MDL_ID              =    MDN.T_MDL_ID(+)
AND    SCM.GLBL_CMPY_CD        =    MDN.T_GLBL_CMPY_CD(+)
AND    SCM.EZCANCELFLAG        =    MDN.EZCANCELFLAG(+)
AND    DCD.DS_CONTR_DTL_STS_CD =    DDS.DS_CONTR_DTL_STS_CD(+)
AND    DCD.GLBL_CMPY_CD        =    DDS.GLBL_CMPY_CD(+)
AND    DCD.EZCANCELFLAG        =    DDS.EZCANCELFLAG(+)
AND    DCD.BASE_BLLG_CYCLE_CD  =    BBC.BLLG_CYCLE_CD(+)
AND    DCD.GLBL_CMPY_CD        =    BBC.GLBL_CMPY_CD(+)
AND    DCD.EZCANCELFLAG        =    BBC.EZCANCELFLAG(+)
AND    DCD.DS_CONTR_DTL_TP_CD  =    DDT.DS_CONTR_DTL_TP_CD
AND    DDT.SVC_PRC_FLG         =    #svcPrcFlg#
AND    DCD.GLBL_CMPY_CD        =    DDT.GLBL_CMPY_CD
AND    DCD.EZCANCELFLAG        =    DDT.EZCANCELFLAG
AND    DCD.PRNT_DS_CONTR_DTL_PK=    DCDP.DS_CONTR_DTL_PK(+)
AND    DCD.GLBL_CMPY_CD        =    DCDP.GLBL_CMPY_CD(+)
AND    DCD.EZCANCELFLAG        =    DCDP.EZCANCELFLAG(+)
AND    DCDP.SVC_MACH_MSTR_PK   =    SMMP.SVC_MACH_MSTR_PK(+)
AND    DCDP.GLBL_CMPY_CD       =    SMMP.GLBL_CMPY_CD(+)
AND    DCDP.EZCANCELFLAG       =    SMMP.EZCANCELFLAG(+)
<!-- START 2017/02/06 N.Arai [QC#17197, MOD] -->
AND    DCD.GLBL_CMPY_CD        =    DCDV.GLBL_CMPY_CD
AND    DCD.DS_CONTR_DTL_PK     =    DCDV.DS_CONTR_DTL_PK
AND    DCD.EZCANCELFLAG        =    DCDV.EZCANCELFLAG
AND    DCD.GLBL_CMPY_CD        =    MDS.GLBL_CMPY_CD(+)
AND    DCD.SVC_PGM_MDSE_CD     =    MDS.MDSE_CD(+)
AND    DCD.EZCANCELFLAG        =    MDS.EZCANCELFLAG(+)
AND    DCD.GLBL_CMPY_CD        =    MRM.GLBL_CMPY_CD(+)
AND    DCD.MTR_READ_METH_CD    =    MRM.MTR_READ_METH_CD(+)
AND    DCD.EZCANCELFLAG        =    MRM.EZCANCELFLAG(+)
<!-- START 2017/09/26 K.Kojima [QC#21221,ADD] -->
AND    DCD.DS_CONTR_DTL_PK     =    BSCHD.DS_CONTR_DTL_PK(+)
<!-- END 2017/09/26 K.Kojima [QC#21221,ADD] -->
<!-- END 2017/02/06 N.Arai [QC#17197, MOD] -->
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
AND    DCD.GLBL_CMPY_CD        =    PMP.GLBL_CMPY_CD(+)
AND    DCD.PRC_MTR_PKG_PK      =    PMP.PRC_MTR_PKG_PK(+)
AND    DCD.EZCANCELFLAG        =    PMP.EZCANCELFLAG(+)
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
<!-- START 2019/01/17 [QC#29782, ADD] -->
AND    MDS.GLBL_CMPY_CD        =    SPT.GLBL_CMPY_CD(+)
AND    MDS.SVC_PGM_TP_CD       =    SPT.SVC_PGM_TP_CD(+)
AND    MDS.EZCANCELFLAG        =    SPT.EZCANCELFLAG(+)
<!-- END 2019/01/17 [QC#29782, ADD] -->
ORDER BY
     SORT_SER_NUM
,    SORT_MDSE_CD
<!-- START 2022/01/06 R.Cabral [QC#59502, ADD] -->
,    NVL(DCD.PRNT_DS_CONTR_DTL_PK, DCD.DS_CONTR_DTL_PK)
<!-- END   2022/01/06 R.Cabral [QC#59502, ADD] -->
<!-- START 2019/01/17 [QC#29782, ADD] -->
<!-- START 2022/03/08 R.Cabral [QC#59502-1, ADD] -->
,    DDT.DS_CONTR_DTL_TP_SORT_NUM
<!-- END   2022/03/08 R.Cabral [QC#59502-1, ADD] -->
,    SPT.SVC_PGM_TP_SORT_NUM
,    NVL(DCD.DS_CONTR_CRAT_TP_CD, #dsContrCratTp#)
<!-- START 2022/01/06 R.Cabral [QC#59502, DEL] -->
<!-- ,    NVL(DCD.PRNT_DS_CONTR_DTL_PK, DCD.DS_CONTR_DTL_PK) -->
<!-- END   2022/01/06 R.Cabral [QC#59502, DEL] -->
<!-- END 2019/01/17 [QC#29782, ADD] -->
<!-- START 2022/03/08 R.Cabral [QC#59502-1, DEL] -->
<!-- ,    DDT.DS_CONTR_DTL_TP_SORT_NUM -->
<!-- END   2022/03/08 R.Cabral [QC#59502-1, DEL] -->
<!-- START 2017/08/02 K.Kitachi [QC#18116, ADD] -->
,    DCD.DS_CONTR_DTL_PK
<!-- END 2017/08/02 K.Kitachi [QC#18116, ADD] -->
</statement>

<statement id="getDsContrDtl2_Reg" parameterClass="Map" resultClass="Map">
<!-- START 2018/04/09 K.Kojima [QC#24802, ADD] -->
WITH TARGET_DS_CONTR AS (
    SELECT
        *
    FROM
        DS_CONTR DC
    WHERE
            DC.GLBL_CMPY_CD = #glblCmpyCd#
        AND DC.DS_CONTR_PK  = #dsContrPk#
        AND DC.EZCANCELFLAG = '0'
)
,TARGET_DS_CONTR_DTL AS (
    SELECT
        *
    FROM
        DS_CONTR_DTL DCD
    WHERE
            DCD.GLBL_CMPY_CD = #glblCmpyCd#
        AND DCD.DS_CONTR_PK  = #dsContrPk#
        AND DCD.EZCANCELFLAG = '0'
)
,TARGET_DS_CONTR_BLLG_MTR AS (
    SELECT
        *
    FROM
        DS_CONTR_BLLG_MTR DCBM
    WHERE
            DCBM.GLBL_CMPY_CD = #glblCmpyCd#
        AND DCBM.EZCANCELFLAG = '0'
        AND EXISTS(SELECT 1 FROM TARGET_DS_CONTR_DTL DCD WHERE DCD.DS_CONTR_DTL_PK = DCBM.DS_CONTR_DTL_PK)
)
,TARGET_DS_CONTR_PRC_EFF AS (
    SELECT
        *
    FROM
        DS_CONTR_PRC_EFF DCPE
    WHERE
            DCPE.GLBL_CMPY_CD = #glblCmpyCd#
        AND DCPE.EZCANCELFLAG = '0'
        AND EXISTS(SELECT 1 FROM TARGET_DS_CONTR_DTL DCD WHERE DCD.DS_CONTR_DTL_PK = DCPE.DS_CONTR_DTL_PK)
)
,TARGET_DS_CONTR_BLLG_SCHD_SMRY AS (
    SELECT
        *
    FROM
        DS_CONTR_BLLG_SCHD_SMRY DCBSS
    WHERE
            DCBSS.GLBL_CMPY_CD = #glblCmpyCd#
        AND DCBSS.EZCANCELFLAG = '0'
        AND EXISTS(SELECT 1 FROM TARGET_DS_CONTR_DTL DCD WHERE DCD.DS_CONTR_DTL_PK = DCBSS.DS_CONTR_DTL_PK)
)
,TARGET_DS_CONTR_BLLG_SCHD AS (
    SELECT
        *
    FROM
        DS_CONTR_BLLG_SCHD DCBS
    WHERE
            DCBS.GLBL_CMPY_CD = #glblCmpyCd#
        AND DCBS.EZCANCELFLAG = '0'
        AND EXISTS(SELECT 1 FROM TARGET_DS_CONTR_DTL DCD WHERE DCD.DS_CONTR_DTL_PK = DCBS.DS_CONTR_DTL_PK)
)
<!-- END 2018/04/09 K.Kojima [QC#24802, ADD] -->
SELECT
    *
FROM (
    SELECT
         DCD.EZUPTIME                    AS    EZUPTIME_BD
    ,    DCD.EZUPTIMEZONE                AS    EZUPTIMEZONE_BD
    ,    DCD.DS_CONTR_DTL_PK
    ,    DCD.PRNT_DS_CONTR_DTL_PK
    ,    SMM.SVC_CONFIG_MSTR_PK
    ,    SMM.SVC_MACH_MSTR_PK
    ,    SMM.SER_NUM
    ,    SMM.MDSE_CD
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
    ,    MDS2.MDSE_DESC_SHORT_TXT        AS    MDSE_DESC_SHORT_TXT_BI
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
    ,    DCD.CONTR_EFF_FROM_DT
    ,    DCD.CONTR_EFF_THRU_DT
    ,    DCD.DS_CONTR_DTL_TP_CD
    ,    DDT.DS_CONTR_DTL_TP_SORT_NUM
    ,    DCD.DS_CONTR_DTL_STS_CD
    ,    DCD.MTR_READ_METH_CD
    ,    DCD.RNW_EFF_FROM_DT
    ,    DCD.CONTR_RNW_TOT_CNT
<!-- START 2018/02/22 M.Naito [QC#23179,MOD] -->
<!--    ,    DECODE(DCD.CONTR_CLO_DT, NULL, NULL, TO_CHAR(TO_DATE(DCD.CONTR_CLO_DT,'YYYYMMDD') + 1, 'YYYYMMDD')) AS CONTR_CLO_DT -->
    ,    DCD.CONTR_CLO_DT
<!-- END 2018/02/22 M.Naito [QC#23179,MOD] -->
<!-- START 2018/01/10 T.Tomita [QC#18552, MOD] -->
    ,    SMM.CUR_LOC_NUM                 AS    SHIP_TO_CUST_CD
    ,    SHTC.LOC_NM                     AS    SHIP_TO_LOC_NM
    ,    SHTC.FIRST_LINE_ADDR            AS    SHIP_FIRST_LINE_ADDR
    ,    SHTC.SCD_LINE_ADDR              AS    SHIP_SCD_LINE_ADDR
    ,    SHTC.THIRD_LINE_ADDR            AS    SHIP_THIRD_LINE_ADDR
    ,    SHTC.FRTH_LINE_ADDR             AS    SHIP_FRTH_LINE_ADDR
    ,    SHTC.CTY_ADDR                   AS    SHIP_CTY_ADDR
    ,    SHTC.ST_CD                      AS    SHIP_ST_CD
    ,    SHTC.POST_CD                    AS    SHIP_POST_CD
    ,    SMM.FLD_SVC_BR_CD
    ,    (
         SELECT
             A.SVC_BR_CD_DESC_TXT
         FROM (
             SELECT DISTINCT
                 SBPX.SVC_BR_CD_DESC_TXT
             FROM
                 SVC_BR_POST_XREF SBPX
             WHERE
                 SBPX.GLBL_CMPY_CD    = SMM.GLBL_CMPY_CD
             AND SBPX.EZCANCELFLAG    = SMM.EZCANCELFLAG
             AND SBPX.SVC_LINE_BIZ_CD = SMM.SVC_BY_LINE_BIZ_TP_CD
             AND SBPX.SVC_BR_CD       = SMM.FLD_SVC_BR_CD
             ) A
         WHERE
             ROWNUM                   = 1
         )                               AS    SVC_BR_CD_DESC_TXT
<!-- END   2018/01/10 T.Tomita [QC#18552, MOD] -->
    <!-- Base -->
    ,    DCD.BASE_BILL_TO_CUST_CD
    ,    BTB.LOC_NM                      AS    BASE_BILL_TO_LOC_NM
    ,    BTB.FIRST_LINE_ADDR             AS    BASE_FIRST_LINE_ADDR
    ,    BTB.SCD_LINE_ADDR               AS    BASE_SCD_LINE_ADDR
    ,    BTB.THIRD_LINE_ADDR             AS    BASE_THIRD_LINE_ADDR
    ,    BTB.FRTH_LINE_ADDR              AS    BASE_FRTH_LINE_ADDR
    ,    BTB.CTY_ADDR                    AS    BASE_CTY_ADDR
    ,    BTB.ST_CD                       AS    BASE_ST_CD
    ,    BTB.POST_CD                     AS    BASE_POST_CD
    ,    DCD.BASE_DPLY_PER_END_DAY
    ,    DCD.CONTR_CLO_DAY               AS    BASE_CLO_DAY
    ,    DCD.CONTR_BLLG_DAY              AS    BASE_BLLG_DAY
    ,    CCS.CONTR_COV_SVC_PK
    ,    CCS.DS_COV_SVC_TP_CD
    ,    DCD.SVC_PGM_MDSE_CD
    ,    MDS.MDSE_DESC_SHORT_TXT
    <!-- START 2017/09/26 K.Kojima [QC#21221,ADD] -->
    <isEqual property="forScheduleFlag" compareValue="Y">
    <!-- END 2017/09/26 K.Kojima [QC#21221,ADD] -->
    ,    DCD.BASE_BLLG_CYCLE_CD
    ,    DCD.BASE_PRC_DEAL_AMT
    <!-- START 2017/09/26 K.Kojima [QC#21221,ADD] -->
    </isEqual>
    <isEqual property="forScheduleFlag" compareValue="N">
    ,    NVL(CPE.BLLG_CYCLE_CD, DCD.BASE_BLLG_CYCLE_CD)    AS BASE_BLLG_CYCLE_CD
    ,    NVL(CPE.BASE_PRC_DEAL_AMT, DCD.BASE_PRC_DEAL_AMT) AS BASE_PRC_DEAL_AMT
    </isEqual>
    <!-- END 2017/09/26 K.Kojima [QC#21221,ADD] -->
    ,    DCD.BASE_BLLG_TMG_CD
    ,    BCB.BLLG_CYCLE_START_MTH        AS    BASE_BLLG_CYCLE_START_MTH
    <!-- Usage -->
    ,    DCD.USG_BILL_TO_CUST_CD
    ,    BTU.LOC_NM                      AS    USG_BILL_TO_LOC_NM
    ,    DCD.MTR_DPLY_PER_END_DAY
    ,    DCD.MTR_CLO_DAY                 AS    MTR_CLO_DAY
    ,    DCD.MTR_BLLG_DAY                AS    MTR_BLLG_DAY
    ,    DBM.EZUPTIME                    AS    EZUPTIME_BM
    ,    DBM.EZUPTIMEZONE                AS    EZUPTIMEZONE_BM
    ,    DBM.DS_CONTR_BLLG_MTR_PK
    ,    DBM.BLLG_MTR_LB_CD
    ,    COALESCE(DBM.BLLG_MTR_BILL_TO_CUST_CD, DCD.USG_BILL_TO_CUST_CD)    AS    BLLG_MTR_BILL_TO_CUST_CD
    ,    MLB.MTR_LB_DESC_TXT
    ,    DBM.BLLG_MTR_BLLG_CYCLE_CD
    ,    DCD.MTR_BLLG_TMG_CD
    ,    DBM.XS_CHRG_TP_CD
    ,    CXC.EZUPTIME                    AS    EZUPTIME_BX
    ,    CXC.EZUPTIMEZONE                AS    EZUPTIMEZONE_BX
    ,    CXC.CONTR_XS_COPY_PK
    ,    CXC.XS_MTR_COPY_QTY
    ,    CXC.XS_MTR_AMT_RATE
    ,    MDN.T_MDL_NM                    AS    MDL_NM
    ,    BSB.NEXT_BLLG_DT                AS    BASE_NEXT_BLLG_DT
    <!-- START 2017/10/20 K.Kojima [QC#21232,DEL] -->
    <!-- ,    DENSE_RANK() OVER (PARTITION BY BSB.DS_CONTR_DTL_PK ORDER BY BSB.NEXT_BLLG_DT, BSB.DS_CONTR_BLLG_SCHD_PK) AS BASE_RANK -->
    <!-- END 2017/10/20 K.Kojima [QC#21232,DEL] -->
    ,    BSU.NEXT_BLLG_DT                AS    USG_NEXT_BLLG_DT
    <!-- START 2017/10/20 K.Kojima [QC#21232,DEL] -->
    <!-- ,    DENSE_RANK() OVER (PARTITION BY BSU.DS_CONTR_DTL_PK ORDER BY BSU.NEXT_BLLG_DT, BSU.DS_CONTR_BLLG_SCHD_PK) AS USG_RANK -->
    <!-- END 2017/10/20 K.Kojima [QC#21232,DEL] -->
    ,    MLB.MTR_LB_SORT_NUM
    ,    DCD.CTAC_PSN_PK
<!-- START 2018/06/18 K.Kitachi [QC#18591, MOD] -->
<!--     ,    RTRIM(CTP.CTAC_PSN_FIRST_NM || ' ' || CTP.CTAC_PSN_LAST_NM) AS PSN_NM -->
    ,    CTP.CTAC_PSN_FIRST_NM           AS    CTAC_PSN_FIRST_NM
    ,    CTP.CTAC_PSN_LAST_NM            AS    CTAC_PSN_LAST_NM
<!-- END 2018/06/18 K.Kitachi [QC#18591, MOD] -->
    ,    DCD.BASE_PRC_TERM_DEAL_AMT_RATE
    ,    COALESCE(BTM.LOC_NM, BTU.LOC_NM)                            AS BLLG_MTR_BILL_TO_LOC_NM
    ,    DBM.CTAC_PSN_PK                                             AS BLLG_MTR_CTAC_PSN_PK
<!-- START 2018/06/18 K.Kitachi [QC#18591, MOD] -->
<!--     ,    RTRIM(CTM.CTAC_PSN_FIRST_NM || ' ' || CTM.CTAC_PSN_LAST_NM) AS BLLG_MTR_PSN_NM -->
    ,    CTM.CTAC_PSN_FIRST_NM                                       AS BLLG_MTR_CTAC_PSN_FIRST_NM
    ,    CTM.CTAC_PSN_LAST_NM                                        AS BLLG_MTR_CTAC_PSN_LAST_NM
<!-- END 2018/06/18 K.Kitachi [QC#18591, MOD] -->
    ,    DBM.BLLG_MIN_CNT
    ,    DBM.BLLG_MIN_AMT_RATE
    ,    DBM.BLLG_ROLL_OVER_RATIO
    ,    DBM.BLLG_FREE_COPY_CNT
<!-- START 2019/01/17 M.Naito [QC#29083,ADD] -->
    ,    DBM.CUM_COPY_CNT
    ,    DBM.CUM_COPY_FREQ_MTH_AOT
    ,    DBM.CUM_COPY_START_DT
    ,    DBM.CUM_COPY_END_DT
<!-- END 2019/01/17 M.Naito [QC#29083,ADD] -->
    ,    BTM.FIRST_LINE_ADDR
    ,    BTM.SCD_LINE_ADDR
    ,    BTM.THIRD_LINE_ADDR
    ,    BTM.FRTH_LINE_ADDR
    ,    BTM.CTY_ADDR
    ,    BTM.ST_CD
    ,    BTM.POST_CD
    ,    BCM.BLLG_CYCLE_START_MTH AS MTR_BLLG_CYCLE_START_MTH
    ,    (
            CASE
                WHEN
                    EXISTS(
                        SELECT
                            *
                        FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                             DS_CONTR_PRC_EFF DPE -->
                            TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                        WHERE
                                DCD.DS_CONTR_DTL_PK       =    DPE.DS_CONTR_DTL_PK
                            AND DCD.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                            AND DCD.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                            AND DPE.BASE_CHRG_FLG         =    'Y'
                        <isEqual property="CancelledFlg" compareValue="Y">
                            AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                        </isEqual>
                        <isEqual property="CancelledFlg" compareValue="N">
                            AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                        </isEqual>
                    )
                THEN
                    'Y'
                ELSE
                    'N'
            END
         ) AS BASE_PRC_FLG
    ,    (
            CASE
                WHEN
                    EXISTS(
                        SELECT
                            *
                        FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                             DS_CONTR_PRC_EFF DPE -->
                            TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                        WHERE
                                DBM.DS_CONTR_BLLG_MTR_PK  =    DPE.DS_CONTR_BLLG_MTR_PK
                            AND DBM.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                            AND DBM.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                            AND DPE.USG_CHRG_FLG          =    'Y'
                        <isEqual property="CancelledFlg" compareValue="Y">
                            AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                        </isEqual>
                        <isEqual property="CancelledFlg" compareValue="N">
                            AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                        </isEqual>
                    )
                THEN
                    'Y'
                ELSE
                    'N'
            END
         ) AS USG_PRC_FLG
    ,    (
            CASE
                WHEN
                    EXISTS(
                        SELECT
                            *
                        FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                              DS_CONTR_PRC_EFF         DPE -->
<!--                             ,DS_CONTR_BLLG_SCHD_SMRY  DBS -->
                             TARGET_DS_CONTR_PRC_EFF         DPE
                            ,TARGET_DS_CONTR_BLLG_SCHD_SMRY  DBS
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                        WHERE
                                DCD.DS_CONTR_DTL_PK       =    DPE.DS_CONTR_DTL_PK
                            AND DCD.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                            AND DCD.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                            AND DPE.BASE_CHRG_FLG         =    'Y'
                        <isEqual property="CancelledFlg" compareValue="Y">
                            AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                        </isEqual>
                        <isEqual property="CancelledFlg" compareValue="N">
                            AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                        </isEqual>
                            AND DPE.DS_CONTR_PRC_EFF_PK   =    DBS.DS_CONTR_PRC_EFF_PK
                            AND DPE.GLBL_CMPY_CD          =    DBS.GLBL_CMPY_CD
                            AND DPE.EZCANCELFLAG          =    DBS.EZCANCELFLAG
                    )
                THEN
                    'Y'
                ELSE
                    'N'
            END
         ) AS BASE_TOP_SCHEDULE_FLG
    ,    (
            CASE
                WHEN
                    EXISTS(
                        SELECT
                            *
                        FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                              DS_CONTR_PRC_EFF         DPE -->
<!--                             ,DS_CONTR_BLLG_SCHD_SMRY  DBS -->
                             TARGET_DS_CONTR_PRC_EFF         DPE
                            ,TARGET_DS_CONTR_BLLG_SCHD_SMRY  DBS
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                        WHERE
                                DBM.DS_CONTR_BLLG_MTR_PK  =    DPE.DS_CONTR_BLLG_MTR_PK
                            AND DBM.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                            AND DBM.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                            AND DPE.USG_CHRG_FLG          =    'Y'
                        <isEqual property="CancelledFlg" compareValue="Y">
                            AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                        </isEqual>
                        <isEqual property="CancelledFlg" compareValue="N">
                            AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                        </isEqual>
                            AND DPE.DS_CONTR_PRC_EFF_PK   =    DBS.DS_CONTR_PRC_EFF_PK
                            AND DPE.GLBL_CMPY_CD          =    DBS.GLBL_CMPY_CD
                            AND DPE.EZCANCELFLAG          =    DBS.EZCANCELFLAG
                    )
                THEN
                    'Y'
                ELSE
                    'N'
            END
         ) AS USG_TOP_SCHEDULE_FLG
    ,    (
            SELECT
                DS_CONTR_PRC_EFF_PK
            FROM (
                SELECT
                     DPE.DS_CONTR_PRC_EFF_PK
                    ,3                            AS SORT_KEY1
                    ,(TO_DATE(#slsDt#, 'YYYYMMDD') - TO_DATE(DPE.CONTR_PRC_EFF_THRU_DT, 'YYYYMMDD'))  AS SORT_KEY2
                FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                     DS_CONTR_PRC_EFF DPE -->
                    TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                WHERE
                        DCD.DS_CONTR_DTL_PK       =    DPE.DS_CONTR_DTL_PK
                    AND DCD.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                    AND DCD.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                    AND DPE.BASE_CHRG_FLG         =    'Y'
                    AND DPE.CONTR_PRC_EFF_THRU_DT &lt; #slsDt#
                <isEqual property="CancelledFlg" compareValue="Y">
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                </isEqual>
                <isEqual property="CancelledFlg" compareValue="N">
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                </isEqual>
                UNION
                SELECT
                     DPE.DS_CONTR_PRC_EFF_PK
                    ,1                            AS SORT_KEY1
                    ,0                            AS SORT_KEY2
                FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                     DS_CONTR_PRC_EFF DPE -->
                    TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                WHERE
                        DCD.DS_CONTR_DTL_PK       =    DPE.DS_CONTR_DTL_PK
                    AND DCD.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                    AND DCD.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                    AND DPE.BASE_CHRG_FLG         =    'Y'
                    AND DPE.CONTR_PRC_EFF_FROM_DT &lt;= #slsDt#
                    AND DPE.CONTR_PRC_EFF_THRU_DT &gt;= #slsDt#
                <isEqual property="CancelledFlg" compareValue="Y">
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                </isEqual>
                <isEqual property="CancelledFlg" compareValue="N">
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                </isEqual>
                UNION
                SELECT
                     DPE.DS_CONTR_PRC_EFF_PK
                    ,2                            AS SORT_KEY1
                    ,(TO_DATE(DPE.CONTR_PRC_EFF_FROM_DT, 'YYYYMMDD') - TO_DATE(#slsDt#, 'YYYYMMDD'))  AS SORT_KEY2
                FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                     DS_CONTR_PRC_EFF DPE -->
                    TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                WHERE
                        DCD.DS_CONTR_DTL_PK       =    DPE.DS_CONTR_DTL_PK
                    AND DCD.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                    AND DCD.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                    AND DPE.BASE_CHRG_FLG         =    'Y'
                    AND DPE.CONTR_PRC_EFF_FROM_DT &gt;= #slsDt#
                <isEqual property="CancelledFlg" compareValue="Y">
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                </isEqual>
                <isEqual property="CancelledFlg" compareValue="N">
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                </isEqual>
                ORDER BY
                     SORT_KEY1                    ASC
                    ,SORT_KEY2                    ASC
                    ,DS_CONTR_PRC_EFF_PK          DESC
            )
            WHERE
                ROWNUM = 1
         ) AS BASE_BLLG_DS_CONTR_PRC_EFF_PK
    ,    (
            SELECT
                DS_CONTR_PRC_EFF_PK
            FROM (
                SELECT
                    DPE.DS_CONTR_PRC_EFF_PK
                    ,3                            AS SORT_KEY1
                    ,(TO_DATE(#slsDt#, 'YYYYMMDD') - TO_DATE(DPE.CONTR_PRC_EFF_THRU_DT, 'YYYYMMDD'))  AS SORT_KEY2
                FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                     DS_CONTR_PRC_EFF DPE -->
                    TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                WHERE
                        DBM.DS_CONTR_BLLG_MTR_PK  =    DPE.DS_CONTR_BLLG_MTR_PK
                    AND DBM.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                    AND DBM.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                    AND DPE.USG_CHRG_FLG          =    'Y'
                    AND DPE.CONTR_PRC_EFF_THRU_DT &lt; #slsDt#
                <isEqual property="CancelledFlg" compareValue="Y">
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                </isEqual>
                <isEqual property="CancelledFlg" compareValue="N">
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                </isEqual>
                UNION
                SELECT
                    DPE.DS_CONTR_PRC_EFF_PK
                    ,1                            AS SORT_KEY1
                    ,0                            AS SORT_KEY2
                FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                     DS_CONTR_PRC_EFF DPE -->
                    TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                WHERE
                        DBM.DS_CONTR_BLLG_MTR_PK  =    DPE.DS_CONTR_BLLG_MTR_PK
                    AND DBM.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                    AND DBM.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                    AND DPE.USG_CHRG_FLG          =    'Y'
                    AND DPE.CONTR_PRC_EFF_FROM_DT &lt;= #slsDt#
                    AND DPE.CONTR_PRC_EFF_THRU_DT &gt;= #slsDt#
                <isEqual property="CancelledFlg" compareValue="Y">
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                </isEqual>
                <isEqual property="CancelledFlg" compareValue="N">
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                </isEqual>
                UNION
                SELECT
                    DPE.DS_CONTR_PRC_EFF_PK
                    ,2                            AS SORT_KEY1
                    ,(TO_DATE(DPE.CONTR_PRC_EFF_FROM_DT, 'YYYYMMDD') - TO_DATE(#slsDt#, 'YYYYMMDD'))  AS SORT_KEY2
                FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                     DS_CONTR_PRC_EFF DPE -->
                    TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                WHERE
                        DBM.DS_CONTR_BLLG_MTR_PK  =    DPE.DS_CONTR_BLLG_MTR_PK
                    AND DBM.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                    AND DBM.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                    AND DPE.USG_CHRG_FLG          =    'Y'
                    AND DPE.CONTR_PRC_EFF_FROM_DT &gt;= #slsDt#
                <isEqual property="CancelledFlg" compareValue="Y">
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                </isEqual>
                <isEqual property="CancelledFlg" compareValue="N">
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                </isEqual>
                ORDER BY
                     SORT_KEY1                    ASC
                    ,SORT_KEY2                    ASC
                    ,DS_CONTR_PRC_EFF_PK          DESC
            )
            WHERE
                ROWNUM = 1
         ) AS BLLG_MTR_DS_CONTR_PRC_EFF_PK
    ,    NVL(SMMP.SER_NUM, SMM.SER_NUM)      AS SORT_SER_NUM
    ,    NVL(SMMP.MDSE_CD, SMM.MDSE_CD)      AS SORT_MDSE_CD
<!-- START 2017/09/13 K.Kim [QC#19938, ADD] -->
    ,    (
            CASE
                WHEN
<!-- START 2018/08/24 T.Tomita [QC#26687, ADD] -->
                    (
                        SELECT
                            COUNT(*)
                        FROM
                            TARGET_DS_CONTR_BLLG_SCHD SCHD
                        WHERE
                            SCHD.GLBL_CMPY_CD        =    DCD.GLBL_CMPY_CD
                        AND SCHD.DS_CONTR_DTL_PK     =    DCD.DS_CONTR_DTL_PK
                        AND SCHD.EZCANCELFLAG        =    '0'
                        AND SCHD.BASE_CHRG_FLG       =    'Y'
                    ) > 0
                    AND
<!-- END 2018/08/24 T.Tomita [QC#26687, ADD] -->
                    NOT EXISTS(
                    SELECT
                        *
                    FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                         DS_CONTR_BLLG_SCHD BSB2 -->
                        TARGET_DS_CONTR_BLLG_SCHD BSB2
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                    WHERE
                            DCD.DS_CONTR_DTL_PK     =    BSB2.DS_CONTR_DTL_PK
                        AND DCD.GLBL_CMPY_CD        =    BSB2.GLBL_CMPY_CD
                        AND DCD.EZCANCELFLAG        =    BSB2.EZCANCELFLAG
                        AND BSB2.BASE_CHRG_FLG      =    'Y'
                        AND BSB2.DS_BLLG_SCHD_STS_CD &lt;&gt; #dsBllgSchdStsCdCl#
                    )
                THEN
                    'Y'
                ELSE
                    'N'
            END
         ) AS BASE_BILLED_FLG
    ,    (
            CASE
                WHEN
<!-- START 2018/08/24 T.Tomita [QC#26687, ADD] -->
                    (
                        SELECT
                            COUNT(*)
                        FROM
                            TARGET_DS_CONTR_BLLG_SCHD SCHD
                        WHERE
                            SCHD.GLBL_CMPY_CD        =    DCD.GLBL_CMPY_CD
                        AND SCHD.DS_CONTR_DTL_PK     =    DCD.DS_CONTR_DTL_PK
                        AND SCHD.EZCANCELFLAG        =    '0'
                        AND SCHD.USG_CHRG_FLG        =    'Y'
                    ) > 0
                    AND
<!-- END 2018/08/24 T.Tomita [QC#26687, ADD] -->
                    NOT EXISTS(
                    SELECT
                        *
                    FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                         DS_CONTR_BLLG_SCHD BSU2 -->
                        TARGET_DS_CONTR_BLLG_SCHD BSU2
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                    WHERE
                            DCD.DS_CONTR_DTL_PK     =    BSU2.DS_CONTR_DTL_PK
                        AND DCD.GLBL_CMPY_CD        =    BSU2.GLBL_CMPY_CD
                        AND DCD.EZCANCELFLAG        =    BSU2.EZCANCELFLAG
                        AND BSU2.USG_CHRG_FLG       =    'Y'
                        AND BSU2.DS_BLLG_SCHD_STS_CD &lt;&gt; #dsBllgSchdStsCdCl#
                    )
                THEN
                    'Y'
                ELSE
                    'N'
            END
         ) AS USG_BILLED_FLG
    ,    DCD.BILL_WITH_EQUIP_FLG
<!-- END 2017/09/13 K.Kim [QC#19938, ADD] -->
<!-- START 2017/09/21 K.Kitachi [QC#21222, ADD] -->
    ,   (
            CASE
                WHEN
                    (
                        SELECT
                            COUNT(*)
                        FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                             DS_CONTR_PRC_EFF DPE -->
                            TARGET_DS_CONTR_PRC_EFF DPE
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
                        WHERE
                                DCD.DS_CONTR_DTL_PK         =    DPE.DS_CONTR_DTL_PK
                            AND DCD.GLBL_CMPY_CD            =    DPE.GLBL_CMPY_CD
                            AND DCD.EZCANCELFLAG            =    DPE.EZCANCELFLAG
                            AND DPE.BASE_CHRG_FLG           =    'Y'
                            <iterate property="dsContrPrcEffStsCdList" var="dsContrPrcEffStsCd[]" open="AND DPE.DS_CONTR_PRC_EFF_STS_CD NOT IN (" close=")" conjunction=",">
                                #dsContrPrcEffStsCd[]#
                            </iterate>
                    ) > 1
                THEN
                    'Y'
                ELSE
                    'N'
            END
         ) AS BASE_PRC_EFF_MULTI_FLG
<!-- END 2017/09/21 K.Kitachi [QC#21222, ADD] -->
<!-- START 2023/08/18 T.Kojima [QC#60846, ADD] -->
    ,   (
            CASE
                WHEN
                    (
                        SELECT
                            COUNT(*)
                        FROM
                            TARGET_DS_CONTR_PRC_EFF DPE
                        WHERE
                                DBM.DS_CONTR_BLLG_MTR_PK    =    DPE.DS_CONTR_BLLG_MTR_PK
                            AND DBM.GLBL_CMPY_CD            =    DPE.GLBL_CMPY_CD
                            AND DBM.EZCANCELFLAG            =    DPE.EZCANCELFLAG
                            AND DPE.USG_CHRG_FLG            =    'Y'
                            AND (
                                    DPE.DS_CONTR_PRC_EFF_STS_CD = #dsContrPrcEffStsCdExpd#
                                    AND EXISTS(
                                        SELECT '1' FROM TARGET_DS_CONTR_BLLG_SCHD BDCBS
                                        WHERE DPE.DS_CONTR_PRC_EFF_PK = BDCBS.DS_CONTR_PRC_EFF_PK
                                        AND BDCBS.INV_FLG = 'N')
                                    OR DPE.DS_CONTR_PRC_EFF_STS_CD &lt;&gt; #dsContrPrcEffStsCdExpd#
                                )
                            <iterate property="usageDsContrPrcEffStsCdList" var="usageDsContrPrcEffStsCd[]" open="AND DPE.DS_CONTR_PRC_EFF_STS_CD NOT IN (" close=")" conjunction=",">
                                #usageDsContrPrcEffStsCd[]#
                            </iterate>
                    ) > 1
                THEN
                    'Y'
                ELSE
                    'N'
            END
         ) AS USG_PRC_EFF_MULTI_FLG
<!-- END 2023/08/18 T.Kojima [QC#60846, ADD] -->
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
,(
    SELECT
        COUNT(*)
    FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--          DS_CONTR_DTL    DTL -->
         TARGET_DS_CONTR_DTL    DTL
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
        ,DS_CONTR_DTL_TP TP
    WHERE
        DTL.GLBL_CMPY_CD       = DCD.GLBL_CMPY_CD
    AND DTL.DS_CONTR_PK        = DCD.DS_CONTR_PK
    AND DTL.EZCANCELFLAG       = '0'
    AND DTL.GLBL_CMPY_CD       = TP.GLBL_CMPY_CD
    AND DTL.DS_CONTR_DTL_TP_CD = TP.DS_CONTR_DTL_TP_CD
    AND TP.EZCANCELFLAG        = '0'
    AND TP.MAIN_UNIT_LINE_FLG  = 'Y'
 ) UNIT_CNT
<!-- START 2019/01/21 T.Wada [QC#29371, ADD] -->
,    DCD.SVC_INV_MERGE_TP_CD
<!-- END 2019/01/21 T.Wada [QC#29371, ADD] -->
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
<!-- START 2019/01/17 [QC#29782, ADD] -->
,   SPT.SVC_PGM_TP_SORT_NUM
,   DCD.DS_CONTR_CRAT_TP_CD
<!-- END 2019/01/17 [QC#29782, ADD] -->
    FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--          DS_CONTR_DTL        DCD -->
<!--     ,    DS_CONTR            DCR -->
         TARGET_DS_CONTR_DTL        DCD
    ,    TARGET_DS_CONTR     DCR
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
    ,    SELL_TO_CUST        STC
    ,    SVC_MACH_MSTR       SMM
    ,    BILL_TO_CUST        BTB
    ,    BILL_TO_CUST        BTU
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--     ,    DS_CONTR_BLLG_MTR   DBM -->
    ,    TARGET_DS_CONTR_BLLG_MTR   DBM
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
    ,    BILL_TO_CUST        BTM
    ,    MTR_LB              MLB
    ,    CONTR_XS_COPY       CXC
    ,    DS_CONTR_DTL_TP     DDT
    ,    CONTR_COV_SVC       CCS
    ,    DS_COV_SVC_TP       CST
    ,    SVC_CONFIG_MSTR     SCM
    ,    MDL_NM              MDN
    ,    CTAC_PSN            CTP
    ,    CTAC_PSN            CTM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--     ,    DS_CONTR_DTL        DCDP -->
    ,    TARGET_DS_CONTR_DTL        DCDP
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
    ,    SVC_MACH_MSTR       SMMP
    ,    BLLG_CYCLE          BCB
    ,    BLLG_CYCLE          BCM
    ,    MDSE                MDS
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
    ,    MDSE                MDS2
    ,    SHIP_TO_CUST        SHTC
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
    <!-- START 2017/10/20 K.Kojima [QC#21232,MOD] -->
    <!-- ,    DS_CONTR_BLLG_SCHD  BSU -->
    <!-- ,    DS_CONTR_BLLG_SCHD  BSB -->
    ,(
        SELECT
             GLBL_CMPY_CD
            ,DS_CONTR_DTL_PK
            ,NEXT_BLLG_DT
            ,DS_CONTR_PRC_EFF_PK
            ,EZCANCELFLAG
        FROM
            (
                SELECT
                     BDCBS.GLBL_CMPY_CD
                    ,BDCBS.DS_CONTR_DTL_PK
                    ,BDCBS.NEXT_BLLG_DT
                    ,BDCBS.DS_CONTR_PRC_EFF_PK
                    ,DENSE_RANK() OVER (PARTITION BY BDCD.DS_CONTR_DTL_PK ORDER BY BDCBS.NEXT_BLLG_DT, BDCBS.DS_CONTR_BLLG_SCHD_PK) AS USG_RANK
                    ,BDCBS.EZCANCELFLAG
                FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                      DS_CONTR_DTL       BDCD -->
<!--                     ,DS_CONTR_BLLG_SCHD BDCBS -->
                     TARGET_DS_CONTR_DTL       BDCD
                    ,TARGET_DS_CONTR_BLLG_SCHD BDCBS
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                WHERE
                        BDCD.GLBL_CMPY_CD         = #glblCmpyCd#
                    AND BDCD.DS_CONTR_PK          = #dsContrPk#
                    <!-- START 2022/03/24 K.Kitachi [QC#59684, ADD] -->
                    AND (
                            BDCD.MAN_TRMN_TP_CD   IS NULL
                        OR
                            BDCD.MAN_TRMN_TP_CD   &lt;&gt; #manTrmnTpCd#
                        )
                    <!-- END 2022/03/24 K.Kitachi [QC#59684, ADD] -->
                    <!-- START 2023/10/05 H.Iinuma [QC#61675, ADD] -->
                    <!-- START 2024/03/12 Y.Nagasawaa [QC#61675, MOD] -->
                    <!-- AND (                                                         -->
                    <!--        BDCD.DS_CONTR_DTL_STS_CD &lt;&gt; #dsContrDtlStsTrmd#  -->
                    <!--    OR                                                         -->
                    <!--        BDCD.MTR_HLD_FLG         &lt;&gt; 'N'                  -->
                    <!--    )                                                          -->
                    AND BDCBS.BLLG_SCHD_THRU_DT  &lt;= NVL(BDCD.CONTR_CLO_DT, BDCD.CONTR_EFF_THRU_DT)
                    <!-- EMD 2024/03/12 Y.Nagasawaa [QC#61675, MOD] -->
                    <!-- END 2023/10/05 H.Iinuma [QC#61675, ADD] -->
                    AND BDCD.EZCANCELFLAG         = '0'
                    AND BDCD.GLBL_CMPY_CD         = BDCBS.GLBL_CMPY_CD
                    AND BDCD.DS_CONTR_DTL_PK      = BDCBS.DS_CONTR_DTL_PK
                    AND BDCBS.INV_FLG             = 'N'
                    AND BDCBS.USG_CHRG_FLG        = 'Y'
                    AND BDCBS.DS_BLLG_SCHD_TP_CD  = #dsBllgSchdTpRegular#
                    AND BDCBS.EZCANCELFLAG        = '0'
                    <!-- START 2023/04/14 L.Borrega [QC#61370, ADD] -->
                    AND BDCBS.SKIP_RECOV_TP_CD    = #skipRecovTpNone#
                    <!-- END 2023/04/14 L.Borrega [QC#61370, ADD] -->
            )
        WHERE
            USG_RANK = 1
     ) BSU
    ,(
        SELECT
             GLBL_CMPY_CD
            ,DS_CONTR_DTL_PK
            ,NEXT_BLLG_DT
            ,DS_CONTR_PRC_EFF_PK
            ,EZCANCELFLAG
        FROM
            (
                SELECT
                     BDCBS.GLBL_CMPY_CD
                    ,BDCBS.DS_CONTR_DTL_PK
                    ,BDCBS.NEXT_BLLG_DT
                    ,BDCBS.DS_CONTR_PRC_EFF_PK
                    ,DENSE_RANK() OVER (PARTITION BY BDCD.DS_CONTR_DTL_PK ORDER BY BDCBS.NEXT_BLLG_DT, BDCBS.DS_CONTR_BLLG_SCHD_PK) AS BASE_RANK
                    ,BDCBS.EZCANCELFLAG
                FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                      DS_CONTR_DTL       BDCD -->
<!--                     ,DS_CONTR_BLLG_SCHD BDCBS -->
                     TARGET_DS_CONTR_DTL       BDCD
                    ,TARGET_DS_CONTR_BLLG_SCHD BDCBS
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                WHERE
                        BDCD.GLBL_CMPY_CD         = #glblCmpyCd#
                    AND BDCD.DS_CONTR_PK          = #dsContrPk#
                    AND BDCD.EZCANCELFLAG         = '0'
                    AND BDCD.GLBL_CMPY_CD         = BDCBS.GLBL_CMPY_CD
                    AND BDCD.DS_CONTR_DTL_PK      = BDCBS.DS_CONTR_DTL_PK
                    AND BDCBS.INV_FLG             = 'N'
                    AND BDCBS.BASE_CHRG_FLG       = 'Y'
                    AND BDCBS.DS_BLLG_SCHD_TP_CD  = #dsBllgSchdTpRegular#
                    AND BDCBS.EZCANCELFLAG        = '0'
                    <!-- START 2023/04/14 L.Borrega [QC#61370, ADD] -->
                    AND BDCBS.SKIP_RECOV_TP_CD    = #skipRecovTpNone#
                    <!-- END 2023/04/14 L.Borrega [QC#61370, ADD] -->
            )
        WHERE
            BASE_RANK = 1
     ) BSB
    <!-- END 2017/10/20 K.Kojima [QC#21232,MOD] -->
<!-- START 2017/09/26 K.Kojima [QC#21221,ADD] -->
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--     ,    DS_CONTR_PRC_EFF    CPE -->
    ,    TARGET_DS_CONTR_PRC_EFF    CPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!-- END 2017/09/26 K.Kojima [QC#21221,ADD] -->
<!-- START 2019/01/17 [QC#29782, ADD] -->
    ,    SVC_PGM_TP          SPT
<!-- END 2019/01/17 [QC#29782, ADD] -->
    WHERE
        DCD.DS_CONTR_PK                    =    #dsContrPk#
    AND    DCD.GLBL_CMPY_CD                =    #glblCmpyCd#
<!-- START 2017/06/17 K.Kojima [QC#19256,ADD] -->
    AND    DCD.DS_CONTR_DTL_STS_CD  &lt;&gt;    #dsContrDtlStsOrdr#
<!-- END 2017/06/17 K.Kojima [QC#19256,ADD] -->
    AND    DCD.EZCANCELFLAG                =    '0'
    AND    DCR.DS_CONTR_PK                 =    DCD.DS_CONTR_PK
    AND    DCR.GLBL_CMPY_CD                =    DCD.GLBL_CMPY_CD
    AND    DCR.EZCANCELFLAG                =    DCD.EZCANCELFLAG
    AND    DCR.SELL_TO_CUST_CD             =    STC.SELL_TO_CUST_CD(+)
    AND    DCR.GLBL_CMPY_CD                =    STC.GLBL_CMPY_CD(+)
    AND    DCR.EZCANCELFLAG                =    STC.EZCANCELFLAG(+)
    AND    DCD.SVC_MACH_MSTR_PK            =    SMM.SVC_MACH_MSTR_PK(+)
    AND    DCD.GLBL_CMPY_CD                =    SMM.GLBL_CMPY_CD(+)
    AND    DCD.EZCANCELFLAG                =    SMM.EZCANCELFLAG(+)
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
    AND    SMM.MDSE_CD                     =    MDS2.MDSE_CD(+)
    AND    SMM.GLBL_CMPY_CD                =    MDS2.GLBL_CMPY_CD(+)
    AND    SMM.EZCANCELFLAG                =    MDS2.EZCANCELFLAG(+)
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
    AND    DCD.BASE_BILL_TO_CUST_CD        =    BTB.BILL_TO_CUST_CD(+)
    AND    DCD.GLBL_CMPY_CD                =    BTB.GLBL_CMPY_CD(+)
    AND    DCD.EZCANCELFLAG                =    BTB.EZCANCELFLAG(+)
    AND    DCD.USG_BILL_TO_CUST_CD         =    BTU.BILL_TO_CUST_CD(+)
    AND    DCD.GLBL_CMPY_CD                =    BTU.GLBL_CMPY_CD(+)
    AND    DCD.EZCANCELFLAG                =    BTU.EZCANCELFLAG(+)
    AND    DCD.DS_CONTR_DTL_PK             =    DBM.DS_CONTR_DTL_PK(+)
    AND    DCD.GLBL_CMPY_CD                =    DBM.GLBL_CMPY_CD(+)
    AND    DCD.EZCANCELFLAG                =    DBM.EZCANCELFLAG(+)
<!-- START 2017/08/25 U.Kim [QC#20728,ADD] -->
    AND    DBM.DS_CONTR_BLLG_MTR_STS_CD(+) &lt;&gt; #dsContrDtlStsOrdr#
<!-- END 2017/08/25 U.Kim [QC#20728,ADD] -->
    AND    DBM.BLLG_MTR_BILL_TO_CUST_CD    =    BTM.BILL_TO_CUST_CD(+)
    AND    DBM.GLBL_CMPY_CD                =    BTM.GLBL_CMPY_CD(+)
    AND    DBM.EZCANCELFLAG                =    BTM.EZCANCELFLAG(+)
    AND    DBM.BLLG_MTR_LB_CD              =    MLB.MTR_LB_CD(+)
    AND    DBM.GLBL_CMPY_CD                =    MLB.GLBL_CMPY_CD(+)
    AND    DBM.EZCANCELFLAG                =    MLB.EZCANCELFLAG(+)
    AND    DBM.DS_CONTR_BLLG_MTR_PK        =    CXC.DS_CONTR_BLLG_MTR_PK(+)
    AND    DBM.GLBL_CMPY_CD                =    CXC.GLBL_CMPY_CD(+)
    AND    DBM.EZCANCELFLAG                =    CXC.EZCANCELFLAG(+)
    AND    DCD.DS_CONTR_DTL_TP_CD          =    DDT.DS_CONTR_DTL_TP_CD
    AND    DDT.SVC_PRC_FLG                 =    #svcPrcFlg#
    AND    DCD.GLBL_CMPY_CD                =    DDT.GLBL_CMPY_CD
    AND    DCD.EZCANCELFLAG                =    DDT.EZCANCELFLAG
    AND    DCD.DS_CONTR_DTL_PK             =    CCS.DS_CONTR_DTL_PK(+)
    AND    DCD.GLBL_CMPY_CD                =    CCS.GLBL_CMPY_CD(+)
    AND    DCD.EZCANCELFLAG                =    CCS.EZCANCELFLAG(+)
    AND    CCS.DS_COV_SVC_TP_CD            =    CST.DS_COV_SVC_TP_CD(+)
    AND    CCS.GLBL_CMPY_CD                =    CST.GLBL_CMPY_CD(+)
    AND    CCS.EZCANCELFLAG                =    CST.EZCANCELFLAG(+)
    AND    SMM.SVC_CONFIG_MSTR_PK          =    SCM.SVC_CONFIG_MSTR_PK(+)
    AND    SMM.GLBL_CMPY_CD                =    SCM.GLBL_CMPY_CD(+)
    AND    SMM.EZCANCELFLAG                =    SCM.EZCANCELFLAG(+)
    AND    SCM.MDL_ID                      =    MDN.T_MDL_ID(+)
    AND    SCM.GLBL_CMPY_CD                =    MDN.T_GLBL_CMPY_CD(+)
    AND    SCM.EZCANCELFLAG                =    MDN.EZCANCELFLAG(+)
    AND    DCD.CTAC_PSN_PK                 =    CTP.CTAC_PSN_PK(+)
    AND    DCD.GLBL_CMPY_CD                =    CTP.GLBL_CMPY_CD(+)
    AND    DCD.EZCANCELFLAG                =    CTP.EZCANCELFLAG(+)
    AND    DBM.CTAC_PSN_PK                 =    CTM.CTAC_PSN_PK(+)
    AND    DBM.GLBL_CMPY_CD                =    CTM.GLBL_CMPY_CD(+)
    AND    DBM.EZCANCELFLAG                =    CTM.EZCANCELFLAG(+)
    AND    DCD.PRNT_DS_CONTR_DTL_PK        =    DCDP.DS_CONTR_DTL_PK(+)
    AND    DCD.GLBL_CMPY_CD                =    DCDP.GLBL_CMPY_CD(+)
    AND    DCD.EZCANCELFLAG                =    DCDP.EZCANCELFLAG(+)
    AND    DCDP.SVC_MACH_MSTR_PK           =    SMMP.SVC_MACH_MSTR_PK(+)
    AND    DCDP.GLBL_CMPY_CD               =    SMMP.GLBL_CMPY_CD(+)
    AND    DCDP.EZCANCELFLAG               =    SMMP.EZCANCELFLAG(+)
    AND    DCD.BASE_BLLG_CYCLE_CD          =    BCB.BLLG_CYCLE_CD(+)
    AND    DCD.GLBL_CMPY_CD                =    BCB.GLBL_CMPY_CD(+)
    AND    DCD.EZCANCELFLAG                =    BCB.EZCANCELFLAG(+)
    AND    DBM.BLLG_MTR_BLLG_CYCLE_CD      =    BCM.BLLG_CYCLE_CD(+)
    AND    DBM.GLBL_CMPY_CD                =    BCM.GLBL_CMPY_CD(+)
    AND    DBM.EZCANCELFLAG                =    BCM.EZCANCELFLAG(+)
    AND    DCD.GLBL_CMPY_CD                =    MDS.GLBL_CMPY_CD(+)
    AND    DCD.SVC_PGM_MDSE_CD             =    MDS.MDSE_CD(+)
    AND    DCD.EZCANCELFLAG                =    MDS.EZCANCELFLAG(+)
    AND    DCD.GLBL_CMPY_CD                =    BSU.GLBL_CMPY_CD(+)
    AND    DCD.DS_CONTR_DTL_PK             =    BSU.DS_CONTR_DTL_PK(+)
    AND    DCD.EZCANCELFLAG                =    BSU.EZCANCELFLAG(+)
    <!-- START 2017/10/20 K.Kojima [QC#21232,DEL] -->
    <!-- AND    BSU.INV_FLG(+)                  =    'N' -->
    <!-- AND    BSU.USG_CHRG_FLG(+)             =    'Y' -->
    <!-- END 2017/10/20 K.Kojima [QC#21232,DEL] -->
    <!-- START 2017/08/31 K.Kojima [QC#18355,ADD] -->
    <!-- START 2017/10/20 K.Kojima [QC#21232,DEL] -->
    <!-- AND    BSU.DS_BLLG_SCHD_TP_CD(+)       =    #dsBllgSchdTpRegular# -->
    <!-- END 2017/10/20 K.Kojima [QC#21232,DEL] -->
    <!-- END 2017/08/31 K.Kojima [QC#18355,ADD] -->
    AND    DCD.GLBL_CMPY_CD                =    BSB.GLBL_CMPY_CD(+)
    AND    DCD.DS_CONTR_DTL_PK             =    BSB.DS_CONTR_DTL_PK(+)
    AND    DCD.EZCANCELFLAG                =    BSB.EZCANCELFLAG(+)
    <!-- START 2017/10/20 K.Kojima [QC#21232,DEL] -->
    <!-- AND    BSB.INV_FLG(+)                  =    'N' -->
    <!-- AND    BSB.BASE_CHRG_FLG(+)            =    'Y' -->
    <!-- END 2017/10/20 K.Kojima [QC#21232,DEL] -->
    <!-- START 2017/08/31 K.Kojima [QC#18355,ADD] -->
    <!-- START 2017/10/20 K.Kojima [QC#21232,DEL] -->
    <!-- AND    BSB.DS_BLLG_SCHD_TP_CD(+)       =    #dsBllgSchdTpRegular# -->
    <!-- END 2017/10/20 K.Kojima [QC#21232,DEL] -->
    <!-- END 2017/08/31 K.Kojima [QC#18355,ADD] -->
    <!-- START 2017/09/26 K.Kojima [QC#21221,ADD] -->
    AND    BSB.GLBL_CMPY_CD                =    CPE.GLBL_CMPY_CD(+)
    AND    BSB.DS_CONTR_PRC_EFF_PK         =    CPE.DS_CONTR_PRC_EFF_PK(+)
    AND    BSB.EZCANCELFLAG                =    CPE.EZCANCELFLAG(+)
    <!-- END 2017/09/26 K.Kojima [QC#21221,ADD] -->
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
    AND    SMM.CUR_LOC_NUM                 =    SHTC.SHIP_TO_CUST_CD(+)
    AND    SMM.GLBL_CMPY_CD                =    SHTC.GLBL_CMPY_CD(+)
    AND    SMM.EZCANCELFLAG                =    SHTC.EZCANCELFLAG(+)
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
<!-- START 2019/01/17 [QC#29782, ADD] -->
    AND    MDS.GLBL_CMPY_CD                =    SPT.GLBL_CMPY_CD(+)
    AND    MDS.SVC_PGM_TP_CD               =    SPT.SVC_PGM_TP_CD(+)
    AND    MDS.EZCANCELFLAG                =    SPT.EZCANCELFLAG(+)
<!-- END 2019/01/17 [QC#29782, ADD] -->
) A
<!-- START 2017/10/20 K.Kojima [QC#21232,DEL] -->
<!-- WHERE -->
<!--     A.BASE_RANK = 1 -->
<!-- AND A.USG_RANK  = 1 -->
<!-- END 2017/10/20 K.Kojima [QC#21232,DEL] -->
ORDER BY
     SORT_SER_NUM
,    SORT_MDSE_CD
<!-- START 2019/01/17 [QC#29782, ADD] -->
<!-- START 2022/01/06 R.Cabral [QC#59502, ADD] -->
,    NVL(PRNT_DS_CONTR_DTL_PK, DS_CONTR_DTL_PK)
<!-- END   2022/01/06 R.Cabral [QC#59502, ADD] -->
<!-- START 2022/03/08 R.Cabral [QC#59502-1, ADD] -->
,    DS_CONTR_DTL_TP_SORT_NUM
<!-- END   2022/03/08 R.Cabral [QC#59502-1, ADD] -->
,    SVC_PGM_TP_SORT_NUM
,    NVL(DS_CONTR_CRAT_TP_CD, #dsContrCratTp#)
<!-- START 2022/01/06 R.Cabral [QC#59502, DEL] -->
<!-- ,    NVL(PRNT_DS_CONTR_DTL_PK, DS_CONTR_DTL_PK) -->
<!-- END   2022/01/06 R.Cabral [QC#59502, DEL] -->
<!-- END 2019/01/17 [QC#29782, ADD] -->
<!-- START 2022/03/08 R.Cabral [QC#59502-1, DEL] -->
<!-- ,    DS_CONTR_DTL_TP_SORT_NUM -->
<!-- END   2022/03/08 R.Cabral [QC#59502-1, DEL] -->
<!-- START 2017/08/02 K.Kitachi [QC#18116, ADD] -->
,    DS_CONTR_DTL_PK
<!-- END 2017/08/02 K.Kitachi [QC#18116, ADD] -->
,    MTR_LB_SORT_NUM
,    XS_MTR_COPY_QTY
</statement>

<statement id="getDsContrDtl1_Flt" parameterClass="Map" resultClass="Map">
SELECT
    *
FROM
(
SELECT
     DCD.EZUPTIME
,    DCD.EZUPTIMEZONE
,    DCD.DS_CONTR_DTL_PK
<!-- START 2019/01/25 [QC#29782,MOD] -->
<!-- ,    DCD.PRNT_DS_CONTR_DTL_PK -->
,    CASE
         WHEN DCD.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCd_Accessory# THEN DCD.PRNT_DS_CONTR_DTL_PK
         ELSE DCD.DS_CONTR_DTL_PK
     END  AS  PRNT_DS_CONTR_DTL_PK
<!-- END 2019/01/25 [QC#29782,MOD] -->
,    SMM.SVC_MACH_MSTR_PK
,    SMM.SER_NUM
,    SMM.MDSE_CD
,    MDN.T_MDL_NM    AS    MDL_NM
,    STC.FIRST_LINE_ADDR
,    STC.SCD_LINE_ADDR
,    STC.THIRD_LINE_ADDR
,    STC.FRTH_LINE_ADDR
,    STC.CTY_ADDR
,    STC.ST_CD
,    STC.POST_CD
,    SMM.SVC_CONFIG_MSTR_PK
,    DCD.DS_CONTR_DTL_TP_CD
,    DDT.DS_CONTR_DTL_TP_SORT_NUM
,    DDS.DS_CONTR_DTL_STS_CD
,    DDS.DS_CONTR_DTL_STS_DESC_TXT
,    DCD.CONTR_EFF_FROM_DT
,    DCD.CONTR_EFF_THRU_DT
<!-- START 2017/09/26 K.Kojima [QC#21221,MOD] -->
<!-- ,    DCD.BASE_BLLG_CYCLE_CD -->
<!-- ,    BBC.BLLG_CYCLE_DESC_TXT -->
<!-- ,    DCD.BASE_PRC_DEAL_AMT -->
,    NVL(BSCHD.BLLG_CYCLE_CD, DCD.BASE_BLLG_CYCLE_CD)        AS BASE_BLLG_CYCLE_CD
,    NVL(BSCHD.BLLG_CYCLE_DESC_TXT, BBC.BLLG_CYCLE_DESC_TXT) AS BLLG_CYCLE_DESC_TXT
,    NVL(BSCHD.BASE_PRC_DEAL_AMT, DCD.BASE_PRC_DEAL_AMT)     AS BASE_PRC_DEAL_AMT
<!-- END 2017/09/26 K.Kojima [QC#21221,MOD] -->
,    DCD.MTR_READ_METH_CD
,    DCD.RNW_EFF_FROM_DT
,    DCD.CONTR_RNW_TOT_CNT
<!-- START 2018/02/22 M.Naito [QC#23179,MOD] -->
<!-- ,    DECODE(DCD.CONTR_CLO_DT, NULL, NULL, TO_CHAR(TO_DATE(DCD.CONTR_CLO_DT,'YYYYMMDD') + 1, 'YYYYMMDD')) AS CONTR_CLO_DT -->
,    DCD.CONTR_CLO_DT
<!-- END 2018/02/22 M.Naito [QC#23179,MOD] -->
,    DDT.BASE_CHRG_FLG
,    DDT.USG_CHRG_FLG
,    (
        CASE
            WHEN
                EXISTS(
                    SELECT
                        *
                    FROM
                        DS_CONTR_DTL ASRY
                    WHERE
                            DCD.DS_CONTR_DTL_PK     =    ASRY.PRNT_DS_CONTR_DTL_PK
                        AND DCD.GLBL_CMPY_CD        =    ASRY.GLBL_CMPY_CD
                        AND DCD.EZCANCELFLAG        =    ASRY.EZCANCELFLAG
                        AND ASRY.DS_CONTR_DTL_TP_CD =    #dsContrDtlTpCd_Accessory#
                )
            THEN
                'Y'
            ELSE
                'N'
        END
     ) AS ASRY_FLG
,    (
        CASE
            WHEN
                EXISTS(
                    SELECT
                        *
                    FROM
                         DS_CONTR_DTL       DCDF
                        ,DS_CONTR_BLLG_SCHD DCBS
                    WHERE
                            DCDF.DS_CONTR_PK        =    #dsContrPk#
                        AND DCDF.GLBL_CMPY_CD       =    #glblCmpyCd#
                        AND DCDF.DS_CONTR_DTL_TP_CD =    #dsContrDtlTpCd#
                        AND DCDF.EZCANCELFLAG       =    '0'
                        AND DCDF.DS_CONTR_DTL_PK    =    DCBS.DS_CONTR_DTL_PK
                        AND DCDF.GLBL_CMPY_CD       =    DCBS.GLBL_CMPY_CD
                        AND DCDF.EZCANCELFLAG       =    DCBS.EZCANCELFLAG
                        AND DCBS.BASE_CHRG_FLG      =    'Y'
                )
            THEN
                'Y'
            ELSE
                'N'
        END
     ) AS BASE_PRC_DTL_FLG
,    (
        CASE
            WHEN
                EXISTS(
                    SELECT
                        *
                    FROM
                        DS_CONTR_BLLG_SCHD DCBS
                    WHERE
                            DCD.DS_CONTR_DTL_PK     =    DCBS.DS_CONTR_DTL_PK
                        AND DCD.GLBL_CMPY_CD        =    DCBS.GLBL_CMPY_CD
                        AND DCD.EZCANCELFLAG        =    DCBS.EZCANCELFLAG
                        AND DCBS.USG_CHRG_FLG       =    'Y'
                )
            THEN
                'Y'
            ELSE
                'N'
        END
     ) AS USG_PRC_DTL_FLG
,    NVL(SMMP.SER_NUM, SMM.SER_NUM)      AS SORT_SER_NUM
,    NVL(SMMP.MDSE_CD, SMM.MDSE_CD)      AS SORT_MDSE_CD
<!-- START 2017/02/06 N.Arai [QC#17197, MOD] -->
<!-- START 2018/02/19 K.Kojima [QC#24105, MOD] -->
<!-- ,    DCDV.DS_CONTR_CTRL_STS_NM -->
,    CASE
         WHEN     DCDV.DS_CONTR_CTRL_STS_CD = #entered#
             AND  SMM.SVC_MACH_MSTR_STS_CD  = #w4i#
         THEN #pendingInstallation#
         WHEN     DCDV.DS_CONTR_CTRL_STS_CD = #dsContrCtrlStsCdActive#
             AND (
                  SELECT
                      COUNT(*)
                  FROM
                       DS_CONTR_DTL           DCDF
                      ,DS_CONTR_PRC_EFF       DCPE
                      ,DS_CONTR_PRC_EFF_STS_V DCPESV
                  WHERE
                        DCDF.GLBL_CMPY_CD           = DCD.GLBL_CMPY_CD
                    AND DCDF.DS_CONTR_PK            = DCD.DS_CONTR_PK
                    AND DCDF.DS_CONTR_DTL_TP_CD     = #dsContrDtlTpCdFleet#
                    AND DCDF.EZCANCELFLAG           = '0'
                    AND DCDF.GLBL_CMPY_CD           = DCPE.GLBL_CMPY_CD
                    AND DCDF.DS_CONTR_DTL_PK        = DCPE.DS_CONTR_DTL_PK
                    AND DCPE.EZCANCELFLAG           = '0'
                    AND DCPE.GLBL_CMPY_CD           = DCPESV.GLBL_CMPY_CD
                    AND DCPE.DS_CONTR_PRC_EFF_PK    = DCPESV.DS_CONTR_PRC_EFF_PK
                    AND DCPESV.DS_CONTR_CTRL_STS_CD = #dsContrCtrlStsCdRenewalHoldForPO#
                    AND DCPESV.EZCANCELFLAG         = '0'
                 ) &gt; 0
         THEN #activePendingPO#
         WHEN     DCDV.DS_CONTR_CTRL_STS_CD = #dsContrCtrlStsCdActive#
             AND (
                  SELECT
                      COUNT(*)
                  FROM
                       DS_CONTR_DTL           DCDF
                      ,DS_CONTR_PRC_EFF       DCPE
                      ,DS_CONTR_PRC_EFF_STS_V DCPESV
                  WHERE
                        DCDF.GLBL_CMPY_CD           = DCD.GLBL_CMPY_CD
                    AND DCDF.DS_CONTR_PK            = DCD.DS_CONTR_PK
                    AND DCDF.DS_CONTR_DTL_TP_CD     = #dsContrDtlTpCdFleet#
                    AND DCDF.EZCANCELFLAG           = '0'
                    AND DCDF.GLBL_CMPY_CD           = DCPE.GLBL_CMPY_CD
                    AND DCDF.DS_CONTR_DTL_PK        = DCPE.DS_CONTR_DTL_PK
                    AND DCPE.EZCANCELFLAG           = '0'
                    AND DCPE.GLBL_CMPY_CD           = DCPESV.GLBL_CMPY_CD
                    AND DCPE.DS_CONTR_PRC_EFF_PK    = DCPESV.DS_CONTR_PRC_EFF_PK
                    AND DCPESV.DS_CONTR_CTRL_STS_CD = #dsContrCtrlStsCdRenewalHold#
                    AND DCPESV.EZCANCELFLAG         = '0'
                 ) &gt; 0
         THEN #activeRenewalHold#
         <!-- START 2022/02/04 K.Kitachi [QC#59684, ADD] -->
         WHEN     DCDV.QLTY_ASRN_HLD_FLG    = 'N'
             AND  DCD.MAN_TRMN_TP_CD        = #manTrmnTpCd#
         THEN #allPeriodTermination#
         <!-- END 2022/02/04 K.Kitachi [QC#59684, ADD] -->
         ELSE DCDV.DS_CONTR_CTRL_STS_NM
     END                            AS DS_CONTR_CTRL_STS_NM
<!-- END 2018/02/19 K.Kojima [QC#24105, MOD] -->
,    MDS.MDSE_DESC_SHORT_TXT
,    MRM.MTR_READ_METH_DESC_TXT
<!-- END 2017/02/06 N.Arai [QC#17197, MOD] -->
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
,    DCD.SVC_PGM_MDSE_CD
,    DCD.PRC_MTR_PKG_PK
,    PMP.PRC_MTR_PKG_NM
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
<!-- START 2019/01/17 [QC#29782, ADD] -->
,    SPT.SVC_PGM_TP_SORT_NUM
,    DCD.DS_CONTR_CRAT_TP_CD
<!-- END 2019/01/17 [QC#29782, ADD] -->
<!-- START 2019/01/21 T.Wada [QC#29371, ADD] -->
,    DCD.SVC_INV_MERGE_TP_CD
<!-- END 2019/01/21 T.Wada [QC#29371, ADD] -->
FROM
     DS_CONTR_DTL        DCD
,    SVC_MACH_MSTR       SMM
,    SHIP_TO_CUST        STC
,    SVC_CONFIG_MSTR     SCM
,    MDL_NM              MDN
,    DS_CONTR_DTL_STS    DDS
,    BLLG_CYCLE          BBC
,    DS_CONTR_DTL_TP     DDT
,    DS_CONTR_DTL        DCDP
,    SVC_MACH_MSTR       SMMP
<!-- START 2017/02/06 N.Arai [QC#17197, MOD] -->
,    DS_CONTR_DTL_STS_V  DCDV
,    MDSE                MDS
,    MTR_READ_METH       MRM
<!-- END 2017/02/06 N.Arai [QC#17197, MOD] -->
<!-- START 2017/09/26 K.Kojima [QC#21221,ADD] -->
    ,(
        SELECT
             DS_CONTR_DTL_PK
            ,BLLG_CYCLE_CD
            ,BASE_PRC_DEAL_AMT
            ,BLLG_CYCLE_DESC_TXT
        FROM
            (
                SELECT
                     BDCD.DS_CONTR_DTL_PK
                    ,BDCPE.BLLG_CYCLE_CD
                    ,BDCPE.BASE_PRC_DEAL_AMT
                    ,BBBC.BLLG_CYCLE_DESC_TXT
                    ,DENSE_RANK() OVER (PARTITION BY BDCD.DS_CONTR_DTL_PK ORDER BY BDCBS.NEXT_BLLG_DT, BDCBS.DS_CONTR_BLLG_SCHD_PK) AS BASE_RANK
                FROM
                     DS_CONTR_DTL       BDCD
                    ,DS_CONTR_BLLG_SCHD BDCBS
                    ,DS_CONTR_PRC_EFF   BDCPE
                    ,BLLG_CYCLE         BBBC
                WHERE
                        BDCD.GLBL_CMPY_CD         = #glblCmpyCd#
                    AND BDCD.DS_CONTR_PK          = #dsContrPk#
                    AND BDCD.EZCANCELFLAG         = '0'
                    AND BDCD.GLBL_CMPY_CD         = BDCBS.GLBL_CMPY_CD
                    AND BDCD.DS_CONTR_DTL_PK      = BDCBS.DS_CONTR_DTL_PK
                    AND BDCBS.INV_FLG             = 'N'
                    AND BDCBS.BASE_CHRG_FLG       = 'Y'
                    AND BDCBS.DS_BLLG_SCHD_TP_CD  = #dsBllgSchdTpRegular#
                    AND BDCBS.EZCANCELFLAG        = '0'
                    AND BDCBS.GLBL_CMPY_CD        = BDCPE.GLBL_CMPY_CD
                    AND BDCBS.DS_CONTR_PRC_EFF_PK = BDCPE.DS_CONTR_PRC_EFF_PK
                    AND BDCPE.EZCANCELFLAG        = '0'
                    AND BDCPE.GLBL_CMPY_CD        = BBBC.GLBL_CMPY_CD
                    AND BDCPE.BLLG_CYCLE_CD       = BBBC.BLLG_CYCLE_CD
                    AND BBBC.EZCANCELFLAG         = '0'
            )
        WHERE
            BASE_RANK = 1
     ) BSCHD
<!-- END 2017/09/26 K.Kojima [QC#21221,ADD] -->
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
,    PRC_MTR_PKG         PMP
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
<!-- START 2019/01/17 [QC#29782, ADD] -->
,    SVC_PGM_TP          SPT
<!-- END 2019/01/17 [QC#29782, ADD] -->
WHERE
    DCD.DS_CONTR_PK                =    #dsContrPk#
AND    DCD.GLBL_CMPY_CD            =    #glblCmpyCd#
AND    DCD.EZCANCELFLAG            =    '0'
AND    DCD.DS_CONTR_DTL_TP_CD     !=    #dsContrDtlTpCd#
AND    DCD.SVC_MACH_MSTR_PK        =    SMM.SVC_MACH_MSTR_PK(+)
AND    DCD.GLBL_CMPY_CD            =    SMM.GLBL_CMPY_CD(+)
AND    DCD.EZCANCELFLAG            =    SMM.EZCANCELFLAG(+)
AND    SMM.CUR_LOC_NUM             =    STC.SHIP_TO_CUST_CD(+)
AND    SMM.GLBL_CMPY_CD            =    STC.GLBL_CMPY_CD(+)
AND    SMM.EZCANCELFLAG            =    STC.EZCANCELFLAG(+)
AND    SMM.SVC_CONFIG_MSTR_PK      =    SCM.SVC_CONFIG_MSTR_PK(+)
AND    SMM.GLBL_CMPY_CD            =    SCM.GLBL_CMPY_CD(+)
AND    SMM.EZCANCELFLAG            =    SCM.EZCANCELFLAG(+)
AND    SCM.MDL_ID                  =    MDN.T_MDL_ID(+)
AND    SCM.GLBL_CMPY_CD            =    MDN.T_GLBL_CMPY_CD(+)
AND    SCM.EZCANCELFLAG            =    MDN.EZCANCELFLAG(+)
AND    DCD.DS_CONTR_DTL_STS_CD     =    DDS.DS_CONTR_DTL_STS_CD(+)
AND    DCD.GLBL_CMPY_CD            =    DDS.GLBL_CMPY_CD(+)
AND    DCD.EZCANCELFLAG            =    DDS.EZCANCELFLAG(+)
AND    DCD.BASE_BLLG_CYCLE_CD      =    BBC.BLLG_CYCLE_CD(+)
AND    DCD.GLBL_CMPY_CD            =    BBC.GLBL_CMPY_CD(+)
AND    DCD.EZCANCELFLAG            =    BBC.EZCANCELFLAG(+)
AND    DCD.DS_CONTR_DTL_TP_CD      =    DDT.DS_CONTR_DTL_TP_CD
AND    DDT.SVC_PRC_FLG             =    #svcPrcFlg#
AND    DCD.GLBL_CMPY_CD            =    DDT.GLBL_CMPY_CD
AND    DCD.EZCANCELFLAG            =    DDT.EZCANCELFLAG
AND    DCD.PRNT_DS_CONTR_DTL_PK    =    DCDP.DS_CONTR_DTL_PK(+)
AND    DCD.GLBL_CMPY_CD            =    DCDP.GLBL_CMPY_CD(+)
AND    DCD.EZCANCELFLAG            =    DCDP.EZCANCELFLAG(+)
AND    DCDP.SVC_MACH_MSTR_PK       =    SMMP.SVC_MACH_MSTR_PK(+)
AND    DCDP.GLBL_CMPY_CD           =    SMMP.GLBL_CMPY_CD(+)
AND    DCDP.EZCANCELFLAG           =    SMMP.EZCANCELFLAG(+)
<!-- START 2017/02/06 N.Arai [QC#17197, MOD] -->
AND    DCD.GLBL_CMPY_CD            =    DCDV.GLBL_CMPY_CD
AND    DCD.DS_CONTR_DTL_PK         =    DCDV.DS_CONTR_DTL_PK
AND    DCD.EZCANCELFLAG            =    DCDV.EZCANCELFLAG
AND    DCD.GLBL_CMPY_CD            =    MDS.GLBL_CMPY_CD(+)
AND    DCD.SVC_PGM_MDSE_CD         =    MDS.MDSE_CD(+)
AND    DCD.EZCANCELFLAG            =    MDS.EZCANCELFLAG(+)
AND    DCD.GLBL_CMPY_CD            =    MRM.GLBL_CMPY_CD(+)
AND    DCD.MTR_READ_METH_CD        =    MRM.MTR_READ_METH_CD(+)
AND    DCD.EZCANCELFLAG            =    MRM.EZCANCELFLAG(+)
<!-- END 2017/02/06 N.Arai [QC#17197, MOD] -->
<!-- START 2017/09/26 K.Kojima [QC#21221,ADD] -->
AND    DCD.DS_CONTR_DTL_PK     =    BSCHD.DS_CONTR_DTL_PK(+)
<!-- END 2017/09/26 K.Kojima [QC#21221,ADD] -->
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
AND    DCD.GLBL_CMPY_CD        =    PMP.GLBL_CMPY_CD(+)
AND    DCD.PRC_MTR_PKG_PK      =    PMP.PRC_MTR_PKG_PK(+)
AND    DCD.EZCANCELFLAG        =    PMP.EZCANCELFLAG(+)
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
<!-- START 2019/01/17 [QC#29782, ADD] -->
AND    MDS.GLBL_CMPY_CD            =    SPT.GLBL_CMPY_CD(+)
AND    MDS.SVC_PGM_TP_CD           =    SPT.SVC_PGM_TP_CD(+)
AND    MDS.EZCANCELFLAG            =    SPT.EZCANCELFLAG(+)
<!-- END 2019/01/17 [QC#29782, ADD] -->
)
ORDER BY
     SORT_SER_NUM
,    SORT_MDSE_CD
<!-- START 2019/01/17 [QC#29782, ADD] -->
,    SVC_PGM_TP_SORT_NUM
,    NVL(DS_CONTR_CRAT_TP_CD, #dsContrCratTp#)
,    PRNT_DS_CONTR_DTL_PK
<!-- END 2019/01/17 [QC#29782, ADD] -->
,    DS_CONTR_DTL_TP_SORT_NUM
</statement>

<statement id="getDsContrDtl2_Flt" parameterClass="Map" resultClass="Map">
<!-- START 2018/04/09 K.Kojima [QC#24802, ADD] -->
WITH TARGET_DS_CONTR AS (
    SELECT
        *
    FROM
        DS_CONTR DC
    WHERE
            DC.GLBL_CMPY_CD = #glblCmpyCd#
        AND DC.DS_CONTR_PK  = #dsContrPk#
        AND DC.EZCANCELFLAG = '0'
)
,TARGET_DS_CONTR_DTL AS (
    SELECT
        *
    FROM
        DS_CONTR_DTL DCD
    WHERE
            DCD.GLBL_CMPY_CD = #glblCmpyCd#
        AND DCD.DS_CONTR_PK  = #dsContrPk#
        AND DCD.EZCANCELFLAG = '0'
)
,TARGET_DS_CONTR_BLLG_MTR AS (
    SELECT
        *
    FROM
        DS_CONTR_BLLG_MTR DCBM
    WHERE
            DCBM.GLBL_CMPY_CD = #glblCmpyCd#
        AND DCBM.EZCANCELFLAG = '0'
        AND EXISTS(SELECT 1 FROM TARGET_DS_CONTR_DTL DCD WHERE DCD.DS_CONTR_DTL_PK = DCBM.DS_CONTR_DTL_PK)
)
,TARGET_DS_CONTR_PRC_EFF AS (
    SELECT
        *
    FROM
        DS_CONTR_PRC_EFF DCPE
    WHERE
            DCPE.GLBL_CMPY_CD = #glblCmpyCd#
        AND DCPE.EZCANCELFLAG = '0'
        AND EXISTS(SELECT 1 FROM TARGET_DS_CONTR_DTL DCD WHERE DCD.DS_CONTR_DTL_PK = DCPE.DS_CONTR_DTL_PK)
)
,TARGET_DS_CONTR_BLLG_SCHD_SMRY AS (
    SELECT
        *
    FROM
        DS_CONTR_BLLG_SCHD_SMRY DCBSS
    WHERE
            DCBSS.GLBL_CMPY_CD = #glblCmpyCd#
        AND DCBSS.EZCANCELFLAG = '0'
        AND EXISTS(SELECT 1 FROM TARGET_DS_CONTR_DTL DCD WHERE DCD.DS_CONTR_DTL_PK = DCBSS.DS_CONTR_DTL_PK)
)
,TARGET_DS_CONTR_BLLG_SCHD AS (
    SELECT
        *
    FROM
        DS_CONTR_BLLG_SCHD DCBS
    WHERE
            DCBS.GLBL_CMPY_CD = #glblCmpyCd#
        AND DCBS.EZCANCELFLAG = '0'
        AND EXISTS(SELECT 1 FROM TARGET_DS_CONTR_DTL DCD WHERE DCD.DS_CONTR_DTL_PK = DCBS.DS_CONTR_DTL_PK)
)
<!-- END 2018/04/09 K.Kojima [QC#24802, ADD] -->
SELECT
    *
FROM (
    SELECT
         DCD.EZUPTIME                    AS    EZUPTIME_BD
    ,    DCD.EZUPTIMEZONE                AS    EZUPTIMEZONE_BD
    ,    DCD.DS_CONTR_DTL_PK
    ,    DCD.PRNT_DS_CONTR_DTL_PK
    ,    SMM.SVC_CONFIG_MSTR_PK          AS    SVC_CONFIG_MSTR_PK
    ,    SMM.SVC_MACH_MSTR_PK            AS    SVC_MACH_MSTR_PK
    ,    SMM.SER_NUM                     AS    SER_NUM
    ,    SMM.MDSE_CD                     AS    MDSE_CD
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
    ,    MDS2.MDSE_DESC_SHORT_TXT        AS    MDSE_DESC_SHORT_TXT_BI
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
    ,    DCD.CONTR_EFF_FROM_DT
    ,    DCD.CONTR_EFF_THRU_DT
    ,    DCD.DS_CONTR_DTL_TP_CD
    ,    DCD.DS_CONTR_DTL_STS_CD
    ,    DCD.MTR_READ_METH_CD
    ,    DCD.RNW_EFF_FROM_DT
    ,    DCD.CONTR_RNW_TOT_CNT
<!-- START 2018/02/22 M.Naito [QC#23179,MOD] -->
<!--    ,    DECODE(DCD.CONTR_CLO_DT, NULL, NULL, TO_CHAR(TO_DATE(DCD.CONTR_CLO_DT,'YYYYMMDD') + 1, 'YYYYMMDD')) AS CONTR_CLO_DT -->
    ,    DCD.CONTR_CLO_DT
<!-- END 2018/02/22 M.Naito [QC#23179,MOD] -->
    ,    DCD.SHIP_TO_CUST_CD             AS    SHIP_TO_CUST_CD
    ,    SHP.LOC_NM                      AS    SHIP_TO_LOC_NM
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
    ,    SHTC.FIRST_LINE_ADDR            AS    SHIP_FIRST_LINE_ADDR
    ,    SHTC.SCD_LINE_ADDR              AS    SHIP_SCD_LINE_ADDR
    ,    SHTC.THIRD_LINE_ADDR            AS    SHIP_THIRD_LINE_ADDR
    ,    SHTC.FRTH_LINE_ADDR             AS    SHIP_FRTH_LINE_ADDR
    ,    SHTC.CTY_ADDR                   AS    SHIP_CTY_ADDR
    ,    SHTC.ST_CD                      AS    SHIP_ST_CD
    ,    SHTC.POST_CD                    AS    SHIP_POST_CD
    ,    SMM.FLD_SVC_BR_CD
    ,    (
         SELECT
             A.SVC_BR_CD_DESC_TXT
         FROM (
             SELECT DISTINCT
                 SBPX.SVC_BR_CD_DESC_TXT
             FROM
                 SVC_BR_POST_XREF SBPX
             WHERE
                 SBPX.GLBL_CMPY_CD    = SMM.GLBL_CMPY_CD
             AND SBPX.EZCANCELFLAG    = SMM.EZCANCELFLAG
             AND SBPX.SVC_LINE_BIZ_CD = SMM.SVC_BY_LINE_BIZ_TP_CD
             AND SBPX.SVC_BR_CD       = SMM.FLD_SVC_BR_CD
             ) A
         WHERE
             ROWNUM                   = 1
         )                               AS    SVC_BR_CD_DESC_TXT
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
    <!-- Base -->
    ,    DCD.BASE_BILL_TO_CUST_CD
    ,    BTB.LOC_NM                      AS    BASE_BILL_TO_LOC_NM
    ,    BTB.FIRST_LINE_ADDR             AS    BASE_FIRST_LINE_ADDR
    ,    BTB.SCD_LINE_ADDR               AS    BASE_SCD_LINE_ADDR
    ,    BTB.THIRD_LINE_ADDR             AS    BASE_THIRD_LINE_ADDR
    ,    BTB.FRTH_LINE_ADDR              AS    BASE_FRTH_LINE_ADDR
    ,    BTB.CTY_ADDR                    AS    BASE_CTY_ADDR
    ,    BTB.ST_CD                       AS    BASE_ST_CD
    ,    BTB.POST_CD                     AS    BASE_POST_CD
    ,    DCD.BASE_DPLY_PER_END_DAY
    ,    DCD.CONTR_CLO_DAY               AS    BASE_CLO_DAY
    ,    DCD.CONTR_BLLG_DAY              AS    BASE_BLLG_DAY
    ,    CCS.CONTR_COV_SVC_PK
    ,    CCS.DS_COV_SVC_TP_CD
    ,    DCD.SVC_PGM_MDSE_CD
    ,    MDS.MDSE_DESC_SHORT_TXT
    <!-- START 2017/09/26 K.Kojima [QC#21221,ADD] -->
    <isEqual property="forScheduleFlag" compareValue="Y">
    <!-- END 2017/09/26 K.Kojima [QC#21221,ADD] -->
    ,    DCD.BASE_BLLG_CYCLE_CD
    ,    DCD.BASE_PRC_DEAL_AMT
    <!-- START 2017/09/26 K.Kojima [QC#21221,ADD] -->
    </isEqual>
    <isEqual property="forScheduleFlag" compareValue="N">
    ,    NVL(CPE.BLLG_CYCLE_CD, DCD.BASE_BLLG_CYCLE_CD)    AS BASE_BLLG_CYCLE_CD
    ,    NVL(CPE.BASE_PRC_DEAL_AMT, DCD.BASE_PRC_DEAL_AMT) AS BASE_PRC_DEAL_AMT
    </isEqual>
    <!-- END 2017/09/26 K.Kojima [QC#21221,ADD] -->
    ,    DCD.BASE_BLLG_TMG_CD
    ,    BCB.BLLG_CYCLE_START_MTH        AS    BASE_BLLG_CYCLE_START_MTH
    <!-- Usage -->
    ,    DCD.USG_BILL_TO_CUST_CD
    ,    BTU.LOC_NM                      AS    USG_BILL_TO_LOC_NM
    ,    DCD.MTR_DPLY_PER_END_DAY
    ,    DCD.MTR_CLO_DAY                 AS    MTR_CLO_DAY
    ,    DCD.MTR_BLLG_DAY                AS    MTR_BLLG_DAY
    ,    DBM.EZUPTIME                    AS    EZUPTIME_BM
    ,    DBM.EZUPTIMEZONE                AS    EZUPTIMEZONE_BM
    ,    DBM.DS_CONTR_BLLG_MTR_PK
    ,    DBM.BLLG_MTR_LB_CD
    ,    COALESCE(DBM.BLLG_MTR_BILL_TO_CUST_CD, DCD.USG_BILL_TO_CUST_CD)    AS    BLLG_MTR_BILL_TO_CUST_CD
    ,    MLB.MTR_LB_DESC_TXT
    ,    DBM.BLLG_MTR_BLLG_CYCLE_CD
    ,    DCD.MTR_BLLG_TMG_CD
    ,    DBM.XS_CHRG_TP_CD
    ,    CXC.EZUPTIME                    AS    EZUPTIME_BX
    ,    CXC.EZUPTIMEZONE                AS    EZUPTIMEZONE_BX
    ,    CXC.CONTR_XS_COPY_PK
    ,    CXC.XS_MTR_COPY_QTY
    ,    CXC.XS_MTR_AMT_RATE
    ,    MDN.T_MDL_NM                    AS    MDL_NM
    ,    BSB.NEXT_BLLG_DT                AS    BASE_NEXT_BLLG_DT
    <!-- START 2017/10/20 K.Kojima [QC#21232,DEL] -->
    <!-- ,    DENSE_RANK() OVER (PARTITION BY BSB.DS_CONTR_DTL_PK ORDER BY BSB.NEXT_BLLG_DT, BSB.DS_CONTR_BLLG_SCHD_PK) AS BASE_RANK -->
    <!-- END 2017/10/20 K.Kojima [QC#21232,DEL] -->
    ,    BSU.NEXT_BLLG_DT                AS    USG_NEXT_BLLG_DT
    <!-- START 2017/10/20 K.Kojima [QC#21232,DEL] -->
    <!-- ,    DENSE_RANK() OVER (PARTITION BY BSU.DS_CONTR_DTL_PK ORDER BY BSU.NEXT_BLLG_DT, BSU.DS_CONTR_BLLG_SCHD_PK) AS USG_RANK -->
    <!-- END 2017/10/20 K.Kojima [QC#21232,DEL] -->
    ,    MLB.MTR_LB_SORT_NUM
    ,    DCD.CTAC_PSN_PK
<!-- START 2018/06/18 K.Kitachi [QC#18591, MOD] -->
<!--     ,    RTRIM(CTP.CTAC_PSN_FIRST_NM || ' ' || CTP.CTAC_PSN_LAST_NM) AS PSN_NM -->
    ,    CTP.CTAC_PSN_FIRST_NM           AS    CTAC_PSN_FIRST_NM
    ,    CTP.CTAC_PSN_LAST_NM            AS    CTAC_PSN_LAST_NM
<!-- END 2018/06/18 K.Kitachi [QC#18591, MOD] -->
    ,    DCD.BASE_PRC_TERM_DEAL_AMT_RATE
    ,    COALESCE(BTM.LOC_NM, BTU.LOC_NM)                            AS BLLG_MTR_BILL_TO_LOC_NM
    ,    DBM.CTAC_PSN_PK                                             AS BLLG_MTR_CTAC_PSN_PK
<!-- START 2018/06/18 K.Kitachi [QC#18591, MOD] -->
<!--     ,    RTRIM(CTM.CTAC_PSN_FIRST_NM || ' ' || CTM.CTAC_PSN_LAST_NM) AS BLLG_MTR_PSN_NM -->
    ,    CTM.CTAC_PSN_FIRST_NM                                       AS BLLG_MTR_CTAC_PSN_FIRST_NM
    ,    CTM.CTAC_PSN_LAST_NM                                        AS BLLG_MTR_CTAC_PSN_LAST_NM
<!-- END 2018/06/18 K.Kitachi [QC#18591, MOD] -->
    ,    DBM.BLLG_MIN_CNT
    ,    DBM.BLLG_MIN_AMT_RATE
    ,    DBM.BLLG_ROLL_OVER_RATIO
    ,    DBM.BLLG_FREE_COPY_CNT
<!-- START 2019/01/17 M.Naito [QC#29083,ADD] -->
    ,    DBM.CUM_COPY_CNT
    ,    DBM.CUM_COPY_FREQ_MTH_AOT
    ,    DBM.CUM_COPY_START_DT
    ,    DBM.CUM_COPY_END_DT
<!-- END 2019/01/17 M.Naito [QC#29083,ADD] -->
    ,    BTM.FIRST_LINE_ADDR
    ,    BTM.SCD_LINE_ADDR
    ,    BTM.THIRD_LINE_ADDR
    ,    BTM.FRTH_LINE_ADDR
    ,    BTM.CTY_ADDR
    ,    BTM.ST_CD
    ,    BTM.POST_CD
    ,    BCM.BLLG_CYCLE_START_MTH AS MTR_BLLG_CYCLE_START_MTH
    ,    (
            CASE
                WHEN
                    EXISTS(
                        SELECT
                            *
                        FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                             DS_CONTR_PRC_EFF DPE -->
                            TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                        WHERE
                                DCD.DS_CONTR_DTL_PK       =    DPE.DS_CONTR_DTL_PK
                            AND DCD.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                            AND DCD.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                            AND DPE.BASE_CHRG_FLG         =    'Y'
                        <isEqual property="CancelledFlg" compareValue="Y">
                            AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                        </isEqual>
                        <isEqual property="CancelledFlg" compareValue="N">
                            AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                        </isEqual>
                    )
                THEN
                    'Y'
                ELSE
                    'N'
            END
         ) AS BASE_PRC_FLG
    ,    (
            CASE
                WHEN
                    EXISTS(
                        SELECT
                            *
                        FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                             DS_CONTR_PRC_EFF DPE -->
                            TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                        WHERE
                                DBM.DS_CONTR_BLLG_MTR_PK  =    DPE.DS_CONTR_BLLG_MTR_PK
                            AND DBM.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                            AND DBM.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                            AND DPE.USG_CHRG_FLG          =    'Y'
                        <isEqual property="CancelledFlg" compareValue="Y">
                            AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                        </isEqual>
                        <isEqual property="CancelledFlg" compareValue="N">
                            AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                        </isEqual>
                    )
                THEN
                    'Y'
                ELSE
                    'N'
            END
         ) AS USG_PRC_FLG
    ,    (
            CASE
                WHEN
                    EXISTS(
                        SELECT
                            *
                        FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                              DS_CONTR_PRC_EFF         DPE -->
<!--                             ,DS_CONTR_BLLG_SCHD_SMRY  DBS -->
                             TARGET_DS_CONTR_PRC_EFF         DPE
                            ,TARGET_DS_CONTR_BLLG_SCHD_SMRY  DBS
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                        WHERE
                                DCD.DS_CONTR_DTL_PK       =    DPE.DS_CONTR_DTL_PK
                            AND DCD.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                            AND DCD.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                            AND DPE.BASE_CHRG_FLG         =    'Y'
                        <isEqual property="CancelledFlg" compareValue="Y">
                            AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                        </isEqual>
                        <isEqual property="CancelledFlg" compareValue="N">
                            AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                        </isEqual>
                            AND DPE.DS_CONTR_PRC_EFF_PK   =    DBS.DS_CONTR_PRC_EFF_PK
                            AND DPE.GLBL_CMPY_CD          =    DBS.GLBL_CMPY_CD
                            AND DPE.EZCANCELFLAG          =    DBS.EZCANCELFLAG
                    )
                THEN
                    'Y'
                ELSE
                    'N'
            END
         ) AS BASE_TOP_SCHEDULE_FLG
    ,    (
            CASE
                WHEN
                    EXISTS(
                        SELECT
                            *
                        FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                              DS_CONTR_PRC_EFF         DPE -->
<!--                             ,DS_CONTR_BLLG_SCHD_SMRY  DBS -->
                             TARGET_DS_CONTR_PRC_EFF         DPE
                            ,TARGET_DS_CONTR_BLLG_SCHD_SMRY  DBS
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                        WHERE
                                DBM.DS_CONTR_BLLG_MTR_PK  =    DPE.DS_CONTR_BLLG_MTR_PK
                            AND DBM.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                            AND DBM.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                            AND DPE.USG_CHRG_FLG          =    'Y'
                        <isEqual property="CancelledFlg" compareValue="Y">
                            AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                        </isEqual>
                        <isEqual property="CancelledFlg" compareValue="N">
                            AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                        </isEqual>
                            AND DPE.DS_CONTR_PRC_EFF_PK   =    DBS.DS_CONTR_PRC_EFF_PK
                            AND DPE.GLBL_CMPY_CD          =    DBS.GLBL_CMPY_CD
                            AND DPE.EZCANCELFLAG          =    DBS.EZCANCELFLAG
                    )
                THEN
                    'Y'
                ELSE
                    'N'
            END
         ) AS USG_TOP_SCHEDULE_FLG
    ,    (
            SELECT
                DS_CONTR_PRC_EFF_PK
            FROM (
                SELECT
                     DPE.DS_CONTR_PRC_EFF_PK
                    ,3                            AS SORT_KEY1
                    ,(TO_DATE(#slsDt#, 'YYYYMMDD') - TO_DATE(DPE.CONTR_PRC_EFF_THRU_DT, 'YYYYMMDD'))  AS SORT_KEY2
                FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                     DS_CONTR_PRC_EFF DPE -->
                    TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                WHERE
                        DCD.DS_CONTR_DTL_PK       =    DPE.DS_CONTR_DTL_PK
                    AND DCD.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                    AND DCD.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                    AND DPE.BASE_CHRG_FLG         =    'Y'
                    AND DPE.CONTR_PRC_EFF_THRU_DT &lt; #slsDt#
                <isEqual property="CancelledFlg" compareValue="Y">
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                </isEqual>
                <isEqual property="CancelledFlg" compareValue="N">
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                </isEqual>
                UNION
                SELECT
                     DPE.DS_CONTR_PRC_EFF_PK
                    ,1                            AS SORT_KEY1
                    ,0                            AS SORT_KEY2
                FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                     DS_CONTR_PRC_EFF DPE -->
                    TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                WHERE
                        DCD.DS_CONTR_DTL_PK       =    DPE.DS_CONTR_DTL_PK
                    AND DCD.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                    AND DCD.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                    AND DPE.BASE_CHRG_FLG         =    'Y'
                    AND DPE.CONTR_PRC_EFF_FROM_DT &lt;= #slsDt#
                    AND DPE.CONTR_PRC_EFF_THRU_DT &gt;= #slsDt#
                <isEqual property="CancelledFlg" compareValue="Y">
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                </isEqual>
                <isEqual property="CancelledFlg" compareValue="N">
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                </isEqual>
                UNION
                SELECT
                     DPE.DS_CONTR_PRC_EFF_PK
                    ,2                            AS SORT_KEY1
                    ,(TO_DATE(DPE.CONTR_PRC_EFF_FROM_DT, 'YYYYMMDD') - TO_DATE(#slsDt#, 'YYYYMMDD'))  AS SORT_KEY2
                FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                     DS_CONTR_PRC_EFF DPE -->
                    TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                WHERE
                        DCD.DS_CONTR_DTL_PK       =    DPE.DS_CONTR_DTL_PK
                    AND DCD.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                    AND DCD.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                    AND DPE.BASE_CHRG_FLG         =    'Y'
                    AND DPE.CONTR_PRC_EFF_FROM_DT &gt;= #slsDt#
                <isEqual property="CancelledFlg" compareValue="Y">
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                </isEqual>
                <isEqual property="CancelledFlg" compareValue="N">
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                </isEqual>
                ORDER BY
                     SORT_KEY1                    ASC
                    ,SORT_KEY2                    ASC
                    ,DS_CONTR_PRC_EFF_PK          DESC
            )
            WHERE
                ROWNUM = 1
         ) AS BASE_BLLG_DS_CONTR_PRC_EFF_PK
    ,    (
            SELECT
                DS_CONTR_PRC_EFF_PK
            FROM (
                SELECT
                    DPE.DS_CONTR_PRC_EFF_PK
                    ,3                            AS SORT_KEY1
                    ,(TO_DATE(#slsDt#, 'YYYYMMDD') - TO_DATE(DPE.CONTR_PRC_EFF_THRU_DT, 'YYYYMMDD'))  AS SORT_KEY2
                FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                     DS_CONTR_PRC_EFF DPE -->
                    TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                WHERE
                        DBM.DS_CONTR_BLLG_MTR_PK  =    DPE.DS_CONTR_BLLG_MTR_PK
                    AND DBM.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                    AND DBM.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                    AND DPE.USG_CHRG_FLG          =    'Y'
                    AND DPE.CONTR_PRC_EFF_THRU_DT &lt; #slsDt#
                <isEqual property="CancelledFlg" compareValue="Y">
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                </isEqual>
                <isEqual property="CancelledFlg" compareValue="N">
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                </isEqual>
                UNION
                SELECT
                    DPE.DS_CONTR_PRC_EFF_PK
                    ,1                            AS SORT_KEY1
                    ,0                            AS SORT_KEY2
                FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                     DS_CONTR_PRC_EFF DPE -->
                    TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                WHERE
                        DBM.DS_CONTR_BLLG_MTR_PK  =    DPE.DS_CONTR_BLLG_MTR_PK
                    AND DBM.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                    AND DBM.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                    AND DPE.USG_CHRG_FLG          =    'Y'
                    AND DPE.CONTR_PRC_EFF_FROM_DT &lt;= #slsDt#
                    AND DPE.CONTR_PRC_EFF_THRU_DT &gt;= #slsDt#
                <isEqual property="CancelledFlg" compareValue="Y">
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                </isEqual>
                <isEqual property="CancelledFlg" compareValue="N">
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                </isEqual>
                UNION
                SELECT
                    DPE.DS_CONTR_PRC_EFF_PK
                    ,2                            AS SORT_KEY1
                    ,(TO_DATE(DPE.CONTR_PRC_EFF_FROM_DT, 'YYYYMMDD') - TO_DATE(#slsDt#, 'YYYYMMDD'))  AS SORT_KEY2
                FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                     DS_CONTR_PRC_EFF DPE -->
                    TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                WHERE
                        DBM.DS_CONTR_BLLG_MTR_PK  =    DPE.DS_CONTR_BLLG_MTR_PK
                    AND DBM.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                    AND DBM.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                    AND DPE.USG_CHRG_FLG          =    'Y'
                    AND DPE.CONTR_PRC_EFF_FROM_DT &gt;= #slsDt#
                <isEqual property="CancelledFlg" compareValue="Y">
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                </isEqual>
                <isEqual property="CancelledFlg" compareValue="N">
                    AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                </isEqual>
                ORDER BY
                     SORT_KEY1                    ASC
                    ,SORT_KEY2                    ASC
                    ,DS_CONTR_PRC_EFF_PK          DESC
            )
            WHERE
                ROWNUM = 1
         ) AS BLLG_MTR_DS_CONTR_PRC_EFF_PK
<!-- START 2017/09/13 K.Kim [QC#19938, ADD] -->
    ,    (
            CASE
                WHEN
<!-- START 2018/08/24 T.Tomita [QC#26687, ADD] -->
                    (
                        SELECT
                            COUNT(*)
                        FROM
                            TARGET_DS_CONTR_BLLG_SCHD SCHD
                        WHERE
                            SCHD.GLBL_CMPY_CD        =    DCD.GLBL_CMPY_CD
                        AND SCHD.DS_CONTR_DTL_PK     =    DCD.DS_CONTR_DTL_PK
                        AND SCHD.EZCANCELFLAG        =    '0'
                        AND SCHD.BASE_CHRG_FLG       =    'Y'
                    ) > 0
                    AND
<!-- END 2018/08/24 T.Tomita [QC#26687, ADD] -->
                    NOT EXISTS(
                    SELECT
                        *
                    FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                         DS_CONTR_BLLG_SCHD BSB2 -->
                        TARGET_DS_CONTR_BLLG_SCHD BSB2
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                    WHERE
                            DCD.DS_CONTR_DTL_PK     =    BSB2.DS_CONTR_DTL_PK
                        AND DCD.GLBL_CMPY_CD        =    BSB2.GLBL_CMPY_CD
                        AND DCD.EZCANCELFLAG        =    BSB2.EZCANCELFLAG
                        AND BSB2.BASE_CHRG_FLG      =    'Y'
                        AND BSB2.DS_BLLG_SCHD_STS_CD &lt;&gt; #dsBllgSchdStsCdCl#
                    )
                THEN
                    'Y'
                ELSE
                    'N'
            END
         ) AS BASE_BILLED_FLG
    ,    (
            CASE
                WHEN
<!-- START 2018/08/24 T.Tomita [QC#26687, ADD] -->
                    (
                        SELECT
                            COUNT(*)
                        FROM
                            TARGET_DS_CONTR_BLLG_SCHD SCHD
                        WHERE
                            SCHD.GLBL_CMPY_CD        =    DCD.GLBL_CMPY_CD
                        AND SCHD.DS_CONTR_DTL_PK     =    DCD.DS_CONTR_DTL_PK
                        AND SCHD.EZCANCELFLAG        =    '0'
                        AND SCHD.USG_CHRG_FLG        =    'Y'
                    ) > 0
                    AND
<!-- END 2018/08/24 T.Tomita [QC#26687, ADD] -->
                    NOT EXISTS(
                    SELECT
                        *
                    FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                         DS_CONTR_BLLG_SCHD BSU2 -->
                        TARGET_DS_CONTR_BLLG_SCHD BSU2
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                    WHERE
                            DCD.DS_CONTR_DTL_PK     =    BSU2.DS_CONTR_DTL_PK
                        AND DCD.GLBL_CMPY_CD        =    BSU2.GLBL_CMPY_CD
                        AND DCD.EZCANCELFLAG        =    BSU2.EZCANCELFLAG
                        AND BSU2.USG_CHRG_FLG       =    'Y'
                        AND BSU2.DS_BLLG_SCHD_STS_CD &lt;&gt; #dsBllgSchdStsCdCl#
                    )
                THEN
                    'Y'
                ELSE
                    'N'
            END
         ) AS USG_BILLED_FLG
    ,    DCD.BILL_WITH_EQUIP_FLG
<!-- END 2017/09/13 K.Kim [QC#19938, ADD] -->
<!-- START 2017/09/21 K.Kitachi [QC#21222, ADD] -->
    ,   (
            CASE
                WHEN
                    (
                        SELECT
                            COUNT(*)
                        FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                             DS_CONTR_PRC_EFF DPE -->
                            TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                        WHERE
                                DCD.DS_CONTR_DTL_PK         =    DPE.DS_CONTR_DTL_PK
                            AND DCD.GLBL_CMPY_CD            =    DPE.GLBL_CMPY_CD
                            AND DCD.EZCANCELFLAG            =    DPE.EZCANCELFLAG
                            AND DPE.BASE_CHRG_FLG           =    'Y'
                            <iterate property="dsContrPrcEffStsCdList" var="dsContrPrcEffStsCd[]" open="AND DPE.DS_CONTR_PRC_EFF_STS_CD NOT IN (" close=")" conjunction=",">
                                #dsContrPrcEffStsCd[]#
                            </iterate>
                    ) > 1
                THEN
                    'Y'
                ELSE
                    'N'
            END
         ) AS BASE_PRC_EFF_MULTI_FLG
<!-- END 2017/09/21 K.Kitachi [QC#21222, ADD] -->
<!-- START 2023/08/18 T.Kojima [QC#60846, ADD] -->
    ,   (
            CASE
                WHEN
                    (
                        SELECT
                            COUNT(*)
                        FROM
                            TARGET_DS_CONTR_PRC_EFF DPE
                        WHERE
                                DBM.DS_CONTR_BLLG_MTR_PK    =    DPE.DS_CONTR_BLLG_MTR_PK
                            AND DBM.GLBL_CMPY_CD            =    DPE.GLBL_CMPY_CD
                            AND DBM.EZCANCELFLAG            =    DPE.EZCANCELFLAG
                            AND DPE.USG_CHRG_FLG            =    'Y'
                            AND (
                                    DPE.DS_CONTR_PRC_EFF_STS_CD = #dsContrPrcEffStsCdExpd#
                                    AND EXISTS(
                                        SELECT '1' FROM TARGET_DS_CONTR_BLLG_SCHD BDCBS
                                        WHERE DPE.DS_CONTR_PRC_EFF_PK = BDCBS.DS_CONTR_PRC_EFF_PK
                                        AND BDCBS.INV_FLG = 'N')
                                    OR DPE.DS_CONTR_PRC_EFF_STS_CD &lt;&gt; #dsContrPrcEffStsCdExpd#
                                )
                            <iterate property="usageDsContrPrcEffStsCdList" var="usageDsContrPrcEffStsCd[]" open="AND DPE.DS_CONTR_PRC_EFF_STS_CD NOT IN (" close=")" conjunction=",">
                                #usageDsContrPrcEffStsCd[]#
                            </iterate>
                    ) > 1
                THEN
                    'Y'
                ELSE
                    'N'
            END
         ) AS USG_PRC_EFF_MULTI_FLG
<!-- END 2023/08/18 T.Kojima [QC#60846, ADD] -->
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
,(
    SELECT
        COUNT(*)
    FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--          DS_CONTR_DTL    DTL -->
         TARGET_DS_CONTR_DTL    DTL
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
        ,DS_CONTR_DTL_TP TP
    WHERE
        DTL.GLBL_CMPY_CD       = DCD.GLBL_CMPY_CD
    AND DTL.DS_CONTR_PK        = DCD.DS_CONTR_PK
    AND DTL.EZCANCELFLAG       = '0'
    AND DTL.GLBL_CMPY_CD       = TP.GLBL_CMPY_CD
    AND DTL.DS_CONTR_DTL_TP_CD = TP.DS_CONTR_DTL_TP_CD
    AND TP.EZCANCELFLAG        = '0'
    AND TP.MAIN_UNIT_LINE_FLG  = 'Y'
 ) UNIT_CNT
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
<!-- START 2019/01/21 T.Wada [QC#29371, ADD] -->
,DCD.SVC_INV_MERGE_TP_CD
<!-- END 2019/01/21 T.Wada [QC#29371, ADD] -->
    FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--          DS_CONTR_DTL        DCD -->
         TARGET_DS_CONTR_DTL        DCD
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
    ,    SVC_MACH_MSTR       SMM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--     ,    DS_CONTR            DCR -->
    ,    TARGET_DS_CONTR            DCR
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
    ,    SELL_TO_CUST        STC
    ,    BILL_TO_CUST        BTB
    ,    BILL_TO_CUST        BTU
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--     ,    DS_CONTR_BLLG_MTR   DBM -->
    ,    TARGET_DS_CONTR_BLLG_MTR   DBM
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
    ,    BILL_TO_CUST        BTM
    ,    MTR_LB              MLB
    ,    CONTR_XS_COPY       CXC
    ,    CONTR_COV_SVC       CCS
    ,    DS_COV_SVC_TP       CST
    ,    SVC_CONFIG_MSTR     SCM
    ,    MDL_NM              MDN
    ,    CTAC_PSN            CTP
    ,    CTAC_PSN            CTM
    ,    BLLG_CYCLE          BCB
    ,    BLLG_CYCLE          BCM
    ,    MDSE                MDS
    ,    SHIP_TO_CUST        SHP
    <!-- START 2017/10/20 K.Kojima [QC#21232,MOD] -->
    <!-- ,    DS_CONTR_BLLG_SCHD  BSU -->
    <!-- ,    DS_CONTR_BLLG_SCHD  BSB -->
    ,(
        SELECT
             GLBL_CMPY_CD
            ,DS_CONTR_DTL_PK
            ,NEXT_BLLG_DT
            ,DS_CONTR_PRC_EFF_PK
            ,EZCANCELFLAG
        FROM
            (
                SELECT
                     BDCBS.GLBL_CMPY_CD
                    ,BDCBS.DS_CONTR_DTL_PK
                    ,BDCBS.NEXT_BLLG_DT
                    ,BDCBS.DS_CONTR_PRC_EFF_PK
                    ,DENSE_RANK() OVER (PARTITION BY BDCD.DS_CONTR_DTL_PK ORDER BY BDCBS.NEXT_BLLG_DT, BDCBS.DS_CONTR_BLLG_SCHD_PK) AS USG_RANK
                    ,BDCBS.EZCANCELFLAG
                FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                      DS_CONTR_DTL       BDCD -->
<!--                     ,DS_CONTR_BLLG_SCHD BDCBS -->
                     TARGET_DS_CONTR_DTL       BDCD
                    ,TARGET_DS_CONTR_BLLG_SCHD BDCBS
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                WHERE
                        BDCD.GLBL_CMPY_CD         = #glblCmpyCd#
                    AND BDCD.DS_CONTR_PK          = #dsContrPk#
                    <!-- START 2022/03/24 K.Kitachi [QC#59684, ADD] -->
                    AND (
                            BDCD.MAN_TRMN_TP_CD   IS NULL
                        OR
                            BDCD.MAN_TRMN_TP_CD   &lt;&gt; #manTrmnTpCd#
                        )
                    <!-- END 2022/03/24 K.Kitachi [QC#59684, ADD] -->
                    <!-- START 2023/10/05 H.Iinuma [QC#61675, ADD] -->
                    <!-- START 2024/03/12 Y.Nagasawaa [QC#61675, MOD] -->
                    <!-- AND (                                                         -->
                    <!--         BDCD.DS_CONTR_DTL_STS_CD &lt;&gt; #dsContrDtlStsTrmd# -->
                    <!--     OR                                                        -->
                    <!--         BDCD.MTR_HLD_FLG         &lt;&gt; 'N'                 -->
                    <!--     )                                                         -->
                    AND BDCBS.BLLG_SCHD_THRU_DT  &lt;= NVL(BDCD.CONTR_CLO_DT, BDCD.CONTR_EFF_THRU_DT)
                    <!-- EMD 2024/03/12 Y.Nagasawaa [QC#61675, MOD] -->
                    <!-- END 2023/10/05 H.Iinuma [QC#61675, ADD] -->
                    AND BDCD.EZCANCELFLAG         = '0'
                    AND BDCD.GLBL_CMPY_CD         = BDCBS.GLBL_CMPY_CD
                    AND BDCD.DS_CONTR_DTL_PK      = BDCBS.DS_CONTR_DTL_PK
                    AND BDCBS.INV_FLG             = 'N'
                    AND BDCBS.USG_CHRG_FLG        = 'Y'
                    AND BDCBS.DS_BLLG_SCHD_TP_CD  = #dsBllgSchdTpRegular#
                    AND BDCBS.EZCANCELFLAG        = '0'
                    <!-- START 2023/04/14 L.Borrega [QC#61370, ADD] -->
                    AND BDCBS.SKIP_RECOV_TP_CD    = #skipRecovTpNone#
                    <!-- END 2023/04/14 L.Borrega [QC#61370, ADD] -->
            )
        WHERE
            USG_RANK = 1
     ) BSU
    ,(
        SELECT
             GLBL_CMPY_CD
            ,DS_CONTR_DTL_PK
            ,NEXT_BLLG_DT
            ,DS_CONTR_PRC_EFF_PK
            ,EZCANCELFLAG
        FROM
            (
                SELECT
                     BDCBS.GLBL_CMPY_CD
                    ,BDCBS.DS_CONTR_DTL_PK
                    ,BDCBS.NEXT_BLLG_DT
                    ,BDCBS.DS_CONTR_PRC_EFF_PK
                    ,DENSE_RANK() OVER (PARTITION BY BDCD.DS_CONTR_DTL_PK ORDER BY BDCBS.NEXT_BLLG_DT, BDCBS.DS_CONTR_BLLG_SCHD_PK) AS BASE_RANK
                    ,BDCBS.EZCANCELFLAG
                FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                      DS_CONTR_DTL       BDCD -->
<!--                     ,DS_CONTR_BLLG_SCHD BDCBS -->
                     TARGET_DS_CONTR_DTL       BDCD
                    ,TARGET_DS_CONTR_BLLG_SCHD BDCBS
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                WHERE
                        BDCD.GLBL_CMPY_CD         = #glblCmpyCd#
                    AND BDCD.DS_CONTR_PK          = #dsContrPk#
                    AND BDCD.EZCANCELFLAG         = '0'
                    AND BDCD.GLBL_CMPY_CD         = BDCBS.GLBL_CMPY_CD
                    AND BDCD.DS_CONTR_DTL_PK      = BDCBS.DS_CONTR_DTL_PK
                    AND BDCBS.INV_FLG             = 'N'
                    AND BDCBS.BASE_CHRG_FLG       = 'Y'
                    AND BDCBS.DS_BLLG_SCHD_TP_CD  = #dsBllgSchdTpRegular#
                    AND BDCBS.EZCANCELFLAG        = '0'
                    <!-- START 2023/04/14 L.Borrega [QC#61370, ADD] -->
                    AND BDCBS.SKIP_RECOV_TP_CD    = #skipRecovTpNone#
                    <!-- END 2023/04/14 L.Borrega [QC#61370, ADD] -->
            )
        WHERE
            BASE_RANK = 1
     ) BSB
    <!-- END 2017/10/20 K.Kojima [QC#21232,MOD] -->
<!-- START 2017/09/26 K.Kojima [QC#21221,ADD] -->
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--     ,    DS_CONTR_PRC_EFF    CPE -->
    ,    TARGET_DS_CONTR_PRC_EFF    CPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!-- END 2017/09/26 K.Kojima [QC#21221,ADD] -->
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
    ,    MDSE                MDS2
    ,    SHIP_TO_CUST        SHTC
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
    WHERE
        DCD.DS_CONTR_PK                    =    #dsContrPk#
    AND    DCD.DS_CONTR_DTL_TP_CD          =    #dsContrDtlTpCd#
    AND    DCD.GLBL_CMPY_CD                =    #glblCmpyCd#
    AND    DCD.EZCANCELFLAG                =    '0'
    AND    DCD.SVC_MACH_MSTR_PK            =    SMM.SVC_MACH_MSTR_PK(+)
    AND    DCD.GLBL_CMPY_CD                =    SMM.GLBL_CMPY_CD(+)
    AND    DCD.EZCANCELFLAG                =    SMM.EZCANCELFLAG(+)
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
    AND    SMM.MDSE_CD                     =    MDS2.MDSE_CD(+)
    AND    SMM.GLBL_CMPY_CD                =    MDS2.GLBL_CMPY_CD(+)
    AND    SMM.EZCANCELFLAG                =    MDS2.EZCANCELFLAG(+)
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
    AND    DCR.DS_CONTR_PK                 =    DCD.DS_CONTR_PK
    AND    DCR.GLBL_CMPY_CD                =    DCD.GLBL_CMPY_CD
    AND    DCR.EZCANCELFLAG                =    DCD.EZCANCELFLAG
    AND    DCR.SELL_TO_CUST_CD             =    STC.SELL_TO_CUST_CD(+)
    AND    DCR.GLBL_CMPY_CD                =    STC.GLBL_CMPY_CD(+)
    AND    DCR.EZCANCELFLAG                =    STC.EZCANCELFLAG(+)
    AND    DCD.BASE_BILL_TO_CUST_CD        =    BTB.BILL_TO_CUST_CD(+)
    AND    DCD.GLBL_CMPY_CD                =    BTB.GLBL_CMPY_CD(+)
    AND    DCD.EZCANCELFLAG                =    BTB.EZCANCELFLAG(+)
    AND    DCD.USG_BILL_TO_CUST_CD         =    BTU.BILL_TO_CUST_CD(+)
    AND    DCD.GLBL_CMPY_CD                =    BTU.GLBL_CMPY_CD(+)
    AND    DCD.EZCANCELFLAG                =    BTU.EZCANCELFLAG(+)
    AND    DCD.DS_CONTR_DTL_PK             =    DBM.DS_CONTR_DTL_PK(+)
    AND    DCD.GLBL_CMPY_CD                =    DBM.GLBL_CMPY_CD(+)
    AND    DCD.EZCANCELFLAG                =    DBM.EZCANCELFLAG(+)
<!-- START 2017/08/25 U.Kim [QC#20728,ADD] -->
    AND    DBM.DS_CONTR_BLLG_MTR_STS_CD(+) &lt;&gt; #dsContrDtlStsOrdr#
<!-- END 2017/08/25 U.Kim [QC#20728,ADD] -->
    AND    DBM.BLLG_MTR_BILL_TO_CUST_CD    =    BTM.BILL_TO_CUST_CD(+)
    AND    DBM.GLBL_CMPY_CD                =    BTM.GLBL_CMPY_CD(+)
    AND    DBM.EZCANCELFLAG                =    BTM.EZCANCELFLAG(+)
    AND    DBM.BLLG_MTR_LB_CD              =    MLB.MTR_LB_CD(+)
    AND    DBM.GLBL_CMPY_CD                =    MLB.GLBL_CMPY_CD(+)
    AND    DBM.EZCANCELFLAG                =    MLB.EZCANCELFLAG(+)
    AND    DBM.DS_CONTR_BLLG_MTR_PK        =    CXC.DS_CONTR_BLLG_MTR_PK(+)
    AND    DBM.GLBL_CMPY_CD                =    CXC.GLBL_CMPY_CD(+)
    AND    DBM.EZCANCELFLAG                =    CXC.EZCANCELFLAG(+)
    AND    DCD.DS_CONTR_DTL_PK             =    CCS.DS_CONTR_DTL_PK(+)
    AND    DCD.GLBL_CMPY_CD                =    CCS.GLBL_CMPY_CD(+)
    AND    DCD.EZCANCELFLAG                =    CCS.EZCANCELFLAG(+)
    AND    CCS.DS_COV_SVC_TP_CD            =    CST.DS_COV_SVC_TP_CD(+)
    AND    CCS.GLBL_CMPY_CD                =    CST.GLBL_CMPY_CD(+)
    AND    CCS.EZCANCELFLAG                =    CST.EZCANCELFLAG(+)
    AND    SMM.SVC_CONFIG_MSTR_PK          =    SCM.SVC_CONFIG_MSTR_PK(+)
    AND    SMM.GLBL_CMPY_CD                =    SCM.GLBL_CMPY_CD(+)
    AND    SMM.EZCANCELFLAG                =    SCM.EZCANCELFLAG(+)
    AND    SCM.MDL_ID                      =    MDN.T_MDL_ID(+)
    AND    SCM.GLBL_CMPY_CD                =    MDN.T_GLBL_CMPY_CD(+)
    AND    SCM.EZCANCELFLAG                =    MDN.EZCANCELFLAG(+)
    AND    DCD.CTAC_PSN_PK                 =    CTP.CTAC_PSN_PK(+)
    AND    DCD.GLBL_CMPY_CD                =    CTP.GLBL_CMPY_CD(+)
    AND    DCD.EZCANCELFLAG                =    CTP.EZCANCELFLAG(+)
    AND    DBM.CTAC_PSN_PK                 =    CTM.CTAC_PSN_PK(+)
    AND    DBM.GLBL_CMPY_CD                =    CTM.GLBL_CMPY_CD(+)
    AND    DBM.EZCANCELFLAG                =    CTM.EZCANCELFLAG(+)
    AND    DCD.BASE_BLLG_CYCLE_CD          =    BCB.BLLG_CYCLE_CD(+)
    AND    DCD.GLBL_CMPY_CD                =    BCB.GLBL_CMPY_CD(+)
    AND    DCD.EZCANCELFLAG                =    BCB.EZCANCELFLAG(+)
    AND    DBM.BLLG_MTR_BLLG_CYCLE_CD      =    BCM.BLLG_CYCLE_CD(+)
    AND    DBM.GLBL_CMPY_CD                =    BCM.GLBL_CMPY_CD(+)
    AND    DBM.EZCANCELFLAG                =    BCM.EZCANCELFLAG(+)
    AND    DCD.GLBL_CMPY_CD                =    MDS.GLBL_CMPY_CD(+)
    AND    DCD.SVC_PGM_MDSE_CD             =    MDS.MDSE_CD(+)
    AND    DCD.EZCANCELFLAG                =    MDS.EZCANCELFLAG(+)
    AND    DCD.SHIP_TO_CUST_CD             =    SHP.SHIP_TO_CUST_CD(+)
    AND    DCD.GLBL_CMPY_CD                =    SHP.GLBL_CMPY_CD(+)
    AND    DCD.EZCANCELFLAG                =    SHP.EZCANCELFLAG(+)
    AND    DCD.GLBL_CMPY_CD                =    BSU.GLBL_CMPY_CD(+)
    AND    DCD.DS_CONTR_DTL_PK             =    BSU.DS_CONTR_DTL_PK(+)
    AND    DCD.EZCANCELFLAG                =    BSU.EZCANCELFLAG(+)
    <!-- START 2017/10/20 K.Kojima [QC#21232,DEL] -->
    <!-- AND    BSU.INV_FLG(+)                  =    'N' -->
    <!-- AND    BSU.USG_CHRG_FLG(+)             =    'Y' -->
    <!-- END 2017/10/20 K.Kojima [QC#21232,DEL] -->
    <!-- START 2017/08/31 K.Kojima [QC#18355,ADD] -->
    <!-- START 2017/10/20 K.Kojima [QC#21232,DEL] -->
    <!-- AND    BSU.DS_BLLG_SCHD_TP_CD(+)       =    #dsBllgSchdTpRegular# -->
    <!-- END 2017/10/20 K.Kojima [QC#21232,DEL] -->
    <!-- END 2017/08/31 K.Kojima [QC#18355,ADD] -->
    AND    DCD.GLBL_CMPY_CD                =    BSB.GLBL_CMPY_CD(+)
    AND    DCD.DS_CONTR_DTL_PK             =    BSB.DS_CONTR_DTL_PK(+)
    AND    DCD.EZCANCELFLAG                =    BSB.EZCANCELFLAG(+)
    <!-- START 2017/10/20 K.Kojima [QC#21232,DEL] -->
    <!-- AND    BSB.INV_FLG(+)                  =    'N' -->
    <!-- AND    BSB.BASE_CHRG_FLG(+)            =    'Y' -->
    <!-- END 2017/10/20 K.Kojima [QC#21232,DEL] -->
    <!-- START 2017/08/31 K.Kojima [QC#18355,ADD] -->
    <!-- START 2017/10/20 K.Kojima [QC#21232,DEL] -->
    <!-- AND    BSB.DS_BLLG_SCHD_TP_CD(+)       =    #dsBllgSchdTpRegular# -->
    <!-- END 2017/10/20 K.Kojima [QC#21232,DEL] -->
    <!-- END 2017/08/31 K.Kojima [QC#18355,ADD] -->
    <!-- START 2017/09/26 K.Kojima [QC#21221,ADD] -->
    AND    BSB.GLBL_CMPY_CD                =    CPE.GLBL_CMPY_CD(+)
    AND    BSB.DS_CONTR_PRC_EFF_PK         =    CPE.DS_CONTR_PRC_EFF_PK(+)
    AND    BSB.EZCANCELFLAG                =    CPE.EZCANCELFLAG(+)
    <!-- END 2017/09/26 K.Kojima [QC#21221,ADD] -->
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
    AND    SMM.CUR_LOC_NUM                 =    SHTC.SHIP_TO_CUST_CD(+)
    AND    SMM.GLBL_CMPY_CD                =    SHTC.GLBL_CMPY_CD(+)
    AND    SMM.EZCANCELFLAG                =    SHTC.EZCANCELFLAG(+)
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
) A
<!-- START 2017/10/20 K.Kojima [QC#21232,DEL] -->
<!-- WHERE -->
<!--     A.BASE_RANK = 1 -->
<!-- AND A.USG_RANK  = 1 -->
<!-- END 2017/10/20 K.Kojima [QC#21232,DEL] -->
ORDER BY
     MTR_LB_SORT_NUM
,    XS_MTR_COPY_QTY
</statement>

<statement id="getDsContrDtl1_Aggr" parameterClass="Map" resultClass="Map">
SELECT
    *
FROM
(
SELECT
     DCD.EZUPTIME
,    DCD.EZUPTIMEZONE
,    DCD.DS_CONTR_DTL_PK
<!-- START 2019/01/25 [QC#29782, MOD] -->
<!-- ,    DCD.PRNT_DS_CONTR_DTL_PK -->
,    CASE
         WHEN DCD.DS_CONTR_DTL_TP_CD = #dsContrDtlTpCd_Accessory# THEN DCD.PRNT_DS_CONTR_DTL_PK
         ELSE DCD.DS_CONTR_DTL_PK
     END  AS  PRNT_DS_CONTR_DTL_PK
<!-- END 2019/01/25 [QC#29782, MOD] -->
,    SMM.SVC_MACH_MSTR_PK
,    SMM.SER_NUM
,    SMM.MDSE_CD
,    MDN.T_MDL_NM    AS    MDL_NM
,    STC.FIRST_LINE_ADDR
,    STC.SCD_LINE_ADDR
,    STC.THIRD_LINE_ADDR
,    STC.FRTH_LINE_ADDR
,    STC.CTY_ADDR
,    STC.ST_CD
,    STC.POST_CD
,    SMM.SVC_CONFIG_MSTR_PK
,    DCD.DS_CONTR_DTL_TP_CD
,    DDS.DS_CONTR_DTL_STS_CD
,    DDS.DS_CONTR_DTL_STS_DESC_TXT
,    DCD.CONTR_EFF_FROM_DT
,    DCD.CONTR_EFF_THRU_DT
<!-- START 2017/09/26 K.Kojima [QC#21221,MOD] -->
<!-- ,    DCD.BASE_BLLG_CYCLE_CD -->
<!-- ,    BBC.BLLG_CYCLE_DESC_TXT -->
<!-- ,    DCD.BASE_PRC_DEAL_AMT -->
,    NVL(BSCHD.BLLG_CYCLE_CD, DCD.BASE_BLLG_CYCLE_CD)        AS BASE_BLLG_CYCLE_CD
,    NVL(BSCHD.BLLG_CYCLE_DESC_TXT, BBC.BLLG_CYCLE_DESC_TXT) AS BLLG_CYCLE_DESC_TXT
,    NVL(BSCHD.BASE_PRC_DEAL_AMT, DCD.BASE_PRC_DEAL_AMT)     AS BASE_PRC_DEAL_AMT
<!-- END 2017/09/26 K.Kojima [QC#21221,MOD] -->
,    DCD.MTR_READ_METH_CD
,    DDT.DS_CONTR_DTL_TP_SORT_NUM
,    DCD.RNW_EFF_FROM_DT
,    DCD.CONTR_RNW_TOT_CNT
<!-- START 2018/02/22 M.Naito [QC#23179,MOD] -->
<!-- ,    DECODE(DCD.CONTR_CLO_DT, NULL, NULL, TO_CHAR(TO_DATE(DCD.CONTR_CLO_DT,'YYYYMMDD') + 1, 'YYYYMMDD')) AS CONTR_CLO_DT -->
,    DCD.CONTR_CLO_DT
<!-- END 2018/02/22 M.Naito [QC#23179,MOD] -->
,    DDT.BASE_CHRG_FLG
,    DDT.USG_CHRG_FLG
,    (
        CASE
            WHEN
                EXISTS(
                    SELECT
                        *
                    FROM
                        DS_CONTR_DTL ASRY
                    WHERE
                            DCD.DS_CONTR_DTL_PK     =    ASRY.PRNT_DS_CONTR_DTL_PK
                        AND DCD.GLBL_CMPY_CD        =    ASRY.GLBL_CMPY_CD
                        AND DCD.EZCANCELFLAG        =    ASRY.EZCANCELFLAG
                        AND ASRY.DS_CONTR_DTL_TP_CD =    #dsContrDtlTpCd_Accessory#
                )
            THEN
                'Y'
            ELSE
                'N'
        END
     ) AS ASRY_FLG
,    (
        CASE
            WHEN
                EXISTS(
                    SELECT
                        *
                    FROM
                        DS_CONTR_BLLG_SCHD DCBS
                    WHERE
                            DCD.DS_CONTR_DTL_PK     =    DCBS.DS_CONTR_DTL_PK
                        AND DCD.GLBL_CMPY_CD        =    DCBS.GLBL_CMPY_CD
                        AND DCD.EZCANCELFLAG        =    DCBS.EZCANCELFLAG
                        AND DCBS.BASE_CHRG_FLG      =    'Y'
                )
            THEN
                'Y'
            ELSE
                'N'
        END
     ) AS BASE_PRC_DTL_FLG
,    (
        CASE
            WHEN
                EXISTS(
                    SELECT
                        *
                    FROM
                        DS_CONTR_BLLG_SCHD DCBS
                    WHERE
                            DCD.DS_CONTR_DTL_PK     =    DCBS.DS_CONTR_DTL_PK
                        AND DCD.GLBL_CMPY_CD        =    DCBS.GLBL_CMPY_CD
                        AND DCD.EZCANCELFLAG        =    DCBS.EZCANCELFLAG
                        AND DCBS.USG_CHRG_FLG       =    'Y'
                )
            THEN
                'Y'
            ELSE
                'N'
        END
     ) AS USG_PRC_DTL_FLG
,    NVL(SMMP.SER_NUM, SMM.SER_NUM)      AS SORT_SER_NUM
,    NVL(SMMP.MDSE_CD, SMM.MDSE_CD)      AS SORT_MDSE_CD
<!-- START 2017/02/06 N.Arai [QC#17197, MOD] -->
<!-- START 2018/02/19 K.Kojima [QC#24105, MOD] -->
<!-- ,    DCDV.DS_CONTR_CTRL_STS_NM -->
,    CASE
         WHEN     DCDV.DS_CONTR_CTRL_STS_CD = #entered#
             AND  SMM.SVC_MACH_MSTR_STS_CD  = #w4i#
         THEN #pendingInstallation#
         WHEN     DCDV.DS_CONTR_CTRL_STS_CD = #dsContrCtrlStsCdActive#
             AND (
                  SELECT
                      COUNT(*)
                  FROM
                       DS_CONTR_PRC_EFF       DCPE
                      ,DS_CONTR_PRC_EFF_STS_V DCPESV
                  WHERE
                        DCPE.GLBL_CMPY_CD           = DCD.GLBL_CMPY_CD
                    AND DCPE.DS_CONTR_DTL_PK        = DCD.DS_CONTR_DTL_PK
                    AND DCPE.EZCANCELFLAG           = '0'
                    AND DCPE.GLBL_CMPY_CD           = DCPESV.GLBL_CMPY_CD
                    AND DCPE.DS_CONTR_PRC_EFF_PK    = DCPESV.DS_CONTR_PRC_EFF_PK
                    AND DCPESV.DS_CONTR_CTRL_STS_CD = #dsContrCtrlStsCdRenewalHoldForPO#
                    AND DCPESV.EZCANCELFLAG         = '0'
                 ) &gt; 0
         THEN #activePendingPO#
         WHEN     DCDV.DS_CONTR_CTRL_STS_CD = #dsContrCtrlStsCdActive#
             AND (
                  SELECT
                      COUNT(*)
                  FROM
                       DS_CONTR_PRC_EFF       DCPE
                      ,DS_CONTR_PRC_EFF_STS_V DCPESV
                  WHERE
                        DCPE.GLBL_CMPY_CD           = DCD.GLBL_CMPY_CD
                    AND DCPE.DS_CONTR_DTL_PK        = DCD.DS_CONTR_DTL_PK
                    AND DCPE.EZCANCELFLAG           = '0'
                    AND DCPE.GLBL_CMPY_CD           = DCPESV.GLBL_CMPY_CD
                    AND DCPE.DS_CONTR_PRC_EFF_PK    = DCPESV.DS_CONTR_PRC_EFF_PK
                    AND DCPESV.DS_CONTR_CTRL_STS_CD = #dsContrCtrlStsCdRenewalHold#
                    AND DCPESV.EZCANCELFLAG         = '0'
                 ) &gt; 0
         THEN #activeRenewalHold#
         <!-- START 2022/02/04 K.Kitachi [QC#59684, ADD] -->
         WHEN     DCDV.QLTY_ASRN_HLD_FLG    = 'N'
             AND  DCD.MAN_TRMN_TP_CD        = #manTrmnTpCd#
         THEN #allPeriodTermination#
         <!-- END 2022/02/04 K.Kitachi [QC#59684, ADD] -->
         ELSE DCDV.DS_CONTR_CTRL_STS_NM
     END                            AS DS_CONTR_CTRL_STS_NM
<!-- END 2018/02/19 K.Kojima [QC#24105, MOD] -->
,    MDS.MDSE_DESC_SHORT_TXT
,    MRM.MTR_READ_METH_DESC_TXT
<!-- END 2017/02/06 N.Arai [QC#17197, MOD] -->
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
,    DCD.SVC_PGM_MDSE_CD
,    DCD.PRC_MTR_PKG_PK
,    PMP.PRC_MTR_PKG_NM
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
<!-- START 2019/01/17 [QC#29782, ADD] -->
,    SPT.SVC_PGM_TP_SORT_NUM
,    DCD.DS_CONTR_CRAT_TP_CD
<!-- END 2019/01/17 [QC#29782, ADD] -->
<!-- START 2019/01/21 T.Wada [QC#29371, ADD] -->
,    DCD.SVC_INV_MERGE_TP_CD
<!-- END 2019/01/21 T.Wada [QC#29371, ADD] -->
FROM
     DS_CONTR_DTL        DCD
,    SVC_MACH_MSTR       SMM
,    SHIP_TO_CUST        STC
,    SVC_CONFIG_MSTR     SCM
,    MDL_NM              MDN
,    DS_CONTR_DTL_STS    DDS
,    BLLG_CYCLE          BBC
,    DS_CONTR_DTL_TP     DDT
,    DS_CONTR_DTL        DCDP
,    SVC_MACH_MSTR       SMMP
<!-- START 2017/02/06 N.Arai [QC#17197, MOD] -->
,    DS_CONTR_DTL_STS_V  DCDV
,    MDSE                MDS
,    MTR_READ_METH       MRM
<!-- END 2017/02/06 N.Arai [QC#17197, MOD] -->
<!-- START 2017/09/26 K.Kojima [QC#21221,ADD] -->
    ,(
        SELECT
             DS_CONTR_DTL_PK
            ,BLLG_CYCLE_CD
            ,BASE_PRC_DEAL_AMT
            ,BLLG_CYCLE_DESC_TXT
        FROM
            (
                SELECT
                     BDCD.DS_CONTR_DTL_PK
                    ,BDCPE.BLLG_CYCLE_CD
                    ,BDCPE.BASE_PRC_DEAL_AMT
                    ,BBBC.BLLG_CYCLE_DESC_TXT
                    ,DENSE_RANK() OVER (PARTITION BY BDCD.DS_CONTR_DTL_PK ORDER BY BDCBS.NEXT_BLLG_DT, BDCBS.DS_CONTR_BLLG_SCHD_PK) AS BASE_RANK
                FROM
                     DS_CONTR_DTL       BDCD
                    ,DS_CONTR_BLLG_SCHD BDCBS
                    ,DS_CONTR_PRC_EFF   BDCPE
                    ,BLLG_CYCLE         BBBC
                WHERE
                        BDCD.GLBL_CMPY_CD         = #glblCmpyCd#
                    AND BDCD.DS_CONTR_PK          = #dsContrPk#
                    AND BDCD.EZCANCELFLAG         = '0'
                    AND BDCD.GLBL_CMPY_CD         = BDCBS.GLBL_CMPY_CD
                    AND BDCD.DS_CONTR_DTL_PK      = BDCBS.DS_CONTR_DTL_PK
                    AND BDCBS.INV_FLG             = 'N'
                    AND BDCBS.BASE_CHRG_FLG       = 'Y'
                    <!-- START 2023/12/21 t.aizawa [QC#63377,ADD] -->
                    AND BDCBS.SKIP_RECOV_TP_CD    &lt;&gt; #skip#
                    <!-- END   2023/12/21 t.aizawa [QC#63377,ADD] -->
                    AND BDCBS.DS_BLLG_SCHD_TP_CD  = #dsBllgSchdTpRegular#
                    AND BDCBS.EZCANCELFLAG        = '0'
                    AND BDCBS.GLBL_CMPY_CD        = BDCPE.GLBL_CMPY_CD
                    AND BDCBS.DS_CONTR_PRC_EFF_PK = BDCPE.DS_CONTR_PRC_EFF_PK
                    AND BDCPE.EZCANCELFLAG        = '0'
                    AND BDCPE.GLBL_CMPY_CD        = BBBC.GLBL_CMPY_CD
                    AND BDCPE.BLLG_CYCLE_CD       = BBBC.BLLG_CYCLE_CD
                    AND BBBC.EZCANCELFLAG         = '0'
            )
        WHERE
            BASE_RANK = 1
     ) BSCHD
<!-- END 2017/09/26 K.Kojima [QC#21221,ADD] -->
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
,    PRC_MTR_PKG         PMP
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
<!-- START 2019/01/17 [QC#29782, ADD] -->
,    SVC_PGM_TP          SPT
<!-- END 2019/01/17 [QC#29782, ADD] -->
WHERE
    DCD.DS_CONTR_PK                =    #dsContrPk#
AND    DCD.GLBL_CMPY_CD            =    #glblCmpyCd#
AND    DCD.EZCANCELFLAG            =    '0'
AND    DCD.DS_CONTR_DTL_TP_CD     !=    #dsContrDtlTpCd#
AND    DCD.SVC_MACH_MSTR_PK        =    SMM.SVC_MACH_MSTR_PK(+)
AND    DCD.GLBL_CMPY_CD            =    SMM.GLBL_CMPY_CD(+)
AND    DCD.EZCANCELFLAG            =    SMM.EZCANCELFLAG(+)
AND    SMM.CUR_LOC_NUM             =    STC.SHIP_TO_CUST_CD(+)
AND    SMM.GLBL_CMPY_CD            =    STC.GLBL_CMPY_CD(+)
AND    SMM.EZCANCELFLAG            =    STC.EZCANCELFLAG(+)
AND    SMM.SVC_CONFIG_MSTR_PK      =    SCM.SVC_CONFIG_MSTR_PK(+)
AND    SMM.GLBL_CMPY_CD            =    SCM.GLBL_CMPY_CD(+)
AND    SMM.EZCANCELFLAG            =    SCM.EZCANCELFLAG(+)
AND    SCM.MDL_ID                  =    MDN.T_MDL_ID(+)
AND    SCM.GLBL_CMPY_CD            =    MDN.T_GLBL_CMPY_CD(+)
AND    SCM.EZCANCELFLAG            =    MDN.EZCANCELFLAG(+)
AND    DCD.DS_CONTR_DTL_STS_CD     =    DDS.DS_CONTR_DTL_STS_CD(+)
AND    DCD.GLBL_CMPY_CD            =    DDS.GLBL_CMPY_CD(+)
AND    DCD.EZCANCELFLAG            =    DDS.EZCANCELFLAG(+)
AND    DCD.BASE_BLLG_CYCLE_CD      =    BBC.BLLG_CYCLE_CD(+)
AND    DCD.GLBL_CMPY_CD            =    BBC.GLBL_CMPY_CD(+)
AND    DCD.EZCANCELFLAG            =    BBC.EZCANCELFLAG(+)
AND    DCD.DS_CONTR_DTL_TP_CD      =    DDT.DS_CONTR_DTL_TP_CD
AND    DDT.SVC_PRC_FLG             =    #svcPrcFlg#
AND    DCD.GLBL_CMPY_CD            =    DDT.GLBL_CMPY_CD
AND    DCD.EZCANCELFLAG            =    DDT.EZCANCELFLAG
AND    DCD.PRNT_DS_CONTR_DTL_PK    =    DCDP.DS_CONTR_DTL_PK(+)
AND    DCD.GLBL_CMPY_CD            =    DCDP.GLBL_CMPY_CD(+)
AND    DCD.EZCANCELFLAG            =    DCDP.EZCANCELFLAG(+)
AND    DCDP.SVC_MACH_MSTR_PK       =    SMMP.SVC_MACH_MSTR_PK(+)
AND    DCDP.GLBL_CMPY_CD           =    SMMP.GLBL_CMPY_CD(+)
AND    DCDP.EZCANCELFLAG           =    SMMP.EZCANCELFLAG(+)
<!-- START 2017/02/06 N.Arai [QC#17197, MOD] -->
AND    DCD.GLBL_CMPY_CD            =    DCDV.GLBL_CMPY_CD
AND    DCD.DS_CONTR_DTL_PK         =    DCDV.DS_CONTR_DTL_PK
AND    DCD.EZCANCELFLAG            =    DCDV.EZCANCELFLAG
AND    DCD.GLBL_CMPY_CD            =    MDS.GLBL_CMPY_CD(+)
AND    DCD.SVC_PGM_MDSE_CD         =    MDS.MDSE_CD(+)
AND    DCD.EZCANCELFLAG            =    MDS.EZCANCELFLAG(+)
AND    DCD.GLBL_CMPY_CD            =    MRM.GLBL_CMPY_CD(+)
AND    DCD.MTR_READ_METH_CD        =    MRM.MTR_READ_METH_CD(+)
AND    DCD.EZCANCELFLAG            =    MRM.EZCANCELFLAG(+)
<!-- END 2017/02/06 N.Arai [QC#17197, MOD] -->
<!-- START 2017/09/26 K.Kojima [QC#21221,ADD] -->
AND    DCD.DS_CONTR_DTL_PK     =    BSCHD.DS_CONTR_DTL_PK(+)
<!-- END 2017/09/26 K.Kojima [QC#21221,ADD] -->
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
AND    DCD.GLBL_CMPY_CD        =    PMP.GLBL_CMPY_CD(+)
AND    DCD.PRC_MTR_PKG_PK      =    PMP.PRC_MTR_PKG_PK(+)
AND    DCD.EZCANCELFLAG        =    PMP.EZCANCELFLAG(+)
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
<!-- START 2019/01/17 [QC#29782, ADD] -->
AND    MDS.GLBL_CMPY_CD            =    SPT.GLBL_CMPY_CD(+)
AND    MDS.SVC_PGM_TP_CD           =    SPT.SVC_PGM_TP_CD(+)
AND    MDS.EZCANCELFLAG            =    SPT.EZCANCELFLAG(+)
<!-- END 2019/01/17 [QC#29782, ADD] -->
)
ORDER BY
     SORT_SER_NUM
,    SORT_MDSE_CD
<!-- START 2022/01/06 R.Cabral [QC#59502, ADD] -->
,    NVL(PRNT_DS_CONTR_DTL_PK, DS_CONTR_DTL_PK)
<!-- END   2022/01/06 R.Cabral [QC#59502, ADD] -->
<!-- START 2019/01/17 [QC#29782, ADD] -->
<!-- START 2022/03/08 R.Cabral [QC#59502-1, ADD] -->
,    DS_CONTR_DTL_TP_SORT_NUM
<!-- END   2022/03/08 R.Cabral [QC#59502-1, ADD] -->
,    SVC_PGM_TP_SORT_NUM
,    NVL(DS_CONTR_CRAT_TP_CD, #dsContrCratTp#)
,    PRNT_DS_CONTR_DTL_PK
<!-- END 2019/01/17 [QC#29782, ADD] -->
<!-- START 2022/03/08 R.Cabral [QC#59502-1, DEL] -->
<!-- ,    DS_CONTR_DTL_TP_SORT_NUM -->
<!-- END   2022/03/08 R.Cabral [QC#59502-1, DEL] -->
<!-- START 2017/08/02 K.Kitachi [QC#18116, ADD] -->
,    DS_CONTR_DTL_PK
<!-- END 2017/08/02 K.Kitachi [QC#18116, ADD] -->
</statement>

<statement id="getDsContrDtl2_Aggr" parameterClass="Map" resultClass="Map">
<!-- START 2018/04/09 K.Kojima [QC#24802, ADD] -->
WITH TARGET_DS_CONTR AS (
    SELECT
        *
    FROM
        DS_CONTR DC
    WHERE
            DC.GLBL_CMPY_CD = #glblCmpyCd#
        AND DC.DS_CONTR_PK  = #dsContrPk#
        AND DC.EZCANCELFLAG = '0'
)
,TARGET_DS_CONTR_DTL AS (
    SELECT
        *
    FROM
        DS_CONTR_DTL DCD
    WHERE
            DCD.GLBL_CMPY_CD = #glblCmpyCd#
        AND DCD.DS_CONTR_PK  = #dsContrPk#
        AND DCD.EZCANCELFLAG = '0'
)
,TARGET_DS_CONTR_BLLG_MTR AS (
    SELECT
        *
    FROM
        DS_CONTR_BLLG_MTR DCBM
    WHERE
            DCBM.GLBL_CMPY_CD = #glblCmpyCd#
        AND DCBM.EZCANCELFLAG = '0'
        AND EXISTS(SELECT 1 FROM TARGET_DS_CONTR_DTL DCD WHERE DCD.DS_CONTR_DTL_PK = DCBM.DS_CONTR_DTL_PK)
)
,TARGET_DS_CONTR_PRC_EFF AS (
    SELECT
        *
    FROM
        DS_CONTR_PRC_EFF DCPE
    WHERE
            DCPE.GLBL_CMPY_CD = #glblCmpyCd#
        AND DCPE.EZCANCELFLAG = '0'
        AND EXISTS(SELECT 1 FROM TARGET_DS_CONTR_DTL DCD WHERE DCD.DS_CONTR_DTL_PK = DCPE.DS_CONTR_DTL_PK)
)
,TARGET_DS_CONTR_BLLG_SCHD_SMRY AS (
    SELECT
        *
    FROM
        DS_CONTR_BLLG_SCHD_SMRY DCBSS
    WHERE
            DCBSS.GLBL_CMPY_CD = #glblCmpyCd#
        AND DCBSS.EZCANCELFLAG = '0'
        AND EXISTS(SELECT 1 FROM TARGET_DS_CONTR_DTL DCD WHERE DCD.DS_CONTR_DTL_PK = DCBSS.DS_CONTR_DTL_PK)
)
,TARGET_DS_CONTR_BLLG_SCHD AS (
    SELECT
        *
    FROM
        DS_CONTR_BLLG_SCHD DCBS
    WHERE
            DCBS.GLBL_CMPY_CD = #glblCmpyCd#
        AND DCBS.EZCANCELFLAG = '0'
        AND EXISTS(SELECT 1 FROM TARGET_DS_CONTR_DTL DCD WHERE DCD.DS_CONTR_DTL_PK = DCBS.DS_CONTR_DTL_PK)
)
<!-- END 2018/04/09 K.Kojima [QC#24802, ADD] -->
SELECT
    *
FROM
(
    SELECT
        *
    FROM (
        SELECT
             DCD.EZUPTIME                    AS    EZUPTIME_BD
        ,    DCD.EZUPTIMEZONE                AS    EZUPTIMEZONE_BD
        ,    DCD.DS_CONTR_DTL_PK
<!-- START 2019/01/25 [QC#29782, MOD] -->
<!--         ,    DCD.PRNT_DS_CONTR_DTL_PK -->
        ,    0                               AS    PRNT_DS_CONTR_DTL_PK
<!-- END 2019/01/25 [QC#29782, MOD] -->
        ,    SMM.SVC_CONFIG_MSTR_PK          AS    SVC_CONFIG_MSTR_PK
        ,    SMM.SVC_MACH_MSTR_PK            AS    SVC_MACH_MSTR_PK
        ,    SMM.SER_NUM                     AS    SER_NUM
        ,    SMM.MDSE_CD                     AS    MDSE_CD
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
        ,    MDS2.MDSE_DESC_SHORT_TXT        AS    MDSE_DESC_SHORT_TXT_BI
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
        ,    DCD.CONTR_EFF_FROM_DT
        ,    DCD.CONTR_EFF_THRU_DT
        ,    DCD.DS_CONTR_DTL_TP_CD
        ,    DCD.DS_CONTR_DTL_STS_CD
        ,    DCD.MTR_READ_METH_CD
        ,    DCD.RNW_EFF_FROM_DT
        ,    DCD.CONTR_RNW_TOT_CNT
<!-- START 2018/02/22 M.Naito [QC#23179,MOD] -->
<!--         ,    DECODE(DCD.CONTR_CLO_DT, NULL, NULL, TO_CHAR(TO_DATE(DCD.CONTR_CLO_DT,'YYYYMMDD') + 1, 'YYYYMMDD')) AS CONTR_CLO_DT -->
        ,    DCD.CONTR_CLO_DT
<!-- END 2018/02/22 M.Naito [QC#23179,MOD] -->
<!-- START 2018/01/10 T.Tomita [QC#18552, MOD] -->
        ,    SMM.CUR_LOC_NUM                 AS    SHIP_TO_CUST_CD
        ,    SHTC.LOC_NM                     AS    SHIP_TO_LOC_NM
        ,    SHTC.FIRST_LINE_ADDR            AS    SHIP_FIRST_LINE_ADDR
        ,    SHTC.SCD_LINE_ADDR              AS    SHIP_SCD_LINE_ADDR
        ,    SHTC.THIRD_LINE_ADDR            AS    SHIP_THIRD_LINE_ADDR
        ,    SHTC.FRTH_LINE_ADDR             AS    SHIP_FRTH_LINE_ADDR
        ,    SHTC.CTY_ADDR                   AS    SHIP_CTY_ADDR
        ,    SHTC.ST_CD                      AS    SHIP_ST_CD
        ,    SHTC.POST_CD                    AS    SHIP_POST_CD
        ,    SMM.FLD_SVC_BR_CD
        ,    (
             SELECT
                 A.SVC_BR_CD_DESC_TXT
             FROM (
                 SELECT DISTINCT
                     SBPX.SVC_BR_CD_DESC_TXT
                 FROM
                     SVC_BR_POST_XREF SBPX
                 WHERE
                     SBPX.GLBL_CMPY_CD    = SMM.GLBL_CMPY_CD
                 AND SBPX.EZCANCELFLAG    = SMM.EZCANCELFLAG
                 AND SBPX.SVC_LINE_BIZ_CD = SMM.SVC_BY_LINE_BIZ_TP_CD
                 AND SBPX.SVC_BR_CD       = SMM.FLD_SVC_BR_CD
                 ) A
             WHERE
                 ROWNUM                   = 1
             )                               AS    SVC_BR_CD_DESC_TXT
<!-- END   2018/01/10 T.Tomita [QC#18552, MOD] -->
        <!-- Base -->
        ,    DCD.BASE_BILL_TO_CUST_CD
        ,    BTB.LOC_NM                      AS    BASE_BILL_TO_LOC_NM
        ,    BTB.FIRST_LINE_ADDR             AS    BASE_FIRST_LINE_ADDR
        ,    BTB.SCD_LINE_ADDR               AS    BASE_SCD_LINE_ADDR
        ,    BTB.THIRD_LINE_ADDR             AS    BASE_THIRD_LINE_ADDR
        ,    BTB.FRTH_LINE_ADDR              AS    BASE_FRTH_LINE_ADDR
        ,    BTB.CTY_ADDR                    AS    BASE_CTY_ADDR
        ,    BTB.ST_CD                       AS    BASE_ST_CD
        ,    BTB.POST_CD                     AS    BASE_POST_CD
        ,    DCD.BASE_DPLY_PER_END_DAY
        ,    DCD.CONTR_CLO_DAY               AS    BASE_CLO_DAY
        ,    DCD.CONTR_BLLG_DAY              AS    BASE_BLLG_DAY
        ,    CCS.CONTR_COV_SVC_PK
        ,    CCS.DS_COV_SVC_TP_CD
        ,    DCD.SVC_PGM_MDSE_CD
        ,    MDS.MDSE_DESC_SHORT_TXT
        <!-- START 2017/09/26 K.Kojima [QC#21221,ADD] -->
        <isEqual property="forScheduleFlag" compareValue="Y">
        <!-- END 2017/09/26 K.Kojima [QC#21221,ADD] -->
        ,    DCD.BASE_BLLG_CYCLE_CD
        ,    DCD.BASE_PRC_DEAL_AMT
        <!-- START 2017/09/26 K.Kojima [QC#21221,ADD] -->
        </isEqual>
        <isEqual property="forScheduleFlag" compareValue="N">
        ,    NVL(CPE.BLLG_CYCLE_CD, DCD.BASE_BLLG_CYCLE_CD)    AS BASE_BLLG_CYCLE_CD
        <!-- START 2018/05/22 U.Kim [QC#24854, MOD] -->
        <!-- ,    NVL(CPE.BASE_PRC_DEAL_AMT, DCD.BASE_PRC_DEAL_AMT) AS BASE_PRC_DEAL_AMT -->
        ,    NVL(BSB.BASE_PRC_DEAL_AMT, DCD.BASE_PRC_DEAL_AMT) AS BASE_PRC_DEAL_AMT
        <!-- END 2018/05/22 U.Kim [QC#24854, MOD] -->
        </isEqual>
        <!-- END 2017/09/26 K.Kojima [QC#21221,ADD] -->
        ,    DCD.BASE_BLLG_TMG_CD
        ,    BCB.BLLG_CYCLE_START_MTH        AS    BASE_BLLG_CYCLE_START_MTH
        <!-- Usage -->
        ,    DCD.USG_BILL_TO_CUST_CD
        ,    BTU.LOC_NM                      AS    USG_BILL_TO_LOC_NM
        ,    DCD.MTR_DPLY_PER_END_DAY
        ,    DCD.MTR_CLO_DAY                 AS    MTR_CLO_DAY
        ,    DCD.MTR_BLLG_DAY                AS    MTR_BLLG_DAY
        ,    DBM.EZUPTIME                    AS    EZUPTIME_BM
        ,    DBM.EZUPTIMEZONE                AS    EZUPTIMEZONE_BM
        ,    DBM.DS_CONTR_BLLG_MTR_PK
        ,    DBM.BLLG_MTR_LB_CD
        ,    COALESCE(DBM.BLLG_MTR_BILL_TO_CUST_CD, DCD.USG_BILL_TO_CUST_CD)    AS    BLLG_MTR_BILL_TO_CUST_CD
        ,    MLB.MTR_LB_DESC_TXT
        ,    MLB.MTR_LB_SORT_NUM
        ,    DBM.BLLG_MTR_BLLG_CYCLE_CD
        ,    DCD.MTR_BLLG_TMG_CD
        ,    DBM.XS_CHRG_TP_CD
        ,    CXC.EZUPTIME                    AS    EZUPTIME_BX
        ,    CXC.EZUPTIMEZONE                AS    EZUPTIMEZONE_BX
        ,    CXC.CONTR_XS_COPY_PK
        ,    CXC.XS_MTR_COPY_QTY
        ,    CXC.XS_MTR_AMT_RATE
        ,    DDT.DS_CONTR_DTL_TP_SORT_NUM
        ,    MDN.T_MDL_NM                    AS    MDL_NM
        ,    BSB.NEXT_BLLG_DT                AS    BASE_NEXT_BLLG_DT
        <!-- START 2017/10/20 K.Kojima [QC#21232,DEL] -->
        <!-- ,    DENSE_RANK() OVER (PARTITION BY BSB.DS_CONTR_DTL_PK ORDER BY BSB.NEXT_BLLG_DT, BSB.DS_CONTR_BLLG_SCHD_PK) AS BASE_RANK -->
        <!-- END 2017/10/20 K.Kojima [QC#21232,DEL] -->
        ,    BSU.NEXT_BLLG_DT                AS    USG_NEXT_BLLG_DT
        <!-- START 2017/10/20 K.Kojima [QC#21232,DEL] -->
        <!-- ,    DENSE_RANK() OVER (PARTITION BY BSU.DS_CONTR_DTL_PK ORDER BY BSU.NEXT_BLLG_DT, BSU.DS_CONTR_BLLG_SCHD_PK) AS USG_RANK -->
        <!-- END 2017/10/20 K.Kojima [QC#21232,DEL] -->
        ,    DCD.CTAC_PSN_PK
<!-- START 2018/06/18 K.Kitachi [QC#18591, MOD] -->
<!--         ,    RTRIM(CTP.CTAC_PSN_FIRST_NM || ' ' || CTP.CTAC_PSN_LAST_NM) AS PSN_NM -->
        ,    CTP.CTAC_PSN_FIRST_NM           AS    CTAC_PSN_FIRST_NM
        ,    CTP.CTAC_PSN_LAST_NM            AS    CTAC_PSN_LAST_NM
<!-- END 2018/06/18 K.Kitachi [QC#18591, MOD] -->
        ,    DCD.BASE_PRC_TERM_DEAL_AMT_RATE
        ,    COALESCE(BTM.LOC_NM, BTU.LOC_NM)                            AS BLLG_MTR_BILL_TO_LOC_NM
        ,    DBM.CTAC_PSN_PK                                             AS BLLG_MTR_CTAC_PSN_PK
<!-- START 2018/06/18 K.Kitachi [QC#18591, MOD] -->
<!--         ,    RTRIM(CTM.CTAC_PSN_FIRST_NM || ' ' || CTM.CTAC_PSN_LAST_NM) AS BLLG_MTR_PSN_NM -->
        ,    CTM.CTAC_PSN_FIRST_NM                                       AS BLLG_MTR_CTAC_PSN_FIRST_NM
        ,    CTM.CTAC_PSN_LAST_NM                                        AS BLLG_MTR_CTAC_PSN_LAST_NM
<!-- END 2018/06/18 K.Kitachi [QC#18591, MOD] -->
        ,    DBM.BLLG_MIN_CNT
        ,    DBM.BLLG_MIN_AMT_RATE
        ,    DBM.BLLG_ROLL_OVER_RATIO
        ,    DBM.BLLG_FREE_COPY_CNT
<!-- START 2019/01/17 M.Naito [QC#29083,ADD] -->
        ,    DBM.CUM_COPY_CNT
        ,    DBM.CUM_COPY_FREQ_MTH_AOT
        ,    DBM.CUM_COPY_START_DT
        ,    DBM.CUM_COPY_END_DT
<!-- END 2019/01/17 M.Naito [QC#29083,ADD] -->
        ,    BTM.FIRST_LINE_ADDR
        ,    BTM.SCD_LINE_ADDR
        ,    BTM.THIRD_LINE_ADDR
        ,    BTM.FRTH_LINE_ADDR
        ,    BTM.CTY_ADDR
        ,    BTM.ST_CD
        ,    BTM.POST_CD
        ,    BCM.BLLG_CYCLE_START_MTH AS MTR_BLLG_CYCLE_START_MTH
        ,    (
                CASE
                    WHEN
                        EXISTS(
                            SELECT
                                *
                            FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                                 DS_CONTR_PRC_EFF DPE -->
                                TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                            WHERE
                                    DCD.DS_CONTR_DTL_PK       =    DPE.DS_CONTR_DTL_PK
                                AND DCD.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                                AND DCD.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                                AND DPE.BASE_CHRG_FLG         =    'Y'
                            <isEqual property="CancelledFlg" compareValue="Y">
                                AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                            </isEqual>
                            <isEqual property="CancelledFlg" compareValue="N">
                                AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                            </isEqual>
                        )
                    THEN
                        'Y'
                    ELSE
                        'N'
                END
             ) AS BASE_PRC_FLG
        ,    (
                CASE
                    WHEN
                        EXISTS(
                            SELECT
                                *
                            FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                                 DS_CONTR_PRC_EFF DPE -->
                                TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                            WHERE
                                    DBM.DS_CONTR_BLLG_MTR_PK  =    DPE.DS_CONTR_BLLG_MTR_PK
                                AND DBM.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                                AND DBM.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                                AND DPE.USG_CHRG_FLG          =    'Y'
                            <isEqual property="CancelledFlg" compareValue="Y">
                                AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                            </isEqual>
                            <isEqual property="CancelledFlg" compareValue="N">
                                AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                            </isEqual>
                        )
                    THEN
                        'Y'
                    ELSE
                        'N'
                END
             ) AS USG_PRC_FLG
        ,    (
                CASE
                    WHEN
                        EXISTS(
                            SELECT
                                *
                            FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                                  DS_CONTR_PRC_EFF         DPE -->
<!--                                 ,DS_CONTR_BLLG_SCHD_SMRY  DBS -->
                                 TARGET_DS_CONTR_PRC_EFF         DPE
                                ,TARGET_DS_CONTR_BLLG_SCHD_SMRY  DBS
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                            WHERE
                                    DCD.DS_CONTR_DTL_PK       =    DPE.DS_CONTR_DTL_PK
                                AND DCD.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                                AND DCD.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                                AND DPE.BASE_CHRG_FLG         =    'Y'
                            <isEqual property="CancelledFlg" compareValue="Y">
                                AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                            </isEqual>
                            <isEqual property="CancelledFlg" compareValue="N">
                                AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                            </isEqual>
                                AND DPE.DS_CONTR_PRC_EFF_PK   =    DBS.DS_CONTR_PRC_EFF_PK
                                AND DPE.GLBL_CMPY_CD          =    DBS.GLBL_CMPY_CD
                                AND DPE.EZCANCELFLAG          =    DBS.EZCANCELFLAG
                        )
                    THEN
                        'Y'
                    ELSE
                        'N'
                END
             ) AS BASE_TOP_SCHEDULE_FLG
        ,    (
                CASE
                    WHEN
                        EXISTS(
                            SELECT
                                *
                            FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                                  DS_CONTR_PRC_EFF         DPE -->
<!--                                 ,DS_CONTR_BLLG_SCHD_SMRY  DBS -->
                                 TARGET_DS_CONTR_PRC_EFF         DPE
                                ,TARGET_DS_CONTR_BLLG_SCHD_SMRY  DBS
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                            WHERE
                                    DBM.DS_CONTR_BLLG_MTR_PK  =    DPE.DS_CONTR_BLLG_MTR_PK
                                AND DBM.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                                AND DBM.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                                AND DPE.USG_CHRG_FLG          =    'Y'
                            <isEqual property="CancelledFlg" compareValue="Y">
                                AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                            </isEqual>
                            <isEqual property="CancelledFlg" compareValue="N">
                                AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                            </isEqual>
                                AND DPE.DS_CONTR_PRC_EFF_PK   =    DBS.DS_CONTR_PRC_EFF_PK
                                AND DPE.GLBL_CMPY_CD          =    DBS.GLBL_CMPY_CD
                                AND DPE.EZCANCELFLAG          =    DBS.EZCANCELFLAG
                        )
                    THEN
                        'Y'
                    ELSE
                        'N'
                END
             ) AS USG_TOP_SCHEDULE_FLG
        ,    (
                SELECT
                    DS_CONTR_PRC_EFF_PK
                FROM (
                    SELECT
                         DPE.DS_CONTR_PRC_EFF_PK
                        ,3                            AS SORT_KEY1
                        ,(TO_DATE(#slsDt#, 'YYYYMMDD') - TO_DATE(DPE.CONTR_PRC_EFF_THRU_DT, 'YYYYMMDD'))  AS SORT_KEY2
                    FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                         DS_CONTR_PRC_EFF DPE -->
                        TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                    WHERE
                            DCD.DS_CONTR_DTL_PK       =    DPE.DS_CONTR_DTL_PK
                        AND DCD.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                        AND DCD.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                        AND DPE.BASE_CHRG_FLG         =    'Y'
                        AND DPE.CONTR_PRC_EFF_THRU_DT &lt; #slsDt#
                    <isEqual property="CancelledFlg" compareValue="Y">
                        AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                    </isEqual>
                    <isEqual property="CancelledFlg" compareValue="N">
                        AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                    </isEqual>
                    UNION
                    SELECT
                         DPE.DS_CONTR_PRC_EFF_PK
                        ,1                            AS SORT_KEY1
                        ,0                            AS SORT_KEY2
                    FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                         DS_CONTR_PRC_EFF DPE -->
                        TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                    WHERE
                            DCD.DS_CONTR_DTL_PK       =    DPE.DS_CONTR_DTL_PK
                        AND DCD.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                        AND DCD.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                        AND DPE.BASE_CHRG_FLG         =    'Y'
                        AND DPE.CONTR_PRC_EFF_FROM_DT &lt;= #slsDt#
                        AND DPE.CONTR_PRC_EFF_THRU_DT &gt;= #slsDt#
                    <isEqual property="CancelledFlg" compareValue="Y">
                        AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                    </isEqual>
                    <isEqual property="CancelledFlg" compareValue="N">
                        AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                    </isEqual>
                    UNION
                    SELECT
                         DPE.DS_CONTR_PRC_EFF_PK
                        ,2                            AS SORT_KEY1
                        ,(TO_DATE(DPE.CONTR_PRC_EFF_FROM_DT, 'YYYYMMDD') - TO_DATE(#slsDt#, 'YYYYMMDD'))  AS SORT_KEY2
                    FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                         DS_CONTR_PRC_EFF DPE -->
                        TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                    WHERE
                            DCD.DS_CONTR_DTL_PK       =    DPE.DS_CONTR_DTL_PK
                        AND DCD.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                        AND DCD.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                        AND DPE.BASE_CHRG_FLG         =    'Y'
                        AND DPE.CONTR_PRC_EFF_FROM_DT &gt;= #slsDt#
                    <isEqual property="CancelledFlg" compareValue="Y">
                        AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                    </isEqual>
                    <isEqual property="CancelledFlg" compareValue="N">
                        AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                    </isEqual>
                    ORDER BY
                         SORT_KEY1                    ASC
                        ,SORT_KEY2                    ASC
                        ,DS_CONTR_PRC_EFF_PK          DESC
                )
                WHERE
                    ROWNUM = 1
             ) AS BASE_BLLG_DS_CONTR_PRC_EFF_PK
        ,    (
                SELECT
                    DS_CONTR_PRC_EFF_PK
                FROM (
                    SELECT
                        DPE.DS_CONTR_PRC_EFF_PK
                        ,3                            AS SORT_KEY1
                        ,(TO_DATE(#slsDt#, 'YYYYMMDD') - TO_DATE(DPE.CONTR_PRC_EFF_THRU_DT, 'YYYYMMDD'))  AS SORT_KEY2
                    FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                         DS_CONTR_PRC_EFF DPE -->
                        TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                    WHERE
                            DBM.DS_CONTR_BLLG_MTR_PK  =    DPE.DS_CONTR_BLLG_MTR_PK
                        AND DBM.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                        AND DBM.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                        AND DPE.USG_CHRG_FLG          =    'Y'
                        AND DPE.CONTR_PRC_EFF_THRU_DT &lt; #slsDt#
                    <isEqual property="CancelledFlg" compareValue="Y">
                        AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                    </isEqual>
                    <isEqual property="CancelledFlg" compareValue="N">
                        AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                    </isEqual>
                    UNION
                    SELECT
                        DPE.DS_CONTR_PRC_EFF_PK
                        ,1                            AS SORT_KEY1
                        ,0                            AS SORT_KEY2
                    FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                         DS_CONTR_PRC_EFF DPE -->
                        TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                    WHERE
                            DBM.DS_CONTR_BLLG_MTR_PK  =    DPE.DS_CONTR_BLLG_MTR_PK
                        AND DBM.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                        AND DBM.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                        AND DPE.USG_CHRG_FLG          =    'Y'
                        AND DPE.CONTR_PRC_EFF_FROM_DT &lt;= #slsDt#
                        AND DPE.CONTR_PRC_EFF_THRU_DT &gt;= #slsDt#
                    <isEqual property="CancelledFlg" compareValue="Y">
                        AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                    </isEqual>
                    <isEqual property="CancelledFlg" compareValue="N">
                        AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                    </isEqual>
                    UNION
                    SELECT
                        DPE.DS_CONTR_PRC_EFF_PK
                        ,2                            AS SORT_KEY1
                        ,(TO_DATE(DPE.CONTR_PRC_EFF_FROM_DT, 'YYYYMMDD') - TO_DATE(#slsDt#, 'YYYYMMDD'))  AS SORT_KEY2
                    FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                         DS_CONTR_PRC_EFF DPE -->
                        TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                    WHERE
                            DBM.DS_CONTR_BLLG_MTR_PK  =    DPE.DS_CONTR_BLLG_MTR_PK
                        AND DBM.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                        AND DBM.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                        AND DPE.USG_CHRG_FLG          =    'Y'
                        AND DPE.CONTR_PRC_EFF_FROM_DT &gt;= #slsDt#
                    <isEqual property="CancelledFlg" compareValue="Y">
                        AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                    </isEqual>
                    <isEqual property="CancelledFlg" compareValue="N">
                        AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                    </isEqual>
                    ORDER BY
                         SORT_KEY1                    ASC
                        ,SORT_KEY2                    ASC
                        ,DS_CONTR_PRC_EFF_PK          DESC
                )
                WHERE
                    ROWNUM = 1
             ) AS BLLG_MTR_DS_CONTR_PRC_EFF_PK
        ,    SMM.SER_NUM                         AS SORT_SER_NUM
        ,    SMM.MDSE_CD                         AS SORT_MDSE_CD
<!-- START 2017/09/13 K.Kim [QC#19938, ADD] -->
        ,    (
                CASE
                    WHEN
<!-- START 2018/08/24 T.Tomita [QC#26687, ADD] -->
                        (
                            SELECT
                                COUNT(*)
                            FROM
                                TARGET_DS_CONTR_BLLG_SCHD SCHD
                            WHERE
                                SCHD.GLBL_CMPY_CD        =    DCD.GLBL_CMPY_CD
                            AND SCHD.DS_CONTR_DTL_PK     =    DCD.DS_CONTR_DTL_PK
                            AND SCHD.EZCANCELFLAG        =    '0'
                            AND SCHD.BASE_CHRG_FLG       =    'Y'
                        ) > 0
                        AND
<!-- END 2018/08/24 T.Tomita [QC#26687, ADD] -->
                        NOT EXISTS(
                        SELECT
                            *
                        FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                             DS_CONTR_BLLG_SCHD BSB2 -->
                            TARGET_DS_CONTR_BLLG_SCHD BSB2
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                        WHERE
                                DCD.DS_CONTR_DTL_PK     =    BSB2.DS_CONTR_DTL_PK
                            AND DCD.GLBL_CMPY_CD        =    BSB2.GLBL_CMPY_CD
                            AND DCD.EZCANCELFLAG        =    BSB2.EZCANCELFLAG
                            AND BSB2.BASE_CHRG_FLG      =    'Y'
                            AND BSB2.DS_BLLG_SCHD_STS_CD &lt;&gt; #dsBllgSchdStsCdCl#
                        )
                    THEN
                        'Y'
                    ELSE
                        'N'
                END
             ) AS BASE_BILLED_FLG
        ,    (
                CASE
                    WHEN
<!-- START 2018/08/24 T.Tomita [QC#26687, ADD] -->
                        (
                            SELECT
                                COUNT(*)
                            FROM
                                TARGET_DS_CONTR_BLLG_SCHD SCHD
                            WHERE
                                SCHD.GLBL_CMPY_CD        =    DCD.GLBL_CMPY_CD
                            AND SCHD.DS_CONTR_DTL_PK     =    DCD.DS_CONTR_DTL_PK
                            AND SCHD.EZCANCELFLAG        =    '0'
                            AND SCHD.USG_CHRG_FLG        =    'Y'
                        ) > 0
                        AND
<!-- END 2018/08/24 T.Tomita [QC#26687, ADD] -->
                        NOT EXISTS(
                        SELECT
                            *
                        FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                             DS_CONTR_BLLG_SCHD BSU2 -->
                            TARGET_DS_CONTR_BLLG_SCHD BSU2
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                        WHERE
                                DCD.DS_CONTR_DTL_PK     =    BSU2.DS_CONTR_DTL_PK
                            AND DCD.GLBL_CMPY_CD        =    BSU2.GLBL_CMPY_CD
                            AND DCD.EZCANCELFLAG        =    BSU2.EZCANCELFLAG
                            AND BSU2.USG_CHRG_FLG       =    'Y'
                            AND BSU2.DS_BLLG_SCHD_STS_CD &lt;&gt; #dsBllgSchdStsCdCl#
                        )
                    THEN
                        'Y'
                    ELSE
                        'N'
                END
             ) AS USG_BILLED_FLG
        ,    DCD.BILL_WITH_EQUIP_FLG
<!-- END 2017/09/13 K.Kim [QC#19938, ADD] -->
<!-- START 2017/09/21 K.Kitachi [QC#21222, ADD] -->
    ,   (
            CASE
                WHEN
                    (
                        SELECT
                            COUNT(*)
                        FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                             DS_CONTR_PRC_EFF DPE -->
                            TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                        WHERE
                                DCD.DS_CONTR_DTL_PK         =    DPE.DS_CONTR_DTL_PK
                            AND DCD.GLBL_CMPY_CD            =    DPE.GLBL_CMPY_CD
                            AND DCD.EZCANCELFLAG            =    DPE.EZCANCELFLAG
                            AND DPE.BASE_CHRG_FLG           =    'Y'
                            <iterate property="dsContrPrcEffStsCdList" var="dsContrPrcEffStsCd[]" open="AND DPE.DS_CONTR_PRC_EFF_STS_CD NOT IN (" close=")" conjunction=",">
                                #dsContrPrcEffStsCd[]#
                            </iterate>
                    ) > 1
                THEN
                    'Y'
                ELSE
                    'N'
            END
         ) AS BASE_PRC_EFF_MULTI_FLG
<!-- END 2017/09/21 K.Kitachi [QC#21222, ADD] -->
<!-- START 2023/08/18 T.Kojima [QC#60846, ADD] -->
        ,    'N'                             AS    USG_PRC_EFF_MULTI_FLG
<!-- END 2023/08/18 T.Kojima [QC#60846, ADD] -->
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
        ,(
            SELECT
                COUNT(*)
            FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                  DS_CONTR_DTL    DTL -->
                 TARGET_DS_CONTR_DTL    DTL
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                ,DS_CONTR_DTL_TP TP
            WHERE
                DTL.GLBL_CMPY_CD       = DCD.GLBL_CMPY_CD
            AND DTL.DS_CONTR_PK        = DCD.DS_CONTR_PK
            AND DTL.EZCANCELFLAG       = '0'
            AND DTL.GLBL_CMPY_CD       = TP.GLBL_CMPY_CD
            AND DTL.DS_CONTR_DTL_TP_CD = TP.DS_CONTR_DTL_TP_CD
            AND TP.EZCANCELFLAG        = '0'
            AND TP.MAIN_UNIT_LINE_FLG  = 'Y'
         ) UNIT_CNT
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
<!-- START 2019/01/21 T.Wada [QC#29371, ADD] -->
         ,DCD.SVC_INV_MERGE_TP_CD
<!-- END 2019/01/21 T.Wada [QC#29371, ADD] -->
<!-- START 2019/01/17 [QC#29782, ADD] -->
        ,    SPT.SVC_PGM_TP_SORT_NUM
        ,    DCD.DS_CONTR_CRAT_TP_CD
<!-- END 2019/01/17 [QC#29782, ADD] -->
        FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--              DS_CONTR_DTL        DCD -->
             TARGET_DS_CONTR_DTL        DCD
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
        ,    SVC_MACH_MSTR       SMM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--         ,    DS_CONTR            DCR -->
        ,    TARGET_DS_CONTR            DCR
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
        ,    SELL_TO_CUST        STC
        ,    BILL_TO_CUST        BTB
        ,    BILL_TO_CUST        BTU
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--         ,    DS_CONTR_BLLG_MTR   DBM -->
        ,    TARGET_DS_CONTR_BLLG_MTR   DBM
<!-- END2018/04/09 K.Kojima [QC#24802, MOD] -->
        ,    BILL_TO_CUST        BTM
        ,    MTR_LB              MLB
        ,    CONTR_XS_COPY       CXC
        ,    DS_CONTR_DTL_TP     DDT
        ,    CONTR_COV_SVC       CCS
        ,    DS_COV_SVC_TP       CST
        ,    SVC_CONFIG_MSTR     SCM
        ,    MDL_NM              MDN
        ,    CTAC_PSN            CTP
        ,    CTAC_PSN            CTM
        ,    BLLG_CYCLE          BCB
        ,    BLLG_CYCLE          BCM
        ,    MDSE                MDS
        <!-- START 2017/10/20 K.Kojima [QC#21232,MOD] -->
        <!-- ,    DS_CONTR_BLLG_SCHD  BSU -->
        <!-- ,    DS_CONTR_BLLG_SCHD  BSB -->
        ,(
            SELECT
                 GLBL_CMPY_CD
                ,DS_CONTR_DTL_PK
                ,NEXT_BLLG_DT
                ,DS_CONTR_PRC_EFF_PK
                ,EZCANCELFLAG
            FROM
                (
                    SELECT
                         BDCBS.GLBL_CMPY_CD
                        ,BDCBS.DS_CONTR_DTL_PK
                        ,BDCBS.NEXT_BLLG_DT
                        ,BDCBS.DS_CONTR_PRC_EFF_PK
                        ,DENSE_RANK() OVER (PARTITION BY BDCD.DS_CONTR_DTL_PK ORDER BY BDCBS.NEXT_BLLG_DT, BDCBS.DS_CONTR_BLLG_SCHD_PK) AS USG_RANK
                        ,BDCBS.EZCANCELFLAG
                    FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                          DS_CONTR_DTL       BDCD -->
<!--                         ,DS_CONTR_BLLG_SCHD BDCBS -->
                         TARGET_DS_CONTR_DTL       BDCD
                        ,TARGET_DS_CONTR_BLLG_SCHD BDCBS
<!-- END2018/04/09 K.Kojima [QC#24802, MOD] -->
                    WHERE
                            BDCD.GLBL_CMPY_CD         = #glblCmpyCd#
                        AND BDCD.DS_CONTR_PK          = #dsContrPk#
                        <!-- START 2022/03/24 K.Kitachi [QC#59684, ADD] -->
                        AND (
                                BDCD.MAN_TRMN_TP_CD   IS NULL
                            OR
                                BDCD.MAN_TRMN_TP_CD   &lt;&gt; #manTrmnTpCd#
                            )
                        <!-- END 2022/03/24 K.Kitachi [QC#59684, ADD] -->
                        <!-- START 2023/10/05 H.Iinuma [QC#61675, ADD] -->
                        <!-- START 2024/03/12 Y.Nagasawaa [QC#61675, MOD] -->
                        <!-- AND (                                                         -->
                        <!--         BDCD.DS_CONTR_DTL_STS_CD &lt;&gt; #dsContrDtlStsTrmd# -->
                        <!--     OR                                                        -->
                        <!--         BDCD.MTR_HLD_FLG         &lt;&gt; 'N'                 -->
                        <!--     )                                                         -->
                        AND BDCBS.BLLG_SCHD_THRU_DT  &lt;= NVL(BDCD.CONTR_CLO_DT, BDCD.CONTR_EFF_THRU_DT)
                        <!-- EMD 2024/03/12 Y.Nagasawaa [QC#61675, MOD] -->
                        <!-- END 2023/10/05 H.Iinuma [QC#61675, ADD] -->
                        AND BDCD.EZCANCELFLAG         = '0'
                        AND BDCD.GLBL_CMPY_CD         = BDCBS.GLBL_CMPY_CD
                        AND BDCD.DS_CONTR_DTL_PK      = BDCBS.DS_CONTR_DTL_PK
                        AND BDCBS.INV_FLG             = 'N'
                        AND BDCBS.USG_CHRG_FLG        = 'Y'
                        AND BDCBS.DS_BLLG_SCHD_TP_CD  = #dsBllgSchdTpRegular#
                        AND BDCBS.EZCANCELFLAG        = '0'
                        <!-- START 2023/04/14 L.Borrega [QC#61370, ADD] -->
                        AND BDCBS.SKIP_RECOV_TP_CD    = #skipRecovTpNone#
                        <!-- END 2023/04/14 L.Borrega [QC#61370, ADD] -->
                )
            WHERE
                USG_RANK = 1
         ) BSU
        ,(
            SELECT
                 GLBL_CMPY_CD
                ,DS_CONTR_DTL_PK
                ,NEXT_BLLG_DT
                ,DS_CONTR_PRC_EFF_PK
                <!-- START 2018/05/22 U.Kim [QC#24854, ADD] -->
                ,BASE_PRC_DEAL_AMT
                <!-- END 2018/05/22 U.Kim [QC#24854, ADD] -->
                ,EZCANCELFLAG
            FROM
                (
                    SELECT
                         BDCBS.GLBL_CMPY_CD
                        ,BDCBS.DS_CONTR_DTL_PK
                        ,BDCBS.NEXT_BLLG_DT
                        ,BDCBS.DS_CONTR_PRC_EFF_PK
                        <!-- START 2018/05/22 U.Kim [QC#24854, ADD] -->
                        ,BDCBS.BASE_PRC_DEAL_AMT
                        <!-- END 2018/05/22 U.Kim [QC#24854, ADD] -->
                        ,DENSE_RANK() OVER (PARTITION BY BDCD.DS_CONTR_DTL_PK ORDER BY BDCBS.NEXT_BLLG_DT, BDCBS.DS_CONTR_BLLG_SCHD_PK) AS BASE_RANK
                        ,BDCBS.EZCANCELFLAG
                    FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                          DS_CONTR_DTL       BDCD -->
<!--                         ,DS_CONTR_BLLG_SCHD BDCBS -->
                         TARGET_DS_CONTR_DTL       BDCD
                        ,TARGET_DS_CONTR_BLLG_SCHD BDCBS
<!-- END2018/04/09 K.Kojima [QC#24802, MOD] -->
                    WHERE
                            BDCD.GLBL_CMPY_CD         = #glblCmpyCd#
                        AND BDCD.DS_CONTR_PK          = #dsContrPk#
                        AND BDCD.EZCANCELFLAG         = '0'
                        AND BDCD.GLBL_CMPY_CD         = BDCBS.GLBL_CMPY_CD
                        AND BDCD.DS_CONTR_DTL_PK      = BDCBS.DS_CONTR_DTL_PK
                        AND BDCBS.INV_FLG             = 'N'
                        AND BDCBS.BASE_CHRG_FLG       = 'Y'
                        AND BDCBS.DS_BLLG_SCHD_TP_CD  = #dsBllgSchdTpRegular#
                        AND BDCBS.EZCANCELFLAG        = '0'
                        <!-- START 2023/04/14 L.Borrega [QC#61370, ADD] -->
                        AND BDCBS.SKIP_RECOV_TP_CD    = #skipRecovTpNone#
                        <!-- END 2023/04/14 L.Borrega [QC#61370, ADD] -->
                )
            WHERE
                BASE_RANK = 1
         ) BSB
        <!-- END 2017/10/20 K.Kojima [QC#21232,MOD] -->
<!-- START 2017/09/26 K.Kojima [QC#21221,ADD] -->
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--         ,    DS_CONTR_PRC_EFF    CPE -->
        ,    TARGET_DS_CONTR_PRC_EFF    CPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!-- END 2017/09/26 K.Kojima [QC#21221,ADD] -->
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
        ,    MDSE                MDS2
        ,    SHIP_TO_CUST        SHTC
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
<!-- START 2019/01/17 [QC#29782, ADD] -->
        ,    SVC_PGM_TP          SPT
<!-- END 2019/01/17 [QC#29782, ADD] -->
        WHERE
            DCD.DS_CONTR_PK                    =    #dsContrPk#
        AND    DCD.DS_CONTR_DTL_TP_CD          =    #dsContrDtlTpCd#
        AND    DCD.GLBL_CMPY_CD                =    #glblCmpyCd#
        AND    DCD.EZCANCELFLAG                =    '0'
        AND    DCD.SVC_MACH_MSTR_PK            =    SMM.SVC_MACH_MSTR_PK(+)
        AND    DCD.GLBL_CMPY_CD                =    SMM.GLBL_CMPY_CD(+)
        AND    DCD.EZCANCELFLAG                =    SMM.EZCANCELFLAG(+)
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
        AND    SMM.MDSE_CD                     =    MDS2.MDSE_CD(+)
        AND    SMM.GLBL_CMPY_CD                =    MDS2.GLBL_CMPY_CD(+)
        AND    SMM.EZCANCELFLAG                =    MDS2.EZCANCELFLAG(+)
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
        AND    DCR.DS_CONTR_PK                 =    DCD.DS_CONTR_PK
        AND    DCR.GLBL_CMPY_CD                =    DCD.GLBL_CMPY_CD
        AND    DCR.EZCANCELFLAG                =    DCD.EZCANCELFLAG
        AND    DCR.SELL_TO_CUST_CD             =    STC.SELL_TO_CUST_CD(+)
        AND    DCR.GLBL_CMPY_CD                =    STC.GLBL_CMPY_CD(+)
        AND    DCR.EZCANCELFLAG                =    STC.EZCANCELFLAG(+)
        AND    DCD.BASE_BILL_TO_CUST_CD        =    BTB.BILL_TO_CUST_CD(+)
        AND    DCD.GLBL_CMPY_CD                =    BTB.GLBL_CMPY_CD(+)
        AND    DCD.EZCANCELFLAG                =    BTB.EZCANCELFLAG(+)
        AND    DCD.USG_BILL_TO_CUST_CD         =    BTU.BILL_TO_CUST_CD(+)
        AND    DCD.GLBL_CMPY_CD                =    BTU.GLBL_CMPY_CD(+)
        AND    DCD.EZCANCELFLAG                =    BTU.EZCANCELFLAG(+)
        AND    DCD.DS_CONTR_DTL_PK             =    DBM.DS_CONTR_DTL_PK(+)
        AND    DCD.GLBL_CMPY_CD                =    DBM.GLBL_CMPY_CD(+)
        AND    DCD.EZCANCELFLAG                =    DBM.EZCANCELFLAG(+)
<!-- START 2017/08/25 U.Kim [QC#20728,ADD] -->
        AND    DBM.DS_CONTR_BLLG_MTR_STS_CD(+) &lt;&gt; #dsContrDtlStsOrdr#
<!-- END 2017/08/25 U.Kim [QC#20728,ADD] -->
        AND    DBM.BLLG_MTR_BILL_TO_CUST_CD    =    BTM.BILL_TO_CUST_CD(+)
        AND    DBM.GLBL_CMPY_CD                =    BTM.GLBL_CMPY_CD(+)
        AND    DBM.EZCANCELFLAG                =    BTM.EZCANCELFLAG(+)
        AND    DBM.BLLG_MTR_LB_CD              =    MLB.MTR_LB_CD(+)
        AND    DBM.GLBL_CMPY_CD                =    MLB.GLBL_CMPY_CD(+)
        AND    DBM.EZCANCELFLAG                =    MLB.EZCANCELFLAG(+)
        AND    DBM.DS_CONTR_BLLG_MTR_PK        =    CXC.DS_CONTR_BLLG_MTR_PK(+)
        AND    DBM.GLBL_CMPY_CD                =    CXC.GLBL_CMPY_CD(+)
        AND    DBM.EZCANCELFLAG                =    CXC.EZCANCELFLAG(+)
        AND    DCD.DS_CONTR_DTL_TP_CD          =    DDT.DS_CONTR_DTL_TP_CD
        AND    DCD.GLBL_CMPY_CD                =    DDT.GLBL_CMPY_CD
        AND    DCD.EZCANCELFLAG                =    DDT.EZCANCELFLAG
        AND    DCD.DS_CONTR_DTL_PK             =    CCS.DS_CONTR_DTL_PK(+)
        AND    DCD.GLBL_CMPY_CD                =    CCS.GLBL_CMPY_CD(+)
        AND    DCD.EZCANCELFLAG                =    CCS.EZCANCELFLAG(+)
        AND    CCS.DS_COV_SVC_TP_CD            =    CST.DS_COV_SVC_TP_CD(+)
        AND    CCS.GLBL_CMPY_CD                =    CST.GLBL_CMPY_CD(+)
        AND    CCS.EZCANCELFLAG                =    CST.EZCANCELFLAG(+)
        AND    SMM.SVC_CONFIG_MSTR_PK          =    SCM.SVC_CONFIG_MSTR_PK(+)
        AND    SMM.GLBL_CMPY_CD                =    SCM.GLBL_CMPY_CD(+)
        AND    SMM.EZCANCELFLAG                =    SCM.EZCANCELFLAG(+)
        AND    SCM.MDL_ID                      =    MDN.T_MDL_ID(+)
        AND    SCM.GLBL_CMPY_CD                =    MDN.T_GLBL_CMPY_CD(+)
        AND    SCM.EZCANCELFLAG                =    MDN.EZCANCELFLAG(+)
        AND    DCD.CTAC_PSN_PK                 =    CTP.CTAC_PSN_PK(+)
        AND    DCD.GLBL_CMPY_CD                =    CTP.GLBL_CMPY_CD(+)
        AND    DCD.EZCANCELFLAG                =    CTP.EZCANCELFLAG(+)
        AND    DBM.CTAC_PSN_PK                 =    CTM.CTAC_PSN_PK(+)
        AND    DBM.GLBL_CMPY_CD                =    CTM.GLBL_CMPY_CD(+)
        AND    DBM.EZCANCELFLAG                =    CTM.EZCANCELFLAG(+)
        AND    DCD.BASE_BLLG_CYCLE_CD          =    BCB.BLLG_CYCLE_CD(+)
        AND    DCD.GLBL_CMPY_CD                =    BCB.GLBL_CMPY_CD(+)
        AND    DCD.EZCANCELFLAG                =    BCB.EZCANCELFLAG(+)
        AND    DBM.BLLG_MTR_BLLG_CYCLE_CD      =    BCM.BLLG_CYCLE_CD(+)
        AND    DBM.GLBL_CMPY_CD                =    BCM.GLBL_CMPY_CD(+)
        AND    DBM.EZCANCELFLAG                =    BCM.EZCANCELFLAG(+)
        AND    DCD.GLBL_CMPY_CD                =    MDS.GLBL_CMPY_CD(+)
        AND    DCD.SVC_PGM_MDSE_CD             =    MDS.MDSE_CD(+)
        AND    DCD.EZCANCELFLAG                =    MDS.EZCANCELFLAG(+)
        AND    DCD.GLBL_CMPY_CD                =    BSU.GLBL_CMPY_CD(+)
        AND    DCD.DS_CONTR_DTL_PK             =    BSU.DS_CONTR_DTL_PK(+)
        AND    DCD.EZCANCELFLAG                =    BSU.EZCANCELFLAG(+)
        <!-- START 2017/10/20 K.Kojima [QC#21232,DEL] -->
        <!-- AND    BSU.INV_FLG(+)                  =    'N' -->
        <!-- AND    BSU.USG_CHRG_FLG(+)             =    'Y' -->
        <!-- END 2017/10/20 K.Kojima [QC#21232,DEL] -->
        <!-- START 2017/08/31 K.Kojima [QC#18355,ADD] -->
        <!-- START 2017/10/20 K.Kojima [QC#21232,DEL] -->
        <!-- AND    BSU.DS_BLLG_SCHD_TP_CD(+)       =    #dsBllgSchdTpRegular# -->
        <!-- END 2017/10/20 K.Kojima [QC#21232,DEL] -->
        <!-- END 2017/08/31 K.Kojima [QC#18355,ADD] -->
        AND    DCD.GLBL_CMPY_CD                =    BSB.GLBL_CMPY_CD(+)
        AND    DCD.DS_CONTR_DTL_PK             =    BSB.DS_CONTR_DTL_PK(+)
        AND    DCD.EZCANCELFLAG                =    BSB.EZCANCELFLAG(+)
        <!-- START 2017/10/20 K.Kojima [QC#21232,DEL] -->
        <!-- AND    BSB.INV_FLG(+)                  =    'N' -->
        <!-- AND    BSB.BASE_CHRG_FLG(+)            =    'Y' -->
        <!-- END 2017/10/20 K.Kojima [QC#21232,DEL] -->
        <!-- START 2017/08/31 K.Kojima [QC#18355,ADD] -->
        <!-- START 2017/10/20 K.Kojima [QC#21232,DEL] -->
        <!-- AND    BSB.DS_BLLG_SCHD_TP_CD(+)       =    #dsBllgSchdTpRegular# -->
        <!-- END 2017/10/20 K.Kojima [QC#21232,DEL] -->
        <!-- END 2017/08/31 K.Kojima [QC#18355,ADD] -->
        <!-- START 2017/09/26 K.Kojima [QC#21221,ADD] -->
        AND    BSB.GLBL_CMPY_CD                =    CPE.GLBL_CMPY_CD(+)
        AND    BSB.DS_CONTR_PRC_EFF_PK         =    CPE.DS_CONTR_PRC_EFF_PK(+)
        AND    BSB.EZCANCELFLAG                =    CPE.EZCANCELFLAG(+)
        <!-- END 2017/09/26 K.Kojima [QC#21221,ADD] -->
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
        AND    SMM.CUR_LOC_NUM                 =    SHTC.SHIP_TO_CUST_CD(+)
        AND    SMM.GLBL_CMPY_CD                =    SHTC.GLBL_CMPY_CD(+)
        AND    SMM.EZCANCELFLAG                =    SHTC.EZCANCELFLAG(+)
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
<!-- START 2019/01/17 [QC#29782, ADD] -->
        AND    MDS.GLBL_CMPY_CD                =    SPT.GLBL_CMPY_CD(+)
        AND    MDS.SVC_PGM_TP_CD               =    SPT.SVC_PGM_TP_CD(+)
        AND    MDS.EZCANCELFLAG                =    SPT.EZCANCELFLAG(+)
<!-- END 2019/01/17 [QC#29782, ADD] -->
    ) A
    <!-- START 2017/10/20 K.Kojima [QC#21232,DEL] -->
    <!-- WHERE -->
    <!--     A.BASE_RANK = 1 -->
    <!-- AND A.USG_RANK  = 1 -->
    <!-- END 2017/10/20 K.Kojima [QC#21232,DEL] -->
    UNION
    SELECT
        *
    FROM (
        SELECT
            DCD.EZUPTIME                     AS    EZUPTIME_BD
        ,    DCD.EZUPTIMEZONE                AS    EZUPTIMEZONE_BD
<!-- START 2019/01/25 [QC#29782, MOD] -->
        ,    DCD.DS_CONTR_DTL_PK             AS    DS_CONTR_DTL_PK
        ,    DCD.DS_CONTR_DTL_PK             AS    PRNT_DS_CONTR_DTL_PK
<!-- END 2019/01/25 [QC#29782, MOD] -->
        ,    SMM.SVC_CONFIG_MSTR_PK
        ,    SMM.SVC_MACH_MSTR_PK
        ,    SMM.SER_NUM
        ,    SMM.MDSE_CD
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
        ,    MDS2.MDSE_DESC_SHORT_TXT        AS    MDSE_DESC_SHORT_TXT_BI
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
        ,    DCD.CONTR_EFF_FROM_DT
        ,    DCD.CONTR_EFF_THRU_DT
        ,    DCD.DS_CONTR_DTL_TP_CD
        ,    DCD.DS_CONTR_DTL_STS_CD
        ,    DCD.MTR_READ_METH_CD
        ,    DCD.RNW_EFF_FROM_DT
        ,    DCD.CONTR_RNW_TOT_CNT
<!-- START 2018/02/22 M.Naito [QC#23179,MOD] -->
<!--         ,    DECODE(DCD.CONTR_CLO_DT, NULL, NULL, TO_CHAR(TO_DATE(DCD.CONTR_CLO_DT,'YYYYMMDD') + 1, 'YYYYMMDD')) AS CONTR_CLO_DT -->
        ,    DCD.CONTR_CLO_DT
<!-- END 2018/02/22 M.Naito [QC#23179,MOD] -->
<!-- START 2018/01/10 T.Tomita [QC#18552, MOD] -->
        ,    SMM.CUR_LOC_NUM                 AS    SHIP_TO_CUST_CD
        ,    SHTC.LOC_NM                     AS    SHIP_TO_LOC_NM
        ,    SHTC.FIRST_LINE_ADDR            AS    SHIP_FIRST_LINE_ADDR
        ,    SHTC.SCD_LINE_ADDR              AS    SHIP_SCD_LINE_ADDR
        ,    SHTC.THIRD_LINE_ADDR            AS    SHIP_THIRD_LINE_ADDR
        ,    SHTC.FRTH_LINE_ADDR             AS    SHIP_FRTH_LINE_ADDR
        ,    SHTC.CTY_ADDR                   AS    SHIP_CTY_ADDR
        ,    SHTC.ST_CD                      AS    SHIP_ST_CD
        ,    SHTC.POST_CD                    AS    SHIP_POST_CD
        ,    SMM.FLD_SVC_BR_CD
        ,    (
             SELECT
                 A.SVC_BR_CD_DESC_TXT
             FROM (
                 SELECT DISTINCT
                     SBPX.SVC_BR_CD_DESC_TXT
                 FROM
                     SVC_BR_POST_XREF SBPX
                 WHERE
                     SBPX.GLBL_CMPY_CD    = SMM.GLBL_CMPY_CD
                 AND SBPX.EZCANCELFLAG    = SMM.EZCANCELFLAG
                 AND SBPX.SVC_LINE_BIZ_CD = SMM.SVC_BY_LINE_BIZ_TP_CD
                 AND SBPX.SVC_BR_CD       = SMM.FLD_SVC_BR_CD
                 ) A
             WHERE
                 ROWNUM                   = 1
             )                               AS    SVC_BR_CD_DESC_TXT
<!-- END   2018/01/10 T.Tomita [QC#18552, MOD] -->
        <!-- Base -->
        ,    DCD.BASE_BILL_TO_CUST_CD
        ,    BTB.LOC_NM                      AS    BASE_BILL_TO_LOC_NM
        ,    BTB.FIRST_LINE_ADDR             AS    BASE_FIRST_LINE_ADDR
        ,    BTB.SCD_LINE_ADDR               AS    BASE_SCD_LINE_ADDR
        ,    BTB.THIRD_LINE_ADDR             AS    BASE_THIRD_LINE_ADDR
        ,    BTB.FRTH_LINE_ADDR              AS    BASE_FRTH_LINE_ADDR
        ,    BTB.CTY_ADDR                    AS    BASE_CTY_ADDR
        ,    BTB.ST_CD                       AS    BASE_ST_CD
        ,    BTB.POST_CD                     AS    BASE_POST_CD
        ,    DCD.BASE_DPLY_PER_END_DAY
        ,    DCD.CONTR_CLO_DAY               AS    BASE_CLO_DAY
        ,    DCD.CONTR_BLLG_DAY              AS    BASE_BLLG_DAY
        ,    CCS.CONTR_COV_SVC_PK
        ,    CCS.DS_COV_SVC_TP_CD
        ,    DCD.SVC_PGM_MDSE_CD
        ,    MDS.MDSE_DESC_SHORT_TXT
        <!-- START 2017/09/26 K.Kojima [QC#21221,ADD] -->
        <isEqual property="forScheduleFlag" compareValue="Y">
        <!-- END 2017/09/26 K.Kojima [QC#21221,ADD] -->
        ,    DCD.BASE_BLLG_CYCLE_CD
        ,    DCD.BASE_PRC_DEAL_AMT
        <!-- START 2017/09/26 K.Kojima [QC#21221,ADD] -->
        </isEqual>
        <isEqual property="forScheduleFlag" compareValue="N">
        ,    NVL(CPE.BLLG_CYCLE_CD, DCD.BASE_BLLG_CYCLE_CD)    AS BASE_BLLG_CYCLE_CD
        ,    NVL(CPE.BASE_PRC_DEAL_AMT, DCD.BASE_PRC_DEAL_AMT) AS BASE_PRC_DEAL_AMT
        </isEqual>
        <!-- END 2017/09/26 K.Kojima [QC#21221,ADD] -->
        ,    DCD.BASE_BLLG_TMG_CD
        ,    BCB.BLLG_CYCLE_START_MTH        AS    BASE_BLLG_CYCLE_START_MTH
        <!-- Usage -->
        ,    DCD.USG_BILL_TO_CUST_CD
        ,    BTU.LOC_NM                      AS    USG_BILL_TO_LOC_NM
        ,    DCD.MTR_DPLY_PER_END_DAY
        ,    DCD.MTR_CLO_DAY                 AS    MTR_CLO_DAY
        ,    DCD.MTR_BLLG_DAY                AS    MTR_BLLG_DAY
        ,    DBM.EZUPTIME                    AS    EZUPTIME_BM
        ,    DBM.EZUPTIMEZONE                AS    EZUPTIMEZONE_BM
        ,    DBM.DS_CONTR_BLLG_MTR_PK
        ,    DBM.BLLG_MTR_LB_CD
        ,    COALESCE(DBM.BLLG_MTR_BILL_TO_CUST_CD, DCD.USG_BILL_TO_CUST_CD)    AS    BLLG_MTR_BILL_TO_CUST_CD
        ,    MLB.MTR_LB_DESC_TXT
        ,    MLB.MTR_LB_SORT_NUM
        ,    DBM.BLLG_MTR_BLLG_CYCLE_CD
        ,    DCD.MTR_BLLG_TMG_CD
        ,    DBM.XS_CHRG_TP_CD
        ,    CXC.EZUPTIME                    AS    EZUPTIME_BX
        ,    CXC.EZUPTIMEZONE                AS    EZUPTIMEZONE_BX
        ,    CXC.CONTR_XS_COPY_PK
        ,    CXC.XS_MTR_COPY_QTY
        ,    CXC.XS_MTR_AMT_RATE
        ,    DDT.DS_CONTR_DTL_TP_SORT_NUM
        ,    MDN.T_MDL_NM                    AS    MDL_NM
        ,    BSB.NEXT_BLLG_DT                AS    BASE_NEXT_BLLG_DT
        <!-- START 2017/10/20 K.Kojima [QC#21232,DEL] -->
        <!-- ,    DENSE_RANK() OVER (PARTITION BY BSB.DS_CONTR_DTL_PK ORDER BY BSB.NEXT_BLLG_DT, BSB.DS_CONTR_BLLG_SCHD_PK) AS BASE_RANK -->
        <!-- END 2017/10/20 K.Kojima [QC#21232,DEL] -->
        ,    BSU.NEXT_BLLG_DT                AS    USG_NEXT_BLLG_DT
        <!-- START 2017/10/20 K.Kojima [QC#21232,DEL] -->
        <!-- ,    DENSE_RANK() OVER (PARTITION BY BSU.DS_CONTR_DTL_PK ORDER BY BSU.NEXT_BLLG_DT, BSU.DS_CONTR_BLLG_SCHD_PK) AS USG_RANK -->
        <!-- END 2017/10/20 K.Kojima [QC#21232,DEL] -->
        ,    DCD.CTAC_PSN_PK
<!-- START 2018/06/18 K.Kitachi [QC#18591, MOD] -->
<!--         ,    RTRIM(CTP.CTAC_PSN_FIRST_NM || ' ' || CTP.CTAC_PSN_LAST_NM) AS PSN_NM -->
        ,    CTP.CTAC_PSN_FIRST_NM           AS    CTAC_PSN_FIRST_NM
        ,    CTP.CTAC_PSN_LAST_NM            AS    CTAC_PSN_LAST_NM
<!-- END 2018/06/18 K.Kitachi [QC#18591, MOD] -->
        ,    DCD.BASE_PRC_TERM_DEAL_AMT_RATE
        ,    COALESCE(BTM.LOC_NM, BTU.LOC_NM)                            AS BLLG_MTR_BILL_TO_LOC_NM
        ,    DBM.CTAC_PSN_PK                                             AS BLLG_MTR_CTAC_PSN_PK
<!-- START 2018/06/18 K.Kitachi [QC#18591, MOD] -->
<!--         ,    RTRIM(CTM.CTAC_PSN_FIRST_NM || ' ' || CTM.CTAC_PSN_LAST_NM) AS BLLG_MTR_PSN_NM -->
        ,    CTM.CTAC_PSN_FIRST_NM                                       AS BLLG_MTR_CTAC_PSN_FIRST_NM
        ,    CTM.CTAC_PSN_LAST_NM                                        AS BLLG_MTR_CTAC_PSN_LAST_NM
<!-- END 2018/06/18 K.Kitachi [QC#18591, MOD] -->
        ,    DBM.BLLG_MIN_CNT
        ,    DBM.BLLG_MIN_AMT_RATE
        ,    DBM.BLLG_ROLL_OVER_RATIO
        ,    DBM.BLLG_FREE_COPY_CNT
<!-- START 2019/01/17 M.Naito [QC#29083,ADD] -->
        ,    DBM.CUM_COPY_CNT
        ,    DBM.CUM_COPY_FREQ_MTH_AOT
        ,    DBM.CUM_COPY_START_DT
        ,    DBM.CUM_COPY_END_DT
<!-- END 2019/01/17 M.Naito [QC#29083,ADD] -->
        ,    BTM.FIRST_LINE_ADDR
        ,    BTM.SCD_LINE_ADDR
        ,    BTM.THIRD_LINE_ADDR
        ,    BTM.FRTH_LINE_ADDR
        ,    BTM.CTY_ADDR
        ,    BTM.ST_CD
        ,    BTM.POST_CD
        ,    BCM.BLLG_CYCLE_START_MTH AS MTR_BLLG_CYCLE_START_MTH
        ,    (
                CASE
                    WHEN
                        EXISTS(
                            SELECT
                                *
                            FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                                 DS_CONTR_PRC_EFF DPE -->
                                TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                            WHERE
                                    DCD.DS_CONTR_DTL_PK       =    DPE.DS_CONTR_DTL_PK
                                AND DCD.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                                AND DCD.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                                AND DPE.BASE_CHRG_FLG         =    'Y'
                            <isEqual property="CancelledFlg" compareValue="Y">
                                AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                            </isEqual>
                            <isEqual property="CancelledFlg" compareValue="N">
                                AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                            </isEqual>
                        )
                    THEN
                        'Y'
                    ELSE
                        'N'
                END
             ) AS BASE_PRC_FLG
        ,    (
                CASE
                    WHEN
                        EXISTS(
                            SELECT
                                *
                            FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                                 DS_CONTR_PRC_EFF DPE -->
                                TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                            WHERE
                                    DBM.DS_CONTR_BLLG_MTR_PK  =    DPE.DS_CONTR_BLLG_MTR_PK
                                AND DBM.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                                AND DBM.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                                AND DPE.USG_CHRG_FLG          =    'Y'
                            <isEqual property="CancelledFlg" compareValue="Y">
                                AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                            </isEqual>
                            <isEqual property="CancelledFlg" compareValue="N">
                                AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                            </isEqual>
                        )
                    THEN
                        'Y'
                    ELSE
                        'N'
                END
             ) AS USG_PRC_FLG
        ,    (
                CASE
                    WHEN
                        EXISTS(
                            SELECT
                                *
                            FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                                  DS_CONTR_PRC_EFF         DPE -->
<!--                                 ,DS_CONTR_BLLG_SCHD_SMRY  DBS -->
                                 TARGET_DS_CONTR_PRC_EFF         DPE
                                ,TARGET_DS_CONTR_BLLG_SCHD_SMRY  DBS
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                            WHERE
                                    DCD.DS_CONTR_DTL_PK       =    DPE.DS_CONTR_DTL_PK
                                AND DCD.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                                AND DCD.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                                AND DPE.BASE_CHRG_FLG         =    'Y'
                            <isEqual property="CancelledFlg" compareValue="Y">
                                AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                            </isEqual>
                            <isEqual property="CancelledFlg" compareValue="N">
                                AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                            </isEqual>
                                AND DPE.DS_CONTR_PRC_EFF_PK   =    DBS.DS_CONTR_PRC_EFF_PK
                                AND DPE.GLBL_CMPY_CD          =    DBS.GLBL_CMPY_CD
                                AND DPE.EZCANCELFLAG          =    DBS.EZCANCELFLAG
                        )
                    THEN
                        'Y'
                    ELSE
                        'N'
                END
             ) AS BASE_TOP_SCHEDULE_FLG
        ,    (
                CASE
                    WHEN
                        EXISTS(
                            SELECT
                                *
                            FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                                  DS_CONTR_PRC_EFF         DPE -->
<!--                                 ,DS_CONTR_BLLG_SCHD_SMRY  DBS -->
                                 TARGET_DS_CONTR_PRC_EFF         DPE
                                ,TARGET_DS_CONTR_BLLG_SCHD_SMRY  DBS
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                            WHERE
                                    DBM.DS_CONTR_BLLG_MTR_PK  =    DPE.DS_CONTR_BLLG_MTR_PK
                                AND DBM.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                                AND DBM.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                                AND DPE.USG_CHRG_FLG          =    'Y'
                            <isEqual property="CancelledFlg" compareValue="Y">
                                AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                            </isEqual>
                            <isEqual property="CancelledFlg" compareValue="N">
                                AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                            </isEqual>
                                AND DPE.DS_CONTR_PRC_EFF_PK   =    DBS.DS_CONTR_PRC_EFF_PK
                                AND DPE.GLBL_CMPY_CD          =    DBS.GLBL_CMPY_CD
                                AND DPE.EZCANCELFLAG          =    DBS.EZCANCELFLAG
                        )
                    THEN
                        'Y'
                    ELSE
                        'N'
                END
             ) AS USG_TOP_SCHEDULE_FLG
        ,    (
                SELECT
                    DS_CONTR_PRC_EFF_PK
                FROM (
                    SELECT
                         DPE.DS_CONTR_PRC_EFF_PK
                        ,3                            AS SORT_KEY1
                        ,(TO_DATE(#slsDt#, 'YYYYMMDD') - TO_DATE(DPE.CONTR_PRC_EFF_THRU_DT, 'YYYYMMDD'))  AS SORT_KEY2
                    FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                         DS_CONTR_PRC_EFF DPE -->
                        TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                    WHERE
                            DCD.DS_CONTR_DTL_PK       =    DPE.DS_CONTR_DTL_PK
                        AND DCD.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                        AND DCD.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                        AND DPE.BASE_CHRG_FLG         =    'Y'
                        AND DPE.CONTR_PRC_EFF_THRU_DT &lt; #slsDt#
                    <isEqual property="CancelledFlg" compareValue="Y">
                        AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                    </isEqual>
                    <isEqual property="CancelledFlg" compareValue="N">
                        AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                    </isEqual>
                    UNION
                    SELECT
                         DPE.DS_CONTR_PRC_EFF_PK
                        ,1                            AS SORT_KEY1
                        ,0                            AS SORT_KEY2
                    FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                         DS_CONTR_PRC_EFF DPE -->
                        TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                    WHERE
                            DCD.DS_CONTR_DTL_PK       =    DPE.DS_CONTR_DTL_PK
                        AND DCD.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                        AND DCD.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                        AND DPE.BASE_CHRG_FLG         =    'Y'
                        AND DPE.CONTR_PRC_EFF_FROM_DT &lt;= #slsDt#
                        AND DPE.CONTR_PRC_EFF_THRU_DT &gt;= #slsDt#
                    <isEqual property="CancelledFlg" compareValue="Y">
                        AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                    </isEqual>
                    <isEqual property="CancelledFlg" compareValue="N">
                        AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                    </isEqual>
                    UNION
                    SELECT
                         DPE.DS_CONTR_PRC_EFF_PK
                        ,2                            AS SORT_KEY1
                        ,(TO_DATE(DPE.CONTR_PRC_EFF_FROM_DT, 'YYYYMMDD') - TO_DATE(#slsDt#, 'YYYYMMDD'))  AS SORT_KEY2
                    FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                         DS_CONTR_PRC_EFF DPE -->
                        TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                    WHERE
                            DCD.DS_CONTR_DTL_PK       =    DPE.DS_CONTR_DTL_PK
                        AND DCD.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                        AND DCD.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                        AND DPE.BASE_CHRG_FLG         =    'Y'
                        AND DPE.CONTR_PRC_EFF_FROM_DT &gt;= #slsDt#
                    <isEqual property="CancelledFlg" compareValue="Y">
                        AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                    </isEqual>
                    <isEqual property="CancelledFlg" compareValue="N">
                        AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                    </isEqual>
                    ORDER BY
                         SORT_KEY1                    ASC
                        ,SORT_KEY2                    ASC
                        ,DS_CONTR_PRC_EFF_PK          DESC
                )
                WHERE
                    ROWNUM = 1
             ) AS BASE_BLLG_DS_CONTR_PRC_EFF_PK
        ,    (
                SELECT
                    DS_CONTR_PRC_EFF_PK
                FROM (
                    SELECT
                        DPE.DS_CONTR_PRC_EFF_PK
                        ,3                            AS SORT_KEY1
                        ,(TO_DATE(#slsDt#, 'YYYYMMDD') - TO_DATE(DPE.CONTR_PRC_EFF_THRU_DT, 'YYYYMMDD'))  AS SORT_KEY2
                    FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                         DS_CONTR_PRC_EFF DPE -->
                        TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                    WHERE
                            DBM.DS_CONTR_BLLG_MTR_PK  =    DPE.DS_CONTR_BLLG_MTR_PK
                        AND DBM.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                        AND DBM.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                        AND DPE.USG_CHRG_FLG          =    'Y'
                        AND DPE.CONTR_PRC_EFF_THRU_DT &lt; #slsDt#
                    <isEqual property="CancelledFlg" compareValue="Y">
                        AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                    </isEqual>
                    <isEqual property="CancelledFlg" compareValue="N">
                        AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                    </isEqual>
                    UNION
                    SELECT
                        DPE.DS_CONTR_PRC_EFF_PK
                        ,1                            AS SORT_KEY1
                        ,0                            AS SORT_KEY2
                    FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                         DS_CONTR_PRC_EFF DPE -->
                        TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                    WHERE
                            DBM.DS_CONTR_BLLG_MTR_PK  =    DPE.DS_CONTR_BLLG_MTR_PK
                        AND DBM.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                        AND DBM.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                        AND DPE.USG_CHRG_FLG          =    'Y'
                        AND DPE.CONTR_PRC_EFF_FROM_DT &lt;= #slsDt#
                        AND DPE.CONTR_PRC_EFF_THRU_DT &gt;= #slsDt#
                    <isEqual property="CancelledFlg" compareValue="Y">
                        AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                    </isEqual>
                    <isEqual property="CancelledFlg" compareValue="N">
                        AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                    </isEqual>
                    UNION
                    SELECT
                        DPE.DS_CONTR_PRC_EFF_PK
                        ,2                            AS SORT_KEY1
                        ,(TO_DATE(DPE.CONTR_PRC_EFF_FROM_DT, 'YYYYMMDD') - TO_DATE(#slsDt#, 'YYYYMMDD'))  AS SORT_KEY2
                    FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                         DS_CONTR_PRC_EFF DPE -->
                        TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                    WHERE
                            DBM.DS_CONTR_BLLG_MTR_PK  =    DPE.DS_CONTR_BLLG_MTR_PK
                        AND DBM.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                        AND DBM.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                        AND DPE.USG_CHRG_FLG          =    'Y'
                        AND DPE.CONTR_PRC_EFF_FROM_DT &gt;= #slsDt#
                    <isEqual property="CancelledFlg" compareValue="Y">
                        AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                    </isEqual>
                    <isEqual property="CancelledFlg" compareValue="N">
                        AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                    </isEqual>
                    ORDER BY
                         SORT_KEY1                    ASC
                        ,SORT_KEY2                    ASC
                        ,DS_CONTR_PRC_EFF_PK          DESC
                )
                WHERE
                    ROWNUM = 1
             ) AS BLLG_MTR_DS_CONTR_PRC_EFF_PK
        ,    SMM.SER_NUM                         AS SORT_SER_NUM
        ,    SMM.MDSE_CD                         AS SORT_MDSE_CD
<!-- START 2017/09/13 K.Kim [QC#19938, ADD] -->
        ,    (
                CASE
                    WHEN
<!-- START 2018/08/24 T.Tomita [QC#26687, ADD] -->
                        (
                            SELECT
                                COUNT(*)
                            FROM
                                TARGET_DS_CONTR_BLLG_SCHD SCHD
                            WHERE
                                SCHD.GLBL_CMPY_CD        =    DCD.GLBL_CMPY_CD
                            AND SCHD.DS_CONTR_DTL_PK     =    DCD.DS_CONTR_DTL_PK
                            AND SCHD.EZCANCELFLAG        =    '0'
                            AND SCHD.BASE_CHRG_FLG       =    'Y'
                        ) > 0
                        AND
<!-- END 2018/08/24 T.Tomita [QC#26687, ADD] -->
                        NOT EXISTS(
                        SELECT
                            *
                        FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                             DS_CONTR_BLLG_SCHD BSB3 -->
                            TARGET_DS_CONTR_BLLG_SCHD BSB3
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                        WHERE
                                DCD.DS_CONTR_DTL_PK     =    BSB3.DS_CONTR_DTL_PK
                            AND DCD.GLBL_CMPY_CD        =    BSB3.GLBL_CMPY_CD
                            AND DCD.EZCANCELFLAG        =    BSB3.EZCANCELFLAG
                            AND BSB3.BASE_CHRG_FLG      =    'Y'
                            AND BSB3.DS_BLLG_SCHD_STS_CD &lt;&gt; #dsBllgSchdStsCdCl#
                        )
                    THEN
                        'Y'
                    ELSE
                        'N'
                END
             ) AS BASE_BILLED_FLG
        ,    (
                CASE
                    WHEN
<!-- START 2018/08/24 T.Tomita [QC#26687, ADD] -->
                        (
                            SELECT
                                COUNT(*)
                            FROM
                                TARGET_DS_CONTR_BLLG_SCHD SCHD
                            WHERE
                                SCHD.GLBL_CMPY_CD        =    DCD.GLBL_CMPY_CD
                            AND SCHD.DS_CONTR_DTL_PK     =    DCD.DS_CONTR_DTL_PK
                            AND SCHD.EZCANCELFLAG        =    '0'
                            AND SCHD.USG_CHRG_FLG        =    'Y'
                        ) > 0
                        AND
<!-- END 2018/08/24 T.Tomita [QC#26687, ADD] -->
                        NOT EXISTS(
                        SELECT
                            *
                        FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                             DS_CONTR_BLLG_SCHD BSU3 -->
                            TARGET_DS_CONTR_BLLG_SCHD BSU3
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                        WHERE
                                DCD.DS_CONTR_DTL_PK     =    BSU3.DS_CONTR_DTL_PK
                            AND DCD.GLBL_CMPY_CD        =    BSU3.GLBL_CMPY_CD
                            AND DCD.EZCANCELFLAG        =    BSU3.EZCANCELFLAG
                            AND BSU3.USG_CHRG_FLG       =    'Y'
                            AND BSU3.DS_BLLG_SCHD_STS_CD &lt;&gt; #dsBllgSchdStsCdCl#
                        )
                    THEN
                        'Y'
                    ELSE
                        'N'
                END
             ) AS USG_BILLED_FLG
        ,    DCD.BILL_WITH_EQUIP_FLG
<!-- END 2017/09/13 K.Kim [QC#19938, ADD] -->
<!-- START 2017/09/21 K.Kitachi [QC#21222, ADD] -->
    ,   (
            CASE
                WHEN
                    (
                        SELECT
                            COUNT(*)
                        FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                             DS_CONTR_PRC_EFF DPE -->
                            TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                        WHERE
                                DCD.DS_CONTR_DTL_PK         =    DPE.DS_CONTR_DTL_PK
                            AND DCD.GLBL_CMPY_CD            =    DPE.GLBL_CMPY_CD
                            AND DCD.EZCANCELFLAG            =    DPE.EZCANCELFLAG
                            AND DPE.BASE_CHRG_FLG           =    'Y'
                            <iterate property="dsContrPrcEffStsCdList" var="dsContrPrcEffStsCd[]" open="AND DPE.DS_CONTR_PRC_EFF_STS_CD NOT IN (" close=")" conjunction=",">
                                #dsContrPrcEffStsCd[]#
                            </iterate>
                    ) > 1
                THEN
                    'Y'
                ELSE
                    'N'
            END
         ) AS BASE_PRC_EFF_MULTI_FLG
<!-- END 2017/09/21 K.Kitachi [QC#21222, ADD] -->
<!-- START 2023/08/18 T.Kojima [QC#60846, ADD] -->
        ,    'N'                             AS    USG_PRC_EFF_MULTI_FLG
<!-- END 2023/08/18 T.Kojima [QC#60846, ADD] -->
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
        ,(
            SELECT
                COUNT(*)
            FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                  DS_CONTR_DTL    DTL -->
                 TARGET_DS_CONTR_DTL    DTL
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                ,DS_CONTR_DTL_TP TP
            WHERE
                DTL.GLBL_CMPY_CD       = DCD.GLBL_CMPY_CD
            AND DTL.DS_CONTR_PK        = DCD.DS_CONTR_PK
            AND DTL.EZCANCELFLAG       = '0'
            AND DTL.GLBL_CMPY_CD       = TP.GLBL_CMPY_CD
            AND DTL.DS_CONTR_DTL_TP_CD = TP.DS_CONTR_DTL_TP_CD
            AND TP.EZCANCELFLAG        = '0'
            AND TP.MAIN_UNIT_LINE_FLG  = 'Y'
         ) UNIT_CNT
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
<!-- START 2019/01/21 T.Wada [QC#29371, ADD] -->
        ,    DCD.SVC_INV_MERGE_TP_CD
<!-- END 2019/01/21 T.Wada [QC#29371, ADD] -->
<!-- START 2019/01/17 [QC#29782, ADD] -->
        ,    SPT.SVC_PGM_TP_SORT_NUM
        ,    DCD.DS_CONTR_CRAT_TP_CD
<!-- END 2019/01/17 [QC#29782, ADD] -->
        FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--              DS_CONTR_DTL        DCP -->
<!--         ,    DS_CONTR_DTL        DCD -->
<!--         ,    DS_CONTR            DCR -->
             TARGET_DS_CONTR_DTL        DCP
        ,    TARGET_DS_CONTR_DTL        DCD
        ,    TARGET_DS_CONTR            DCR
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
        ,    SELL_TO_CUST        STC
        ,    SVC_MACH_MSTR       SMM
        ,    BILL_TO_CUST        BTB
        ,    BILL_TO_CUST        BTU
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--         ,    DS_CONTR_BLLG_MTR   DBM -->
        ,    TARGET_DS_CONTR_BLLG_MTR   DBM
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
        ,    BILL_TO_CUST        BTM
        ,    MTR_LB              MLB
        ,    CONTR_XS_COPY       CXC
        ,    DS_CONTR_DTL_TP     DDT
        ,    CONTR_COV_SVC       CCS
        ,    DS_COV_SVC_TP       CST
        ,    SVC_CONFIG_MSTR     SCM
        ,    MDL_NM              MDN
        ,    CTAC_PSN            CTP
        ,    CTAC_PSN            CTM
        ,    BLLG_CYCLE          BCB
        ,    BLLG_CYCLE          BCM
        ,    MDSE                MDS
        <!-- START 2017/10/20 K.Kojima [QC#21232,MOD] -->
        <!-- ,    DS_CONTR_BLLG_SCHD  BSU -->
        <!-- ,    DS_CONTR_BLLG_SCHD  BSB -->
        ,(
            SELECT
                 GLBL_CMPY_CD
                ,DS_CONTR_DTL_PK
                ,NEXT_BLLG_DT
                ,DS_CONTR_PRC_EFF_PK
                ,EZCANCELFLAG
            FROM
                (
                    SELECT
                         BDCBS.GLBL_CMPY_CD
                        ,BDCBS.DS_CONTR_DTL_PK
                        ,BDCBS.NEXT_BLLG_DT
                        ,BDCBS.DS_CONTR_PRC_EFF_PK
                        ,DENSE_RANK() OVER (PARTITION BY BDCD.DS_CONTR_DTL_PK ORDER BY BDCBS.NEXT_BLLG_DT, BDCBS.DS_CONTR_BLLG_SCHD_PK) AS USG_RANK
                        ,BDCBS.EZCANCELFLAG
                    FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                          DS_CONTR_DTL       BDCD -->
<!--                         ,DS_CONTR_BLLG_SCHD BDCBS -->
                         TARGET_DS_CONTR_DTL       BDCD
                        ,TARGET_DS_CONTR_BLLG_SCHD BDCBS
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                    WHERE
                            BDCD.GLBL_CMPY_CD         = #glblCmpyCd#
                        AND BDCD.DS_CONTR_PK          = #dsContrPk#
                        <!-- START 2022/03/24 K.Kitachi [QC#59684, ADD] -->
                        AND (
                                BDCD.MAN_TRMN_TP_CD   IS NULL
                            OR
                                BDCD.MAN_TRMN_TP_CD   &lt;&gt; #manTrmnTpCd#
                            )
                        <!-- END 2022/03/24 K.Kitachi [QC#59684, ADD] -->
                        <!-- START 2023/10/05 H.Iinuma [QC#61675, ADD] -->
                        <!-- START 2024/03/12 Y.Nagasawaa [QC#61675, MOD] -->
                        <!-- AND (                                                         -->
                        <!--         BDCD.DS_CONTR_DTL_STS_CD &lt;&gt; #dsContrDtlStsTrmd# -->
                        <!--     OR                                                        -->
                        <!--         BDCD.MTR_HLD_FLG         &lt;&gt; 'N'                 -->
                        <!--     )                                                         -->
                        AND BDCBS.BLLG_SCHD_THRU_DT  &lt;= NVL(BDCD.CONTR_CLO_DT, BDCD.CONTR_EFF_THRU_DT)
                        <!-- EMD 2024/03/12 Y.Nagasawaa [QC#61675, MOD] -->
                        <!-- END 2023/10/05 H.Iinuma [QC#61675, ADD] -->
                        AND BDCD.EZCANCELFLAG         = '0'
                        AND BDCD.GLBL_CMPY_CD         = BDCBS.GLBL_CMPY_CD
                        AND BDCD.DS_CONTR_DTL_PK      = BDCBS.DS_CONTR_DTL_PK
                        AND BDCBS.INV_FLG             = 'N'
                        AND BDCBS.USG_CHRG_FLG        = 'Y'
                        AND BDCBS.DS_BLLG_SCHD_TP_CD  = #dsBllgSchdTpRegular#
                        AND BDCBS.EZCANCELFLAG        = '0'
                        <!-- START 2023/04/14 L.Borrega [QC#61370, ADD] -->
                        AND BDCBS.SKIP_RECOV_TP_CD    = #skipRecovTpNone#
                        <!-- END 2023/04/14 L.Borrega [QC#61370, ADD] -->
                )
            WHERE
                USG_RANK = 1
         ) BSU
        ,(
            SELECT
                 GLBL_CMPY_CD
                ,DS_CONTR_DTL_PK
                ,NEXT_BLLG_DT
                ,DS_CONTR_PRC_EFF_PK
                ,EZCANCELFLAG
            FROM
                (
                    SELECT
                         BDCBS.GLBL_CMPY_CD
                        ,BDCBS.DS_CONTR_DTL_PK
                        ,BDCBS.NEXT_BLLG_DT
                        ,BDCBS.DS_CONTR_PRC_EFF_PK
                        ,DENSE_RANK() OVER (PARTITION BY BDCD.DS_CONTR_DTL_PK ORDER BY BDCBS.NEXT_BLLG_DT, BDCBS.DS_CONTR_BLLG_SCHD_PK) AS BASE_RANK
                        ,BDCBS.EZCANCELFLAG
                    FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                          DS_CONTR_DTL       BDCD -->
<!--                         ,DS_CONTR_BLLG_SCHD BDCBS -->
                         TARGET_DS_CONTR_DTL       BDCD
                        ,TARGET_DS_CONTR_BLLG_SCHD BDCBS
<!-- END2018/04/09 K.Kojima [QC#24802, MOD] -->
                    WHERE
                            BDCD.GLBL_CMPY_CD         = #glblCmpyCd#
                        AND BDCD.DS_CONTR_PK          = #dsContrPk#
                        AND BDCD.EZCANCELFLAG         = '0'
                        AND BDCD.GLBL_CMPY_CD         = BDCBS.GLBL_CMPY_CD
                        AND BDCD.DS_CONTR_DTL_PK      = BDCBS.DS_CONTR_DTL_PK
                        AND BDCBS.INV_FLG             = 'N'
                        AND BDCBS.BASE_CHRG_FLG       = 'Y'
                        AND BDCBS.DS_BLLG_SCHD_TP_CD  = #dsBllgSchdTpRegular#
                        AND BDCBS.EZCANCELFLAG        = '0'
                        <!-- START 2023/04/14 L.Borrega [QC#61370, ADD] -->
                        AND BDCBS.SKIP_RECOV_TP_CD    = #skipRecovTpNone#
                        <!-- END 2023/04/14 L.Borrega [QC#61370, ADD] -->
                )
            WHERE
                BASE_RANK = 1
         ) BSB
        <!-- END 2017/10/20 K.Kojima [QC#21232,MOD] -->
<!-- START 2017/09/26 K.Kojima [QC#21221,ADD] -->
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--         ,    DS_CONTR_PRC_EFF    CPE -->
        ,    TARGET_DS_CONTR_PRC_EFF    CPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!-- END 2017/09/26 K.Kojima [QC#21221,ADD] -->
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
        ,    MDSE                MDS2
        ,    SHIP_TO_CUST        SHTC
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
<!-- START 2019/01/17 [QC#29782, ADD] -->
        ,    SVC_PGM_TP          SPT
<!-- END 2019/01/17 [QC#29782, ADD] -->
        WHERE
            DCP.DS_CONTR_PK                    =    #dsContrPk#
        AND    DCP.DS_CONTR_DTL_TP_CD          =    #dsContrDtlTpCd#
        AND    DCP.GLBL_CMPY_CD                =    #glblCmpyCd#
        AND    DCP.EZCANCELFLAG                =    '0'
        AND    DCD.DS_CONTR_PK                 =    DCP.DS_CONTR_PK
        AND    DCD.PRNT_DS_CONTR_DTL_PK        =    DCP.DS_CONTR_DTL_PK
        AND    DCD.GLBL_CMPY_CD                =    DCP.GLBL_CMPY_CD
        AND    DCD.EZCANCELFLAG                =    DCP.EZCANCELFLAG
        AND    DCR.DS_CONTR_PK                 =    DCD.DS_CONTR_PK
        AND    DCR.GLBL_CMPY_CD                =    DCD.GLBL_CMPY_CD
        <!-- START 2017/06/17 K.Kojima [QC#19256,ADD] -->
        AND    DCD.DS_CONTR_DTL_STS_CD  &lt;&gt;    #dsContrDtlStsOrdr#
        <!-- END 2017/06/17 K.Kojima [QC#19256,ADD] -->
        AND    DCR.EZCANCELFLAG                =    DCD.EZCANCELFLAG
        AND    DCR.SELL_TO_CUST_CD             =    STC.SELL_TO_CUST_CD(+)
        AND    DCR.GLBL_CMPY_CD                =    STC.GLBL_CMPY_CD(+)
        AND    DCR.EZCANCELFLAG                =    STC.EZCANCELFLAG(+)
        AND    DCD.SVC_MACH_MSTR_PK            =    SMM.SVC_MACH_MSTR_PK(+)
        AND    DCD.GLBL_CMPY_CD                =    SMM.GLBL_CMPY_CD(+)
        AND    DCD.EZCANCELFLAG                =    SMM.EZCANCELFLAG(+)
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
        AND    SMM.MDSE_CD                     =    MDS2.MDSE_CD(+)
        AND    SMM.GLBL_CMPY_CD                =    MDS2.GLBL_CMPY_CD(+)
        AND    SMM.EZCANCELFLAG                =    MDS2.EZCANCELFLAG(+)
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
        AND    DCD.BASE_BILL_TO_CUST_CD        =    BTB.BILL_TO_CUST_CD(+)
        AND    DCD.GLBL_CMPY_CD                =    BTB.GLBL_CMPY_CD(+)
        AND    DCD.EZCANCELFLAG                =    BTB.EZCANCELFLAG(+)
        AND    DCD.USG_BILL_TO_CUST_CD         =    BTU.BILL_TO_CUST_CD(+)
        AND    DCD.GLBL_CMPY_CD                =    BTU.GLBL_CMPY_CD(+)
        AND    DCD.EZCANCELFLAG                =    BTU.EZCANCELFLAG(+)
        AND    DCD.DS_CONTR_DTL_PK             =    DBM.DS_CONTR_DTL_PK(+)
        AND    DCD.GLBL_CMPY_CD                =    DBM.GLBL_CMPY_CD(+)
        AND    DCD.EZCANCELFLAG                =    DBM.EZCANCELFLAG(+)
<!-- START 2017/08/25 U.Kim [QC#20728,ADD] -->
        AND    DBM.DS_CONTR_BLLG_MTR_STS_CD(+) &lt;&gt; #dsContrDtlStsOrdr#
<!-- END 2017/08/25 U.Kim [QC#20728,ADD] -->
        AND    DBM.BLLG_MTR_BILL_TO_CUST_CD    =    BTM.BILL_TO_CUST_CD(+)
        AND    DBM.GLBL_CMPY_CD                =    BTM.GLBL_CMPY_CD(+)
        AND    DBM.EZCANCELFLAG                =    BTM.EZCANCELFLAG(+)
        AND    DBM.BLLG_MTR_LB_CD              =    MLB.MTR_LB_CD(+)
        AND    DBM.GLBL_CMPY_CD                =    MLB.GLBL_CMPY_CD(+)
        AND    DBM.EZCANCELFLAG                =    MLB.EZCANCELFLAG(+)
        AND    DBM.DS_CONTR_BLLG_MTR_PK        =    CXC.DS_CONTR_BLLG_MTR_PK(+)
        AND    DBM.GLBL_CMPY_CD                =    CXC.GLBL_CMPY_CD(+)
        AND    DBM.EZCANCELFLAG                =    CXC.EZCANCELFLAG(+)
        AND    DCD.DS_CONTR_DTL_TP_CD          =    DDT.DS_CONTR_DTL_TP_CD
        AND    DDT.SVC_PRC_FLG                 =    #svcPrcFlg#
        AND    DCD.GLBL_CMPY_CD                =    DDT.GLBL_CMPY_CD
        AND    DCD.EZCANCELFLAG                =    DDT.EZCANCELFLAG
        AND    DCD.DS_CONTR_DTL_PK             =    CCS.DS_CONTR_DTL_PK(+)
        AND    DCD.GLBL_CMPY_CD                =    CCS.GLBL_CMPY_CD(+)
        AND    DCD.EZCANCELFLAG                =    CCS.EZCANCELFLAG(+)
        AND    CCS.DS_COV_SVC_TP_CD            =    CST.DS_COV_SVC_TP_CD(+)
        AND    CCS.GLBL_CMPY_CD                =    CST.GLBL_CMPY_CD(+)
        AND    CCS.EZCANCELFLAG                =    CST.EZCANCELFLAG(+)
        AND    SMM.SVC_CONFIG_MSTR_PK          =    SCM.SVC_CONFIG_MSTR_PK(+)
        AND    SMM.GLBL_CMPY_CD                =    SCM.GLBL_CMPY_CD(+)
        AND    SMM.EZCANCELFLAG                =    SCM.EZCANCELFLAG(+)
        AND    SCM.MDL_ID                      =    MDN.T_MDL_ID(+)
        AND    SCM.GLBL_CMPY_CD                =    MDN.T_GLBL_CMPY_CD(+)
        AND    SCM.EZCANCELFLAG                =    MDN.EZCANCELFLAG(+)
        AND    DCD.CTAC_PSN_PK                 =    CTP.CTAC_PSN_PK(+)
        AND    DCD.GLBL_CMPY_CD                =    CTP.GLBL_CMPY_CD(+)
        AND    DCD.EZCANCELFLAG                =    CTP.EZCANCELFLAG(+)
        AND    DBM.CTAC_PSN_PK                 =    CTM.CTAC_PSN_PK(+)
        AND    DBM.GLBL_CMPY_CD                =    CTM.GLBL_CMPY_CD(+)
        AND    DBM.EZCANCELFLAG                =    CTM.EZCANCELFLAG(+)
        AND    DCD.BASE_BLLG_CYCLE_CD          =    BCB.BLLG_CYCLE_CD(+)
        AND    DCD.GLBL_CMPY_CD                =    BCB.GLBL_CMPY_CD(+)
        AND    DCD.EZCANCELFLAG                =    BCB.EZCANCELFLAG(+)
        AND    DBM.BLLG_MTR_BLLG_CYCLE_CD      =    BCM.BLLG_CYCLE_CD(+)
        AND    DBM.GLBL_CMPY_CD                =    BCM.GLBL_CMPY_CD(+)
        AND    DBM.EZCANCELFLAG                =    BCM.EZCANCELFLAG(+)
        AND    DCD.GLBL_CMPY_CD                =    MDS.GLBL_CMPY_CD(+)
        AND    DCD.SVC_PGM_MDSE_CD             =    MDS.MDSE_CD(+)
        AND    DCD.EZCANCELFLAG                =    MDS.EZCANCELFLAG(+)
        AND    DCD.GLBL_CMPY_CD                =    BSU.GLBL_CMPY_CD(+)
        AND    DCD.DS_CONTR_DTL_PK             =    BSU.DS_CONTR_DTL_PK(+)
        AND    DCD.EZCANCELFLAG                =    BSU.EZCANCELFLAG(+)
        <!-- START 2017/10/20 K.Kojima [QC#21232,DEL] -->
        <!-- AND    BSU.INV_FLG(+)                  =    'N' -->
        <!-- AND    BSU.USG_CHRG_FLG(+)             =    'Y' -->
        <!-- END 2017/10/20 K.Kojima [QC#21232,DEL] -->
        <!-- START 2017/08/31 K.Kojima [QC#18355,ADD] -->
        <!-- START 2017/10/20 K.Kojima [QC#21232,DEL] -->
        <!-- AND    BSU.DS_BLLG_SCHD_TP_CD(+)       =    #dsBllgSchdTpRegular# -->
        <!-- END 2017/10/20 K.Kojima [QC#21232,DEL] -->
        <!-- END 2017/08/31 K.Kojima [QC#18355,ADD] -->
        AND    DCD.GLBL_CMPY_CD                =    BSB.GLBL_CMPY_CD(+)
        AND    DCD.DS_CONTR_DTL_PK             =    BSB.DS_CONTR_DTL_PK(+)
        AND    DCD.EZCANCELFLAG                =    BSB.EZCANCELFLAG(+)
        <!-- START 2017/10/20 K.Kojima [QC#21232,DEL] -->
        <!-- AND    BSB.INV_FLG(+)                  =    'N' -->
        <!-- AND    BSB.BASE_CHRG_FLG(+)            =    'Y' -->
        <!-- END 2017/10/20 K.Kojima [QC#21232,DEL] -->
        <!-- START 2017/08/31 K.Kojima [QC#18355,ADD] -->
        <!-- START 2017/10/20 K.Kojima [QC#21232,DEL] -->
        <!-- AND    BSB.DS_BLLG_SCHD_TP_CD(+)       =    #dsBllgSchdTpRegular# -->
        <!-- END 2017/10/20 K.Kojima [QC#21232,DEL] -->
        <!-- END 2017/08/31 K.Kojima [QC#18355,ADD] -->
        <!-- START 2017/09/26 K.Kojima [QC#21221,ADD] -->
        AND    BSB.GLBL_CMPY_CD                =    CPE.GLBL_CMPY_CD(+)
        AND    BSB.DS_CONTR_PRC_EFF_PK         =    CPE.DS_CONTR_PRC_EFF_PK(+)
        AND    BSB.EZCANCELFLAG                =    CPE.EZCANCELFLAG(+)
        <!-- END 2017/09/26 K.Kojima [QC#21221,ADD] -->
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
        AND    SMM.CUR_LOC_NUM                 =    SHTC.SHIP_TO_CUST_CD(+)
        AND    SMM.GLBL_CMPY_CD                =    SHTC.GLBL_CMPY_CD(+)
        AND    SMM.EZCANCELFLAG                =    SHTC.EZCANCELFLAG(+)
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
<!-- START 2019/01/17 [QC#29782, ADD] -->
        AND    MDS.GLBL_CMPY_CD                =    SPT.GLBL_CMPY_CD(+)
        AND    MDS.SVC_PGM_TP_CD               =    SPT.SVC_PGM_TP_CD(+)
        AND    MDS.EZCANCELFLAG                =    SPT.EZCANCELFLAG(+)
<!-- END 2019/01/17 [QC#29782, ADD] -->
    ) A
    <!-- START 2017/10/20 K.Kojima [QC#21232,DEL] -->
    <!-- WHERE -->
    <!--     A.BASE_RANK = 1 -->
    <!-- AND A.USG_RANK  = 1 -->
    <!-- END 2017/10/20 K.Kojima [QC#21232,DEL] -->
    UNION
    <!-- Accessory -->
    SELECT
        *
    FROM (
        SELECT
            DCD.EZUPTIME                     AS    EZUPTIME_BD
        ,    DCD.EZUPTIMEZONE                AS    EZUPTIMEZONE_BD
        ,    DCD.DS_CONTR_DTL_PK
        ,    DCD.PRNT_DS_CONTR_DTL_PK
        ,    SMM.SVC_CONFIG_MSTR_PK
        ,    SMM.SVC_MACH_MSTR_PK
        ,    SMM.SER_NUM
        ,    SMM.MDSE_CD
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
        ,    MDS2.MDSE_DESC_SHORT_TXT        AS    MDSE_DESC_SHORT_TXT_BI
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
        ,    DCD.CONTR_EFF_FROM_DT
        ,    DCD.CONTR_EFF_THRU_DT
        ,    DCD.DS_CONTR_DTL_TP_CD
        ,    DCD.DS_CONTR_DTL_STS_CD
        ,    DCD.MTR_READ_METH_CD
        ,    DCD.RNW_EFF_FROM_DT
        ,    DCD.CONTR_RNW_TOT_CNT
<!-- START 2018/02/22 M.Naito [QC#23179,MOD] -->
<!--         ,    DECODE(DCD.CONTR_CLO_DT, NULL, NULL, TO_CHAR(TO_DATE(DCD.CONTR_CLO_DT,'YYYYMMDD') + 1, 'YYYYMMDD')) AS CONTR_CLO_DT -->
        ,    DCD.CONTR_CLO_DT
<!-- END 2018/02/22 M.Naito [QC#23179,MOD] -->
<!-- START 2018/01/10 T.Tomita [QC#18552, MOD] -->
        ,    SMM.CUR_LOC_NUM                 AS    SHIP_TO_CUST_CD
        ,    SHTC.LOC_NM                     AS    SHIP_TO_LOC_NM
        ,    SHTC.FIRST_LINE_ADDR            AS    SHIP_FIRST_LINE_ADDR
        ,    SHTC.SCD_LINE_ADDR              AS    SHIP_SCD_LINE_ADDR
        ,    SHTC.THIRD_LINE_ADDR            AS    SHIP_THIRD_LINE_ADDR
        ,    SHTC.FRTH_LINE_ADDR             AS    SHIP_FRTH_LINE_ADDR
        ,    SHTC.CTY_ADDR                   AS    SHIP_CTY_ADDR
        ,    SHTC.ST_CD                      AS    SHIP_ST_CD
        ,    SHTC.POST_CD                    AS    SHIP_POST_CD
        ,    SMM.FLD_SVC_BR_CD
        ,    (
             SELECT
                 A.SVC_BR_CD_DESC_TXT
             FROM (
                 SELECT DISTINCT
                     SBPX.SVC_BR_CD_DESC_TXT
                 FROM
                     SVC_BR_POST_XREF SBPX
                 WHERE
                     SBPX.GLBL_CMPY_CD    = SMM.GLBL_CMPY_CD
                 AND SBPX.EZCANCELFLAG    = SMM.EZCANCELFLAG
                 AND SBPX.SVC_LINE_BIZ_CD = SMM.SVC_BY_LINE_BIZ_TP_CD
                 AND SBPX.SVC_BR_CD       = SMM.FLD_SVC_BR_CD
                 ) A
             WHERE
                 ROWNUM                   = 1
             )                               AS    SVC_BR_CD_DESC_TXT
<!-- END   2018/01/10 T.Tomita [QC#18552, MOD] -->
        <!-- Base -->
        ,    DCD.BASE_BILL_TO_CUST_CD
        ,    BTB.LOC_NM                      AS    BASE_BILL_TO_LOC_NM
        ,    BTB.FIRST_LINE_ADDR             AS    BASE_FIRST_LINE_ADDR
        ,    BTB.SCD_LINE_ADDR               AS    BASE_SCD_LINE_ADDR
        ,    BTB.THIRD_LINE_ADDR             AS    BASE_THIRD_LINE_ADDR
        ,    BTB.FRTH_LINE_ADDR              AS    BASE_FRTH_LINE_ADDR
        ,    BTB.CTY_ADDR                    AS    BASE_CTY_ADDR
        ,    BTB.ST_CD                       AS    BASE_ST_CD
        ,    BTB.POST_CD                     AS    BASE_POST_CD
        ,    DCD.BASE_DPLY_PER_END_DAY
        ,    DCD.CONTR_CLO_DAY               AS    BASE_CLO_DAY
        ,    DCD.CONTR_BLLG_DAY              AS    BASE_BLLG_DAY
        ,    CCS.CONTR_COV_SVC_PK
        ,    CCS.DS_COV_SVC_TP_CD
        ,    DCD.SVC_PGM_MDSE_CD
        ,    MDS.MDSE_DESC_SHORT_TXT
        <!-- START 2017/09/26 K.Kojima [QC#21221,ADD] -->
        <isEqual property="forScheduleFlag" compareValue="Y">
        <!-- END 2017/09/26 K.Kojima [QC#21221,ADD] -->
        ,    DCD.BASE_BLLG_CYCLE_CD
        ,    DCD.BASE_PRC_DEAL_AMT
        <!-- START 2017/09/26 K.Kojima [QC#21221,ADD] -->
        </isEqual>
        <isEqual property="forScheduleFlag" compareValue="N">
        ,    NVL(CPE.BLLG_CYCLE_CD, DCD.BASE_BLLG_CYCLE_CD)    AS BASE_BLLG_CYCLE_CD
        ,    NVL(CPE.BASE_PRC_DEAL_AMT, DCD.BASE_PRC_DEAL_AMT) AS BASE_PRC_DEAL_AMT
        </isEqual>
        <!-- END 2017/09/26 K.Kojima [QC#21221,ADD] -->
        ,    DCD.BASE_BLLG_TMG_CD
        ,    BCB.BLLG_CYCLE_START_MTH        AS    BASE_BLLG_CYCLE_START_MTH
        <!-- Usage -->
        ,    NULL                            AS    USG_BILL_TO_CUST_CD
        ,    NULL                            AS    USG_BILL_TO_LOC_NM
        ,    NULL                            AS    MTR_DPLY_PER_END_DAY
        ,    NULL                            AS    MTR_CLO_DAY
        ,    NULL                            AS    MTR_BLLG_DAY
        ,    NULL                            AS    EZUPTIME_BM
        ,    NULL                            AS    EZUPTIMEZONE_BM
        ,    NULL                            AS    DS_CONTR_BLLG_MTR_PK
        ,    NULL                            AS    BLLG_MTR_LB_CD
        ,    NULL                            AS    BLLG_MTR_BILL_TO_CUST_CD
        ,    NULL                            AS    MTR_LB_DESC_TXT
        ,    NULL                            AS    MTR_LB_SORT_NUM
        ,    NULL                            AS    BLLG_MTR_BLLG_CYCLE_CD
        ,    NULL                            AS    MTR_BLLG_TMG_CD
        ,    NULL                            AS    XS_CHRG_TP_CD
        ,    NULL                            AS    EZUPTIME_BX
        ,    NULL                            AS    EZUPTIMEZONE_BX
        ,    NULL                            AS    CONTR_XS_COPY_PK
        ,    NULL                            AS    XS_MTR_COPY_QTY
        ,    NULL                            AS    XS_MTR_AMT_RATE
        ,    DDT.DS_CONTR_DTL_TP_SORT_NUM
        ,    MDN.T_MDL_NM                    AS    MDL_NM
        ,    BSB.NEXT_BLLG_DT                AS    BASE_NEXT_BLLG_DT
        <!-- START 2017/10/20 K.Kojima [QC#21232,DEL] -->
        <!-- ,    DENSE_RANK() OVER (PARTITION BY BSB.DS_CONTR_DTL_PK ORDER BY BSB.NEXT_BLLG_DT, BSB.DS_CONTR_BLLG_SCHD_PK) AS BASE_RANK -->
        <!-- END 2017/10/20 K.Kojima [QC#21232,DEL] -->
        ,    NULL                            AS    USG_NEXT_BLLG_DT
        <!-- START 2017/10/20 K.Kojima [QC#21232,DEL] -->
        <!-- ,    1                               AS    USG_RANK -->
        <!-- END 2017/10/20 K.Kojima [QC#21232,DEL] -->
        ,    DCD.CTAC_PSN_PK
<!-- START 2018/06/18 K.Kitachi [QC#18591, MOD] -->
<!--         ,    RTRIM(CTP.CTAC_PSN_FIRST_NM || ' ' || CTP.CTAC_PSN_LAST_NM) AS PSN_NM -->
        ,    CTP.CTAC_PSN_FIRST_NM           AS    CTAC_PSN_FIRST_NM
        ,    CTP.CTAC_PSN_LAST_NM            AS    CTAC_PSN_LAST_NM
<!-- END 2018/06/18 K.Kitachi [QC#18591, MOD] -->
        ,    DCD.BASE_PRC_TERM_DEAL_AMT_RATE
        ,    NULL                            AS    BLLG_MTR_BILL_TO_LOC_NM
        ,    NULL                            AS    BLLG_MTR_CTAC_PSN_PK
<!-- START 2018/06/18 K.Kitachi [QC#18591, MOD] -->
<!--         ,    NULL                            AS    BLLG_MTR_PSN_NM -->
        ,    NULL                            AS    BLLG_MTR_CTAC_PSN_FIRST_NM
        ,    NULL                            AS    BLLG_MTR_CTAC_PSN_LAST_NM
<!-- END 2018/06/18 K.Kitachi [QC#18591, MOD] -->
        ,    NULL                            AS    BLLG_MIN_CNT
        ,    NULL                            AS    BLLG_MIN_AMT_RATE
        ,    NULL                            AS    BLLG_ROLL_OVER_RATIO
        ,    NULL                            AS    BLLG_FREE_COPY_CNT
<!-- START 2019/01/17 M.Naito [QC#29083,ADD] -->
        ,    NULL                            AS    CUM_COPY_CNT
        ,    NULL                            AS    CUM_COPY_FREQ_MTH_AOT
        ,    NULL                            AS    CUM_COPY_START_DT
        ,    NULL                            AS    CUM_COPY_END_DT
<!-- END 2019/01/17 M.Naito [QC#29083,ADD] -->
        ,    NULL                            AS    FIRST_LINE_ADDR
        ,    NULL                            AS    SCD_LINE_ADDR
        ,    NULL                            AS    THIRD_LINE_ADDR
        ,    NULL                            AS    FRTH_LINE_ADDR
        ,    NULL                            AS    CTY_ADDR
        ,    NULL                            AS    ST_CD
        ,    NULL                            AS    POST_CD
        ,    NULL                            AS    MTR_BLLG_CYCLE_START_MTH
        ,    (
                CASE
                    WHEN
                        EXISTS(
                            SELECT
                                *
                            FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                                 DS_CONTR_PRC_EFF DPE -->
                                TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                            WHERE
                                    DCD.DS_CONTR_DTL_PK       =    DPE.DS_CONTR_DTL_PK
                                AND DCD.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                                AND DCD.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                                AND DPE.BASE_CHRG_FLG         =    'Y'
                            <isEqual property="CancelledFlg" compareValue="Y">
                                AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                            </isEqual>
                            <isEqual property="CancelledFlg" compareValue="N">
                                AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                            </isEqual>
                        )
                    THEN
                        'Y'
                    ELSE
                        'N'
                END
             ) AS BASE_PRC_FLG
        ,    'N'                             AS    USG_PRC_FLG
        ,    (
                CASE
                    WHEN
                        EXISTS(
                            SELECT
                                *
                            FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                                  DS_CONTR_PRC_EFF         DPE -->
<!--                                 ,DS_CONTR_BLLG_SCHD_SMRY  DBS -->
                                 TARGET_DS_CONTR_PRC_EFF         DPE
                                ,TARGET_DS_CONTR_BLLG_SCHD_SMRY  DBS
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                            WHERE
                                    DCD.DS_CONTR_DTL_PK       =    DPE.DS_CONTR_DTL_PK
                                AND DCD.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                                AND DCD.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                                AND DPE.BASE_CHRG_FLG         =    'Y'
                                AND DPE.DS_CONTR_PRC_EFF_PK   =    DBS.DS_CONTR_PRC_EFF_PK
                                AND DPE.GLBL_CMPY_CD          =    DBS.GLBL_CMPY_CD
                                AND DPE.EZCANCELFLAG          =    DBS.EZCANCELFLAG
                            <isEqual property="CancelledFlg" compareValue="Y">
                                AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                            </isEqual>
                            <isEqual property="CancelledFlg" compareValue="N">
                                AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                            </isEqual>
                        )
                    THEN
                        'Y'
                    ELSE
                        'N'
                END
             ) AS BASE_TOP_SCHEDULE_FLG
        ,    'N'                             AS    USG_TOP_SCHEDULE_FLG
        ,    (
                SELECT
                    DS_CONTR_PRC_EFF_PK
                FROM (
                    SELECT
                         DPE.DS_CONTR_PRC_EFF_PK
                        ,3                            AS SORT_KEY1
                        ,(TO_DATE(#slsDt#, 'YYYYMMDD') - TO_DATE(DPE.CONTR_PRC_EFF_THRU_DT, 'YYYYMMDD'))  AS SORT_KEY2
                    FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                         DS_CONTR_PRC_EFF DPE -->
                        TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                    WHERE
                            DCD.DS_CONTR_DTL_PK       =    DPE.DS_CONTR_DTL_PK
                        AND DCD.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                        AND DCD.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                        AND DPE.BASE_CHRG_FLG         =    'Y'
                        AND DPE.CONTR_PRC_EFF_THRU_DT &lt; #slsDt#
                    <isEqual property="CancelledFlg" compareValue="Y">
                        AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                    </isEqual>
                    <isEqual property="CancelledFlg" compareValue="N">
                        AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                    </isEqual>
                    UNION
                    SELECT
                         DPE.DS_CONTR_PRC_EFF_PK
                        ,1                            AS SORT_KEY1
                        ,0                            AS SORT_KEY2
                    FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                         DS_CONTR_PRC_EFF DPE -->
                        TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                    WHERE
                            DCD.DS_CONTR_DTL_PK       =    DPE.DS_CONTR_DTL_PK
                        AND DCD.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                        AND DCD.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                        AND DPE.BASE_CHRG_FLG         =    'Y'
                        AND DPE.CONTR_PRC_EFF_FROM_DT &lt;= #slsDt#
                        AND DPE.CONTR_PRC_EFF_THRU_DT &gt;= #slsDt#
                    <isEqual property="CancelledFlg" compareValue="Y">
                        AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                    </isEqual>
                    <isEqual property="CancelledFlg" compareValue="N">
                        AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                    </isEqual>
                    UNION
                    SELECT
                         DPE.DS_CONTR_PRC_EFF_PK
                        ,2                            AS SORT_KEY1
                        ,(TO_DATE(DPE.CONTR_PRC_EFF_FROM_DT, 'YYYYMMDD') - TO_DATE(#slsDt#, 'YYYYMMDD'))  AS SORT_KEY2
                    FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                         DS_CONTR_PRC_EFF DPE -->
                        TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                    WHERE
                            DCD.DS_CONTR_DTL_PK       =    DPE.DS_CONTR_DTL_PK
                        AND DCD.GLBL_CMPY_CD          =    DPE.GLBL_CMPY_CD
                        AND DCD.EZCANCELFLAG          =    DPE.EZCANCELFLAG
                        AND DPE.BASE_CHRG_FLG         =    'Y'
                        AND DPE.CONTR_PRC_EFF_FROM_DT &gt;= #slsDt#
                    <isEqual property="CancelledFlg" compareValue="Y">
                        AND DPE.DS_CONTR_PRC_EFF_STS_CD  = #dsContrPrcEffStsCd_Cancelled#
                    </isEqual>
                    <isEqual property="CancelledFlg" compareValue="N">
                        AND DPE.DS_CONTR_PRC_EFF_STS_CD != #dsContrPrcEffStsCd_Cancelled#
                    </isEqual>
                    ORDER BY
                         SORT_KEY1                    ASC
                        ,SORT_KEY2                    ASC
                        ,DS_CONTR_PRC_EFF_PK          DESC
                )
                WHERE
                    ROWNUM = 1
             ) AS BASE_BLLG_DS_CONTR_PRC_EFF_PK
        ,    NULL                            AS    BLLG_MTR_DS_CONTR_PRC_EFF_PK
        ,    SMMP.SER_NUM                    AS    SORT_SER_NUM
        ,    SMMP.MDSE_CD                    AS    SORT_MDSE_CD
<!-- START 2017/09/13 K.Kim [QC#19938, ADD] -->
        ,    (
                CASE
                    WHEN
<!-- START 2018/08/24 T.Tomita [QC#26687, ADD] -->
                        (
                            SELECT
                                COUNT(*)
                            FROM
                                TARGET_DS_CONTR_BLLG_SCHD SCHD
                            WHERE
                                SCHD.GLBL_CMPY_CD        =    DCD.GLBL_CMPY_CD
                            AND SCHD.DS_CONTR_DTL_PK     =    DCD.DS_CONTR_DTL_PK
                            AND SCHD.EZCANCELFLAG        =    '0'
                            AND SCHD.BASE_CHRG_FLG       =    'Y'
                        ) > 0
                        AND
<!-- END 2018/08/24 T.Tomita [QC#26687, ADD] -->
                        NOT EXISTS(
                        SELECT
                            *
                        FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                             DS_CONTR_BLLG_SCHD BSB4 -->
                            TARGET_DS_CONTR_BLLG_SCHD BSB4
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                        WHERE
                                DCD.DS_CONTR_DTL_PK     =    BSB4.DS_CONTR_DTL_PK
                            AND DCD.GLBL_CMPY_CD        =    BSB4.GLBL_CMPY_CD
                            AND DCD.EZCANCELFLAG        =    BSB4.EZCANCELFLAG
                            AND BSB4.BASE_CHRG_FLG      =    'Y'
                            AND BSB4.DS_BLLG_SCHD_STS_CD &lt;&gt; #dsBllgSchdStsCdCl#
                        )
                    THEN
                        'Y'
                    ELSE
                        'N'
                END
             ) AS BASE_BILLED_FLG
        ,    (
                CASE
                    WHEN
<!-- START 2018/08/24 T.Tomita [QC#26687, ADD] -->
                        (
                            SELECT
                                COUNT(*)
                            FROM
                                TARGET_DS_CONTR_BLLG_SCHD SCHD
                            WHERE
                                SCHD.GLBL_CMPY_CD        =    DCD.GLBL_CMPY_CD
                            AND SCHD.DS_CONTR_DTL_PK     =    DCD.DS_CONTR_DTL_PK
                            AND SCHD.EZCANCELFLAG        =    '0'
                            AND SCHD.USG_CHRG_FLG        =    'Y'
                        ) > 0
                        AND
<!-- END 2018/08/24 T.Tomita [QC#26687, ADD] -->
                        NOT EXISTS(
                        SELECT
                            *
                        FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                             DS_CONTR_BLLG_SCHD BSU4 -->
                            TARGET_DS_CONTR_BLLG_SCHD BSU4
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                        WHERE
                                DCD.DS_CONTR_DTL_PK     =    BSU4.DS_CONTR_DTL_PK
                            AND DCD.GLBL_CMPY_CD        =    BSU4.GLBL_CMPY_CD
                            AND DCD.EZCANCELFLAG        =    BSU4.EZCANCELFLAG
                            AND BSU4.USG_CHRG_FLG       =    'Y'
                            AND BSU4.DS_BLLG_SCHD_STS_CD &lt;&gt; #dsBllgSchdStsCdCl#
                        )
                    THEN
                        'Y'
                    ELSE
                        'N'
                END
             ) AS USG_BILLED_FLG
        ,    DCD.BILL_WITH_EQUIP_FLG
<!-- END 2017/09/13 K.Kim [QC#19938, ADD] -->
<!-- START 2017/09/21 K.Kitachi [QC#21222, ADD] -->
    ,   (
            CASE
                WHEN
                    (
                        SELECT
                            COUNT(*)
                        FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                             DS_CONTR_PRC_EFF DPE -->
                            TARGET_DS_CONTR_PRC_EFF DPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                        WHERE
                                DCD.DS_CONTR_DTL_PK         =    DPE.DS_CONTR_DTL_PK
                            AND DCD.GLBL_CMPY_CD            =    DPE.GLBL_CMPY_CD
                            AND DCD.EZCANCELFLAG            =    DPE.EZCANCELFLAG
                            AND DPE.BASE_CHRG_FLG           =    'Y'
                            <iterate property="dsContrPrcEffStsCdList" var="dsContrPrcEffStsCd[]" open="AND DPE.DS_CONTR_PRC_EFF_STS_CD NOT IN (" close=")" conjunction=",">
                                #dsContrPrcEffStsCd[]#
                            </iterate>
                    ) > 1
                THEN
                    'Y'
                ELSE
                    'N'
            END
         ) AS BASE_PRC_EFF_MULTI_FLG
<!-- END 2017/09/21 K.Kitachi [QC#21222, ADD] -->
<!-- START 2023/08/18 T.Kojima [QC#60846, ADD] -->
        ,    'N'                             AS    USG_PRC_EFF_MULTI_FLG
<!-- END 2023/08/18 T.Kojima [QC#60846, ADD] -->
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
        ,(
            SELECT
                COUNT(*)
            FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                  DS_CONTR_DTL    DTL -->
                 TARGET_DS_CONTR_DTL    DTL
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                ,DS_CONTR_DTL_TP TP
            WHERE
                DTL.GLBL_CMPY_CD       = DCD.GLBL_CMPY_CD
            AND DTL.DS_CONTR_PK        = DCD.DS_CONTR_PK
            AND DTL.EZCANCELFLAG       = '0'
            AND DTL.GLBL_CMPY_CD       = TP.GLBL_CMPY_CD
            AND DTL.DS_CONTR_DTL_TP_CD = TP.DS_CONTR_DTL_TP_CD
            AND TP.EZCANCELFLAG        = '0'
            AND TP.MAIN_UNIT_LINE_FLG  = 'Y'
         ) UNIT_CNT
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
<!-- START 2019/01/21 T.Wada [QC#29371, ADD] -->
        ,    DCD.SVC_INV_MERGE_TP_CD
<!-- END 2019/01/21 T.Wada [QC#29371, ADD] -->
<!-- START 2019/01/17 [QC#29782, ADD] -->
        ,    SPT.SVC_PGM_TP_SORT_NUM
        ,    DCD.DS_CONTR_CRAT_TP_CD
<!-- END 2019/01/17 [QC#29782, ADD] -->
        FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--              DS_CONTR_DTL        DCPP -->
<!--         ,    DS_CONTR_DTL        DCP -->
<!--         ,    DS_CONTR_DTL        DCD -->
<!--         ,    DS_CONTR            DCR -->
             TARGET_DS_CONTR_DTL        DCPP
        ,    TARGET_DS_CONTR_DTL        DCP
        ,    TARGET_DS_CONTR_DTL        DCD
        ,    TARGET_DS_CONTR            DCR
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
        ,    SELL_TO_CUST        STC
        ,    SVC_MACH_MSTR       SMM
        ,    BILL_TO_CUST        BTB
        ,    DS_CONTR_DTL_TP     DDT
        ,    CONTR_COV_SVC       CCS
        ,    DS_COV_SVC_TP       CST
        ,    SVC_CONFIG_MSTR     SCM
        ,    MDL_NM              MDN
        ,    CTAC_PSN            CTP
        ,    SVC_MACH_MSTR       SMMP
        ,    BLLG_CYCLE          BCB
        ,    MDSE                MDS
        <!-- START 2017/10/20 K.Kojima [QC#21232,MOD] -->
        <!-- ,    DS_CONTR_BLLG_SCHD  BSB -->
        ,(
            SELECT
                 GLBL_CMPY_CD
                ,DS_CONTR_DTL_PK
                ,NEXT_BLLG_DT
                ,DS_CONTR_PRC_EFF_PK
                ,EZCANCELFLAG
            FROM
                (
                    SELECT
                         BDCBS.GLBL_CMPY_CD
                        ,BDCBS.DS_CONTR_DTL_PK
                        ,BDCBS.NEXT_BLLG_DT
                        ,BDCBS.DS_CONTR_PRC_EFF_PK
                        ,DENSE_RANK() OVER (PARTITION BY BDCD.DS_CONTR_DTL_PK ORDER BY BDCBS.NEXT_BLLG_DT, BDCBS.DS_CONTR_BLLG_SCHD_PK) AS BASE_RANK
                        ,BDCBS.EZCANCELFLAG
                    FROM
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--                          DS_CONTR_DTL       BDCD -->
<!--                         ,DS_CONTR_BLLG_SCHD BDCBS -->
                         TARGET_DS_CONTR_DTL       BDCD
                        ,TARGET_DS_CONTR_BLLG_SCHD BDCBS
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
                    WHERE
                            BDCD.GLBL_CMPY_CD         = #glblCmpyCd#
                        AND BDCD.DS_CONTR_PK          = #dsContrPk#
                        AND BDCD.EZCANCELFLAG         = '0'
                        AND BDCD.GLBL_CMPY_CD         = BDCBS.GLBL_CMPY_CD
                        AND BDCD.DS_CONTR_DTL_PK      = BDCBS.DS_CONTR_DTL_PK
                        AND BDCBS.INV_FLG             = 'N'
                        AND BDCBS.BASE_CHRG_FLG       = 'Y'
                        AND BDCBS.DS_BLLG_SCHD_TP_CD  = #dsBllgSchdTpRegular#
                        AND BDCBS.EZCANCELFLAG        = '0'
                        <!-- START 2023/05/24 L.Borrega [QC#61370, ADD] -->
                        AND BDCBS.SKIP_RECOV_TP_CD    = #skipRecovTpNone#
                        <!-- END 2023/05/24 L.Borrega [QC#61370, ADD] -->
                )
            WHERE
                BASE_RANK = 1
         ) BSB
         <!-- END 2017/10/20 K.Kojima [QC#21232,MOD] -->
<!-- START 2017/09/26 K.Kojima [QC#21221,ADD] -->
<!-- START 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!--         ,    DS_CONTR_PRC_EFF    CPE -->
        ,    TARGET_DS_CONTR_PRC_EFF    CPE
<!-- END 2018/04/09 K.Kojima [QC#24802, MOD] -->
<!-- END 2017/09/26 K.Kojima [QC#21221,ADD] -->
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
        ,    MDSE                MDS2
        ,    SHIP_TO_CUST        SHTC
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
<!-- START 2019/01/17 [QC#29782, ADD] -->
        ,    SVC_PGM_TP          SPT
<!-- END 2019/01/17 [QC#29782, ADD] -->
        WHERE
            DCPP.DS_CONTR_PK                   =    #dsContrPk#
        AND    DCPP.DS_CONTR_DTL_TP_CD         =    #dsContrDtlTpCd#
        AND    DCPP.GLBL_CMPY_CD               =    #glblCmpyCd#
        AND    DCPP.EZCANCELFLAG               =    '0'
        AND    DCP.DS_CONTR_PK                 =    DCPP.DS_CONTR_PK
        AND    DCP.PRNT_DS_CONTR_DTL_PK        =    DCPP.DS_CONTR_DTL_PK
        AND    DCP.GLBL_CMPY_CD                =    DCPP.GLBL_CMPY_CD
        AND    DCP.EZCANCELFLAG                =    DCPP.EZCANCELFLAG
        <!-- START 2017/06/17 K.Kojima [QC#19256,ADD] -->
        AND    DCP.DS_CONTR_DTL_STS_CD  &lt;&gt;    #dsContrDtlStsOrdr#
        <!-- END 2017/06/17 K.Kojima [QC#19256,ADD] -->
        AND    DCD.DS_CONTR_PK                 =    DCP.DS_CONTR_PK
        AND    DCD.PRNT_DS_CONTR_DTL_PK        =    DCP.DS_CONTR_DTL_PK
        AND    DCD.GLBL_CMPY_CD                =    DCP.GLBL_CMPY_CD
        AND    DCD.EZCANCELFLAG                =    DCP.EZCANCELFLAG
        <!-- START 2017/06/17 K.Kojima [QC#19256,ADD] -->
        AND    DCD.DS_CONTR_DTL_STS_CD  &lt;&gt;    #dsContrDtlStsOrdr#
        <!-- END 2017/06/17 K.Kojima [QC#19256,ADD] -->
        AND    DCR.DS_CONTR_PK                 =    DCD.DS_CONTR_PK
        AND    DCR.GLBL_CMPY_CD                =    DCD.GLBL_CMPY_CD
        AND    DCR.EZCANCELFLAG                =    DCD.EZCANCELFLAG
        AND    DCR.SELL_TO_CUST_CD             =    STC.SELL_TO_CUST_CD(+)
        AND    DCR.GLBL_CMPY_CD                =    STC.GLBL_CMPY_CD(+)
        AND    DCR.EZCANCELFLAG                =    STC.EZCANCELFLAG(+)
        AND    DCD.SVC_MACH_MSTR_PK            =    SMM.SVC_MACH_MSTR_PK(+)
        AND    DCD.GLBL_CMPY_CD                =    SMM.GLBL_CMPY_CD(+)
        AND    DCD.EZCANCELFLAG                =    SMM.EZCANCELFLAG(+)
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
        AND    SMM.MDSE_CD                     =    MDS2.MDSE_CD(+)
        AND    SMM.GLBL_CMPY_CD                =    MDS2.GLBL_CMPY_CD(+)
        AND    SMM.EZCANCELFLAG                =    MDS2.EZCANCELFLAG(+)
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
        AND    DCD.BASE_BILL_TO_CUST_CD        =    BTB.BILL_TO_CUST_CD(+)
        AND    DCD.GLBL_CMPY_CD                =    BTB.GLBL_CMPY_CD(+)
        AND    DCD.EZCANCELFLAG                =    BTB.EZCANCELFLAG(+)
        AND    DCD.DS_CONTR_DTL_TP_CD          =    DDT.DS_CONTR_DTL_TP_CD
        AND    DDT.SVC_PRC_FLG                 =    #svcPrcFlg#
        AND    DCD.GLBL_CMPY_CD                =    DDT.GLBL_CMPY_CD
        AND    DCD.EZCANCELFLAG                =    DDT.EZCANCELFLAG
        AND    DCD.DS_CONTR_DTL_PK             =    CCS.DS_CONTR_DTL_PK(+)
        AND    DCD.GLBL_CMPY_CD                =    CCS.GLBL_CMPY_CD(+)
        AND    DCD.EZCANCELFLAG                =    CCS.EZCANCELFLAG(+)
        AND    CCS.DS_COV_SVC_TP_CD            =    CST.DS_COV_SVC_TP_CD(+)
        AND    CCS.GLBL_CMPY_CD                =    CST.GLBL_CMPY_CD(+)
        AND    CCS.EZCANCELFLAG                =    CST.EZCANCELFLAG(+)
        AND    SMM.SVC_CONFIG_MSTR_PK          =    SCM.SVC_CONFIG_MSTR_PK(+)
        AND    SMM.GLBL_CMPY_CD                =    SCM.GLBL_CMPY_CD(+)
        AND    SMM.EZCANCELFLAG                =    SCM.EZCANCELFLAG(+)
        AND    SCM.MDL_ID                      =    MDN.T_MDL_ID(+)
        AND    SCM.GLBL_CMPY_CD                =    MDN.T_GLBL_CMPY_CD(+)
        AND    SCM.EZCANCELFLAG                =    MDN.EZCANCELFLAG(+)
        AND    DCD.CTAC_PSN_PK                 =    CTP.CTAC_PSN_PK(+)
        AND    DCD.GLBL_CMPY_CD                =    CTP.GLBL_CMPY_CD(+)
        AND    DCD.EZCANCELFLAG                =    CTP.EZCANCELFLAG(+)
        AND    DCP.SVC_MACH_MSTR_PK            =    SMMP.SVC_MACH_MSTR_PK(+)
        AND    DCP.GLBL_CMPY_CD                =    SMMP.GLBL_CMPY_CD(+)
        AND    DCP.EZCANCELFLAG                =    SMMP.EZCANCELFLAG(+)
        AND    DCD.BASE_BLLG_CYCLE_CD          =    BCB.BLLG_CYCLE_CD(+)
        AND    DCD.GLBL_CMPY_CD                =    BCB.GLBL_CMPY_CD(+)
        AND    DCD.EZCANCELFLAG                =    BCB.EZCANCELFLAG(+)
        AND    DCD.GLBL_CMPY_CD                =    MDS.GLBL_CMPY_CD(+)
        AND    DCD.SVC_PGM_MDSE_CD             =    MDS.MDSE_CD(+)
        AND    DCD.EZCANCELFLAG                =    MDS.EZCANCELFLAG(+)
        AND    DCD.GLBL_CMPY_CD                =    BSB.GLBL_CMPY_CD(+)
        AND    DCD.DS_CONTR_DTL_PK             =    BSB.DS_CONTR_DTL_PK(+)
        AND    DCD.EZCANCELFLAG                =    BSB.EZCANCELFLAG(+)
        <!-- START 2017/10/20 K.Kojima [QC#21232,DEL] -->
        <!-- AND    BSB.INV_FLG(+)                  =    'N' -->
        <!-- AND    BSB.BASE_CHRG_FLG(+)            =    'Y' -->
        <!-- END 2017/10/20 K.Kojima [QC#21232,DEL] -->
        <!-- START 2017/08/31 K.Kojima [QC#18355,ADD] -->
        <!-- START 2017/10/20 K.Kojima [QC#21232,DEL] -->
        <!-- AND    BSB.DS_BLLG_SCHD_TP_CD(+)       =    #dsBllgSchdTpRegular# -->
        <!-- END 2017/10/20 K.Kojima [QC#21232,DEL] -->
        <!-- END 2017/08/31 K.Kojima [QC#18355,ADD] -->
        <!-- START 2017/09/26 K.Kojima [QC#21221,ADD] -->
        AND    BSB.GLBL_CMPY_CD                =    CPE.GLBL_CMPY_CD(+)
        AND    BSB.DS_CONTR_PRC_EFF_PK         =    CPE.DS_CONTR_PRC_EFF_PK(+)
        AND    BSB.EZCANCELFLAG                =    CPE.EZCANCELFLAG(+)
        <!-- END 2017/09/26 K.Kojima [QC#21221,ADD] -->
<!-- START 2018/01/10 T.Tomita [QC#18552, ADD] -->
        AND    SMM.CUR_LOC_NUM                 =    SHTC.SHIP_TO_CUST_CD(+)
        AND    SMM.GLBL_CMPY_CD                =    SHTC.GLBL_CMPY_CD(+)
        AND    SMM.EZCANCELFLAG                =    SHTC.EZCANCELFLAG(+)
<!-- END   2018/01/10 T.Tomita [QC#18552, ADD] -->
<!-- START 2019/01/17 [QC#29782, ADD] -->
        AND    MDS.GLBL_CMPY_CD                =    SPT.GLBL_CMPY_CD(+)
        AND    MDS.SVC_PGM_TP_CD               =    SPT.SVC_PGM_TP_CD(+)
        AND    MDS.EZCANCELFLAG                =    SPT.EZCANCELFLAG(+)
<!-- END 2019/01/17 [QC#29782, ADD] -->
    ) A
    <!-- START 2017/10/20 K.Kojima [QC#21232,DEL] -->
    <!-- WHERE -->
    <!--     A.BASE_RANK = 1 -->
    <!-- END 2017/10/20 K.Kojima [QC#21232,DEL] -->
)
ORDER BY
     SORT_SER_NUM                           NULLS FIRST
,    SORT_MDSE_CD
<!-- START 2022/01/06 R.Cabral [QC#59502, ADD] -->
,    NVL(PRNT_DS_CONTR_DTL_PK, DS_CONTR_DTL_PK)
<!-- END   2022/01/06 R.Cabral [QC#59502, ADD] -->
<!-- START 2019/01/17 [QC#29782, ADD] -->
<!-- START 2022/03/08 R.Cabral [QC#59502-1, ADD] -->
,    DS_CONTR_DTL_TP_SORT_NUM
<!-- END   2022/03/08 R.Cabral [QC#59502-1, ADD] -->
,    SVC_PGM_TP_SORT_NUM
,    NVL(DS_CONTR_CRAT_TP_CD, #dsContrCratTp#)
,    PRNT_DS_CONTR_DTL_PK
<!-- END 2019/01/17 [QC#29782, ADD] -->
<!-- START 2022/03/08 R.Cabral [QC#59502-1, DEL] -->
<!-- ,    DS_CONTR_DTL_TP_SORT_NUM -->
<!-- END   2022/03/08 R.Cabral [QC#59502-1, DEL] -->
<!-- START 2017/08/02 K.Kitachi [QC#18116, ADD] -->
,    DS_CONTR_DTL_PK
<!-- END 2017/08/02 K.Kitachi [QC#18116, ADD] -->
,    MTR_LB_SORT_NUM
,    XS_MTR_COPY_QTY
,    XS_MTR_AMT_RATE
</statement>

<statement id="getContrCovSvc" parameterClass="Map" resultClass="Map">>
SELECT
    CCS.*
FROM
    CONTR_COV_SVC    CCS
WHERE
    CCS.DS_CONTR_DTL_PK    =    #dsContrDtlPk#
AND    CCS.GLBL_CMPY_CD    =    #glblCmpyCd#
AND    CCS.EZCANCELFLAG    =    '0'
</statement>

<statement id="getMdseBySerNum" parameterClass="Map" resultClass="Map">
    SELECT
         SMM.SVC_MACH_MSTR_PK
        ,SMM.MDSE_CD
    FROM
         SVC_MACH_MSTR    SMM
        ,SVC_CONFIG_MSTR  SCM
    WHERE
            SMM.GLBL_CMPY_CD         = #glblCmpyCd#
        AND SMM.EZCANCELFLAG         = '0'
        AND SMM.SER_NUM              = #serNum#
        <iterate property="svcMachMstrStsCdList" var="svcMachMstrStsCd[]" open="AND SMM.SVC_MACH_MSTR_STS_CD IN (" close=")" conjunction=",">
            #svcMachMstrStsCd[]#
        </iterate>
        AND SMM.GLBL_CMPY_CD         = SCM.GLBL_CMPY_CD
        AND SMM.SVC_CONFIG_MSTR_PK   = SCM.SVC_CONFIG_MSTR_PK
        AND SCM.EZCANCELFLAG         = '0'
</statement>

<statement id="getPgmMdseCdPullDownList" parameterClass="Map" resultClass="Map">
    SELECT
         MDS.MDSE_CD
        ,MDS.MDSE_DESC_SHORT_TXT
    FROM
         MDSE             MDS
        ,SVC_COV_TMPL_TP  SCT
<!-- add start 2018/08/23 QC#27790 -->
        ,ITEM_TP_VAL_SET  ITV
<!-- add end 2018/08/23 QC#27790 -->
    WHERE
            MDS.GLBL_CMPY_CD       = #glblCmpyCd#
<!-- add start 2018/08/23 QC#27790 -->
        AND MDS.RGTN_STS_CD        = #rgtnStsCd#
<!-- add end 2018/08/23 QC#27790 -->
        AND MDS.EZCANCELFLAG       = '0'
        AND MDS.GLBL_CMPY_CD       = SCT.GLBL_CMPY_CD
        AND MDS.SVC_COV_TMPL_TP_CD = SCT.SVC_COV_TMPL_TP_CD
        <isNotNull property="mdseDescShortTxt">
        AND MDS.MDSE_DESC_SHORT_TXT LIKE #mdseDescShortTxt#
        </isNotNull>
        <isNotNull property="mdseCd">
        AND MDS.MDSE_CD LIKE #mdseCd#
        </isNotNull>
        AND SCT.EZCANCELFLAG       = '0'
<!-- add start 2018/08/23 QC#27790 -->
        AND MDS.GLBL_CMPY_CD       = ITV.GLBL_CMPY_CD
        AND MDS.MDSE_ITEM_TP_CD    = ITV.MDSE_ITEM_TP_CD
        AND ITV.ITEM_TP_CTX_TP_CD  = #itemTpCtxTpCd#
        AND ITV.EZCANCELFLAG       = '0'
<!-- add end 2018/08/23 QC#27790 -->
    ORDER BY
         SCT.SVC_COV_TMPL_TP_SORT_NUM 
        ,MDS.MDSE_CD
</statement>

<statement id="getSvcPgmMdseInfo" parameterClass="Map" resultClass="Map">
    SELECT
         MDS.MDSE_CD
        ,MDS.MDSE_DESC_SHORT_TXT
    FROM
         MDSE             MDS
        ,SVC_COV_TMPL_TP  SCT
<!-- add start 2018/08/23 QC#27790 -->
        ,ITEM_TP_VAL_SET  ITV
<!-- add end 2018/08/23 QC#27790 -->
    WHERE
            MDS.GLBL_CMPY_CD       = #glblCmpyCd#
<!-- add start 2018/08/23 QC#27790 -->
        AND MDS.RGTN_STS_CD        = #rgtnStsCd#
<!-- add end 2018/08/23 QC#27790 -->
        AND MDS.EZCANCELFLAG       = '0'
        AND MDS.GLBL_CMPY_CD       = SCT.GLBL_CMPY_CD
        AND MDS.SVC_COV_TMPL_TP_CD = SCT.SVC_COV_TMPL_TP_CD
        AND MDS.MDSE_CD            = #svcPgmMdseCd#
        AND SCT.EZCANCELFLAG       = '0'
<!-- add start 2018/08/23 QC#27790 -->
        AND MDS.GLBL_CMPY_CD       = ITV.GLBL_CMPY_CD
        AND MDS.MDSE_ITEM_TP_CD    = ITV.MDSE_ITEM_TP_CD
        AND ITV.ITEM_TP_CTX_TP_CD  = #itemTpCtxTpCd#
        AND ITV.EZCANCELFLAG       = '0'
<!-- add end 2018/08/23 QC#27790 -->
    ORDER BY
         SCT.SVC_COV_TMPL_TP_SORT_NUM 
        ,MDS.MDSE_CD
</statement>

<statement id="getCtacPsnPk" parameterClass="Map" resultClass="BigDecimal">
    SELECT
         Z1.CTAC_PSN_PK
    FROM (
        SELECT
             Z.NO
            ,Z.CTAC_PSN_PK
            ,RANK() OVER(ORDER BY Z.NO) AS RANK_NUM
        FROM (
            SELECT
                 1             AS NO
                ,C.CTAC_PSN_PK
            FROM
                CTAC_PSN C
            WHERE
                    C.GLBL_CMPY_CD          = #glblCmpyCd#
                AND C.EZCANCELFLAG          = '0'
                AND RTRIM(C.CTAC_PSN_FIRST_NM || ' ' || C.CTAC_PSN_LAST_NM) = #ctacPsnNm#
            UNION ALL
            SELECT
                 2             AS NO
                ,C.CTAC_PSN_PK
            FROM
                CTAC_PSN C
            WHERE
                    C.GLBL_CMPY_CD          = #glblCmpyCd#
                AND C.EZCANCELFLAG          = '0'
                AND (
                        C.CTAC_PSN_FIRST_NM = #ctacPsnNm#
                    OR  C.CTAC_PSN_LAST_NM  = #ctacPsnNm#
                    )
            ) Z
        ) Z1
    WHERE
        Z1.RANK_NUM = 1
</statement>

<statement id="getBranch" parameterClass="Map" resultClass="Map">
    SELECT
        A.SVC_CONTR_BR_DESC_TXT
    FROM
        SVC_CONTR_BR A
    WHERE
            A.GLBL_CMPY_CD                         = #glblCmpyCd#
        AND A.SVC_CONTR_BR_CD                      = #svcContrBrCd#
        AND A.EZCANCELFLAG                         = '0'
        AND A.SVC_CONTR_BR_ACTV_FLG                = 'Y'
        AND A.EFF_FROM_DT                      &lt;= #slsDt#
        AND NVL(A.EFF_THRU_DT, #defEffThruDt#) &gt;= #slsDt#

</statement>

<statement id="getContrAdminPsnCd" parameterClass="Map" resultClass="Map">
    SELECT
        A.PSN_CD
    FROM
        S21_PSN A
    WHERE
        A.GLBL_CMPY_CD = #glblCmpyCd#
    AND A.PSN_FIRST_NM || ' ' || A.PSN_LAST_NM = #xxPsnNm#
    AND A.EZCANCELFLAG = '0'

</statement>

<statement id="getRepInfo" parameterClass="Map" resultClass="Map">
    SELECT
        DISTINCT
         SCB.SVC_CONTR_BR_DESC_TXT
        ,BRR.PSN_CD
        ,RTRIM(PSN.PSN_FIRST_NM || ' ' || PSN.PSN_LAST_NM) AS PSN_NM
    FROM
         LINE_BIZ_TP       LBT
        ,AVAL_LINE_BIZ_TP_SRC   ALB
        ,SVC_RG            SRG
        ,SVC_RG_BR_RELN    RBR
        ,SELL_TO_CUST      STC
        ,SVC_BR_RESRC_RELN BRR
        ,S21_PSN           PSN
        ,SVC_CONTR_BR      SCB
    WHERE
            LBT.GLBL_CMPY_CD                         = #glblCmpyCd#
        AND LBT.LINE_BIZ_TP_CD                       = #svcLineBizCd#
        AND LBT.EZCANCELFLAG                         = '0'
        AND LBT.GLBL_CMPY_CD                         = ALB.GLBL_CMPY_CD
        AND LBT.LINE_BIZ_TP_CD                       = ALB.LINE_BIZ_TP_CD
        AND ALB.SYS_SRC_CD                           = #sysSrcCd#
        AND ALB.EZCANCELFLAG                         = '0'
        AND LBT.GLBL_CMPY_CD                         = SRG.GLBL_CMPY_CD
        AND LBT.LINE_BIZ_TP_CD                       = SRG.SVC_LINE_BIZ_CD
        AND SRG.SVC_RG_ACTV_FLG                      = 'Y'
        AND SRG.EFF_FROM_DT                      &lt;= #slsDt#
        AND NVL(SRG.EFF_THRU_DT, #defEffThruDt#) &gt;= #slsDt#
        AND SRG.EZCANCELFLAG                         = '0'
        AND SRG.GLBL_CMPY_CD                         = RBR.GLBL_CMPY_CD
        AND SRG.SVC_RG_PK                            = RBR.SVC_RG_PK
        AND SRG.EZCANCELFLAG                         = '0'
        AND BRR.GLBL_CMPY_CD                         = STC.GLBL_CMPY_CD
        AND BRR.SVC_BR_RESRC_DEF_FROM_NM         &lt;= STC.DS_ACCT_NM
        AND BRR.SVC_BR_RESRC_DEF_THRU_NM         &gt;= STC.DS_ACCT_NM
        AND BRR.SVC_CONTR_BR_CD                      = #svcContrBrCd#
        AND BRR.SVC_BR_RESRC_ACTV_FLG                = 'Y'
        AND BRR.EFF_FROM_DT                      &lt;= #slsDt#
        AND NVL(BRR.EFF_THRU_DT, #defEffThruDt#) &gt;= #slsDt#
        AND BRR.EZCANCELFLAG                         = '0'
        AND BRR.GLBL_CMPY_CD                         = PSN.GLBL_CMPY_CD
        AND BRR.PSN_CD                               = PSN.PSN_CD
        AND PSN.EFF_FROM_DT                      &lt;= #slsDt#
        AND NVL(PSN.EFF_THRU_DT, #defEffThruDt#) &gt;= #slsDt#
        AND PSN.EZCANCELFLAG                         = '0'
        AND BRR.GLBL_CMPY_CD                         = STC.GLBL_CMPY_CD
        AND STC.SELL_TO_CUST_CD                      = #dsAcctNum#
        AND STC.EFF_FROM_DT                      &lt;= #slsDt#
        AND NVL(STC.EFF_THRU_DT, #defEffThruDt#) &gt;= #slsDt#
        AND STC.EZCANCELFLAG                         = '0'
        AND BRR.GLBL_CMPY_CD                         = SCB.GLBL_CMPY_CD
        AND BRR.SVC_CONTR_BR_CD                      = SCB.SVC_CONTR_BR_CD
        AND SCB.EFF_FROM_DT                      &lt;= #slsDt#
        AND NVL(SCB.EFF_THRU_DT, #defEffThruDt#) &gt;= #slsDt#
        AND SCB.EZCANCELFLAG                         = '0'
</statement>

<statement id="getSalesRepInfo" parameterClass="Map" resultClass="Map">
    SELECT
         TOC_CD
        ,TOC_NM
    FROM
         S21_ORG
    WHERE
        GLBL_CMPY_CD                    = #glblCmpyCd#
        <isNotNull property="tocCd">
        AND TOC_CD                      = #tocCd#
        </isNotNull>
        <isNotNull property="tocNm">
        AND TOC_NM                      = #tocNm#
        </isNotNull>
        AND RGTN_STS_CD                 = #rgtnStsCd#
        AND EZCANCELFLAG                = '0'
</statement>

<statement id="getCtacPsnReln" parameterClass="Map" resultClass="BigDecimal">
    SELECT
        DCPR.DS_CTAC_PSN_RELN_PK
    FROM
        CTAC_PSN                 CTPN
       ,DS_CTAC_PSN_RELN         DCPR
       ,(
            SELECT
                 BTCS.SELL_TO_CUST_CD
                ,BTCS.LOC_NUM
            FROM
                BILL_TO_CUST     BTCS
            WHERE
                    BTCS.GLBL_CMPY_CD                         = #glblCmpyCd#
                AND BTCS.BILL_TO_CUST_CD                      = #billToCustCd#
                AND BTCS.EFF_FROM_DT                      &lt;= #slsDt#
                AND NVL(BTCS.EFF_THRU_DT, #defEffThruDt#) &gt;= #slsDt#
                AND BTCS.EZCANCELFLAG                         = '0'
        ) BILL
    WHERE
            CTPN.GLBL_CMPY_CD                                = #glblCmpyCd#
        AND CTPN.CTAC_PSN_PK                                 = #ctacPsnPk#
        AND CTPN.EZCANCELFLAG                                = '0'
        AND CTPN.GLBL_CMPY_CD                                = DCPR.GLBL_CMPY_CD
        AND CTPN.CTAC_PSN_PK                                 = DCPR.CTAC_PSN_PK
        <!-- START 2018/04/03 U.Kim [QC#23559(Sol358), MOD] -->
        <!-- AND DCPR.CTAC_TP_CD                                  = #ctacTpCd# -->
        <iterate property="ctacTpList" var="ctacTpList[]" open="AND DCPR.CTAC_TP_CD IN(" close=")" conjunction=",">
            #ctacTpList[]#
        </iterate>
        <!-- END 2018/04/03 U.Kim [QC#23559(Sol358), MOD] -->
        AND DCPR.EFF_FROM_DT                             &lt;= #slsDt#
        AND NVL(DCPR.EFF_THRU_DT, #defEffThruDt#)        &gt;= #slsDt#
        AND DCPR.EZCANCELFLAG                                = '0'
        AND (
                DCPR.DS_ACCT_NUM                             = BILL.SELL_TO_CUST_CD
            OR  DCPR.LOC_NUM                                 = BILL.LOC_NUM
        )
</statement>

<statement id="getInvoicedContrInfo" parameterClass="Map" resultClass="Map">
    SELECT
         DCD.CONTR_CLO_DAY
        ,DCD.MTR_CLO_DAY
        ,DCD.CONTR_EFF_FROM_DT
<!-- START 2018/01/17 T.Tomita [QC#18552, ADD] -->
        ,DCD.BASE_BLLG_TMG_CD
<!-- END   2018/01/17 T.Tomita [QC#18552, ADD] -->
        ,MIN(SCH.BLLG_SCHD_FROM_DT) AS INVOICED_FROM_DT
        ,MAX(SCH.BLLG_SCHD_THRU_DT) AS INVOICED_THRU_DT
    FROM
        DS_CONTR_DTL        DCD
       ,DS_CONTR_BLLG_SCHD  SCH
    WHERE
            DCD.GLBL_CMPY_CD        = #glblCmpyCd#
        AND DCD.DS_CONTR_DTL_PK     = #dsContrDtlPk#
        AND DCD.EZCANCELFLAG        = '0'
        AND DCD.GLBL_CMPY_CD        = SCH.GLBL_CMPY_CD
        AND DCD.DS_CONTR_DTL_PK     = SCH.DS_CONTR_DTL_PK
        AND SCH.EZCANCELFLAG        = '0'
        AND SCH.INV_FLG             = 'Y'
    GROUP BY
         DCD.CONTR_CLO_DAY
        ,DCD.MTR_CLO_DAY
        ,DCD.CONTR_EFF_FROM_DT
<!-- START 2018/01/17 T.Tomita [QC#18552, ADD] -->
        ,DCD.BASE_BLLG_TMG_CD
<!-- END   2018/01/17 T.Tomita [QC#18552, ADD] -->
</statement>

<statement id="countSvcBrResrcReln" parameterClass="Map" resultClass="BigDecimal">
    SELECT
        COUNT(*)  AS CNT
    FROM
         SVC_BR_RESRC_RELN A
        ,SVC_CONTR_BR      B
        ,SVC_RG_BR_RELN    C
        ,SVC_RG            D
    WHERE
        A.GLBL_CMPY_CD                  =  #glblCmpyCd#
    AND A.EZCANCELFLAG                  =  '0'
    AND A.SVC_CONTR_BR_CD               =  #svcContrBrCd#
    AND A.PSN_CD                        =  #psnCd#
    AND A.SVC_BR_RESRC_ACTV_FLG         =  'Y'
    AND A.EFF_FROM_DT                      &lt;= #slsDt#
    AND NVL(A.EFF_THRU_DT, #defEffThruDt#) &gt;= #slsDt#
    AND A.GLBL_CMPY_CD                  =  B.GLBL_CMPY_CD
    AND A.SVC_CONTR_BR_CD               =  B.SVC_CONTR_BR_CD
    AND B.EZCANCELFLAG                  =  '0'
    AND B.SVC_CONTR_BR_ACTV_FLG         =  'Y'
    AND B.EFF_FROM_DT                      &lt;= #slsDt#
    AND NVL(B.EFF_THRU_DT, #defEffThruDt#) &gt;= #slsDt#
    AND B.GLBL_CMPY_CD                  =  C.GLBL_CMPY_CD
    AND B.SVC_CONTR_BR_CD               =  C.SVC_CONTR_BR_CD
    AND C.EZCANCELFLAG                  =  '0'
    AND C.GLBL_CMPY_CD                  =  D.GLBL_CMPY_CD
    AND C.SVC_RG_PK                     =  D.SVC_RG_PK
    AND D.EZCANCELFLAG                  =  '0'
    AND D.SVC_RG_ACTV_FLG               =  'Y'
    AND D.EFF_FROM_DT                      &lt;= #slsDt#
    AND NVL(D.EFF_THRU_DT, #defEffThruDt#) &gt;= #slsDt#

</statement>

<statement id="getCustPmtTerm" parameterClass="Map" resultClass="Map">
    SELECT
         A.PMT_TERM_CASH_DISC_CD
        ,C.PMT_TERM_CASH_DISC_DESC_TXT
    FROM
         CUST_CR_PRFL       A
        ,PMT_TERM_CASH_DISC C
    WHERE
            A.EZCANCELFLAG          = '0'
        AND A.GLBL_CMPY_CD          = #glblCmpyCd#
        AND A.BILL_TO_CUST_CD       = #billToCustCd#
        AND C.EZCANCELFLAG          = '0'
        AND A.GLBL_CMPY_CD          = C.GLBL_CMPY_CD
        AND A.PMT_TERM_CASH_DISC_CD = C.PMT_TERM_CASH_DISC_CD
</statement>

<statement id="getAcctPmtTerm" parameterClass="Map" resultClass="Map">
    SELECT
         C.PMT_TERM_CASH_DISC_CD
        ,D.PMT_TERM_CASH_DISC_DESC_TXT
    FROM
         BILL_TO_CUST       A
        ,DS_ACCT_CR_PRFL    C
        ,PMT_TERM_CASH_DISC D
    WHERE
            A.EZCANCELFLAG          = '0'
        AND A.GLBL_CMPY_CD          = #glblCmpyCd#
        AND A.BILL_TO_CUST_CD       = #billToCustCd#
        AND C.EZCANCELFLAG          = '0'
        AND A.GLBL_CMPY_CD          = C.GLBL_CMPY_CD
        AND A.SELL_TO_CUST_CD       = C.DS_ACCT_NUM
        AND D.EZCANCELFLAG          = '0'
        AND C.GLBL_CMPY_CD          = D.GLBL_CMPY_CD
        AND C.PMT_TERM_CASH_DISC_CD = D.PMT_TERM_CASH_DISC_CD
</statement>

<!-- START 2016/04/07 [QC#5312,5313, ADD] -->
    <statement id="findBranchNameInfo" parameterClass="Map" resultClass="Map">
        SELECT
             SCB.SVC_CONTR_BR_CD         AS  SVC_CONTR_BR_CD
            ,SCB.SVC_CONTR_BR_DESC_TXT   AS  SVC_CONTR_BR_DESC_TXT
            ,SR.SVC_LINE_BIZ_CD          AS  SVC_LINE_BIZ_CD
        FROM 
             SVC_CONTR_BR    SCB
            ,SVC_RG_BR_RELN  SRBR
            ,SVC_RG          SR
        WHERE
                SCB.EZCANCELFLAG          = '0'
            AND SCB.GLBL_CMPY_CD          = #glblCmpyCd#
            AND SCB.SVC_CONTR_BR_DESC_TXT LIKE #branchName#
            AND SCB.SVC_CONTR_BR_ACTV_FLG = 'Y'
            AND SCB.EFF_FROM_DT           &lt;= #slsDt#
            AND (SCB.EFF_THRU_DT          &gt;= #slsDt# OR SCB.EFF_THRU_DT IS NULL)
            AND SRBR.EZCANCELFLAG         = '0'
            AND SRBR.GLBL_CMPY_CD         = SCB.GLBL_CMPY_CD
            AND SRBR.SVC_CONTR_BR_CD      = SCB.SVC_CONTR_BR_CD
            AND SR.EZCANCELFLAG           = '0'
            AND SR.GLBL_CMPY_CD           = SRBR.GLBL_CMPY_CD
            AND SR.SVC_RG_PK              = SRBR.SVC_RG_PK
            AND SR.SVC_LINE_BIZ_CD        = #lob#
            AND SR.SVC_RG_ACTV_FLG        = 'Y'
            AND SR.EFF_FROM_DT            &lt;= #slsDt#
            AND (SR.EFF_THRU_DT           &gt;= #slsDt# OR SR.EFF_THRU_DT IS NULL)
    </statement>
    <statement id="findRepNameInfo" parameterClass="Map" resultClass="Map">
        SELECT
             PSN.PSN_CD          AS  PSN_CD
            ,PSN.PSN_FIRST_NM    AS  FIRST_NM
            ,PSN.PSN_LAST_NM     AS  LAST_NM
        FROM 
             S21_PSN    PSN
        WHERE
                PSN.EZCANCELFLAG    = '0'
            AND PSN.GLBL_CMPY_CD    = #glblCmpyCd#
            AND PSN.PSN_FIRST_NM    LIKE #firstName#
            <isNotNull property="lastName">
            AND PSN.PSN_LAST_NM     LIKE #lastName#
            </isNotNull>
            <!-- START 2019/02/12 S.Kitamura [QC#30264, DEL] -->
            <!-- AND PSN.PSN_TP_CD       = #psnTpCd# -->
            <!-- END 2019/02/12 S.Kitamura [QC#30264, DEL] -->
    </statement>
<!-- END 2016/04/07 [QC#5312,5313, ADD] -->
<!-- START 2016/04/26 T.Tomita [QC#3886, ADD] -->
    <statement id="findSellToCust" parameterClass="Map" resultClass="Map">
        SELECT
             STC.SELL_TO_CUST_CD
            ,STC.DS_ACCT_NM
            ,STC.DEF_BASE_CYCLE_CD
            ,STC.DEF_USG_CYCLE_CD
            ,STC.DS_BILL_TGTR_FLG
            ,STC.DEF_BASE_TP_CD
            ,STC.DEF_USG_TP_CD
            <!-- START 2022/03/22 [QC#59683, ADD] -->
            ,STC.DS_INV_TGTR_TP_CD
            <!-- END   2022/03/22 [QC#59683, ADD] -->
        FROM
            SELL_TO_CUST STC
        WHERE
                STC.GLBL_CMPY_CD    = #glblCmpyCd#
            AND STC.SELL_TO_CUST_CD LIKE #dsAcctNum#
            AND STC.EZCANCELFLAG    = '0'
            <!-- START 2017/10/05 M.Naito [QC#21072,ADD] -->
            AND ROWNUM              &lt;= 2
            <!-- END 2017/10/05 M.Naito [QC#21072,ADD] -->
    </statement>

    <statement id="findShipToCust" parameterClass="Map" resultClass="Map">
        SELECT
             SHP.SHIP_TO_CUST_CD
            ,SHP.LOC_NM
        FROM
            SHIP_TO_CUST SHP
        WHERE
                SHP.GLBL_CMPY_CD       = #glblCmpyCd#
            AND SHP.SHIP_TO_CUST_CD LIKE #shipToCustCd#
            AND SHP.EZCANCELFLAG       = '0'
            <!-- START 2017/10/05 M.Naito [QC#21072,ADD] -->
            AND ROWNUM                 &lt;= 2
            <!-- END 2017/10/05 M.Naito [QC#21072,ADD] -->
    </statement>

    <statement id="findBillToCust" parameterClass="Map" resultClass="Map">
        SELECT
             BTC.BILL_TO_CUST_CD
            ,BTC.LOC_NM
            ,BTC.FIRST_LINE_ADDR
            ,BTC.SCD_LINE_ADDR
            ,BTC.THIRD_LINE_ADDR
            ,BTC.FRTH_LINE_ADDR
            ,BTC.CTY_ADDR
            ,BTC.ST_CD
            ,BTC.POST_CD
        FROM
            BILL_TO_CUST BTC
        WHERE
                BTC.GLBL_CMPY_CD       = #glblCmpyCd#
            AND BTC.BILL_TO_CUST_CD LIKE #billToCustCd#
            AND BTC.EZCANCELFLAG       = '0'
            <!-- START 2017/10/05 M.Naito [QC#21072,ADD] -->
            AND ROWNUM                 &lt;= 2
            <!-- END 2017/10/05 M.Naito [QC#21072,ADD] -->
    </statement>
    <statement id="findTocInfo" parameterClass="Map" resultClass="Map">
        SELECT
             T.TOC_CD
            ,T.TOC_NM
        FROM
             TOC              T
            ,ORG_FUNC_ROLE_TP OFRT
            ,BIZ_AREA_ORG     BAO
            ,ORG_FUNC_ASG     OFA
            ,S21_PSN          SP
        WHERE
                T.GLBL_CMPY_CD            = #glblCmpyCd#
            AND T.TOC_NM               LIKE #tocNm#
            AND T.EZCANCELFLAG            = '0'
            AND T.GLBL_CMPY_CD            = OFRT.GLBL_CMPY_CD
            AND T.ORG_FUNC_ROLE_TP_CD     = OFRT.ORG_FUNC_ROLE_TP_CD
            AND OFRT.SLS_REP_FLG          = 'Y'
            AND OFRT.EZCANCELFLAG         = '0'
            AND OFRT.GLBL_CMPY_CD         = BAO.GLBL_CMPY_CD
            AND OFRT.FIRST_ORG_CD         = BAO.BIZ_AREA_ORG_CD
            AND BAO.SLS_FLG               = 'Y'
            AND BAO.ORG_STRU_TP_CD        = #orgStruTpCd#
            AND T.GLBL_CMPY_CD            = OFA.GLBL_CMPY_CD
            AND T.TOC_CD                  = OFA.TOC_CD
            AND OFA.EZCANCELFLAG          = '0'
            AND OFA.GLBL_CMPY_CD          = SP.GLBL_CMPY_CD
            AND OFA.PSN_CD                = SP.PSN_CD
            AND SP.EFF_FROM_DT        &lt;= #slsDt#
            AND (
                    SP.EFF_THRU_DT    &gt;= #slsDt#
                OR  SP.EFF_THRU_DT       IS NULL
            )
            AND SP.EZCANCELFLAG           = '0'
    </statement>
    <statement id="getTocInfo" parameterClass="Map" resultClass="Map">
        SELECT
             T.TOC_CD
            ,T.TOC_NM
        FROM
             TOC              T
            ,ORG_FUNC_ROLE_TP OFRT
            ,BIZ_AREA_ORG     BAO
            ,ORG_FUNC_ASG     OFA
            ,S21_PSN          SP
        WHERE
                T.GLBL_CMPY_CD            = #glblCmpyCd#
            <!-- START 2018/06/18 K.Kim [QC#25195, MOD] -->
            <isNotNull property="tocCd">
            AND T.TOC_CD                  = #tocCd#
            </isNotNull>
            AND T.TOC_NM                  = #tocNm#
            <!-- END 2018/06/18 K.Kim [QC#25195, MOD] -->
            AND T.EZCANCELFLAG            = '0'
            AND T.GLBL_CMPY_CD            = OFRT.GLBL_CMPY_CD
            AND T.ORG_FUNC_ROLE_TP_CD     = OFRT.ORG_FUNC_ROLE_TP_CD
            AND OFRT.SLS_REP_FLG          = 'Y'
            AND OFRT.EZCANCELFLAG         = '0'
            AND OFRT.GLBL_CMPY_CD         = BAO.GLBL_CMPY_CD
            AND OFRT.FIRST_ORG_CD         = BAO.BIZ_AREA_ORG_CD
            AND BAO.SLS_FLG               = 'Y'
            AND BAO.ORG_STRU_TP_CD        = #orgStruTpCd#
            AND T.GLBL_CMPY_CD            = OFA.GLBL_CMPY_CD
            AND T.TOC_CD                  = OFA.TOC_CD
            AND OFA.EZCANCELFLAG          = '0'
            AND OFA.GLBL_CMPY_CD          = SP.GLBL_CMPY_CD
            AND OFA.PSN_CD                = SP.PSN_CD
            AND SP.EFF_FROM_DT        &lt;= #slsDt#
            AND (
                    SP.EFF_THRU_DT    &gt;= #slsDt#
                OR  SP.EFF_THRU_DT       IS NULL
            )
            AND SP.EZCANCELFLAG           = '0'
    </statement>
<!-- END 2016/04/26 T.Tomita [QC#3886, ADD] -->

    <statement id="getFleetMachineNoSchedule" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            DCD.DS_CONTR_DTL_PK
        FROM
             DS_CONTR            DCR
            ,DS_CONTR_DTL        DCD
            ,DS_CONTR_DTL_TP     DDT
        WHERE
                DCR.GLBL_CMPY_CD            = #glblCmpyCd#
            AND DCR.DS_CONTR_PK             = #dsContrPk#
            AND DCR.EZCANCELFLAG            = '0'
            AND DCR.GLBL_CMPY_CD            = DCD.GLBL_CMPY_CD
            AND DCR.DS_CONTR_PK             = DCD.DS_CONTR_PK
            AND DCD.DS_CONTR_DTL_STS_CD    != #dsContrStsCd_Cancel#
            <!-- START 2017/06/17 K.Kojima [QC#19256,ADD] -->
            AND DCD.DS_CONTR_DTL_STS_CD  &lt;&gt; #dsContrDtlStsOrdr#
            <!-- END 2017/06/17 K.Kojima [QC#19256,ADD] -->
            AND DCD.DS_CONTR_DTL_TP_CD     != #dsContrDtlTpCd_Fleet#
            AND DCD.EZCANCELFLAG            = '0'
            AND DCD.GLBL_CMPY_CD            = DDT.GLBL_CMPY_CD
            AND DCD.DS_CONTR_DTL_TP_CD      = DDT.DS_CONTR_DTL_TP_CD
            AND DDT.USG_CHRG_FLG            = 'Y'
            AND DDT.SVC_PRC_FLG             = #svcPrcFlg#
            AND DDT.EZCANCELFLAG            = '0'
            AND EXISTS (
                SELECT
                    *
                FROM
                    DS_CONTR_BLLG_MTR   DBM
                WHERE
                        DCD.GLBL_CMPY_CD    = DBM.GLBL_CMPY_CD
                    AND DCD.DS_CONTR_DTL_PK = DBM.DS_CONTR_DTL_PK
                    AND DBM.EZCANCELFLAG    = '0'
<!-- START 2017/08/25 U.Kim [QC#20728,ADD] -->
                    AND DBM.DS_CONTR_BLLG_MTR_STS_CD &lt;&gt; #dsContrDtlStsOrdr#
<!-- END 2017/08/25 U.Kim [QC#20728,ADD] -->
            )
            AND NOT EXISTS (
                SELECT
                    *
                FROM
                    DS_CONTR_BLLG_SCHD  DCBS
                WHERE
                        DCD.GLBL_CMPY_CD    = DCBS.GLBL_CMPY_CD
                    AND DCD.DS_CONTR_DTL_PK = DCBS.DS_CONTR_DTL_PK
                    AND DCBS.USG_CHRG_FLG   = 'Y'
                    AND DCBS.EZCANCELFLAG   = '0'
            )
    </statement>
<!-- START 2017/09/19 K.Kitachi [QC#21149, ADD] -->
    <statement id="getAggregateMachineNoSchedule" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            DCD.DS_CONTR_DTL_PK
        FROM
             DS_CONTR            DCR
            ,DS_CONTR_DTL        DCD
            ,DS_CONTR_DTL_TP     DDT
        WHERE
                DCR.GLBL_CMPY_CD            = #glblCmpyCd#
            AND DCR.DS_CONTR_PK             = #dsContrPk#
            AND DCR.EZCANCELFLAG            = '0'
            AND DCR.GLBL_CMPY_CD            = DCD.GLBL_CMPY_CD
            AND DCR.DS_CONTR_PK             = DCD.DS_CONTR_PK
            AND DCD.DS_CONTR_DTL_STS_CD    != #dsContrStsCd_Cancel#
            AND DCD.DS_CONTR_DTL_STS_CD  &lt;&gt; #dsContrDtlStsOrdr#
            AND DCD.DS_CONTR_DTL_TP_CD     != #dsContrDtlTpCd_Agg#
            AND DCD.EZCANCELFLAG            = '0'
            AND DCD.GLBL_CMPY_CD            = DDT.GLBL_CMPY_CD
            AND DCD.DS_CONTR_DTL_TP_CD      = DDT.DS_CONTR_DTL_TP_CD
            AND DDT.USG_CHRG_FLG            = 'Y'
            AND DDT.SVC_PRC_FLG             = #svcPrcFlg#
            AND DDT.EZCANCELFLAG            = '0'
            AND EXISTS (
                SELECT
                    *
                FROM
                    DS_CONTR_BLLG_MTR   DBM
                WHERE
                        DCD.GLBL_CMPY_CD    = DBM.GLBL_CMPY_CD
                    AND DCD.DS_CONTR_DTL_PK = DBM.DS_CONTR_DTL_PK
                    AND DBM.EZCANCELFLAG    = '0'
                    AND DBM.DS_CONTR_BLLG_MTR_STS_CD &lt;&gt; #dsContrDtlStsOrdr#
            )
<!-- Start 2018/05/16 QC#25175 MOD -->
            AND NOT EXISTS (
                    SELECT
                        *
                    FROM
                        DS_CONTR_BLLG_SCHD  DCBS
                    WHERE
                            DCD.GLBL_CMPY_CD    = DCBS.GLBL_CMPY_CD
                        AND DCD.DS_CONTR_DTL_PK = DCBS.DS_CONTR_DTL_PK
                        AND DCBS.USG_CHRG_FLG   = 'Y'
                        AND DCBS.EZCANCELFLAG   = '0'
            )
        UNION
        SELECT
            DCD.DS_CONTR_DTL_PK
        FROM
             DS_CONTR            DCR
            ,DS_CONTR_DTL        DCD
            ,DS_CONTR_DTL_TP     DDT
        WHERE
                DCR.GLBL_CMPY_CD            = #glblCmpyCd#
            AND DCR.DS_CONTR_PK             = #dsContrPk#
            AND DCR.EZCANCELFLAG            = '0'
            AND DCR.GLBL_CMPY_CD            = DCD.GLBL_CMPY_CD
            AND DCR.DS_CONTR_PK             = DCD.DS_CONTR_PK
            AND DCD.DS_CONTR_DTL_STS_CD    != #dsContrStsCd_Cancel#
            AND DCD.DS_CONTR_DTL_STS_CD  &lt;&gt; #dsContrDtlStsOrdr#
            AND DCD.DS_CONTR_DTL_TP_CD     != #dsContrDtlTpCd_Agg#
            AND DCD.EZCANCELFLAG            = '0'
            AND DCD.GLBL_CMPY_CD            = DDT.GLBL_CMPY_CD
            AND DCD.DS_CONTR_DTL_TP_CD      = DDT.DS_CONTR_DTL_TP_CD
            AND DDT.USG_CHRG_FLG            = 'Y'
            AND DDT.SVC_PRC_FLG             = #svcPrcFlg#
            AND DDT.EZCANCELFLAG            = '0'
            AND EXISTS (
                SELECT
                    *
                FROM
                    DS_CONTR_BLLG_MTR   DBM
                WHERE
                        DCD.GLBL_CMPY_CD    = DBM.GLBL_CMPY_CD
                    AND DCD.DS_CONTR_DTL_PK = DBM.DS_CONTR_DTL_PK
                    AND DBM.EZCANCELFLAG    = '0'
                    AND DBM.DS_CONTR_BLLG_MTR_STS_CD &lt;&gt; #dsContrDtlStsOrdr#
            )
            AND EXISTS (
                    SELECT
                        *
                    FROM
                        DS_CONTR_BLLG_SCHD MACH_SCHD
                    WHERE
                            DCD.GLBL_CMPY_CD       = MACH_SCHD.GLBL_CMPY_CD
                        AND DCD.DS_CONTR_DTL_PK    = MACH_SCHD.DS_CONTR_DTL_PK
                        AND MACH_SCHD.USG_CHRG_FLG = 'Y'
                        AND MACH_SCHD.EZCANCELFLAG = '0'
                        AND NOT EXISTS (
                            SELECT
                                *
                            FROM
                                DS_CONTR_BLLG_SCHD LINE_SCHD
                            WHERE
                                    MACH_SCHD.GLBL_CMPY_CD               = LINE_SCHD.GLBL_CMPY_CD
                                AND MACH_SCHD.PRNT_DS_CONTR_BLLG_SCHD_PK = LINE_SCHD.DS_CONTR_BLLG_SCHD_PK
                                AND LINE_SCHD.EZCANCELFLAG               = '0'
                        )
            )
<!-- End 2018/05/16 QC#25175 MOD -->
    </statement>
<!-- END 2017/09/19 K.Kitachi [QC#21149, ADD] -->
<!-- START 2016/05/30 K.Kasai [QC#447, ADD] -->
    <statement id="getTermCondUpdTrgt" parameterClass="Map" resultClass="Map">
        SELECT
             DTL.DS_CONTR_DTL_PK
            ,DTL.CONTR_EFF_FROM_DT
        FROM
            DS_CONTR_DTL        DTL
           ,DS_CONTR_DTL_STS_V  DTV
        WHERE
                DTL.GLBL_CMPY_CD            = #glblCmpyCd#
            AND DTL.EZCANCELFLAG            = '0'
            AND DTL.DS_CONTR_PK             = #dsContrPk#
        <iterate property="dsContrDtlTpList" var="dsContrDtlTpCd[]" open="AND DTL.DS_CONTR_DTL_TP_CD NOT IN (" close=")" conjunction=",">
            #dsContrDtlTpCd[]#
        </iterate>
            AND DTL.DS_CONTR_DTL_PK         = DTV.DS_CONTR_DTL_PK
            AND DTL.GLBL_CMPY_CD            = DTV.GLBL_CMPY_CD
        <iterate property="dsContrCtrlStsList" var="dsContrCtrlStsCd[]" open="AND DTV.DS_CONTR_CTRL_STS_CD NOT IN (" close=")" conjunction=",">
            #dsContrCtrlStsCd[]#
        </iterate>
            AND DTV.EZCANCELFLAG            = '0'
        ORDER BY
            DTL.DS_CONTR_DTL_PK
    </statement>
<!-- END 2016/05/30 K.Kasai [QC#447, ADD] -->
<!-- START 2016/06/21 [QC#6923, ADD] -->
    <statement id="getContrAutoRnwTpCd" parameterClass="Map" resultClass="Map">
        SELECT
             DRE.CONTR_AUTO_RNW_TP_CD
        FROM
             DS_CONTR_RNW_ESCL   DRE
            ,DS_CONTR_DTL        DTL
            ,DS_CONTR_DTL_TP     DDT
        WHERE
                 DRE.DS_CONTR_DTL_PK IS NOT NULL
             AND DRE.GLBL_CMPY_CD            = #glblCmpyCd#
             AND DRE.EZCANCELFLAG            = '0'
             AND DRE.DS_CONTR_PK             = #dsContrPk#
             AND DTL.GLBL_CMPY_CD            = DRE.GLBL_CMPY_CD
             AND DTL.EZCANCELFLAG            = '0'
             AND DTL.DS_CONTR_DTL_PK         = DRE.DS_CONTR_DTL_PK
             <!-- START 2017/06/17 K.Kojima [QC#19256,ADD] -->
             AND DTL.DS_CONTR_DTL_STS_CD  &lt;&gt; #dsContrDtlStsOrdr#
             <!-- END 2017/06/17 K.Kojima [QC#19256,ADD] -->
             AND DTL.DS_CONTR_DTL_TP_CD      = DDT.DS_CONTR_DTL_TP_CD
             AND DDT.SVC_PRC_FLG             = #svcPrcFlg#
             AND DTL.GLBL_CMPY_CD            = DDT.GLBL_CMPY_CD
             AND DTL.EZCANCELFLAG            = DDT.EZCANCELFLAG
        UNION
        SELECT
             DRE.CONTR_AUTO_RNW_TP_CD
        FROM
             DS_CONTR_RNW_ESCL   DRE
            ,DS_CONTR            DC
        WHERE
                 DRE.DS_CONTR_DTL_PK IS NULL
             AND DRE.GLBL_CMPY_CD            = #glblCmpyCd#
             AND DRE.EZCANCELFLAG            = '0'
             AND DRE.DS_CONTR_PK             = #dsContrPk#
             AND DC.GLBL_CMPY_CD             = DRE.GLBL_CMPY_CD
             AND DC.EZCANCELFLAG             = '0'
             AND DC.DS_CONTR_PK              = DRE.DS_CONTR_PK
    </statement>
<!-- END 2016/06/21 [QC6923, ADD] -->
<statement id="getInvoicedBaseTermAmtRate" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            SUM (
                CASE
                    WHEN INV_TP_CD = #creditMemo#
                    THEN DCB.BASE_ACTL_PRC_DEAL_AMT * -1
                    ELSE DCB.BASE_ACTL_PRC_DEAL_AMT
                END
            ) AS BASE_ACTL_PRC_DEAL_AMT
        FROM
            DS_CONTR_BLLG_SCHD        DCB
        WHERE
                DCB.GLBL_CMPY_CD        = #glblCmpyCd#
            AND DCB.DS_CONTR_DTL_PK     = #dsContrDtlPk#
            AND DCB.EZCANCELFLAG        = '0'
            AND DCB.BASE_CHRG_FLG       = 'Y'
            AND DCB.DS_CONTR_PRC_EFF_PK IS NOT NULL
            AND (
                    (INV_TP_CD = #invoice# AND DCB.DS_BLLG_SCHD_STS_CD = #closeSts#)
                OR  (INV_TP_CD = #creditMemo#)
                )
</statement>
<!-- add start 2016/09/06 CSA Defect#11243 -->
    <statement id="getCrCardDiffData" parameterClass="Map" resultClass="Map">
        SELECT
             TR.CR_CARD_CUST_REF_NUM     AS CR_CARD_CUST_REF_NUM
            ,CC.CR_CARD_EXPR_YR_MTH      AS CR_CARD_EXPR_YR_MTH
        FROM
             CR_CARD_TRX          TR
            ,DS_CR_CARD           CC
        WHERE
                TR.GLBL_CMPY_CD          = #glblCmpyCd#
            AND TR.CR_CARD_TRX_TP_CD     = #crCardTrxTp#
            AND TR.FIRST_TRX_INFO_NUM    = #firstTrxInfoNum#
            AND TR.SCD_TRX_INFO_NUM      IS NULL
            AND TR.THIRD_TRX_INFO_NUM    IS NULL
            AND TR.CR_CARD_AUTH_STS_CD   = #crCardAuthStsSaved#
            AND TR.EZCANCELFLAG          = '0'
            AND TR.GLBL_CMPY_CD          = CC.GLBL_CMPY_CD
            AND TR.CR_CARD_CUST_REF_NUM  = CC.CR_CARD_CUST_REF_NUM
            AND CC.EZCANCELFLAG          = '0'
            AND NOT EXISTS (
                    SELECT
                        1
                    FROM
                        DS_CONTR_CR_CARD_PO  PO
                    WHERE
                            PO.GLBL_CMPY_CD          = TR.GLBL_CMPY_CD
                        AND PO.DS_CONTR_PK           = TR.FIRST_TRX_INFO_NUM
                        AND PO.DS_CONTR_DTL_PK       IS NULL
                        AND PO.DS_CONTR_BLLG_MTR_PK  IS NULL
                        AND PO.CR_CARD_CUST_REF_NUM  = TR.CR_CARD_CUST_REF_NUM
                        AND PO.DS_CONTR_MACH_LVL_NUM = #dsContrMachLvlNum#
                        <!-- START 2019/01/09 K.Kitachi [QC#26928, ADD] -->
                        AND PO.CR_CARD_FLG           = 'Y'
                        <!-- END 2019/01/09 K.Kitachi [QC#26928, ADD] -->
                        AND PO.EZCANCELFLAG          = '0'
                )
    </statement>
    <statement id="getCrCardTrxPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            TR.CR_CARD_TRX_PK
        FROM
            CR_CARD_TRX TR
        WHERE
                TR.GLBL_CMPY_CD          = #glblCmpyCd#
            AND TR.CR_CARD_TRX_TP_CD     = #crCardTrxTp#
            AND TR.FIRST_TRX_INFO_NUM    = #firstTrxInfoNum#
            AND TR.SCD_TRX_INFO_NUM      IS NULL
            AND TR.THIRD_TRX_INFO_NUM    IS NULL
            AND TR.CR_CARD_AUTH_STS_CD   = #crCardAuthStsSaved#
            AND TR.EZCANCELFLAG          = '0'
    </statement>
<!-- add end 2016/09/06 CSA Defect#11243 -->

<!-- add start 2016/11/22 CSA Defect#16114 -->
    <statement id="getBllgSchdCloseCount" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(BS.DS_CONTR_BLLG_SCHD_PK)  AS CNT
        FROM
            DS_CONTR_BLLG_SCHD BS
        WHERE
                BS.GLBL_CMPY_CD         = #glblCmpyCd#
            AND BS.DS_CONTR_DTL_PK      = #dsContrDtlPk#
            AND BS.DS_BLLG_SCHD_STS_CD  = #dsBllgSchdStsClose#
            AND BS.EZCANCELFLAG         = '0'
    </statement>
<!-- add end 2016/11/22 CSA Defect#16114 -->

<!-- START 2017/01/24 N.Arai [QC#17228, MOD] -->
    <statement id="findRepNameInfoFromPsnCd" parameterClass="Map" resultClass="String">
        SELECT
            PSN.PSN_FIRST_NM || ' ' || PSN.PSN_LAST_NM AS PSN_NM
        FROM 
             S21_PSN    PSN
        WHERE
                PSN.EZCANCELFLAG    = '0'
            AND PSN.GLBL_CMPY_CD    = #glblCmpyCd#
            AND PSN.PSN_CD          = #psnCd#
            <!-- START 2019/02/12 S.Kitamura [QC#30264, DEL] -->
            <!-- AND PSN.PSN_TP_CD       = #psnTpCd# -->
            <!-- END 2019/02/12 S.Kitamura [QC#30264, DEL] -->
    </statement>
<!-- END 2017/01/24 N.Arai [QC#17228, MOD] -->

<!-- START 2017/01/27 [QC#17278, ADD] -->
    <statement id="findDsContrRptGrp" parameterClass="Map" resultClass="Map">
        SELECT
             CRG.DS_CONTR_RPT_GRP_NUM
            ,CRG.DS_CONTR_RPT_GRP_DESC_TXT
        FROM 
             DS_CONTR_RPT_GRP    CRG
        WHERE
                CRG.EZCANCELFLAG              = '0'
            AND CRG.GLBL_CMPY_CD              = #glblCmpyCd#
            AND CRG.DS_CONTR_RPT_GRP_DESC_TXT LIKE #dsContrRptGrpDescTxt#
            <!-- START 2018/06/18 K.Kim [QC#25195, MOD] -->
            <isNotNull property="dsContrRptGrpNum">
            AND CRG.DS_CONTR_RPT_GRP_NUM      = #dsContrRptGrpNum#
            </isNotNull>
            <!-- END 2018/06/18 K.Kim [QC#25195, MOD] -->
    </statement>
<!-- END   2017/01/27 [QC#17278, ADD] -->

<!-- START 2017/02/06 [QC#17275, ADD] -->
<statement id="getDsContrBllgMtrTmpl" parameterClass="Map" resultClass="Map">
        SELECT 
             SPM.BLLG_MTR_LB_CD         AS BLLG_MTR_LB_CD
            ,BML.MTR_LB_DESC_TXT        AS MTR_LB_DESC_TXT
        FROM
             SVC_PHYS_MTR               SPM
            ,MTR_LB                     BML
            ,BLLG_MTR_MAP               BMM
            ,MTR_LB                     PML
        WHERE
            SPM.SVC_MACH_MSTR_PK                =   #svcMachMstrPk#
        AND SPM.GLBL_CMPY_CD                    =   #glblCmpyCd#
        AND SPM.MTR_ENTRY_MND_FLG               =   #mtrEntryMndFlg#
        AND SPM.EZCANCELFLAG                    =   '0'
        AND SPM.BLLG_MTR_LB_CD                  =   BML.MTR_LB_CD
        AND SPM.GLBL_CMPY_CD                    =   BML.GLBL_CMPY_CD
        AND SPM.EZCANCELFLAG                    =   BML.EZCANCELFLAG
        AND SPM.MDL_MTR_LB_CD                   =   BMM.MDL_MTR_LB_CD
        AND SPM.BLLG_MTR_LB_CD                  =   BMM.BLLG_MTR_LB_CD
        AND SPM.MTR_GRP_PK                      =   BMM.MTR_GRP_PK
        AND SPM.GLBL_CMPY_CD                    =   BMM.GLBL_CMPY_CD
        AND SPM.EZCANCELFLAG                    =   BMM.EZCANCELFLAG
        AND BMM.ACTV_FLG                        =   #actvFlg#
        AND BMM.EFF_FROM_DT                 &lt;=   #slsDt#
        AND NVL(BMM.EFF_THRU_DT, #maxDt#)   &gt;=   #slsDt#
        AND SPM.MDL_MTR_LB_CD                   =   PML.MTR_LB_CD(+)
        AND SPM.GLBL_CMPY_CD                    =   PML.GLBL_CMPY_CD(+) 
        AND SPM.EZCANCELFLAG                    =   PML.EZCANCELFLAG(+)
        GROUP BY
            SPM.BLLG_MTR_LB_CD, BML.MTR_LB_DESC_TXT, BML.MTR_LB_SORT_NUM
        ORDER BY
            BML.MTR_LB_SORT_NUM
</statement>

<statement id="getSvcPhysMtrList" parameterClass="Map" resultClass="Map">
        SELECT 
             SPM.SVC_PHYS_MTR_PK        AS SVC_PHYS_MTR_PK
            <!-- START 2018/04/03 K.Kojima [QC#21056,ADD] -->
            ,SPM.MDL_MTR_LB_CD          AS MDL_MTR_LB_CD
            <!-- END 2018/04/03 K.Kojima [QC#21056,ADD] -->
            ,SPM.MTR_ENTRY_MND_FLG      AS MTR_ENTRY_MND_FLG
            ,SPM.MTR_MULT_RATE          AS MTR_MULT_RATE
        <isNotNull property="bllgMtrLbCd">
            ,BMM.BLLG_MTR_MAP_LVL_NUM   AS BLLG_MTR_MAP_LVL_NUM
        </isNotNull>
        FROM
             SVC_PHYS_MTR               SPM
            ,MTR_LB                     PML
        <isNotNull property="bllgMtrLbCd">
            ,BLLG_MTR_MAP               BMM
        </isNotNull>
        WHERE
            SPM.SVC_MACH_MSTR_PK                =   #svcMachMstrPk#
        AND SPM.GLBL_CMPY_CD                    =   #glblCmpyCd#
        <isNotNull property="bllgMtrLbCd">
        AND SPM.BLLG_MTR_LB_CD                  =   #bllgMtrLbCd#
        </isNotNull>
        <isNull property="bllgMtrLbCd">
        AND NOT EXISTS (
            SELECT 1
                FROM
                    DS_CONTR_BLLG_MTR CBM
                WHERE
                    CBM.GLBL_CMPY_CD            = SPM.GLBL_CMPY_CD
                AND CBM.BLLG_MTR_LB_CD          = SPM.BLLG_MTR_LB_CD
                AND CBM.DS_CONTR_DTL_PK         = #dsContrDtlPk#
                AND CBM.EZCANCELFLAG            = '0'
<!-- START 2017/08/25 U.Kim [QC#20728,ADD] -->
                AND CBM.DS_CONTR_BLLG_MTR_STS_CD &lt;&gt; #dsContrDtlStsOrdr#
<!-- END 2017/08/25 U.Kim [QC#20728,ADD] -->
        )
        </isNull>
        AND SPM.EZCANCELFLAG                    =   '0'
        AND SPM.MDL_MTR_LB_CD                   =   PML.MTR_LB_CD(+)
        AND SPM.GLBL_CMPY_CD                    =   PML.GLBL_CMPY_CD(+) 
        AND SPM.EZCANCELFLAG                    =   PML.EZCANCELFLAG(+)
        AND PML.ACTV_FLG                        =   #actvFlg#
        AND PML.EFF_FROM_DT                 &lt;= #slsDt#
        AND NVL(PML.EFF_THRU_DT, #maxDt#)   &gt;= #slsDt#
        <isNotNull property="bllgMtrLbCd">
        AND SPM.MDL_MTR_LB_CD                   =   BMM.MDL_MTR_LB_CD(+)
        AND SPM.BLLG_MTR_LB_CD                  =   BMM.BLLG_MTR_LB_CD(+)
        AND SPM.MTR_GRP_PK                      =   BMM.MTR_GRP_PK(+)
        AND SPM.GLBL_CMPY_CD                    =   BMM.GLBL_CMPY_CD(+)
        AND SPM.EZCANCELFLAG                    =   BMM.EZCANCELFLAG(+)
        AND BMM.ACTV_FLG                        =   #actvFlg#
        AND BMM.EFF_FROM_DT                 &lt;=   #slsDt#
        AND NVL(BMM.EFF_THRU_DT, #maxDt#)   &gt;=   #slsDt#
        </isNotNull>
        ORDER BY
            PML.MTR_LB_SORT_NUM
</statement>
<!-- END   2017/02/06 [QC#17275, ADD] -->

<!-- START 2017/02/10 [QC#17494, ADD] -->
<statement id="getContrPhysBllgMtrRelnTmpl" parameterClass="Map" resultClass="Map">
        SELECT 
             SPM.MDL_MTR_LB_CD          AS MDL_MTR_LB_CD
            ,PML.MTR_LB_DESC_TXT        AS MDL_MTR_LB_DESC_TXT
            ,SPM.MTR_MULT_RATE          AS CONTR_MTR_MULT_RATE
            ,SPM.BLLG_MTR_LB_CD         AS BLLG_MTR_LB_CD
            ,SPM.MTR_ENTRY_MND_FLG      AS MTR_ENTRY_MND_FLG
            ,NULL                       AS DS_CONTR_BLLG_MTR_PK
        FROM
             SVC_PHYS_MTR               SPM
            ,MTR_LB                     PML
        WHERE
            SPM.SVC_MACH_MSTR_PK                =   #svcMachMstrPk#
        AND SPM.GLBL_CMPY_CD                    =   #glblCmpyCd#
        AND SPM.BLLG_MTR_LB_CD                  =   #bllgMtrLbCd#
        AND SPM.EZCANCELFLAG                    =   '0'
        AND SPM.MDL_MTR_LB_CD                   =   PML.MTR_LB_CD(+)
        AND SPM.GLBL_CMPY_CD                    =   PML.GLBL_CMPY_CD(+) 
        AND SPM.EZCANCELFLAG                    =   PML.EZCANCELFLAG(+)
        AND PML.ACTV_FLG                        =   #actvFlg#
        AND PML.EFF_FROM_DT                 &lt;= #slsDt#
        AND NVL(PML.EFF_THRU_DT, #maxDt#)   &gt;= #slsDt#
        ORDER BY
            SPM.BLLG_MTR_LB_CD, PML.MTR_LB_SORT_NUM
</statement>
<!-- END   2017/02/10 [QC#17494, ADD] -->

<!-- START  2017/06/22 [QC#17496, ADD] -->
    <statement id="getSellToCustFromBillToCustCd" parameterClass="Map" resultClass="Map">
        SELECT
             STC.SELL_TO_CUST_CD
            ,STC.DS_ACCT_NM
            ,STC.DEF_BASE_CYCLE_CD
            ,STC.DEF_USG_CYCLE_CD
            ,STC.DS_BILL_TGTR_FLG
            ,STC.DEF_BASE_TP_CD
            ,STC.DEF_USG_TP_CD
        FROM
             BILL_TO_CUST    BTC
            ,SELL_TO_CUST    STC
        WHERE
            BTC.GLBL_CMPY_CD        = #glblCmpyCd#
            AND BTC.BILL_TO_CUST_CD LIKE #billToCustCd#
            AND BTC.RGTN_STS_CD     = #rgtnStsCd#
            AND BTC.EZCANCELFLAG    = '0'

            AND BTC.GLBL_CMPY_CD    = STC.GLBL_CMPY_CD
            AND BTC.SELL_TO_CUST_CD = STC.SELL_TO_CUST_CD
            AND STC.RGTN_STS_CD     = #rgtnStsCd#
            AND STC.EZCANCELFLAG    = '0'
    </statement>
<!-- END    2017/06/22 [QC#17496, ADD] -->
<!-- START 2017/07/20 M.Kidokoro [QC#4468, ADD] -->
<statement id="getDsContrActCd" parameterClass="Map" resultClass="Map">
        SELECT
            BIZ_APP_ID
           ,DS_CONTR_ACT_CD
           ,DS_CONTR_ACT_DESC_TXT
        FROM
            DS_CONTR_ACT
        WHERE
            GLBL_CMPY_CD                  = #glblCmpyCd#
        AND NVL(EFF_FROM_DT, #slsDt#) &lt;= #slsDt#
        AND NVL(EFF_THRU_DT, #slsDt#) &gt;= #slsDt#
        AND EZCANCELFLAG                  = '0'
        ORDER BY 
            DS_CONTR_ACT_SORT_NUM ASC
</statement>
<!-- END 2017/07/20 M.Kidokoro [QC#4468, ADD] -->
<!-- START 2017/09/11 K.Kojima [QC#18435,ADD] -->
    <statement id="getDsContrPrcEffForTracking" parameterClass="Map" resultClass="Map">
        SELECT 
             A.DS_CONTR_PRC_EFF_PK
            ,A.CONTR_PRC_EFF_FROM_DT
            ,A.CONTR_PRC_EFF_THRU_DT
        FROM 
            DS_CONTR_PRC_EFF A
        WHERE 
            A.GLBL_CMPY_CD         =  #glblCmpyCd#
        AND A.EZCANCELFLAG         =  '0'
        AND A.DS_CONTR_DTL_PK      =  #dsContrDtlPk#
        <isNull property="dsContrBllgMtrPk">
        AND A.DS_CONTR_BLLG_MTR_PK IS NULL
        AND A.BASE_CHRG_FLG        =  'Y'
        </isNull>
        <isNotNull property="dsContrBllgMtrPk">
        AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
        AND A.USG_CHRG_FLG         =  'Y'
        </isNotNull>
        ORDER BY 
            A.DS_CONTR_PRC_EFF_PK
    </statement>
<!-- END 2017/09/11 K.Kojima [QC#18435,ADD] -->
<!-- START 2017/09/21 K.Kitachi [QC#21222, ADD] -->
    <statement id="getMinUnbilledFromDt" parameterClass="Map" resultClass="String">
    <!-- START  [QC#59240, MOD] -->
        <!-- SELECT
            MIN(A.BLLG_SCHD_FROM_DT)
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.GLBL_CMPY_CD    = #glblCmpyCd#
            AND A.EZCANCELFLAG    = '0'
            AND A.DS_CONTR_DTL_PK = #dsContrDtlPk#
            AND A.BASE_CHRG_FLG   = 'Y'
            AND A.INV_FLG         = 'N'
            AND A.INV_TP_CD       = #invTpCd#
            AND A.SVC_CR_REBIL_PK IS NULL
             -->
        SELECT
            TO_CHAR(TO_DATE(MAX(A.BLLG_SCHD_THRU_DT),'YYYYMMDD' ) + 1 ,'YYYYMMDD')
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.GLBL_CMPY_CD    = #glblCmpyCd#
            AND A.EZCANCELFLAG    = '0'
            AND A.DS_CONTR_DTL_PK = #dsContrDtlPk#
            AND A.BASE_CHRG_FLG   = 'Y'
            AND A.INV_FLG         = 'Y'
            AND A.INV_TP_CD       = #invTpCd#
            AND A.SVC_CR_REBIL_PK IS NULL
    <!-- END  [QC#59240, MOD] -->
    </statement>
<!-- END 2017/09/21 K.Kitachi [QC#21222, ADD] -->

    <!-- START 2017/10/05 K.Kojima [QC#20523,ADD] -->
    <statement id="getRenewalHoldforPoReleaseDsContrPrcEffPk" parameterClass="Map" resultClass="BigDecimal">
        <!-- START 2019/11/06 K.Kitachi [QC#54368, MOD] -->
        <!-- SELECT -->
        <!--      DS_CONTR_PRC_EFF_PK -->
        <!-- FROM -->
        <!--     ( -->
        <!--         SELECT -->
        <!--              DCPE.DS_CONTR_PRC_EFF_PK -->
        <!--             ,DCPE.CONTR_PRC_EFF_THRU_DT -->
        <!--             ,CASE -->
        <!--                 WHEN -->
        <!--                     DCPE.BASE_CHRG_FLG = #flgY# -->
        <!--                 THEN -->
        <!--                     NVL(NVL(DCCCPB.PO_DT, DCCCPD.PO_DT), DCCCPH.PO_DT) -->
        <!--                 ELSE -->
        <!--                     NVL(NVL(DCCCPU.PO_DT, DCCCPD.PO_DT), DCCCPH.PO_DT) -->
        <!--                 END AS PO_DT -->
        <!--         FROM -->
        <!--              DS_CONTR_DTL        DCD -->
        <!--             ,DS_CONTR_PRC_EFF    DCPE -->
        <!--             ,DS_CONTR_CR_CARD_PO DCCCPH -->
        <!--             ,DS_CONTR_CR_CARD_PO DCCCPD -->
        <!--             ,DS_CONTR_CR_CARD_PO DCCCPB -->
        <!--             ,DS_CONTR_CR_CARD_PO DCCCPU -->
        <!--         WHERE -->
        <!--                 DCD.GLBL_CMPY_CD                = #glblCmpyCd# -->
        <!--             AND DCD.DS_CONTR_PK                 = #dsContrPk# -->
        <!--             AND DCD.EZCANCELFLAG                = '0' -->
        <!--             AND DCD.GLBL_CMPY_CD                = DCPE.GLBL_CMPY_CD -->
        <!--             AND DCD.DS_CONTR_DTL_PK             = DCPE.DS_CONTR_DTL_PK -->
        <!--             AND DCPE.DS_CONTR_PRC_EFF_STS_CD    = #renewalHoldForPO# -->
        <!--             AND DCPE.EZCANCELFLAG               = '0' -->
        <!--             AND DCD.GLBL_CMPY_CD                = DCCCPH.GLBL_CMPY_CD(+) -->
        <!--             AND DCD.DS_CONTR_PK                 = DCCCPH.DS_CONTR_PK(+) -->
        <!--             AND DCCCPH.DS_CONTR_MACH_LVL_NUM(+) = #dsContrMachLvlNum1# -->
                    <!-- START 2019/01/09 K.Kitachi [QC#26928, ADD] -->
        <!--             AND DCCCPH.CR_CARD_FLG(+)           = 'N' -->
                    <!-- END 2019/01/09 K.Kitachi [QC#26928, ADD] -->
        <!--             AND DCCCPH.EZCANCELFLAG(+)          = '0' -->
        <!--             AND DCPE.GLBL_CMPY_CD               = DCCCPD.GLBL_CMPY_CD(+) -->
        <!--             AND DCPE.DS_CONTR_DTL_PK            = DCCCPD.DS_CONTR_DTL_PK(+) -->
        <!--             AND DCCCPD.DS_CONTR_MACH_LVL_NUM(+) = #dsContrMachLvlNum2# -->
                    <!-- START 2019/01/09 K.Kitachi [QC#26928, ADD] -->
        <!--             AND DCCCPD.CR_CARD_FLG(+)           = 'N' -->
                    <!-- END 2019/01/09 K.Kitachi [QC#26928, ADD] -->
        <!--             AND DCCCPD.EZCANCELFLAG(+)          = '0' -->
        <!--             AND DCPE.GLBL_CMPY_CD               = DCCCPB.GLBL_CMPY_CD(+) -->
        <!--             AND DCPE.DS_CONTR_DTL_PK            = DCCCPB.DS_CONTR_DTL_PK(+) -->
        <!--             AND DCCCPB.DS_CONTR_MACH_LVL_NUM(+) = #dsContrMachLvlNum3# -->
        <!--             AND DCCCPB.DS_CONTR_BLLG_MTR_PK IS NULL -->
                    <!-- START 2019/01/09 K.Kitachi [QC#26928, ADD] -->
        <!--             AND DCCCPB.CR_CARD_FLG(+)           = 'N' -->
                    <!-- END 2019/01/09 K.Kitachi [QC#26928, ADD] -->
        <!--             AND DCCCPB.EZCANCELFLAG(+)          = '0' -->
        <!--             AND DCPE.GLBL_CMPY_CD               = DCCCPU.GLBL_CMPY_CD(+) -->
        <!--             AND DCPE.DS_CONTR_BLLG_MTR_PK       = DCCCPU.DS_CONTR_BLLG_MTR_PK(+) -->
        <!--             AND DCCCPU.DS_CONTR_MACH_LVL_NUM(+) = #dsContrMachLvlNum3# -->
                    <!-- START 2019/01/09 K.Kitachi [QC#26928, ADD] -->
        <!--             AND DCCCPU.CR_CARD_FLG(+)           = 'N' -->
                    <!-- END 2019/01/09 K.Kitachi [QC#26928, ADD] -->
        <!--             AND DCCCPU.EZCANCELFLAG(+)          = '0' -->
        <!--     ) -->
        <!-- WHERE -->
        <!--     CONTR_PRC_EFF_THRU_DT &lt;= PO_DT -->
        <!-- ORDER BY -->
        <!--      DS_CONTR_PRC_EFF_PK -->
        WITH DS_CONTR_PO AS (
            SELECT
                 A.DS_CONTR_PK
                ,A.DS_CONTR_DTL_PK
                ,A.DS_CONTR_BLLG_MTR_PK
                ,A.DS_CONTR_MACH_LVL_NUM
                ,A.PO_FROM_DT
                ,A.PO_DT
            FROM
                DS_CONTR_CR_CARD_PO A
            WHERE
                    A.GLBL_CMPY_CD = #glblCmpyCd#
                AND A.DS_CONTR_PK  = #dsContrPk#
                AND A.CR_CARD_FLG  = 'N'
                AND A.PO_FROM_DT   IS NOT NULL
                AND A.PO_DT        IS NOT NULL
                AND A.EZCANCELFLAG = '0'
        )
        SELECT
            B.DS_CONTR_PRC_EFF_PK
        FROM
             DS_CONTR_DTL     A
            ,DS_CONTR_PRC_EFF B
        WHERE
                A.GLBL_CMPY_CD            = #glblCmpyCd#
            AND A.DS_CONTR_PK             = #dsContrPk#
            AND A.RNW_EFF_FROM_DT         IS NOT NULL
            AND A.EZCANCELFLAG            = '0'
            AND A.GLBL_CMPY_CD            = B.GLBL_CMPY_CD
            AND A.DS_CONTR_DTL_PK         = B.DS_CONTR_DTL_PK
            AND B.DS_CONTR_PRC_EFF_STS_CD = #renewalHoldForPO#
            AND B.EZCANCELFLAG            = '0'
            AND (
                EXISTS (
                    SELECT
                        1
                    FROM
                        DS_CONTR_PO X
                    WHERE
                            A.DS_CONTR_PK           = X.DS_CONTR_PK
                        AND B.CONTR_PRC_EFF_FROM_DT BETWEEN X.PO_FROM_DT AND X.PO_DT
                        AND X.DS_CONTR_MACH_LVL_NUM = #dsContrMachLvlNum1#
                )
             OR EXISTS (
                    SELECT
                        1
                    FROM
                        DS_CONTR_PO X
                    WHERE
                            A.DS_CONTR_DTL_PK       = X.DS_CONTR_DTL_PK
                        AND B.CONTR_PRC_EFF_FROM_DT BETWEEN X.PO_FROM_DT AND X.PO_DT
                        AND X.DS_CONTR_MACH_LVL_NUM = #dsContrMachLvlNum2#
                )
             OR EXISTS (
                    SELECT
                        1
                    FROM
                        DS_CONTR_PO X
                    WHERE
                            A.DS_CONTR_DTL_PK               = X.DS_CONTR_DTL_PK
                        AND NVL(B.DS_CONTR_BLLG_MTR_PK, -1) = NVL(X.DS_CONTR_BLLG_MTR_PK, -1)
                        AND B.CONTR_PRC_EFF_FROM_DT BETWEEN X.PO_FROM_DT AND X.PO_DT
                        AND X.DS_CONTR_MACH_LVL_NUM         = #dsContrMachLvlNum3#
                )
            )
        ORDER BY
            B.DS_CONTR_PRC_EFF_PK
        <!-- END 2019/11/06 K.Kitachi [QC#54368, MOD] -->
    </statement>

    <statement id="getRenewalHoldforPoReleaseDsContrDtlPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            DCDM.DS_CONTR_DTL_PK
        FROM
             DS_CONTR_DTL DCDF
            ,DS_CONTR_DTL DCDM
        WHERE
                DCDF.GLBL_CMPY_CD        = #glblCmpyCd#
            AND DCDF.DS_CONTR_DTL_PK     = #dsContrDtlPk#
            AND DCDF.EZCANCELFLAG        = '0'
            AND DCDF.GLBL_CMPY_CD        = DCDM.GLBL_CMPY_CD
            AND DCDF.DS_CONTR_PK         = DCDM.DS_CONTR_PK
            AND DCDM.DS_CONTR_DTL_STS_CD = #renewalHoldForPO#
            AND DCDM.EZCANCELFLAG        = '0'
        ORDER BY
            DCDM.DS_CONTR_DTL_PK
    </statement>
    <!-- END 2017/10/05 K.Kojima [QC#20523,ADD] -->

<!-- START 2017/10/18 K.Kitachi [QC#21222, ADD] -->
    <statement id="getInvoicedTermAmountForBase" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            SUM(A.BASE_ACTL_PRC_DEAL_AMT)
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.GLBL_CMPY_CD          =   #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK       =   #dsContrDtlPk#
            AND A.BASE_CHRG_FLG         =   'Y'
            AND A.INV_FLG               =   'Y'
            AND A.DS_CONTR_PRC_EFF_PK   IS  NOT NULL
            AND A.EZCANCELFLAG          =   '0'
    </statement>
<!-- END 2017/10/18 K.Kitachi [QC#21222, ADD] -->
    <statement id="getBllgDayTp" parameterClass="Map" resultClass="Map">
        SELECT
             A.BLLG_DAYS_AOT                                             AS BLLG_DAYS_CD
            ,DECODE(A.BLLG_DAYS_AOT, #lastDaysCd#, #lastDaysNm#, A.BLLG_DAYS_AOT) AS BLLG_DAYS_NM
        FROM
            BLLG_DAY_TP A
        WHERE
            A.GLBL_CMPY_CD   = #glblCmpyCd#
        AND A.EZCANCELFLAG   = '0'
        <isEqual property="baseChrgFlg" compareValue="Y">
        AND A.BASE_CHRG_FLG  = #baseChrgFlg#
        </isEqual>
        <isEqual property="usgChrgFlg" compareValue="Y">
        AND A.USG_CHRG_FLG   = #usgChrgFlg#
        </isEqual>
        AND A.BLLG_TMG_TP_CD = #bllgTmgTpCd#
        ORDER BY
            A.BLLG_DAY_TP_SORT_NUM
            
    </statement>
<!-- START 2018/04/02 K.Kojima [QC#21056,ADD] -->
    <statement id="countBllgMtr" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
            DS_CONTR_BLLG_MTR DCBM
        WHERE
                DCBM.GLBL_CMPY_CD    = #glblCmpyCd#
            AND DCBM.DS_CONTR_DTL_PK = #dsContrDtlPk#
            AND DCBM.EZCANCELFLAG    = '0'
    </statement>
    <statement id="getInsertBllgMtrInfo" parameterClass="Map" resultClass="Map">
        WITH ACTUAL_BLLG_MTR AS (
            SELECT
                 DCBM.BLLG_MTR_LB_CD
                ,SPM.MDL_MTR_LB_CD
            FROM
                 DS_CONTR_DTL             DCD
                ,DS_CONTR_BLLG_MTR        DCBM
                ,CONTR_PHYS_BLLG_MTR_RELN CPBMR
                ,SVC_PHYS_MTR             SPM
            WHERE
                    DCD.GLBL_CMPY_CD          = #glblCmpyCd#
                AND DCD.DS_CONTR_PK           = #dsContrPk#
                AND DCD.EZCANCELFLAG          = '0'
                AND DCD.GLBL_CMPY_CD          = DCBM.GLBL_CMPY_CD
                AND DCD.DS_CONTR_DTL_PK       = DCBM.DS_CONTR_DTL_PK
                AND DCD.EZCANCELFLAG          = '0'
                AND DCBM.GLBL_CMPY_CD         = CPBMR.GLBL_CMPY_CD
                AND DCBM.DS_CONTR_BLLG_MTR_PK = CPBMR.DS_CONTR_BLLG_MTR_PK
                AND CPBMR.EZCANCELFLAG        = '0'
                AND CPBMR.GLBL_CMPY_CD        = SPM.GLBL_CMPY_CD
                AND CPBMR.SVC_PHYS_MTR_PK     = SPM.SVC_PHYS_MTR_PK
                AND SPM.EZCANCELFLAG = '0'
        )
        ,LINE_BLLG_MTR AS(
            SELECT
                 DCBM.BLLG_MTR_LB_CD
                ,DCBM.INTG_MDSE_CD
                ,DCBM.BLLG_MTR_BLLG_CYCLE_CD
                ,DCBM.XS_CHRG_TP_CD
            FROM
                 DS_CONTR_DTL             DCD
                ,DS_CONTR_BLLG_MTR        DCBM
            WHERE
                    DCD.GLBL_CMPY_CD          = #glblCmpyCd#
                AND DCD.DS_CONTR_PK           = #dsContrPk#
                AND DCD.DS_CONTR_DTL_TP_CD    = #dsContrDtlTp#
                AND DCD.EZCANCELFLAG          = '0'
                AND DCD.GLBL_CMPY_CD          = DCBM.GLBL_CMPY_CD
                AND DCD.DS_CONTR_DTL_PK       = DCBM.DS_CONTR_DTL_PK
                AND DCBM.EZCANCELFLAG         = '0'
        )
        SELECT
             SPM.SVC_PHYS_MTR_PK
            ,BMM.BLLG_MTR_LB_CD
            ,BML.MTR_LB_DESC_TXT
            ,SPM.MDL_MTR_LB_CD
            ,LBM.INTG_MDSE_CD
            ,LBM.BLLG_MTR_BLLG_CYCLE_CD
            ,LBM.XS_CHRG_TP_CD
        FROM
             SVC_PHYS_MTR  SPM
            ,BLLG_MTR_MAP  BMM
            ,MTR_LB        BML
            ,MTR_LB        PML
            ,LINE_BLLG_MTR LBM
        WHERE
                SPM.GLBL_CMPY_CD                  = #glblCmpyCd#
            AND SPM.SVC_MACH_MSTR_PK              = #svcMachMstrPk#
            AND SPM.EZCANCELFLAG                  = '0'
            AND SPM.GLBL_CMPY_CD                  = BMM.GLBL_CMPY_CD
            AND SPM.MDL_MTR_LB_CD                 = BMM.MDL_MTR_LB_CD
            AND SPM.MTR_GRP_PK                    = BMM.MTR_GRP_PK
            <isNotNull property="bllgMtrLbCd">
            AND BMM.BLLG_MTR_LB_CD                = #bllgMtrLbCd#
            </isNotNull>
            AND BMM.ACTV_FLG                      = 'Y'
            AND BMM.EFF_FROM_DT               &lt;= #slsDt#
            AND NVL(BMM.EFF_THRU_DT, #maxDt#) &gt;= #slsDt#
            AND BMM.EZCANCELFLAG                  = '0'
            AND BMM.GLBL_CMPY_CD                  = BML.GLBL_CMPY_CD
            AND BMM.BLLG_MTR_LB_CD                = BML.MTR_LB_CD
            AND BML.EZCANCELFLAG                  = '0'
            AND SPM.GLBL_CMPY_CD                  = PML.GLBL_CMPY_CD
            AND SPM.MDL_MTR_LB_CD                 = PML.MTR_LB_CD
            AND PML.EZCANCELFLAG                  = '0'
            AND BMM.BLLG_MTR_LB_CD                = LBM.BLLG_MTR_LB_CD
            AND EXISTS(
                SELECT
                    1
                FROM
                    ACTUAL_BLLG_MTR ABM
                WHERE
                        ABM.BLLG_MTR_LB_CD = BMM.BLLG_MTR_LB_CD
                    AND ABM.MDL_MTR_LB_CD  = SPM.MDL_MTR_LB_CD
            )
        ORDER BY
             BML.MTR_LB_SORT_NUM
            ,PML.MTR_LB_SORT_NUM
    </statement>
    <statement id="getInsertRelnInfo" parameterClass="Map" resultClass="Map">
        SELECT
             SPM.MDL_MTR_LB_CD         AS MDL_MTR_LB_CD
            ,ML.MTR_LB_DESC_TXT        AS MDL_MTR_LB_DESC_TXT
            ,CPBMR.CONTR_MTR_MULT_RATE AS CONTR_MTR_MULT_RATE
            ,DCBM.BLLG_MTR_LB_CD       AS BLLG_MTR_LB_CD
            ,SPM.MTR_ENTRY_MND_FLG     AS MTR_ENTRY_MND_FLG
            ,CPBMR.BLLBL_FLG
            ,CPBMR.BLLG_MTR_LVL_NUM
        FROM
             DS_CONTR_DTL             DCD
            ,DS_CONTR_BLLG_MTR        DCBM
            ,CONTR_PHYS_BLLG_MTR_RELN CPBMR
            ,SVC_PHYS_MTR             SPM
            ,MTR_LB                   ML
        WHERE
                DCD.GLBL_CMPY_CD          = #glblCmpyCd#
            AND DCD.DS_CONTR_PK           = #dsContrPk#
            AND DCD.EZCANCELFLAG          = '0'
            AND DCD.GLBL_CMPY_CD          = DCBM.GLBL_CMPY_CD
            AND DCD.DS_CONTR_DTL_PK       = DCBM.DS_CONTR_DTL_PK
            AND DCBM.BLLG_MTR_LB_CD       = #bllgMtrLbCd#
            AND DCBM.EZCANCELFLAG         = '0'
            AND DCBM.GLBL_CMPY_CD         = CPBMR.GLBL_CMPY_CD
            AND DCBM.DS_CONTR_BLLG_MTR_PK = CPBMR.DS_CONTR_BLLG_MTR_PK
            AND CPBMR.EZCANCELFLAG        = '0'
            AND CPBMR.GLBL_CMPY_CD        = SPM.GLBL_CMPY_CD
            AND CPBMR.SVC_PHYS_MTR_PK     = SPM.SVC_PHYS_MTR_PK
            AND SPM.MDL_MTR_LB_CD         = #mdlMtrLbCd#
            AND SPM.EZCANCELFLAG          = '0'
            AND SPM.GLBL_CMPY_CD          = ML.GLBL_CMPY_CD
            AND SPM.MDL_MTR_LB_CD         = ML.MTR_LB_CD
            AND ML.EZCANCELFLAG           = '0'
    </statement>
    <statement id="getPhysMtrNoReln" parameterClass="Map" resultClass="Map">
        SELECT
             SPM.SVC_PHYS_MTR_PK
            ,SPM.SVC_MACH_MSTR_PK
        FROM
             DS_CONTR_DTL DCD
            ,SVC_PHYS_MTR SPM
        WHERE
                DCD.GLBL_CMPY_CD     = #glblCmpyCd#
            AND DCD.DS_CONTR_DTL_PK  = #dsContrDtlPk#
            AND DCD.EZCANCELFLAG     = '0'
            AND DCD.GLBL_CMPY_CD     = SPM.GLBL_CMPY_CD
            AND DCD.SVC_MACH_MSTR_PK = SPM.SVC_MACH_MSTR_PK
            AND SPM.EZCANCELFLAG     = '0'
            AND NOT EXISTS(
                SELECT
                    1
                FROM
                    CONTR_PHYS_BLLG_MTR_RELN  CPBMR
                WHERE
                        CPBMR.GLBL_CMPY_CD    = DCD.GLBL_CMPY_CD
                    AND CPBMR.DS_CONTR_DTL_PK = DCD.DS_CONTR_DTL_PK
                    AND CPBMR.SVC_PHYS_MTR_PK = SPM.SVC_PHYS_MTR_PK
                    AND DCD.EZCANCELFLAG      = '0'
            )
    </statement>
<!-- END 2018/04/02 K.Kojima [QC#21056,ADD] -->
<!-- START 2018/06/05 K.Kim [QC#24851, ADD] -->
    <statement id="countDsContrPrcEff" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*) AS COUNT
        FROM
             DS_CONTR_PRC_EFF        CPE
            ,DS_CONTR_PRC_EFF_STS_V  PEV
        WHERE
            CPE.GLBL_CMPY_CD        = #glblCmpyCd#
        AND CPE.DS_CONTR_DTL_PK     = #dsContrDtlPk#
        AND CPE.BASE_CHRG_FLG       = #baseChrgFlg#
        AND CPE.EZCANCELFLAG        = '0'
        AND CPE.GLBL_CMPY_CD        = PEV.GLBL_CMPY_CD
        AND CPE.DS_CONTR_PRC_EFF_PK = PEV.DS_CONTR_PRC_EFF_PK
        <iterate property="dsContrDtlStsCdList" var="dsContrDtlStsCd[]" open="AND PEV.DS_CONTR_DTL_STS_CD NOT IN (" conjunction= ", " close=")">
            #dsContrDtlStsCd[]#
        </iterate>
        AND PEV.EZCANCELFLAG        = '0'
    </statement>
<!-- END 2018/06/05 K.Kim [QC#24851, ADD] -->
<!-- START 2018/07/02 K.Kitachi [QC#26765, ADD] -->
    <statement id="countLeaseDlrMap" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
             BILL_TO_CUST  A
            ,SELL_TO_CUST  B
            ,LEASE_DLR_MAP C
        WHERE
                A.GLBL_CMPY_CD    = #glblCmpyCd#
            AND A.BILL_TO_CUST_CD = #leaseCmpyCd#
            AND A.EZCANCELFLAG    = '0'
            AND A.GLBL_CMPY_CD    = B.GLBL_CMPY_CD
            AND A.SELL_TO_CUST_CD = B.SELL_TO_CUST_CD
            AND B.EZCANCELFLAG    = '0'
            AND B.GLBL_CMPY_CD    = C.GLBL_CMPY_CD
            AND B.DS_ACCT_DLR_CD  = C.LEASE_DLR_CD
            AND C.ENBL_FLG        = 'Y'
            AND C.EZCANCELFLAG    = '0'
    </statement>
    <statement id="countLeaseCmpy" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
             BILL_TO_CUST  A
            ,SELL_TO_CUST  B
            ,DS_ACCT_CLS   C
        WHERE
                A.GLBL_CMPY_CD    = #glblCmpyCd#
            AND A.BILL_TO_CUST_CD = #leaseCmpyCd#
            AND A.EZCANCELFLAG    = '0'
            AND A.GLBL_CMPY_CD    = B.GLBL_CMPY_CD
            AND A.SELL_TO_CUST_CD = B.SELL_TO_CUST_CD
            AND B.EZCANCELFLAG    = '0'
            AND B.GLBL_CMPY_CD    = C.GLBL_CMPY_CD
            AND B.DS_ACCT_CLS_CD  = C.DS_ACCT_CLS_CD
            AND C.LEASE_CMPY_FLG  = 'Y'
            AND C.EZCANCELFLAG    = '0'
    </statement>
<!-- END 2018/07/02 K.Kitachi [QC#26765, ADD] -->
<!-- START 2018/09/20 K.Kitachi [QC#28328, ADD] -->
    <statement id="getMainUnitDtlTpList" parameterClass="Map" resultClass="String">
        SELECT
            A.DS_CONTR_DTL_TP_CD
        FROM
            DS_CONTR_DTL_TP A
        WHERE
                A.GLBL_CMPY_CD       = #glblCmpyCd#
            AND A.MAIN_UNIT_LINE_FLG = 'Y'
            AND A.EZCANCELFLAG       = '0'
    </statement>
<!-- END 2018/09/20 K.Kitachi [QC#28328, ADD] -->
<!-- START 2018/11/07 K.Fujimoto [QC#28627, ADD] -->
    <statement id="countChildDsContr" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
            DS_CONTR A
        WHERE
                A.GLBL_CMPY_CD       = #glblCmpyCd#
            AND A.CONTR_LINK_NUM     = #contrLinkNum#
            AND A.DS_CONTR_NUM   &lt;&gt; #dsContrNum#
            AND A.EZCANCELFLAG       = '0'
    </statement>
<!-- END 2018/11/07 K.Fujimoto [QC#28627, ADD] -->
<!-- START 2019/01/17 [QC#29782, ADD] -->
    <statement id="getPrntSvcPgmMdseCd" parameterClass="Map" resultClass="String">
        SELECT
            DCD.SVC_PGM_MDSE_CD
        FROM
            DS_CONTR_DTL DCD
        WHERE
                DCD.GLBL_CMPY_CD    = #glblCmpyCd#
            AND DCD.DS_CONTR_DTL_PK = #dsContrDtlPk#
            AND DCD.EZCANCELFLAG    = '0'
    </statement>
<!-- END 2019/01/17 [QC#29782, ADD] -->
<!-- START 2019/01/17 M.Naito [QC#29083,ADD] -->
<!-- START 2019/01/28 T.Tomita [QC#29083,MOD] -->
<!--     <statement id="isExistInvoicedBllg" parameterClass="Map" resultClass="BigDecimal"> -->
<!--         SELECT -->
<!--             COUNT(*) -->
<!--         FROM -->
<!--             DS_CONTR_BLLG_SCHD A -->
<!--         WHERE -->
<!--                 A.GLBL_CMPY_CD         = #glblCmpyCd# -->
<!--             AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk# -->
<!--             AND A.INV_FLG              = 'Y' -->
<!--             AND A.EZCANCELFLAG         = '0' -->
<!--     </statement> -->
    <statement id="getUninvicedSchedule" parameterClass="Map" resultClass="Map">
        SELECT
             A.BLLG_SCHD_FROM_DT
            ,A.BLLG_SCHD_THRU_DT
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
            A.GLBL_CMPY_CD         = #glblCmpyCd#
        AND A.EZCANCELFLAG         = '0'
        AND A.USG_CHRG_FLG         = 'Y'
        AND A.INV_FLG              = 'N'
        AND A.DS_CONTR_BLLG_MTR_PK = #dsContrBllgMtrPk#
        ORDER BY
            A.BLLG_SCHD_FROM_DT
    </statement>
<!-- END 2019/01/28 T.Tomita [QC#29083,MOD] -->
<!-- END 2019/01/17 M.Naito [QC#29083,ADD] -->
<!-- START [QC#55590,ADD] -->
    <statement id="getDsPoReqFlg" parameterClass="Map" resultClass="String">
        SELECT
             B.DS_PO_REQ_FLG
        FROM
            DS_CONTR A
            ,DS_CUST_TRX_RULE B
        WHERE
            A.GLBL_CMPY_CD      = #glblCmpyCd#
        AND A.DS_CONTR_PK       = #dsContrPk#
        AND A.GLBL_CMPY_CD      = B.GLBL_CMPY_CD
        AND A.DS_ACCT_NUM       = B.DS_ACCT_NUM
        AND B.DS_TRX_RULE_TP_CD = #dsTrxRuleTpCd#
        AND A.EZCANCELFLAG      = '0'
        AND B.EZCANCELFLAG      = '0'
    </statement>
    <statement id="getRenewalHoldforPoReleaseDsContrPrcEffPk4NonPo" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            B.DS_CONTR_PRC_EFF_PK
        FROM
             DS_CONTR_DTL     A
            ,DS_CONTR_PRC_EFF B
        WHERE
                A.GLBL_CMPY_CD            = #glblCmpyCd#
            AND A.DS_CONTR_PK             = #dsContrPk#
            AND A.RNW_EFF_FROM_DT         IS NOT NULL
            AND A.EZCANCELFLAG            = '0'
            AND A.GLBL_CMPY_CD            = B.GLBL_CMPY_CD
            AND A.DS_CONTR_DTL_PK         = B.DS_CONTR_DTL_PK
            AND B.DS_CONTR_PRC_EFF_STS_CD = #renewalHoldForPO#
            AND B.EZCANCELFLAG            = '0'
        ORDER BY
            B.DS_CONTR_PRC_EFF_PK
    </statement>
<!-- END [QC#55590,ADD] -->
<!-- START 2021/10/01 T.Wada [QC#59240, ADD] -->
    <statement id="getDtAfterMaxInvThruDt" parameterClass="Map" resultClass="String">
        SELECT
            TO_CHAR(TO_DATE(MAX(A.BLLG_SCHD_THRU_DT),'YYYYMMDD' ) + 1 ,'YYYYMMDD')
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.GLBL_CMPY_CD    = #glblCmpyCd#
            AND A.EZCANCELFLAG    = '0'
            AND A.DS_CONTR_DTL_PK = #dsContrDtlPk#
            AND A.BASE_CHRG_FLG   = 'Y'
            AND A.INV_FLG         = 'Y'
            AND A.INV_TP_CD       = #invTpCd#
            AND A.SVC_CR_REBIL_PK IS NULL
    </statement>
    <statement id="getTotalAmtOfUninvBefFinInv" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            SUM(A.BASE_ACTL_PRC_DEAL_AMT)
        FROM
            DS_CONTR_BLLG_SCHD A
        WHERE
                A.GLBL_CMPY_CD          =   #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK       =   #dsContrDtlPk#
            AND A.BASE_CHRG_FLG         =   'Y'
            AND A.INV_FLG               =   'N'
            AND A.SKIP_RECOV_TP_CD      &lt;&gt;  #none#
            AND A.EZCANCELFLAG          =   '0'
            AND A.BLLG_SCHD_THRU_DT &lt;=(
                SELECT
                    MAX(A.BLLG_SCHD_THRU_DT)
                FROM
                    DS_CONTR_BLLG_SCHD A
                WHERE
                    A.GLBL_CMPY_CD    = #glblCmpyCd#
                AND A.EZCANCELFLAG    = '0'
                AND A.DS_CONTR_DTL_PK = #dsContrDtlPk#
                AND A.BASE_CHRG_FLG   = 'Y'
                AND A.INV_FLG         = 'Y'
                AND A.INV_TP_CD       = '1'
            )
    </statement>
<!-- END 2021/10/01 T.Wada [QC#59240, ADD] -->
    
<!-- START 2023/02/03 R.Takau [QC#55645, ADD] -->    
    <statement id="getBankInfo" parameterClass="Map" resultClass="Map">
        SELECT
             B.DS_CUST_BANK_ACCT_RELN_PK
            ,A.DS_BANK_ACCT_PK
            ,A.BANK_RTE_NUM
            ,CASE
                WHEN
                    LENGTH(A.DS_BANK_ACCT_NUM) &lt;= 4
                THEN
                    REGEXP_REPLACE(A.DS_BANK_ACCT_NUM,'.','*')
                ELSE
                    REGEXP_REPLACE(SUBSTR(A.DS_BANK_ACCT_NUM, 1, LENGTH(A.DS_BANK_ACCT_NUM) - 4),'.','*')
                ||
                    SUBSTR(A.DS_BANK_ACCT_NUM, LENGTH(A.DS_BANK_ACCT_NUM) - 4 + 1)
                END AS MASK_BANK_ACCT_NUM
        FROM
             DS_BANK_ACCT A
            ,DS_CUST_BANK_ACCT_RELN B
        WHERE
                A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.EZCANCELFLAG               = '0'
            AND A.GLBL_CMPY_CD               = B.GLBL_CMPY_CD
            AND A.DS_BANK_ACCT_PK            = B.DS_BANK_ACCT_PK
            AND B.DS_CUST_BANK_ACCT_RELN_PK  = #dsCustBankAcctRelnPk#
            AND B.EZCANCELFLAG               = '0'
    </statement>

    <statement id="getRelation" parameterClass="Map" resultClass="Map">
        SELECT
             B.DS_CUST_BANK_ACCT_RELN_PK
            ,A.EFF_FROM_DT
            ,A.EFF_THRU_DT
            ,C.SELL_TO_CUST_CD
        FROM
             DS_BANK_ACCT A
            ,DS_CUST_BANK_ACCT_RELN B
            ,SELL_TO_CUST C
        WHERE
                A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.EZCANCELFLAG               = '0'
            AND A.GLBL_CMPY_CD               = B.GLBL_CMPY_CD
            AND A.GLBL_CMPY_CD               = C.GLBL_CMPY_CD
            AND A.DS_BANK_ACCT_PK            = B.DS_BANK_ACCT_PK
            AND B.DS_CUST_BANK_ACCT_RELN_PK  = #dsCustBankAcctRelnPk#
            AND B.EZCANCELFLAG               = '0'
            AND B.GLBL_CMPY_CD               = C.GLBL_CMPY_CD
            AND B.DS_ACCT_CUST_PK            = C.SELL_TO_CUST_PK
            AND C.EZCANCELFLAG               = '0'
            AND C.SELL_TO_CUST_CD            = #sellToCustCd#
    </statement>
<!-- END 2023/02/07 R.Takau [QC#55645,ADD]-->
<!-- START 2024/03/22 Y.Tamai [QC#63463, ADD] -->   
    <statement id="getActiveContrBakSmryPk" parameterClass="Map" resultClass="Map">
        SELECT
             A.CONTR_BAK_SMRY_PK
             ,A.DS_CONTR_PK
             ,A.BAK_CRAT_TS
        FROM
             CONTR_BAK_SMRY A
        WHERE
                A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.EZCANCELFLAG               = '0'
            AND A.DS_CONTR_PK                = #dsContrPk#
            AND A.ACTV_FLG                   = #actvFlg#
    </statement>
    <statement id="getDsContrDtlPkList" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             A.DS_CONTR_DTL_PK
        FROM
             DS_CONTR_DTL A
        WHERE
                A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.EZCANCELFLAG               = '0'
            AND A.DS_CONTR_PK                = #dsContrPk#
    </statement>
    <statement id="getDsContrBllgMtrPkList" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             A.DS_CONTR_BLLG_MTR_PK
        FROM
             DS_CONTR_BLLG_MTR A
        WHERE
                A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.EZCANCELFLAG               = '0'
            AND A.DS_CONTR_DTL_PK IN (
                    SELECT
                        B.DS_CONTR_DTL_PK
                    FROM
                        DS_CONTR_DTL   B
                    WHERE
                            B.GLBL_CMPY_CD      = #glblCmpyCd#
                        AND B.EZCANCELFLAG      = '0'
                        AND B.DS_CONTR_PK       = #dsContrPk# 
               )
    </statement>
    <statement id="getDsSubContrPkList" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             A.DS_SUB_CONTR_PK
        FROM
             DS_SUB_CONTR A
        WHERE
                A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.EZCANCELFLAG               = '0'
            AND A.DS_CONTR_DTL_PK IN (
                    SELECT
                        B.DS_CONTR_DTL_PK
                    FROM
                        DS_CONTR_DTL   B
                    WHERE
                            B.GLBL_CMPY_CD      = #glblCmpyCd#
                        AND B.EZCANCELFLAG      = '0'
                        AND B.DS_CONTR_PK       = #dsContrPk# 
               )
    </statement>
    <statement id="getActiveTblPkList" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             $tblPk$
        FROM
             $tblName$ A
        WHERE
                A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.EZCANCELFLAG               = '0'
            AND A.CONTR_BAK_SMRY_PK          = #contrBakSmryPk#
    </statement>
    <statement id="getSinceActiveForMtrTblPkList" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             $tblPk$
        FROM
             $tblName$ A
        WHERE
                A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.EZCANCELFLAG               = '0'
            AND A.EZINTIME                   &gt; #bakCratTs#
            AND A.DS_CONTR_BLLG_MTR_PK IN (
                    SELECT
                        C.DS_CONTR_BLLG_MTR_PK
                    FROM
                        DS_CONTR_DTL        B
                       ,DS_CONTR_BLLG_MTR   C
                    WHERE
                            B.GLBL_CMPY_CD      = #glblCmpyCd#
                        AND B.EZCANCELFLAG      = '0'
                        AND B.GLBL_CMPY_CD      = C.GLBL_CMPY_CD
                        AND C.EZCANCELFLAG      = '0'
                        AND B.DS_CONTR_PK       = #dsContrPk#
                        AND B.DS_CONTR_DTL_PK   = C.DS_CONTR_DTL_PK
               )
    </statement>
    <statement id="getSinceActiveForDsSubTblPkList" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             $tblPk$
        FROM
             $tblName$ A
        WHERE
                A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.EZCANCELFLAG               = '0'
            AND A.EZINTIME                   &gt; #bakCratTs#
            AND A.DS_SUB_CONTR_PK IN (
                    SELECT
                        C.DS_SUB_CONTR_PK
                    FROM
                        DS_CONTR_DTL        B
                       ,DS_SUB_CONTR        C
                    WHERE
                            B.GLBL_CMPY_CD      = #glblCmpyCd#
                        AND B.EZCANCELFLAG      = '0'
                        AND B.GLBL_CMPY_CD      = C.GLBL_CMPY_CD
                        AND C.EZCANCELFLAG      = '0'
                        AND B.DS_CONTR_PK       = #dsContrPk#
                        AND B.DS_CONTR_DTL_PK   = C.DS_CONTR_DTL_PK
               )
    </statement>
    <statement id="getSinceActiveForDsContrDtlTblPkList" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             $tblPk$
        FROM
             $tblName$ A
        WHERE
                A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.EZCANCELFLAG               = '0'
            AND A.EZINTIME                   &gt; #bakCratTs#
            AND A.DS_CONTR_DTL_PK IN (
                    SELECT
                        B.DS_CONTR_DTL_PK
                    FROM
                        DS_CONTR_DTL   B
                    WHERE
                            B.GLBL_CMPY_CD      = #glblCmpyCd#
                        AND B.EZCANCELFLAG      = '0'
                        AND B.DS_CONTR_PK       = #dsContrPk# 
               )
    </statement>
    <statement id="getSinceActiveForDsContrTblPkList" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             $tblPk$
        FROM
             $tblName$ A
        WHERE
                A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.EZCANCELFLAG               = '0'
            AND A.DS_CONTR_PK                = #dsContrPk#
            AND A.EZINTIME                   &gt; #bakCratTs#
    </statement>
    <statement id="getRemovePkList" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             $tblPk$
        FROM
             $tblName$ A
        WHERE
                A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.EZCANCELFLAG               = '0'
            AND A.CONTR_BAK_SMRY_PK          = #dsContrSmryPk#
    </statement>
    <statement id="getBackupSourcePkList" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             A.*
        FROM
             $tblName$ A
        WHERE
                A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.EZCANCELFLAG               = '0'
            AND A.DS_CONTR_PK                = #pkInfo#
    </statement>
    <statement id="getBackupPkList" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             A.*
        FROM
             $tblName$ A
        WHERE
                A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.EZCANCELFLAG               = '0'
            AND A.CONTR_BAK_SMRY_PK          = #pkInfo#
    </statement>
    <statement id="getBackupSourcePkListUsingContrDtl" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             A.*
        FROM
             $tblName$ A
        WHERE
                A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.EZCANCELFLAG               = '0'
            AND A.DS_CONTR_DTL_PK IN (
                    SELECT
                        B.DS_CONTR_DTL_PK
                    FROM
                        DS_CONTR_DTL   B
                    WHERE
                            B.GLBL_CMPY_CD      = #glblCmpyCd#
                        AND B.EZCANCELFLAG      = '0'
                        AND B.DS_CONTR_PK       = #dsContrPk# 
               )
    </statement>
    <statement id="getBackupSourcePkListUsingBllgMtr" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             A.*
        FROM
             $tblName$ A
        WHERE
                A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.EZCANCELFLAG               = '0'
            AND A.DS_CONTR_BLLG_MTR_PK IN (
                    SELECT
                        C.DS_CONTR_BLLG_MTR_PK
                    FROM
                        DS_CONTR_DTL        B
                       ,DS_CONTR_BLLG_MTR   C
                    WHERE
                            B.GLBL_CMPY_CD      = #glblCmpyCd#
                        AND B.EZCANCELFLAG      = '0'
                        AND B.GLBL_CMPY_CD      = C.GLBL_CMPY_CD
                        AND C.EZCANCELFLAG      = '0'
                        AND B.DS_CONTR_PK       = #dsContrPk#
                        AND B.DS_CONTR_DTL_PK   = C.DS_CONTR_DTL_PK
               )
    </statement>
    <statement id="getBackupSourcePkListUsingDsSubContr" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             A.*
        FROM
             $tblName$ A
        WHERE
                A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.EZCANCELFLAG               = '0'
            AND A.DS_SUB_CONTR_PK IN (
                    SELECT
                        C.DS_SUB_CONTR_PK
                    FROM
                        DS_CONTR_DTL        B
                       ,DS_SUB_CONTR        C
                    WHERE
                            B.GLBL_CMPY_CD      = #glblCmpyCd#
                        AND B.EZCANCELFLAG      = '0'
                        AND B.GLBL_CMPY_CD      = C.GLBL_CMPY_CD
                        AND C.EZCANCELFLAG      = '0'
                        AND B.DS_CONTR_PK       = #dsContrPk#
                        AND B.DS_CONTR_DTL_PK   = C.DS_CONTR_DTL_PK
               )
    </statement>
    <statement id="insertContrBllgSchdBak" parameterClass="Map" resultClass="BigDecimal">
        BEGIN
                INSERT INTO CONTR_BLLG_SCHD_BAK
                SELECT
                     B.EZTABLEID
                    ,B.EZCANCELFLAG
                    ,B.EZINTIME
                    ,B.EZINTIMEZONE
                    ,B.EZINCOMPANYCODE
                    ,B.EZINUSERID
                    ,B.EZINAPLID
                    ,B.EZUPTIME
                    ,B.EZUPTIMEZONE
                    ,B.EZUPCOMPANYCODE
                    ,B.EZUPUSERID
                    ,B.EZUPAPLID
                    ,B.GLBL_CMPY_CD
                    ,#contrBakSmryPk#
                    ,A.DS_CONTR_BLLG_SCHD_PK
                    ,A.DS_CONTR_DTL_PK
                    ,A.DS_CONTR_BLLG_SCHD_SMRY_PK
                    ,A.DS_CONTR_PRC_EFF_PK
                    ,A.DS_CONTR_PRC_EFF_SQ_NUM
                    ,A.DS_CONTR_BLLG_SCHD_SQ_NUM
                    ,A.DS_CONTR_BLLG_SCHD_LVL_NUM
                    ,A.BASE_CHRG_FLG
                    ,A.USG_CHRG_FLG
                    ,A.SKIP_RECOV_TP_CD
                    ,A.SVC_INV_NUM
                    ,A.INV_DT
                    ,A.NEXT_BLLG_DT
                    ,A.BLLG_SCHD_FROM_DT
                    ,A.BLLG_SCHD_THRU_DT
                    ,A.BLLG_CYCLE_CD
                    ,A.BLLG_SCHD_PRRT_FLG
                    ,A.BASE_PRC_DEAL_AMT
                    ,A.BASE_PRC_FUNC_AMT
                    ,A.BASE_ACTL_PRC_DEAL_AMT
                    ,A.BASE_ACTL_PRC_FUNC_AMT
                    ,A.BASE_PRC_ADJ_DEAL_AMT
                    ,A.BASE_PRC_ADJ_FUNC_AMT
                    ,A.READ_MTR_CNT
                    ,A.BLLG_MTR_CNT
                    ,A.MTR_CHRG_DEAL_AMT
                    ,A.MTR_CHRG_FUNC_AMT
                    ,A.DS_CONTR_TRMN_FLG
                    ,A.CCY_CD
                    ,A.BLLG_SCHD_TRX_SRC_TP_CD
                    ,A.BLLG_STAGE_FLG
                    ,A.INV_FLG
                    ,A.INV_TP_CD
                    ,A.DS_BLLG_SCHD_STS_CD
                    ,A.DS_CONTR_BLLG_MTR_PK
                    ,A.BLLBL_FLG
                    ,A.RVS_SCHD_DT
                    ,A.MTR_ENTRY_CPLT_FLG
                    ,A.SVC_PHYS_MTR_READ_GRP_SQ
                    ,A.BLLG_CALC_FLG
                    ,A.DS_CONTR_DTL_TP_CD
                    ,A.PRNT_DS_CONTR_BLLG_SCHD_PK
                    ,A.PRNT_DS_CONTR_DTL_PK
                    ,A.DS_BLLG_SCHD_TP_CD
                    ,A.BLLG_PER_MTH_AOT
                    ,A.SLS_TAX_RATE
                    ,A.DEAL_TAX_AMT
                    ,A.FUNC_TAX_AMT
                    ,A.SVC_CR_REBIL_PK
                    ,A.SVC_CR_REBIL_DTL_PK
                    ,A.ORIG_DS_CONTR_BLLG_SCHD_PK
                FROM
                    DS_CONTR_BLLG_SCHD  A
                   ,CONTR_BAK           B
                WHERE
                        A.GLBL_CMPY_CD               = #glblCmpyCd#
                    AND A.EZCANCELFLAG               = '0'
                    AND A.DS_CONTR_DTL_PK IN (
                            SELECT
                                B.DS_CONTR_DTL_PK
                            FROM
                                DS_CONTR_DTL   B
                            WHERE
                                    B.GLBL_CMPY_CD      = #glblCmpyCd#
                                AND B.EZCANCELFLAG      = '0'
                                AND B.DS_CONTR_PK       = #dsContrPk#
                       )
                    AND B.GLBL_CMPY_CD               = #glblCmpyCd#
                    AND B.EZCANCELFLAG               = '0'
                    AND B.CONTR_BAK_SMRY_PK          = #contrBakSmryPk#
              ;
        END;
    </statement>
    <statement id="getResetBllgSchdPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.DS_CONTR_BLLG_SCHD_PK
        FROM
             DS_CONTR_BLLG_SCHD    A
            ,DS_CONTR_DTL          C
            ,DS_CONTR              D
        WHERE
                A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.EZCANCELFLAG               = '0'
            AND A.BLLG_STAGE_FLG             = 'Y'
            AND A.INV_FLG                    = 'N'
            AND A.BLLBL_FLG                  = 'Y'
            AND C.EZCANCELFLAG               = '0'
            AND A.GLBL_CMPY_CD               = C.GLBL_CMPY_CD
            AND A.DS_CONTR_DTL_PK            = C.DS_CONTR_DTL_PK
            AND D.EZCANCELFLAG               = '0'
            AND C.GLBL_CMPY_CD               = D.GLBL_CMPY_CD
            AND C.DS_CONTR_PK                = D.DS_CONTR_PK
            AND D.DS_CONTR_PK                = #dsContrPk#
        ORDER BY
           A.DS_CONTR_DTL_PK
          ,A.BASE_CHRG_FLG
          ,A.DS_CONTR_BLLG_MTR_PK
          ,A.BLLG_SCHD_FROM_DT
    </statement>
    <statement id="getResetMtrEntryInfo" parameterClass="Map" resultClass="Map">
        SELECT
            A.DS_CONTR_DTL_PK
           ,A.SVC_MACH_MSTR_PK
           ,B.SVC_PHYS_MTR_PK
        FROM
             DS_CONTR_DTL          A
            ,SVC_PHYS_MTR          B
        WHERE
                A.GLBL_CMPY_CD               = #glblCmpyCd#
            AND A.EZCANCELFLAG               = '0'
            AND A.GLBL_CMPY_CD               = B.GLBL_CMPY_CD
            AND A.SVC_MACH_MSTR_PK           = B.SVC_MACH_MSTR_PK
            AND B.EZCANCELFLAG               = '0'
            AND A.DS_CONTR_DTL_PK            = #dsContrDtlPk#
    </statement>
    <statement id="getSvcContrBllg" parameterClass="Map" resultClass="Map">
        SELECT
             SCB.SVC_CONTR_BLLG_PK
        FROM
            SVC_CONTR_BLLG SCB
        WHERE
            SCB.GLBL_CMPY_CD      = #glblCmpyCd#
        AND SCB.DS_CONTR_DTL_PK   = #dsContrDtlPk#
        AND SCB.SVC_CR_REBIL_PK     IS NULL
        AND SCB.SVC_CR_REBIL_DTL_PK IS NULL
        AND SCB.INV_TP_CD         &lt;&gt; #invTpCd#
        AND SCB.EZCANCELFLAG      = '0'
    </statement>

    <statement id="getExistBllgHldCnt" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            SUM(CNT)
        FROM
           (
               SELECT
                        COUNT(*) CNT
                    FROM
                        S21_CSA_APPS.CONTR_BAK          A
                    WHERE
                            A.GLBL_CMPY_CD      = #glblCmpyCd#
                        AND A.EZCANCELFLAG      = '0'
                        AND A.CONTR_BAK_SMRY_PK = #contrBakSmryPk#
                        AND A.BLLG_HLD_FLG      = 'Y'
                UNION
                    SELECT
                        COUNT(*) CNT
                    FROM
                        S21_CSA_APPS.DS_CONTR_HIST  A
                    WHERE
                            A.GLBL_CMPY_CD      = #glblCmpyCd#
                        AND A.EZCANCELFLAG      = '0'
                        AND A.DS_CONTR_PK       = #dsContrPk#
                        AND A.HIST_CRAT_TS      &gt;= #bakCratTs#
                        AND A.BLLG_HLD_FLG      = 'Y'
            )
    </statement>

    <statement id="getSvcContrBllgAllocPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.SVC_CONTR_BLLG_ALLOC_PK
        FROM
            SVC_CONTR_BLLG_ALLOC A
        WHERE
                A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.SVC_CONTR_BLLG_PK     = #svcContrBllgPk#
    </statement>

    <statement id="getSvcContrBllgGrpSq" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.SVC_CONTR_BLLG_GRP_SQ
        FROM
            SVC_CONTR_BLLG A
        WHERE
                A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.SVC_CONTR_BLLG_PK     = #svcContrBllgPk#
    </statement>

    <statement id="getAggrUsgRecalPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.AGGR_USG_RECAL_PK
        FROM
            AGGR_USG_RECAL A
        WHERE
                A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.SVC_CONTR_BLLG_GRP_SQ = #svcContrBllgGrpSq#
    </statement>

    <statement id="getAggrUsgRecalDtlPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.AGGR_USG_RECAL_DTL_PK
        FROM
            AGGR_USG_RECAL_DTL A
        WHERE
                A.EZCANCELFLAG      = '0'
            AND A.GLBL_CMPY_CD      = #glblCmpyCd#
            AND A.AGGR_USG_RECAL_PK = #aggrUsgRecalPk#
    </statement>

    <statement id="getAggrUsgRecalXsMtrPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.AGGR_USG_RECAL_XS_MTR_PK
        FROM
            AGGR_USG_RECAL_XS_MTR A
        WHERE
                A.EZCANCELFLAG          = '0'
            AND A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.AGGR_USG_RECAL_DTL_PK = #aggrUsgRecalDtlPk#
    </statement>
<!-- END 2024/03/22 Y.Tamai [QC#63463, ADD] -->  
</sqlMap>
