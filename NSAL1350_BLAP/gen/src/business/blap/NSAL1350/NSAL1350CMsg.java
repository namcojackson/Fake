//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20240325170413000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSAL1350CMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NSAL1350;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL1350 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL1350CMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** CPO_ORD_NUM_I*/
	public final EZDCStringItem              cpoOrdNum_I;

    /** SHELL_LINE_NUM_I*/
	public final EZDCBigDecimalItem              shellLineNum_I;

    /** ADD_ASRY_FLG_I*/
	public final EZDCStringItem              addAsryFlg_I;

    /** DS_CONTR_NUM_I*/
	public final EZDCStringItem              dsContrNum_I;

    /** XX_SFX_KEY_TXT_I*/
	public final EZDCStringItem              xxSfxKeyTxt_I;

    /** I*/
	public final business.blap.NSAL1350.NSAL1350_ICMsgArray              I;

    /** MDSE_ITEM_TP_CD*/
	public final EZDCStringItem              mdseItemTpCd;

    /** MDL_ID*/
	public final EZDCBigDecimalItem              mdlId;

    /** DS_ORD_POSN_NUM*/
	public final EZDCStringItem              dsOrdPosnNum;

    /** MDSE_CD*/
	public final EZDCStringItem              mdseCd;

    /** ADD_ASRY_FLG*/
	public final EZDCStringItem              addAsryFlg;

    /** MDSE_ITEM_TP_CD_LC*/
	public final EZDCStringItemArray              mdseItemTpCd_LC;

    /** MDSE_ITEM_TP_NM_LD*/
	public final EZDCStringItemArray              mdseItemTpNm_LD;

    /** MDL_ID_LC*/
	public final EZDCBigDecimalItemArray              mdlId_LC;

    /** T_MDL_NM_LD*/
	public final EZDCStringItemArray              t_MdlNm_LD;

    /** A*/
	public final business.blap.NSAL1350.NSAL1350_ACMsgArray              A;

    /** XX_SFX_KEY_TXT_O*/
	public final EZDCStringItem              xxSfxKeyTxt_O;

    /** O*/
	public final business.blap.NSAL1350.NSAL1350_OCMsgArray              O;


	/**
	 * NSAL1350CMsg is constructor.
	 * The initialization when the instance of NSAL1350CMsg is generated.
	 */
	public NSAL1350CMsg() {
		this(false, -1);
	}

	/**
	 * NSAL1350CMsg is constructor.
	 * The initialization when the instance of NSAL1350CMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL1350CMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		cpoOrdNum_I = (EZDCStringItem)newItem("cpoOrdNum_I");
		shellLineNum_I = (EZDCBigDecimalItem)newItem("shellLineNum_I");
		addAsryFlg_I = (EZDCStringItem)newItem("addAsryFlg_I");
		dsContrNum_I = (EZDCStringItem)newItem("dsContrNum_I");
		xxSfxKeyTxt_I = (EZDCStringItem)newItem("xxSfxKeyTxt_I");
		I = (business.blap.NSAL1350.NSAL1350_ICMsgArray)newMsgArray("I");
		mdseItemTpCd = (EZDCStringItem)newItem("mdseItemTpCd");
		mdlId = (EZDCBigDecimalItem)newItem("mdlId");
		dsOrdPosnNum = (EZDCStringItem)newItem("dsOrdPosnNum");
		mdseCd = (EZDCStringItem)newItem("mdseCd");
		addAsryFlg = (EZDCStringItem)newItem("addAsryFlg");
		mdseItemTpCd_LC = (EZDCStringItemArray)newItemArray("mdseItemTpCd_LC");
		mdseItemTpNm_LD = (EZDCStringItemArray)newItemArray("mdseItemTpNm_LD");
		mdlId_LC = (EZDCBigDecimalItemArray)newItemArray("mdlId_LC");
		t_MdlNm_LD = (EZDCStringItemArray)newItemArray("t_MdlNm_LD");
		A = (business.blap.NSAL1350.NSAL1350_ACMsgArray)newMsgArray("A");
		xxSfxKeyTxt_O = (EZDCStringItem)newItem("xxSfxKeyTxt_O");
		O = (business.blap.NSAL1350.NSAL1350_OCMsgArray)newMsgArray("O");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL1350CMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL1350CMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"cpoOrdNum_I", "cpoOrdNum_I", "I", null, TYPE_HANKAKUEISU, "8", null},
	{"shellLineNum_I", "shellLineNum_I", "I", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"addAsryFlg_I", "addAsryFlg_I", "I", null, TYPE_HANKAKUEISU, "1", null},
	{"dsContrNum_I", "dsContrNum_I", "I", null, TYPE_HANKAKUEISU, "30", null},
	{"xxSfxKeyTxt_I", "xxSfxKeyTxt_I", "I", null, TYPE_HANKAKUEISU, "30", null},
	{"I", "I", null, "200", "business.blap.NSAL1350.NSAL1350_ICMsgArray", null, null},
	
	{"mdseItemTpCd", "mdseItemTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"mdlId", "mdlId", null, null, TYPE_SEISU_SYOSU, "22", "0"},
	{"dsOrdPosnNum", "dsOrdPosnNum", null, null, TYPE_HANKAKUEISU, "6", null},
	{"mdseCd", "mdseCd", null, null, TYPE_HANKAKUEISU, "16", null},
	{"addAsryFlg", "addAsryFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"mdseItemTpCd_LC", "mdseItemTpCd_LC", "LC", "99", TYPE_HANKAKUEISU, "2", null},
	{"mdseItemTpNm_LD", "mdseItemTpNm_LD", "LD", "99", TYPE_HANKAKUEISU, "40", null},
	{"mdlId_LC", "mdlId_LC", "LC", "99", TYPE_SEISU_SYOSU, "22", "0"},
	{"t_MdlNm_LD", "t_MdlNm_LD", "LD", "99", TYPE_HANKAKUEISU, "50", null},
	{"A", "A", null, "200", "business.blap.NSAL1350.NSAL1350_ACMsgArray", null, null},
	
	{"xxSfxKeyTxt_O", "xxSfxKeyTxt_O", "O", null, TYPE_HANKAKUEISU, "30", null},
	{"O", "O", null, "200", "business.blap.NSAL1350.NSAL1350_OCMsgArray", null, null},
	
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"CPO_ORD_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cpoOrdNum_I
        {"SHELL_LINE_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shellLineNum_I
        {"ADD_ASRY_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//addAsryFlg_I
        {"DS_CONTR_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrNum_I
        {"XX_SFX_KEY_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxSfxKeyTxt_I
		null,	//I
        {"MDSE_ITEM_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseItemTpCd
        {"MDL_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdlId
        {"DS_ORD_POSN_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdPosnNum
        {"MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd
        {"ADD_ASRY_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//addAsryFlg
        {"MDSE_ITEM_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseItemTpCd_LC
        {"MDSE_ITEM_TP_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseItemTpNm_LD
        {"MDL_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdlId_LC
        {"T_MDL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//t_MdlNm_LD
		null,	//A
        {"XX_SFX_KEY_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxSfxKeyTxt_O
		null,	//O
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

