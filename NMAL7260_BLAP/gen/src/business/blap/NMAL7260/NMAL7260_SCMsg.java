//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20190109181337000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NMAL7260_SCMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NMAL7260;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NMAL7260 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NMAL7260_SCMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_POP_PRM*/
	public final EZDCStringItem              xxPopPrm;

    /** PRC_FMLA_PK_PP*/
	public final EZDCBigDecimalItem              prcFmlaPk_PP;

    /** PRC_FMLA_NM_PP*/
	public final EZDCStringItem              prcFmlaNm_PP;

    /** PRC_RULE_DTL_RATE_PP*/
	public final EZDCBigDecimalItem              prcRuleDtlRate_PP;

    /** PRC_RULE_DTL_TXT_FF*/
	public final EZDCStringItem              prcRuleDtlTxt_FF;

    /** XX_SVC_CALL_DT_FT*/
	public final EZDCDateItem              xxSvcCallDt_FT;

    /** XX_SVC_CALL_DT_TF*/
	public final EZDCDateItem              xxSvcCallDt_TF;

    /** XX_SVC_CALL_DT_TT*/
	public final EZDCDateItem              xxSvcCallDt_TT;

    /** XX_SVC_CALL_DT_FF*/
	public final EZDCDateItem              xxSvcCallDt_FF;

    /** PRC_DT_FT*/
	public final EZDCDateItem              prcDt_FT;

    /** PRC_DT_TF*/
	public final EZDCDateItem              prcDt_TF;

    /** PRC_DT_TT*/
	public final EZDCDateItem              prcDt_TT;

    /** PRC_DT_FF*/
	public final EZDCDateItem              prcDt_FF;

    /** XX_RQST_DT_FT*/
	public final EZDCDateItem              xxRqstDt_FT;

    /** XX_RQST_DT_TF*/
	public final EZDCDateItem              xxRqstDt_TF;

    /** XX_RQST_DT_TT*/
	public final EZDCDateItem              xxRqstDt_TT;

    /** XX_RQST_DT_AF*/
	public final EZDCDateItem              xxRqstDt_AF;

    /** EFF_FROM_DT_AT*/
	public final EZDCDateItem              effFromDt_AT;

    /** EFF_FROM_DT_AF*/
	public final EZDCDateItem              effFromDt_AF;

    /** EFF_THRU_DT_AT*/
	public final EZDCDateItem              effThruDt_AT;

    /** EFF_THRU_DT_PC*/
	public final EZDCDateItem              effThruDt_PC;

    /** XX_FULL_NM_PU*/
	public final EZDCStringItem              xxFullNm_PU;

    /** XX_FULL_NM_BF*/
	public final EZDCStringItem              xxFullNm_BF;

    /** CRAT_DT_BT*/
	public final EZDCDateItem              cratDt_BT;

    /** CRAT_DT_CF*/
	public final EZDCDateItem              cratDt_CF;

    /** LAST_UPD_DT_CT*/
	public final EZDCDateItem              lastUpdDt_CT;

    /** LAST_UPD_DT*/
	public final EZDCDateItem              lastUpdDt;


	/**
	 * NMAL7260_SCMsg is constructor.
	 * The initialization when the instance of NMAL7260_SCMsg is generated.
	 */
	public NMAL7260_SCMsg() {
		this(false, -1);
	}

	/**
	 * NMAL7260_SCMsg is constructor.
	 * The initialization when the instance of NMAL7260_SCMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NMAL7260_SCMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxPopPrm = (EZDCStringItem)newItem("xxPopPrm");
		prcFmlaPk_PP = (EZDCBigDecimalItem)newItem("prcFmlaPk_PP");
		prcFmlaNm_PP = (EZDCStringItem)newItem("prcFmlaNm_PP");
		prcRuleDtlRate_PP = (EZDCBigDecimalItem)newItem("prcRuleDtlRate_PP");
		prcRuleDtlTxt_FF = (EZDCStringItem)newItem("prcRuleDtlTxt_FF");
		xxSvcCallDt_FT = (EZDCDateItem)newItem("xxSvcCallDt_FT");
		xxSvcCallDt_TF = (EZDCDateItem)newItem("xxSvcCallDt_TF");
		xxSvcCallDt_TT = (EZDCDateItem)newItem("xxSvcCallDt_TT");
		xxSvcCallDt_FF = (EZDCDateItem)newItem("xxSvcCallDt_FF");
		prcDt_FT = (EZDCDateItem)newItem("prcDt_FT");
		prcDt_TF = (EZDCDateItem)newItem("prcDt_TF");
		prcDt_TT = (EZDCDateItem)newItem("prcDt_TT");
		prcDt_FF = (EZDCDateItem)newItem("prcDt_FF");
		xxRqstDt_FT = (EZDCDateItem)newItem("xxRqstDt_FT");
		xxRqstDt_TF = (EZDCDateItem)newItem("xxRqstDt_TF");
		xxRqstDt_TT = (EZDCDateItem)newItem("xxRqstDt_TT");
		xxRqstDt_AF = (EZDCDateItem)newItem("xxRqstDt_AF");
		effFromDt_AT = (EZDCDateItem)newItem("effFromDt_AT");
		effFromDt_AF = (EZDCDateItem)newItem("effFromDt_AF");
		effThruDt_AT = (EZDCDateItem)newItem("effThruDt_AT");
		effThruDt_PC = (EZDCDateItem)newItem("effThruDt_PC");
		xxFullNm_PU = (EZDCStringItem)newItem("xxFullNm_PU");
		xxFullNm_BF = (EZDCStringItem)newItem("xxFullNm_BF");
		cratDt_BT = (EZDCDateItem)newItem("cratDt_BT");
		cratDt_CF = (EZDCDateItem)newItem("cratDt_CF");
		lastUpdDt_CT = (EZDCDateItem)newItem("lastUpdDt_CT");
		lastUpdDt = (EZDCDateItem)newItem("lastUpdDt");
	}

	/**
	 * get the type of array which is stored
	 * @return NMAL7260_SCMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NMAL7260_SCMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxPopPrm", "xxPopPrm", null, null, TYPE_HANKAKUEISU, "300", null},
	{"prcFmlaPk_PP", "prcFmlaPk_PP", "PP", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"prcFmlaNm_PP", "prcFmlaNm_PP", "PP", null, TYPE_HANKAKUEISU, "50", null},
	{"prcRuleDtlRate_PP", "prcRuleDtlRate_PP", "PP", null, TYPE_SEISU_SYOSU, "9", "5"},
	{"prcRuleDtlTxt_FF", "prcRuleDtlTxt_FF", "FF", null, TYPE_HANKAKUEISU, "50", null},
	{"xxSvcCallDt_FT", "xxSvcCallDt_FT", "FT", null, TYPE_NENTSUKIHI, "8", null},
	{"xxSvcCallDt_TF", "xxSvcCallDt_TF", "TF", null, TYPE_NENTSUKIHI, "8", null},
	{"xxSvcCallDt_TT", "xxSvcCallDt_TT", "TT", null, TYPE_NENTSUKIHI, "8", null},
	{"xxSvcCallDt_FF", "xxSvcCallDt_FF", "FF", null, TYPE_NENTSUKIHI, "8", null},
	{"prcDt_FT", "prcDt_FT", "FT", null, TYPE_NENTSUKIHI, "8", null},
	{"prcDt_TF", "prcDt_TF", "TF", null, TYPE_NENTSUKIHI, "8", null},
	{"prcDt_TT", "prcDt_TT", "TT", null, TYPE_NENTSUKIHI, "8", null},
	{"prcDt_FF", "prcDt_FF", "FF", null, TYPE_NENTSUKIHI, "8", null},
	{"xxRqstDt_FT", "xxRqstDt_FT", "FT", null, TYPE_NENTSUKIHI, "8", null},
	{"xxRqstDt_TF", "xxRqstDt_TF", "TF", null, TYPE_NENTSUKIHI, "8", null},
	{"xxRqstDt_TT", "xxRqstDt_TT", "TT", null, TYPE_NENTSUKIHI, "8", null},
	{"xxRqstDt_AF", "xxRqstDt_AF", "AF", null, TYPE_NENTSUKIHI, "8", null},
	{"effFromDt_AT", "effFromDt_AT", "AT", null, TYPE_NENTSUKIHI, "8", null},
	{"effFromDt_AF", "effFromDt_AF", "AF", null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt_AT", "effThruDt_AT", "AT", null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt_PC", "effThruDt_PC", "PC", null, TYPE_NENTSUKIHI, "8", null},
	{"xxFullNm_PU", "xxFullNm_PU", "PU", null, TYPE_HANKAKUEISU, "100", null},
	{"xxFullNm_BF", "xxFullNm_BF", "BF", null, TYPE_HANKAKUEISU, "100", null},
	{"cratDt_BT", "cratDt_BT", "BT", null, TYPE_NENTSUKIHI, "8", null},
	{"cratDt_CF", "cratDt_CF", "CF", null, TYPE_NENTSUKIHI, "8", null},
	{"lastUpdDt_CT", "lastUpdDt_CT", "CT", null, TYPE_NENTSUKIHI, "8", null},
	{"lastUpdDt", "lastUpdDt", null, null, TYPE_NENTSUKIHI, "8", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_POP_PRM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPopPrm
        {"PRC_FMLA_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcFmlaPk_PP
        {"PRC_FMLA_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcFmlaNm_PP
        {"PRC_RULE_DTL_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleDtlRate_PP
        {"PRC_RULE_DTL_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleDtlTxt_FF
        {"XX_SVC_CALL_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxSvcCallDt_FT
        {"XX_SVC_CALL_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxSvcCallDt_TF
        {"XX_SVC_CALL_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxSvcCallDt_TT
        {"XX_SVC_CALL_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxSvcCallDt_FF
        {"PRC_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcDt_FT
        {"PRC_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcDt_TF
        {"PRC_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcDt_TT
        {"PRC_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcDt_FF
        {"XX_RQST_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRqstDt_FT
        {"XX_RQST_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRqstDt_TF
        {"XX_RQST_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRqstDt_TT
        {"XX_RQST_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRqstDt_AF
        {"EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effFromDt_AT
        {"EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effFromDt_AF
        {"EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effThruDt_AT
        {"EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effThruDt_PC
        {"XX_FULL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxFullNm_PU
        {"XX_FULL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxFullNm_BF
        {"CRAT_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cratDt_BT
        {"CRAT_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cratDt_CF
        {"LAST_UPD_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//lastUpdDt_CT
        {"LAST_UPD_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//lastUpdDt
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

