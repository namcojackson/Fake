//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20161004110346000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NMAL7260_ACMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NMAL7260;

import parts.common.EZDCBigDecimalItem;
import parts.common.EZDCMimeSourceItem;
import parts.common.EZDCMsg;
import parts.common.EZDCStringItem;
import parts.common.EZDMsgArray;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NMAL7260 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NMAL7260_ACMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_CHK_BOX_A1*/
	public final EZDCStringItem              xxChkBox_A1;

    /** PRC_RULE_COND_NUM_A1*/
	public final EZDCBigDecimalItem              prcRuleCondNum_A1;

    /** PRC_RULE_ATTRB_CD_A1*/
	public final EZDCStringItem              prcRuleAttrbCd_A1;

    /** INP_OBJ_TP_DESC_TXT_A1*/
	public final EZDCStringItem              inpObjTpDescTxt_A1;

    /** INP_REQ_FLG_A1*/
	public final EZDCStringItem              inpReqFlg_A1;

    /** PRC_RULE_TRX_COND_PK_A1*/
	public final EZDCBigDecimalItem              prcRuleTrxCondPk_A1;

    /** _EZUpdateDateTime_A1*/
	public final EZDCStringItem              ezUpTime_A1;

    /** _EZUpTimeZone_A1*/
	public final EZDCStringItem              ezUpTimeZone_A1;

    /** PRC_RULE_DTL_PK_A1*/
	public final EZDCBigDecimalItem              prcRuleDtlPk_A1;

    /** XX_FILE_DATA_A1*/
	public final EZDCMimeSourceItem              xxFileData_A1;


	/**
	 * NMAL7260_ACMsg is constructor.
	 * The initialization when the instance of NMAL7260_ACMsg is generated.
	 */
	public NMAL7260_ACMsg() {
		this(false, -1);
	}

	/**
	 * NMAL7260_ACMsg is constructor.
	 * The initialization when the instance of NMAL7260_ACMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NMAL7260_ACMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxChkBox_A1 = (EZDCStringItem)newItem("xxChkBox_A1");
		prcRuleCondNum_A1 = (EZDCBigDecimalItem)newItem("prcRuleCondNum_A1");
		prcRuleAttrbCd_A1 = (EZDCStringItem)newItem("prcRuleAttrbCd_A1");
		inpObjTpDescTxt_A1 = (EZDCStringItem)newItem("inpObjTpDescTxt_A1");
		inpReqFlg_A1 = (EZDCStringItem)newItem("inpReqFlg_A1");
		prcRuleTrxCondPk_A1 = (EZDCBigDecimalItem)newItem("prcRuleTrxCondPk_A1");
		ezUpTime_A1 = (EZDCStringItem)newItem("ezUpTime_A1");
		ezUpTimeZone_A1 = (EZDCStringItem)newItem("ezUpTimeZone_A1");
		prcRuleDtlPk_A1 = (EZDCBigDecimalItem)newItem("prcRuleDtlPk_A1");
		xxFileData_A1 = (EZDCMimeSourceItem)newItem("xxFileData_A1");
	}

	/**
	 * get the type of array which is stored
	 * @return NMAL7260_ACMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NMAL7260_ACMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxChkBox_A1", "xxChkBox_A1", "A1", null, TYPE_HANKAKUEIJI, "1", null},
	{"prcRuleCondNum_A1", "prcRuleCondNum_A1", "A1", null, TYPE_SEISU_SYOSU, "3", "0"},
	{"prcRuleAttrbCd_A1", "prcRuleAttrbCd_A1", "A1", null, TYPE_HANKAKUEISU, "2", null},
	{"inpObjTpDescTxt_A1", "inpObjTpDescTxt_A1", "A1", null, TYPE_HANKAKUEISU, "50", null},
	{"inpReqFlg_A1", "inpReqFlg_A1", "A1", null, TYPE_HANKAKUEISU, "1", null},
	{"prcRuleTrxCondPk_A1", "prcRuleTrxCondPk_A1", "A1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"ezUpTime_A1", "ezUpTime_A1", "A1", null, TYPE_HANKAKUEISU, "17", null},
	{"ezUpTimeZone_A1", "ezUpTimeZone_A1", "A1", null, TYPE_HANKAKUEISU, "5", null},
	{"prcRuleDtlPk_A1", "prcRuleDtlPk_A1", "A1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"xxFileData_A1", "xxFileData_A1", "A1", null, TYPE_UPLOAD, null, null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_A1
        {"PRC_RULE_COND_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleCondNum_A1
        {"PRC_RULE_ATTRB_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleAttrbCd_A1
        {"INP_OBJ_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//inpObjTpDescTxt_A1
        {"INP_REQ_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//inpReqFlg_A1
        {"PRC_RULE_TRX_COND_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleTrxCondPk_A1
        {"_EZUpdateDateTime",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTime_A1
        {"_EZUpTimeZone",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTimeZone_A1
        {"PRC_RULE_DTL_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleDtlPk_A1
        {"XX_FILE_DATA",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxFileData_A1
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

