//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20180803111238000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NWAL2170_SCMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NWAL2170;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NWAL2170 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NWAL2170_SCMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** MDL_ID_S*/
	public final EZDCBigDecimalItem              mdlId_S;

    /** CPO_SVC_DTL_PK_S*/
	public final EZDCBigDecimalItem              cpoSvcDtlPk_S;

    /** CPO_SVC_PRC_PK_S*/
	public final EZDCBigDecimalItem              cpoSvcPrcPk_S;

    /** PRC_LIST_BAND_CD_S*/
	public final EZDCStringItem              prcListBandCd_S;

    /** PRC_BOOK_MDSE_CD_S*/
	public final EZDCStringItem              prcBookMdseCd_S;

    /** BLLG_MTR_LB_CD_S*/
	public final EZDCStringItem              bllgMtrLbCd_S;

    /** USG_MDSE_CD_S*/
	public final EZDCStringItem              usgMdseCd_S;

    /** COPY_INCL_PRC_QTY_S*/
	public final EZDCBigDecimalItem              copyInclPrcQty_S;

    /** MLY_COPY_INCL_PRC_QTY_S*/
	public final EZDCBigDecimalItem              mlyCopyInclPrcQty_S;

    /** REG_MTR_LB_CD_S*/
	public final EZDCStringItem              regMtrLbCd_S;

    /** XS_MTR_AMT_RATE_S*/
	public final EZDCBigDecimalItem              xsMtrAmtRate_S;

    /** CONTR_MTR_MULT_RATE_S*/
	public final EZDCBigDecimalItem              contrMtrMultRate_S;

    /** PRC_SVC_TIER_TP_CD_S*/
	public final EZDCStringItem              prcSvcTierTpCd_S;

    /** MIN_COPY_VOL_CNT_S*/
	public final EZDCBigDecimalItem              minCopyVolCnt_S;

    /** MAX_COPY_VOL_CNT_S*/
	public final EZDCBigDecimalItem              maxCopyVolCnt_S;


	/**
	 * NWAL2170_SCMsg is constructor.
	 * The initialization when the instance of NWAL2170_SCMsg is generated.
	 */
	public NWAL2170_SCMsg() {
		this(false, -1);
	}

	/**
	 * NWAL2170_SCMsg is constructor.
	 * The initialization when the instance of NWAL2170_SCMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NWAL2170_SCMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		mdlId_S = (EZDCBigDecimalItem)newItem("mdlId_S");
		cpoSvcDtlPk_S = (EZDCBigDecimalItem)newItem("cpoSvcDtlPk_S");
		cpoSvcPrcPk_S = (EZDCBigDecimalItem)newItem("cpoSvcPrcPk_S");
		prcListBandCd_S = (EZDCStringItem)newItem("prcListBandCd_S");
		prcBookMdseCd_S = (EZDCStringItem)newItem("prcBookMdseCd_S");
		bllgMtrLbCd_S = (EZDCStringItem)newItem("bllgMtrLbCd_S");
		usgMdseCd_S = (EZDCStringItem)newItem("usgMdseCd_S");
		copyInclPrcQty_S = (EZDCBigDecimalItem)newItem("copyInclPrcQty_S");
		mlyCopyInclPrcQty_S = (EZDCBigDecimalItem)newItem("mlyCopyInclPrcQty_S");
		regMtrLbCd_S = (EZDCStringItem)newItem("regMtrLbCd_S");
		xsMtrAmtRate_S = (EZDCBigDecimalItem)newItem("xsMtrAmtRate_S");
		contrMtrMultRate_S = (EZDCBigDecimalItem)newItem("contrMtrMultRate_S");
		prcSvcTierTpCd_S = (EZDCStringItem)newItem("prcSvcTierTpCd_S");
		minCopyVolCnt_S = (EZDCBigDecimalItem)newItem("minCopyVolCnt_S");
		maxCopyVolCnt_S = (EZDCBigDecimalItem)newItem("maxCopyVolCnt_S");
	}

	/**
	 * get the type of array which is stored
	 * @return NWAL2170_SCMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NWAL2170_SCMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"mdlId_S", "mdlId_S", "S", null, TYPE_SEISU_SYOSU, "22", "0"},
	{"cpoSvcDtlPk_S", "cpoSvcDtlPk_S", "S", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"cpoSvcPrcPk_S", "cpoSvcPrcPk_S", "S", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"prcListBandCd_S", "prcListBandCd_S", "S", null, TYPE_HANKAKUEISU, "2", null},
	{"prcBookMdseCd_S", "prcBookMdseCd_S", "S", null, TYPE_HANKAKUEISU, "16", null},
	{"bllgMtrLbCd_S", "bllgMtrLbCd_S", "S", null, TYPE_HANKAKUEISU, "2", null},
	{"usgMdseCd_S", "usgMdseCd_S", "S", null, TYPE_HANKAKUEISU, "16", null},
	{"copyInclPrcQty_S", "copyInclPrcQty_S", "S", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"mlyCopyInclPrcQty_S", "mlyCopyInclPrcQty_S", "S", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"regMtrLbCd_S", "regMtrLbCd_S", "S", null, TYPE_HANKAKUEISU, "2", null},
	{"xsMtrAmtRate_S", "xsMtrAmtRate_S", "S", null, TYPE_SEISU_SYOSU, "19", "6"},
	{"contrMtrMultRate_S", "contrMtrMultRate_S", "S", null, TYPE_SEISU_SYOSU, "9", "5"},
	{"prcSvcTierTpCd_S", "prcSvcTierTpCd_S", "S", null, TYPE_HANKAKUEISU, "2", null},
	{"minCopyVolCnt_S", "minCopyVolCnt_S", "S", null, TYPE_SEISU_SYOSU, "12", "0"},
	{"maxCopyVolCnt_S", "maxCopyVolCnt_S", "S", null, TYPE_SEISU_SYOSU, "12", "0"},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"MDL_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdlId_S
        {"CPO_SVC_DTL_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cpoSvcDtlPk_S
        {"CPO_SVC_PRC_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cpoSvcPrcPk_S
        {"PRC_LIST_BAND_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcListBandCd_S
        {"PRC_BOOK_MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcBookMdseCd_S
        {"BLLG_MTR_LB_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgMtrLbCd_S
        {"USG_MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//usgMdseCd_S
        {"COPY_INCL_PRC_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//copyInclPrcQty_S
        {"MLY_COPY_INCL_PRC_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mlyCopyInclPrcQty_S
        {"REG_MTR_LB_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//regMtrLbCd_S
        {"XS_MTR_AMT_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xsMtrAmtRate_S
        {"CONTR_MTR_MULT_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//contrMtrMultRate_S
        {"PRC_SVC_TIER_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcSvcTierTpCd_S
        {"MIN_COPY_VOL_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//minCopyVolCnt_S
        {"MAX_COPY_VOL_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//maxCopyVolCnt_S
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

