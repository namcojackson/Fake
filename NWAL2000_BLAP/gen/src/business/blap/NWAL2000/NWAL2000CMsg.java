//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20180614094314000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NWAL2000CMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NWAL2000;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NWAL2000 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NWAL2000CMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_MODE_CD*/
	public final EZDCStringItem              xxModeCd;

    /** GLBL_CMPY_CD*/
	public final EZDCStringItem              glblCmpyCd;

    /** CPO_ORD_NUM*/
	public final EZDCStringItem              cpoOrdNum;

    /** CONFIG_CATG_CD*/
	public final EZDCStringItem              configCatgCd;

    /** CONFIG_CATG_CD_CD*/
	public final EZDCStringItemArray              configCatgCd_CD;

    /** CONFIG_CATG_DESC_TXT_DI*/
	public final EZDCStringItemArray              configCatgDescTxt_DI;

    /** XX_POP_PRM_DI*/
	public final EZDCStringItem              xxPopPrm_DI;

    /** ORD_QTY*/
	public final EZDCBigDecimalItem              ordQty;

    /** CANC_QTY*/
	public final EZDCBigDecimalItem              cancQty;

    /** XX_POP_PRM*/
	public final EZDCStringItem              xxPopPrm;

    /** CHNG_RSN_TP_CD*/
	public final EZDCStringItem              chngRsnTpCd;

    /** CHNG_RSN_TP_CD_L0*/
	public final EZDCStringItemArray              chngRsnTpCd_L0;

    /** CHNG_RSN_TP_DESC_TXT_L0*/
	public final EZDCStringItemArray              chngRsnTpDescTxt_L0;

    /** BIZ_PROC_CMNT_TXT*/
	public final EZDCStringItem              bizProcCmntTxt;


	/**
	 * NWAL2000CMsg is constructor.
	 * The initialization when the instance of NWAL2000CMsg is generated.
	 */
	public NWAL2000CMsg() {
		this(false, -1);
	}

	/**
	 * NWAL2000CMsg is constructor.
	 * The initialization when the instance of NWAL2000CMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NWAL2000CMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxModeCd = (EZDCStringItem)newItem("xxModeCd");
		glblCmpyCd = (EZDCStringItem)newItem("glblCmpyCd");
		cpoOrdNum = (EZDCStringItem)newItem("cpoOrdNum");
		configCatgCd = (EZDCStringItem)newItem("configCatgCd");
		configCatgCd_CD = (EZDCStringItemArray)newItemArray("configCatgCd_CD");
		configCatgDescTxt_DI = (EZDCStringItemArray)newItemArray("configCatgDescTxt_DI");
		xxPopPrm_DI = (EZDCStringItem)newItem("xxPopPrm_DI");
		ordQty = (EZDCBigDecimalItem)newItem("ordQty");
		cancQty = (EZDCBigDecimalItem)newItem("cancQty");
		xxPopPrm = (EZDCStringItem)newItem("xxPopPrm");
		chngRsnTpCd = (EZDCStringItem)newItem("chngRsnTpCd");
		chngRsnTpCd_L0 = (EZDCStringItemArray)newItemArray("chngRsnTpCd_L0");
		chngRsnTpDescTxt_L0 = (EZDCStringItemArray)newItemArray("chngRsnTpDescTxt_L0");
		bizProcCmntTxt = (EZDCStringItem)newItem("bizProcCmntTxt");
	}

	/**
	 * get the type of array which is stored
	 * @return NWAL2000CMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NWAL2000CMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxModeCd", "xxModeCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"glblCmpyCd", "glblCmpyCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"cpoOrdNum", "cpoOrdNum", null, null, TYPE_HANKAKUEISU, "8", null},
	{"configCatgCd", "configCatgCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"configCatgCd_CD", "configCatgCd_CD", "CD", "99", TYPE_HANKAKUEISU, "2", null},
	{"configCatgDescTxt_DI", "configCatgDescTxt_DI", "DI", "99", TYPE_HANKAKUEISU, "50", null},
	{"xxPopPrm_DI", "xxPopPrm_DI", "DI", null, TYPE_HANKAKUEISU, "300", null},
	{"ordQty", "ordQty", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"cancQty", "cancQty", null, null, TYPE_SEISU_SYOSU, "10", "0"},
	{"xxPopPrm", "xxPopPrm", null, null, TYPE_HANKAKUEISU, "300", null},
	{"chngRsnTpCd", "chngRsnTpCd", null, null, TYPE_HANKAKUEISU, "1", null},
	{"chngRsnTpCd_L0", "chngRsnTpCd_L0", "L0", "99", TYPE_HANKAKUEISU, "1", null},
	{"chngRsnTpDescTxt_L0", "chngRsnTpDescTxt_L0", "L0", "99", TYPE_HANKAKUEISU, "50", null},
	{"bizProcCmntTxt", "bizProcCmntTxt", null, null, TYPE_HANKAKUEISU, "400", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_MODE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxModeCd
        {"GLBL_CMPY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//glblCmpyCd
        {"CPO_ORD_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cpoOrdNum
        {"CONFIG_CATG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//configCatgCd
        {"CONFIG_CATG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//configCatgCd_CD
        {"CONFIG_CATG_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//configCatgDescTxt_DI
        {"XX_POP_PRM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPopPrm_DI
        {"ORD_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordQty
        {"CANC_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cancQty
        {"XX_POP_PRM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPopPrm
        {"CHNG_RSN_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//chngRsnTpCd
        {"CHNG_RSN_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//chngRsnTpCd_L0
        {"CHNG_RSN_TP_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//chngRsnTpDescTxt_L0
        {"BIZ_PROC_CMNT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bizProcCmntTxt
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

