// This file was automatically generated by Screen Field Definition Document and XLA200710010
// Generated on    :20180423165603000
// Velocity Macro:svltdatabean.vm V200604010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NWAL2370Bean.java Copyright FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */

package  business.servlet.NWAL2370;

import parts.servletcommon.EZDCommonDataBean;

/*
 * NWAL2370 is data bean class.
 */
public class NWAL2370Bean extends EZDCommonDataBean {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	//Constant Definition Area
	/** XX_MODE_CD*/
	public static final String xxModeCd = "xxModeCd";

	/** DS_CONTR_DTL_PK*/
	public static final String dsContrDtlPk = "dsContrDtlPk";

	/** DS_IMPT_SVC_CONFIG_REF_PK*/
	public static final String dsImptSvcConfigRefPk = "dsImptSvcConfigRefPk";

	/** DS_CONTR_CATG_CD*/
	public static final String dsContrCatgCd = "dsContrCatgCd";

	/** SHELL_LINE_NUM*/
	public static final String shellLineNum = "shellLineNum";

	/** FROM_PER_MTH_NUM*/
	public static final String fromPerMthNum = "fromPerMthNum";

	/** TO_PER_MTH_NUM*/
	public static final String toPerMthNum = "toPerMthNum";

	/** TERM_MTH_AOT*/
	public static final String termMthAot = "termMthAot";

	/** DS_ORD_POSN_NUM*/
	public static final String dsOrdPosnNum = "dsOrdPosnNum";

	/** T_MDL_NM*/
	public static final String t_MdlNm = "t_MdlNm";

	/** AFT_DECL_PNT_DIGIT_NUM*/
	public static final String aftDeclPntDigitNum = "aftDeclPntDigitNum";

	/** A*/
	public static final String A = "A";

	/** XX_LINE_NUM_A1*/
	public static final String xxLineNum_A1 = "xxLineNum_A1";

	/** DS_CONTR_DTL_PK_A1*/
	public static final String dsContrDtlPk_A1 = "dsContrDtlPk_A1";

	/** DS_IMPT_ORD_DTL_PK_A1*/
	public static final String dsImptOrdDtlPk_A1 = "dsImptOrdDtlPk_A1";

	/** MDSE_CD_A1*/
	public static final String mdseCd_A1 = "mdseCd_A1";

	/** MDSE_DESC_SHORT_TXT_A1*/
	public static final String mdseDescShortTxt_A1 = "mdseDescShortTxt_A1";

	/** XX_FREQ_CYCLE_CNT_A1*/
	public static final String xxFreqCycleCnt_A1 = "xxFreqCycleCnt_A1";

	/** BLLG_CYCLE_DESC_TXT_A1*/
	public static final String bllgCycleDescTxt_A1 = "bllgCycleDescTxt_A1";

	/** XX_TOT_AMT_PY*/
	public static final String xxTotAmt_PY = "xxTotAmt_PY";

	/** XX_TOT_AMT_EQ*/
	public static final String xxTotAmt_EQ = "xxTotAmt_EQ";

	/** XX_TOT_AMT_SV*/
	public static final String xxTotAmt_SV = "xxTotAmt_SV";

	/** XX_TOT_AMT_AC*/
	public static final String xxTotAmt_AC = "xxTotAmt_AC";

	/** PRC_LIST_EQUIP_CONFIG_NM_A1*/
	public static final String prcListEquipConfigNm_A1 = "prcListEquipConfigNm_A1";

	/**
	 * Method name:NWAL2370 is Bean's Constructor.
	 * <dd>method explanation:Initialization when instance of NWAL2370Bean is generated
	 * <dd>Remarks:
	 */
	public NWAL2370Bean() {
		super("business.servlet.NWAL2370.NWAL2370BMsg");
	}

	/**
	 * get  XX_MODE_CD.
	 * @return XX_MODE_CD
	 */
	public String getXxModeCd() {
		return outputValue(xxModeCd);
	}

	/**
	 * set  XX_MODE_CD.
	 * @param data XX_MODE_CD
	 */
	public void setXxModeCd(String data) {
		inputValue(xxModeCd,data);
	}

	/**
	 * get  DS_CONTR_DTL_PK.
	 * @return DS_CONTR_DTL_PK
	 */
	public String getDsContrDtlPk() {
		return outputValue(dsContrDtlPk);
	}

	/**
	 * set  DS_CONTR_DTL_PK.
	 * @param data DS_CONTR_DTL_PK
	 */
	public void setDsContrDtlPk(String data) {
		inputValue(dsContrDtlPk,data);
	}

	/**
	 * get  DS_IMPT_SVC_CONFIG_REF_PK.
	 * @return DS_IMPT_SVC_CONFIG_REF_PK
	 */
	public String getDsImptSvcConfigRefPk() {
		return outputValue(dsImptSvcConfigRefPk);
	}

	/**
	 * set  DS_IMPT_SVC_CONFIG_REF_PK.
	 * @param data DS_IMPT_SVC_CONFIG_REF_PK
	 */
	public void setDsImptSvcConfigRefPk(String data) {
		inputValue(dsImptSvcConfigRefPk,data);
	}

	/**
	 * get  DS_CONTR_CATG_CD.
	 * @return DS_CONTR_CATG_CD
	 */
	public String getDsContrCatgCd() {
		return outputValue(dsContrCatgCd);
	}

	/**
	 * set  DS_CONTR_CATG_CD.
	 * @param data DS_CONTR_CATG_CD
	 */
	public void setDsContrCatgCd(String data) {
		inputValue(dsContrCatgCd,data);
	}

	/**
	 * get  SHELL_LINE_NUM.
	 * @return SHELL_LINE_NUM
	 */
	public String getShellLineNum() {
		return outputValue(shellLineNum);
	}

	/**
	 * set  SHELL_LINE_NUM.
	 * @param data SHELL_LINE_NUM
	 */
	public void setShellLineNum(String data) {
		inputValue(shellLineNum,data);
	}

	/**
	 * get  FROM_PER_MTH_NUM.
	 * @return FROM_PER_MTH_NUM
	 */
	public String getFromPerMthNum() {
		return outputValue(fromPerMthNum);
	}

	/**
	 * set  FROM_PER_MTH_NUM.
	 * @param data FROM_PER_MTH_NUM
	 */
	public void setFromPerMthNum(String data) {
		inputValue(fromPerMthNum,data);
	}

	/**
	 * get  TO_PER_MTH_NUM.
	 * @return TO_PER_MTH_NUM
	 */
	public String getToPerMthNum() {
		return outputValue(toPerMthNum);
	}

	/**
	 * set  TO_PER_MTH_NUM.
	 * @param data TO_PER_MTH_NUM
	 */
	public void setToPerMthNum(String data) {
		inputValue(toPerMthNum,data);
	}

	/**
	 * get  TERM_MTH_AOT.
	 * @return TERM_MTH_AOT
	 */
	public String getTermMthAot() {
		return outputValue(termMthAot);
	}

	/**
	 * set  TERM_MTH_AOT.
	 * @param data TERM_MTH_AOT
	 */
	public void setTermMthAot(String data) {
		inputValue(termMthAot,data);
	}

	/**
	 * get  DS_ORD_POSN_NUM.
	 * @return DS_ORD_POSN_NUM
	 */
	public String getDsOrdPosnNum() {
		return outputValue(dsOrdPosnNum);
	}

	/**
	 * set  DS_ORD_POSN_NUM.
	 * @param data DS_ORD_POSN_NUM
	 */
	public void setDsOrdPosnNum(String data) {
		inputValue(dsOrdPosnNum,data);
	}

	/**
	 * get  T_MDL_NM.
	 * @return T_MDL_NM
	 */
	public String getT_MdlNm() {
		return outputValue(t_MdlNm);
	}

	/**
	 * set  T_MDL_NM.
	 * @param data T_MDL_NM
	 */
	public void setT_MdlNm(String data) {
		inputValue(t_MdlNm,data);
	}

	/**
	 * get  AFT_DECL_PNT_DIGIT_NUM.
	 * @return AFT_DECL_PNT_DIGIT_NUM
	 */
	public String getAftDeclPntDigitNum() {
		return outputValue(aftDeclPntDigitNum);
	}

	/**
	 * set  AFT_DECL_PNT_DIGIT_NUM.
	 * @param data AFT_DECL_PNT_DIGIT_NUM
	 */
	public void setAftDeclPntDigitNum(String data) {
		inputValue(aftDeclPntDigitNum,data);
	}

	/**
	 * get  XX_LINE_NUM_A1.
	 * @param idx1 List Number
	 * @return XX_LINE_NUM_A1
	 */
	public String getXxLineNum_A1(int idx1) {
		return outputValue(A, idx1, xxLineNum_A1);
	}

	/**
	 * set  XX_LINE_NUM_A1.
	 * @param data XX_LINE_NUM_A1Array
	 */
	public void setXxLineNum_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxLineNum_A1, data[j]);
		}
	}

	/**
	 * get  DS_CONTR_DTL_PK_A1.
	 * @param idx1 List Number
	 * @return DS_CONTR_DTL_PK_A1
	 */
	public String getDsContrDtlPk_A1(int idx1) {
		return outputValue(A, idx1, dsContrDtlPk_A1);
	}

	/**
	 * set  DS_CONTR_DTL_PK_A1.
	 * @param data DS_CONTR_DTL_PK_A1Array
	 */
	public void setDsContrDtlPk_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsContrDtlPk_A1, data[j]);
		}
	}

	/**
	 * get  DS_IMPT_ORD_DTL_PK_A1.
	 * @param idx1 List Number
	 * @return DS_IMPT_ORD_DTL_PK_A1
	 */
	public String getDsImptOrdDtlPk_A1(int idx1) {
		return outputValue(A, idx1, dsImptOrdDtlPk_A1);
	}

	/**
	 * set  DS_IMPT_ORD_DTL_PK_A1.
	 * @param data DS_IMPT_ORD_DTL_PK_A1Array
	 */
	public void setDsImptOrdDtlPk_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, dsImptOrdDtlPk_A1, data[j]);
		}
	}

	/**
	 * get  MDSE_CD_A1.
	 * @param idx1 List Number
	 * @return MDSE_CD_A1
	 */
	public String getMdseCd_A1(int idx1) {
		return outputValue(A, idx1, mdseCd_A1);
	}

	/**
	 * set  MDSE_CD_A1.
	 * @param data MDSE_CD_A1Array
	 */
	public void setMdseCd_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, mdseCd_A1, data[j]);
		}
	}

	/**
	 * get  MDSE_DESC_SHORT_TXT_A1.
	 * @param idx1 List Number
	 * @return MDSE_DESC_SHORT_TXT_A1
	 */
	public String getMdseDescShortTxt_A1(int idx1) {
		return outputValue(A, idx1, mdseDescShortTxt_A1);
	}

	/**
	 * set  MDSE_DESC_SHORT_TXT_A1.
	 * @param data MDSE_DESC_SHORT_TXT_A1Array
	 */
	public void setMdseDescShortTxt_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, mdseDescShortTxt_A1, data[j]);
		}
	}

	/**
	 * get  XX_FREQ_CYCLE_CNT_A1.
	 * @param idx1 List Number
	 * @return XX_FREQ_CYCLE_CNT_A1
	 */
	public String getXxFreqCycleCnt_A1(int idx1) {
		return outputValue(A, idx1, xxFreqCycleCnt_A1);
	}

	/**
	 * set  XX_FREQ_CYCLE_CNT_A1.
	 * @param data XX_FREQ_CYCLE_CNT_A1Array
	 */
	public void setXxFreqCycleCnt_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxFreqCycleCnt_A1, data[j]);
		}
	}

	/**
	 * get  BLLG_CYCLE_DESC_TXT_A1.
	 * @param idx1 List Number
	 * @return BLLG_CYCLE_DESC_TXT_A1
	 */
	public String getBllgCycleDescTxt_A1(int idx1) {
		return outputValue(A, idx1, bllgCycleDescTxt_A1);
	}

	/**
	 * set  BLLG_CYCLE_DESC_TXT_A1.
	 * @param data BLLG_CYCLE_DESC_TXT_A1Array
	 */
	public void setBllgCycleDescTxt_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, bllgCycleDescTxt_A1, data[j]);
		}
	}

	/**
	 * get  XX_TOT_AMT_PY.
	 * @param idx1 List Number
	 * @return XX_TOT_AMT_PY
	 */
	public String getXxTotAmt_PY(int idx1) {
		return outputValue(A, idx1, xxTotAmt_PY);
	}

	/**
	 * set  XX_TOT_AMT_PY.
	 * @param data XX_TOT_AMT_PYArray
	 */
	public void setXxTotAmt_PY(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxTotAmt_PY, data[j]);
		}
	}

	/**
	 * get  XX_TOT_AMT_EQ.
	 * @param idx1 List Number
	 * @return XX_TOT_AMT_EQ
	 */
	public String getXxTotAmt_EQ(int idx1) {
		return outputValue(A, idx1, xxTotAmt_EQ);
	}

	/**
	 * set  XX_TOT_AMT_EQ.
	 * @param data XX_TOT_AMT_EQArray
	 */
	public void setXxTotAmt_EQ(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxTotAmt_EQ, data[j]);
		}
	}

	/**
	 * get  XX_TOT_AMT_SV.
	 * @param idx1 List Number
	 * @return XX_TOT_AMT_SV
	 */
	public String getXxTotAmt_SV(int idx1) {
		return outputValue(A, idx1, xxTotAmt_SV);
	}

	/**
	 * set  XX_TOT_AMT_SV.
	 * @param data XX_TOT_AMT_SVArray
	 */
	public void setXxTotAmt_SV(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxTotAmt_SV, data[j]);
		}
	}

	/**
	 * get  XX_TOT_AMT_AC.
	 * @param idx1 List Number
	 * @return XX_TOT_AMT_AC
	 */
	public String getXxTotAmt_AC(int idx1) {
		return outputValue(A, idx1, xxTotAmt_AC);
	}

	/**
	 * set  XX_TOT_AMT_AC.
	 * @param data XX_TOT_AMT_ACArray
	 */
	public void setXxTotAmt_AC(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, xxTotAmt_AC, data[j]);
		}
	}

	/**
	 * get  PRC_LIST_EQUIP_CONFIG_NM_A1.
	 * @param idx1 List Number
	 * @return PRC_LIST_EQUIP_CONFIG_NM_A1
	 */
	public String getPrcListEquipConfigNm_A1(int idx1) {
		return outputValue(A, idx1, prcListEquipConfigNm_A1);
	}

	/**
	 * set  PRC_LIST_EQUIP_CONFIG_NM_A1.
	 * @param data PRC_LIST_EQUIP_CONFIG_NM_A1Array
	 */
	public void setPrcListEquipConfigNm_A1(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, prcListEquipConfigNm_A1, data[j]);
		}
	}

}

