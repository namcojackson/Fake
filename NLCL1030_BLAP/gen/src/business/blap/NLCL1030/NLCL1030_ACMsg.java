//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20170531153341000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NLCL1030_ACMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NLCL1030;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NLCL1030 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NLCL1030_ACMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_LINK_ANCR_NM*/
	public final EZDCStringItem              xxLinkAncr_NM;

    /** ABC_ASG_NM_A*/
	public final EZDCStringItem              abcAsgNm_A;

    /** ABC_ASG_PK_A*/
	public final EZDCBigDecimalItem              abcAsgPk_A;

    /** ABC_ASG_DESC_TXT_A*/
	public final EZDCStringItem              abcAsgDescTxt_A;

    /** RTL_WH_CATG_DESC_TXT_A*/
	public final EZDCStringItem              rtlWhCatgDescTxt_A;

    /** RTL_WH_CD_SRCH_TXT_AW*/
	public final EZDCStringItem              rtlWhCdSrchTxt_AW;

    /** RTL_WH_NM_SRCH_TXT_AW*/
	public final EZDCStringItem              rtlWhNmSrchTxt_AW;

    /** RTL_WH_CD_SRCH_TXT_AS*/
	public final EZDCStringItem              rtlWhCdSrchTxt_AS;

    /** ABC_ANLS_CRIT_NM_A*/
	public final EZDCStringItem              abcAnlsCritNm_A;

    /** EFF_FROM_DT_A*/
	public final EZDCDateItem              effFromDt_A;

    /** EFF_THRU_DT_A*/
	public final EZDCDateItem              effThruDt_A;

    /** ABC_ANLS_CLS_NM_A*/
	public final EZDCStringItem              abcAnlsClsNm_A;


	/**
	 * NLCL1030_ACMsg is constructor.
	 * The initialization when the instance of NLCL1030_ACMsg is generated.
	 */
	public NLCL1030_ACMsg() {
		this(false, -1);
	}

	/**
	 * NLCL1030_ACMsg is constructor.
	 * The initialization when the instance of NLCL1030_ACMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NLCL1030_ACMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxLinkAncr_NM = (EZDCStringItem)newItem("xxLinkAncr_NM");
		abcAsgNm_A = (EZDCStringItem)newItem("abcAsgNm_A");
		abcAsgPk_A = (EZDCBigDecimalItem)newItem("abcAsgPk_A");
		abcAsgDescTxt_A = (EZDCStringItem)newItem("abcAsgDescTxt_A");
		rtlWhCatgDescTxt_A = (EZDCStringItem)newItem("rtlWhCatgDescTxt_A");
		rtlWhCdSrchTxt_AW = (EZDCStringItem)newItem("rtlWhCdSrchTxt_AW");
		rtlWhNmSrchTxt_AW = (EZDCStringItem)newItem("rtlWhNmSrchTxt_AW");
		rtlWhCdSrchTxt_AS = (EZDCStringItem)newItem("rtlWhCdSrchTxt_AS");
		abcAnlsCritNm_A = (EZDCStringItem)newItem("abcAnlsCritNm_A");
		effFromDt_A = (EZDCDateItem)newItem("effFromDt_A");
		effThruDt_A = (EZDCDateItem)newItem("effThruDt_A");
		abcAnlsClsNm_A = (EZDCStringItem)newItem("abcAnlsClsNm_A");
	}

	/**
	 * get the type of array which is stored
	 * @return NLCL1030_ACMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NLCL1030_ACMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxLinkAncr_NM", "xxLinkAncr_NM", "NM", null, TYPE_HANKAKUEISU, "30", null},
	{"abcAsgNm_A", "abcAsgNm_A", "A", null, TYPE_HANKAKUEISU, "50", null},
	{"abcAsgPk_A", "abcAsgPk_A", "A", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"abcAsgDescTxt_A", "abcAsgDescTxt_A", "A", null, TYPE_HANKAKUEISU, "150", null},
	{"rtlWhCatgDescTxt_A", "rtlWhCatgDescTxt_A", "A", null, TYPE_HANKAKUEISU, "50", null},
	{"rtlWhCdSrchTxt_AW", "rtlWhCdSrchTxt_AW", "AW", null, TYPE_HANKAKUEISU, "1000", null},
	{"rtlWhNmSrchTxt_AW", "rtlWhNmSrchTxt_AW", "AW", null, TYPE_HANKAKUEISU, "1000", null},
	{"rtlWhCdSrchTxt_AS", "rtlWhCdSrchTxt_AS", "AS", null, TYPE_HANKAKUEISU, "1000", null},
	{"abcAnlsCritNm_A", "abcAnlsCritNm_A", "A", null, TYPE_HANKAKUEISU, "50", null},
	{"effFromDt_A", "effFromDt_A", "A", null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt_A", "effThruDt_A", "A", null, TYPE_NENTSUKIHI, "8", null},
	{"abcAnlsClsNm_A", "abcAnlsClsNm_A", "A", null, TYPE_HANKAKUEISU, "40", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_LINK_ANCR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxLinkAncr_NM
        {"ABC_ASG_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//abcAsgNm_A
        {"ABC_ASG_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//abcAsgPk_A
        {"ABC_ASG_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//abcAsgDescTxt_A
        {"RTL_WH_CATG_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlWhCatgDescTxt_A
        {"RTL_WH_CD_SRCH_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlWhCdSrchTxt_AW
        {"RTL_WH_NM_SRCH_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlWhNmSrchTxt_AW
        {"RTL_WH_CD_SRCH_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlWhCdSrchTxt_AS
        {"ABC_ANLS_CRIT_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//abcAnlsCritNm_A
        {"EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effFromDt_A
        {"EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effThruDt_A
        {"ABC_ANLS_CLS_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//abcAnlsClsNm_A
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

