//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20161129191315000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSAL0950CMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NSAL0950;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL0950 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL0950CMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** GLBL_CMPY_CD_S*/
	public final EZDCStringItem              glblCmpyCd_S;

    /** SLS_DT_S*/
	public final EZDCDateItem              slsDt_S;

    /** XX_FILE_DATA_D*/
	public final EZDCMimeSourceItem              xxFileData_D;

    /** DS_CONTR_VLD_CATG_CD_SS*/
	public final EZDCStringItem              dsContrVldCatgCd_SS;

    /** DS_CONTR_VLD_CATG_CD_SC*/
	public final EZDCStringItemArray              dsContrVldCatgCd_SC;

    /** DS_CONTR_VLD_CATG_DESC_TXT_SC*/
	public final EZDCStringItemArray              dsContrVldCatgDescTxt_SC;

    /** DS_CONTR_VLD_NM_S*/
	public final EZDCStringItem              dsContrVldNm_S;

    /** DS_CONTR_VLD_DESC_TXT_S*/
	public final EZDCStringItem              dsContrVldDescTxt_S;

    /** VLD_LVL_CONTR_FLG_S*/
	public final EZDCStringItem              vldLvlContrFlg_S;

    /** VLD_LVL_MACH_FLG_S*/
	public final EZDCStringItem              vldLvlMachFlg_S;

    /** EFF_FROM_DT_S*/
	public final EZDCDateItem              effFromDt_S;

    /** EFF_TO_DT_S*/
	public final EZDCDateItem              effToDt_S;

    /** VLD_CMPT_TXT_S*/
	public final EZDCStringItem              vldCmptTxt_S;

    /** PRIM_VLD_FLG_S*/
	public final EZDCStringItem              primVldFlg_S;

    /** OVRD_VLD_RSLT_AVAL_FLG_S*/
	public final EZDCStringItem              ovrdVldRsltAvalFlg_S;

    /** VLD_REG_FLG_S*/
	public final EZDCStringItem              vldRegFlg_S;

    /** VLD_FLEET_FLG_S*/
	public final EZDCStringItem              vldFleetFlg_S;

    /** VLD_AGGR_FLG_S*/
	public final EZDCStringItem              vldAggrFlg_S;

    /** VLD_WTY_FLG_S*/
	public final EZDCStringItem              vldWtyFlg_S;

    /** XX_RADIO_BTN_A*/
	public final EZDCBigDecimalItem              xxRadioBtn_A;

    /** A*/
	public final business.blap.NSAL0950.NSAL0950_ACMsgArray              A;

    /** GLBL_CMPY_CD_D*/
	public final EZDCStringItem              glblCmpyCd_D;

    /** DS_CONTR_VLD_PK_D*/
	public final EZDCBigDecimalItem              dsContrVldPk_D;

    /** DS_CONTR_VLD_CATG_CD_DS*/
	public final EZDCStringItem              dsContrVldCatgCd_DS;

    /** DS_CONTR_VLD_NM_D*/
	public final EZDCStringItem              dsContrVldNm_D;

    /** DS_CONTR_VLD_DESC_TXT_D*/
	public final EZDCStringItem              dsContrVldDescTxt_D;

    /** VLD_LVL_CONTR_FLG_D*/
	public final EZDCStringItem              vldLvlContrFlg_D;

    /** VLD_LVL_MACH_FLG_D*/
	public final EZDCStringItem              vldLvlMachFlg_D;

    /** EFF_FROM_DT_D*/
	public final EZDCDateItem              effFromDt_D;

    /** EFF_TO_DT_D*/
	public final EZDCDateItem              effToDt_D;

    /** VLD_CMPT_TXT_D*/
	public final EZDCStringItem              vldCmptTxt_D;

    /** PRIM_VLD_FLG_D*/
	public final EZDCStringItem              primVldFlg_D;

    /** OVRD_VLD_RSLT_AVAL_FLG_D*/
	public final EZDCStringItem              ovrdVldRsltAvalFlg_D;

    /** VLD_REG_FLG_D*/
	public final EZDCStringItem              vldRegFlg_D;

    /** VLD_FLEET_FLG_D*/
	public final EZDCStringItem              vldFleetFlg_D;

    /** VLD_AGGR_FLG_D*/
	public final EZDCStringItem              vldAggrFlg_D;

    /** VLD_WTY_FLG_D*/
	public final EZDCStringItem              vldWtyFlg_D;


	/**
	 * NSAL0950CMsg is constructor.
	 * The initialization when the instance of NSAL0950CMsg is generated.
	 */
	public NSAL0950CMsg() {
		this(false, -1);
	}

	/**
	 * NSAL0950CMsg is constructor.
	 * The initialization when the instance of NSAL0950CMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL0950CMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		glblCmpyCd_S = (EZDCStringItem)newItem("glblCmpyCd_S");
		slsDt_S = (EZDCDateItem)newItem("slsDt_S");
		xxFileData_D = (EZDCMimeSourceItem)newItem("xxFileData_D");
		dsContrVldCatgCd_SS = (EZDCStringItem)newItem("dsContrVldCatgCd_SS");
		dsContrVldCatgCd_SC = (EZDCStringItemArray)newItemArray("dsContrVldCatgCd_SC");
		dsContrVldCatgDescTxt_SC = (EZDCStringItemArray)newItemArray("dsContrVldCatgDescTxt_SC");
		dsContrVldNm_S = (EZDCStringItem)newItem("dsContrVldNm_S");
		dsContrVldDescTxt_S = (EZDCStringItem)newItem("dsContrVldDescTxt_S");
		vldLvlContrFlg_S = (EZDCStringItem)newItem("vldLvlContrFlg_S");
		vldLvlMachFlg_S = (EZDCStringItem)newItem("vldLvlMachFlg_S");
		effFromDt_S = (EZDCDateItem)newItem("effFromDt_S");
		effToDt_S = (EZDCDateItem)newItem("effToDt_S");
		vldCmptTxt_S = (EZDCStringItem)newItem("vldCmptTxt_S");
		primVldFlg_S = (EZDCStringItem)newItem("primVldFlg_S");
		ovrdVldRsltAvalFlg_S = (EZDCStringItem)newItem("ovrdVldRsltAvalFlg_S");
		vldRegFlg_S = (EZDCStringItem)newItem("vldRegFlg_S");
		vldFleetFlg_S = (EZDCStringItem)newItem("vldFleetFlg_S");
		vldAggrFlg_S = (EZDCStringItem)newItem("vldAggrFlg_S");
		vldWtyFlg_S = (EZDCStringItem)newItem("vldWtyFlg_S");
		xxRadioBtn_A = (EZDCBigDecimalItem)newItem("xxRadioBtn_A");
		A = (business.blap.NSAL0950.NSAL0950_ACMsgArray)newMsgArray("A");
		glblCmpyCd_D = (EZDCStringItem)newItem("glblCmpyCd_D");
		dsContrVldPk_D = (EZDCBigDecimalItem)newItem("dsContrVldPk_D");
		dsContrVldCatgCd_DS = (EZDCStringItem)newItem("dsContrVldCatgCd_DS");
		dsContrVldNm_D = (EZDCStringItem)newItem("dsContrVldNm_D");
		dsContrVldDescTxt_D = (EZDCStringItem)newItem("dsContrVldDescTxt_D");
		vldLvlContrFlg_D = (EZDCStringItem)newItem("vldLvlContrFlg_D");
		vldLvlMachFlg_D = (EZDCStringItem)newItem("vldLvlMachFlg_D");
		effFromDt_D = (EZDCDateItem)newItem("effFromDt_D");
		effToDt_D = (EZDCDateItem)newItem("effToDt_D");
		vldCmptTxt_D = (EZDCStringItem)newItem("vldCmptTxt_D");
		primVldFlg_D = (EZDCStringItem)newItem("primVldFlg_D");
		ovrdVldRsltAvalFlg_D = (EZDCStringItem)newItem("ovrdVldRsltAvalFlg_D");
		vldRegFlg_D = (EZDCStringItem)newItem("vldRegFlg_D");
		vldFleetFlg_D = (EZDCStringItem)newItem("vldFleetFlg_D");
		vldAggrFlg_D = (EZDCStringItem)newItem("vldAggrFlg_D");
		vldWtyFlg_D = (EZDCStringItem)newItem("vldWtyFlg_D");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL0950CMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL0950CMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"glblCmpyCd_S", "glblCmpyCd_S", "S", null, TYPE_HANKAKUEISU, "4", null},
	{"slsDt_S", "slsDt_S", "S", null, TYPE_NENTSUKIHI, "8", null},
	{"xxFileData_D", "xxFileData_D", "D", null, TYPE_UPLOAD, null, null},
	{"dsContrVldCatgCd_SS", "dsContrVldCatgCd_SS", "SS", null, TYPE_HANKAKUEISU, "2", null},
	{"dsContrVldCatgCd_SC", "dsContrVldCatgCd_SC", "SC", "99", TYPE_HANKAKUEISU, "2", null},
	{"dsContrVldCatgDescTxt_SC", "dsContrVldCatgDescTxt_SC", "SC", "99", TYPE_HANKAKUEISU, "50", null},
	{"dsContrVldNm_S", "dsContrVldNm_S", "S", null, TYPE_HANKAKUEISU, "60", null},
	{"dsContrVldDescTxt_S", "dsContrVldDescTxt_S", "S", null, TYPE_HANKAKUEISU, "120", null},
	{"vldLvlContrFlg_S", "vldLvlContrFlg_S", "S", null, TYPE_HANKAKUEISU, "1", null},
	{"vldLvlMachFlg_S", "vldLvlMachFlg_S", "S", null, TYPE_HANKAKUEISU, "1", null},
	{"effFromDt_S", "effFromDt_S", "S", null, TYPE_NENTSUKIHI, "8", null},
	{"effToDt_S", "effToDt_S", "S", null, TYPE_NENTSUKIHI, "8", null},
	{"vldCmptTxt_S", "vldCmptTxt_S", "S", null, TYPE_HANKAKUEISU, "100", null},
	{"primVldFlg_S", "primVldFlg_S", "S", null, TYPE_HANKAKUEISU, "1", null},
	{"ovrdVldRsltAvalFlg_S", "ovrdVldRsltAvalFlg_S", "S", null, TYPE_HANKAKUEISU, "1", null},
	{"vldRegFlg_S", "vldRegFlg_S", "S", null, TYPE_HANKAKUEISU, "1", null},
	{"vldFleetFlg_S", "vldFleetFlg_S", "S", null, TYPE_HANKAKUEISU, "1", null},
	{"vldAggrFlg_S", "vldAggrFlg_S", "S", null, TYPE_HANKAKUEISU, "1", null},
	{"vldWtyFlg_S", "vldWtyFlg_S", "S", null, TYPE_HANKAKUEISU, "1", null},
	{"xxRadioBtn_A", "xxRadioBtn_A", "A", null, TYPE_SEISU_SYOSU, "3", "0"},
	{"A", "A", null, "200", "business.blap.NSAL0950.NSAL0950_ACMsgArray", null, null},
	
	{"glblCmpyCd_D", "glblCmpyCd_D", "D", null, TYPE_HANKAKUEISU, "4", null},
	{"dsContrVldPk_D", "dsContrVldPk_D", "D", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrVldCatgCd_DS", "dsContrVldCatgCd_DS", "DS", null, TYPE_HANKAKUEISU, "2", null},
	{"dsContrVldNm_D", "dsContrVldNm_D", "D", null, TYPE_HANKAKUEISU, "60", null},
	{"dsContrVldDescTxt_D", "dsContrVldDescTxt_D", "D", null, TYPE_HANKAKUEISU, "120", null},
	{"vldLvlContrFlg_D", "vldLvlContrFlg_D", "D", null, TYPE_HANKAKUEISU, "1", null},
	{"vldLvlMachFlg_D", "vldLvlMachFlg_D", "D", null, TYPE_HANKAKUEISU, "1", null},
	{"effFromDt_D", "effFromDt_D", "D", null, TYPE_NENTSUKIHI, "8", null},
	{"effToDt_D", "effToDt_D", "D", null, TYPE_NENTSUKIHI, "8", null},
	{"vldCmptTxt_D", "vldCmptTxt_D", "D", null, TYPE_HANKAKUEISU, "100", null},
	{"primVldFlg_D", "primVldFlg_D", "D", null, TYPE_HANKAKUEISU, "1", null},
	{"ovrdVldRsltAvalFlg_D", "ovrdVldRsltAvalFlg_D", "D", null, TYPE_HANKAKUEISU, "1", null},
	{"vldRegFlg_D", "vldRegFlg_D", "D", null, TYPE_HANKAKUEISU, "1", null},
	{"vldFleetFlg_D", "vldFleetFlg_D", "D", null, TYPE_HANKAKUEISU, "1", null},
	{"vldAggrFlg_D", "vldAggrFlg_D", "D", null, TYPE_HANKAKUEISU, "1", null},
	{"vldWtyFlg_D", "vldWtyFlg_D", "D", null, TYPE_HANKAKUEISU, "1", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"GLBL_CMPY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//glblCmpyCd_S
        {"SLS_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//slsDt_S
        {"XX_FILE_DATA",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxFileData_D
        {"DS_CONTR_VLD_CATG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrVldCatgCd_SS
        {"DS_CONTR_VLD_CATG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrVldCatgCd_SC
        {"DS_CONTR_VLD_CATG_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrVldCatgDescTxt_SC
        {"DS_CONTR_VLD_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrVldNm_S
        {"DS_CONTR_VLD_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrVldDescTxt_S
        {"VLD_LVL_CONTR_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//vldLvlContrFlg_S
        {"VLD_LVL_MACH_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//vldLvlMachFlg_S
        {"EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effFromDt_S
        {"EFF_TO_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effToDt_S
        {"VLD_CMPT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//vldCmptTxt_S
        {"PRIM_VLD_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//primVldFlg_S
        {"OVRD_VLD_RSLT_AVAL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ovrdVldRsltAvalFlg_S
        {"VLD_REG_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//vldRegFlg_S
        {"VLD_FLEET_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//vldFleetFlg_S
        {"VLD_AGGR_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//vldAggrFlg_S
        {"VLD_WTY_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//vldWtyFlg_S
        {"XX_RADIO_BTN",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRadioBtn_A
		null,	//A
        {"GLBL_CMPY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//glblCmpyCd_D
        {"DS_CONTR_VLD_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrVldPk_D
        {"DS_CONTR_VLD_CATG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrVldCatgCd_DS
        {"DS_CONTR_VLD_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrVldNm_D
        {"DS_CONTR_VLD_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrVldDescTxt_D
        {"VLD_LVL_CONTR_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//vldLvlContrFlg_D
        {"VLD_LVL_MACH_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//vldLvlMachFlg_D
        {"EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effFromDt_D
        {"EFF_TO_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effToDt_D
        {"VLD_CMPT_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//vldCmptTxt_D
        {"PRIM_VLD_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//primVldFlg_D
        {"OVRD_VLD_RSLT_AVAL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ovrdVldRsltAvalFlg_D
        {"VLD_REG_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//vldRegFlg_D
        {"VLD_FLEET_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//vldFleetFlg_D
        {"VLD_AGGR_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//vldAggrFlg_D
        {"VLD_WTY_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//vldWtyFlg_D
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

