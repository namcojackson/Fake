//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20160119191435000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NLBL3000_SCMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NLBL3000;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NLBL3000 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NLBL3000_SCMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_HDR_NUM*/
	public final EZDCStringItem              xxHdrNum;

    /** XX_DPLY_TRX_NUM_TXT*/
	public final EZDCStringItem              xxDplyTrxNumTxt;

    /** MDSE_CD*/
	public final EZDCStringItem              mdseCd;

    /** SER_NUM*/
	public final EZDCStringItem              serNum;

    /** XX_EDT_MODE_FLG*/
	public final EZDCStringItem              xxEdtModeFlg;

    /** XX_TRX_REF_PK*/
	public final EZDCBigDecimalItem              xxTrxRefPk;

    /** XX_RQST_TP_CD*/
	public final EZDCStringItem              xxRqstTpCd;

    /** MDSE_CD_S1*/
	public final EZDCStringItem              mdseCd_S1;

    /** SER_NUM_S1*/
	public final EZDCStringItem              serNum_S1;

    /** RTL_SWH_CD*/
	public final EZDCStringItem              rtlSwhCd;

    /** INVTY_LOC_CD*/
	public final EZDCStringItem              invtyLocCd;

    /** SVC_CONFIG_MSTR_PK*/
	public final EZDCBigDecimalItem              svcConfigMstrPk;

    /** SER_NUM_TAKE_FLG*/
	public final EZDCStringItem              serNumTakeFlg;

    /** SVC_MACH_MSTR_PK*/
	public final EZDCBigDecimalItem              svcMachMstrPk;

    /** CUR_LOC_NUM*/
	public final EZDCStringItem              curLocNum;

    /** INSTL_BASE_CTRL_FLG*/
	public final EZDCStringItem              instlBaseCtrlFlg;


	/**
	 * NLBL3000_SCMsg is constructor.
	 * The initialization when the instance of NLBL3000_SCMsg is generated.
	 */
	public NLBL3000_SCMsg() {
		this(false, -1);
	}

	/**
	 * NLBL3000_SCMsg is constructor.
	 * The initialization when the instance of NLBL3000_SCMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NLBL3000_SCMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxHdrNum = (EZDCStringItem)newItem("xxHdrNum");
		xxDplyTrxNumTxt = (EZDCStringItem)newItem("xxDplyTrxNumTxt");
		mdseCd = (EZDCStringItem)newItem("mdseCd");
		serNum = (EZDCStringItem)newItem("serNum");
		xxEdtModeFlg = (EZDCStringItem)newItem("xxEdtModeFlg");
		xxTrxRefPk = (EZDCBigDecimalItem)newItem("xxTrxRefPk");
		xxRqstTpCd = (EZDCStringItem)newItem("xxRqstTpCd");
		mdseCd_S1 = (EZDCStringItem)newItem("mdseCd_S1");
		serNum_S1 = (EZDCStringItem)newItem("serNum_S1");
		rtlSwhCd = (EZDCStringItem)newItem("rtlSwhCd");
		invtyLocCd = (EZDCStringItem)newItem("invtyLocCd");
		svcConfigMstrPk = (EZDCBigDecimalItem)newItem("svcConfigMstrPk");
		serNumTakeFlg = (EZDCStringItem)newItem("serNumTakeFlg");
		svcMachMstrPk = (EZDCBigDecimalItem)newItem("svcMachMstrPk");
		curLocNum = (EZDCStringItem)newItem("curLocNum");
		instlBaseCtrlFlg = (EZDCStringItem)newItem("instlBaseCtrlFlg");
	}

	/**
	 * get the type of array which is stored
	 * @return NLBL3000_SCMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NLBL3000_SCMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxHdrNum", "xxHdrNum", null, null, TYPE_HANKAKUEISU, "8", null},
	{"xxDplyTrxNumTxt", "xxDplyTrxNumTxt", null, null, TYPE_HANKAKUEISU, "15", null},
	{"mdseCd", "mdseCd", null, null, TYPE_HANKAKUEISU, "16", null},
	{"serNum", "serNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"xxEdtModeFlg", "xxEdtModeFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"xxTrxRefPk", "xxTrxRefPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"xxRqstTpCd", "xxRqstTpCd", null, null, TYPE_HANKAKUEISU, "1", null},
	{"mdseCd_S1", "mdseCd_S1", "S1", null, TYPE_HANKAKUEISU, "16", null},
	{"serNum_S1", "serNum_S1", "S1", null, TYPE_HANKAKUEISU, "30", null},
	{"rtlSwhCd", "rtlSwhCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"invtyLocCd", "invtyLocCd", null, null, TYPE_HANKAKUEISU, "20", null},
	{"svcConfigMstrPk", "svcConfigMstrPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"serNumTakeFlg", "serNumTakeFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"svcMachMstrPk", "svcMachMstrPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"curLocNum", "curLocNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"instlBaseCtrlFlg", "instlBaseCtrlFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_HDR_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxHdrNum
        {"XX_DPLY_TRX_NUM_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDplyTrxNumTxt
        {"MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd
        {"SER_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNum
        {"XX_EDT_MODE_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxEdtModeFlg
        {"XX_TRX_REF_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxTrxRefPk
        {"XX_RQST_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRqstTpCd
        {"MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd_S1
        {"SER_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNum_S1
        {"RTL_SWH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlSwhCd
        {"INVTY_LOC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invtyLocCd
        {"SVC_CONFIG_MSTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcConfigMstrPk
        {"SER_NUM_TAKE_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNumTakeFlg
        {"SVC_MACH_MSTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachMstrPk
        {"CUR_LOC_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//curLocNum
        {"INSTL_BASE_CTRL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//instlBaseCtrlFlg
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

