//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20160318145729000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NWAL2030_WBMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NWAL2030;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NWAL2030 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NWAL2030_WBMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** ORD_PROC_NODE_CD_W*/
	public final EZDBStringItem              ordProcNodeCd_W;

    /** ORD_PROC_NODE_DESC_TXT_W*/
	public final EZDBStringItem              ordProcNodeDescTxt_W;

    /** CHK_PNT_ORD_VLD_FLG_W*/
	public final EZDBStringItem              chkPntOrdVldFlg_W;

    /** CHK_PNT_SOFT_ALLOC_FLG_W*/
	public final EZDBStringItem              chkPntSoftAllocFlg_W;

    /** CHK_PNT_SHPG_VLD_FLG_W*/
	public final EZDBStringItem              chkPntShpgVldFlg_W;

    /** CHK_PNT_SO_CANC_FLG_W*/
	public final EZDBStringItem              chkPntSoCancFlg_W;

    /** CHK_PNT_CR_CHK_FLG_W*/
	public final EZDBStringItem              chkPntCrChkFlg_W;

    /** REL_PNT_SOFT_ALLOC_FLG_W*/
	public final EZDBStringItem              relPntSoftAllocFlg_W;

    /** REL_PNT_HARD_ALLOC_FLG_W*/
	public final EZDBStringItem              relPntHardAllocFlg_W;

    /** REL_PNT_CR_CHK_FLG_W*/
	public final EZDBStringItem              relPntCrChkFlg_W;

    /** REL_PNT_SO_CRAT_FLG_W*/
	public final EZDBStringItem              relPntSoCratFlg_W;

    /** REL_PNT_SO_PRINT_FLG_W*/
	public final EZDBStringItem              relPntSoPrintFlg_W;

    /** REL_PNT_SHPG_FLG_W*/
	public final EZDBStringItem              relPntShpgFlg_W;

    /** REL_PNT_REV_FLG_W*/
	public final EZDBStringItem              relPntRevFlg_W;


	/**
	 * NWAL2030_WBMsg is constructor.
	 * The initialization when the instance of NWAL2030_WBMsg is generated.
	 */
	public NWAL2030_WBMsg() {
		this(false, -1);
	}

	/**
	 * NWAL2030_WBMsg is constructor.
	 * The initialization when the instance of NWAL2030_WBMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NWAL2030_WBMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		ordProcNodeCd_W = (EZDBStringItem)newItem("ordProcNodeCd_W");
		ordProcNodeDescTxt_W = (EZDBStringItem)newItem("ordProcNodeDescTxt_W");
		chkPntOrdVldFlg_W = (EZDBStringItem)newItem("chkPntOrdVldFlg_W");
		chkPntSoftAllocFlg_W = (EZDBStringItem)newItem("chkPntSoftAllocFlg_W");
		chkPntShpgVldFlg_W = (EZDBStringItem)newItem("chkPntShpgVldFlg_W");
		chkPntSoCancFlg_W = (EZDBStringItem)newItem("chkPntSoCancFlg_W");
		chkPntCrChkFlg_W = (EZDBStringItem)newItem("chkPntCrChkFlg_W");
		relPntSoftAllocFlg_W = (EZDBStringItem)newItem("relPntSoftAllocFlg_W");
		relPntHardAllocFlg_W = (EZDBStringItem)newItem("relPntHardAllocFlg_W");
		relPntCrChkFlg_W = (EZDBStringItem)newItem("relPntCrChkFlg_W");
		relPntSoCratFlg_W = (EZDBStringItem)newItem("relPntSoCratFlg_W");
		relPntSoPrintFlg_W = (EZDBStringItem)newItem("relPntSoPrintFlg_W");
		relPntShpgFlg_W = (EZDBStringItem)newItem("relPntShpgFlg_W");
		relPntRevFlg_W = (EZDBStringItem)newItem("relPntRevFlg_W");
	}

	/**
	 * get the type of array which is stored
	 * @return NWAL2030_WBMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NWAL2030_WBMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"ordProcNodeCd_W", "ordProcNodeCd_W", "W", null, TYPE_HANKAKUEISU, "2", null},
	{"ordProcNodeDescTxt_W", "ordProcNodeDescTxt_W", "W", null, TYPE_HANKAKUEISU, "50", null},
	{"chkPntOrdVldFlg_W", "chkPntOrdVldFlg_W", "W", null, TYPE_HANKAKUEISU, "1", null},
	{"chkPntSoftAllocFlg_W", "chkPntSoftAllocFlg_W", "W", null, TYPE_HANKAKUEISU, "1", null},
	{"chkPntShpgVldFlg_W", "chkPntShpgVldFlg_W", "W", null, TYPE_HANKAKUEISU, "1", null},
	{"chkPntSoCancFlg_W", "chkPntSoCancFlg_W", "W", null, TYPE_HANKAKUEISU, "1", null},
	{"chkPntCrChkFlg_W", "chkPntCrChkFlg_W", "W", null, TYPE_HANKAKUEISU, "1", null},
	{"relPntSoftAllocFlg_W", "relPntSoftAllocFlg_W", "W", null, TYPE_HANKAKUEISU, "1", null},
	{"relPntHardAllocFlg_W", "relPntHardAllocFlg_W", "W", null, TYPE_HANKAKUEISU, "1", null},
	{"relPntCrChkFlg_W", "relPntCrChkFlg_W", "W", null, TYPE_HANKAKUEISU, "1", null},
	{"relPntSoCratFlg_W", "relPntSoCratFlg_W", "W", null, TYPE_HANKAKUEISU, "1", null},
	{"relPntSoPrintFlg_W", "relPntSoPrintFlg_W", "W", null, TYPE_HANKAKUEISU, "1", null},
	{"relPntShpgFlg_W", "relPntShpgFlg_W", "W", null, TYPE_HANKAKUEISU, "1", null},
	{"relPntRevFlg_W", "relPntRevFlg_W", "W", null, TYPE_HANKAKUEISU, "1", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"ORD_PROC_NODE_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordProcNodeCd_W
        {"ORD_PROC_NODE_DESC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordProcNodeDescTxt_W
        {"CHK_PNT_ORD_VLD_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//chkPntOrdVldFlg_W
        {"CHK_PNT_SOFT_ALLOC_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//chkPntSoftAllocFlg_W
        {"CHK_PNT_SHPG_VLD_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//chkPntShpgVldFlg_W
        {"CHK_PNT_SO_CANC_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//chkPntSoCancFlg_W
        {"CHK_PNT_CR_CHK_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//chkPntCrChkFlg_W
        {"REL_PNT_SOFT_ALLOC_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//relPntSoftAllocFlg_W
        {"REL_PNT_HARD_ALLOC_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//relPntHardAllocFlg_W
        {"REL_PNT_CR_CHK_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//relPntCrChkFlg_W
        {"REL_PNT_SO_CRAT_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//relPntSoCratFlg_W
        {"REL_PNT_SO_PRINT_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//relPntSoPrintFlg_W
        {"REL_PNT_SHPG_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//relPntShpgFlg_W
        {"REL_PNT_REV_FLG",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//relPntRevFlg_W
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

