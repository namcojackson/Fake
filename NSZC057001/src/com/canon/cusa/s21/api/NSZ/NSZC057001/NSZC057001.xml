<?xml version="1.0" encoding="UTF-8"?>
<sqlMap namespace="NSZC057001">
    <typeAlias alias="DS_CONTR_DTLTMsg" type="business.db.DS_CONTR_DTLTMsg"/>
    <statement id="getDsContrDtl" parameterClass="Map" resultMap="result.getDsContrDtl">
        SELECT
             DCD.GLBL_CMPY_CD                GLBL_CMPY_CD
            ,DCD.DS_CONTR_DTL_PK             DS_CONTR_DTL_PK
            ,DCD.DS_CONTR_PK                 DS_CONTR_PK
            ,DCD.DS_CONTR_DTL_TP_CD          DS_CONTR_DTL_TP_CD
            ,DCD.DS_CONTR_DTL_STS_CD         DS_CONTR_DTL_STS_CD
            ,DCD.CPO_ORD_NUM                 CPO_ORD_NUM
            ,DCD.CPO_DTL_LINE_NUM            CPO_DTL_LINE_NUM
            ,DCD.CPO_DTL_LINE_SUB_NUM        CPO_DTL_LINE_SUB_NUM
            ,DCD.DS_ORD_POSN_NUM             DS_ORD_POSN_NUM
            ,DCD.DS_ORD_TP_CD                DS_ORD_TP_CD
            ,DCD.DS_ORD_RSN_CD               DS_ORD_RSN_CD
            ,DCD.SVC_CONFIG_MSTR_PK          SVC_CONFIG_MSTR_PK
            ,DCD.SVC_MACH_MSTR_PK            SVC_MACH_MSTR_PK
            ,DCD.PRNT_DS_CONTR_DTL_PK        PRNT_DS_CONTR_DTL_PK
            ,DCD.CONTR_PRC_CD                CONTR_PRC_CD
            ,DCD.CONTR_CLO_DAY               CONTR_CLO_DAY
            ,DCD.BASE_BLLG_CYCLE_CD          BASE_BLLG_CYCLE_CD
            ,DCD.BASE_BLLG_TMG_CD            BASE_BLLG_TMG_CD
            ,DCD.CONTR_BLLG_DAY              CONTR_BLLG_DAY
            ,DCD.BASE_BLLG_NEXT_BLLG_DT      BASE_BLLG_NEXT_BLLG_DT
            ,DCD.BASE_BLLG_LAST_SCHD_DT      BASE_BLLG_LAST_SCHD_DT
            ,DCD.BASE_BLLG_LAST_BLLG_DT      BASE_BLLG_LAST_BLLG_DT
            ,DCD.BASE_INV_UP_TO_DT           BASE_INV_UP_TO_DT
            ,DCD.MTR_BLLG_CYCLE_CD           MTR_BLLG_CYCLE_CD
            ,DCD.MTR_BLLG_TMG_CD             MTR_BLLG_TMG_CD
            ,DCD.MTR_BLLG_NEXT_BLLG_DT       MTR_BLLG_NEXT_BLLG_DT
            ,DCD.MTR_BLLG_LAST_SCHD_DT       MTR_BLLG_LAST_SCHD_DT
            ,DCD.MTR_BLLG_LAST_BLLG_DT       MTR_BLLG_LAST_BLLG_DT
            ,DCD.MTR_INV_UP_TO_DT            MTR_INV_UP_TO_DT
            ,DCD.BR_CD                       BR_CD
            ,DCD.BASE_PRC_DEAL_AMT           BASE_PRC_DEAL_AMT
            ,DCD.BASE_PRC_FUNC_AMT           BASE_PRC_FUNC_AMT
            ,DCD.CONTR_EFF_FROM_DT           CONTR_EFF_FROM_DT
            ,DCD.CONTR_EFF_THRU_DT           CONTR_EFF_THRU_DT
            ,DCD.CONTR_CLO_DT                CONTR_CLO_DT
            ,DCD.SVC_WTY_TP_CD               SVC_WTY_TP_CD
            ,DCD.WTY_DAYS_AOT                WTY_DAYS_AOT
            ,DCD.SVC_COV_TP_CD               SVC_COV_TP_CD
            ,DCD.SVC_COV_TM_TP_CD            SVC_COV_TM_TP_CD
            ,DCD.RSP_TM_UP_MN_AOT            RSP_TM_UP_MN_AOT
            ,DCD.RSP_TM_DOWN_MN_AOT          RSP_TM_DOWN_MN_AOT
            ,DCD.SVC_LBOR_CHRG_TP_CD         SVC_LBOR_CHRG_TP_CD
            ,DCD.BASE_BILL_TO_CUST_CD        BASE_BILL_TO_CUST_CD
            ,DCD.USG_BILL_TO_CUST_CD         USG_BILL_TO_CUST_CD
            ,DCD.MTR_CLO_DAY                 MTR_CLO_DAY
            ,DCD.MTR_BLLG_DAY                MTR_BLLG_DAY
            ,DCD.TRMN_TOT_AMT                TRMN_TOT_AMT
            ,DCD.TRMN_OVRD_TOT_AMT           TRMN_OVRD_TOT_AMT
            ,DCD.SUPPR_CR_FLG                SUPPR_CR_FLG
            ,DCD.MTR_READ_METH_CD            MTR_READ_METH_CD
            ,DCD.CONTR_RNW_TOT_CNT           CONTR_RNW_TOT_CNT
            ,DCD.RNW_EFF_FROM_DT             RNW_EFF_FROM_DT
            ,DCD.CTAC_PSN_PK                 CTAC_PSN_PK
            ,DCD.BASE_PRC_TERM_DEAL_AMT_RATE BASE_PRC_TERM_DEAL_AMT_RATE
            ,DCD.BASE_PRC_TERM_FUNC_AMT_RATE BASE_PRC_TERM_FUNC_AMT_RATE
            ,DCD.MAX_CONTR_RNW_CNT           MAX_CONTR_RNW_CNT
            ,DCD.MAX_PRC_UP_RATIO            MAX_PRC_UP_RATIO
            ,DCD.QLTY_ASRN_HLD_FLG           QLTY_ASRN_HLD_FLG
            ,DCD.MTR_HLD_FLG                 MTR_HLD_FLG
            ,DCD.CONTR_HLD_FLG               CONTR_HLD_FLG
            ,DCD.BLLG_HLD_FLG                BLLG_HLD_FLG
            ,DCD.SVC_PGM_MDSE_CD             SVC_PGM_MDSE_CD
            ,DCD.PRC_MTR_PKG_PK              PRC_MTR_PKG_PK
            ,DCD.SHIP_TO_CUST_CD             SHIP_TO_CUST_CD
        FROM
             DS_CONTR_DTL       DCD
            ,SVC_MACH_MSTR      SMM
            ,DS_CONTR_DTL_STS_V DSV
        WHERE
                DCD.GLBL_CMPY_CD         = #glblCmpyCd#
            AND DCD.DS_CONTR_PK          = #dsContrPk#
            AND DCD.EZCANCELFLAG         = '0'
            AND DCD.GLBL_CMPY_CD         = SMM.GLBL_CMPY_CD(+)
            AND DCD.SVC_MACH_MSTR_PK     = SMM.SVC_MACH_MSTR_PK(+)
            AND SMM.EZCANCELFLAG(+)      = '0'
            AND DCD.GLBL_CMPY_CD         = DSV.GLBL_CMPY_CD
            AND DCD.DS_CONTR_DTL_PK      = DSV.DS_CONTR_DTL_PK
            <iterate property="dsContrCtrlStsCdList" var="dsContrCtrlStsCd[]" open="AND DSV.DS_CONTR_CTRL_STS_CD NOT IN (" close=")" conjunction=",">
                #dsContrCtrlStsCd[]#
            </iterate>
            AND DSV.EZCANCELFLAG         = '0'
    </statement>
    <resultMap id="result.getDsContrDtl" class="DS_CONTR_DTLTMsg">
        <result property="glblCmpyCd"             column="GLBL_CMPY_CD"                javaType="EZDTStringItem"     />
        <result property="dsContrDtlPk"           column="DS_CONTR_DTL_PK"             javaType="EZDTBigDecimalItem" />
        <result property="dsContrPk"              column="DS_CONTR_PK"                 javaType="EZDTBigDecimalItem" />
        <result property="dsContrDtlTpCd"         column="DS_CONTR_DTL_TP_CD"          javaType="EZDTStringItem"     />
        <result property="dsContrDtlStsCd"        column="DS_CONTR_DTL_STS_CD"         javaType="EZDTStringItem"     />
        <result property="cpoOrdNum"              column="CPO_ORD_NUM"                 javaType="EZDTStringItem"     />
        <result property="cpoDtlLineNum"          column="CPO_DTL_LINE_NUM"            javaType="EZDTStringItem"     />
        <result property="cpoDtlLineSubNum"       column="CPO_DTL_LINE_SUB_NUM"        javaType="EZDTStringItem"     />
        <result property="dsOrdPosnNum"           column="DS_ORD_POSN_NUM"             javaType="EZDTStringItem"     />
        <result property="dsOrdTpCd"              column="DS_ORD_TP_CD"                javaType="EZDTStringItem"     />
        <result property="dsOrdRsnCd"             column="DS_ORD_RSN_CD"               javaType="EZDTStringItem"     />
        <result property="svcConfigMstrPk"        column="SVC_CONFIG_MSTR_PK"          javaType="EZDTBigDecimalItem" />
        <result property="svcMachMstrPk"          column="SVC_MACH_MSTR_PK"            javaType="EZDTBigDecimalItem" />
        <result property="prntDsContrDtlPk"       column="PRNT_DS_CONTR_DTL_PK"        javaType="EZDTBigDecimalItem" />
        <result property="contrPrcCd"             column="CONTR_PRC_CD"                javaType="EZDTStringItem"     />
        <result property="contrCloDay"            column="CONTR_CLO_DAY"               javaType="EZDTStringItem"     />
        <result property="baseBllgCycleCd"        column="BASE_BLLG_CYCLE_CD"          javaType="EZDTStringItem"     />
        <result property="baseBllgTmgCd"          column="BASE_BLLG_TMG_CD"            javaType="EZDTStringItem"     />
        <result property="contrBllgDay"           column="CONTR_BLLG_DAY"              javaType="EZDTStringItem"     />
        <result property="baseBllgNextBllgDt"     column="BASE_BLLG_NEXT_BLLG_DT"      javaType="EZDTDateItem"       />
        <result property="baseBllgLastSchdDt"     column="BASE_BLLG_LAST_SCHD_DT"      javaType="EZDTDateItem"       />
        <result property="baseBllgLastBllgDt"     column="BASE_BLLG_LAST_BLLG_DT"      javaType="EZDTDateItem"       />
        <result property="baseInvUpToDt"          column="BASE_INV_UP_TO_DT"           javaType="EZDTDateItem"       />
        <result property="mtrBllgCycleCd"         column="MTR_BLLG_CYCLE_CD"           javaType="EZDTStringItem"     />
        <result property="mtrBllgTmgCd"           column="MTR_BLLG_TMG_CD"             javaType="EZDTStringItem"     />
        <result property="mtrBllgNextBllgDt"      column="MTR_BLLG_NEXT_BLLG_DT"       javaType="EZDTDateItem"       />
        <result property="mtrBllgLastSchdDt"      column="MTR_BLLG_LAST_SCHD_DT"       javaType="EZDTDateItem"       />
        <result property="mtrBllgLastBllgDt"      column="MTR_BLLG_LAST_BLLG_DT"       javaType="EZDTDateItem"       />
        <result property="mtrInvUpToDt"           column="MTR_INV_UP_TO_DT"            javaType="EZDTDateItem"       />
        <result property="brCd"                   column="BR_CD"                       javaType="EZDTStringItem"     />
        <result property="basePrcDealAmt"         column="BASE_PRC_DEAL_AMT"           javaType="EZDTBigDecimalItem" />
        <result property="basePrcFuncAmt"         column="BASE_PRC_FUNC_AMT"           javaType="EZDTBigDecimalItem" />
        <result property="contrEffFromDt"         column="CONTR_EFF_FROM_DT"           javaType="EZDTDateItem"       />
        <result property="contrEffThruDt"         column="CONTR_EFF_THRU_DT"           javaType="EZDTDateItem"       />
        <result property="contrCloDt"             column="CONTR_CLO_DT"                javaType="EZDTDateItem"       />
        <result property="svcWtyTpCd"             column="SVC_WTY_TP_CD"               javaType="EZDTStringItem"     />
        <result property="wtyDaysAot"             column="WTY_DAYS_AOT"                javaType="EZDTBigDecimalItem" />
        <result property="svcCovTpCd"             column="SVC_COV_TP_CD"               javaType="EZDTStringItem"     />
        <result property="svcCovTmTpCd"           column="SVC_COV_TM_TP_CD"            javaType="EZDTStringItem"     />
        <result property="rspTmUpMnAot"           column="RSP_TM_UP_MN_AOT"            javaType="EZDTBigDecimalItem" />
        <result property="rspTmDownMnAot"         column="RSP_TM_DOWN_MN_AOT"          javaType="EZDTBigDecimalItem" />
        <result property="svcLborChrgTpCd"        column="SVC_LBOR_CHRG_TP_CD"         javaType="EZDTStringItem"     />
        <result property="baseBillToCustCd"       column="BASE_BILL_TO_CUST_CD"        javaType="EZDTStringItem"     />
        <result property="usgBillToCustCd"        column="USG_BILL_TO_CUST_CD"         javaType="EZDTStringItem"     />
        <result property="mtrCloDay"              column="MTR_CLO_DAY"                 javaType="EZDTStringItem"     />
        <result property="mtrBllgDay"             column="MTR_BLLG_DAY"                javaType="EZDTStringItem"     />
        <result property="trmnTotAmt"             column="TRMN_TOT_AMT"                javaType="EZDTBigDecimalItem" />
        <result property="trmnOvrdTotAmt"         column="TRMN_OVRD_TOT_AMT"           javaType="EZDTBigDecimalItem" />
        <result property="supprCrFlg"             column="SUPPR_CR_FLG"                javaType="EZDTStringItem"     />
        <result property="mtrReadMethCd"          column="MTR_READ_METH_CD"            javaType="EZDTStringItem"     />
        <result property="contrRnwTotCnt"         column="CONTR_RNW_TOT_CNT"           javaType="EZDTBigDecimalItem" />
        <result property="rnwEffFromDt"           column="RNW_EFF_FROM_DT"             javaType="EZDTDateItem"       />
        <result property="ctacPsnPk"              column="CTAC_PSN_PK"                 javaType="EZDTBigDecimalItem" />
        <result property="basePrcTermDealAmtRate" column="BASE_PRC_TERM_DEAL_AMT_RATE" javaType="EZDTBigDecimalItem" />
        <result property="basePrcTermFuncAmtRate" column="BASE_PRC_TERM_FUNC_AMT_RATE" javaType="EZDTBigDecimalItem" />
        <result property="maxContrRnwCnt"         column="MAX_CONTR_RNW_CNT"           javaType="EZDTBigDecimalItem" />
        <result property="maxPrcUpRatio"          column="MAX_PRC_UP_RATIO"            javaType="EZDTBigDecimalItem" />
        <result property="qltyAsrnHldFlg"         column="QLTY_ASRN_HLD_FLG"           javaType="EZDTStringItem"     />
        <result property="mtrHldFlg"              column="MTR_HLD_FLG"                 javaType="EZDTStringItem"     />
        <result property="contrHldFlg"            column="CONTR_HLD_FLG"               javaType="EZDTStringItem"     />
        <result property="bllgHldFlg"             column="BLLG_HLD_FLG"                javaType="EZDTStringItem"     />
        <result property="svcPgmMdseCd"           column="SVC_PGM_MDSE_CD"             javaType="EZDTStringItem"     />
        <result property="prcMtrPkgPk"            column="PRC_MTR_PKG_PK"              javaType="EZDTBigDecimalItem" />
        <result property="shipToCustCd"           column="SHIP_TO_CUST_CD"             javaType="EZDTStringItem"     />
    </resultMap>

    <statement id="getDsContrVldInfo" parameterClass="Map" resultClass="Map">
        SELECT
             CVL.DS_CONTR_VLD_LIST_PK
            ,DCV.DS_CONTR_VLD_PK
            ,DCV.VLD_CMPT_TXT
            ,DCV.PRIM_VLD_FLG
            ,DCV.VLD_LVL_CONTR_FLG
            ,DCV.VLD_LVL_MACH_FLG
            ,CVR.VLD_SORT_NUM
            <!-- START 2018/03/15 K.Kojima [QC#22611,ADD] -->
            ,CVR.VLD_ACT_CD
            <!-- END 2018/03/15 K.Kojima [QC#22611,ADD] -->
        FROM
             DS_CONTR_VLD_LIST CVL
            ,DS_CONTR_VLD_RELN CVR
            ,DS_CONTR_VLD      DCV
        WHERE
                CVL.GLBL_CMPY_CD                = #glblCmpyCd#
            AND CVL.EFF_FROM_DT             &lt;= #slsDt#
            AND NVL(CVL.EFF_TO_DT, #endDt#) &gt;= #slsDt#
            AND CVL.EZCANCELFLAG                = '0'
            AND CVL.GLBL_CMPY_CD                = CVR.GLBL_CMPY_CD
            AND CVL.DS_CONTR_VLD_LIST_PK        = CVR.DS_CONTR_VLD_LIST_PK
            AND CVR.EZCANCELFLAG                = '0'
            AND CVR.GLBL_CMPY_CD                = DCV.GLBL_CMPY_CD
            AND CVR.DS_CONTR_VLD_PK             = DCV.DS_CONTR_VLD_PK
            <isNotNull property="vldRegFlg">
            AND DCV.VLD_REG_FLG                 = #vldRegFlg#
            </isNotNull>
            <isNotNull property="vldFleetFlg">
            AND DCV.VLD_FLEET_FLG               = #vldFleetFlg#
            </isNotNull>
            <isNotNull property="vldAggrFlg">
            AND DCV.VLD_AGGR_FLG                = #vldAggrFlg#
            </isNotNull>
            <isNotNull property="vldWtyFlg">
            AND DCV.VLD_WTY_FLG                 = #vldWtyFlg#
            </isNotNull>
            AND DCV.EFF_FROM_DT             &lt;= #slsDt#
            AND NVL(DCV.EFF_TO_DT, #endDt#) &gt;= #slsDt#
            AND DCV.EZCANCELFLAG                = '0'
        ORDER BY
             DCV.PRIM_VLD_FLG      DESC
            ,DCV.VLD_LVL_CONTR_FLG DESC
            ,DCV.VLD_LVL_MACH_FLG  DESC
            ,CVR.VLD_SORT_NUM
    </statement>

    <typeAlias alias="DS_CONTR_BLLG_SCHDTMsg" type="business.db.DS_CONTR_BLLG_SCHDTMsg"/>
    <statement id="getDsContrBllgSchd" parameterClass="Map" resultMap="result.getDsContrBllgSchd">
        SELECT
             CBS.GLBL_CMPY_CD               GLBL_CMPY_CD
            ,CBS.DS_CONTR_BLLG_SCHD_PK      DS_CONTR_BLLG_SCHD_PK
            ,CBS.DS_CONTR_DTL_PK            DS_CONTR_DTL_PK
            ,CBS.DS_CONTR_BLLG_SCHD_SMRY_PK DS_CONTR_BLLG_SCHD_SMRY_PK
            ,CBS.DS_CONTR_PRC_EFF_PK        DS_CONTR_PRC_EFF_PK
            ,CBS.DS_CONTR_PRC_EFF_SQ_NUM    DS_CONTR_PRC_EFF_SQ_NUM
            ,CBS.DS_CONTR_BLLG_SCHD_SQ_NUM  DS_CONTR_BLLG_SCHD_SQ_NUM
            ,CBS.DS_CONTR_BLLG_SCHD_LVL_NUM DS_CONTR_BLLG_SCHD_LVL_NUM
            ,CBS.BASE_CHRG_FLG              BASE_CHRG_FLG
            ,CBS.USG_CHRG_FLG               USG_CHRG_FLG
            ,CBS.SKIP_RECOV_TP_CD           SKIP_RECOV_TP_CD
            ,CBS.SVC_INV_NUM                SVC_INV_NUM
            ,CBS.INV_DT                     INV_DT
            ,CBS.NEXT_BLLG_DT               NEXT_BLLG_DT
            ,CBS.BLLG_SCHD_FROM_DT          BLLG_SCHD_FROM_DT
            ,CBS.BLLG_SCHD_THRU_DT          BLLG_SCHD_THRU_DT
            ,CBS.BLLG_CYCLE_CD              BLLG_CYCLE_CD
            ,CBS.BLLG_SCHD_PRRT_FLG         BLLG_SCHD_PRRT_FLG
            ,CBS.BASE_PRC_DEAL_AMT          BASE_PRC_DEAL_AMT
            ,CBS.BASE_PRC_FUNC_AMT          BASE_PRC_FUNC_AMT
            ,CBS.BASE_ACTL_PRC_DEAL_AMT     BASE_ACTL_PRC_DEAL_AMT
            ,CBS.BASE_ACTL_PRC_FUNC_AMT     BASE_ACTL_PRC_FUNC_AMT
            ,CBS.BASE_PRC_ADJ_DEAL_AMT      BASE_PRC_ADJ_DEAL_AMT
            ,CBS.BASE_PRC_ADJ_FUNC_AMT      BASE_PRC_ADJ_FUNC_AMT
            ,CBS.READ_MTR_CNT               READ_MTR_CNT
            ,CBS.BLLG_MTR_CNT               BLLG_MTR_CNT
            ,CBS.MTR_CHRG_DEAL_AMT          MTR_CHRG_DEAL_AMT
            ,CBS.MTR_CHRG_FUNC_AMT          MTR_CHRG_FUNC_AMT
            ,CBS.DS_CONTR_TRMN_FLG          DS_CONTR_TRMN_FLG
            ,CBS.CCY_CD                     CCY_CD
            ,CBS.BLLG_SCHD_TRX_SRC_TP_CD    BLLG_SCHD_TRX_SRC_TP_CD
            ,CBS.BLLG_STAGE_FLG             BLLG_STAGE_FLG
            ,CBS.INV_FLG                    INV_FLG
            ,CBS.INV_TP_CD                  INV_TP_CD
            ,CBS.DS_BLLG_SCHD_STS_CD        DS_BLLG_SCHD_STS_CD
            ,CBS.DS_CONTR_BLLG_MTR_PK       DS_CONTR_BLLG_MTR_PK
            ,CBS.BLLBL_FLG                  BLLBL_FLG
            ,CBS.RVS_SCHD_DT                RVS_SCHD_DT
            ,CBS.MTR_ENTRY_CPLT_FLG         MTR_ENTRY_CPLT_FLG
            ,CBS.SVC_PHYS_MTR_READ_GRP_SQ   SVC_PHYS_MTR_READ_GRP_SQ
            ,CBS.BLLG_CALC_FLG              BLLG_CALC_FLG
            ,CBS.DS_CONTR_DTL_TP_CD         DS_CONTR_DTL_TP_CD
            ,CBS.PRNT_DS_CONTR_BLLG_SCHD_PK PRNT_DS_CONTR_BLLG_SCHD_PK
            ,CBS.PRNT_DS_CONTR_DTL_PK       PRNT_DS_CONTR_DTL_PK
            ,CBS.DS_BLLG_SCHD_TP_CD         DS_BLLG_SCHD_TP_CD
            ,CBS.BLLG_PER_MTH_AOT           BLLG_PER_MTH_AOT
            ,CBS.SLS_TAX_RATE               SLS_TAX_RATE
            ,CBS.DEAL_TAX_AMT               DEAL_TAX_AMT
            ,CBS.FUNC_TAX_AMT               FUNC_TAX_AMT
            ,CBS.SVC_CR_REBIL_PK            SVC_CR_REBIL_PK
            ,CBS.SVC_CR_REBIL_DTL_PK        SVC_CR_REBIL_DTL_PK
            ,CBS.ORIG_DS_CONTR_BLLG_SCHD_PK ORIG_DS_CONTR_BLLG_SCHD_PK
        FROM
             DS_CONTR_BLLG_SCHD CBS
        WHERE
                CBS.GLBL_CMPY_CD                        = #glblCmpyCd#
            AND CBS.DS_CONTR_DTL_PK                     = #dsContrDtlPk#
            AND CBS.BLLG_SCHD_FROM_DT               &lt;= #slsDt#
            AND NVL(CBS.BLLG_SCHD_THRU_DT, #endDt#) &gt;= #slsDt#
            AND CBS.EZCANCELFLAG                        = '0'
    </statement>
    <resultMap id="result.getDsContrBllgSchd" class="DS_CONTR_BLLG_SCHDTMsg">
        <result property="glblCmpyCd"            column="GLBL_CMPY_CD"               javaType="EZDTStringItem"     />
        <result property="dsContrBllgSchdPk"     column="DS_CONTR_BLLG_SCHD_PK"      javaType="EZDTBigDecimalItem" />
        <result property="dsContrDtlPk"          column="DS_CONTR_DTL_PK"            javaType="EZDTBigDecimalItem" />
        <result property="dsContrBllgSchdSmryPk" column="DS_CONTR_BLLG_SCHD_SMRY_PK" javaType="EZDTBigDecimalItem" />
        <result property="dsContrPrcEffPk"       column="DS_CONTR_PRC_EFF_PK"        javaType="EZDTBigDecimalItem" />
        <result property="dsContrPrcEffSqNum"    column="DS_CONTR_PRC_EFF_SQ_NUM"    javaType="EZDTBigDecimalItem" />
        <result property="dsContrBllgSchdSqNum"  column="DS_CONTR_BLLG_SCHD_SQ_NUM"  javaType="EZDTStringItem"     />
        <result property="dsContrBllgSchdLvlNum" column="DS_CONTR_BLLG_SCHD_LVL_NUM" javaType="EZDTStringItem"     />
        <result property="baseChrgFlg"           column="BASE_CHRG_FLG"              javaType="EZDTStringItem"     />
        <result property="usgChrgFlg"            column="USG_CHRG_FLG"               javaType="EZDTStringItem"     />
        <result property="skipRecovTpCd"         column="SKIP_RECOV_TP_CD"           javaType="EZDTStringItem"     />
        <result property="svcInvNum"             column="SVC_INV_NUM"                javaType="EZDTStringItem"     />
        <result property="invDt"                 column="INV_DT"                     javaType="EZDTDateItem"       />
        <result property="nextBllgDt"            column="NEXT_BLLG_DT"               javaType="EZDTDateItem"       />
        <result property="bllgSchdFromDt"        column="BLLG_SCHD_FROM_DT"          javaType="EZDTDateItem"       />
        <result property="bllgSchdThruDt"        column="BLLG_SCHD_THRU_DT"          javaType="EZDTDateItem"       />
        <result property="bllgCycleCd"           column="BLLG_CYCLE_CD"              javaType="EZDTStringItem"     />
        <result property="bllgSchdPrrtFlg"       column="BLLG_SCHD_PRRT_FLG"         javaType="EZDTStringItem"     />
        <result property="basePrcDealAmt"        column="BASE_PRC_DEAL_AMT"          javaType="EZDTBigDecimalItem" />
        <result property="basePrcFuncAmt"        column="BASE_PRC_FUNC_AMT"          javaType="EZDTBigDecimalItem" />
        <result property="baseActlPrcDealAmt"    column="BASE_ACTL_PRC_DEAL_AMT"     javaType="EZDTBigDecimalItem" />
        <result property="baseActlPrcFuncAmt"    column="BASE_ACTL_PRC_FUNC_AMT"     javaType="EZDTBigDecimalItem" />
        <result property="basePrcAdjDealAmt"     column="BASE_PRC_ADJ_DEAL_AMT"      javaType="EZDTBigDecimalItem" />
        <result property="basePrcAdjFuncAmt"     column="BASE_PRC_ADJ_FUNC_AMT"      javaType="EZDTBigDecimalItem" />
        <result property="readMtrCnt"            column="READ_MTR_CNT"               javaType="EZDTBigDecimalItem" />
        <result property="bllgMtrCnt"            column="BLLG_MTR_CNT"               javaType="EZDTBigDecimalItem" />
        <result property="mtrChrgDealAmt"        column="MTR_CHRG_DEAL_AMT"          javaType="EZDTBigDecimalItem" />
        <result property="mtrChrgFuncAmt"        column="MTR_CHRG_FUNC_AMT"          javaType="EZDTBigDecimalItem" />
        <result property="dsContrTrmnFlg"        column="DS_CONTR_TRMN_FLG"          javaType="EZDTStringItem"     />
        <result property="ccyCd"                 column="CCY_CD"                     javaType="EZDTStringItem"     />
        <result property="bllgSchdTrxSrcTpCd"    column="BLLG_SCHD_TRX_SRC_TP_CD"    javaType="EZDTStringItem"     />
        <result property="bllgStageFlg"          column="BLLG_STAGE_FLG"             javaType="EZDTStringItem"     />
        <result property="invFlg"                column="INV_FLG"                    javaType="EZDTStringItem"     />
        <result property="invTpCd"               column="INV_TP_CD"                  javaType="EZDTStringItem"     />
        <result property="dsBllgSchdStsCd"       column="DS_BLLG_SCHD_STS_CD"        javaType="EZDTStringItem"     />
        <result property="dsContrBllgMtrPk"      column="DS_CONTR_BLLG_MTR_PK"       javaType="EZDTBigDecimalItem" />
        <result property="bllblFlg"              column="BLLBL_FLG"                  javaType="EZDTStringItem"     />
        <result property="rvsSchdDt"             column="RVS_SCHD_DT"                javaType="EZDTDateItem"       />
        <result property="mtrEntryCpltFlg"       column="MTR_ENTRY_CPLT_FLG"         javaType="EZDTStringItem"     />
        <result property="svcPhysMtrReadGrpSq"   column="SVC_PHYS_MTR_READ_GRP_SQ"   javaType="EZDTBigDecimalItem" />
        <result property="bllgCalcFlg"           column="BLLG_CALC_FLG"              javaType="EZDTStringItem"     />
        <result property="dsContrDtlTpCd"        column="DS_CONTR_DTL_TP_CD"         javaType="EZDTStringItem"     />
        <result property="prntDsContrBllgSchdPk" column="PRNT_DS_CONTR_BLLG_SCHD_PK" javaType="EZDTBigDecimalItem" />
        <result property="prntDsContrDtlPk"      column="PRNT_DS_CONTR_DTL_PK"       javaType="EZDTBigDecimalItem" />
        <result property="dsBllgSchdTpCd"        column="DS_BLLG_SCHD_TP_CD"         javaType="EZDTStringItem"     />
        <result property="bllgPerMthAot"         column="BLLG_PER_MTH_AOT"           javaType="EZDTBigDecimalItem" />
        <result property="slsTaxRate"            column="SLS_TAX_RATE"               javaType="EZDTBigDecimalItem" />
        <result property="dealTaxAmt"            column="DEAL_TAX_AMT"               javaType="EZDTBigDecimalItem" />
        <result property="funcTaxAmt"            column="FUNC_TAX_AMT"               javaType="EZDTBigDecimalItem" />
        <result property="svcCrRebilPk"          column="SVC_CR_REBIL_PK"            javaType="EZDTBigDecimalItem" />
        <result property="svcCrRebilDtlPk"       column="SVC_CR_REBIL_DTL_PK"        javaType="EZDTBigDecimalItem" />
        <result property="origDsContrBllgSchdPk" column="ORIG_DS_CONTR_BLLG_SCHD_PK" javaType="EZDTBigDecimalItem" />
    </resultMap>

    <statement id="getSerNum" parameterClass="Map" resultClass="String">
        SELECT
             SMM.SER_NUM
        FROM
             DS_CONTR_DTL       DCD
            ,SVC_MACH_MSTR      SMM
        WHERE
                DCD.GLBL_CMPY_CD         = #glblCmpyCd#
            AND DCD.DS_CONTR_DTL_PK      = #dsContrDtlPk#
            AND DCD.EZCANCELFLAG         = '0'
            AND DCD.GLBL_CMPY_CD         = SMM.GLBL_CMPY_CD
            AND DCD.SVC_MACH_MSTR_PK     = SMM.SVC_MACH_MSTR_PK
            AND SMM.EZCANCELFLAG         = '0'
    </statement>

    <statement id="getSvcTermAttrbMapValCd" parameterClass="Map" resultClass="String">
        SELECT
             STC.SVC_TERM_ATTRB_MAP_VAL_CD
        FROM
             SVC_TERM_COND       STC
            ,SVC_TERM_COND_ATTRB TCA
        WHERE
                STC.GLBL_CMPY_CD           = #glblCmpyCd#
            AND STC.DS_CONTR_DTL_PK        = #dsContrDtlPk#
            AND STC.EZCANCELFLAG           = '0'
            AND STC.GLBL_CMPY_CD           = TCA.GLBL_CMPY_CD
            AND STC.SVC_TERM_COND_ATTRB_PK = TCA.SVC_TERM_COND_ATTRB_PK
            AND TCA.SVC_TERM_COND_ATTRB_NM = #svcTermCondAttrbNm#
            AND TCA.EZCANCELFLAG           = '0'
    </statement>

    <statement id="getMachAndContrInfo" parameterClass="Map" resultClass="Map">
        SELECT
             DCD.SVC_MACH_MSTR_PK    SVC_MACH_MSTR_PK
            ,SMM.SER_NUM             SER_NUM
            ,DSM.MTR_REQ_MDL_FLG     MTR_REQ_MDL_FLG
            ,CDT.MAIN_UNIT_LINE_FLG  MAIN_UNIT_LINE_FLG
            ,CDT.BASE_CHRG_FLG       BASE_CHRG_FLG
            ,CDT.USG_CHRG_FLG        USG_CHRG_FLG
            ,DCD.CONTR_EFF_FROM_DT   CONTR_EFF_FROM_DT
            ,DCD.DS_CONTR_DTL_STS_CD DS_CONTR_DTL_STS_CD
            ,BC.CFS_BLLG_CYCLE_CD    CFS_BASE_BLLG_CYCLE_CD
            ,SMM.CUR_LOC_ACCT_NUM    CUR_LOC_ACCT_NUM
        FROM
             DS_CONTR_DTL    DCD
            ,DS_CONTR_DTL_TP CDT
            ,SVC_MACH_MSTR   SMM
            ,SVC_CONFIG_MSTR SCM
            ,DS_MDL          DSM
            ,BLLG_CYCLE      BC
        WHERE
                DCD.GLBL_CMPY_CD           = #glblCmpyCd#
            AND DCD.DS_CONTR_DTL_PK        = #dsContrDtlPk#
            AND DCD.EZCANCELFLAG           = '0'
            AND DCD.GLBL_CMPY_CD           = CDT.GLBL_CMPY_CD
            AND DCD.DS_CONTR_DTL_TP_CD     = CDT.DS_CONTR_DTL_TP_CD
            AND CDT.EZCANCELFLAG           = '0'
            AND DCD.GLBL_CMPY_CD           = SMM.GLBL_CMPY_CD
            AND DCD.SVC_MACH_MSTR_PK       = SMM.SVC_MACH_MSTR_PK
            AND SMM.EZCANCELFLAG           = '0'
            AND SMM.GLBL_CMPY_CD           = SCM.GLBL_CMPY_CD
            AND SMM.SVC_CONFIG_MSTR_PK     = SCM.SVC_CONFIG_MSTR_PK
            AND SCM.EZCANCELFLAG           = '0'
            AND SCM.GLBL_CMPY_CD           = DSM.GLBL_CMPY_CD
            AND SCM.MDL_ID                 = DSM.MDL_ID
            AND DSM.EZCANCELFLAG           = '0'
            AND DCD.GLBL_CMPY_CD           = BC.GLBL_CMPY_CD        (+)
            AND DCD.BASE_BLLG_CYCLE_CD     = BC.BLLG_CYCLE_CD       (+)
            AND BC.EZCANCELFLAG        (+) = '0'
    </statement>

    <statement id="getBaseChrgAmt" parameterClass="Map" resultClass="BigDecimal">
<!-- START 2018/04/24 U.Kim [QC#22547, MOD] -->
<!--        SELECT -->
<!--             CPF.BASE_PRC_DEAL_AMT BASE_PRC_DEAL_AMT -->
<!--        FROM -->
<!--             DS_CONTR_PRC_EFF CPF -->
<!--        WHERE -->
<!--                CPF.GLBL_CMPY_CD                            = #glblCmpyCd# -->
<!--            AND CPF.DS_CONTR_DTL_PK                         = #dsContrDtlPk# -->
<!--            AND CPF.CONTR_PRC_EFF_FROM_DT               &lt;= #slsDt# -->
<!--            AND NVL(CPF.CONTR_PRC_EFF_THRU_DT, #endDt#) &gt;= #slsDt# -->
<!--            AND CPF.BASE_CHRG_FLG                           = 'Y' -->
<!--            AND CPF.EZCANCELFLAG                            = '0' -->
        SELECT
            BASE_PRC_DEAL_AMT
        FROM (
            SELECT
                 DPE.BASE_PRC_DEAL_AMT
                ,3                            AS SORT_KEY1
                ,(TO_DATE(#slsDt#, 'YYYYMMDD') - TO_DATE(DPE.CONTR_PRC_EFF_THRU_DT, 'YYYYMMDD'))  AS SORT_KEY2
            FROM
                DS_CONTR_PRC_EFF DPE
            WHERE
                    DPE.GLBL_CMPY_CD          =    #glblCmpyCd#
                AND DPE.DS_CONTR_DTL_PK       =    #dsContrDtlPk#
                AND DPE.EZCANCELFLAG          =    '0'
                AND DPE.BASE_CHRG_FLG         =    'Y'
                AND DPE.CONTR_PRC_EFF_THRU_DT &lt; #slsDt#
            UNION
            SELECT
                 DPE.BASE_PRC_DEAL_AMT
                ,1                            AS SORT_KEY1
                ,0                            AS SORT_KEY2
            FROM
                DS_CONTR_PRC_EFF DPE
            WHERE
                    DPE.GLBL_CMPY_CD                            =    #glblCmpyCd#
                AND DPE.DS_CONTR_DTL_PK                         =    #dsContrDtlPk#
                AND DPE.EZCANCELFLAG                            =    '0'
                AND DPE.BASE_CHRG_FLG                           =    'Y'
                AND DPE.CONTR_PRC_EFF_FROM_DT               &lt;= #slsDt#
                AND NVL(DPE.CONTR_PRC_EFF_THRU_DT, #endDt#) &gt;= #slsDt#
            UNION
            SELECT
                 DPE.BASE_PRC_DEAL_AMT
                ,2                            AS SORT_KEY1
                ,(TO_DATE(DPE.CONTR_PRC_EFF_FROM_DT, 'YYYYMMDD') - TO_DATE(#slsDt#, 'YYYYMMDD'))  AS SORT_KEY2
            FROM
                DS_CONTR_PRC_EFF DPE
            WHERE
                    DPE.GLBL_CMPY_CD          =    #glblCmpyCd#
                AND DPE.DS_CONTR_DTL_PK       =    #dsContrDtlPk#
                AND DPE.EZCANCELFLAG          =    '0'
                AND DPE.BASE_CHRG_FLG         =    'Y'
                AND DPE.CONTR_PRC_EFF_FROM_DT &gt;= #slsDt#
            ORDER BY
                 SORT_KEY1                    ASC
                ,SORT_KEY2                    ASC
        )
        WHERE
            ROWNUM = 1
<!-- END 2018/04/24 U.Kim [QC#22547, MOD] -->
    </statement>

    <statement id="getUsgChrgInfo" parameterClass="Map" resultClass="Map">
        SELECT
             CPF.DS_CONTR_PRC_EFF_PK      DS_CONTR_PRC_EFF_PK
            ,CBM.BLLG_MTR_LB_CD           BLLG_MTR_LB_CD
            ,CPM.XS_MTR_AMT_RATE          XS_MTR_AMT_RATE
            ,CPM.XS_MTR_COPY_QTY          XS_MTR_COPY_QTY
<!-- START 2017/08/03 K.Kitachi [QC#20224, ADD] -->
            ,CBM.BLLG_MTR_BILL_TO_CUST_CD BLLG_MTR_BILL_TO_CUST_CD
<!-- END 2017/08/03 K.Kitachi [QC#20224, ADD] -->
        FROM
             DS_CONTR_PRC_EFF     CPF
            ,DS_CONTR_PRC_EFF_MTR CPM
            ,DS_CONTR_BLLG_MTR    CBM
        WHERE
                CPF.GLBL_CMPY_CD                            = #glblCmpyCd#
            AND CPF.DS_CONTR_DTL_PK                         = #dsContrDtlPk#
            AND CPF.CONTR_PRC_EFF_FROM_DT               &lt;= #slsDt#
            AND NVL(CPF.CONTR_PRC_EFF_THRU_DT, #endDt#) &gt;= #slsDt#
            AND CPF.USG_CHRG_FLG                            = 'Y'
            AND CPF.EZCANCELFLAG                            = '0'
            AND CPF.GLBL_CMPY_CD                            = CPM.GLBL_CMPY_CD
            AND CPF.DS_CONTR_PRC_EFF_PK                     = CPM.DS_CONTR_PRC_EFF_PK
            AND CPM.XS_MTR_FIRST_FLG                        = 'Y'
            AND CPM.EZCANCELFLAG                            = '0'
            AND CPM.GLBL_CMPY_CD                            = CBM.GLBL_CMPY_CD
            AND CPM.DS_CONTR_BLLG_MTR_PK                    = CBM.DS_CONTR_BLLG_MTR_PK
            AND CBM.EZCANCELFLAG                            = '0'
    </statement>

    <statement id="getBaseChrgFmContrMdlPrc" parameterClass="Map" resultClass="Map">
        SELECT
             CMP.OUT_TRTY_PRC_AMT OUT_TRTY_PRC_AMT
            ,CMP.IN_TRTY_PRC_AMT  IN_TRTY_PRC_AMT
        FROM
             SVC_MACH_MSTR    SMM
            ,SVC_CONFIG_MSTR  SCM
            ,FM_CONTR_MDL_PRC CMP
        WHERE
                SMM.GLBL_CMPY_CD                = #glblCmpyCd#
            AND SMM.SVC_MACH_MSTR_PK            = #svcMachMstrPk#
            AND SMM.EZCANCELFLAG                = '0'
            AND SMM.GLBL_CMPY_CD                = SCM.GLBL_CMPY_CD
            AND SMM.SVC_CONFIG_MSTR_PK          = SCM.SVC_CONFIG_MSTR_PK
            AND SCM.EZCANCELFLAG                = '0'
            AND SCM.GLBL_CMPY_CD                = CMP.GLBL_CMPY_CD
            AND SCM.MDL_ID                      = CMP.MDL_ID
            AND CMP.EFF_FROM_DT             &lt;= #slsDt#
            AND NVL(CMP.EFF_TO_DT, #endDt#) &gt;= #slsDt#
            AND CMP.BASE_CHRG_FLG               = 'Y'
            AND CMP.EZCANCELFLAG                = '0'
    </statement>

    <statement id="getUsgChrgFmContrMdlPrc" parameterClass="Map" resultClass="Map">
        SELECT
             CMP.OUT_TRTY_PRC_AMT OUT_TRTY_PRC_AMT
            ,CMP.IN_TRTY_PRC_AMT  IN_TRTY_PRC_AMT
        FROM
             SVC_MACH_MSTR    SMM
            ,SVC_CONFIG_MSTR  SCM
            ,FM_CONTR_MDL_PRC CMP
        WHERE
                SMM.GLBL_CMPY_CD                = #glblCmpyCd#
            AND SMM.SVC_MACH_MSTR_PK            = #svcMachMstrPk#
            AND SMM.EZCANCELFLAG                = '0'
            AND SMM.GLBL_CMPY_CD                = SCM.GLBL_CMPY_CD
            AND SMM.SVC_CONFIG_MSTR_PK          = SCM.SVC_CONFIG_MSTR_PK
            AND SCM.EZCANCELFLAG                = '0'
            AND SCM.GLBL_CMPY_CD                = CMP.GLBL_CMPY_CD
            AND SCM.MDL_ID                      = CMP.MDL_ID
            AND CMP.EFF_FROM_DT             &lt;= #slsDt#
            AND NVL(CMP.EFF_TO_DT, #endDt#) &gt;= #slsDt#
            AND CMP.USG_CHRG_FLG                = 'Y'
            AND CMP.MTR_LB_CD                   = #mtrLbCd#
            AND CMP.EZCANCELFLAG                = '0'
    </statement>

    <statement id="countFmContrSlsRepReln" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             COUNT(*)
        FROM
             FM_CONTR_SLS_REP_RELN CSR
        WHERE
                CSR.GLBL_CMPY_CD                = #glblCmpyCd#
            AND CSR.SLS_REP_TOC_CD              = #slsRepTocCd#
            AND CSR.DS_ACCT_NUM                 = #dsAcctNum#
            AND CSR.EFF_FROM_DT             &lt;= #slsDt#
            AND NVL(CSR.EFF_TO_DT, #endDt#) &gt;= #slsDt#
            AND CSR.EZCANCELFLAG                = '0'
    </statement>

    <statement id="getAddrChrgContrDtl" parameterClass="Map" resultClass="Map">
        SELECT
             DCA.DS_CONTR_ADDL_CHRG_PK
            ,DCA.EFF_FROM_DT
            ,DCA.EFF_THRU_DT
        FROM
             DS_CONTR_DTL           DCD
            ,DS_CONTR_ADDL_CHRG     DCA
            ,ADDL_CHRG_TP_V         ACT
        WHERE
                DCD.GLBL_CMPY_CD       = #glblCmpyCd#
            AND DCD.DS_CONTR_DTL_PK    = #dsContrDtlPk#
            AND DCD.EZCANCELFLAG       = '0'
            AND DCD.GLBL_CMPY_CD       = DCA.GLBL_CMPY_CD
            AND DCD.DS_CONTR_DTL_PK    = DCA.DS_CONTR_DTL_PK
            AND DCA.EZCANCELFLAG       = '0'
            AND DCA.GLBL_CMPY_CD       = ACT.GLBL_CMPY_CD
            AND DCA.ADDL_CHRG_TP_CD    = ACT.ADDL_CHRG_TP_CD
            AND ACT.EZCANCELFLAG       = '0'
            AND ACT.ADDL_CHRG_SLA_FLG  = 'Y'
    </statement>

    <statement id="getTermCond" parameterClass="Map" resultClass="Map">
        SELECT
             STC.SVC_TERM_ATTRB_MAP_VAL_CD
        FROM
             SVC_TERM_COND          STC
            ,SVC_TERM_COND_ATTRB    TCA
        WHERE
                STC.GLBL_CMPY_CD               = #glblCmpyCd#
            AND STC.DS_CONTR_DTL_PK            = #dsContrDtlPk#
            AND STC.EZCANCELFLAG               = '0'
            AND STC.GLBL_CMPY_CD               = TCA.GLBL_CMPY_CD
            AND STC.SVC_TERM_COND_ATTRB_PK     = TCA.SVC_TERM_COND_ATTRB_PK
            AND TCA.SVC_TERM_COND_ATTRB_NM     = #termCondAttrNm#
            AND TCA.EFF_FROM_DT            &lt;= #slaDt#
<!-- START 2016/10/27 N.Arai [QC#14840, MOD] -->
            AND NVL(TCA.EFF_THRU_DT,#slaDt#)    &gt;= #slaDt#
<!-- END 2016/10/27 N.Arai [QC#14840, MOD] -->
            AND TCA.SVC_TERM_ATTRB_MACH_FLG    = 'Y'
            AND TCA.EZCANCELFLAG               = '0'
    </statement>

    <statement id="countCfsLeaseContrForCheckDates" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
            CFS_LEASE_CONTR CLC
        WHERE
                CLC.GLBL_CMPY_CD                   = #glblCmpyCd#
            AND CLC.SER_NUM                        = #serNum#
            AND CLC.ASSET_START_DT             &lt;= #slsDt#
            AND NVL(CLC.ASSET_END_DT, #endDt#) &gt;= #slsDt#
            AND CLC.EZCANCELFLAG                   = '0'
    </statement>

    <statement id="getDsContrPrcEff" parameterClass="Map" resultClass="Map">
        SELECT
             CPF.DS_CONTR_PRC_EFF_PK AS DS_CONTR_PRC_EFF_PK
            ,CPF.BASE_PRC_DEAL_AMT   AS BASE_PRC_DEAL_AMT
        FROM
             DS_CONTR_PRC_EFF CPF
        WHERE
                CPF.GLBL_CMPY_CD              = #glblCmpyCd#
            AND CPF.DS_CONTR_DTL_PK           = #dsContrDtlPk#
            AND CPF.CONTR_PRC_EFF_FROM_DT &lt;= #slsDt#
            AND CPF.CONTR_PRC_EFF_THRU_DT &gt;= #slsDt#
            AND CPF.BASE_CHRG_FLG             = 'Y'
            AND CPF.EZCANCELFLAG              = '0'
    </statement>

    <statement id="getSumBasePerCycleDealAmtForCheckInsource" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            SUM(CLC.BASE_PER_CYCLE_DEAL_AMT) AS SUM_BASE_PER_CYCLE_DEAL_AMT
        FROM
            CFS_LEASE_CONTR CLC
        WHERE
                CLC.GLBL_CMPY_CD  = #glblCmpyCd#
            AND CLC.SER_NUM       = #serNum#
            AND CLC.BASE_BILL_FLG = 'Y'
            AND CLC.EZCANCELFLAG  = '0'
    </statement>

    <statement id="countCfsLeaseContrForCheckCfsDealerCodeDiff" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
            CFS_LEASE_CONTR CLC
        WHERE
                CLC.GLBL_CMPY_CD = #glblCmpyCd#
            AND CLC.SER_NUM      = #serNum#
            AND (
                    CLC.LEASE_DLR_CD &lt;&gt; #leaseDlrCd#
                OR  CLC.LEASE_DLR_CD       IS NULL
                )
            AND CLC.EZCANCELFLAG = '0'
    </statement>

    <statement id="countCfsLeaseContrForCheckCfsNonFltMachineDiff" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
            CFS_LEASE_CONTR CLC
        WHERE
                CLC.GLBL_CMPY_CD = #glblCmpyCd#
            AND CLC.SER_NUM      = #serNum#
            AND CLC.EZCANCELFLAG = '0'
    </statement>

    <statement id="countCfsLeaseContrForCheckCfsNonFltBaseCycleDiff" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
            CFS_LEASE_CONTR CLC
        WHERE
                CLC.GLBL_CMPY_CD  = #glblCmpyCd#
            AND CLC.SER_NUM       = #serNum#
            AND CLC.BASE_BILL_FLG = 'Y'
            AND (
                    CLC.BASE_BLLG_CYCLE_CD &lt;&gt; #baseBllgCycleCd#
                OR  CLC.BASE_BLLG_CYCLE_CD       IS NULL
                )
            AND CLC.EZCANCELFLAG  = '0'
    </statement>

    <statement id="countCfsLeaseContrForCheckCfsNonFltUsageCycleDiff" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
            CFS_LEASE_CONTR CLC
        WHERE
                CLC.GLBL_CMPY_CD   = #glblCmpyCd#
            AND CLC.SER_NUM        = #serNum#
            AND CLC.USG_BILL_FLG   = 'Y'
            AND CLC.USG_TP_BILL_CD = #usgTpBillCd#
            AND (
                    CLC.USG_BLLG_CYCLE_CD &lt;&gt; #usgBllgCycleCd#
                OR  CLC.USG_BLLG_CYCLE_CD       IS NULL
                )
            AND CLC.EZCANCELFLAG   = '0'
    </statement>

    <statement id="countCfsLeaseContrForCheckCfsNonFltUsageTierRateDiff" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
            CFS_LEASE_CONTR CLC
        WHERE
                CLC.GLBL_CMPY_CD   = #glblCmpyCd#
            AND CLC.SER_NUM        = #serNum#
            AND CLC.USG_BILL_FLG   = 'Y'
            AND CLC.USG_TP_BILL_CD = #usgTpBillCd#
            <isNotNull property="firstXsMtrRate">
            AND (
                    CLC.FIRST_XS_MTR_RATE &lt;&gt; #firstXsMtrRate#
                OR  CLC.FIRST_XS_MTR_RATE       IS NULL
                )
            </isNotNull>
            <isNotNull property="scdXsMtrRate">
            AND (
                    CLC.SCD_XS_MTR_RATE   &lt;&gt; #scdXsMtrRate#
                OR  CLC.SCD_XS_MTR_RATE         IS NULL
                )
            </isNotNull>
            <isNotNull property="thirdXsMtrRate">
            AND (
                    CLC.THIRD_XS_MTR_RATE &lt;&gt; #thirdXsMtrRate#
                OR  CLC.THIRD_XS_MTR_RATE       IS NULL
                )
            </isNotNull>
            <isNotNull property="frthXsMtrRate">
            AND (
                    CLC.FRTH_XS_MTR_RATE  &lt;&gt; #frthXsMtrRate#
                OR  CLC.FRTH_XS_MTR_RATE        IS NULL
                )
            </isNotNull>
            AND CLC.EZCANCELFLAG   = '0'
    </statement>

    <statement id="countCfsLeaseContrForCheckCfsNonFltUsageTierAllowanceDiff" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
            CFS_LEASE_CONTR CLC
        WHERE
                CLC.GLBL_CMPY_CD   = #glblCmpyCd#
            AND CLC.SER_NUM        = #serNum#
            AND CLC.USG_BILL_FLG   = 'Y'
            AND CLC.USG_TP_BILL_CD = #usgTpBillCd#
            <isNotNull property="firstXsMtrCopyDplyQty">
            AND (
                    CLC.FIRST_XS_MTR_COPY_DPLY_QTY &lt;&gt; #firstXsMtrCopyDplyQty#
                OR  CLC.FIRST_XS_MTR_COPY_DPLY_QTY       IS NULL
                )
            </isNotNull>
            <isNotNull property="scdXsMtrCopyDplyQty">
            AND (
                    CLC.SCD_XS_MTR_COPY_DPLY_QTY   &lt;&gt; #scdXsMtrCopyDplyQty#
                OR  CLC.SCD_XS_MTR_COPY_DPLY_QTY         IS NULL
                )
            </isNotNull>
            <isNotNull property="thirdXsMtrCopyDplyQty">
            AND (
                    CLC.THIRD_XS_MTR_COPY_DPLY_QTY &lt;&gt; #thirdXsMtrCopyDplyQty#
                OR  CLC.THIRD_XS_MTR_COPY_DPLY_QTY       IS NULL
                )
            </isNotNull>
            <isNotNull property="frthXsMtrCopyDplyQty">
            AND (
                    CLC.FRTH_XS_MTR_COPY_DPLY_QTY  &lt;&gt; #frthXsMtrCopyDplyQty#
                OR  CLC.FRTH_XS_MTR_COPY_DPLY_QTY        IS NULL
                )
            </isNotNull>
            AND CLC.EZCANCELFLAG   = '0'
    </statement>

    <statement id="getUsgChrgInfoForCheckCfsUsageTierRateDiff" parameterClass="Map" resultClass="Map">
        SELECT
             CPF.DS_CONTR_PRC_EFF_PK
            ,CBM.BLLG_MTR_LB_CD
            ,CPM.XS_MTR_AMT_RATE
            ,CPM.XS_MTR_COPY_QTY
        FROM
             DS_CONTR_PRC_EFF     CPF
            ,DS_CONTR_PRC_EFF_MTR CPM
            ,DS_CONTR_BLLG_MTR    CBM
        WHERE
                CPF.GLBL_CMPY_CD                            = #glblCmpyCd#
            AND CPF.DS_CONTR_DTL_PK                         = #dsContrDtlPk#
            AND CPF.CONTR_PRC_EFF_FROM_DT               &lt;= #slsDt#
            AND NVL(CPF.CONTR_PRC_EFF_THRU_DT, #endDt#) &gt;= #slsDt#
            AND CPF.USG_CHRG_FLG                            = 'Y'
            AND CPF.EZCANCELFLAG                            = '0'
            AND CPF.GLBL_CMPY_CD                            = CPM.GLBL_CMPY_CD
            AND CPF.DS_CONTR_PRC_EFF_PK                     = CPM.DS_CONTR_PRC_EFF_PK
            AND CPM.DS_CONTR_BLLG_MTR_PK                    = #dsContrBllgMtrPk#
            AND CPM.EZCANCELFLAG                            = '0'
            AND CPM.GLBL_CMPY_CD                            = CBM.GLBL_CMPY_CD
            AND CPM.DS_CONTR_BLLG_MTR_PK                    = CBM.DS_CONTR_BLLG_MTR_PK
            AND CBM.EZCANCELFLAG                            = '0'
        ORDER BY
             CPM.XS_MTR_FIRST_FLG DESC
            ,CPM.XS_MTR_COPY_QTY
    </statement>

    <statement id="getMachAndContrInfoForFleetLine" parameterClass="Map" resultClass="Map">
        SELECT
             DCD.DS_CONTR_DTL_PK   DS_CONTR_DTL_PK
            ,CDT.USG_CHRG_FLG      USG_CHRG_FLG
            ,BC.CFS_BLLG_CYCLE_CD  CFS_BASE_BLLG_CYCLE_CD
<!-- START 2017/04/24 K.Kitachi [QC#18377, ADD] -->
            ,DCD.SVC_PGM_MDSE_CD   SVC_PGM_MDSE_CD
<!-- END 2017/04/24 K.Kitachi [QC#18377, ADD] -->
        FROM
             DS_CONTR_DTL       DCD
            ,DS_CONTR_DTL_TP    CDT
            ,BLLG_CYCLE         BC
        WHERE
                DCD.GLBL_CMPY_CD           = #glblCmpyCd#
            AND DCD.DS_CONTR_PK            = #dsContrPk#
            AND DCD.EZCANCELFLAG           = '0'
            AND DCD.GLBL_CMPY_CD           = CDT.GLBL_CMPY_CD
            AND DCD.DS_CONTR_DTL_TP_CD     = CDT.DS_CONTR_DTL_TP_CD
            AND CDT.FLEET_LINE_FLG         = 'Y'
            AND CDT.EZCANCELFLAG           = '0'
            AND DCD.GLBL_CMPY_CD           = BC.GLBL_CMPY_CD        (+)
            AND DCD.BASE_BLLG_CYCLE_CD     = BC.BLLG_CYCLE_CD       (+)
            AND BC.EZCANCELFLAG        (+) = '0'
    </statement>

    <statement id="countCfsLeaseContrForCheckCfsFltBaseCycleDiff" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
            CFS_LEASE_CONTR CLC
        WHERE
                CLC.GLBL_CMPY_CD  = #glblCmpyCd#
            AND CLC.BASE_BILL_FLG = 'Y'
            AND (
                    CLC.BASE_BLLG_CYCLE_CD &lt;&gt; #baseBllgCycleCd#
                OR  CLC.BASE_BLLG_CYCLE_CD       IS NULL
                )
            AND CLC.EZCANCELFLAG  = '0'
            AND EXISTS (
                SELECT
                    1
                FROM
                     SVC_MACH_MSTR SMM
                    ,DS_CONTR_DTL  DCD
                WHERE
                        SMM.GLBL_CMPY_CD     = CLC.GLBL_CMPY_CD
                    AND SMM.SER_NUM          = CLC.SER_NUM
                    AND SMM.EZCANCELFLAG     = '0'
                    AND SMM.GLBL_CMPY_CD     = DCD.GLBL_CMPY_CD
                    AND SMM.SVC_MACH_MSTR_PK = DCD.SVC_MACH_MSTR_PK
                    AND DCD.DS_CONTR_PK      = #dsContrPk#
                    AND DCD.EZCANCELFLAG     = '0'
            )
    </statement>

    <statement id="countCfsLeaseContrForCheckCfsFltUsageCycleDiff" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
            CFS_LEASE_CONTR CLC
        WHERE
                CLC.GLBL_CMPY_CD   = #glblCmpyCd#
            AND CLC.USG_BILL_FLG   = 'Y'
            AND CLC.USG_TP_BILL_CD = #usgTpBillCd#
            AND (
                    CLC.USG_BLLG_CYCLE_CD &lt;&gt; #usgBllgCycleCd#
                OR  CLC.USG_BLLG_CYCLE_CD       IS NULL
                )
            AND CLC.EZCANCELFLAG   = '0'
            AND EXISTS (
                SELECT
                    1
                FROM
                     SVC_MACH_MSTR SMM
                    ,DS_CONTR_DTL  DCD
                WHERE
                        SMM.GLBL_CMPY_CD     = CLC.GLBL_CMPY_CD
                    AND SMM.SER_NUM          = CLC.SER_NUM
                    AND SMM.EZCANCELFLAG     = '0'
                    AND SMM.GLBL_CMPY_CD     = DCD.GLBL_CMPY_CD
                    AND SMM.SVC_MACH_MSTR_PK = DCD.SVC_MACH_MSTR_PK
                    AND DCD.DS_CONTR_PK      = #dsContrPk#
                    AND DCD.EZCANCELFLAG     = '0'
            )
    </statement>

    <statement id="countCfsLeaseContrForCheckCfsFltFtrDiff" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
            CFS_LEASE_CONTR CLC
        WHERE
                CLC.GLBL_CMPY_CD = #glblCmpyCd#
            AND CLC.SER_NUM      = #serNum#
            AND CLC.CFS_FTR_FLG  = #cfsFtrFlg#
            AND CLC.EZCANCELFLAG = '0'
    </statement>

    <statement id="getSumBasePerCycleDealAmtForCheckCfsFltBaseChargeDiff" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            SUM(CLC.BASE_PER_CYCLE_DEAL_AMT) AS SUM_BASE_PER_CYCLE_DEAL_AMT
        FROM
            CFS_LEASE_CONTR CLC
        WHERE
                CLC.GLBL_CMPY_CD  = #glblCmpyCd#
            AND CLC.BASE_BILL_FLG = 'Y'
            AND CLC.EZCANCELFLAG  = '0'
            AND EXISTS (
                SELECT
                    1
                FROM
                     SVC_MACH_MSTR SMM
                    ,DS_CONTR_DTL  DCD
                WHERE
                        SMM.GLBL_CMPY_CD     = CLC.GLBL_CMPY_CD
                    AND SMM.SER_NUM          = CLC.SER_NUM
                    AND SMM.EZCANCELFLAG     = '0'
                    AND SMM.GLBL_CMPY_CD     = DCD.GLBL_CMPY_CD
                    AND SMM.SVC_MACH_MSTR_PK = DCD.SVC_MACH_MSTR_PK
                    AND DCD.DS_CONTR_PK      = #dsContrPk#
                    AND DCD.EZCANCELFLAG     = '0'
            )
    </statement>

    <statement id="countCfsLeaseContrForCheckCfsFltUsageTierRateDiff" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
            CFS_LEASE_CONTR CLC
        WHERE
                CLC.GLBL_CMPY_CD   = #glblCmpyCd#
            AND CLC.USG_BILL_FLG   = 'Y'
            AND CLC.USG_TP_BILL_CD = #usgTpBillCd#
            <isNotNull property="firstXsMtrRate">
            AND (
                    CLC.FIRST_XS_MTR_RATE &lt;&gt; #firstXsMtrRate#
                OR  CLC.FIRST_XS_MTR_RATE       IS NULL
                )
            </isNotNull>
            <isNotNull property="scdXsMtrRate">
            AND (
                    CLC.SCD_XS_MTR_RATE   &lt;&gt; #scdXsMtrRate#
                OR  CLC.SCD_XS_MTR_RATE         IS NULL
                )
            </isNotNull>
            <isNotNull property="thirdXsMtrRate">
            AND (
                    CLC.THIRD_XS_MTR_RATE &lt;&gt; #thirdXsMtrRate#
                OR  CLC.THIRD_XS_MTR_RATE       IS NULL
                )
            </isNotNull>
            <isNotNull property="frthXsMtrRate">
            AND (
                    CLC.FRTH_XS_MTR_RATE  &lt;&gt; #frthXsMtrRate#
                OR  CLC.FRTH_XS_MTR_RATE        IS NULL
                )
            </isNotNull>
            AND CLC.EZCANCELFLAG   = '0'
            AND EXISTS (
                SELECT
                    1
                FROM
                     SVC_MACH_MSTR SMM
                    ,DS_CONTR_DTL  DCD
                WHERE
                        SMM.GLBL_CMPY_CD     = CLC.GLBL_CMPY_CD
                    AND SMM.SER_NUM          = CLC.SER_NUM
                    AND SMM.EZCANCELFLAG     = '0'
                    AND SMM.GLBL_CMPY_CD     = DCD.GLBL_CMPY_CD
                    AND SMM.SVC_MACH_MSTR_PK = DCD.SVC_MACH_MSTR_PK
                    AND DCD.DS_CONTR_PK      = #dsContrPk#
                    AND DCD.EZCANCELFLAG     = '0'
            )
    </statement>

    <statement id="countCfsLeaseContrForCheckCfsFltUsageTierAllowanceDiff" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
            CFS_LEASE_CONTR CLC
        WHERE
                CLC.GLBL_CMPY_CD   = #glblCmpyCd#
            AND CLC.USG_BILL_FLG   = 'Y'
            AND CLC.USG_TP_BILL_CD = #usgTpBillCd#
            <isNotNull property="firstXsMtrCopyDplyQty">
            AND (
                    CLC.FIRST_XS_MTR_COPY_DPLY_QTY &lt;&gt; #firstXsMtrCopyDplyQty#
                OR  CLC.FIRST_XS_MTR_COPY_DPLY_QTY       IS NULL
                )
            </isNotNull>
            <isNotNull property="scdXsMtrCopyDplyQty">
            AND (
                    CLC.SCD_XS_MTR_COPY_DPLY_QTY   &lt;&gt; #scdXsMtrCopyDplyQty#
                OR  CLC.SCD_XS_MTR_COPY_DPLY_QTY         IS NULL
                )
            </isNotNull>
            <isNotNull property="thirdXsMtrCopyDplyQty">
            AND (
                    CLC.THIRD_XS_MTR_COPY_DPLY_QTY &lt;&gt; #thirdXsMtrCopyDplyQty#
                OR  CLC.THIRD_XS_MTR_COPY_DPLY_QTY       IS NULL
                )
            </isNotNull>
            <isNotNull property="frthXsMtrCopyDplyQty">
            AND (
                    CLC.FRTH_XS_MTR_COPY_DPLY_QTY  &lt;&gt; #frthXsMtrCopyDplyQty#
                OR  CLC.FRTH_XS_MTR_COPY_DPLY_QTY       IS NULL
                )
            </isNotNull>
            AND CLC.EZCANCELFLAG   = '0'
            AND EXISTS (
                SELECT
                    1
                FROM
                     SVC_MACH_MSTR SMM
                    ,DS_CONTR_DTL  DCD
                WHERE
                        SMM.GLBL_CMPY_CD     = CLC.GLBL_CMPY_CD
                    AND SMM.SER_NUM          = CLC.SER_NUM
                    AND SMM.EZCANCELFLAG     = '0'
                    AND SMM.GLBL_CMPY_CD     = DCD.GLBL_CMPY_CD
                    AND SMM.SVC_MACH_MSTR_PK = DCD.SVC_MACH_MSTR_PK
                    AND DCD.DS_CONTR_PK      = #dsContrPk#
                    AND DCD.EZCANCELFLAG     = '0'
            )
    </statement>

    <statement id="countCfsLeaseContr" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
            CFS_LEASE_CONTR CLC
        WHERE
                CLC.GLBL_CMPY_CD   = #glblCmpyCd#
            <isNotNull property="serNum">
            AND CLC.SER_NUM        = #serNum#
            </isNotNull>
            <isNotNull property="leaseDlrCd">
            AND CLC.LEASE_DLR_CD   = #leaseDlrCd#
            </isNotNull>
            <isNotNull property="baseBillFlg">
            AND CLC.BASE_BILL_FLG  = #baseBillFlg#
            </isNotNull>
            <isNotNull property="usgBillFlg">
            AND CLC.USG_BILL_FLG   = #usgBillFlg#
            </isNotNull>
            <isNotNull property="usgTpBillCd">
            AND CLC.USG_TP_BILL_CD = #usgTpBillCd#
            </isNotNull>
            <isNotNull property="dsContrPk">
            AND EXISTS (
                SELECT
                    1
                FROM
                     SVC_MACH_MSTR SMM
                    ,DS_CONTR_DTL  DCD
                WHERE
                        SMM.GLBL_CMPY_CD     = CLC.GLBL_CMPY_CD
                    AND SMM.SER_NUM          = CLC.SER_NUM
                    AND SMM.EZCANCELFLAG     = '0'
                    AND SMM.GLBL_CMPY_CD     = DCD.GLBL_CMPY_CD
                    AND SMM.SVC_MACH_MSTR_PK = DCD.SVC_MACH_MSTR_PK
                    AND DCD.DS_CONTR_PK      = #dsContrPk#
                    AND DCD.EZCANCELFLAG     = '0'
            )
            </isNotNull>
            AND CLC.EZCANCELFLAG   = '0'
    </statement>

    <statement id="getTierCount" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            CASE
                WHEN (CLC.FRTH_XS_MTR_RATE  IS NOT NULL AND CLC.FRTH_XS_MTR_RATE  > 0) THEN 4
                WHEN (CLC.THIRD_XS_MTR_RATE IS NOT NULL AND CLC.THIRD_XS_MTR_RATE > 0) THEN 3
                WHEN (CLC.SCD_XS_MTR_RATE   IS NOT NULL AND CLC.SCD_XS_MTR_RATE   > 0) THEN 2
                WHEN (CLC.FIRST_XS_MTR_RATE IS NOT NULL AND CLC.FIRST_XS_MTR_RATE > 0) THEN 1
                ELSE 0
            END AS TIER
        FROM
            CFS_LEASE_CONTR CLC
        WHERE
                CLC.GLBL_CMPY_CD   = #glblCmpyCd#
            <isNotNull property="serNum">
            AND CLC.SER_NUM        = #serNum#
            </isNotNull>
            <isNotNull property="leaseDlrCd">
            AND CLC.LEASE_DLR_CD   = #leaseDlrCd#
            </isNotNull>
            <isNotNull property="baseBillFlg">
            AND CLC.BASE_BILL_FLG  = #baseBillFlg#
            </isNotNull>
            <isNotNull property="usgBillFlg">
            AND CLC.USG_BILL_FLG   = #usgBillFlg#
            </isNotNull>
            <isNotNull property="usgTpBillCd">
            AND CLC.USG_TP_BILL_CD = #usgTpBillCd#
            </isNotNull>
            <isNotNull property="dsContrPk">
            AND EXISTS (
                SELECT
                    1
                FROM
                     SVC_MACH_MSTR SMM
                    ,DS_CONTR_DTL  DCD
                WHERE
                        SMM.GLBL_CMPY_CD     = CLC.GLBL_CMPY_CD
                    AND SMM.SER_NUM          = CLC.SER_NUM
                    AND SMM.EZCANCELFLAG     = '0'
                    AND SMM.GLBL_CMPY_CD     = DCD.GLBL_CMPY_CD
                    AND SMM.SVC_MACH_MSTR_PK = DCD.SVC_MACH_MSTR_PK
                    AND DCD.DS_CONTR_PK      = #dsContrPk#
                    AND DCD.EZCANCELFLAG     = '0'
            )
            </isNotNull>
            AND CLC.EZCANCELFLAG   = '0'
    </statement>

    <statement id="getDsContrPrcEffPk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            CPF.DS_CONTR_PRC_EFF_PK
        FROM
            DS_CONTR_PRC_EFF CPF
        WHERE
                CPF.GLBL_CMPY_CD                            = #glblCmpyCd#
            AND CPF.DS_CONTR_DTL_PK                         = #dsContrDtlPk#
            AND CPF.CONTR_PRC_EFF_FROM_DT               &lt;= #slsDt#
            AND NVL(CPF.CONTR_PRC_EFF_THRU_DT, #endDt#) &gt;= #slsDt#
            AND CPF.USG_CHRG_FLG                            = 'Y'
            AND CPF.EZCANCELFLAG                            = '0'
            AND ROWNUM                                      = 1
    </statement>

    <statement id="getEndOfLife" parameterClass="Map" resultClass="Map">
<!-- mod start 2018/06/13 QC#26028 -->
<!--         SELECT
             Z.MDL_ID
            ,Z.SER_NUM
            ,Z.DS_MDL_EOL_STS_CD
            ,Z.DS_MDL_EOL_DT
        FROM (
            SELECT
                 B.MDL_ID                              AS MDL_ID
                ,A.SER_NUM                             AS SER_NUM
                ,C.DS_MDL_EOL_STS_CD                   AS DS_MDL_EOL_STS_CD
                ,NVL(D.DS_MDL_EOL_DT, C.DS_MDL_EOL_DT) AS DS_MDL_EOL_DT
            FROM
                 SVC_MACH_MSTR   A
                ,SVC_CONFIG_MSTR B
                ,DS_MDL_EOL      C
                ,DS_MDL_EOL_EX   D
            WHERE
                    A.GLBL_CMPY_CD           = #glblCmpyCd#
                AND A.SVC_MACH_MSTR_PK       = #svcMachMstrPk#
                AND A.EZCANCELFLAG           = '0'
                AND A.GLBL_CMPY_CD           = B.GLBL_CMPY_CD
                AND A.SVC_CONFIG_MSTR_PK     = B.SVC_CONFIG_MSTR_PK
                AND B.EZCANCELFLAG           = '0'
                AND B.GLBL_CMPY_CD           = C.GLBL_CMPY_CD
                AND B.MDL_ID                 = C.MDL_ID
                AND C.DS_MDL_EOL_STS_CD      = #dsMdlEolStsCd#
                AND C.EZCANCELFLAG           = '0'
                AND C.GLBL_CMPY_CD           = D.GLBL_CMPY_CD       (+)
                AND C.MDL_ID                 = D.MDL_ID             (+)
                AND C.DS_MDL_EOL_STS_CD      = D.DS_MDL_EOL_STS_CD  (+)
                AND A.SER_NUM                = D.SER_NUM            (+)
                AND D.EZCANCELFLAG       (+) = '0'
            ) Z
        WHERE
            Z.DS_MDL_EOL_DT &lt;= #contrEffThruDt#
 -->
        SELECT
             Z.MDL_ID
            ,Z.SER_NUM
            ,Z.DS_MDL_EOL_STS_CD
            ,Z.DS_MDL_EOL_DT
            ,Z.EOL_SVC_CONTR_CMNT_TXT
        FROM (
            SELECT
                 B.MDL_ID                              AS MDL_ID
                ,A.SER_NUM                             AS SER_NUM
                ,C.DS_MDL_EOL_STS_CD                   AS DS_MDL_EOL_STS_CD
                ,NVL(D.DS_MDL_EOL_DT, C.DS_MDL_EOL_DT) AS DS_MDL_EOL_DT
                ,NVL2(D.DS_MDL_EOL_DT, NULL, TRIM(REPLACE(REPLACE(E.EOL_SVC_CONTR_CMNT_TXT, chr(13), ' '), chr(10), ' ')))
                                                       AS EOL_SVC_CONTR_CMNT_TXT
            FROM
                 SVC_MACH_MSTR   A
                ,SVC_CONFIG_MSTR B
                ,DS_MDL_EOL      C
                ,DS_MDL_EOL_EX   D
                ,DS_MDL          E
            WHERE
                    A.GLBL_CMPY_CD           = #glblCmpyCd#
                AND A.SVC_MACH_MSTR_PK       = #svcMachMstrPk#
                AND A.EZCANCELFLAG           = '0'
                AND A.GLBL_CMPY_CD           = B.GLBL_CMPY_CD
                AND A.SVC_CONFIG_MSTR_PK     = B.SVC_CONFIG_MSTR_PK
                AND B.EZCANCELFLAG           = '0'
                AND B.GLBL_CMPY_CD           = C.GLBL_CMPY_CD
                AND B.MDL_ID                 = C.MDL_ID
                AND C.DS_MDL_EOL_STS_CD      = #dsMdlEolStsCd#
                AND C.EZCANCELFLAG           = '0'
                AND C.GLBL_CMPY_CD           = D.GLBL_CMPY_CD       (+)
                AND C.MDL_ID                 = D.MDL_ID             (+)
                AND C.DS_MDL_EOL_STS_CD      = D.DS_MDL_EOL_STS_CD  (+)
                AND A.SER_NUM                = D.SER_NUM            (+)
                AND D.EZCANCELFLAG       (+) = '0'
                AND C.GLBL_CMPY_CD           = E.GLBL_CMPY_CD
                AND C.MDL_ID                 = E.MDL_ID
                AND E.EZCANCELFLAG           = '0'
            ) Z
        WHERE
            Z.DS_MDL_EOL_DT &lt; #targetDt#
<!-- mod end 2018/06/13 QC#26028 -->
    </statement>

    <statement id="countDsContrTrk" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
            DS_CONTR_TRK DCT
        WHERE
                DCT.GLBL_CMPY_CD       = #glblCmpyCd#
            AND DCT.DS_CONTR_DTL_PK    = #dsContrDtlPk#
            AND DCT.DS_CONTR_TO_STS_CD = #dsContrCtrlStsCd#
            AND DCT.EZCANCELFLAG       = '0'
    </statement>

<!-- START 2017/02/08 [QC#17275, ADD] -->
    <statement id="getContrPhysBllgMtrReln" parameterClass="Map" resultClass="Map">
        SELECT
             RLN.BLLG_MTR_LB_CD
            ,RLN.BLLBL_FLG
            ,RLN.CONTR_MTR_MULT_RATE
            ,RLN.BLLG_MTR_LVL_NUM
            ,SPM.MDL_MTR_LB_CD
        FROM
             CONTR_PHYS_BLLG_MTR_RELN   RLN
            ,SVC_PHYS_MTR               SPM
        WHERE
            RLN.GLBL_CMPY_CD        =   #glblCmpyCd#
        AND RLN.DS_CONTR_DTL_PK     =   #dsContrDtlPk#
        AND RLN.EZCANCELFLAG        =   '0'
        AND RLN.SVC_PHYS_MTR_PK     =   SPM.SVC_PHYS_MTR_PK(+)
        AND RLN.GLBL_CMPY_CD        =   SPM.GLBL_CMPY_CD(+)
        AND RLN.EZCANCELFLAG        =   SPM.EZCANCELFLAG(+)
        ORDER BY
            RLN.CONTR_PHYS_BLLG_MTR_RELN_PK
    </statement>

    <statement id="getPrntBllgMtr" parameterClass="Map" resultClass="String">
        WITH TMP_MTR_GRP AS (
            SELECT DISTINCT
                A.MTR_GRP_PK
            FROM
                 SVC_PHYS_MTR A
            WHERE
                    A.GLBL_CMPY_CD     = #glblCmpyCd#
                AND A.SVC_MACH_MSTR_PK = #svcMachMstrPk#
                AND A.MTR_GRP_PK       IS NOT NULL
                AND A.EZCANCELFLAG     = '0'
        )
        SELECT
            A.BLLG_MTR_LB_CD
        FROM
            (
                SELECT
                     X.GLBL_CMPY_CD
                    ,X.MDL_MTR_LB_CD
                    ,X.BLLG_MTR_LB_CD
                    ,X.BLLG_MTR_MAP_LVL_NUM
                    ,X.EFF_FROM_DT
                    ,CASE
                        WHEN X.EFF_THRU_DT IS NOT NULL
                            THEN X.EFF_THRU_DT
                            ELSE #endDt#
                     END AS EFF_THRU_DT
                FROM
                     BLLG_MTR_MAP X
                    ,TMP_MTR_GRP  Y
                WHERE
                        X.GLBL_CMPY_CD         =  #glblCmpyCd#
                    AND X.MDL_MTR_LB_CD        =  #mdlMtrLbCd#
                    AND X.EZCANCELFLAG         =  '0'
                    AND X.MTR_GRP_PK           =  Y.MTR_GRP_PK
            ) A
        WHERE
                A.EFF_FROM_DT    &lt;= #slsDt#
            AND A.EFF_THRU_DT    &gt;= #slsDt#
            AND EXISTS (
                SELECT
                    *
                FROM
                    (
                        SELECT
                             Z.GLBL_CMPY_CD
                            ,Z.MDL_MTR_LB_CD
                            ,Z.BLLG_MTR_LB_CD
                            ,Z.BLLG_MTR_MAP_LVL_NUM
                            ,Z.EFF_FROM_DT
                            ,CASE
                                WHEN Z.EFF_THRU_DT IS NOT NULL
                                    THEN Z.EFF_THRU_DT
                                    ELSE #endDt#
                             END AS EFF_THRU_DT
                        FROM
                             BLLG_MTR_MAP Z
                            ,TMP_MTR_GRP  A
                        WHERE
                                Z.GLBL_CMPY_CD         =  #glblCmpyCd#
                            AND Z.MDL_MTR_LB_CD        =  #mdlMtrLbCd#
                            AND Z.BLLG_MTR_LB_CD       =  #bllgMtrLbCd#
                            AND Z.EZCANCELFLAG         =  '0'
                            AND Z.MTR_GRP_PK           =  A.MTR_GRP_PK
                    ) Y
                WHERE
                        Y.GLBL_CMPY_CD         =  A.GLBL_CMPY_CD
                    AND Y.MDL_MTR_LB_CD        =  A.MDL_MTR_LB_CD
                    AND Y.BLLG_MTR_MAP_LVL_NUM &gt;  A.BLLG_MTR_MAP_LVL_NUM
                    AND Y.EFF_FROM_DT          &lt;= #slsDt#
                    AND Y.EFF_THRU_DT          &gt;= #slsDt#
            )
    </statement>

    <statement id="getMtrGrpPrcVldFlg" parameterClass="Map" resultClass="String">
        SELECT
             C.PRC_VLD_FLG
        FROM
             SVC_CONFIG_MSTR       A
            ,DS_MDL                B
            ,MTR_GRP               C
        WHERE
                A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.SVC_CONFIG_MSTR_PK   = #svcConfigMstrPk#
            AND A.EZCANCELFLAG         = '0'
            AND A.GLBL_CMPY_CD         = B.GLBL_CMPY_CD
            AND A.MDL_ID               = B.MDL_ID
            AND B.EZCANCELFLAG         = '0'
            AND B.GLBL_CMPY_CD         = C.GLBL_CMPY_CD
            AND B.MTR_GRP_PK           = C.MTR_GRP_PK
            AND C.EZCANCELFLAG         = '0'
    </statement>
<!-- END   2017/02/08 [QC#17275, ADD] -->

    <statement id="countSlsRep" parameterClass="Map" resultClass="BigDecimal">
        SELECT
             COUNT(*)
        FROM
             TOC              T
            ,ORG_FUNC_ROLE_TP OFRT
            ,BIZ_AREA_ORG     BAO
            ,ORG_FUNC_ASG     OFA
            ,S21_PSN          SP
        WHERE
                T.GLBL_CMPY_CD            = #glblCmpyCd#
            AND T.TOC_CD                  = #tocCd#
            AND T.EZCANCELFLAG            = '0'
            AND T.GLBL_CMPY_CD            = OFRT.GLBL_CMPY_CD
            AND T.ORG_FUNC_ROLE_TP_CD     = OFRT.ORG_FUNC_ROLE_TP_CD
            AND OFRT.SLS_REP_FLG          = 'Y'
            AND OFRT.EZCANCELFLAG         = '0'
            AND OFRT.GLBL_CMPY_CD         = BAO.GLBL_CMPY_CD
            AND OFRT.FIRST_ORG_CD         = BAO.BIZ_AREA_ORG_CD
            AND BAO.SLS_FLG               = 'Y'
            AND BAO.ORG_STRU_TP_CD        = #orgStruTpCd#
            AND T.GLBL_CMPY_CD            = OFA.GLBL_CMPY_CD
            AND T.TOC_CD                  = OFA.TOC_CD
            AND OFA.EZCANCELFLAG          = '0'
            AND OFA.GLBL_CMPY_CD          = SP.GLBL_CMPY_CD
            AND OFA.PSN_CD                = SP.PSN_CD
            AND SP.EFF_FROM_DT        &lt;= #slsDt#
            AND NVL(SP.EFF_THRU_DT, #endDt#) &gt;= #slsDt#
            AND SP.EZCANCELFLAG           = '0'
    </statement>

<!-- START 2017/04/24 K.Kitachi [QC#17554, ADD] -->
    <statement id="getSumBasePrcDealAmtOfAcc" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            SUM(CPF.BASE_PRC_DEAL_AMT)
        FROM
             DS_CONTR_DTL           DCD
            ,DS_CONTR_PRC_EFF       CPF
            ,DS_CONTR_PRC_EFF_STS_V DSV
        WHERE
                DCD.GLBL_CMPY_CD              = #glblCmpyCd#
            AND DCD.PRNT_DS_CONTR_DTL_PK      = #dsContrDtlPk#
            AND DCD.EZCANCELFLAG              = '0'
            AND DCD.GLBL_CMPY_CD              = CPF.GLBL_CMPY_CD
            AND DCD.DS_CONTR_DTL_PK           = CPF.DS_CONTR_DTL_PK
            AND CPF.CONTR_PRC_EFF_FROM_DT &lt;= #slsDt#
            AND CPF.CONTR_PRC_EFF_THRU_DT &gt;= #slsDt#
            AND CPF.BASE_CHRG_FLG             = 'Y'
            AND CPF.EZCANCELFLAG              = '0'
            AND CPF.GLBL_CMPY_CD              = DSV.GLBL_CMPY_CD
            AND CPF.DS_CONTR_PRC_EFF_PK       = DSV.DS_CONTR_PRC_EFF_PK
            <iterate property="dsContrCtrlStsCdList" var="dsContrCtrlStsCd[]" open="AND DSV.DS_CONTR_CTRL_STS_CD NOT IN (" close=")" conjunction=",">
                #dsContrCtrlStsCd[]#
            </iterate>
            AND DSV.EZCANCELFLAG              = '0'
    </statement>
<!-- END 2017/04/24 K.Kitachi [QC#17554, ADD] -->
    <statement id="getAggXsMtrCopyQty" parameterClass="Map" resultClass="Map">
        SELECT
             CLC.FIRST_XS_MTR_COPY_DPLY_QTY
            ,CLC.SCD_XS_MTR_COPY_DPLY_QTY
            ,CLC.THIRD_XS_MTR_COPY_DPLY_QTY
            ,CLC.FRTH_XS_MTR_COPY_DPLY_QTY
        FROM
             CFS_LEASE_CONTR CLC
        WHERE
                CLC.GLBL_CMPY_CD   = #glblCmpyCd#
            AND CLC.SER_NUM        = #serNum#
            AND CLC.USG_BILL_FLG   = 'Y'
            AND CLC.USG_TP_BILL_CD = #usgTpBillCd#
    </statement>

<!-- START 2017/09/14 M.Naito [QC#18534, ADD] -->
    <statement id="getSvcPgmTpCd" parameterClass="Map" resultClass="String">
        SELECT
             MDSE.SVC_PGM_TP_CD
        FROM
             DS_CONTR_DTL DCD
            ,MDSE         MDSE
        WHERE
                DCD.GLBL_CMPY_CD    = #glblCmpyCd#
            AND DCD.DS_CONTR_PK     = #dsContrPk#
            AND DCD.EZCANCELFLAG    = '0'
            AND DCD.GLBL_CMPY_CD    = MDSE.GLBL_CMPY_CD
            AND DCD.SVC_PGM_MDSE_CD = MDSE.MDSE_CD
            AND MDSE.EZCANCELFLAG   = '0'
    </statement>
<!-- END 2017/09/14 M.Naito [QC#18534, ADD] -->

<!-- START 2018/03/14 K.Kojima [QC#24238, ADD] -->
    <statement id="getNotesCount" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
            SVC_MEMO SM
        WHERE
                SM.GLBL_CMPY_CD     = #glblCmpyCd#
            AND SM.DS_CONTR_PK      = #dsContrPk#
            AND SM.SVC_MEMO_CATG_CD = #svcMemoCatgCd#
            AND SM.EZCANCELFLAG     = '0'
            AND EXISTS (
                SELECT
                    1
                FROM
                    (
                        SELECT
                            MAX(STS_MEMO_UPD_TS) AS STS_MEMO_UPD_TS
                        FROM
                            DS_CONTR_TRK DCT
                        WHERE
                                DCT.GLBL_CMPY_CD       = #glblCmpyCd#
                            AND DCT.DS_CONTR_PK        = #dsContrPk#
                            AND DCT.DS_CONTR_TRK_TP_CD = #dsContrTrkTpCd#
                            AND DCT.DS_CONTR_TO_STS_CD = #dsContrToStsCd#
                            AND DCT.EZCANCELFLAG       = '0'
                    ) X
                WHERE
                    SM.LAST_UPD_TS > X.STS_MEMO_UPD_TS
            )
    </statement>
<!-- END 2018/03/14 K.Kojima [QC#24238, ADD] -->
<!-- START 2018/04/17 T.Wada [QC#23378, ADD] -->
    <statement id="getBasePrcDealAmt" parameterClass="Map" resultClass="Map">
        SELECT 
            DCD.DS_CONTR_DTL_PK
            ,DCD.BASE_PRC_DEAL_AMT
        FROM 
            DS_CONTR_DTL    DCD
        WHERE 
            DCD.GLBL_CMPY_CD        = #glblCmpyCd#
        AND DCD.DS_CONTR_PK         = #dsContrPk#
        AND DCD.EZCANCELFLAG        = '0'
        ORDER BY 
            DCD.DS_CONTR_PK
            ,DCD.DS_CONTR_DTL_PK
    </statement>
    <statement id="getTotalPrcAllocAmt" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            SUM(PRC_ALLOC_AMT)
        FROM
            DS_CONTR_PRC_ALLOC    DCP
        WHERE
            DCP.GLBL_CMPY_CD    = #glblCmpyCd#
        AND DS_CONTR_PK         = #dsContrPk#
        AND DS_CONTR_DTL_PK     = #dsContrDtlPk#
        AND SVC_INV_CHRG_TP_CD  = #svcInvChrgTpCd#
        AND PRC_ALLOC_AMT IS NOT NULL
        AND EZCANCELFLAG        = '0'
    </statement>
<!-- END 2018/04/17 T.Wada [QC#23378, ADD] -->
<!-- START 2018/05/11 T.Wada [QC#24989, ADD] -->
    <statement id="countInstalledMachines" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*) CNT
        FROM
             DS_CONTR_DTL       A
<!--             ,DS_CONTR_DTL_STS_V B -->
            ,SVC_MACH_MSTR      C
        WHERE
            A.GLBL_CMPY_CD         =  #glblCmpyCd#
        AND A.EZCANCELFLAG         =  '0'
        AND A.DS_CONTR_PK          =  #dsContrPk#
<!-- 
        AND A.GLBL_CMPY_CD         =  B.GLBL_CMPY_CD
        AND A.DS_CONTR_DTL_PK      =  B.DS_CONTR_DTL_PK
        AND B.EZCANCELFLAG         =  '0'
        AND B.DS_CONTR_CTRL_STS_CD IN (#qahd#, #entr#, #sigd#, #actv#)
 -->  
        AND A.DS_CONTR_DTL_STS_CD  NOT IN  (#canc#, #expd#, #ordr#, #trmd#, #w4fb#)
        AND A.GLBL_CMPY_CD         =  C.GLBL_CMPY_CD
        AND A.SVC_MACH_MSTR_PK     =  C.SVC_MACH_MSTR_PK
        AND C.EZCANCELFLAG         =  '0'
        AND C.SVC_MACH_MSTR_STS_CD IN (#instl#, #w4r#)
    </statement>
<!-- END 2018/05/11 T.Wada [QC#24989, ADD] -->
<!-- START 2018/05/14 K.Kitachi [QC#23541, ADD] -->
    <statement id="getBllgMtrInfo" parameterClass="Map" resultClass="Map">
        WITH TRGT_BLLG_MTR AS (
            SELECT
                 A.DS_CONTR_DTL_TP_CD
                ,C.DS_CONTR_BLLG_MTR_PK
                ,C.BLLG_MTR_LB_CD
                ,D.MTR_LB_DESC_TXT
                ,C.BLLG_FREE_COPY_CNT
                ,C.BLLG_MIN_CNT
                ,C.BLLG_MIN_AMT_RATE
                ,C.BLLG_ROLL_OVER_RATIO
            FROM
                 DS_CONTR_DTL       A
                ,DS_CONTR_DTL_STS_V B
                ,DS_CONTR_BLLG_MTR  C
                ,MTR_LB             D
            WHERE
                    A.GLBL_CMPY_CD    = #glblCmpyCd#
                AND A.EZCANCELFLAG    = '0'
                AND A.DS_CONTR_PK     = #dsContrPk#
                AND A.GLBL_CMPY_CD    = B.GLBL_CMPY_CD
                AND A.DS_CONTR_DTL_PK = B.DS_CONTR_DTL_PK
                <iterate property="dsContrCtrlStsCdList" var="dsContrCtrlStsCd[]" open="AND B.DS_CONTR_CTRL_STS_CD NOT IN (" close=")" conjunction=",">
                    #dsContrCtrlStsCd[]#
                </iterate>
                AND B.EZCANCELFLAG    = '0'
                AND A.GLBL_CMPY_CD    = C.GLBL_CMPY_CD
                AND A.DS_CONTR_DTL_PK = C.DS_CONTR_DTL_PK
                AND C.EZCANCELFLAG    = '0'
                AND C.GLBL_CMPY_CD    = D.GLBL_CMPY_CD
                AND C.BLLG_MTR_LB_CD  = D.MTR_LB_CD
                AND D.EZCANCELFLAG    = '0'
        )
        SELECT
             A.BLLG_MTR_LB_CD
            ,A.MTR_LB_DESC_TXT
            ,(
                SELECT
                    COUNT(*)
                FROM
                    TRGT_BLLG_MTR B
                WHERE
                        A.BLLG_MTR_LB_CD       = B.BLLG_MTR_LB_CD
                    AND B.BLLG_FREE_COPY_CNT   IS NOT NULL
            ) COUNT_BLLG_FREE_COPY_CNT
            ,(
                SELECT
                    COUNT(*)
                FROM
                    TRGT_BLLG_MTR B
                WHERE
                        A.BLLG_MTR_LB_CD       = B.BLLG_MTR_LB_CD
                    AND B.BLLG_MIN_CNT         IS NOT NULL
            ) COUNT_BLLG_MIN_CNT
            ,(
                SELECT
                    COUNT(*)
                FROM
                    TRGT_BLLG_MTR B
                WHERE
                        A.BLLG_MTR_LB_CD       = B.BLLG_MTR_LB_CD
                    AND B.BLLG_MIN_AMT_RATE    IS NOT NULL
            ) COUNT_BLLG_MIN_AMT_RATE
            ,(
                SELECT
                    COUNT(*)
                FROM
                    TRGT_BLLG_MTR B
                WHERE
                        A.BLLG_MTR_LB_CD       = B.BLLG_MTR_LB_CD
                    AND B.BLLG_ROLL_OVER_RATIO IS NOT NULL
            ) COUNT_BLLG_ROLL_OVER_RATIO
        FROM
            TRGT_BLLG_MTR A
        GROUP BY
             A.BLLG_MTR_LB_CD
            ,A.MTR_LB_DESC_TXT
        ORDER BY
             A.BLLG_MTR_LB_CD
            ,A.MTR_LB_DESC_TXT
    </statement>
<!-- END 2018/05/14 K.Kitachi [QC#23541, ADD] -->
<!-- START 2018/05/21 K.Kitachi [QC#26217, ADD] -->
    <statement id="getSumAddlChrgFlatDealPrcAmt" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            SUM(ADDL_CHRG_FLAT_DEAL_PRC_AMT)
        FROM
            (
                SELECT
                    A.ADDL_CHRG_FLAT_DEAL_PRC_AMT
                FROM
                    DS_CONTR_ADDL_CHRG A
                WHERE
                        A.GLBL_CMPY_CD         =     #glblCmpyCd#
                    AND A.DS_CONTR_DTL_PK      =     #dsContrDtlPk#
                    AND A.EFF_FROM_DT          &lt;= #slsDt#
                    AND A.EFF_THRU_DT          &gt;= #slsDt#
                    <iterate property="svcBillByTpCdList" var="svcBillByTpCd[]" open="AND A.SVC_BILL_BY_TP_CD IN (" close=")" conjunction=",">
                        #svcBillByTpCd[]#
                    </iterate>
                    AND A.EZCANCELFLAG         =     '0'
                UNION ALL
                SELECT
                    A.ADDL_CHRG_FLAT_DEAL_PRC_AMT
                FROM
                     DS_CONTR_DTL       X
                    ,DS_CONTR_ADDL_CHRG A
                WHERE
                        X.GLBL_CMPY_CD         =     #glblCmpyCd#
                    AND X.PRNT_DS_CONTR_DTL_PK =     #dsContrDtlPk#
                    AND X.EZCANCELFLAG         =     '0'
                    AND X.GLBL_CMPY_CD         =     A.GLBL_CMPY_CD
                    AND X.DS_CONTR_DTL_PK      =     A.DS_CONTR_DTL_PK
                    AND A.EFF_FROM_DT          &lt;= #slsDt#
                    AND A.EFF_THRU_DT          &gt;= #slsDt#
                    <iterate property="svcBillByTpCdList" var="svcBillByTpCd[]" open="AND A.SVC_BILL_BY_TP_CD IN (" close=")" conjunction=",">
                        #svcBillByTpCd[]#
                    </iterate>
                    AND A.EZCANCELFLAG         =     '0'
            )
    </statement>
<!-- END 2018/05/21 K.Kitachi [QC#26217, ADD] -->
<!-- STRAT 2018/06/19 T.Wada [QC#26658, ADD] -->
    <statement id="isExistInvoicedBllg" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
            DS_CONTR_BLLG_SCHD
        WHERE
            GLBL_CMPY_CD         = #glblCmpyCd#
            AND DS_CONTR_DTL_PK  = #dsContrDtlPk#
            AND EZCANCELFLAG     = '0'
            AND USG_CHRG_FLG     = #flgY#
            AND INV_FLG          = #flgY#
    </statement>
<!-- END 2018/06/19 T.Wada [QC#26658, ADD] -->
<!-- STRAT 2018/07/03 K.Kishimoto [QC#15410, ADD] -->
    <statement id="countSamePhysMtrByOthrContr" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
            CONTR_PHYS_BLLG_MTR_RELN   X
        WHERE
                X.GLBL_CMPY_CD      = #glblCmpyCd#
            AND X.EZCANCELFLAG      = '0'
            AND X.DS_CONTR_DTL_PK   = #dsContrDtlPk#
<!-- STRAT 2018/07/13 K.Kishimoto [QC#27221, ADD] -->
            AND X.BLLG_MTR_LB_CD    IS NOT NULL
<!-- END   2018/07/13 K.Kishimoto [QC#27221, ADD] -->
            AND X.BLLBL_FLG         = 'Y'
            AND X.ACTV_FLG          = 'Y'
            AND EXISTS (
                SELECT
                    Y.SVC_PHYS_MTR_PK
                FROM
                    CONTR_PHYS_BLLG_MTR_RELN   Y
                WHERE
                        Y.GLBL_CMPY_CD      = #glblCmpyCd#
                    AND Y.EZCANCELFLAG      = '0'
                    AND Y.BLLBL_FLG         = 'Y'
<!-- STRAT 2018/07/13 K.Kishimoto [QC#27221, ADD] -->
                    AND Y.BLLG_MTR_LB_CD    IS NOT NULL
<!-- END   2018/07/13 K.Kishimoto [QC#27221, ADD] -->
                    AND Y.ACTV_FLG          = 'Y'
                    AND Y.SVC_PHYS_MTR_PK   = X.SVC_PHYS_MTR_PK
                    AND Y.DS_CONTR_DTL_PK   IN (
                        SELECT
                            A.DS_CONTR_DTL_PK
                        FROM
                            DS_CONTR_DTL A
                            ,DS_CONTR B
                        WHERE
                                A.GLBL_CMPY_CD                           =        #glblCmpyCd#
                            AND A.EZCANCELFLAG                           =        '0'
                            AND A.SVC_MACH_MSTR_PK                       =        #svcMachMstrPk#
                            AND A.DS_CONTR_DTL_PK                        &lt;&gt; #dsContrDtlPk#
                            AND A.GLBL_CMPY_CD                           =        B.GLBL_CMPY_CD
                            AND A.DS_CONTR_PK                            =        B.DS_CONTR_PK
                            AND B.EZCANCELFLAG                           =        '0'
                            AND B.DS_CONTR_CATG_CD                       &lt;&gt; #warranty#
                            AND A.CONTR_EFF_FROM_DT                      &lt;=    #thruDate#
                            AND NVL(A.CONTR_CLO_DT, A.CONTR_EFF_THRU_DT) &gt;=    #fromDate#
                            AND A.DS_CONTR_DTL_STS_CD                    &lt;&gt; #dsContrDtlStsCd_Cancelled#
                            <!-- START 2022/02/04 K.Kitachi [QC#59684, ADD] -->
                            AND (A.MAN_TRMN_TP_CD IS NULL OR A.MAN_TRMN_TP_CD &lt;&gt; #manTrmnTpCd#)
                            <!-- END 2022/02/04 K.Kitachi [QC#59684, ADD] -->
                    )
                )
    </statement>
<!-- END 2018/07/03 K.Kishimoto [QC#15410, ADD] -->
<!-- START 2018/07/09 K.Kitachi [QC#26834, ADD] -->
    <statement id="countLineMtrNotExstMachMtr" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
             DS_CONTR_DTL             A
            ,CONTR_PHYS_BLLG_MTR_RELN B
        WHERE
                A.GLBL_CMPY_CD    = #glblCmpyCd#
            AND A.DS_CONTR_DTL_PK = #dsContrDtlPk#
            AND A.EZCANCELFLAG    = '0'
            AND A.GLBL_CMPY_CD    = B.GLBL_CMPY_CD
            AND A.DS_CONTR_DTL_PK = B.DS_CONTR_DTL_PK
            AND B.EZCANCELFLAG    = '0'
            AND NOT EXISTS (
                SELECT
                    1
                FROM
                     DS_CONTR_DTL             X
                    ,CONTR_PHYS_BLLG_MTR_RELN Y
                WHERE
                        A.GLBL_CMPY_CD    = X.GLBL_CMPY_CD
                    AND A.DS_CONTR_DTL_PK = X.PRNT_DS_CONTR_DTL_PK
                    AND X.EZCANCELFLAG    = '0'
                    AND X.GLBL_CMPY_CD    = Y.GLBL_CMPY_CD
                    AND X.DS_CONTR_DTL_PK = Y.DS_CONTR_DTL_PK
                    AND B.BLLG_MTR_LB_CD  = Y.BLLG_MTR_LB_CD
                    AND Y.EZCANCELFLAG    = '0'
            )
    </statement>
<!-- END 2018/07/09 K.Kitachi [QC#26834, ADD] -->
<!-- START 2018/12/10  K.Fujimoto [QC#29079, ADD] -->
    <statement id="existMismatchSubContrAndBllgMtr" parameterClass="Map" resultClass="BigDecimal">
       WITH CONTR_BLLG_MTR AS (
           SELECT
               DCBM.GLBL_CMPY_CD   AS GLBL_CMPY_CD
              ,DCBM.BLLG_MTR_LB_CD        AS BLLG_MTR_LB_CD
              ,#dsContrDtlPk#             AS DS_CONTR_DTL_PK
           FROM
               DS_CONTR_BLLG_MTR DCBM
              ,DS_CONTR_BLLG_MTR_STS_V DCBMS
           WHERE
                  DCBM.GLBL_CMPY_CD          = #glblCmpyCd#
              AND DCBM.GLBL_CMPY_CD          = DCBMS.GLBL_CMPY_CD
              <isNull property="dsContrDtlLinePk">
              AND DCBM.DS_CONTR_DTL_PK       = #dsContrDtlPk#
              </isNull>
              <isNotNull property="dsContrDtlLinePk">
              AND DCBM.DS_CONTR_DTL_PK       = #dsContrDtlLinePk#
              </isNotNull>
              AND DCBM.DS_CONTR_BLLG_MTR_PK  = DCBMS.DS_CONTR_BLLG_MTR_PK
              AND DCBMS.EZCANCELFLAG         = '0'
              AND DCBM.EZCANCELFLAG          = '0'
              AND DCBMS.DS_CONTR_CTRL_STS_CD  &lt;&gt; #cancelledSts#
       )
        SELECT 
            COUNT(*)
        FROM (
               SELECT
                   1
               FROM   CONTR_BLLG_MTR CBM
                     ,DS_SUB_CONTR   DSC
               WHERE
                         CBM.GLBL_CMPY_CD            = DSC.GLBL_CMPY_CD
                     AND CBM.DS_CONTR_DTL_PK         = DSC.DS_CONTR_DTL_PK
                     AND DSC.EFF_FROM_DT             &lt;= #slsDt#
                     AND DSC.EFF_THRU_DT             &gt;= #slsDt#
                     AND DSC.CONTR_TRMN_FLG          = #contrTrmnFlg#
                     AND DSC.EZCANCELFLAG            = '0'
                     AND NOT EXISTS (
                         SELECT
                            1
                         FROM
                              DS_SUB_CONTR_MTR DSCM
                         WHERE
                                 DSCM.GLBL_CMPY_CD     =  DSC.GLBL_CMPY_CD
                             AND DSCM.DS_SUB_CONTR_PK  =  DSC.DS_SUB_CONTR_PK
                             AND DSCM.BLLG_MTR_LB_CD   =  CBM.BLLG_MTR_LB_CD
                             AND DSCM.EZCANCELFLAG     = '0'
                     )
               UNION ALL
               SELECT 
                   1
               FROM 
                   DS_SUB_CONTR_MTR        DSCM
                  ,DS_SUB_CONTR            DSC
               WHERE 
                      DSC.GLBL_CMPY_CD            = #glblCmpyCd#
                  AND DSC.EFF_FROM_DT             &lt;= #slsDt#
                  AND DSC.EFF_THRU_DT             &gt;= #slsDt#
                  AND DSC.CONTR_TRMN_FLG          = #contrTrmnFlg#
                  AND DSC.GLBL_CMPY_CD            = DSCM.GLBL_CMPY_CD
                  AND DSC.DS_SUB_CONTR_PK         = DSCM.DS_SUB_CONTR_PK
                  AND DSC.DS_CONTR_DTL_PK         = #dsContrDtlPk#
                  AND DSC.EZCANCELFLAG            = '0'
                  AND DSCM.EZCANCELFLAG           = '0'
                  AND NOT EXISTS(
                      SELECT
                         1
                      FROM
                            CONTR_BLLG_MTR   CBM
                      WHERE 
                               CBM.GLBL_CMPY_CD   = DSCM.GLBL_CMPY_CD
                           AND CBM.BLLG_MTR_LB_CD = DSCM.BLLG_MTR_LB_CD
                      )
             )
    </statement>
<!-- END   2018/12/10  K.Fujimoto [QC#29079, ADD] -->

    <!-- START [QC#55830, ADD] -->
    <statement id="existSkipSchedule" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*)
        FROM
            DS_CONTR_DTL         A
            ,DS_CONTR_DTL_TP     B
            ,DS_CONTR_BLLG_SCHD  C
            ,SKIP_RECOV_TP       D
        WHERE
            A.GLBL_CMPY_CD            = #glblCmpyCd#
        AND A.DS_CONTR_DTL_PK         = #dsContrDtlPk#
        AND A.GLBL_CMPY_CD            = B.GLBL_CMPY_CD
        AND A.DS_CONTR_DTL_TP_CD      = B.DS_CONTR_DTL_TP_CD
        AND B.MAIN_UNIT_LINE_FLG      = #flgY#
        AND A.GLBL_CMPY_CD            = C.GLBL_CMPY_CD
        AND A.DS_CONTR_DTL_PK         = C.DS_CONTR_DTL_PK
        AND C.INV_FLG                 = #flgN#
        AND C.GLBL_CMPY_CD            = D.GLBL_CMPY_CD
        AND C.SKIP_RECOV_TP_CD        = D.SKIP_RECOV_TP_CD
        AND D.BLLG_SKIP_FLG           = #flgY#
        AND A.EZCANCELFLAG            = '0'
        AND B.EZCANCELFLAG            = '0'
        AND C.EZCANCELFLAG            = '0'
        AND D.EZCANCELFLAG            = '0'
        AND EXISTS (
            SELECT 1
            FROM
                DS_CONTR_BLLG_SCHD     CC
                ,SKIP_RECOV_TP         DD
            WHERE
                CC.GLBL_CMPY_CD            = A.GLBL_CMPY_CD
            AND CC.PRNT_DS_CONTR_BLLG_SCHD_PK    = C.DS_CONTR_BLLG_SCHD_PK
            AND CC.INV_FLG                 = #flgN#
            AND CC.GLBL_CMPY_CD            = DD.GLBL_CMPY_CD
            AND CC.SKIP_RECOV_TP_CD        = DD.SKIP_RECOV_TP_CD
            AND DD.BLLG_SKIP_FLG           = #flgN#
            AND CC.EZCANCELFLAG            = '0'
            AND DD.EZCANCELFLAG            = '0'
        )
    </statement>
    <!-- END [QC#55830, ADD] -->

<!-- add start 2020/03/24 QC#54318 -->
    <statement id="getNotSetUplftPcyDtForContr" parameterClass="Map" resultClass="BigDecimal">
        SELECT DISTINCT
            A.DS_CONTR_PK
        FROM
            DS_CONTR_RNW_ESCL A
           ,DS_CONTR_DTL B
        WHERE
                A.GLBL_CMPY_CD                 = #glblCmpyCd#
            AND A.DS_CONTR_PK                  = #dsContrPk#
            AND A.CONTR_UPLFT_TP_CD     &lt;&gt; #doNotUplift#
            AND A.DS_CONTR_MACH_LVL_NUM        = #lvlNum1#
            AND A.UPLFT_PCY_DT                 IS NULL
            AND A.EZCANCELFLAG                 = '0'
            AND A.GLBL_CMPY_CD                 = B.GLBL_CMPY_CD
            AND A.DS_CONTR_PK                  = B.DS_CONTR_PK
            AND B.EZCANCELFLAG                 = '0'
            AND B.DS_CONTR_DTL_TP_CD    &lt;&gt; #shell#
            AND B.DS_CONTR_DTL_STS_CD   &lt;&gt; #ordr#
            <!-- START 2023/10/18 S.Moriai [QC#61952,ADD] -->
            AND (
                      B.CONTR_RNW_TOT_CNT = 0
                  OR  B.CONTR_RNW_TOT_CNT IS NULL
                 )
            <!-- END 2023/10/18 S.Moriai [QC#61952,ADD] -->
            <!--  del start 2020/05/26 QC#54318 -->
            <!--  AND NOT EXISTS(
                SELECT
                    1
                FROM
                     DS_CONTR_RNW_ESCL X
                WHERE
                    X.GLBL_CMPY_CD             = B.GLBL_CMPY_CD
                AND X.DS_CONTR_DTL_PK          = B.DS_CONTR_DTL_PK
                AND X.EZCANCELFLAG             = '0'
                )
            -->
            <!--  del end 2020/05/26 QC#54318 -->
    </statement>
<!--     START 2023/10/18 S.Moriai [QC#61952,DEL] -->
<!--     <statement id="getNotSetUplftPcyDtForContrDtl" parameterClass="Map" resultClass="BigDecimal"> -->
<!--        SELECT -->
<!--            A.DS_CONTR_DTL_PK -->
<!--        FROM -->
<!--            DS_CONTR_RNW_ESCL A -->
<!--        WHERE -->
<!--                A.GLBL_CMPY_CD                 = #glblCmpyCd# -->
<!--            AND A.DS_CONTR_PK                  = #dsContrPk# -->
<!--            AND A.DS_CONTR_DTL_PK              = #dsContrDtlPk# -->
<!--            AND A.CONTR_UPLFT_TP_CD     &lt;&gt; #doNotUplift# -->
<!--            AND A.DS_CONTR_MACH_LVL_NUM        = #lvlNum2# -->
<!--            AND A.UPLFT_PCY_DT                 IS NULL -->
<!--            AND A.EZCANCELFLAG                 = '0' -->
<!--              del start 2020/05/26 QC#54318 -->
<!--             AND NOT EXISTS( -->
<!--                SELECT -->
<!--                    1 -->
<!--                FROM -->
<!--                    DS_CONTR_RNW_ESCL X -->
<!--                WHERE -->
<!--                    X.GLBL_CMPY_CD             = A.GLBL_CMPY_CD -->
<!--                AND X.DS_CONTR_PK              = A.DS_CONTR_PK -->
<!--                AND X.DS_CONTR_DTL_PK          = A.DS_CONTR_DTL_PK -->
<!--                AND X.DS_CONTR_MACH_LVL_NUM    = #lvlNum3# -->
<!--                AND X.EZCANCELFLAG             = '0' -->
<!--                ) -->
<!--            AND NOT EXISTS( -->
<!--                SELECT -->
<!--                    1 -->
<!--                FROM -->
<!--                    DS_CONTR_RNW_ESCL X -->
<!--                WHERE -->
<!--                    X.GLBL_CMPY_CD             = A.GLBL_CMPY_CD -->
<!--                AND X.DS_CONTR_PK              = A.DS_CONTR_PK -->
<!--                AND X.CONTR_UPLFT_TP_CD &lt;&gt; #doNotUplift# -->
<!--                AND X.DS_CONTR_MACH_LVL_NUM    = #lvlNum1# -->
<!--                AND X.UPLFT_PCY_DT             IS NOT NULL -->
<!--                AND X.EZCANCELFLAG             = '0' -->
<!--                ) -->
<!--              del end 2020/05/26 QC#54318 -->
<!--        UNION -->
<!--        SELECT -->
<!--            A.DS_CONTR_DTL_PK -->
<!--        FROM -->
<!--            DS_CONTR_RNW_ESCL A -->
<!--        WHERE -->
<!--                A.GLBL_CMPY_CD                 = #glblCmpyCd# -->
<!--            AND A.DS_CONTR_PK                  = #dsContrPk# -->
<!--            AND A.DS_CONTR_DTL_PK              = #dsContrDtlPk# -->
<!--            AND A.CONTR_UPLFT_TP_CD     &lt;&gt; #doNotUplift# -->
<!--            AND A.DS_CONTR_MACH_LVL_NUM        = #lvlNum3# -->
<!--            AND A.UPLFT_PCY_DT                 IS NULL -->
<!--            AND A.EZCANCELFLAG                 = '0' -->
<!--              del start 2020/05/26 QC#54318 -->
<!--                AND NOT EXISTS( -->
<!--                SELECT -->
<!--                    1 -->
<!--                FROM -->
<!--                    DS_CONTR_RNW_ESCL X -->
<!--                WHERE -->
<!--                    X.GLBL_CMPY_CD             = A.GLBL_CMPY_CD -->
<!--                AND X.DS_CONTR_PK              = A.DS_CONTR_PK -->
<!--                AND X.DS_CONTR_DTL_PK          = A.DS_CONTR_DTL_PK -->
<!--                AND X.CONTR_UPLFT_TP_CD &lt;&gt; #doNotUplift# -->
<!--                AND X.DS_CONTR_MACH_LVL_NUM    = #lvlNum2# -->
<!--                AND X.UPLFT_PCY_DT             IS NOT NULL -->
<!--                AND X.EZCANCELFLAG             = '0' -->
<!--                ) -->
<!--            AND NOT EXISTS( -->
<!--                SELECT -->
<!--                    1 -->
<!--                FROM -->
<!--                    DS_CONTR_RNW_ESCL X -->
<!--                WHERE -->
<!--                    X.GLBL_CMPY_CD             = A.GLBL_CMPY_CD -->
<!--                AND X.DS_CONTR_PK              = A.DS_CONTR_PK -->
<!--                AND X.CONTR_UPLFT_TP_CD &lt;&gt; #doNotUplift# -->
<!--                AND X.DS_CONTR_MACH_LVL_NUM    = #lvlNum1# -->
<!--                AND X.UPLFT_PCY_DT             IS NOT NULL -->
<!--                AND X.EZCANCELFLAG             = '0' -->
<!--                ) -->
<!--            -->
<!--              del end 2020/05/26 QC#54318 --> 
<!--    </statement> -->
<!-- END 2023/10/18 S.Moriai [QC#61952,DEL] -->
<!-- START 2023/10/18 S.Moriai [QC#61952,ADD] -->
    <statement id="getNotSetUplftPcyDtForContrDtlLVTwo" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            A.DS_CONTR_DTL_PK
        FROM
            DS_CONTR_RNW_ESCL A
           ,DS_CONTR_DTL B
        WHERE
                A.GLBL_CMPY_CD                 = #glblCmpyCd#
            AND A.DS_CONTR_PK                  = #dsContrPk#
            AND A.DS_CONTR_DTL_PK              = #dsContrDtlPk#
            AND A.CONTR_UPLFT_TP_CD     &lt;&gt; #doNotUplift#
            AND A.DS_CONTR_MACH_LVL_NUM        = #lvlNum2#
            AND A.UPLFT_PCY_DT                 IS NULL
            AND A.EZCANCELFLAG                 = '0'
            AND A.DS_CONTR_PK                  = B.DS_CONTR_PK
            AND B.EZCANCELFLAG                 = '0'
            AND B.DS_CONTR_DTL_TP_CD    &lt;&gt; #shell#
            AND B.DS_CONTR_DTL_STS_CD   &lt;&gt; #ordr#
            AND (
                      B.CONTR_RNW_TOT_CNT = 0
                  OR  B.CONTR_RNW_TOT_CNT IS NULL
                 )
    </statement>
    
    <statement id="getNotSetUplftPcyDtForContrDtlLVThree" parameterClass="Map" resultClass="BigDecimal">
         SELECT DISTINCT
            A.DS_CONTR_DTL_PK
        FROM
            DS_CONTR_RNW_ESCL A
           ,DS_CONTR_DTL B
        WHERE
                A.GLBL_CMPY_CD                 = #glblCmpyCd#
            AND A.DS_CONTR_PK                  = #dsContrPk#
            AND A.DS_CONTR_DTL_PK              = #dsContrDtlPk#
            AND A.CONTR_UPLFT_TP_CD     &lt;&gt; #doNotUplift#
            AND A.DS_CONTR_MACH_LVL_NUM        = #lvlNum3#
            AND A.UPLFT_PCY_DT                 IS NULL
            AND A.EZCANCELFLAG                 = '0'
            AND A.DS_CONTR_PK                  = B.DS_CONTR_PK
            AND B.EZCANCELFLAG                 = '0'
            AND B.DS_CONTR_DTL_TP_CD    &lt;&gt; #shell#
            AND B.DS_CONTR_DTL_STS_CD   &lt;&gt; #ordr#
            AND (
                      B.CONTR_RNW_TOT_CNT = 0
                 OR   B.CONTR_RNW_TOT_CNT IS NULL
                 )
    </statement>
<!-- END 2023/10/18 S.Moriai [QC#61952,ADD] -->
<!-- add end 2020/03/24 QC#54318 -->
<!-- START 2023/06/23 T.Usui [QC#61408, ADD] -->
    <statement id="getAnnualEscalationList" parameterClass="Map" resultClass="Map">
        WITH
            IV_ANE_ESCL_B AS (
                        SELECT
                             RNW.DS_CONTR_MACH_LVL_NUM
                            ,RNW.DS_CONTR_PK
                            ,RNW.DS_CONTR_DTL_PK
                            ,COALESCE(RNW.UPLFT_BEF_END_RNW_DAYS_AOT, IDR.BEF_END_UPLFT_DAYS_AOT, 1) AS UPLFT_BEF_END_RNW_DAYS_AOT
                            ,RNW.DS_CONTR_BASE_USG_NM
                            ,CTP.UPLFT_BASE_FLG
                            ,CTP.UPLFT_USG_FLG
                            ,RNW.CONTR_UPLFT_TP_CD
                            ,RNW.UPLFT_PCY_DT
                            ,RNW.MAX_PRC_UP_RATIO
                        FROM
                             DS_CONTR_RNW_ESCL       RNW
                            ,CONTR_UPLFT_TP          CTP
                            ,DS_CONTR                CON
                            ,DS_CONTR_STS_V          CSV
                            ,DS_CONTR_INTFC_DEF_RULE IDR
                        WHERE
                            RNW.GLBL_CMPY_CD             =  #glblCmpyCd#
                            AND RNW.EZCANCELFLAG         =  '0'
                            AND RNW.UPLFT_PRC_METH_CD    IS NOT NULL
                            AND CTP.GLBL_CMPY_CD         =  RNW.GLBL_CMPY_CD
                            AND CTP.CONTR_UPLFT_TP_CD    =  RNW.CONTR_UPLFT_TP_CD
                            AND CTP.EZCANCELFLAG         =  '0'
                            AND CTP.UPLFT_BASE_FLG       =  'Y'
                            AND RNW.GLBL_CMPY_CD         =  CON.GLBL_CMPY_CD
                            AND RNW.DS_CONTR_PK          =  CON.DS_CONTR_PK
                            AND CON.EZCANCELFLAG         =  '0'
                            AND CON.GLBL_CMPY_CD         =  CSV.GLBL_CMPY_CD
                            AND CON.DS_CONTR_PK          =  CSV.DS_CONTR_PK
                            AND CSV.EZCANCELFLAG         =  '0'
                            AND CSV.CONTR_ESCL_AVAL_FLG  =  'N'
                            AND CON.GLBL_CMPY_CD         =  IDR.GLBL_CMPY_CD(+)
                            AND CON.DS_CONTR_SRC_TP_CD   =  IDR.CONTR_INTFC_SRC_TP_CD(+)
                            AND CON.DS_CONTR_CLS_CD      =  IDR.DS_CONTR_CLS_CD(+)
                            AND CON.SVC_LINE_BIZ_CD      =  IDR.SVC_LINE_BIZ_CD(+)
                            AND IDR.EZCANCELFLAG(+)      =  '0'
                            AND IDR.EFF_FROM_DT(+)       &lt;= #slsDt#
                            AND IDR.ENBL_FLG(+)          =  'Y' 
                            AND RNW.DS_CONTR_PK          = #dsContrPk#
            )
           ,IV_ANE_ESCL_U AS (
                        SELECT
                             RNW.DS_CONTR_MACH_LVL_NUM
                            ,RNW.DS_CONTR_PK
                            ,RNW.DS_CONTR_DTL_PK
                            ,COALESCE(RNW.UPLFT_BEF_END_RNW_DAYS_AOT, IDR.BEF_END_UPLFT_DAYS_AOT, 1) AS UPLFT_BEF_END_RNW_DAYS_AOT
                            ,RNW.DS_CONTR_BASE_USG_NM
                            ,CTP.UPLFT_BASE_FLG
                            ,CTP.UPLFT_USG_FLG
                            ,RNW.CONTR_UPLFT_TP_CD
                            ,RNW.UPLFT_PCY_DT
                        FROM
                             DS_CONTR_RNW_ESCL       RNW
                            ,CONTR_UPLFT_TP          CTP
                            ,DS_CONTR                CON
                            ,DS_CONTR_STS_V          CSV
                            ,DS_CONTR_INTFC_DEF_RULE IDR
                        WHERE
                            RNW.GLBL_CMPY_CD             =  #glblCmpyCd#
                            AND RNW.EZCANCELFLAG         =  '0'
                            AND RNW.UPLFT_PRC_METH_CD    IS NOT NULL
                            AND CTP.GLBL_CMPY_CD         =  RNW.GLBL_CMPY_CD
                            AND CTP.CONTR_UPLFT_TP_CD    =  RNW.CONTR_UPLFT_TP_CD
                            AND CTP.EZCANCELFLAG         =  '0'
                            AND CTP.UPLFT_USG_FLG        =  'Y'
                            AND RNW.GLBL_CMPY_CD         =  CON.GLBL_CMPY_CD
                            AND RNW.DS_CONTR_PK          =  CON.DS_CONTR_PK
                            AND CON.EZCANCELFLAG         =  '0'
                            AND CON.GLBL_CMPY_CD         =  CSV.GLBL_CMPY_CD
                            AND CON.DS_CONTR_PK          =  CSV.DS_CONTR_PK
                            AND CSV.EZCANCELFLAG         =  '0'
                            AND CSV.CONTR_ESCL_AVAL_FLG  =  'N'
                            AND CON.GLBL_CMPY_CD         =  IDR.GLBL_CMPY_CD(+)
                            AND CON.DS_CONTR_SRC_TP_CD   =  IDR.CONTR_INTFC_SRC_TP_CD(+)
                            AND CON.DS_CONTR_CLS_CD      =  IDR.DS_CONTR_CLS_CD(+)
                            AND CON.SVC_LINE_BIZ_CD      =  IDR.SVC_LINE_BIZ_CD(+)
                            AND IDR.EZCANCELFLAG(+)      =  '0'
                            AND IDR.EFF_FROM_DT(+)       &lt;= #slsDt#
                            AND IDR.ENBL_FLG(+)          =  'Y'
                            AND RNW.DS_CONTR_PK          = #dsContrPk#
            )
            ,IV_DO_NOT_UPLIFT AS (
                        SELECT
                             DCRE.DS_CONTR_PK
                            ,DCRE.DS_CONTR_DTL_PK
                            ,DCRE.DS_CONTR_MACH_LVL_NUM
                            ,DCRE.DS_CONTR_BASE_USG_NM
                        FROM
                            DS_CONTR_RNW_ESCL DCRE
                        WHERE
                                DCRE.GLBL_CMPY_CD      = #glblCmpyCd#
                            AND DCRE.CONTR_UPLFT_TP_CD = #doNotUplift#
                            AND DCRE.EZCANCELFLAG      = '0'
                            AND DCRE.DS_CONTR_PK       = #dsContrPk#
            )
            ,IV_DTL_STS_V_B AS(
                        SELECT
                             DSV.DS_CONTR_PK
                            ,DSV.DS_CONTR_DTL_PK
                        FROM
                             DS_CONTR_DTL_STS_V DSV
                            ,DS_CONTR_DTL       DTL
                            ,DS_CONTR_DTL_TP    TP
                        WHERE
                            DSV.GLBL_CMPY_CD            = #glblCmpyCd#
                            AND DSV.EZCANCELFLAG        = '0'
                            AND DSV.CONTR_ESCL_AVAL_FLG = 'N'
                            AND EXISTS(
                                SELECT
                                    *
                                FROM
                                    IV_ANE_ESCL_B RNV
                                WHERE
                                    RNV.DS_CONTR_PK = DSV.DS_CONTR_PK
                                )
                            AND DSV.GLBL_CMPY_CD    = DTL.GLBL_CMPY_CD
                            AND DSV.DS_CONTR_DTL_PK = DTL.DS_CONTR_DTL_PK
                            AND DTL.EZCANCELFLAG    = '0'
                            AND (
                                    DTL.CONTR_RNW_TOT_CNT = 0
                                OR  DTL.CONTR_RNW_TOT_CNT IS NULL
                                )
                            AND DTL.GLBL_CMPY_CD       = TP.GLBL_CMPY_CD
                            AND DTL.DS_CONTR_DTL_TP_CD = TP.DS_CONTR_DTL_TP_CD
                            AND TP.EZCANCELFLAG        = '0'
                            AND TP.BASE_CHRG_FLG       = 'Y'
                            AND DTL.DS_CONTR_PK        = #dsContrPk#
            )
            ,IV_DTL_STS_V_U AS(
                        SELECT
                             DSV.DS_CONTR_PK
                            ,DSV.DS_CONTR_DTL_PK
                        FROM
                             DS_CONTR_DTL_STS_V DSV
                            ,DS_CONTR_DTL       DTL
                            ,DS_CONTR_DTL_TP    TP
                        WHERE
                            DSV.GLBL_CMPY_CD            = #glblCmpyCd#
                            AND DSV.EZCANCELFLAG        = '0'
                            AND DSV.CONTR_ESCL_AVAL_FLG = 'N'
                            AND EXISTS(
                                SELECT
                                    *
                                FROM
                                    IV_ANE_ESCL_U RNV
                                WHERE
                                    RNV.DS_CONTR_PK = DSV.DS_CONTR_PK
                                )
                            AND DSV.GLBL_CMPY_CD    = DTL.GLBL_CMPY_CD
                            AND DSV.DS_CONTR_DTL_PK = DTL.DS_CONTR_DTL_PK
                            AND DTL.EZCANCELFLAG    = '0'
                            AND (
                                    DTL.CONTR_RNW_TOT_CNT = 0
                                OR  DTL.CONTR_RNW_TOT_CNT IS NULL
                                )
                            AND DTL.GLBL_CMPY_CD       = TP.GLBL_CMPY_CD
                            AND DTL.DS_CONTR_DTL_TP_CD = TP.DS_CONTR_DTL_TP_CD
                            AND TP.EZCANCELFLAG        = '0'
                            AND TP.USG_CHRG_FLG        = 'Y'
                            AND DTL.DS_CONTR_PK        = #dsContrPk#
            )
        --Regular Lv3/Base
            ,IV_REG_LV3_BASE AS (
                        SELECT
                             DS_CONTR_PK
                            ,DS_CONTR_DTL_PK
                            ,SVC_MACH_MSTR_PK
                            ,LVL_NUM
                            ,UPLFT_PCY_DT AS EFF_FROM_DT
                            ,CONTR_UPLFT_TP_CD
                            ,CONTR_EFF_FROM_DT
                            ,CONTR_EFF_THRU_DT
                            ,DS_CONTR_NUM
                            ,DS_CONTR_CATG_CD
                            ,DS_CONTR_DTL_TP_CD
                            ,CONTR_CLO_DAY
                            ,DS_CONTR_BASE_USG_NM
                        FROM (
                            SELECT
                                 DTL.DS_CONTR_PK                DS_CONTR_PK
                                ,DTL.DS_CONTR_DTL_PK            DS_CONTR_DTL_PK
                                ,DTL.SVC_MACH_MSTR_PK           SVC_MACH_MSTR_PK
                                ,#dsContrMachLvl3#                            LVL_NUM
                                ,IAB.CONTR_UPLFT_TP_CD          CONTR_UPLFT_TP_CD
                                ,DTL.CONTR_EFF_FROM_DT          CONTR_EFF_FROM_DT
                                ,NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)  CONTR_EFF_THRU_DT
                                ,HDR.DS_CONTR_NUM
                                ,HDR.DS_CONTR_CATG_CD
                                ,DTL.DS_CONTR_DTL_TP_CD
                                ,DTL.CONTR_CLO_DAY
                                ,DTL.UPLFT_EFF_FROM_DT
                                ,IAB.UPLFT_PCY_DT
                                ,IAB.DS_CONTR_BASE_USG_NM
                            FROM
                                 DS_CONTR               HDR
                                ,DS_CONTR_DTL           DTL
                                ,IV_ANE_ESCL_B          IAB
                                ,IV_DTL_STS_V_B         DTV
                            WHERE
                                    HDR.GLBL_CMPY_CD                =  #glblCmpyCd#
                                AND HDR.DS_CONTR_CATG_CD            =  #dsContrCatgReg#
                                AND HDR.EZCANCELFLAG                =  '0'
                                AND HDR.GLBL_CMPY_CD                =  DTL.GLBL_CMPY_CD
                                AND HDR.DS_CONTR_PK                 =  DTL.DS_CONTR_PK
                                AND DTL.EZCANCELFLAG                =  '0'
                                AND DTL.DS_CONTR_PK                 =  IAB.DS_CONTR_PK
                                AND DTL.DS_CONTR_DTL_PK             =  IAB.DS_CONTR_DTL_PK
                                AND NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)
                                                                    &gt;= #slsDt#
                                AND IAB.DS_CONTR_MACH_LVL_NUM       =  #dsContrMachLvl3#
                                AND IAB.DS_CONTR_BASE_USG_NM        =  #dsContrBaseUsgNmBase#
                                AND DTL.DS_CONTR_DTL_PK             = DTV.DS_CONTR_DTL_PK
                            )
            )
        --Regular Lv3/Usage
            ,IV_REG_LV3_USAGE AS (
                        SELECT
                             DS_CONTR_PK
                            ,DS_CONTR_DTL_PK
                            ,SVC_MACH_MSTR_PK
                            ,LVL_NUM
                            ,UPLFT_PCY_DT AS EFF_FROM_DT
                            ,CONTR_UPLFT_TP_CD
                            ,CONTR_EFF_FROM_DT
                            ,CONTR_EFF_THRU_DT
                            ,DS_CONTR_NUM
                            ,DS_CONTR_CATG_CD
                            ,DS_CONTR_DTL_TP_CD
                            ,CONTR_CLO_DAY
                            ,DS_CONTR_BASE_USG_NM
                        FROM (
                            SELECT
                                 DTL.DS_CONTR_PK                DS_CONTR_PK
                                ,DTL.DS_CONTR_DTL_PK            DS_CONTR_DTL_PK
                                ,DTL.SVC_MACH_MSTR_PK           SVC_MACH_MSTR_PK
                                ,#dsContrMachLvl3#              LVL_NUM
                                ,IAU.CONTR_UPLFT_TP_CD         CONTR_UPLFT_TP_CD
                                ,DTL.CONTR_EFF_FROM_DT          CONTR_EFF_FROM_DT
                                ,NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)  CONTR_EFF_THRU_DT
                                ,HDR.DS_CONTR_NUM
                                ,HDR.DS_CONTR_CATG_CD
                                ,DTL.DS_CONTR_DTL_TP_CD
                                ,DTL.CONTR_CLO_DAY
                                ,DTL.UPLFT_EFF_FROM_DT
                                ,IAU.UPLFT_PCY_DT
                                ,IAU.DS_CONTR_BASE_USG_NM
                            FROM
                                 DS_CONTR               HDR
                                ,DS_CONTR_DTL           DTL
                                ,IV_ANE_ESCL_U          IAU
                                ,IV_DTL_STS_V_U         DTV
                            WHERE
                                    HDR.GLBL_CMPY_CD                =  #glblCmpyCd#
                                AND HDR.DS_CONTR_CATG_CD            =  #dsContrCatgReg#
                                AND HDR.EZCANCELFLAG                =  '0'
                                AND HDR.GLBL_CMPY_CD                =  DTL.GLBL_CMPY_CD
                                AND HDR.DS_CONTR_PK                 =  DTL.DS_CONTR_PK
                                AND DTL.EZCANCELFLAG                =  '0'
                                AND DTL.DS_CONTR_PK                 =  IAU.DS_CONTR_PK
                                AND DTL.DS_CONTR_DTL_PK             =  IAU.DS_CONTR_DTL_PK
                                <!-- START 2023/10/18 S.Moriai [QC#61952,DEL] -->
                                <!--AND DTL.UPLFT_EFF_FROM_DT        &lt;= #slsDt# -->
                                <!--    OR DTL.UPLFT_EFF_FROM_DT        IS NULL -->
                                <!-- END 2023/10/18 S.Moriai [QC#61952,DEL] --> 
                                AND NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)
                                                                    &gt;= #slsDt#
                                AND IAU.DS_CONTR_MACH_LVL_NUM       =  #dsContrMachLvl3#
                                AND IAU.DS_CONTR_BASE_USG_NM        =  #dsContrBaseUsgNmUsage#
                                AND DTL.DS_CONTR_DTL_PK             = DTV.DS_CONTR_DTL_PK
                            )
            )
        --Regular Lv2/Base
            ,IV_REG_LV2_BASE AS (
                        SELECT
                             DS_CONTR_PK
                            ,DS_CONTR_DTL_PK
                            ,SVC_MACH_MSTR_PK
                            ,LVL_NUM
                            ,    (CASE WHEN UPLFT_EFF_FROM_DT IS NULL
                                    THEN UPLFT_PCY_DT
                                    ELSE TO_CHAR(ADD_MONTHS(TO_DATE(NVL(UPLFT_EFF_FROM_DT, UPLFT_PCY_DT), 'YYYYMMDD'), 12),  'YYYYMMDD')
                             END) AS EFF_FROM_DT
                            ,CONTR_UPLFT_TP_CD
                            ,CONTR_EFF_FROM_DT
                            ,CONTR_EFF_THRU_DT
                            ,DS_CONTR_NUM
                            ,DS_CONTR_CATG_CD
                            ,DS_CONTR_DTL_TP_CD
                            ,CONTR_CLO_DAY
                            ,DS_CONTR_BASE_USG_NM
                        FROM (
                            SELECT
                                 DTL.DS_CONTR_PK                DS_CONTR_PK
                                ,DTL.DS_CONTR_DTL_PK            DS_CONTR_DTL_PK
                                ,DTL.SVC_MACH_MSTR_PK           SVC_MACH_MSTR_PK
                                ,#dsContrMachLvl2#                            LVL_NUM
                                ,IAB.CONTR_UPLFT_TP_CD          CONTR_UPLFT_TP_CD
                                ,DTL.CONTR_EFF_FROM_DT          CONTR_EFF_FROM_DT
                                ,NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)  CONTR_EFF_THRU_DT
                                ,HDR.DS_CONTR_NUM
                                ,HDR.DS_CONTR_CATG_CD
                                ,DTL.DS_CONTR_DTL_TP_CD
                                ,DTL.CONTR_CLO_DAY
                                ,DTL.UPLFT_EFF_FROM_DT
                                ,IAB.UPLFT_PCY_DT
                                ,IAB.DS_CONTR_BASE_USG_NM
                            FROM
                                 DS_CONTR               HDR
                                ,DS_CONTR_DTL           DTL
                                ,IV_ANE_ESCL_B          IAB
                                ,IV_DTL_STS_V_B         DTV
                            WHERE
                                    HDR.GLBL_CMPY_CD                = #glblCmpyCd#
                                AND HDR.DS_CONTR_CATG_CD            = #dsContrCatgReg#
                                AND HDR.EZCANCELFLAG                = '0'
                                AND HDR.GLBL_CMPY_CD                = DTL.GLBL_CMPY_CD
                                AND HDR.DS_CONTR_PK                 = DTL.DS_CONTR_PK
                                AND DTL.EZCANCELFLAG                = '0'
                                AND DTL.DS_CONTR_PK                 = IAB.DS_CONTR_PK
                                AND DTL.DS_CONTR_DTL_PK             = IAB.DS_CONTR_DTL_PK
                                AND NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)
                                                                    &gt;= #slsDt#
                                AND IAB.DS_CONTR_MACH_LVL_NUM       = #dsContrMachLvl2#
                                AND DTL.DS_CONTR_DTL_PK             = DTV.DS_CONTR_DTL_PK
                                AND NOT EXISTS(
                                    SELECT
                                        *
                                    FROM
                                        DS_CONTR_RNW_ESCL AEV3
                                    WHERE
                                        AEV3.DS_CONTR_PK             = DTL.DS_CONTR_PK
                                    AND AEV3.DS_CONTR_DTL_PK         = DTL.DS_CONTR_DTL_PK
                                    AND AEV3.DS_CONTR_MACH_LVL_NUM   = #dsContrMachLvl3#
                                    AND AEV3.DS_CONTR_BASE_USG_NM    = #dsContrBaseUsgNmBase#
                                    AND AEV3.EZCANCELFLAG            = '0'
                                    AND AEV3.UPLFT_PCY_DT            IS NOT NULL
                                    )
                                AND NOT EXISTS(
                                    SELECT
                                        *
                                    FROM
                                        IV_DO_NOT_UPLIFT IDNP
                                    WHERE
                                        IDNP.DS_CONTR_PK             = DTL.DS_CONTR_PK
                                    AND IDNP.DS_CONTR_DTL_PK         = DTL.DS_CONTR_DTL_PK
                                    AND IDNP.DS_CONTR_MACH_LVL_NUM   = #dsContrMachLvl3#
                                    AND IDNP.DS_CONTR_BASE_USG_NM    = #dsContrBaseUsgNmBase#
                                    )
                              )
            )
        --Regular Lv2/Usage
            ,IV_REG_LV2_USAGE AS (
                        SELECT
                             DS_CONTR_PK
                            ,DS_CONTR_DTL_PK
                            ,SVC_MACH_MSTR_PK
                            ,LVL_NUM
                            ,    (CASE WHEN UPLFT_EFF_FROM_DT IS NULL
                                    THEN UPLFT_PCY_DT
                                    ELSE TO_CHAR(ADD_MONTHS(TO_DATE(NVL(UPLFT_EFF_FROM_DT, UPLFT_PCY_DT), 'YYYYMMDD'), 12),  'YYYYMMDD')
                             END) AS EFF_FROM_DT
                            ,CONTR_UPLFT_TP_CD
                            ,CONTR_EFF_FROM_DT
                            ,CONTR_EFF_THRU_DT
                            ,DS_CONTR_NUM
                            ,DS_CONTR_CATG_CD
                            ,DS_CONTR_DTL_TP_CD
                            ,CONTR_CLO_DAY
                            ,DS_CONTR_BASE_USG_NM
                        FROM (
                            SELECT
                                 DTL.DS_CONTR_PK                DS_CONTR_PK
                                ,DTL.DS_CONTR_DTL_PK            DS_CONTR_DTL_PK
                                ,DTL.SVC_MACH_MSTR_PK           SVC_MACH_MSTR_PK
                                ,#dsContrMachLvl2#                            LVL_NUM
                                ,IAU.CONTR_UPLFT_TP_CD          CONTR_UPLFT_TP_CD
                                ,DTL.CONTR_EFF_FROM_DT          CONTR_EFF_FROM_DT
                                ,NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)  CONTR_EFF_THRU_DT
                                ,HDR.DS_CONTR_NUM
                                ,HDR.DS_CONTR_CATG_CD
                                ,DTL.DS_CONTR_DTL_TP_CD
                                ,DTL.CONTR_CLO_DAY
                                ,DTL.UPLFT_EFF_FROM_DT
                                ,IAU.UPLFT_PCY_DT
                                ,IAU.DS_CONTR_BASE_USG_NM
                            FROM
                                 DS_CONTR               HDR
                                ,DS_CONTR_DTL           DTL
                                ,IV_ANE_ESCL_U          IAU
                                ,IV_DTL_STS_V_U         DTV
                            WHERE
                                    HDR.GLBL_CMPY_CD                =  #glblCmpyCd#
                                AND HDR.DS_CONTR_CATG_CD            =  #dsContrCatgReg#
                                AND HDR.EZCANCELFLAG                =  '0'
                                AND HDR.GLBL_CMPY_CD                =  DTL.GLBL_CMPY_CD
                                AND HDR.DS_CONTR_PK                 =  DTL.DS_CONTR_PK
                                AND DTL.EZCANCELFLAG                =  '0'
                                AND DTL.DS_CONTR_PK                 =  IAU.DS_CONTR_PK
                                AND DTL.DS_CONTR_DTL_PK             =  IAU.DS_CONTR_DTL_PK
                                AND NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)
                                                                    &gt;= #slsDt#
                                AND IAU.DS_CONTR_MACH_LVL_NUM       =  #dsContrMachLvl2#
                                AND DTL.DS_CONTR_DTL_PK             =  DTV.DS_CONTR_DTL_PK
                                AND NOT EXISTS(
                                    SELECT
                                        *
                                    FROM
                                        DS_CONTR_RNW_ESCL AEV3
                                    WHERE
                                        AEV3.DS_CONTR_PK             = DTL.DS_CONTR_PK
                                    AND AEV3.DS_CONTR_DTL_PK         = DTL.DS_CONTR_DTL_PK
                                    AND AEV3.DS_CONTR_MACH_LVL_NUM   = #dsContrMachLvl3#
                                    AND AEV3.DS_CONTR_BASE_USG_NM    = #dsContrBaseUsgNmUsage#
                                    AND AEV3.EZCANCELFLAG            = '0'
                                    AND AEV3.UPLFT_PCY_DT            IS NOT NULL
                                    )
                                AND NOT EXISTS(
                                    SELECT
                                        *
                                    FROM
                                        IV_DO_NOT_UPLIFT IDNP
                                    WHERE
                                        IDNP.DS_CONTR_PK           = DTL.DS_CONTR_PK
                                    AND IDNP.DS_CONTR_DTL_PK       = DTL.DS_CONTR_DTL_PK
                                    AND IDNP.DS_CONTR_MACH_LVL_NUM = #dsContrMachLvl3#
                                    AND IDNP.DS_CONTR_BASE_USG_NM  = #dsContrBaseUsgNmUsage#)
                            )
            )
        --Regular Lv1/Base
            ,IV_REG_LV1_BASE AS (
                        SELECT
                             DS_CONTR_PK
                            ,DS_CONTR_DTL_PK
                            ,SVC_MACH_MSTR_PK
                            ,LVL_NUM
                            ,    (CASE WHEN UPLFT_EFF_FROM_DT IS NULL
                                    THEN UPLFT_PCY_DT
                                    ELSE TO_CHAR(ADD_MONTHS(TO_DATE(NVL(UPLFT_EFF_FROM_DT, UPLFT_PCY_DT), 'YYYYMMDD'), 12),  'YYYYMMDD')
                             END) AS EFF_FROM_DT
                            ,CONTR_UPLFT_TP_CD
                            ,CONTR_EFF_FROM_DT
                            ,CONTR_EFF_THRU_DT
                            ,DS_CONTR_NUM
                            ,DS_CONTR_CATG_CD
                            ,DS_CONTR_DTL_TP_CD
                            ,CONTR_CLO_DAY
                            ,DS_CONTR_BASE_USG_NM
                        FROM
                            (
                        SELECT
                             DTL.DS_CONTR_PK                DS_CONTR_PK
                            ,DTL.DS_CONTR_DTL_PK            DS_CONTR_DTL_PK
                            ,DTL.SVC_MACH_MSTR_PK           SVC_MACH_MSTR_PK
                            ,#dsContrMachLvl1#                            LVL_NUM
                            ,IAB.CONTR_UPLFT_TP_CD          CONTR_UPLFT_TP_CD
                            ,DTL.CONTR_EFF_FROM_DT          CONTR_EFF_FROM_DT
                            ,NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)  CONTR_EFF_THRU_DT
                            ,HDR.DS_CONTR_NUM
                            ,HDR.DS_CONTR_CATG_CD
                            ,DTL.DS_CONTR_DTL_TP_CD
                            ,DTL.CONTR_CLO_DAY
                            ,DTL.UPLFT_EFF_FROM_DT
                            ,IAB.UPLFT_PCY_DT
                            ,IAB.DS_CONTR_BASE_USG_NM
                        FROM
                             DS_CONTR               HDR
                            ,DS_CONTR_DTL           DTL
                            ,IV_ANE_ESCL_B          IAB
                            ,IV_DTL_STS_V_B         DTV
                        WHERE
                                HDR.GLBL_CMPY_CD                =  #glblCmpyCd#
                            AND HDR.DS_CONTR_CATG_CD            =  #dsContrCatgReg#
                            AND HDR.EZCANCELFLAG                =  '0'
                            AND HDR.GLBL_CMPY_CD                =  DTL.GLBL_CMPY_CD
                            AND HDR.DS_CONTR_PK                 =  DTL.DS_CONTR_PK
                            AND DTL.EZCANCELFLAG                =  '0'
                            AND DTL.DS_CONTR_PK                 =  IAB.DS_CONTR_PK
                            AND NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)
                                                                &gt;= #slsDt#
                            AND IAB.DS_CONTR_MACH_LVL_NUM       =  #dsContrMachLvl1#
                            AND DTL.DS_CONTR_DTL_PK             = DTV.DS_CONTR_DTL_PK
                            AND NOT EXISTS(
                                SELECT
                                    *
                                FROM
                                    DS_CONTR_RNW_ESCL AEV3
                                WHERE
                                    AEV3.DS_CONTR_PK             = DTL.DS_CONTR_PK
                                AND AEV3.DS_CONTR_DTL_PK         = DTL.DS_CONTR_DTL_PK
                                AND AEV3.DS_CONTR_MACH_LVL_NUM   = #dsContrMachLvl3#
                                AND AEV3.DS_CONTR_BASE_USG_NM    = #dsContrBaseUsgNmBase#
                                AND AEV3.EZCANCELFLAG            = '0'
                                AND AEV3.UPLFT_PCY_DT            IS NOT NULL
                                )
                            AND NOT EXISTS(
                                SELECT
                                    *
                                FROM
                                    DS_CONTR_RNW_ESCL AEV2
                                WHERE
                                    AEV2.DS_CONTR_PK             = DTL.DS_CONTR_PK
                                AND AEV2.DS_CONTR_DTL_PK         = DTL.DS_CONTR_DTL_PK
                                AND AEV2.DS_CONTR_MACH_LVL_NUM   = #dsContrMachLvl2#
                                AND AEV2.EZCANCELFLAG            = '0'
                                AND AEV2.UPLFT_PCY_DT            IS NOT NULL
                                )
                            AND NOT EXISTS(
                                SELECT
                                    *
                                FROM
                                    IV_DO_NOT_UPLIFT IDNP
                                WHERE
                                    IDNP.DS_CONTR_PK               = DTL.DS_CONTR_PK
                                AND IDNP.DS_CONTR_DTL_PK       = DTL.DS_CONTR_DTL_PK
                                AND IDNP.DS_CONTR_MACH_LVL_NUM = #dsContrMachLvl3#
                                AND IDNP.DS_CONTR_BASE_USG_NM  = #dsContrBaseUsgNmBase#
                                )
                            AND NOT EXISTS(
                                SELECT
                                    *
                                FROM
                                    IV_DO_NOT_UPLIFT IDNP
                                WHERE
                                    IDNP.DS_CONTR_PK           = DTL.DS_CONTR_PK
                                AND IDNP.DS_CONTR_DTL_PK       = DTL.DS_CONTR_DTL_PK
                                AND IDNP.DS_CONTR_MACH_LVL_NUM = #dsContrMachLvl2#
                                )
                        )
            )
        --Regular Lv1/Usage
            ,IV_REG_LV1_USAGE AS (
                        SELECT
                             DS_CONTR_PK
                            ,DS_CONTR_DTL_PK
                            ,SVC_MACH_MSTR_PK
                            ,LVL_NUM
                            ,    (CASE WHEN UPLFT_EFF_FROM_DT IS NULL
                                    THEN UPLFT_PCY_DT
                                    ELSE TO_CHAR(ADD_MONTHS(TO_DATE(NVL(UPLFT_EFF_FROM_DT, UPLFT_PCY_DT), 'YYYYMMDD'), 12),  'YYYYMMDD')
                             END) AS EFF_FROM_DT
                            ,CONTR_UPLFT_TP_CD
                            ,CONTR_EFF_FROM_DT
                            ,CONTR_EFF_THRU_DT
                            ,DS_CONTR_NUM
                            ,DS_CONTR_CATG_CD
                            ,DS_CONTR_DTL_TP_CD
                            ,CONTR_CLO_DAY
                            ,DS_CONTR_BASE_USG_NM
                        FROM (
                            SELECT
                                 DTL.DS_CONTR_PK                DS_CONTR_PK
                                ,DTL.DS_CONTR_DTL_PK            DS_CONTR_DTL_PK
                                ,DTL.SVC_MACH_MSTR_PK           SVC_MACH_MSTR_PK
                                ,#dsContrMachLvl1#                            LVL_NUM
                                ,IAU.CONTR_UPLFT_TP_CD          CONTR_UPLFT_TP_CD
                                ,DTL.CONTR_EFF_FROM_DT          CONTR_EFF_FROM_DT
                                ,NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)  CONTR_EFF_THRU_DT
                                ,HDR.DS_CONTR_NUM
                                ,HDR.DS_CONTR_CATG_CD
                                ,DTL.DS_CONTR_DTL_TP_CD
                                ,DTL.CONTR_CLO_DAY
                                ,DTL.UPLFT_EFF_FROM_DT
                                ,IAU.UPLFT_PCY_DT
                                ,IAU.DS_CONTR_BASE_USG_NM
                            FROM
                                 DS_CONTR               HDR
                                ,DS_CONTR_DTL           DTL
                                ,IV_ANE_ESCL_U          IAU
                                ,IV_DTL_STS_V_U         DTV
                            WHERE
                                    HDR.GLBL_CMPY_CD                =  #glblCmpyCd#
                                AND HDR.DS_CONTR_CATG_CD            =  #dsContrCatgReg#
                                AND HDR.EZCANCELFLAG                =  '0'
                                AND HDR.GLBL_CMPY_CD                =  DTL.GLBL_CMPY_CD
                                AND HDR.DS_CONTR_PK                 =  DTL.DS_CONTR_PK
                                AND DTL.EZCANCELFLAG                =  '0'
                                AND DTL.DS_CONTR_PK                 =  IAU.DS_CONTR_PK
                                AND NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)
                                                                    &gt;= #slsDt#
                                AND IAU.DS_CONTR_MACH_LVL_NUM       = #dsContrMachLvl1#
                                AND DTL.DS_CONTR_DTL_PK             = DTV.DS_CONTR_DTL_PK
                                AND NOT EXISTS(
                                    SELECT
                                        *
                                    FROM
                                        DS_CONTR_RNW_ESCL AEV3
                                    WHERE
                                        AEV3.DS_CONTR_PK             =  DTL.DS_CONTR_PK
                                    AND AEV3.DS_CONTR_DTL_PK         =  DTL.DS_CONTR_DTL_PK
                                    AND AEV3.DS_CONTR_MACH_LVL_NUM   = #dsContrMachLvl3#
                                    AND AEV3.DS_CONTR_BASE_USG_NM    =  #dsContrBaseUsgNmUsage#
                                    AND AEV3.EZCANCELFLAG            = '0'
                                    AND AEV3.UPLFT_PCY_DT            IS NOT NULL
                                    )
                                AND NOT EXISTS(
                                    SELECT
                                        *
                                    FROM
                                        DS_CONTR_RNW_ESCL AEV2
                                    WHERE
                                        AEV2.DS_CONTR_PK             =  DTL.DS_CONTR_PK
                                    AND AEV2.DS_CONTR_DTL_PK         =  DTL.DS_CONTR_DTL_PK
                                    AND AEV2.DS_CONTR_MACH_LVL_NUM   =  #dsContrMachLvl2#
                                    AND AEV2.EZCANCELFLAG            = '0'
                                    AND AEV2.UPLFT_PCY_DT            IS NOT NULL
                                    )
                                AND NOT EXISTS(
                                    SELECT
                                        *
                                    FROM
                                        IV_DO_NOT_UPLIFT IDNP
                                    WHERE
                                        IDNP.DS_CONTR_PK           = DTL.DS_CONTR_PK
                                    AND IDNP.DS_CONTR_DTL_PK       = DTL.DS_CONTR_DTL_PK
                                    AND IDNP.DS_CONTR_MACH_LVL_NUM = #dsContrMachLvl3#
                                    AND IDNP.DS_CONTR_BASE_USG_NM  = #dsContrBaseUsgNmUsage#
                                    )
                                AND NOT EXISTS(
                                    SELECT
                                        *
                                    FROM
                                        IV_DO_NOT_UPLIFT IDNP
                                    WHERE
                                        IDNP.DS_CONTR_PK           = DTL.DS_CONTR_PK
                                    AND IDNP.DS_CONTR_DTL_PK       = DTL.DS_CONTR_DTL_PK
                                    AND IDNP.DS_CONTR_MACH_LVL_NUM = #dsContrMachLvl2#
                                    )
                            )
            )
        --Fleet Lv3/Base
            ,IV_FLT_LV3_BASE AS (
                        SELECT
                             DS_CONTR_PK
                            ,DS_CONTR_DTL_PK
                            ,SVC_MACH_MSTR_PK
                            ,LVL_NUM
                            ,    (CASE WHEN UPLFT_EFF_FROM_DT IS NULL
                                    THEN UPLFT_PCY_DT
                                    ELSE TO_CHAR(ADD_MONTHS(TO_DATE(NVL(UPLFT_EFF_FROM_DT, UPLFT_PCY_DT), 'YYYYMMDD'), 12),  'YYYYMMDD')
                             END) AS EFF_FROM_DT
                            ,CONTR_UPLFT_TP_CD
                            ,CONTR_EFF_FROM_DT
                            ,CONTR_EFF_THRU_DT
                            ,DS_CONTR_NUM
                            ,DS_CONTR_CATG_CD
                            ,DS_CONTR_DTL_TP_CD
                            ,CONTR_CLO_DAY
                            ,DS_CONTR_BASE_USG_NM
                        FROM
                            (
                            SELECT
                                 DTL.DS_CONTR_PK                DS_CONTR_PK
                                ,DTL.DS_CONTR_DTL_PK            DS_CONTR_DTL_PK
                                ,DTL.SVC_MACH_MSTR_PK           SVC_MACH_MSTR_PK
                                ,#dsContrMachLvl3#                            LVL_NUM
                                ,IAB.CONTR_UPLFT_TP_CD          CONTR_UPLFT_TP_CD
                                ,DTL.CONTR_EFF_FROM_DT          CONTR_EFF_FROM_DT
                                ,NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)  CONTR_EFF_THRU_DT
                                ,HDR.DS_CONTR_NUM
                                ,HDR.DS_CONTR_CATG_CD
                                ,DTL.DS_CONTR_DTL_TP_CD
                                ,DTL.CONTR_CLO_DAY
                                ,DTL.UPLFT_EFF_FROM_DT
                                ,IAB.UPLFT_PCY_DT
                                ,IAB.DS_CONTR_BASE_USG_NM
                            FROM
                                 DS_CONTR               HDR
                                ,DS_CONTR_DTL           DTL
                                ,IV_ANE_ESCL_B          IAB
                                ,IV_DTL_STS_V_B         DTV
                            WHERE
                                    HDR.GLBL_CMPY_CD                =  #glblCmpyCd#
                                AND HDR.DS_CONTR_CATG_CD            =  #dsContrCatgFlt#
                                AND HDR.EZCANCELFLAG                =  '0'
                                AND HDR.GLBL_CMPY_CD                =  DTL.GLBL_CMPY_CD
                                AND HDR.DS_CONTR_PK                 =  DTL.DS_CONTR_PK
                                AND DTL.EZCANCELFLAG                =  '0'
                                AND DTL.DS_CONTR_PK                 =  IAB.DS_CONTR_PK
                                AND DTL.DS_CONTR_DTL_PK             =  IAB.DS_CONTR_DTL_PK
                                AND DTL.DS_CONTR_DTL_TP_CD          =  #dsContrDtlTpCdFlt#
                                AND NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)
                                                                    &gt;= #slsDt#
                                AND IAB.DS_CONTR_MACH_LVL_NUM       =  #dsContrMachLvl3#
                                AND IAB.DS_CONTR_BASE_USG_NM        =  #dsContrBaseUsgNmBase#
                                AND DTL.DS_CONTR_DTL_PK             =  DTV.DS_CONTR_DTL_PK
                            )
            )
        --Fleet Lv3/Usage
            ,IV_FLT_LV3_USAGE AS (
                        SELECT
                             DS_CONTR_PK
                            ,DS_CONTR_DTL_PK
                            ,SVC_MACH_MSTR_PK
                            ,LVL_NUM
                            ,    (CASE WHEN UPLFT_EFF_FROM_DT IS NULL
                                    THEN UPLFT_PCY_DT
                                    ELSE TO_CHAR(ADD_MONTHS(TO_DATE(NVL(UPLFT_EFF_FROM_DT, UPLFT_PCY_DT), 'YYYYMMDD'), 12),  'YYYYMMDD')
                             END) AS EFF_FROM_DT
                            ,CONTR_UPLFT_TP_CD
                            ,CONTR_EFF_FROM_DT
                            ,CONTR_EFF_THRU_DT
                            ,DS_CONTR_NUM
                            ,DS_CONTR_CATG_CD
                            ,DS_CONTR_DTL_TP_CD
                            ,CONTR_CLO_DAY
                            ,DS_CONTR_BASE_USG_NM
                        FROM
                            (
                            SELECT
                                 DTL.DS_CONTR_PK                DS_CONTR_PK
                                ,DTL.DS_CONTR_DTL_PK            DS_CONTR_DTL_PK
                                ,DTL.SVC_MACH_MSTR_PK           SVC_MACH_MSTR_PK
                                ,#dsContrMachLvl3#                            LVL_NUM
                                ,IAU.CONTR_UPLFT_TP_CD          CONTR_UPLFT_TP_CD
                                ,DTL.CONTR_EFF_FROM_DT          CONTR_EFF_FROM_DT
                                ,NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)  CONTR_EFF_THRU_DT
                                ,HDR.DS_CONTR_NUM
                                ,HDR.DS_CONTR_CATG_CD
                                ,DTL.DS_CONTR_DTL_TP_CD
                                ,DTL.CONTR_CLO_DAY
                                ,DTL.UPLFT_EFF_FROM_DT
                                ,IAU.UPLFT_PCY_DT
                                ,IAU.DS_CONTR_BASE_USG_NM
                            FROM
                                 DS_CONTR               HDR
                                ,DS_CONTR_DTL           DTL
                                ,IV_ANE_ESCL_U          IAU
                                ,IV_DTL_STS_V_U         DTV
                            WHERE
                                    HDR.GLBL_CMPY_CD                =  #glblCmpyCd#
                                AND HDR.DS_CONTR_CATG_CD            =  #dsContrCatgFlt#
                                AND HDR.EZCANCELFLAG                =  '0'
                                AND HDR.GLBL_CMPY_CD                =  DTL.GLBL_CMPY_CD
                                AND HDR.DS_CONTR_PK                 =  DTL.DS_CONTR_PK
                                AND DTL.EZCANCELFLAG                =  '0'
                                AND DTL.DS_CONTR_PK                 =  IAU.DS_CONTR_PK
                                AND DTL.DS_CONTR_DTL_PK             =  IAU.DS_CONTR_DTL_PK
                                AND DTL.DS_CONTR_DTL_TP_CD          =  #dsContrDtlTpCdFlt#
                                AND NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)
                                                                    &gt;= #slsDt#
                                AND IAU.DS_CONTR_MACH_LVL_NUM       =  #dsContrMachLvl3#
                                AND IAU.DS_CONTR_BASE_USG_NM        =  #dsContrBaseUsgNmUsage#
                                AND DTL.DS_CONTR_DTL_PK             =  DTV.DS_CONTR_DTL_PK
                            )
            )
        --Fleet Lv2/Base
            ,IV_FLT_LV2_BASE AS (
                        SELECT
                             DS_CONTR_PK
                            ,DS_CONTR_DTL_PK
                            ,SVC_MACH_MSTR_PK
                            ,LVL_NUM
                            ,    (CASE WHEN UPLFT_EFF_FROM_DT IS NULL
                                    THEN UPLFT_PCY_DT
                                    ELSE TO_CHAR(ADD_MONTHS(TO_DATE(NVL(UPLFT_EFF_FROM_DT, UPLFT_PCY_DT), 'YYYYMMDD'), 12),  'YYYYMMDD')
                             END) AS EFF_FROM_DT
                            ,CONTR_UPLFT_TP_CD
                            ,CONTR_EFF_FROM_DT
                            ,CONTR_EFF_THRU_DT
                            ,DS_CONTR_NUM
                            ,DS_CONTR_CATG_CD
                            ,DS_CONTR_DTL_TP_CD
                            ,CONTR_CLO_DAY
                            ,DS_CONTR_BASE_USG_NM
                        FROM
                            (
                            SELECT
                                 DTL.DS_CONTR_PK                DS_CONTR_PK
                                ,DTL.DS_CONTR_DTL_PK            DS_CONTR_DTL_PK
                                ,DTL.SVC_MACH_MSTR_PK           SVC_MACH_MSTR_PK
                                ,#dsContrMachLvl2#              LVL_NUM
                                ,IAB.CONTR_UPLFT_TP_CD          CONTR_UPLFT_TP_CD
                                ,DTL.CONTR_EFF_FROM_DT          CONTR_EFF_FROM_DT
                                ,NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)  CONTR_EFF_THRU_DT
                                ,HDR.DS_CONTR_NUM
                                ,HDR.DS_CONTR_CATG_CD
                                ,DTL.DS_CONTR_DTL_TP_CD
                                ,DTL.CONTR_CLO_DAY
                                ,DTL.UPLFT_EFF_FROM_DT
                                ,IAB.UPLFT_PCY_DT
                                ,IAB.DS_CONTR_BASE_USG_NM
                            FROM
                                 DS_CONTR               HDR
                                ,DS_CONTR_DTL           DTL
                                ,IV_ANE_ESCL_B          IAB
                                ,IV_DTL_STS_V_B         DTV
                            WHERE
                                    HDR.GLBL_CMPY_CD                =  #glblCmpyCd#
                                AND HDR.DS_CONTR_CATG_CD            =  #dsContrCatgFlt#
                                AND HDR.EZCANCELFLAG                =  '0'
                                AND HDR.GLBL_CMPY_CD                =  DTL.GLBL_CMPY_CD
                                AND HDR.DS_CONTR_PK                 =  DTL.DS_CONTR_PK
                                AND DTL.EZCANCELFLAG                =  '0'
                                AND DTL.DS_CONTR_PK                 =  IAB.DS_CONTR_PK
                                AND DTL.DS_CONTR_DTL_PK             =  IAB.DS_CONTR_DTL_PK
                                AND DTL.DS_CONTR_DTL_TP_CD          =  #dsContrDtlTpCdFlt#
                                AND NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)
                                                                    &gt;= #slsDt#
                                AND IAB.DS_CONTR_MACH_LVL_NUM       =  #dsContrMachLvl2#
                                AND DTL.DS_CONTR_DTL_PK             =  DTV.DS_CONTR_DTL_PK
                                AND NOT EXISTS(
                                    SELECT
                                        *
                                    FROM
                                        DS_CONTR_RNW_ESCL AEV3
                                    WHERE
                                        AEV3.DS_CONTR_PK             = DTL.DS_CONTR_PK
                                    AND AEV3.DS_CONTR_DTL_PK         = DTL.DS_CONTR_DTL_PK
                                    AND AEV3.DS_CONTR_MACH_LVL_NUM   = #dsContrMachLvl3#
                                    AND AEV3.DS_CONTR_BASE_USG_NM    = #dsContrBaseUsgNmBase#
                                    AND AEV3.EZCANCELFLAG            = '0'
                                    AND AEV3.UPLFT_PCY_DT            IS NOT NULL
                                    )
                                AND NOT EXISTS(
                                    SELECT
                                        *
                                    FROM
                                        IV_DO_NOT_UPLIFT IDNP
                                    WHERE
                                        IDNP.DS_CONTR_PK               = DTL.DS_CONTR_PK
                                    AND IDNP.DS_CONTR_DTL_PK       = DTL.DS_CONTR_DTL_PK
                                    AND IDNP.DS_CONTR_MACH_LVL_NUM = #dsContrMachLvl3#
                                    AND IDNP.DS_CONTR_BASE_USG_NM  = #dsContrBaseUsgNmBase#
                                    )
                            )
            )
        --Fleet Lv2/Usage
            ,IV_FLT_LV2_USAGE AS (
                        SELECT
                             DS_CONTR_PK
                            ,DS_CONTR_DTL_PK
                            ,SVC_MACH_MSTR_PK
                            ,LVL_NUM
                            ,    (CASE WHEN UPLFT_EFF_FROM_DT IS NULL
                                    THEN UPLFT_PCY_DT
                                    ELSE TO_CHAR(ADD_MONTHS(TO_DATE(NVL(UPLFT_EFF_FROM_DT, UPLFT_PCY_DT), 'YYYYMMDD'), 12),  'YYYYMMDD')
                             END) AS EFF_FROM_DT
                            ,CONTR_UPLFT_TP_CD
                            ,CONTR_EFF_FROM_DT
                            ,CONTR_EFF_THRU_DT
                            ,DS_CONTR_NUM
                            ,DS_CONTR_CATG_CD
                            ,DS_CONTR_DTL_TP_CD
                            ,CONTR_CLO_DAY
                            ,DS_CONTR_BASE_USG_NM
                        FROM
                            (
                            SELECT
                                 DTL.DS_CONTR_PK                DS_CONTR_PK
                                ,DTL.DS_CONTR_DTL_PK            DS_CONTR_DTL_PK
                                ,DTL.SVC_MACH_MSTR_PK           SVC_MACH_MSTR_PK
                                ,#dsContrMachLvl2#                            LVL_NUM
                                ,IAU.CONTR_UPLFT_TP_CD          CONTR_UPLFT_TP_CD
                                ,DTL.CONTR_EFF_FROM_DT          CONTR_EFF_FROM_DT
                                ,NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)  CONTR_EFF_THRU_DT
                                ,HDR.DS_CONTR_NUM
                                ,HDR.DS_CONTR_CATG_CD
                                ,DTL.DS_CONTR_DTL_TP_CD
                                ,DTL.CONTR_CLO_DAY
                                ,DTL.UPLFT_EFF_FROM_DT
                                ,IAU.UPLFT_PCY_DT
                                ,IAU.DS_CONTR_BASE_USG_NM
                            FROM
                                 DS_CONTR               HDR
                                ,DS_CONTR_DTL           DTL
                                ,IV_ANE_ESCL_U          IAU
                                ,IV_DTL_STS_V_U         DTV
                            WHERE
                                    HDR.GLBL_CMPY_CD                =  #glblCmpyCd#
                                AND HDR.DS_CONTR_CATG_CD            =  #dsContrCatgFlt#
                                AND HDR.EZCANCELFLAG                =  '0'
                                AND HDR.GLBL_CMPY_CD                =  DTL.GLBL_CMPY_CD
                                AND HDR.DS_CONTR_PK                 =  DTL.DS_CONTR_PK
                                AND DTL.EZCANCELFLAG                =  '0'
                                AND DTL.DS_CONTR_PK                 =  IAU.DS_CONTR_PK
                                AND DTL.DS_CONTR_DTL_PK             =  IAU.DS_CONTR_DTL_PK
                                AND DTL.DS_CONTR_DTL_TP_CD          =  #dsContrDtlTpCdFlt#
                                AND NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)
                                                                    &gt;= #slsDt#
                                AND IAU.DS_CONTR_MACH_LVL_NUM       =  #dsContrMachLvl2#
                                AND DTL.DS_CONTR_DTL_PK             =  DTV.DS_CONTR_DTL_PK
                                AND NOT EXISTS(
                                    SELECT
                                        *
                                    FROM
                                        DS_CONTR_RNW_ESCL AEV3
                                    WHERE
                                        AEV3.DS_CONTR_PK             = DTL.DS_CONTR_PK
                                    AND AEV3.DS_CONTR_DTL_PK         = DTL.DS_CONTR_DTL_PK
                                    AND AEV3.DS_CONTR_MACH_LVL_NUM   = #dsContrMachLvl3#
                                    AND AEV3.DS_CONTR_BASE_USG_NM    = #dsContrBaseUsgNmUsage#
                                    AND AEV3.EZCANCELFLAG            = '0'
                                    AND AEV3.UPLFT_PCY_DT            IS NOT NULL
                                    )
                                AND NOT EXISTS(
                                    SELECT
                                        *
                                    FROM
                                        IV_DO_NOT_UPLIFT IDNP
                                    WHERE
                                        IDNP.DS_CONTR_PK           = DTL.DS_CONTR_PK
                                    AND IDNP.DS_CONTR_DTL_PK       = DTL.DS_CONTR_DTL_PK
                                    AND IDNP.DS_CONTR_MACH_LVL_NUM = #dsContrMachLvl3#
                                    AND IDNP.DS_CONTR_BASE_USG_NM  = #dsContrBaseUsgNmUsage#
                                    )
                            )
            )
        --Fleet Lv1/Base
            ,IV_FLT_LV1_BASE AS (
                        SELECT
                             DS_CONTR_PK
                            ,DS_CONTR_DTL_PK
                            ,SVC_MACH_MSTR_PK
                            ,LVL_NUM
                            ,    (CASE WHEN UPLFT_EFF_FROM_DT IS NULL
                                    THEN UPLFT_PCY_DT
                                    ELSE TO_CHAR(ADD_MONTHS(TO_DATE(NVL(UPLFT_EFF_FROM_DT, UPLFT_PCY_DT), 'YYYYMMDD'), 12),  'YYYYMMDD')
                             END) AS EFF_FROM_DT
                            ,CONTR_UPLFT_TP_CD
                            ,CONTR_EFF_FROM_DT
                            ,CONTR_EFF_THRU_DT
                            ,DS_CONTR_NUM
                            ,DS_CONTR_CATG_CD
                            ,DS_CONTR_DTL_TP_CD
                            ,CONTR_CLO_DAY
                            ,DS_CONTR_BASE_USG_NM
                        FROM
                            (
                            SELECT
                                 DTL.DS_CONTR_PK                DS_CONTR_PK
                                ,DTL.DS_CONTR_DTL_PK            DS_CONTR_DTL_PK
                                ,DTL.SVC_MACH_MSTR_PK           SVC_MACH_MSTR_PK
                                ,#dsContrMachLvl1#                            LVL_NUM
                                ,IAB.CONTR_UPLFT_TP_CD          CONTR_UPLFT_TP_CD
                                ,DTL.CONTR_EFF_FROM_DT          CONTR_EFF_FROM_DT
                                ,NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)  CONTR_EFF_THRU_DT
                                ,HDR.DS_CONTR_NUM
                                ,HDR.DS_CONTR_CATG_CD
                                ,DTL.DS_CONTR_DTL_TP_CD
                                ,DTL.CONTR_CLO_DAY
                                ,DTL.UPLFT_EFF_FROM_DT
                                ,IAB.UPLFT_PCY_DT
                                ,IAB.DS_CONTR_BASE_USG_NM
                            FROM
                                 DS_CONTR               HDR
                                ,DS_CONTR_DTL           DTL
                                ,IV_ANE_ESCL_B          IAB
                                ,IV_DTL_STS_V_B         DTV
                            WHERE
                                    HDR.GLBL_CMPY_CD                =  #glblCmpyCd#
                                AND HDR.DS_CONTR_CATG_CD            =  #dsContrCatgFlt#
                                AND HDR.EZCANCELFLAG                =  '0'
                                AND HDR.GLBL_CMPY_CD                =  DTL.GLBL_CMPY_CD
                                AND HDR.DS_CONTR_PK                 =  DTL.DS_CONTR_PK
                                AND DTL.EZCANCELFLAG                =  '0'
                                AND DTL.DS_CONTR_PK                 =  IAB.DS_CONTR_PK
                                AND DTL.DS_CONTR_DTL_TP_CD          =  #dsContrDtlTpCdFlt#
                                AND NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)
                                                                    &gt;= #slsDt#
                                AND IAB.DS_CONTR_MACH_LVL_NUM       =  #dsContrMachLvl1#
                                AND DTL.DS_CONTR_DTL_PK             =  DTV.DS_CONTR_DTL_PK
                                AND NOT EXISTS(
                                    SELECT
                                        *
                                    FROM
                                        DS_CONTR_RNW_ESCL AEV3
                                    WHERE
                                            AEV3.DS_CONTR_PK             = DTL.DS_CONTR_PK
                                        AND AEV3.DS_CONTR_DTL_PK         = DTL.DS_CONTR_DTL_PK
                                        AND AEV3.DS_CONTR_MACH_LVL_NUM   = #dsContrMachLvl3#
                                        AND AEV3.DS_CONTR_BASE_USG_NM    = #dsContrBaseUsgNmBase#
                                        AND AEV3.EZCANCELFLAG            = '0'
                                        AND AEV3.UPLFT_PCY_DT            IS NOT NULL
                                    )
                                AND NOT EXISTS(
                                    SELECT
                                        *
                                    FROM
                                        DS_CONTR_RNW_ESCL AEV2
                                    WHERE
                                            AEV2.DS_CONTR_PK             = DTL.DS_CONTR_PK
                                        AND AEV2.DS_CONTR_DTL_PK         = DTL.DS_CONTR_DTL_PK
                                        AND AEV2.DS_CONTR_MACH_LVL_NUM   = #dsContrMachLvl2#
                                        AND AEV2.EZCANCELFLAG            = '0'
                                        AND AEV2.UPLFT_PCY_DT            IS NOT NULL
                                    )
                                AND NOT EXISTS(
                                    SELECT
                                        *
                                    FROM
                                        IV_DO_NOT_UPLIFT IDNP
                                    WHERE
                                        IDNP.DS_CONTR_PK           = DTL.DS_CONTR_PK
                                    AND IDNP.DS_CONTR_DTL_PK       = DTL.DS_CONTR_DTL_PK
                                    AND IDNP.DS_CONTR_MACH_LVL_NUM = #dsContrMachLvl3#
                                    AND IDNP.DS_CONTR_BASE_USG_NM  = #dsContrBaseUsgNmBase#
                                    )
                                AND NOT EXISTS(
                                    SELECT
                                        *
                                    FROM
                                        IV_DO_NOT_UPLIFT IDNP
                                    WHERE
                                        IDNP.DS_CONTR_PK           = DTL.DS_CONTR_PK
                                    AND IDNP.DS_CONTR_DTL_PK       = DTL.DS_CONTR_DTL_PK
                                    AND IDNP.DS_CONTR_MACH_LVL_NUM = #dsContrMachLvl2#
                                )
                            )
            )
        --Fleet Lv1/Usage
            ,IV_FLT_LV1_USAGE AS (
                        SELECT
                             DS_CONTR_PK
                            ,DS_CONTR_DTL_PK
                            ,SVC_MACH_MSTR_PK
                            ,LVL_NUM
                            ,    (CASE WHEN UPLFT_EFF_FROM_DT IS NULL
                                    THEN UPLFT_PCY_DT
                                    ELSE TO_CHAR(ADD_MONTHS(TO_DATE(NVL(UPLFT_EFF_FROM_DT, UPLFT_PCY_DT), 'YYYYMMDD'), 12),  'YYYYMMDD')
                             END) AS EFF_FROM_DT
                            ,CONTR_UPLFT_TP_CD
                            ,CONTR_EFF_FROM_DT
                            ,CONTR_EFF_THRU_DT
                            ,DS_CONTR_NUM
                            ,DS_CONTR_CATG_CD
                            ,DS_CONTR_DTL_TP_CD
                            ,CONTR_CLO_DAY
                            ,DS_CONTR_BASE_USG_NM
                        FROM
                            (
                            SELECT
                                 DTL.DS_CONTR_PK                DS_CONTR_PK
                                ,DTL.DS_CONTR_DTL_PK            DS_CONTR_DTL_PK
                                ,DTL.SVC_MACH_MSTR_PK           SVC_MACH_MSTR_PK
                                ,#dsContrMachLvl1#                            LVL_NUM
                                ,IAU.CONTR_UPLFT_TP_CD          CONTR_UPLFT_TP_CD
                                ,DTL.CONTR_EFF_FROM_DT          CONTR_EFF_FROM_DT
                                ,NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)  CONTR_EFF_THRU_DT
                                ,HDR.DS_CONTR_NUM
                                ,HDR.DS_CONTR_CATG_CD
                                ,DTL.DS_CONTR_DTL_TP_CD
                                ,DTL.CONTR_CLO_DAY
                                ,DTL.UPLFT_EFF_FROM_DT
                                ,IAU.UPLFT_PCY_DT
                                ,IAU.DS_CONTR_BASE_USG_NM
                            FROM
                                 DS_CONTR               HDR
                                ,DS_CONTR_DTL           DTL
                                ,IV_ANE_ESCL_U          IAU
                                ,IV_DTL_STS_V_U         DTV
                            WHERE
                                    HDR.GLBL_CMPY_CD                =  #glblCmpyCd#
                                AND HDR.DS_CONTR_CATG_CD            =  #dsContrCatgFlt#
                                AND HDR.EZCANCELFLAG                =  '0'
                                AND HDR.GLBL_CMPY_CD                =  DTL.GLBL_CMPY_CD
                                AND HDR.DS_CONTR_PK                 =  DTL.DS_CONTR_PK
                                AND DTL.EZCANCELFLAG                =  '0'
                                AND DTL.DS_CONTR_PK                 =  IAU.DS_CONTR_PK
                                AND DTL.DS_CONTR_DTL_TP_CD          =  #dsContrDtlTpCdFlt#
                                AND NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)
                                                                    &gt;= #slsDt#
                                AND IAU.DS_CONTR_MACH_LVL_NUM       =  #dsContrMachLvl1#
                                AND DTL.DS_CONTR_DTL_PK             =  DTV.DS_CONTR_DTL_PK
                                AND NOT EXISTS(
                                    SELECT
                                        *
                                    FROM
                                        DS_CONTR_RNW_ESCL AEV3
                                    WHERE
                                        AEV3.DS_CONTR_PK             = DTL.DS_CONTR_PK
                                    AND AEV3.DS_CONTR_DTL_PK         = DTL.DS_CONTR_DTL_PK
                                    AND AEV3.DS_CONTR_MACH_LVL_NUM   = #dsContrMachLvl3#
                                    AND AEV3.DS_CONTR_BASE_USG_NM    = #dsContrBaseUsgNmUsage#
                                    AND AEV3.EZCANCELFLAG            = '0'
                                    AND AEV3.UPLFT_PCY_DT            IS NOT NULL
                                    )
                                AND NOT EXISTS(
                                    SELECT
                                        *
                                    FROM
                                        DS_CONTR_RNW_ESCL AEV2
                                    WHERE
                                        AEV2.DS_CONTR_PK             = DTL.DS_CONTR_PK
                                    AND AEV2.DS_CONTR_DTL_PK         = DTL.DS_CONTR_DTL_PK
                                    AND AEV2.DS_CONTR_MACH_LVL_NUM   = #dsContrMachLvl2#
                                    AND AEV2.EZCANCELFLAG            = '0'
                                    AND AEV2.UPLFT_PCY_DT            IS NOT NULL
                                    )
                                AND NOT EXISTS(
                                    SELECT
                                        *
                                    FROM
                                        IV_DO_NOT_UPLIFT IDNP
                                    WHERE
                                        IDNP.DS_CONTR_PK               = DTL.DS_CONTR_PK
                                    AND IDNP.DS_CONTR_DTL_PK       = DTL.DS_CONTR_DTL_PK
                                    AND IDNP.DS_CONTR_MACH_LVL_NUM = #dsContrMachLvl3#
                                    AND IDNP.DS_CONTR_BASE_USG_NM  = #dsContrBaseUsgNmUsage#
                                    )
                                AND NOT EXISTS(
                                    SELECT
                                        *
                                    FROM
                                        IV_DO_NOT_UPLIFT IDNP
                                    WHERE
                                        IDNP.DS_CONTR_PK               = DTL.DS_CONTR_PK
                                    AND IDNP.DS_CONTR_DTL_PK       = DTL.DS_CONTR_DTL_PK
                                    AND IDNP.DS_CONTR_MACH_LVL_NUM = #dsContrMachLvl2#
                                    )
                            )
            )
      --Aggregate Lv2/Base
            ,IV_AGG_LV2_BASE AS (
                        SELECT
                             DS_CONTR_PK
                            ,DS_CONTR_DTL_PK
                            ,SVC_MACH_MSTR_PK
                            ,LVL_NUM
                            ,    (CASE WHEN UPLFT_EFF_FROM_DT IS NULL
                                    THEN UPLFT_PCY_DT
                                    ELSE TO_CHAR(ADD_MONTHS(TO_DATE(NVL(UPLFT_EFF_FROM_DT, UPLFT_PCY_DT), 'YYYYMMDD'), 12),  'YYYYMMDD')
                             END) AS EFF_FROM_DT
                            ,CONTR_UPLFT_TP_CD
                            ,CONTR_EFF_FROM_DT
                            ,CONTR_EFF_THRU_DT
                            ,DS_CONTR_NUM
                            ,DS_CONTR_CATG_CD
                            ,DS_CONTR_DTL_TP_CD
                            ,CONTR_CLO_DAY
                            ,DS_CONTR_BASE_USG_NM
                        FROM
                            (
                            SELECT
                                 DTL.DS_CONTR_PK                DS_CONTR_PK
                                ,DTL.DS_CONTR_DTL_PK            DS_CONTR_DTL_PK
                                ,DTL.SVC_MACH_MSTR_PK           SVC_MACH_MSTR_PK
                                ,#dsContrMachLvl2#                            LVL_NUM
                                ,IAB.CONTR_UPLFT_TP_CD          CONTR_UPLFT_TP_CD
                                ,DTL.CONTR_EFF_FROM_DT          CONTR_EFF_FROM_DT
                                ,NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)  CONTR_EFF_THRU_DT
                                ,HDR.DS_CONTR_NUM
                                ,HDR.DS_CONTR_CATG_CD
                                ,DTL.DS_CONTR_DTL_TP_CD
                                ,DTL.CONTR_CLO_DAY
                                ,DTL.UPLFT_EFF_FROM_DT
                                ,IAB.UPLFT_PCY_DT
                                ,IAB.DS_CONTR_BASE_USG_NM
                            FROM
                                 DS_CONTR               HDR
                                ,DS_CONTR_DTL           DTL
                                ,IV_ANE_ESCL_B          IAB
                                ,IV_DTL_STS_V_B         DTV
                            WHERE
                                    HDR.GLBL_CMPY_CD                =   #glblCmpyCd#
                                AND HDR.DS_CONTR_CATG_CD            =   #dsContrCatgAgg#
                                AND HDR.EZCANCELFLAG                =   '0'
                                AND HDR.GLBL_CMPY_CD                =   DTL.GLBL_CMPY_CD
                                AND HDR.DS_CONTR_PK                 =   DTL.DS_CONTR_PK
                                AND DTL.EZCANCELFLAG                =   '0'
                                AND DTL.DS_CONTR_PK                 =   IAB.DS_CONTR_PK
                                AND DTL.DS_CONTR_DTL_PK             =   IAB.DS_CONTR_DTL_PK
                                AND DTL.DS_CONTR_DTL_TP_CD          NOT IN (#dsContrDtlTpAgg#)
                                AND NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)
                                                                    &gt;= #slsDt#
                                AND IAB.DS_CONTR_MACH_LVL_NUM       =   #dsContrMachLvl2#
                                AND DTL.DS_CONTR_DTL_PK             =   DTV.DS_CONTR_DTL_PK
                        )
            )
        --Aggregate Lv2/Usage
            ,IV_AGG_LV2_USAGE AS (
                        SELECT
                             DS_CONTR_PK
                            ,DS_CONTR_DTL_PK
                            ,SVC_MACH_MSTR_PK
                            ,LVL_NUM
                            ,    (CASE WHEN UPLFT_EFF_FROM_DT IS NULL
                                    THEN UPLFT_PCY_DT
                                    ELSE TO_CHAR(ADD_MONTHS(TO_DATE(NVL(UPLFT_EFF_FROM_DT, UPLFT_PCY_DT), 'YYYYMMDD'), 12),  'YYYYMMDD')
                             END) AS EFF_FROM_DT
                            ,CONTR_UPLFT_TP_CD
                            ,CONTR_EFF_FROM_DT
                            ,CONTR_EFF_THRU_DT
                            ,DS_CONTR_NUM
                            ,DS_CONTR_CATG_CD
                            ,DS_CONTR_DTL_TP_CD
                            ,CONTR_CLO_DAY
                            ,DS_CONTR_BASE_USG_NM
                        FROM
                            (
                            SELECT
                                 DTL.DS_CONTR_PK                DS_CONTR_PK
                                ,DTL.DS_CONTR_DTL_PK            DS_CONTR_DTL_PK
                                ,DTL.SVC_MACH_MSTR_PK           SVC_MACH_MSTR_PK
                                ,#dsContrMachLvl2#                            LVL_NUM
                                ,IAU.CONTR_UPLFT_TP_CD          CONTR_UPLFT_TP_CD
                                ,DTL.CONTR_EFF_FROM_DT          CONTR_EFF_FROM_DT
                                ,NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)  CONTR_EFF_THRU_DT
                                ,HDR.DS_CONTR_NUM
                                ,HDR.DS_CONTR_CATG_CD
                                ,DTL.DS_CONTR_DTL_TP_CD
                                ,DTL.CONTR_CLO_DAY
                                ,DTL.UPLFT_EFF_FROM_DT
                                ,IAU.UPLFT_PCY_DT
                                ,IAU.DS_CONTR_BASE_USG_NM
                            FROM
                                 DS_CONTR               HDR
                                ,DS_CONTR_DTL           DTL
                                ,IV_ANE_ESCL_U          IAU
                                ,IV_DTL_STS_V_U         DTV
                            WHERE
                                    HDR.GLBL_CMPY_CD                =  #glblCmpyCd#
                                AND HDR.DS_CONTR_CATG_CD            =  #dsContrCatgAgg#
                                AND HDR.EZCANCELFLAG                =  '0'
                                AND HDR.GLBL_CMPY_CD                =  DTL.GLBL_CMPY_CD
                                AND HDR.DS_CONTR_PK                 =  DTL.DS_CONTR_PK
                                AND DTL.EZCANCELFLAG                =  '0'
                                AND DTL.DS_CONTR_PK                 =  IAU.DS_CONTR_PK
                                AND DTL.DS_CONTR_DTL_PK             =  IAU.DS_CONTR_DTL_PK
                                AND DTL.DS_CONTR_DTL_TP_CD          =  #dsContrDtlTpAgg#
                                AND NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)
                                                                    &gt;= #slsDt#
                                AND IAU.DS_CONTR_MACH_LVL_NUM       =  #dsContrMachLvl2#
                                AND DTL.DS_CONTR_DTL_PK             =  DTV.DS_CONTR_DTL_PK
                            )
            )
        --Aggregate Lv1/Base
            ,IV_AGG_LV1_BASE AS (
                        SELECT
                             DS_CONTR_PK
                            ,DS_CONTR_DTL_PK
                            ,SVC_MACH_MSTR_PK
                            ,LVL_NUM
                            ,    (CASE WHEN UPLFT_EFF_FROM_DT IS NULL
                                    THEN UPLFT_PCY_DT
                                    ELSE TO_CHAR(ADD_MONTHS(TO_DATE(NVL(UPLFT_EFF_FROM_DT, UPLFT_PCY_DT), 'YYYYMMDD'), 12),  'YYYYMMDD')
                             END) AS EFF_FROM_DT
                            ,CONTR_UPLFT_TP_CD
                            ,CONTR_EFF_FROM_DT
                            ,CONTR_EFF_THRU_DT
                            ,DS_CONTR_NUM
                            ,DS_CONTR_CATG_CD
                            ,DS_CONTR_DTL_TP_CD
                            ,CONTR_CLO_DAY
                            ,DS_CONTR_BASE_USG_NM
                        FROM
                            (
                            SELECT
                                 DTL.DS_CONTR_PK                DS_CONTR_PK
                                ,DTL.DS_CONTR_DTL_PK            DS_CONTR_DTL_PK
                                ,DTL.SVC_MACH_MSTR_PK           SVC_MACH_MSTR_PK
                                ,#dsContrMachLvl1#                            LVL_NUM
                                ,IAB.CONTR_UPLFT_TP_CD          CONTR_UPLFT_TP_CD
                                ,DTL.CONTR_EFF_FROM_DT          CONTR_EFF_FROM_DT
                                ,NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)  CONTR_EFF_THRU_DT
                                ,HDR.DS_CONTR_NUM
                                ,HDR.DS_CONTR_CATG_CD
                                ,DTL.DS_CONTR_DTL_TP_CD
                                ,DTL.CONTR_CLO_DAY
                                ,DTL.UPLFT_EFF_FROM_DT
                                ,IAB.UPLFT_PCY_DT
                                ,IAB.DS_CONTR_BASE_USG_NM
                            FROM
                                 DS_CONTR               HDR
                                ,DS_CONTR_DTL           DTL
                                ,IV_ANE_ESCL_B          IAB
                                ,IV_DTL_STS_V_B         DTV
                            WHERE
                                    HDR.GLBL_CMPY_CD                =   #glblCmpyCd#
                                AND HDR.DS_CONTR_CATG_CD            =   #dsContrCatgAgg#
                                AND HDR.EZCANCELFLAG                =   '0'
                                AND HDR.GLBL_CMPY_CD                =   DTL.GLBL_CMPY_CD
                                AND HDR.DS_CONTR_PK                 =   DTL.DS_CONTR_PK
                                AND DTL.EZCANCELFLAG                =   '0'
                                AND DTL.DS_CONTR_PK                 =   IAB.DS_CONTR_PK
                                AND DTL.DS_CONTR_DTL_TP_CD          NOT IN #dsContrDtlTpAgg#
                                AND NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)
                                                                    &gt;= #slsDt#
                                AND IAB.DS_CONTR_MACH_LVL_NUM       =   #dsContrMachLvl1#
                                AND DTL.DS_CONTR_DTL_PK             =   DTV.DS_CONTR_DTL_PK
                                AND NOT EXISTS(
                                    SELECT
                                        *
                                    FROM
                                        DS_CONTR_RNW_ESCL AEV2
                                    WHERE
                                        AEV2.DS_CONTR_PK             = DTL.DS_CONTR_PK
                                    AND AEV2.DS_CONTR_DTL_PK         = DTL.DS_CONTR_DTL_PK
                                    AND AEV2.DS_CONTR_MACH_LVL_NUM   = #dsContrMachLvl2#
                                    AND AEV2.EZCANCELFLAG            = '0'
                                    AND AEV2.UPLFT_PCY_DT            IS NOT NULL
                                    )
                                AND NOT EXISTS(
                                    SELECT
                                        *
                                    FROM
                                        IV_DO_NOT_UPLIFT IDNP
                                    WHERE
                                        IDNP.DS_CONTR_PK           = DTL.DS_CONTR_PK
                                    AND IDNP.DS_CONTR_DTL_PK       = DTL.DS_CONTR_DTL_PK
                                    AND IDNP.DS_CONTR_MACH_LVL_NUM = #dsContrMachLvl2#
                                    )
                        )
            )
        --Aggregate Lv1/Usage
            ,IV_AGG_LV1_USAGE AS (
                        SELECT
                             DS_CONTR_PK
                            ,DS_CONTR_DTL_PK
                            ,SVC_MACH_MSTR_PK
                            ,LVL_NUM
                            ,    (CASE WHEN UPLFT_EFF_FROM_DT IS NULL
                                    THEN UPLFT_PCY_DT
                                    ELSE TO_CHAR(ADD_MONTHS(TO_DATE(NVL(UPLFT_EFF_FROM_DT, UPLFT_PCY_DT), 'YYYYMMDD'), 12),  'YYYYMMDD')
                             END) AS EFF_FROM_DT
                            ,CONTR_UPLFT_TP_CD
                            ,CONTR_EFF_FROM_DT
                            ,CONTR_EFF_THRU_DT
                            ,DS_CONTR_NUM
                            ,DS_CONTR_CATG_CD
                            ,DS_CONTR_DTL_TP_CD
                            ,CONTR_CLO_DAY
                            ,DS_CONTR_BASE_USG_NM
                        FROM
                            (
                            SELECT
                                 DTL.DS_CONTR_PK                DS_CONTR_PK
                                ,DTL.DS_CONTR_DTL_PK            DS_CONTR_DTL_PK
                                ,DTL.SVC_MACH_MSTR_PK           SVC_MACH_MSTR_PK
                                ,#dsContrMachLvl1#                            LVL_NUM
                                ,IAU.CONTR_UPLFT_TP_CD          CONTR_UPLFT_TP_CD
                                ,DTL.CONTR_EFF_FROM_DT          CONTR_EFF_FROM_DT
                                ,NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)  CONTR_EFF_THRU_DT
                                ,HDR.DS_CONTR_NUM
                                ,HDR.DS_CONTR_CATG_CD
                                ,DTL.DS_CONTR_DTL_TP_CD
                                ,DTL.CONTR_CLO_DAY
                                ,DTL.UPLFT_EFF_FROM_DT
                                ,IAU.UPLFT_PCY_DT
                                ,IAU.DS_CONTR_BASE_USG_NM
                            FROM
                                 DS_CONTR               HDR
                                ,DS_CONTR_DTL           DTL
                                ,IV_ANE_ESCL_U          IAU
                                ,IV_DTL_STS_V_U         DTV
                            WHERE
                                    HDR.GLBL_CMPY_CD                =  #glblCmpyCd#
                                AND HDR.DS_CONTR_CATG_CD            =  #dsContrCatgAgg#
                                AND HDR.EZCANCELFLAG                =  '0'
                                AND HDR.GLBL_CMPY_CD                =  DTL.GLBL_CMPY_CD
                                AND HDR.DS_CONTR_PK                 =  DTL.DS_CONTR_PK
                                AND DTL.EZCANCELFLAG                =  '0'
                                AND DTL.DS_CONTR_PK                 =  IAU.DS_CONTR_PK
                                AND DTL.DS_CONTR_DTL_TP_CD          =  #dsContrDtlTpAgg#
                                AND NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)
                                                                    &gt;= #slsDt#
                                AND IAU.DS_CONTR_MACH_LVL_NUM       =  #dsContrMachLvl1#
                                AND DTL.DS_CONTR_DTL_PK             =  DTV.DS_CONTR_DTL_PK
                                AND NOT EXISTS(
                                    SELECT
                                        *
                                    FROM
                                        DS_CONTR_RNW_ESCL AEV2
                                    WHERE
                                        AEV2.DS_CONTR_PK             = DTL.DS_CONTR_PK
                                    AND AEV2.DS_CONTR_DTL_PK         = DTL.DS_CONTR_DTL_PK
                                    AND AEV2.DS_CONTR_MACH_LVL_NUM   = #dsContrMachLvl2#
                                    AND AEV2.EZCANCELFLAG            = '0'
                                    AND AEV2.UPLFT_PCY_DT            IS NOT NULL
                                    )
                                AND NOT EXISTS(
                                    SELECT
                                        *
                                    FROM
                                        IV_DO_NOT_UPLIFT IDNP
                                    WHERE
                                        IDNP.DS_CONTR_PK           = DTL.DS_CONTR_PK
                                    AND IDNP.DS_CONTR_DTL_PK       = DTL.DS_CONTR_DTL_PK
                                    AND IDNP.DS_CONTR_MACH_LVL_NUM = #dsContrMachLvl2#
                                    )
                        )
            )
        ,IV_REG_BASE AS(
                SELECT
                    *
                FROM
                    IV_REG_LV3_BASE
                UNION ALL
                SELECT
                    *
                FROM
                    IV_REG_LV2_BASE
                UNION ALL
                SELECT
                    *
                FROM
                    IV_REG_LV1_BASE
            )
        ,IV_REG_USAGE AS(
                SELECT
                    *
                FROM
                    IV_REG_LV3_USAGE
                UNION ALL
                SELECT
                    *
                FROM
                    IV_REG_LV2_USAGE
                UNION ALL
                SELECT
                    *
                FROM
                    IV_REG_LV1_USAGE
            )
        ,IV_REG AS(
                SELECT
                    BS.DS_CONTR_PK
                    ,BS.DS_CONTR_DTL_PK
                    ,BS.SVC_MACH_MSTR_PK
                    ,BS.DS_CONTR_NUM
                    ,BS.DS_CONTR_CATG_CD
                    ,BS.DS_CONTR_DTL_TP_CD
                    ,BS.EFF_FROM_DT
                    ,BS.CONTR_UPLFT_TP_CD
                    ,BS.CONTR_CLO_DAY
                    ,BS.CONTR_EFF_FROM_DT
                    ,BS.CONTR_EFF_THRU_DT
                    ,'Y' AS BASE_FLG
                    ,'Y' AS USAGE_FLG
                    ,BS.DS_CONTR_BASE_USG_NM
                FROM
                    IV_REG_BASE BS
                WHERE
                    EXISTS(SELECT * FROM IV_REG_USAGE USG
                            WHERE
                                USG.DS_CONTR_PK         = BS.DS_CONTR_PK
                                AND USG.DS_CONTR_DTL_PK = BS.DS_CONTR_DTL_PK
                                AND USG.EFF_FROM_DT     = BS.EFF_FROM_DT)
                UNION ALL
                SELECT
                    BS.DS_CONTR_PK
                    ,BS.DS_CONTR_DTL_PK
                    ,BS.SVC_MACH_MSTR_PK
                    ,BS.DS_CONTR_NUM
                    ,BS.DS_CONTR_CATG_CD
                    ,BS.DS_CONTR_DTL_TP_CD
                    ,BS.EFF_FROM_DT
                    ,BS.CONTR_UPLFT_TP_CD
                    ,BS.CONTR_CLO_DAY
                    ,BS.CONTR_EFF_FROM_DT
                    ,BS.CONTR_EFF_THRU_DT
                    ,'Y' AS BASE_FLG
                    ,'N' AS USAGE_FLG
                    ,BS.DS_CONTR_BASE_USG_NM
                FROM
                    IV_REG_BASE BS
                WHERE
                    NOT EXISTS(SELECT * FROM IV_REG_USAGE USG
                            WHERE
                                USG.DS_CONTR_PK         = BS.DS_CONTR_PK
                                AND USG.DS_CONTR_DTL_PK = BS.DS_CONTR_DTL_PK
                                AND USG.EFF_FROM_DT     = BS.EFF_FROM_DT)
                UNION ALL
                SELECT
                    USG.DS_CONTR_PK
                    ,USG.DS_CONTR_DTL_PK
                    ,USG.SVC_MACH_MSTR_PK
                    ,USG.DS_CONTR_NUM
                    ,USG.DS_CONTR_CATG_CD
                    ,USG.DS_CONTR_DTL_TP_CD
                    ,USG.EFF_FROM_DT
                    ,USG.CONTR_UPLFT_TP_CD
                    ,USG.CONTR_CLO_DAY
                    ,USG.CONTR_EFF_FROM_DT
                    ,USG.CONTR_EFF_THRU_DT
                    ,'N' AS BASE_FLG
                    ,'Y' AS USAGE_FLG
                    ,USG.DS_CONTR_BASE_USG_NM
                FROM
                    IV_REG_USAGE USG
                WHERE
                    NOT EXISTS(SELECT * FROM IV_REG_BASE BS
                            WHERE
                                USG.DS_CONTR_PK         = BS.DS_CONTR_PK
                                AND USG.DS_CONTR_DTL_PK = BS.DS_CONTR_DTL_PK
                                AND USG.EFF_FROM_DT     = BS.EFF_FROM_DT)
                )
        ,IV_FLT_BASE AS(
                SELECT
                    *
                FROM
                    IV_FLT_LV3_BASE
                UNION ALL
                SELECT
                    *
                FROM
                    IV_FLT_LV2_BASE
                UNION ALL
                SELECT
                    *
                FROM
                    IV_FLT_LV1_BASE
            )
        ,IV_FLT_USAGE AS(
                SELECT
                    *
                FROM
                    IV_FLT_LV3_USAGE
                UNION ALL
                SELECT
                    *
                FROM
                    IV_FLT_LV2_USAGE
                UNION ALL
                SELECT
                    *
                FROM
                    IV_FLT_LV1_USAGE
            )
        ,IV_FLT AS(
                SELECT
                    BS.DS_CONTR_PK
                    ,BS.DS_CONTR_DTL_PK
                    ,BS.SVC_MACH_MSTR_PK
                    ,BS.DS_CONTR_NUM
                    ,BS.DS_CONTR_CATG_CD
                    ,BS.DS_CONTR_DTL_TP_CD
                    ,BS.EFF_FROM_DT
                    ,BS.CONTR_UPLFT_TP_CD
                    ,BS.CONTR_CLO_DAY
                    ,BS.CONTR_EFF_FROM_DT
                    ,BS.CONTR_EFF_THRU_DT
                    ,'Y' AS BASE_FLG
                    ,'Y' AS USAGE_FLG
                    ,BS.DS_CONTR_BASE_USG_NM
                FROM
                    IV_FLT_BASE BS
                WHERE
                    EXISTS(SELECT * FROM IV_FLT_USAGE USG
                            WHERE
                                USG.DS_CONTR_PK         = BS.DS_CONTR_PK
                                AND USG.DS_CONTR_DTL_PK = BS.DS_CONTR_DTL_PK
                                AND USG.EFF_FROM_DT     = BS.EFF_FROM_DT)
                UNION ALL
                SELECT
                    BS.DS_CONTR_PK
                    ,BS.DS_CONTR_DTL_PK
                    ,BS.SVC_MACH_MSTR_PK
                    ,BS.DS_CONTR_NUM
                    ,BS.DS_CONTR_CATG_CD
                    ,BS.DS_CONTR_DTL_TP_CD
                    ,BS.EFF_FROM_DT
                    ,BS.CONTR_UPLFT_TP_CD
                    ,BS.CONTR_CLO_DAY
                    ,BS.CONTR_EFF_FROM_DT
                    ,BS.CONTR_EFF_THRU_DT
                    ,'Y' AS BASE_FLG
                    ,'N' AS USAGE_FLG
                    ,BS.DS_CONTR_BASE_USG_NM
                FROM
                    IV_FLT_BASE BS
                WHERE
                    NOT EXISTS(SELECT * FROM IV_FLT_USAGE USG
                            WHERE
                                USG.DS_CONTR_PK         = BS.DS_CONTR_PK
                                AND USG.DS_CONTR_DTL_PK = BS.DS_CONTR_DTL_PK
                                AND USG.EFF_FROM_DT     = BS.EFF_FROM_DT)
                UNION ALL
                SELECT
                    USG.DS_CONTR_PK
                    ,USG.DS_CONTR_DTL_PK
                    ,USG.SVC_MACH_MSTR_PK
                    ,USG.DS_CONTR_NUM
                    ,USG.DS_CONTR_CATG_CD
                    ,USG.DS_CONTR_DTL_TP_CD
                    ,USG.EFF_FROM_DT
                    ,USG.CONTR_UPLFT_TP_CD
                    ,USG.CONTR_CLO_DAY
                    ,USG.CONTR_EFF_FROM_DT
                    ,USG.CONTR_EFF_THRU_DT
                    ,'N' AS BASE_FLG
                    ,'Y' AS USAGE_FLG
                    ,USG.DS_CONTR_BASE_USG_NM
                FROM
                    IV_FLT_USAGE USG
                WHERE
                    NOT EXISTS(SELECT * FROM IV_FLT_BASE BS
                            WHERE
                                USG.DS_CONTR_PK         = BS.DS_CONTR_PK
                                AND USG.DS_CONTR_DTL_PK = BS.DS_CONTR_DTL_PK
                                AND USG.EFF_FROM_DT     = BS.EFF_FROM_DT)
                )
        ,IV_AGG_BASE_TMP AS(
                SELECT
                    *
                FROM
                    (
                    SELECT
                        A.*
                        ,ROW_NUMBER() OVER (PARTITION BY A.DS_CONTR_PK ORDER BY A.DS_CONTR_DTL_PK) AS ROW_NUMBER
                    FROM
                        (
                            SELECT
                                *
                            FROM
                                IV_AGG_LV2_BASE
                            UNION ALL
                            SELECT
                                *
                            FROM
                                IV_AGG_LV1_BASE
                        ) A
                    )
                WHERE
                    ROW_NUMBER = 1
            )
        ,IV_AGG_USAGE_TMP AS(
                SELECT
                    *
                FROM
                    IV_AGG_LV2_USAGE
                UNION ALL
                SELECT
                    *
                FROM
                    IV_AGG_LV1_USAGE
            )
        ,IV_AGG_BASE_AGG AS(
                SELECT
                     DTL.DS_CONTR_PK
                    ,DTL.DS_CONTR_DTL_PK
                    ,DTL.SVC_MACH_MSTR_PK
                    ,NULL AS LVL_NUM
                    ,IABT.EFF_FROM_DT
                    ,IABT.CONTR_UPLFT_TP_CD
                    ,DTL.CONTR_EFF_FROM_DT
                    ,NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)  CONTR_EFF_THRU_DT
                    ,HDR.DS_CONTR_NUM
                    ,HDR.DS_CONTR_CATG_CD
                    ,DTL.DS_CONTR_DTL_TP_CD
                    ,DTL.CONTR_CLO_DAY
                    ,IABT.DS_CONTR_BASE_USG_NM
                FROM
                     IV_AGG_BASE_TMP  IABT
                    ,DS_CONTR         HDR
                    ,DS_CONTR_DTL     DTL
                    ,DS_CONTR_DTL_TP  DCDT
                WHERE
                        IABT.DS_CONTR_PK                   =  HDR.DS_CONTR_PK
                    AND HDR.GLBL_CMPY_CD                   =  #glblCmpyCd#
                    AND HDR.EZCANCELFLAG                   =  '0'
                    AND HDR.GLBL_CMPY_CD                   =  DTL.GLBL_CMPY_CD
                    AND HDR.DS_CONTR_PK                    =  DTL.DS_CONTR_PK
                    AND DTL.DS_CONTR_DTL_TP_CD             =  #dsContrDtlTpAgg#
                    AND DTL.DS_CONTR_DTL_STS_CD            &lt;&gt; #dsContrDtlStsOrdr#
                    AND NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)
                                                           &gt;= #slsDt#
                    AND DTL.EZCANCELFLAG                   = '0'
                    AND DTL.GLBL_CMPY_CD                   = DCDT.GLBL_CMPY_CD
                    AND DTL.DS_CONTR_DTL_TP_CD             = DCDT.DS_CONTR_DTL_TP_CD
                    AND DCDT.SVC_PRC_FLG                   = 'N'
                    AND DCDT.EZCANCELFLAG                  = '0'
                    AND MONTHS_BETWEEN(
                             TO_DATE(IABT.EFF_FROM_DT, 'YYYYMMDD')
                            ,TO_DATE(DTL.CONTR_EFF_THRU_DT, 'YYYYMMDD') + 1
                        ) &gt;= 1
                    AND EXISTS(
                        SELECT
                            *
                        FROM
                            IV_DTL_STS_V_B DTV
                        WHERE
                            DTV.DS_CONTR_DTL_PK = DTL.DS_CONTR_DTL_PK
                        )
            )
        ,IV_AGG_USAGE_MACH AS(
                SELECT
                     DTL.DS_CONTR_PK
                    ,DTL.DS_CONTR_DTL_PK
                    ,DTL.SVC_MACH_MSTR_PK
                    ,NULL AS LVL_NUM
                    ,IAUT.EFF_FROM_DT
                    ,IAUT.CONTR_UPLFT_TP_CD
                    ,DTL.CONTR_EFF_FROM_DT
                    ,NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)  CONTR_EFF_THRU_DT
                    ,HDR.DS_CONTR_NUM
                    ,HDR.DS_CONTR_CATG_CD
                    ,DTL.DS_CONTR_DTL_TP_CD
                    ,DTL.CONTR_CLO_DAY
                    ,IAUT.DS_CONTR_BASE_USG_NM
                FROM
                     IV_AGG_USAGE_TMP IAUT
                    ,DS_CONTR         HDR
                    ,DS_CONTR_DTL     DTL
                    ,DS_CONTR_DTL_TP  DCDT
                WHERE
                        IAUT.DS_CONTR_PK                   =  HDR.DS_CONTR_PK
                    AND HDR.GLBL_CMPY_CD                   =  #glblCmpyCd#
                    AND HDR.EZCANCELFLAG                   =  '0'
                    AND HDR.GLBL_CMPY_CD                   =  DTL.GLBL_CMPY_CD
                    AND HDR.DS_CONTR_PK                    =  DTL.DS_CONTR_PK
                    AND DTL.DS_CONTR_DTL_TP_CD             &lt;&gt; #dsContrDtlTpAgg#
                    AND DTL.DS_CONTR_DTL_STS_CD            &lt;&gt; #dsContrDtlStsOrdr#
                    AND NVL(DTL.CONTR_CLO_DT, DTL.CONTR_EFF_THRU_DT)
                                                           &gt;= #slsDt#
                    AND DTL.EZCANCELFLAG                   =  '0'
                    AND DTL.GLBL_CMPY_CD                   =  DCDT.GLBL_CMPY_CD
                    AND DTL.DS_CONTR_DTL_TP_CD             =  DCDT.DS_CONTR_DTL_TP_CD
                    AND DCDT.SVC_PRC_FLG                   =  'N'
                    AND DCDT.EZCANCELFLAG                  =  '0'
                    AND MONTHS_BETWEEN(
                             TO_DATE(IAUT.EFF_FROM_DT, 'YYYYMMDD')
                            ,TO_DATE(DTL.CONTR_EFF_THRU_DT, 'YYYYMMDD') + 1
                        ) &gt;= 1
                    AND EXISTS(
                        SELECT
                            *
                        FROM
                            IV_DTL_STS_V_U DTV
                        WHERE
                            DTV.DS_CONTR_DTL_PK = DTL.DS_CONTR_DTL_PK
                        )
            )
        ,IV_AGG_BASE AS(
                SELECT
                    *
                FROM
                    IV_AGG_LV2_BASE
                UNION ALL
                SELECT
                    *
                FROM
                    IV_AGG_LV1_BASE
                UNION ALL
                SELECT
                    *
                FROM
                    IV_AGG_BASE_AGG
            )
        ,IV_AGG_USAGE AS(
                SELECT
                    *
                FROM
                    IV_AGG_LV2_USAGE
                UNION ALL
                SELECT
                    *
                FROM
                    IV_AGG_LV1_USAGE
                UNION ALL
                SELECT
                    *
                FROM
                    IV_AGG_USAGE_MACH
            )
        ,IV_AGG AS(
                SELECT
                    USG.DS_CONTR_PK
                    ,USG.DS_CONTR_DTL_PK
                    ,USG.SVC_MACH_MSTR_PK
                    ,USG.DS_CONTR_NUM
                    ,USG.DS_CONTR_CATG_CD
                    ,USG.DS_CONTR_DTL_TP_CD
                    ,USG.EFF_FROM_DT
                    ,USG.CONTR_UPLFT_TP_CD
                    ,USG.CONTR_CLO_DAY
                    ,USG.CONTR_EFF_FROM_DT
                    ,USG.CONTR_EFF_THRU_DT
                    ,'Y' AS BASE_FLG
                    ,'Y' AS USAGE_FLG
                    ,USG.DS_CONTR_BASE_USG_NM
                FROM
                    IV_AGG_USAGE USG
                WHERE
                    EXISTS(SELECT * FROM IV_AGG_BASE BS
                            WHERE
                                USG.DS_CONTR_PK         = BS.DS_CONTR_PK
                                AND USG.DS_CONTR_DTL_PK = BS.DS_CONTR_DTL_PK
                                AND USG.EFF_FROM_DT     = BS.EFF_FROM_DT)
                    AND USG.DS_CONTR_DTL_TP_CD = #dsContrDtlTpAgg#
                UNION ALL
                SELECT
                    BS.DS_CONTR_PK
                    ,BS.DS_CONTR_DTL_PK
                    ,BS.SVC_MACH_MSTR_PK
                    ,BS.DS_CONTR_NUM
                    ,BS.DS_CONTR_CATG_CD
                    ,BS.DS_CONTR_DTL_TP_CD
                    ,BS.EFF_FROM_DT
                    ,BS.CONTR_UPLFT_TP_CD
                    ,BS.CONTR_CLO_DAY
                    ,BS.CONTR_EFF_FROM_DT
                    ,BS.CONTR_EFF_THRU_DT
                    ,'Y' AS BASE_FLG
                    ,'Y' AS USAGE_FLG
                    ,BS.DS_CONTR_BASE_USG_NM
                FROM
                    IV_AGG_BASE BS
                WHERE
                    EXISTS(SELECT * FROM IV_AGG_USAGE USG
                            WHERE
                                USG.DS_CONTR_PK         = BS.DS_CONTR_PK
                                AND USG.DS_CONTR_DTL_PK = BS.DS_CONTR_DTL_PK
                                AND USG.EFF_FROM_DT     = BS.EFF_FROM_DT)
                    AND BS.DS_CONTR_DTL_TP_CD &lt;&gt; #dsContrDtlTpAgg#
                UNION ALL
                SELECT
                    BS.DS_CONTR_PK
                    ,BS.DS_CONTR_DTL_PK
                    ,BS.SVC_MACH_MSTR_PK
                    ,BS.DS_CONTR_NUM
                    ,BS.DS_CONTR_CATG_CD
                    ,BS.DS_CONTR_DTL_TP_CD
                    ,BS.EFF_FROM_DT
                    ,BS.CONTR_UPLFT_TP_CD
                    ,BS.CONTR_CLO_DAY
                    ,BS.CONTR_EFF_FROM_DT
                    ,BS.CONTR_EFF_THRU_DT
                    ,'Y' AS BASE_FLG
                    ,'N' AS USAGE_FLG
                    ,BS.DS_CONTR_BASE_USG_NM
                FROM
                    IV_AGG_BASE BS
                WHERE
                    NOT EXISTS(SELECT * FROM IV_AGG_USAGE USG
                            WHERE
                                USG.DS_CONTR_PK         = BS.DS_CONTR_PK
                                AND USG.DS_CONTR_DTL_PK = BS.DS_CONTR_DTL_PK
                                AND USG.EFF_FROM_DT     = BS.EFF_FROM_DT)
                UNION ALL
                SELECT
                    USG.DS_CONTR_PK
                    ,USG.DS_CONTR_DTL_PK
                    ,USG.SVC_MACH_MSTR_PK
                    ,USG.DS_CONTR_NUM
                    ,USG.DS_CONTR_CATG_CD
                    ,USG.DS_CONTR_DTL_TP_CD
                    ,USG.EFF_FROM_DT
                    ,USG.CONTR_UPLFT_TP_CD
                    ,USG.CONTR_CLO_DAY
                    ,USG.CONTR_EFF_FROM_DT
                    ,USG.CONTR_EFF_THRU_DT
                    ,'N' AS BASE_FLG
                    ,'Y' AS USAGE_FLG
                    ,USG.DS_CONTR_BASE_USG_NM
                FROM
                    IV_AGG_USAGE USG
                WHERE
                    NOT EXISTS(SELECT * FROM IV_AGG_BASE BS
                            WHERE
                                USG.DS_CONTR_PK         = BS.DS_CONTR_PK
                                AND USG.DS_CONTR_DTL_PK = BS.DS_CONTR_DTL_PK
                                AND USG.EFF_FROM_DT     = BS.EFF_FROM_DT)
            )
            ,IV_LINE AS(
                        SELECT
                            DTL.DS_CONTR_PK
                            ,DTL.DS_CONTR_DTL_PK
                            ,DTL.SVC_MACH_MSTR_PK
                            ,HDR.DS_CONTR_NUM
                            ,HDR.DS_CONTR_CATG_CD
                            ,DTL.DS_CONTR_DTL_TP_CD
                            ,'' AS EFF_FROM_DT
                            ,'' AS CONTR_UPLFT_TP_CD
                            ,DTL.CONTR_CLO_DAY
                            ,'' AS CONTR_EFF_FROM_DT
                            ,'' AS CONTR_EFF_THRU_DT
                            ,'N' AS BASE_FLG
                            ,'N' AS USAGE_FLG
                            ,'' AS DS_CONTR_BASE_USG_NM
                        FROM
                            DS_CONTR         HDR
                            ,DS_CONTR_DTL    DTL
                            ,DS_CONTR_DTL_TP DCDT
                        WHERE
                            HDR.GLBL_CMPY_CD                = #glblCmpyCd#
                            AND HDR.EZCANCELFLAG            = '0'
                            AND HDR.DS_CONTR_CATG_CD        IN 
                            <iterate property="dsContrCatgList" var="dsContrCatgList[]" open="(" close=")" conjunction=",">
                                               #dsContrCatgList[]#
                            </iterate>
                            AND HDR.GLBL_CMPY_CD            = DTL.GLBL_CMPY_CD
                            AND DTL.EZCANCELFLAG            = '0'
                            AND DTL.DS_CONTR_DTL_STS_CD &lt;&gt; #dsContrDtlStsOrdr#
                            AND HDR.DS_CONTR_PK             = DTL.DS_CONTR_PK
                            AND DTL.GLBL_CMPY_CD            = DCDT.GLBL_CMPY_CD
                            AND DTL.DS_CONTR_DTL_TP_CD      = DCDT.DS_CONTR_DTL_TP_CD
                            AND DCDT.SVC_PRC_FLG            = #flgOffN#
                            AND DCDT.EZCANCELFLAG           = '0'
                            AND (EXISTS(SELECT * FROM IV_FLT FLT
                                        WHERE FLT.DS_CONTR_PK = DTL.DS_CONTR_PK)
                                OR EXISTS(SELECT * FROM IV_AGG AGG
                                        WHERE AGG.DS_CONTR_PK = DTL.DS_CONTR_PK))
                            AND (NOT EXISTS(SELECT * FROM IV_FLT FLT
                                        WHERE FLT.DS_CONTR_PK = DTL.DS_CONTR_PK
                                          AND FLT.DS_CONTR_DTL_PK = DTL.DS_CONTR_DTL_PK)
                                AND NOT EXISTS(SELECT * FROM IV_AGG AGG
                                        WHERE AGG.DS_CONTR_PK = DTL.DS_CONTR_PK
                                          AND AGG.DS_CONTR_DTL_PK = DTL.DS_CONTR_DTL_PK))
            )
        SELECT
            X.*
            ,COUNT(1) OVER(PARTITION BY X.DS_CONTR_PK) ROWCNT
        FROM
             (
                SELECT
                    *
                FROM
                    IV_REG
                UNION ALL
                SELECT
                    *
                FROM
                    IV_FLT
                UNION ALL
                SELECT
                    *
                FROM
                    IV_AGG
                UNION ALL
                SELECT
                    *
                FROM
                    IV_LINE
             ) X
            ,DS_CONTR_DTL_TP DCDT
        WHERE
                X.DS_CONTR_DTL_TP_CD = DCDT.DS_CONTR_DTL_TP_CD
            AND DCDT.GLBL_CMPY_CD    = #glblCmpyCd#
            AND DCDT.EZCANCELFLAG    = '0'
            AND X.EFF_FROM_DT    &lt;= X.CONTR_EFF_THRU_DT
            AND X.EFF_FROM_DT    &gt;= X.CONTR_EFF_FROM_DT
        ORDER BY
             X.DS_CONTR_PK
            ,CASE WHEN DCDT.DS_CONTR_DTL_TP_CD = #dsContrDtlTpAgg# THEN (SELECT MAX(DCDT2.DS_CONTR_DTL_TP_SORT_NUM)+1 FROM DS_CONTR_DTL_TP DCDT2) ELSE DCDT.DS_CONTR_DTL_TP_SORT_NUM END
            ,X.EFF_FROM_DT NULLS LAST
            ,X.DS_CONTR_DTL_PK
    </statement>

    <statement id="existsMatchPcyDateAndBllgschdForBase" parameterClass="Map" resultClass="BigDecimal">
        SELECT
            COUNT(*) AS MATCH_CNT
        FROM
            DS_CONTR_BLLG_SCHD          A
        WHERE
                A.GLBL_CMPY_CD          = #glblCmpyCd#
            AND A.EZCANCELFLAG          = '0'
            AND A.DS_CONTR_DTL_PK       = #dsContrDtlPk#
            AND A.BASE_CHRG_FLG         = 'Y'
            AND A.DS_CONTR_PRC_EFF_PK   IS NOT NULL
            AND A.INV_TP_CD             = #invTpInvoice#
            AND A.BLLG_SCHD_FROM_DT     = #pcyDt#
    </statement>

    <statement id="existsMatchPcyDateAndBllgschdForUsage" parameterClass="Map" resultClass="BigDecimal">
        SELECT
           CASE WHEN BLLG_SCHD_CNT.SCHD_CNT = BLLG_MTR_CNT.MTR_CNT
                THEN 1
                ELSE 0
           END MATCH_CNT
        FROM
            (
                SELECT
                    COUNT(*) AS SCHD_CNT
                FROM
                    DS_CONTR_BLLG_SCHD          A
                WHERE
                        A.GLBL_CMPY_CD          = #glblCmpyCd#
                    AND A.EZCANCELFLAG          = '0'
                    AND A.DS_CONTR_DTL_PK       = #dsContrDtlPk#
                    AND A.USG_CHRG_FLG          = 'Y'
                    AND A.DS_CONTR_PRC_EFF_PK   IS NOT NULL
                    AND A.INV_TP_CD             = #invTpInvoice#
                    AND A.BLLG_SCHD_FROM_DT     = #pcyDt#
            ) BLLG_SCHD_CNT
            ,(
                SELECT
                    COUNT(*) AS MTR_CNT
                FROM
                    DS_CONTR_BLLG_MTR          B
                WHERE
                        B.GLBL_CMPY_CD          = #glblCmpyCd#
                    AND B.EZCANCELFLAG          = '0'
                    AND B.DS_CONTR_DTL_PK       = #dsContrDtlPk#
           ) BLLG_MTR_CNT
    </statement>
    <!-- END 2023/06/23 T.Usui [QC#61408, ADD] -->
    
    <!-- START 2023/07/27 R.Kurahashi [QC#61710, ADD] -->
    <statement id="getContrAutoRnwTpCd" parameterClass="Map" resultClass="String">
        SELECT
            CONTR_AUTO_RNW_TP_CD
        FROM
            DS_CONTR_RNW_ESCL
        WHERE
                GLBL_CMPY_CD = #glblCmpyCd#
            AND EZCANCELFLAG = '0'
            AND DS_CONTR_PK = #dsContrPk#
            <isNotNull property="dsContrDtlPk">
            AND DS_CONTR_DTL_PK = #dsContrDtlPk#
            </isNotNull>
            <isNotNull property="dsContrMachLvlNum">
            AND DS_CONTR_MACH_LVL_NUM = #dsContrMachLvlNum#
            </isNotNull>
    </statement>
    
    <statement id="getDoNotRenewCd" parameterClass="Map" resultClass="String">
        SELECT
            CONTR_AUTO_RNW_TP_CD
        FROM
            CONTR_AUTO_RNW_TP
        WHERE
                GLBL_CMPY_CD = #glblCmpyCd#
            AND EZCANCELFLAG = '0'
            AND RNW_USG_FLG = #rewUsgFlg#
            AND RNW_BASE_FLG = #rnwBaseFlg#
    </statement>
    <!-- END 2023/07/27 R.Kurahashi [QC#61710, ADD] -->
    
    <!-- START 2023/11/08 R.Kurahashi [QC#61568, ADD] -->
    <statement id="getBaseBillingCycleMatchErrList" parameterClass="Map" resultClass="Map">
        SELECT
            DISTINCT A.DS_CONTR_DTL_PK AS DS_CONTR_DTL_PK
        FROM
             DS_CONTR_BLLG_SCHD     A
            ,DS_CONTR_DTL           B
            ,DS_CONTR               C
        WHERE
                A.GLBL_CMPY_CD      = #glblCmpyCd#
            AND B.GLBL_CMPY_CD      = #glblCmpyCd#
            AND C.GLBL_CMPY_CD      = #glblCmpyCd#
            AND A.EZCANCELFLAG      = '0'
            AND B.EZCANCELFLAG      = '0'
            AND C.EZCANCELFLAG      = '0'
            AND A.DS_CONTR_DTL_PK   = B.DS_CONTR_DTL_PK
            AND B.DS_CONTR_PK       = C.DS_CONTR_PK
            AND C.DS_CONTR_PK       = #dsContrPk#
            <iterate property="dsContrDtlTpCdList" var="dsContrDtlTpCdList[]" open="AND B.DS_CONTR_DTL_TP_CD IN (" close=")" conjunction=",">
                #dsContrDtlTpCdList[]#
            </iterate>
            <iterate property="dsContrDtlStsCdList" var="dsContrDtlStsCdList[]" open="AND B.DS_CONTR_DTL_STS_CD NOT IN (" close=")" conjunction=",">
                #dsContrDtlStsCdList[]#
            </iterate>
            AND A.DS_BLLG_SCHD_STS_CD = #open#
            AND A.BASE_CHRG_FLG       = #flgOnY#
            AND A.PRNT_DS_CONTR_BLLG_SCHD_PK IS NULL
            AND A.SKIP_RECOV_TP_CD   != #skip#
    </statement>
    <statement id="getUsageBillingCycleMatchErrList" parameterClass="Map" resultClass="Map">
        SELECT
            DISTINCT D.DS_CONTR_DTL_PK
                   , D.BLLG_MTR_BLLG_CYCLE_CD
                   , E.MTR_LB_DESC_TXT
        FROM 
             DS_CONTR_BLLG_SCHD        A
            ,DS_CONTR_DTL              B
            ,DS_CONTR                  C 
            ,DS_CONTR_BLLG_MTR         D
            ,MTR_LB                    E
        WHERE
                A.GLBL_CMPY_CD         = #glblCmpyCd#
            AND B.GLBL_CMPY_CD         = #glblCmpyCd#
            AND C.GLBL_CMPY_CD         = #glblCmpyCd#
            AND D.GLBL_CMPY_CD         = #glblCmpyCd#
            AND E.GLBL_CMPY_CD         = #glblCmpyCd#
            AND A.EZCANCELFLAG         = '0'
            AND B.EZCANCELFLAG         = '0'
            AND C.EZCANCELFLAG         = '0'
            AND D.EZCANCELFLAG         = '0'
            AND E.EZCANCELFLAG         = '0'
            AND A.DS_CONTR_DTL_PK      = B.DS_CONTR_DTL_PK
            AND B.DS_CONTR_PK          = C.DS_CONTR_PK
            AND C.DS_CONTR_PK          = #dsContrPk#
            <iterate property="dsContrDtlTpCdList" var="dsContrDtlTpCdList[]" open="AND B.DS_CONTR_DTL_TP_CD IN (" close=")" conjunction=",">
                #dsContrDtlTpCdList[]#
            </iterate>
            <iterate property="dsContrDtlStsCdList" var="dsContrDtlStsCdList[]" open="AND B.DS_CONTR_DTL_STS_CD NOT IN (" close=")" conjunction=",">
                #dsContrDtlStsCdList[]#
            </iterate>
            AND A.DS_BLLG_SCHD_STS_CD  = #open#
            AND A.USG_CHRG_FLG         = #flgOnY#
            AND A.PRNT_DS_CONTR_BLLG_SCHD_PK IS NULL
            AND A.SKIP_RECOV_TP_CD    != #skip#
            AND B.DS_CONTR_DTL_PK = D.DS_CONTR_DTL_PK
            AND A.DS_CONTR_BLLG_MTR_PK = D.DS_CONTR_BLLG_MTR_PK
            AND D.BLLG_MTR_LB_CD       = E.MTR_LB_CD
    </statement>
    <!-- END 2023/11/08 R.Kurahashi [QC#61568, ADD] -->
    <!-- START 2023/11/13 S.Moriai [QC#61756,ADD] -->
    <statement id="getDsContactPersonEmail" parameterClass="Map" resultClass="String">
       SELECT
            A.DS_CTAC_PNT_VAL_TXT 
        FROM  
            DS_CTAC_PNT A
            ,SVC_MACH_CTAC_PSN  B
            ,SVC_MACH_MSTR C 
            ,DS_CONTR_DTL D
        WHERE
                A.GLBL_CMPY_CD                      = #glblCmpyCd#
            AND A.GLBL_CMPY_CD                      = B.GLBL_CMPY_CD 
            AND B.GLBL_CMPY_CD                      = C.GLBL_CMPY_CD
            AND C.GLBL_CMPY_CD                      = D.GLBL_CMPY_CD
            AND A.EZCANCELFLAG                      = '0' 
            AND B.EZCANCELFLAG                      = '0' 
            AND C.EZCANCELFLAG                      = '0'  
            AND D.EZCANCELFLAG                      = '0' 
            AND B.EFF_FROM_DT                   &lt;= #salesDate#
            AND NVL(B.EFF_THRU_DT, #salesDate#) &gt;= #salesDate#
            AND A.DS_CTAC_PNT_TP_CD                 = #dsContactPersonType#
            AND A.DS_CTAC_PNT_ACTV_FLG              = #actvFlg#
            AND A.DS_CTAC_PNT_VAL_TXT               IS NOT NULL   
            AND A.DS_CTAC_PNT_PK                    = B.DS_CTAC_PNT_PK 
            AND B.SVC_CTAC_TP_CD                    = #serviceContactType#
            AND B.SVC_MACH_MSTR_PK                  = C.SVC_MACH_MSTR_PK 
            AND C.SVC_MACH_MSTR_PK                  = D.SVC_MACH_MSTR_PK 
            AND D.MTR_READ_METH_CD                  = #meterReadMethod#   
            AND D.DS_CONTR_DTL_TP_CD                = #dsContactDetailType#
            AND D.DS_CONTR_DTL_PK                   = #dsContrDtlPk#
    </statement>
    <!-- END 2023/11/13 S.Moriai [QC#61756,ADD] -->
</sqlMap>