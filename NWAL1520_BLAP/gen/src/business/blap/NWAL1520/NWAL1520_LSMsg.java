//This file was automatically generated by Business Component Interface Definition Document (Define Business Application Global Area) and XLA200710010.
// Generated on    :20151023130238000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NWAL1520_LSMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NWAL1520;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NWAL1520 Business Application Global Area Message class.
 * @author
 * @version XLA200710010
 */
public class NWAL1520_LSMsg extends EZDSMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_CHK_BOX*/
	public final EZDSStringItem              xxChkBox;

    /** XX_NEW_ROW_NUM*/
	public final EZDSBigDecimalItem              xxNewRowNum;

    /** REL_FLG*/
	public final EZDSStringItem              relFlg;

    /** HLD_LVL_DESC_TXT*/
	public final EZDSStringItem              hldLvlDescTxt;

    /** XX_LINE_NUM*/
	public final EZDSStringItem              xxLineNum;

    /** DS_ORD_POSN_NUM*/
	public final EZDSStringItem              dsOrdPosnNum;

    /** DS_CPO_LINE_NUM*/
	public final EZDSBigDecimalItem              dsCpoLineNum;

    /** DS_CPO_LINE_SUB_NUM*/
	public final EZDSBigDecimalItem              dsCpoLineSubNum;

    /** CPO_ORD_NUM*/
	public final EZDSStringItem              cpoOrdNum;

    /** HLD_RSN_DESC_TXT*/
	public final EZDSStringItem              hldRsnDescTxt;

    /** REL_FUNC_TP_CD*/
	public final EZDSStringItem              relFuncTpCd;

    /** HLD_DT_AP*/
	public final EZDSDateItem              hldDt_AP;

    /** XX_PSN_NM_AP*/
	public final EZDSStringItem              xxPsnNm_AP;

    /** FIRST_NM_AP*/
	public final EZDSStringItem              firstNm_AP;

    /** LAST_NM_AP*/
	public final EZDSStringItem              lastNm_AP;

    /** PSN_CD_AP*/
	public final EZDSStringItem              psnCd_AP;

    /** HLD_UNTIL_DT_AP*/
	public final EZDSDateItem              hldUntilDt_AP;

    /** HLD_APPLY_RSN_DESC_TXT_AP*/
	public final EZDSStringItem              hldApplyRsnDescTxt_AP;

    /** HLD_DTL_TXT_AP*/
	public final EZDSStringItem              hldDtlTxt_AP;

    /** XX_PSN_NM_RE*/
	public final EZDSStringItem              xxPsnNm_RE;

    /** FIRST_NM_RE*/
	public final EZDSStringItem              firstNm_RE;

    /** LAST_NM_RE*/
	public final EZDSStringItem              lastNm_RE;

    /** PSN_CD_RE*/
	public final EZDSStringItem              psnCd_RE;

    /** REL_DT_RE*/
	public final EZDSDateItem              relDt_RE;

    /** HLD_REL_RSN_DESC_TXT_RE*/
	public final EZDSStringItem              hldRelRsnDescTxt_RE;

    /** REL_MEMO_TXT_RE*/
	public final EZDSStringItem              relMemoTxt_RE;


	/**
	 * NWAL1520_LSMsg is constructor.
	 * The initialization when the instance of NWAL1520_LSMsg is generated.
	 */
	public NWAL1520_LSMsg() {
		this(false, -1);
	}

	/**
	 * NWAL1520_LSMsg is constructor.
	 * The initialization when the instance of NWAL1520_LSMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NWAL1520_LSMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxChkBox = (EZDSStringItem)newItem("xxChkBox");
		xxNewRowNum = (EZDSBigDecimalItem)newItem("xxNewRowNum");
		relFlg = (EZDSStringItem)newItem("relFlg");
		hldLvlDescTxt = (EZDSStringItem)newItem("hldLvlDescTxt");
		xxLineNum = (EZDSStringItem)newItem("xxLineNum");
		dsOrdPosnNum = (EZDSStringItem)newItem("dsOrdPosnNum");
		dsCpoLineNum = (EZDSBigDecimalItem)newItem("dsCpoLineNum");
		dsCpoLineSubNum = (EZDSBigDecimalItem)newItem("dsCpoLineSubNum");
		cpoOrdNum = (EZDSStringItem)newItem("cpoOrdNum");
		hldRsnDescTxt = (EZDSStringItem)newItem("hldRsnDescTxt");
		relFuncTpCd = (EZDSStringItem)newItem("relFuncTpCd");
		hldDt_AP = (EZDSDateItem)newItem("hldDt_AP");
		xxPsnNm_AP = (EZDSStringItem)newItem("xxPsnNm_AP");
		firstNm_AP = (EZDSStringItem)newItem("firstNm_AP");
		lastNm_AP = (EZDSStringItem)newItem("lastNm_AP");
		psnCd_AP = (EZDSStringItem)newItem("psnCd_AP");
		hldUntilDt_AP = (EZDSDateItem)newItem("hldUntilDt_AP");
		hldApplyRsnDescTxt_AP = (EZDSStringItem)newItem("hldApplyRsnDescTxt_AP");
		hldDtlTxt_AP = (EZDSStringItem)newItem("hldDtlTxt_AP");
		xxPsnNm_RE = (EZDSStringItem)newItem("xxPsnNm_RE");
		firstNm_RE = (EZDSStringItem)newItem("firstNm_RE");
		lastNm_RE = (EZDSStringItem)newItem("lastNm_RE");
		psnCd_RE = (EZDSStringItem)newItem("psnCd_RE");
		relDt_RE = (EZDSDateItem)newItem("relDt_RE");
		hldRelRsnDescTxt_RE = (EZDSStringItem)newItem("hldRelRsnDescTxt_RE");
		relMemoTxt_RE = (EZDSStringItem)newItem("relMemoTxt_RE");
	}

	/**
	 * get the type of array which is stored
	 * @return NWAL1520_LSMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NWAL1520_LSMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxChkBox", "xxChkBox", null, null, TYPE_HANKAKUEIJI, "1", null},
	{"xxNewRowNum", "xxNewRowNum", null, null, TYPE_SEISU_SYOSU, "4", "0"},
	{"relFlg", "relFlg", null, null, TYPE_HANKAKUEISU, "1", null},
	{"hldLvlDescTxt", "hldLvlDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"xxLineNum", "xxLineNum", null, null, TYPE_HANKAKUEISU, "11", null},
	{"dsOrdPosnNum", "dsOrdPosnNum", null, null, TYPE_HANKAKUEISU, "6", null},
	{"dsCpoLineNum", "dsCpoLineNum", null, null, TYPE_SEISU_SYOSU, "4", "0"},
	{"dsCpoLineSubNum", "dsCpoLineSubNum", null, null, TYPE_SEISU_SYOSU, "4", "0"},
	{"cpoOrdNum", "cpoOrdNum", null, null, TYPE_HANKAKUEISU, "8", null},
	{"hldRsnDescTxt", "hldRsnDescTxt", null, null, TYPE_HANKAKUEISU, "50", null},
	{"relFuncTpCd", "relFuncTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"hldDt_AP", "hldDt_AP", "AP", null, TYPE_NENTSUKIHI, "8", null},
	{"xxPsnNm_AP", "xxPsnNm_AP", "AP", null, TYPE_HANKAKUEISU, "62", null},
	{"firstNm_AP", "firstNm_AP", "AP", null, TYPE_HANKAKUEISU, "30", null},
	{"lastNm_AP", "lastNm_AP", "AP", null, TYPE_HANKAKUEISU, "30", null},
	{"psnCd_AP", "psnCd_AP", "AP", null, TYPE_HANKAKUEISU, "8", null},
	{"hldUntilDt_AP", "hldUntilDt_AP", "AP", null, TYPE_NENTSUKIHI, "8", null},
	{"hldApplyRsnDescTxt_AP", "hldApplyRsnDescTxt_AP", "AP", null, TYPE_HANKAKUEISU, "50", null},
	{"hldDtlTxt_AP", "hldDtlTxt_AP", "AP", null, TYPE_HANKAKUEISU, "4000", null},
	{"xxPsnNm_RE", "xxPsnNm_RE", "RE", null, TYPE_HANKAKUEISU, "62", null},
	{"firstNm_RE", "firstNm_RE", "RE", null, TYPE_HANKAKUEISU, "30", null},
	{"lastNm_RE", "lastNm_RE", "RE", null, TYPE_HANKAKUEISU, "30", null},
	{"psnCd_RE", "psnCd_RE", "RE", null, TYPE_HANKAKUEISU, "8", null},
	{"relDt_RE", "relDt_RE", "RE", null, TYPE_NENTSUKIHI, "8", null},
	{"hldRelRsnDescTxt_RE", "hldRelRsnDescTxt_RE", "RE", null, TYPE_HANKAKUEISU, "50", null},
	{"relMemoTxt_RE", "relMemoTxt_RE", "RE", null, TYPE_HANKAKUEISU, "400", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox
        {"XX_NEW_ROW_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxNewRowNum
        {"REL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//relFlg
        {"HLD_LVL_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//hldLvlDescTxt
        {"XX_LINE_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxLineNum
        {"DS_ORD_POSN_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdPosnNum
        {"DS_CPO_LINE_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsCpoLineNum
        {"DS_CPO_LINE_SUB_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsCpoLineSubNum
        {"CPO_ORD_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cpoOrdNum
        {"HLD_RSN_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//hldRsnDescTxt
        {"REL_FUNC_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//relFuncTpCd
        {"HLD_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//hldDt_AP
        {"XX_PSN_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPsnNm_AP
        {"FIRST_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//firstNm_AP
        {"LAST_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//lastNm_AP
        {"PSN_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//psnCd_AP
        {"HLD_UNTIL_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//hldUntilDt_AP
        {"HLD_APPLY_RSN_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//hldApplyRsnDescTxt_AP
        {"HLD_DTL_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//hldDtlTxt_AP
        {"XX_PSN_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPsnNm_RE
        {"FIRST_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//firstNm_RE
        {"LAST_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//lastNm_RE
        {"PSN_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//psnCd_RE
        {"REL_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//relDt_RE
        {"HLD_REL_RSN_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//hldRelRsnDescTxt_RE
        {"REL_MEMO_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//relMemoTxt_RE
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

