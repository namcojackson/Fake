//This file was automatically generated by Business Component Interface Definition Document (Define Business Application Global Area) and XLA200710010.
// Generated on    :20171121171621000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NMAL2610_ASMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NMAL2610;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NMAL2610 Business Application Global Area Message class.
 * @author
 * @version XLA200710010
 */
public class NMAL2610_ASMsg extends EZDSMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_CHK_BOX_A1*/
	public final EZDSStringItem              xxChkBox_A1;

    /** ORG_NM_A1*/
	public final EZDSStringItem              orgNm_A1;

    /** ORG_CD_A1*/
	public final EZDSStringItem              orgCd_A1;

    /** EFF_FROM_DT_A1*/
	public final EZDSDateItem              effFromDt_A1;

    /** EFF_THRU_DT_A1*/
	public final EZDSDateItem              effThruDt_A1;

    /** GNRN_TP_CD_A1*/
	public final EZDSStringItem              gnrnTpCd_A1;

    /** ORG_TIER_CD_A1*/
	public final EZDSStringItem              orgTierCd_A1;

    /** BIZ_AREA_ORG_CD_A1*/
	public final EZDSStringItem              bizAreaOrgCd_A1;

    /** EFF_FROM_DT_A2*/
	public final EZDSDateItem              effFromDt_A2;

    /** EFF_THRU_DT_A2*/
	public final EZDSDateItem              effThruDt_A2;

    /** _EZUpdateDateTime_X2*/
	public final EZDSStringItem              ezUpTime_X2;

    /** _EZUpTimeZone_X2*/
	public final EZDSStringItem              ezUpTimeZone_X2;

    /** ORG_CD_X2*/
	public final EZDSStringItem              orgCd_X2;

    /** PRNT_ORG_CD_X2*/
	public final EZDSStringItem              prntOrgCd_X2;

    /** ORG_STRU_TP_CD_X2*/
	public final EZDSStringItem              orgStruTpCd_X2;

    /** DS_ORG_RELN_PK_X2*/
	public final EZDSBigDecimalItem              dsOrgRelnPk_X2;

    /** EFF_FROM_DT_X2*/
	public final EZDSDateItem              effFromDt_X2;

    /** XX_REC_HIST_CRAT_TS_A1*/
	public final EZDSStringItem              xxRecHistCratTs_A1;

    /** XX_REC_HIST_CRAT_BY_NM_A1*/
	public final EZDSStringItem              xxRecHistCratByNm_A1;

    /** XX_REC_HIST_UPD_TS_A1*/
	public final EZDSStringItem              xxRecHistUpdTs_A1;

    /** XX_REC_HIST_UPD_BY_NM_A1*/
	public final EZDSStringItem              xxRecHistUpdByNm_A1;

    /** XX_REC_HIST_TBL_NM_A1*/
	public final EZDSStringItem              xxRecHistTblNm_A1;

    /** DS_ORG_RELN_PK_A1*/
	public final EZDSBigDecimalItem              dsOrgRelnPk_A1;


	/**
	 * NMAL2610_ASMsg is constructor.
	 * The initialization when the instance of NMAL2610_ASMsg is generated.
	 */
	public NMAL2610_ASMsg() {
		this(false, -1);
	}

	/**
	 * NMAL2610_ASMsg is constructor.
	 * The initialization when the instance of NMAL2610_ASMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NMAL2610_ASMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxChkBox_A1 = (EZDSStringItem)newItem("xxChkBox_A1");
		orgNm_A1 = (EZDSStringItem)newItem("orgNm_A1");
		orgCd_A1 = (EZDSStringItem)newItem("orgCd_A1");
		effFromDt_A1 = (EZDSDateItem)newItem("effFromDt_A1");
		effThruDt_A1 = (EZDSDateItem)newItem("effThruDt_A1");
		gnrnTpCd_A1 = (EZDSStringItem)newItem("gnrnTpCd_A1");
		orgTierCd_A1 = (EZDSStringItem)newItem("orgTierCd_A1");
		bizAreaOrgCd_A1 = (EZDSStringItem)newItem("bizAreaOrgCd_A1");
		effFromDt_A2 = (EZDSDateItem)newItem("effFromDt_A2");
		effThruDt_A2 = (EZDSDateItem)newItem("effThruDt_A2");
		ezUpTime_X2 = (EZDSStringItem)newItem("ezUpTime_X2");
		ezUpTimeZone_X2 = (EZDSStringItem)newItem("ezUpTimeZone_X2");
		orgCd_X2 = (EZDSStringItem)newItem("orgCd_X2");
		prntOrgCd_X2 = (EZDSStringItem)newItem("prntOrgCd_X2");
		orgStruTpCd_X2 = (EZDSStringItem)newItem("orgStruTpCd_X2");
		dsOrgRelnPk_X2 = (EZDSBigDecimalItem)newItem("dsOrgRelnPk_X2");
		effFromDt_X2 = (EZDSDateItem)newItem("effFromDt_X2");
		xxRecHistCratTs_A1 = (EZDSStringItem)newItem("xxRecHistCratTs_A1");
		xxRecHistCratByNm_A1 = (EZDSStringItem)newItem("xxRecHistCratByNm_A1");
		xxRecHistUpdTs_A1 = (EZDSStringItem)newItem("xxRecHistUpdTs_A1");
		xxRecHistUpdByNm_A1 = (EZDSStringItem)newItem("xxRecHistUpdByNm_A1");
		xxRecHistTblNm_A1 = (EZDSStringItem)newItem("xxRecHistTblNm_A1");
		dsOrgRelnPk_A1 = (EZDSBigDecimalItem)newItem("dsOrgRelnPk_A1");
	}

	/**
	 * get the type of array which is stored
	 * @return NMAL2610_ASMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NMAL2610_ASMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxChkBox_A1", "xxChkBox_A1", "A1", null, TYPE_HANKAKUEIJI, "1", null},
	{"orgNm_A1", "orgNm_A1", "A1", null, TYPE_HANKAKUEISU, "50", null},
	{"orgCd_A1", "orgCd_A1", "A1", null, TYPE_HANKAKUEISU, "8", null},
	{"effFromDt_A1", "effFromDt_A1", "A1", null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt_A1", "effThruDt_A1", "A1", null, TYPE_NENTSUKIHI, "8", null},
	{"gnrnTpCd_A1", "gnrnTpCd_A1", "A1", null, TYPE_HANKAKUEISU, "1", null},
	{"orgTierCd_A1", "orgTierCd_A1", "A1", null, TYPE_HANKAKUEISU, "2", null},
	{"bizAreaOrgCd_A1", "bizAreaOrgCd_A1", "A1", null, TYPE_HANKAKUEISU, "8", null},
	{"effFromDt_A2", "effFromDt_A2", "A2", null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt_A2", "effThruDt_A2", "A2", null, TYPE_NENTSUKIHI, "8", null},
	{"ezUpTime_X2", "ezUpTime_X2", "X2", null, TYPE_HANKAKUEISU, "17", null},
	{"ezUpTimeZone_X2", "ezUpTimeZone_X2", "X2", null, TYPE_HANKAKUEISU, "5", null},
	{"orgCd_X2", "orgCd_X2", "X2", null, TYPE_HANKAKUEISU, "8", null},
	{"prntOrgCd_X2", "prntOrgCd_X2", "X2", null, TYPE_HANKAKUEISU, "8", null},
	{"orgStruTpCd_X2", "orgStruTpCd_X2", "X2", null, TYPE_HANKAKUEISU, "8", null},
	{"dsOrgRelnPk_X2", "dsOrgRelnPk_X2", "X2", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"effFromDt_X2", "effFromDt_X2", "X2", null, TYPE_NENTSUKIHI, "8", null},
	{"xxRecHistCratTs_A1", "xxRecHistCratTs_A1", "A1", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistCratByNm_A1", "xxRecHistCratByNm_A1", "A1", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistUpdTs_A1", "xxRecHistUpdTs_A1", "A1", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistUpdByNm_A1", "xxRecHistUpdByNm_A1", "A1", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistTblNm_A1", "xxRecHistTblNm_A1", "A1", null, TYPE_HANKAKUEISU, "60", null},
	{"dsOrgRelnPk_A1", "dsOrgRelnPk_A1", "A1", null, TYPE_SEISU_SYOSU, "28", "0"},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_A1
        {"ORG_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//orgNm_A1
        {"ORG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//orgCd_A1
        {"EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effFromDt_A1
        {"EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effThruDt_A1
        {"GNRN_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//gnrnTpCd_A1
        {"ORG_TIER_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//orgTierCd_A1
        {"BIZ_AREA_ORG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bizAreaOrgCd_A1
        {"EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effFromDt_A2
        {"EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effThruDt_A2
        {"_EZUpdateDateTime",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTime_X2
        {"_EZUpTimeZone",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTimeZone_X2
        {"ORG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//orgCd_X2
        {"PRNT_ORG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prntOrgCd_X2
        {"ORG_STRU_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//orgStruTpCd_X2
        {"DS_ORG_RELN_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrgRelnPk_X2
        {"EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effFromDt_X2
        {"XX_REC_HIST_CRAT_TS",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratTs_A1
        {"XX_REC_HIST_CRAT_BY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratByNm_A1
        {"XX_REC_HIST_UPD_TS",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdTs_A1
        {"XX_REC_HIST_UPD_BY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdByNm_A1
        {"XX_REC_HIST_TBL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistTblNm_A1
        {"DS_ORG_RELN_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrgRelnPk_A1
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

