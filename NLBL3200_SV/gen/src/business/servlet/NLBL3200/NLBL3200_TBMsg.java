//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20191226145223000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NLBL3200_TBMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NLBL3200;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NLBL3200 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NLBL3200_TBMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** MSTR_PRO_NUM*/
	public final EZDBStringItem              mstrProNum;

    /** PRO_NUM*/
	public final EZDBStringItem              proNum;

    /** TRX_LINE_NUM*/
	public final EZDBStringItem              trxLineNum;

    /** SO_NUM*/
	public final EZDBStringItem              soNum;

    /** TRX_HDR_NUM*/
	public final EZDBStringItem              trxHdrNum;


	/**
	 * NLBL3200_TBMsg is constructor.
	 * The initialization when the instance of NLBL3200_TBMsg is generated.
	 */
	public NLBL3200_TBMsg() {
		this(false, -1);
	}

	/**
	 * NLBL3200_TBMsg is constructor.
	 * The initialization when the instance of NLBL3200_TBMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NLBL3200_TBMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		mstrProNum = (EZDBStringItem)newItem("mstrProNum");
		proNum = (EZDBStringItem)newItem("proNum");
		trxLineNum = (EZDBStringItem)newItem("trxLineNum");
		soNum = (EZDBStringItem)newItem("soNum");
		trxHdrNum = (EZDBStringItem)newItem("trxHdrNum");
	}

	/**
	 * get the type of array which is stored
	 * @return NLBL3200_TBMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NLBL3200_TBMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"mstrProNum", "mstrProNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"proNum", "proNum", null, null, TYPE_HANKAKUEISU, "30", null},
	{"trxLineNum", "trxLineNum", null, null, TYPE_HANKAKUEISU, "3", null},
	{"soNum", "soNum", null, null, TYPE_HANKAKUEISU, "8", null},
	{"trxHdrNum", "trxHdrNum", null, null, TYPE_HANKAKUEISU, "8", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"MSTR_PRO_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mstrProNum
        {"PRO_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//proNum
        {"TRX_LINE_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trxLineNum
        {"SO_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//soNum
        {"TRX_HDR_NUM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trxHdrNum
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

