//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20171121102157000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NMAL2710_ABMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NMAL2710;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NMAL2710 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NMAL2710_ABMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** ORG_CD_A1*/
	public final EZDBStringItem              orgCd_A1;

    /** TRTY_RULE_PK_A1*/
	public final EZDBBigDecimalItem              trtyRulePk_A1;

    /** XX_CHK_BOX_A1*/
	public final EZDBStringItem              xxChkBox_A1;

    /** ORG_NM_A1*/
	public final EZDBStringItem              orgNm_A1;

    /** ORG_DESC_TXT_A1*/
	public final EZDBStringItem              orgDescTxt_A1;

    /** BIZ_AREA_ORG_CD_A1*/
	public final EZDBStringItem              bizAreaOrgCd_A1;

    /** BIZ_AREA_ORG_DESC_TXT_A1*/
	public final EZDBStringItem              bizAreaOrgDescTxt_A1;

    /** TRTY_GRP_TP_CD_A1*/
	public final EZDBStringItem              trtyGrpTpCd_A1;

    /** TRTY_GRP_TP_DESC_TXT_A1*/
	public final EZDBStringItem              trtyGrpTpDescTxt_A1;

    /** TRTY_RULE_OPRD_TP_CD_A1*/
	public final EZDBStringItem              trtyRuleOprdTpCd_A1;

    /** TRTY_RULE_OPRD_TP_DESC_TXT_A1*/
	public final EZDBStringItem              trtyRuleOprdTpDescTxt_A1;

    /** TRTY_RULE_FROM_VAL_TXT_A1*/
	public final EZDBStringItem              trtyRuleFromValTxt_A1;

    /** TRTY_RULE_THRU_VAL_TXT_A1*/
	public final EZDBStringItem              trtyRuleThruValTxt_A1;

    /** TRTY_RULE_LOGIC_TP_CD_A1*/
	public final EZDBStringItem              trtyRuleLogicTpCd_A1;

    /** TRTY_RULE_LOGIC_TP_DESC_TXT_A1*/
	public final EZDBStringItem              trtyRuleLogicTpDescTxt_A1;

    /** EFF_FROM_DT_A1*/
	public final EZDBDateItem              effFromDt_A1;

    /** EFF_THRU_DT_A1*/
	public final EZDBDateItem              effThruDt_A1;

    /** XX_CHK_BOX_BW*/
	public final EZDBStringItem              xxChkBox_BW;


	/**
	 * NMAL2710_ABMsg is constructor.
	 * The initialization when the instance of NMAL2710_ABMsg is generated.
	 */
	public NMAL2710_ABMsg() {
		this(false, -1);
	}

	/**
	 * NMAL2710_ABMsg is constructor.
	 * The initialization when the instance of NMAL2710_ABMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NMAL2710_ABMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		orgCd_A1 = (EZDBStringItem)newItem("orgCd_A1");
		trtyRulePk_A1 = (EZDBBigDecimalItem)newItem("trtyRulePk_A1");
		xxChkBox_A1 = (EZDBStringItem)newItem("xxChkBox_A1");
		orgNm_A1 = (EZDBStringItem)newItem("orgNm_A1");
		orgDescTxt_A1 = (EZDBStringItem)newItem("orgDescTxt_A1");
		bizAreaOrgCd_A1 = (EZDBStringItem)newItem("bizAreaOrgCd_A1");
		bizAreaOrgDescTxt_A1 = (EZDBStringItem)newItem("bizAreaOrgDescTxt_A1");
		trtyGrpTpCd_A1 = (EZDBStringItem)newItem("trtyGrpTpCd_A1");
		trtyGrpTpDescTxt_A1 = (EZDBStringItem)newItem("trtyGrpTpDescTxt_A1");
		trtyRuleOprdTpCd_A1 = (EZDBStringItem)newItem("trtyRuleOprdTpCd_A1");
		trtyRuleOprdTpDescTxt_A1 = (EZDBStringItem)newItem("trtyRuleOprdTpDescTxt_A1");
		trtyRuleFromValTxt_A1 = (EZDBStringItem)newItem("trtyRuleFromValTxt_A1");
		trtyRuleThruValTxt_A1 = (EZDBStringItem)newItem("trtyRuleThruValTxt_A1");
		trtyRuleLogicTpCd_A1 = (EZDBStringItem)newItem("trtyRuleLogicTpCd_A1");
		trtyRuleLogicTpDescTxt_A1 = (EZDBStringItem)newItem("trtyRuleLogicTpDescTxt_A1");
		effFromDt_A1 = (EZDBDateItem)newItem("effFromDt_A1");
		effThruDt_A1 = (EZDBDateItem)newItem("effThruDt_A1");
		xxChkBox_BW = (EZDBStringItem)newItem("xxChkBox_BW");
	}

	/**
	 * get the type of array which is stored
	 * @return NMAL2710_ABMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NMAL2710_ABMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"orgCd_A1", "orgCd_A1", "A1", null, TYPE_HANKAKUEISU, "8", null},
	{"trtyRulePk_A1", "trtyRulePk_A1", "A1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"xxChkBox_A1", "xxChkBox_A1", "A1", null, TYPE_HANKAKUEIJI, "1", null},
	{"orgNm_A1", "orgNm_A1", "A1", null, TYPE_HANKAKUEISU, "50", null},
	{"orgDescTxt_A1", "orgDescTxt_A1", "A1", null, TYPE_HANKAKUEISU, "50", null},
	{"bizAreaOrgCd_A1", "bizAreaOrgCd_A1", "A1", null, TYPE_HANKAKUEISU, "8", null},
	{"bizAreaOrgDescTxt_A1", "bizAreaOrgDescTxt_A1", "A1", null, TYPE_HANKAKUEISU, "50", null},
	{"trtyGrpTpCd_A1", "trtyGrpTpCd_A1", "A1", null, TYPE_HANKAKUEISU, "8", null},
	{"trtyGrpTpDescTxt_A1", "trtyGrpTpDescTxt_A1", "A1", null, TYPE_HANKAKUEISU, "50", null},
	{"trtyRuleOprdTpCd_A1", "trtyRuleOprdTpCd_A1", "A1", null, TYPE_HANKAKUEISU, "8", null},
	{"trtyRuleOprdTpDescTxt_A1", "trtyRuleOprdTpDescTxt_A1", "A1", null, TYPE_HANKAKUEISU, "50", null},
	{"trtyRuleFromValTxt_A1", "trtyRuleFromValTxt_A1", "A1", null, TYPE_HANKAKUEISU, "360", null},
	{"trtyRuleThruValTxt_A1", "trtyRuleThruValTxt_A1", "A1", null, TYPE_HANKAKUEISU, "360", null},
	{"trtyRuleLogicTpCd_A1", "trtyRuleLogicTpCd_A1", "A1", null, TYPE_HANKAKUEISU, "5", null},
	{"trtyRuleLogicTpDescTxt_A1", "trtyRuleLogicTpDescTxt_A1", "A1", null, TYPE_HANKAKUEISU, "50", null},
	{"effFromDt_A1", "effFromDt_A1", "A1", null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt_A1", "effThruDt_A1", "A1", null, TYPE_NENTSUKIHI, "8", null},
	{"xxChkBox_BW", "xxChkBox_BW", "BW", null, TYPE_HANKAKUEIJI, "1", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"ORG_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//orgCd_A1
        {"TRTY_RULE_PK",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trtyRulePk_A1
        {"XX_CHK_BOX",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_A1
        {"ORG_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//orgNm_A1
        {"ORG_DESC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//orgDescTxt_A1
        {"BIZ_AREA_ORG_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bizAreaOrgCd_A1
        {"BIZ_AREA_ORG_DESC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bizAreaOrgDescTxt_A1
        {"TRTY_GRP_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trtyGrpTpCd_A1
        {"TRTY_GRP_TP_DESC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trtyGrpTpDescTxt_A1
        {"TRTY_RULE_OPRD_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trtyRuleOprdTpCd_A1
        {"TRTY_RULE_OPRD_TP_DESC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trtyRuleOprdTpDescTxt_A1
        {"TRTY_RULE_FROM_VAL_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trtyRuleFromValTxt_A1
        {"TRTY_RULE_THRU_VAL_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trtyRuleThruValTxt_A1
        {"TRTY_RULE_LOGIC_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trtyRuleLogicTpCd_A1
        {"TRTY_RULE_LOGIC_TP_DESC_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trtyRuleLogicTpDescTxt_A1
        {"EFF_FROM_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//effFromDt_A1
        {"EFF_THRU_DT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,UNI, SEIREKI4,  NO, YES},	//effThruDt_A1
        {"XX_CHK_BOX",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_BW
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

