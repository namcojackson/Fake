//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20220404135740000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSAL1120_BCMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NSAL1120;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL1120 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL1120_BCMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_ROW_NUM_B*/
	public final EZDCBigDecimalItem              xxRowNum_B;

    /** XX_CHK_BOX_B*/
	public final EZDCStringItem              xxChkBox_B;

    /** SVC_CR_REBIL_PK_B*/
	public final EZDCBigDecimalItem              svcCrRebilPk_B;

    /** SVC_CR_REBIL_MTR_READ_PK_B*/
	public final EZDCBigDecimalItem              svcCrRebilMtrReadPk_B;

    /** SVC_CR_REBIL_MTR_BLLG_PK_B*/
	public final EZDCBigDecimalItem              svcCrRebilMtrBllgPk_B;

    /** SVC_MACH_MSTR_PK_B*/
	public final EZDCBigDecimalItem              svcMachMstrPk_B;

    /** SVC_INV_LINE_MTR_PK_B*/
	public final EZDCBigDecimalItem              svcInvLineMtrPk_B;

    /** ORIG_SVC_INV_NUM_B*/
	public final EZDCStringItem              origSvcInvNum_B;

    /** BLLG_MTR_LB_CD_B*/
	public final EZDCStringItem              bllgMtrLbCd_B;

    /** MTR_LB_CD_B*/
	public final EZDCStringItem              mtrLbCd_B;

    /** SER_NUM_B*/
	public final EZDCStringItem              serNum_B;

    /** START_MTR_READ_DT_B*/
	public final EZDCDateItem              startMtrReadDt_B;

    /** END_MTR_READ_DT_B*/
	public final EZDCDateItem              endMtrReadDt_B;

    /** MTR_LB_DESC_TXT_B*/
	public final EZDCStringItem              mtrLbDescTxt_B;

    /** OLD_START_READ_MTR_CNT_B*/
	public final EZDCBigDecimalItem              oldStartReadMtrCnt_B;

    /** OLD_END_READ_MTR_CNT_B*/
	public final EZDCBigDecimalItem              oldEndReadMtrCnt_B;

    /** OLD_TEST_MTR_CNT_B*/
	public final EZDCBigDecimalItem              oldTestMtrCnt_B;

    /** NEW_START_READ_MTR_CNT_B*/
	public final EZDCBigDecimalItem              newStartReadMtrCnt_B;

    /** NEW_END_READ_MTR_CNT_B*/
	public final EZDCBigDecimalItem              newEndReadMtrCnt_B;

    /** NEW_TEST_MTR_CNT_B*/
	public final EZDCBigDecimalItem              newTestMtrCnt_B;

    /** XX_REC_HIST_CRAT_TS_B*/
	public final EZDCStringItem              xxRecHistCratTs_B;

    /** XX_REC_HIST_CRAT_BY_NM_B*/
	public final EZDCStringItem              xxRecHistCratByNm_B;

    /** XX_REC_HIST_UPD_TS_B*/
	public final EZDCStringItem              xxRecHistUpdTs_B;

    /** XX_REC_HIST_UPD_BY_NM_B*/
	public final EZDCStringItem              xxRecHistUpdByNm_B;

    /** XX_REC_HIST_TBL_NM_B*/
	public final EZDCStringItem              xxRecHistTblNm_B;


	/**
	 * NSAL1120_BCMsg is constructor.
	 * The initialization when the instance of NSAL1120_BCMsg is generated.
	 */
	public NSAL1120_BCMsg() {
		this(false, -1);
	}

	/**
	 * NSAL1120_BCMsg is constructor.
	 * The initialization when the instance of NSAL1120_BCMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL1120_BCMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxRowNum_B = (EZDCBigDecimalItem)newItem("xxRowNum_B");
		xxChkBox_B = (EZDCStringItem)newItem("xxChkBox_B");
		svcCrRebilPk_B = (EZDCBigDecimalItem)newItem("svcCrRebilPk_B");
		svcCrRebilMtrReadPk_B = (EZDCBigDecimalItem)newItem("svcCrRebilMtrReadPk_B");
		svcCrRebilMtrBllgPk_B = (EZDCBigDecimalItem)newItem("svcCrRebilMtrBllgPk_B");
		svcMachMstrPk_B = (EZDCBigDecimalItem)newItem("svcMachMstrPk_B");
		svcInvLineMtrPk_B = (EZDCBigDecimalItem)newItem("svcInvLineMtrPk_B");
		origSvcInvNum_B = (EZDCStringItem)newItem("origSvcInvNum_B");
		bllgMtrLbCd_B = (EZDCStringItem)newItem("bllgMtrLbCd_B");
		mtrLbCd_B = (EZDCStringItem)newItem("mtrLbCd_B");
		serNum_B = (EZDCStringItem)newItem("serNum_B");
		startMtrReadDt_B = (EZDCDateItem)newItem("startMtrReadDt_B");
		endMtrReadDt_B = (EZDCDateItem)newItem("endMtrReadDt_B");
		mtrLbDescTxt_B = (EZDCStringItem)newItem("mtrLbDescTxt_B");
		oldStartReadMtrCnt_B = (EZDCBigDecimalItem)newItem("oldStartReadMtrCnt_B");
		oldEndReadMtrCnt_B = (EZDCBigDecimalItem)newItem("oldEndReadMtrCnt_B");
		oldTestMtrCnt_B = (EZDCBigDecimalItem)newItem("oldTestMtrCnt_B");
		newStartReadMtrCnt_B = (EZDCBigDecimalItem)newItem("newStartReadMtrCnt_B");
		newEndReadMtrCnt_B = (EZDCBigDecimalItem)newItem("newEndReadMtrCnt_B");
		newTestMtrCnt_B = (EZDCBigDecimalItem)newItem("newTestMtrCnt_B");
		xxRecHistCratTs_B = (EZDCStringItem)newItem("xxRecHistCratTs_B");
		xxRecHistCratByNm_B = (EZDCStringItem)newItem("xxRecHistCratByNm_B");
		xxRecHistUpdTs_B = (EZDCStringItem)newItem("xxRecHistUpdTs_B");
		xxRecHistUpdByNm_B = (EZDCStringItem)newItem("xxRecHistUpdByNm_B");
		xxRecHistTblNm_B = (EZDCStringItem)newItem("xxRecHistTblNm_B");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL1120_BCMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL1120_BCMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxRowNum_B", "xxRowNum_B", "B", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxChkBox_B", "xxChkBox_B", "B", null, TYPE_HANKAKUEIJI, "1", null},
	{"svcCrRebilPk_B", "svcCrRebilPk_B", "B", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"svcCrRebilMtrReadPk_B", "svcCrRebilMtrReadPk_B", "B", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"svcCrRebilMtrBllgPk_B", "svcCrRebilMtrBllgPk_B", "B", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"svcMachMstrPk_B", "svcMachMstrPk_B", "B", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"svcInvLineMtrPk_B", "svcInvLineMtrPk_B", "B", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"origSvcInvNum_B", "origSvcInvNum_B", "B", null, TYPE_HANKAKUEISU, "13", null},
	{"bllgMtrLbCd_B", "bllgMtrLbCd_B", "B", null, TYPE_HANKAKUEISU, "2", null},
	{"mtrLbCd_B", "mtrLbCd_B", "B", null, TYPE_HANKAKUEISU, "2", null},
	{"serNum_B", "serNum_B", "B", null, TYPE_HANKAKUEISU, "30", null},
	{"startMtrReadDt_B", "startMtrReadDt_B", "B", null, TYPE_NENTSUKIHI, "8", null},
	{"endMtrReadDt_B", "endMtrReadDt_B", "B", null, TYPE_NENTSUKIHI, "8", null},
	{"mtrLbDescTxt_B", "mtrLbDescTxt_B", "B", null, TYPE_HANKAKUEISU, "50", null},
	{"oldStartReadMtrCnt_B", "oldStartReadMtrCnt_B", "B", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"oldEndReadMtrCnt_B", "oldEndReadMtrCnt_B", "B", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"oldTestMtrCnt_B", "oldTestMtrCnt_B", "B", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"newStartReadMtrCnt_B", "newStartReadMtrCnt_B", "B", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"newEndReadMtrCnt_B", "newEndReadMtrCnt_B", "B", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"newTestMtrCnt_B", "newTestMtrCnt_B", "B", null, TYPE_SEISU_SYOSU, "10", "0"},
	{"xxRecHistCratTs_B", "xxRecHistCratTs_B", "B", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistCratByNm_B", "xxRecHistCratByNm_B", "B", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistUpdTs_B", "xxRecHistUpdTs_B", "B", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistUpdByNm_B", "xxRecHistUpdByNm_B", "B", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistTblNm_B", "xxRecHistTblNm_B", "B", null, TYPE_HANKAKUEISU, "60", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_ROW_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRowNum_B
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_B
        {"SVC_CR_REBIL_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcCrRebilPk_B
        {"SVC_CR_REBIL_MTR_READ_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcCrRebilMtrReadPk_B
        {"SVC_CR_REBIL_MTR_BLLG_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcCrRebilMtrBllgPk_B
        {"SVC_MACH_MSTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMachMstrPk_B
        {"SVC_INV_LINE_MTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcInvLineMtrPk_B
        {"ORIG_SVC_INV_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//origSvcInvNum_B
        {"BLLG_MTR_LB_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//bllgMtrLbCd_B
        {"MTR_LB_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrLbCd_B
        {"SER_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//serNum_B
        {"START_MTR_READ_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//startMtrReadDt_B
        {"END_MTR_READ_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//endMtrReadDt_B
        {"MTR_LB_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrLbDescTxt_B
        {"OLD_START_READ_MTR_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//oldStartReadMtrCnt_B
        {"OLD_END_READ_MTR_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//oldEndReadMtrCnt_B
        {"OLD_TEST_MTR_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//oldTestMtrCnt_B
        {"NEW_START_READ_MTR_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//newStartReadMtrCnt_B
        {"NEW_END_READ_MTR_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//newEndReadMtrCnt_B
        {"NEW_TEST_MTR_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//newTestMtrCnt_B
        {"XX_REC_HIST_CRAT_TS",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratTs_B
        {"XX_REC_HIST_CRAT_BY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratByNm_B
        {"XX_REC_HIST_UPD_TS",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdTs_B
        {"XX_REC_HIST_UPD_BY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdByNm_B
        {"XX_REC_HIST_TBL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistTblNm_B
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

