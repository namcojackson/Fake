//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20180419113001000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSAL1230_ACMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NSAL1230;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL1230 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL1230_ACMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_CHK_BOX_A1*/
	public final EZDCStringItem              xxChkBox_A1;

    /** COA_AFFL_ACCT_NM_A1*/
	public final EZDCStringItem              coaAfflAcctNm_A1;

    /** COA_ACCT_DESC_TXT_A1*/
	public final EZDCStringItem              coaAcctDescTxt_A1;

    /** PRC_ALLOC_RATE_A1*/
	public final EZDCBigDecimalItem              prcAllocRate_A1;

    /** PRC_ALLOC_AMT_A1*/
	public final EZDCBigDecimalItem              prcAllocAmt_A1;

    /** COA_CMPY_CD_A1*/
	public final EZDCStringItem              coaCmpyCd_A1;

    /** COA_EXTN_CD_A1*/
	public final EZDCStringItem              coaExtnCd_A1;

    /** COA_BR_CD_A1*/
	public final EZDCStringItem              coaBrCd_A1;

    /** COA_CC_CD_A1*/
	public final EZDCStringItem              coaCcCd_A1;

    /** COA_ACCT_CD_A1*/
	public final EZDCStringItem              coaAcctCd_A1;

    /** COA_PROJ_CD_A1*/
	public final EZDCStringItem              coaProjCd_A1;

    /** COA_PROD_CD_A1*/
	public final EZDCStringItem              coaProdCd_A1;

    /** COA_AFFL_CD_A1*/
	public final EZDCStringItem              coaAfflCd_A1;

    /** COA_CH_CD_A1*/
	public final EZDCStringItem              coaChCd_A1;

    /** GLBL_CMPY_CD_A1*/
	public final EZDCStringItem              glblCmpyCd_A1;

    /** DS_CONTR_SEG_ALLOC_PK_A1*/
	public final EZDCBigDecimalItem              dsContrSegAllocPk_A1;

    /** DS_CONTR_PK_A1*/
	public final EZDCBigDecimalItem              dsContrPk_A1;

    /** DS_CONTR_DTL_PK_A1*/
	public final EZDCBigDecimalItem              dsContrDtlPk_A1;

    /** SVC_INV_CHRG_TP_CD_A1*/
	public final EZDCStringItem              svcInvChrgTpCd_A1;

    /** XX_ROW_NUM_A1*/
	public final EZDCBigDecimalItem              xxRowNum_A1;

    /** XX_INS_UPD_DEL_FLG_A1*/
	public final EZDCStringItem              xxInsUpdDelFlg_A1;

    /** _EZUpdateDateTime_A1*/
	public final EZDCStringItem              ezUpTime_A1;

    /** _EZUpTimeZone_A1*/
	public final EZDCStringItem              ezUpTimeZone_A1;

    /** XX_REC_HIST_CRAT_TS_A*/
	public final EZDCStringItem              xxRecHistCratTs_A;

    /** XX_REC_HIST_CRAT_BY_NM_A*/
	public final EZDCStringItem              xxRecHistCratByNm_A;

    /** XX_REC_HIST_UPD_TS_A*/
	public final EZDCStringItem              xxRecHistUpdTs_A;

    /** XX_REC_HIST_UPD_BY_NM_A*/
	public final EZDCStringItem              xxRecHistUpdByNm_A;

    /** XX_REC_HIST_TBL_NM_A*/
	public final EZDCStringItem              xxRecHistTblNm_A;


	/**
	 * NSAL1230_ACMsg is constructor.
	 * The initialization when the instance of NSAL1230_ACMsg is generated.
	 */
	public NSAL1230_ACMsg() {
		this(false, -1);
	}

	/**
	 * NSAL1230_ACMsg is constructor.
	 * The initialization when the instance of NSAL1230_ACMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL1230_ACMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxChkBox_A1 = (EZDCStringItem)newItem("xxChkBox_A1");
		coaAfflAcctNm_A1 = (EZDCStringItem)newItem("coaAfflAcctNm_A1");
		coaAcctDescTxt_A1 = (EZDCStringItem)newItem("coaAcctDescTxt_A1");
		prcAllocRate_A1 = (EZDCBigDecimalItem)newItem("prcAllocRate_A1");
		prcAllocAmt_A1 = (EZDCBigDecimalItem)newItem("prcAllocAmt_A1");
		coaCmpyCd_A1 = (EZDCStringItem)newItem("coaCmpyCd_A1");
		coaExtnCd_A1 = (EZDCStringItem)newItem("coaExtnCd_A1");
		coaBrCd_A1 = (EZDCStringItem)newItem("coaBrCd_A1");
		coaCcCd_A1 = (EZDCStringItem)newItem("coaCcCd_A1");
		coaAcctCd_A1 = (EZDCStringItem)newItem("coaAcctCd_A1");
		coaProjCd_A1 = (EZDCStringItem)newItem("coaProjCd_A1");
		coaProdCd_A1 = (EZDCStringItem)newItem("coaProdCd_A1");
		coaAfflCd_A1 = (EZDCStringItem)newItem("coaAfflCd_A1");
		coaChCd_A1 = (EZDCStringItem)newItem("coaChCd_A1");
		glblCmpyCd_A1 = (EZDCStringItem)newItem("glblCmpyCd_A1");
		dsContrSegAllocPk_A1 = (EZDCBigDecimalItem)newItem("dsContrSegAllocPk_A1");
		dsContrPk_A1 = (EZDCBigDecimalItem)newItem("dsContrPk_A1");
		dsContrDtlPk_A1 = (EZDCBigDecimalItem)newItem("dsContrDtlPk_A1");
		svcInvChrgTpCd_A1 = (EZDCStringItem)newItem("svcInvChrgTpCd_A1");
		xxRowNum_A1 = (EZDCBigDecimalItem)newItem("xxRowNum_A1");
		xxInsUpdDelFlg_A1 = (EZDCStringItem)newItem("xxInsUpdDelFlg_A1");
		ezUpTime_A1 = (EZDCStringItem)newItem("ezUpTime_A1");
		ezUpTimeZone_A1 = (EZDCStringItem)newItem("ezUpTimeZone_A1");
		xxRecHistCratTs_A = (EZDCStringItem)newItem("xxRecHistCratTs_A");
		xxRecHistCratByNm_A = (EZDCStringItem)newItem("xxRecHistCratByNm_A");
		xxRecHistUpdTs_A = (EZDCStringItem)newItem("xxRecHistUpdTs_A");
		xxRecHistUpdByNm_A = (EZDCStringItem)newItem("xxRecHistUpdByNm_A");
		xxRecHistTblNm_A = (EZDCStringItem)newItem("xxRecHistTblNm_A");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL1230_ACMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL1230_ACMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxChkBox_A1", "xxChkBox_A1", "A1", null, TYPE_HANKAKUEIJI, "1", null},
	{"coaAfflAcctNm_A1", "coaAfflAcctNm_A1", "A1", null, TYPE_HANKAKUEISU, "50", null},
	{"coaAcctDescTxt_A1", "coaAcctDescTxt_A1", "A1", null, TYPE_HANKAKUEISU, "50", null},
	{"prcAllocRate_A1", "prcAllocRate_A1", "A1", null, TYPE_SEISU_SYOSU, "9", "5"},
	{"prcAllocAmt_A1", "prcAllocAmt_A1", "A1", null, TYPE_SEISU_SYOSU, "19", "4"},
	{"coaCmpyCd_A1", "coaCmpyCd_A1", "A1", null, TYPE_HANKAKUEISU, "3", null},
	{"coaExtnCd_A1", "coaExtnCd_A1", "A1", null, TYPE_HANKAKUEISU, "3", null},
	{"coaBrCd_A1", "coaBrCd_A1", "A1", null, TYPE_HANKAKUEISU, "3", null},
	{"coaCcCd_A1", "coaCcCd_A1", "A1", null, TYPE_HANKAKUEISU, "6", null},
	{"coaAcctCd_A1", "coaAcctCd_A1", "A1", null, TYPE_HANKAKUEISU, "8", null},
	{"coaProjCd_A1", "coaProjCd_A1", "A1", null, TYPE_HANKAKUEISU, "4", null},
	{"coaProdCd_A1", "coaProdCd_A1", "A1", null, TYPE_HANKAKUEISU, "8", null},
	{"coaAfflCd_A1", "coaAfflCd_A1", "A1", null, TYPE_HANKAKUEISU, "3", null},
	{"coaChCd_A1", "coaChCd_A1", "A1", null, TYPE_HANKAKUEISU, "3", null},
	{"glblCmpyCd_A1", "glblCmpyCd_A1", "A1", null, TYPE_HANKAKUEISU, "4", null},
	{"dsContrSegAllocPk_A1", "dsContrSegAllocPk_A1", "A1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrPk_A1", "dsContrPk_A1", "A1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrDtlPk_A1", "dsContrDtlPk_A1", "A1", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"svcInvChrgTpCd_A1", "svcInvChrgTpCd_A1", "A1", null, TYPE_HANKAKUEISU, "6", null},
	{"xxRowNum_A1", "xxRowNum_A1", "A1", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxInsUpdDelFlg_A1", "xxInsUpdDelFlg_A1", "A1", null, TYPE_HANKAKUEISU, "1", null},
	{"ezUpTime_A1", "ezUpTime_A1", "A1", null, TYPE_HANKAKUEISU, "17", null},
	{"ezUpTimeZone_A1", "ezUpTimeZone_A1", "A1", null, TYPE_HANKAKUEISU, "5", null},
	{"xxRecHistCratTs_A", "xxRecHistCratTs_A", "A", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistCratByNm_A", "xxRecHistCratByNm_A", "A", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistUpdTs_A", "xxRecHistUpdTs_A", "A", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistUpdByNm_A", "xxRecHistUpdByNm_A", "A", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistTblNm_A", "xxRecHistTblNm_A", "A", null, TYPE_HANKAKUEISU, "60", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_A1
        {"COA_AFFL_ACCT_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaAfflAcctNm_A1
        {"COA_ACCT_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaAcctDescTxt_A1
        {"PRC_ALLOC_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcAllocRate_A1
        {"PRC_ALLOC_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcAllocAmt_A1
        {"COA_CMPY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaCmpyCd_A1
        {"COA_EXTN_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaExtnCd_A1
        {"COA_BR_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaBrCd_A1
        {"COA_CC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaCcCd_A1
        {"COA_ACCT_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaAcctCd_A1
        {"COA_PROJ_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaProjCd_A1
        {"COA_PROD_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaProdCd_A1
        {"COA_AFFL_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaAfflCd_A1
        {"COA_CH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaChCd_A1
        {"GLBL_CMPY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//glblCmpyCd_A1
        {"DS_CONTR_SEG_ALLOC_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrSegAllocPk_A1
        {"DS_CONTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrPk_A1
        {"DS_CONTR_DTL_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrDtlPk_A1
        {"SVC_INV_CHRG_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcInvChrgTpCd_A1
        {"XX_ROW_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRowNum_A1
        {"XX_INS_UPD_DEL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxInsUpdDelFlg_A1
        {"_EZUpdateDateTime",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTime_A1
        {"_EZUpTimeZone",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ezUpTimeZone_A1
        {"XX_REC_HIST_CRAT_TS",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratTs_A
        {"XX_REC_HIST_CRAT_BY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratByNm_A
        {"XX_REC_HIST_UPD_TS",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdTs_A
        {"XX_REC_HIST_UPD_BY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdByNm_A
        {"XX_REC_HIST_TBL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistTblNm_A
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

