//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20180419113001000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSAL1230CMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NSAL1230;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSAL1230 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSAL1230CMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** DS_CONTR_PK*/
	public final EZDCBigDecimalItem              dsContrPk;

    /** DS_CONTR_DTL_PK*/
	public final EZDCBigDecimalItem              dsContrDtlPk;

    /** SVC_INV_CHRG_TP_CD*/
	public final EZDCStringItem              svcInvChrgTpCd;

    /** COA_CMPY_CD*/
	public final EZDCStringItem              coaCmpyCd;

    /** COA_EXTN_CD*/
	public final EZDCStringItem              coaExtnCd;

    /** COA_BR_CD*/
	public final EZDCStringItem              coaBrCd;

    /** COA_CC_CD*/
	public final EZDCStringItem              coaCcCd;

    /** COA_ACCT_CD*/
	public final EZDCStringItem              coaAcctCd;

    /** COA_PROJ_CD*/
	public final EZDCStringItem              coaProjCd;

    /** COA_PROD_CD*/
	public final EZDCStringItem              coaProdCd;

    /** COA_AFFL_CD*/
	public final EZDCStringItem              coaAfflCd;

    /** COA_CH_CD*/
	public final EZDCStringItem              coaChCd;

    /** XX_MODE_CD*/
	public final EZDCStringItem              xxModeCd;

    /** XX_ROW_NUM*/
	public final EZDCBigDecimalItem              xxRowNum;

    /** PRC_ALLOC_RATE*/
	public final EZDCBigDecimalItem              prcAllocRate;

    /** PRC_ALLOC_AMT*/
	public final EZDCBigDecimalItem              prcAllocAmt;

    /** BASE_PRC_DEAL_AMT*/
	public final EZDCBigDecimalItem              basePrcDealAmt;

    /** A*/
	public final business.blap.NSAL1230.NSAL1230_ACMsgArray              A;


	/**
	 * NSAL1230CMsg is constructor.
	 * The initialization when the instance of NSAL1230CMsg is generated.
	 */
	public NSAL1230CMsg() {
		this(false, -1);
	}

	/**
	 * NSAL1230CMsg is constructor.
	 * The initialization when the instance of NSAL1230CMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSAL1230CMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		dsContrPk = (EZDCBigDecimalItem)newItem("dsContrPk");
		dsContrDtlPk = (EZDCBigDecimalItem)newItem("dsContrDtlPk");
		svcInvChrgTpCd = (EZDCStringItem)newItem("svcInvChrgTpCd");
		coaCmpyCd = (EZDCStringItem)newItem("coaCmpyCd");
		coaExtnCd = (EZDCStringItem)newItem("coaExtnCd");
		coaBrCd = (EZDCStringItem)newItem("coaBrCd");
		coaCcCd = (EZDCStringItem)newItem("coaCcCd");
		coaAcctCd = (EZDCStringItem)newItem("coaAcctCd");
		coaProjCd = (EZDCStringItem)newItem("coaProjCd");
		coaProdCd = (EZDCStringItem)newItem("coaProdCd");
		coaAfflCd = (EZDCStringItem)newItem("coaAfflCd");
		coaChCd = (EZDCStringItem)newItem("coaChCd");
		xxModeCd = (EZDCStringItem)newItem("xxModeCd");
		xxRowNum = (EZDCBigDecimalItem)newItem("xxRowNum");
		prcAllocRate = (EZDCBigDecimalItem)newItem("prcAllocRate");
		prcAllocAmt = (EZDCBigDecimalItem)newItem("prcAllocAmt");
		basePrcDealAmt = (EZDCBigDecimalItem)newItem("basePrcDealAmt");
		A = (business.blap.NSAL1230.NSAL1230_ACMsgArray)newMsgArray("A");
	}

	/**
	 * get the type of array which is stored
	 * @return NSAL1230CMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSAL1230CMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"dsContrPk", "dsContrPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"dsContrDtlPk", "dsContrDtlPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
	{"svcInvChrgTpCd", "svcInvChrgTpCd", null, null, TYPE_HANKAKUEISU, "6", null},
	{"coaCmpyCd", "coaCmpyCd", null, null, TYPE_HANKAKUEISU, "3", null},
	{"coaExtnCd", "coaExtnCd", null, null, TYPE_HANKAKUEISU, "3", null},
	{"coaBrCd", "coaBrCd", null, null, TYPE_HANKAKUEISU, "3", null},
	{"coaCcCd", "coaCcCd", null, null, TYPE_HANKAKUEISU, "6", null},
	{"coaAcctCd", "coaAcctCd", null, null, TYPE_HANKAKUEISU, "8", null},
	{"coaProjCd", "coaProjCd", null, null, TYPE_HANKAKUEISU, "4", null},
	{"coaProdCd", "coaProdCd", null, null, TYPE_HANKAKUEISU, "8", null},
	{"coaAfflCd", "coaAfflCd", null, null, TYPE_HANKAKUEISU, "3", null},
	{"coaChCd", "coaChCd", null, null, TYPE_HANKAKUEISU, "3", null},
	{"xxModeCd", "xxModeCd", null, null, TYPE_HANKAKUEISU, "2", null},
	{"xxRowNum", "xxRowNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"prcAllocRate", "prcAllocRate", null, null, TYPE_SEISU_SYOSU, "9", "5"},
	{"prcAllocAmt", "prcAllocAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"basePrcDealAmt", "basePrcDealAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
	{"A", "A", null, "40", "business.blap.NSAL1230.NSAL1230_ACMsgArray", null, null},
	
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"DS_CONTR_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrPk
        {"DS_CONTR_DTL_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsContrDtlPk
        {"SVC_INV_CHRG_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcInvChrgTpCd
        {"COA_CMPY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaCmpyCd
        {"COA_EXTN_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaExtnCd
        {"COA_BR_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaBrCd
        {"COA_CC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaCcCd
        {"COA_ACCT_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaAcctCd
        {"COA_PROJ_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaProjCd
        {"COA_PROD_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaProdCd
        {"COA_AFFL_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaAfflCd
        {"COA_CH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaChCd
        {"XX_MODE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxModeCd
        {"XX_ROW_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRowNum
        {"PRC_ALLOC_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcAllocRate
        {"PRC_ALLOC_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcAllocAmt
        {"BASE_PRC_DEAL_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//basePrcDealAmt
		null,	//A
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

