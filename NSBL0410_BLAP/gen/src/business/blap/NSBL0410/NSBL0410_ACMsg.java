//This file was automatically generated by Business Component Interface Definition Document (Business Component Interface Message Data Definition) and XLA200710010.
// Generated on    :20181227005633000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NSBL0410_ACMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NSBL0410;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NSBL0410 Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NSBL0410_ACMsg extends EZDCMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_CHK_BOX_A*/
	public final EZDCStringItem              xxChkBox_A;

    /** SVC_MNF_CD_A*/
	public final EZDCStringItem              svcMnfCd_A;

    /** SVC_MNF_MOD_NUM_A*/
	public final EZDCStringItem              svcMnfModNum_A;

    /** SVC_MOD_DOC_NUM_A*/
	public final EZDCStringItem              svcModDocNum_A;

    /** XX_MDSE_CD_ANCR_A*/
	public final EZDCStringItem              xxMdseCdAncr_A;

    /** XX_DPLY_BY_CTRL_ITEM_CD_A*/
	public final EZDCStringItem              xxDplyByCtrlItemCd_A;

    /** MDSE_CD_A*/
	public final EZDCStringItem              mdseCd_A;

    /** SVC_MOD_PRTY_DESC_TXT_A*/
	public final EZDCStringItem              svcModPrtyDescTxt_A;

    /** SVC_MOD_RPT_TRK_FLG_A*/
	public final EZDCStringItem              svcModRptTrkFlg_A;

    /** SVC_MOD_ISS_DT_A*/
	public final EZDCDateItem              svcModIssDt_A;

    /** SVC_MOD_START_DT_A*/
	public final EZDCDateItem              svcModStartDt_A;

    /** SVC_MOD_ON_HLD_DT_A*/
	public final EZDCDateItem              svcModOnHldDt_A;

    /** SVC_MOD_CANC_DT_A*/
	public final EZDCDateItem              svcModCancDt_A;

    /** SVC_MOD_OBSL_DT_A*/
	public final EZDCDateItem              svcModObslDt_A;

    /** SVC_MOD_OBSL_NUM_A*/
	public final EZDCStringItem              svcModObslNum_A;

    /** SLS_DT_A*/
	public final EZDCDateItem              slsDt_A;

    /** SVC_MOD_DTL_PK_A*/
	public final EZDCBigDecimalItem              svcModDtlPk_A;

    /** XX_ROW_NUM_A*/
	public final EZDCBigDecimalItem              xxRowNum_A;

    /** XX_REC_HIST_CRAT_TS_A*/
	public final EZDCStringItem              xxRecHistCratTs_A;

    /** XX_REC_HIST_CRAT_BY_NM_A*/
	public final EZDCStringItem              xxRecHistCratByNm_A;

    /** XX_REC_HIST_UPD_TS_A*/
	public final EZDCStringItem              xxRecHistUpdTs_A;

    /** XX_REC_HIST_UPD_BY_NM_A*/
	public final EZDCStringItem              xxRecHistUpdByNm_A;

    /** XX_REC_HIST_TBL_NM_A*/
	public final EZDCStringItem              xxRecHistTblNm_A;


	/**
	 * NSBL0410_ACMsg is constructor.
	 * The initialization when the instance of NSBL0410_ACMsg is generated.
	 */
	public NSBL0410_ACMsg() {
		this(false, -1);
	}

	/**
	 * NSBL0410_ACMsg is constructor.
	 * The initialization when the instance of NSBL0410_ACMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NSBL0410_ACMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxChkBox_A = (EZDCStringItem)newItem("xxChkBox_A");
		svcMnfCd_A = (EZDCStringItem)newItem("svcMnfCd_A");
		svcMnfModNum_A = (EZDCStringItem)newItem("svcMnfModNum_A");
		svcModDocNum_A = (EZDCStringItem)newItem("svcModDocNum_A");
		xxMdseCdAncr_A = (EZDCStringItem)newItem("xxMdseCdAncr_A");
		xxDplyByCtrlItemCd_A = (EZDCStringItem)newItem("xxDplyByCtrlItemCd_A");
		mdseCd_A = (EZDCStringItem)newItem("mdseCd_A");
		svcModPrtyDescTxt_A = (EZDCStringItem)newItem("svcModPrtyDescTxt_A");
		svcModRptTrkFlg_A = (EZDCStringItem)newItem("svcModRptTrkFlg_A");
		svcModIssDt_A = (EZDCDateItem)newItem("svcModIssDt_A");
		svcModStartDt_A = (EZDCDateItem)newItem("svcModStartDt_A");
		svcModOnHldDt_A = (EZDCDateItem)newItem("svcModOnHldDt_A");
		svcModCancDt_A = (EZDCDateItem)newItem("svcModCancDt_A");
		svcModObslDt_A = (EZDCDateItem)newItem("svcModObslDt_A");
		svcModObslNum_A = (EZDCStringItem)newItem("svcModObslNum_A");
		slsDt_A = (EZDCDateItem)newItem("slsDt_A");
		svcModDtlPk_A = (EZDCBigDecimalItem)newItem("svcModDtlPk_A");
		xxRowNum_A = (EZDCBigDecimalItem)newItem("xxRowNum_A");
		xxRecHistCratTs_A = (EZDCStringItem)newItem("xxRecHistCratTs_A");
		xxRecHistCratByNm_A = (EZDCStringItem)newItem("xxRecHistCratByNm_A");
		xxRecHistUpdTs_A = (EZDCStringItem)newItem("xxRecHistUpdTs_A");
		xxRecHistUpdByNm_A = (EZDCStringItem)newItem("xxRecHistUpdByNm_A");
		xxRecHistTblNm_A = (EZDCStringItem)newItem("xxRecHistTblNm_A");
	}

	/**
	 * get the type of array which is stored
	 * @return NSBL0410_ACMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NSBL0410_ACMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxChkBox_A", "xxChkBox_A", "A", null, TYPE_HANKAKUEIJI, "1", null},
	{"svcMnfCd_A", "svcMnfCd_A", "A", null, TYPE_HANKAKUEISU, "2", null},
	{"svcMnfModNum_A", "svcMnfModNum_A", "A", null, TYPE_HANKAKUEISU, "20", null},
	{"svcModDocNum_A", "svcModDocNum_A", "A", null, TYPE_HANKAKUEISU, "15", null},
	{"xxMdseCdAncr_A", "xxMdseCdAncr_A", "A", null, TYPE_HANKAKUEISU, "30", null},
	{"xxDplyByCtrlItemCd_A", "xxDplyByCtrlItemCd_A", "A", null, TYPE_HANKAKUEISU, "50", null},
	{"mdseCd_A", "mdseCd_A", "A", null, TYPE_HANKAKUEISU, "16", null},
	{"svcModPrtyDescTxt_A", "svcModPrtyDescTxt_A", "A", null, TYPE_HANKAKUEISU, "50", null},
	{"svcModRptTrkFlg_A", "svcModRptTrkFlg_A", "A", null, TYPE_HANKAKUEISU, "1", null},
	{"svcModIssDt_A", "svcModIssDt_A", "A", null, TYPE_NENTSUKIHI, "8", null},
	{"svcModStartDt_A", "svcModStartDt_A", "A", null, TYPE_NENTSUKIHI, "8", null},
	{"svcModOnHldDt_A", "svcModOnHldDt_A", "A", null, TYPE_NENTSUKIHI, "8", null},
	{"svcModCancDt_A", "svcModCancDt_A", "A", null, TYPE_NENTSUKIHI, "8", null},
	{"svcModObslDt_A", "svcModObslDt_A", "A", null, TYPE_NENTSUKIHI, "8", null},
	{"svcModObslNum_A", "svcModObslNum_A", "A", null, TYPE_HANKAKUEISU, "20", null},
	{"slsDt_A", "slsDt_A", "A", null, TYPE_NENTSUKIHI, "8", null},
	{"svcModDtlPk_A", "svcModDtlPk_A", "A", null, TYPE_SEISU_SYOSU, "28", "0"},
	{"xxRowNum_A", "xxRowNum_A", "A", null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxRecHistCratTs_A", "xxRecHistCratTs_A", "A", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistCratByNm_A", "xxRecHistCratByNm_A", "A", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistUpdTs_A", "xxRecHistUpdTs_A", "A", null, TYPE_HANKAKUSUJI, "17", null},
	{"xxRecHistUpdByNm_A", "xxRecHistUpdByNm_A", "A", null, TYPE_HANKAKUEISU, "150", null},
	{"xxRecHistTblNm_A", "xxRecHistTblNm_A", "A", null, TYPE_HANKAKUEISU, "60", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_A
        {"SVC_MNF_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMnfCd_A
        {"SVC_MNF_MOD_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcMnfModNum_A
        {"SVC_MOD_DOC_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcModDocNum_A
        {"XX_MDSE_CD_ANCR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxMdseCdAncr_A
        {"XX_DPLY_BY_CTRL_ITEM_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxDplyByCtrlItemCd_A
        {"MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd_A
        {"SVC_MOD_PRTY_DESC_TXT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcModPrtyDescTxt_A
        {"SVC_MOD_RPT_TRK_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcModRptTrkFlg_A
        {"SVC_MOD_ISS_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcModIssDt_A
        {"SVC_MOD_START_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcModStartDt_A
        {"SVC_MOD_ON_HLD_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcModOnHldDt_A
        {"SVC_MOD_CANC_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcModCancDt_A
        {"SVC_MOD_OBSL_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcModObslDt_A
        {"SVC_MOD_OBSL_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcModObslNum_A
        {"SLS_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//slsDt_A
        {"SVC_MOD_DTL_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcModDtlPk_A
        {"XX_ROW_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRowNum_A
        {"XX_REC_HIST_CRAT_TS",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratTs_A
        {"XX_REC_HIST_CRAT_BY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistCratByNm_A
        {"XX_REC_HIST_UPD_TS",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdTs_A
        {"XX_REC_HIST_UPD_BY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistUpdByNm_A
        {"XX_REC_HIST_TBL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxRecHistTblNm_A
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

