//This file was automatically generated by Screen Field Definition Document and XLA200710010.
// Generated on    :20160905111049000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NMAL7200_ABMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.servlet.NMAL7200;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NMAL7200 Screen Data Message class.
 * @author
 * @version XLA200710010
 */
public class NMAL7200_ABMsg extends EZDBMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** XX_SCR_ITEM_10_TXT*/
	public final EZDBStringItem              xxScrItem10Txt;

    /** PRC_CATG_NM*/
	public final EZDBStringItem              prcCatgNm;

    /** XX_SCR_ITEM_30_TXT*/
	public final EZDBStringItem              xxScrItem30Txt;

    /** XX_SCR_ITEM_7_TXT*/
	public final EZDBStringItem              xxScrItem7Txt;

    /** PRC_RULE_COND_TP_CD*/
	public final EZDBStringItem              prcRuleCondTpCd;


	/**
	 * NMAL7200_ABMsg is constructor.
	 * The initialization when the instance of NMAL7200_ABMsg is generated.
	 */
	public NMAL7200_ABMsg() {
		this(false, -1);
	}

	/**
	 * NMAL7200_ABMsg is constructor.
	 * The initialization when the instance of NMAL7200_ABMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NMAL7200_ABMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		xxScrItem10Txt = (EZDBStringItem)newItem("xxScrItem10Txt");
		prcCatgNm = (EZDBStringItem)newItem("prcCatgNm");
		xxScrItem30Txt = (EZDBStringItem)newItem("xxScrItem30Txt");
		xxScrItem7Txt = (EZDBStringItem)newItem("xxScrItem7Txt");
		prcRuleCondTpCd = (EZDBStringItem)newItem("prcRuleCondTpCd");
	}

	/**
	 * get the type of array which is stored
	 * @return NMAL7200_ABMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NMAL7200_ABMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"xxScrItem10Txt", "xxScrItem10Txt", null, null, TYPE_HANKAKUEISU, "10", null},
	{"prcCatgNm", "prcCatgNm", null, null, TYPE_HANKAKUEISU, "75", null},
	{"xxScrItem30Txt", "xxScrItem30Txt", null, null, TYPE_HANKAKUEISU, "30", null},
	{"xxScrItem7Txt", "xxScrItem7Txt", null, null, TYPE_HANKAKUEISU, "7", null},
	{"prcRuleCondTpCd", "prcRuleCondTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"XX_SCR_ITEM_10_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxScrItem10Txt
        {"PRC_CATG_NM",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCatgNm
        {"XX_SCR_ITEM_30_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxScrItem30Txt
        {"XX_SCR_ITEM_7_TXT",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxScrItem7Txt
        {"PRC_RULE_COND_TP_CD",  NO,  null,null,"1", NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRuleCondTpCd
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

