//This file was automatically generated by Business Component Interface Definition Document (Define Business Application Global Area) and XLA200710010.
// Generated on    :20160518092730000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :BusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NMAL7150SMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.blap.NMAL7150;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NMAL7150 Business Application Global Area Message class.
 * @author
 * @version XLA200710010
 */
public class NMAL7150SMsg extends EZDSMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** EFF_FROM_DT_TD*/
	public final EZDSDateItem              effFromDt_TD;

    /** EFF_THRU_DT_TD*/
	public final EZDSDateItem              effThruDt_TD;

    /** XX_CHK_BOX_E*/
	public final EZDSStringItem              xxChkBox_E;

    /** XX_CHK_BOX_R*/
	public final EZDSStringItem              xxChkBox_R;

    /** XX_CHK_BOX_D*/
	public final EZDSStringItem              xxChkBox_D;

    /** XX_PAGE_SHOW_FROM_NUM*/
	public final EZDSBigDecimalItem              xxPageShowFromNum;

    /** XX_PAGE_SHOW_TO_NUM*/
	public final EZDSBigDecimalItem              xxPageShowToNum;

    /** XX_PAGE_SHOW_OF_NUM*/
	public final EZDSBigDecimalItem              xxPageShowOfNum;

    /** XX_FILE_DATA*/
	public final EZDSMimeSourceItem              xxFileData;

    /** A*/
	public final business.blap.NMAL7150.NMAL7150_ASMsgArray              A;

    /** B*/
	public final business.blap.NMAL7150.NMAL7150_BSMsgArray              B;


	/**
	 * NMAL7150SMsg is constructor.
	 * The initialization when the instance of NMAL7150SMsg is generated.
	 */
	public NMAL7150SMsg() {
		this(false, -1);
	}

	/**
	 * NMAL7150SMsg is constructor.
	 * The initialization when the instance of NMAL7150SMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NMAL7150SMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		effFromDt_TD = (EZDSDateItem)newItem("effFromDt_TD");
		effThruDt_TD = (EZDSDateItem)newItem("effThruDt_TD");
		xxChkBox_E = (EZDSStringItem)newItem("xxChkBox_E");
		xxChkBox_R = (EZDSStringItem)newItem("xxChkBox_R");
		xxChkBox_D = (EZDSStringItem)newItem("xxChkBox_D");
		xxPageShowFromNum = (EZDSBigDecimalItem)newItem("xxPageShowFromNum");
		xxPageShowToNum = (EZDSBigDecimalItem)newItem("xxPageShowToNum");
		xxPageShowOfNum = (EZDSBigDecimalItem)newItem("xxPageShowOfNum");
		xxFileData = (EZDSMimeSourceItem)newItem("xxFileData");
		A = (business.blap.NMAL7150.NMAL7150_ASMsgArray)newMsgArray("A");
		B = (business.blap.NMAL7150.NMAL7150_BSMsgArray)newMsgArray("B");
	}

	/**
	 * get the type of array which is stored
	 * @return NMAL7150SMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NMAL7150SMsgArray();
	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = {

	{"effFromDt_TD", "effFromDt_TD", "TD", null, TYPE_NENTSUKIHI, "8", null},
	{"effThruDt_TD", "effThruDt_TD", "TD", null, TYPE_NENTSUKIHI, "8", null},
	{"xxChkBox_E", "xxChkBox_E", "E", null, TYPE_HANKAKUEIJI, "1", null},
	{"xxChkBox_R", "xxChkBox_R", "R", null, TYPE_HANKAKUEIJI, "1", null},
	{"xxChkBox_D", "xxChkBox_D", "D", null, TYPE_HANKAKUEIJI, "1", null},
	{"xxPageShowFromNum", "xxPageShowFromNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowToNum", "xxPageShowToNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxPageShowOfNum", "xxPageShowOfNum", null, null, TYPE_SEISU_SYOSU, "5", "0"},
	{"xxFileData", "xxFileData", null, null, TYPE_UPLOAD, null, null},
	{"A", "A", null, "1000", "business.blap.NMAL7150.NMAL7150_ASMsgArray", null, null},
	
	{"B", "B", null, "1000", "business.blap.NMAL7150.NMAL7150_BSMsgArray", null, null},
	
	};

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = {

        {"EFF_FROM_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effFromDt_TD
        {"EFF_THRU_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//effThruDt_TD
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_E
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_R
        {"XX_CHK_BOX",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxChkBox_D
        {"XX_PAGE_SHOW_FROM_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowFromNum
        {"XX_PAGE_SHOW_TO_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowToNum
        {"XX_PAGE_SHOW_OF_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPageShowOfNum
        {"XX_FILE_DATA",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxFileData
		null,	//A
		null,	//B
	};

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

