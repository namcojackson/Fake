<?xml version="1.0" encoding="UTF-8"?>

<sqlMap namespace="NLGB001001">

    <statement id="getSo" parameterClass="Map">
        SELECT
               SO.SO_NUM
              ,SO.TRX_HDR_NUM AS WMS_ORD_NUM
              <!-- QC#19109 Add Column -->
              ,CASE WHEN SCT.CPO_EXST_FLG = 'Y' THEN SO.TRX_HDR_NUM
                    ELSE NULL
               END                                          TRX_HDR_NUM
              ,SO.PICK_TKT_NUM
              ,SUBSTR(SO.CUST_ISS_PO_NUM,0 , #lgCustIssPoNum#) AS CUST_ISS_PO_NUM
              ,SO.SELL_TO_CUST_CD
              ,SO.BILL_TO_CUST_CD
              ,CASE WHEN SO.DROP_SHIP_FLG = 'Y' THEN #shipToCustCd# ELSE SO.SHIP_TO_CUST_CD END AS SHIP_TO_CUST_CD
              ,CASE WHEN SO.EXPT_SHPG_METH_CD IS NULL THEN SV.S80_SHIP_VIA_CD ELSE SO.EXPT_SHPG_METH_CD END AS EXPT_SHPG_METH_CD
              ,CASE WHEN SO.EXPT_SHPG_METH_CD IS NULL THEN S8.S80_SHIP_VIA_NM ELSE SM.SHPG_METH_NM END AS SHPG_METH_NM
              ,CASE WHEN LENGTH(SO.SO_CRAT_TS) &gt; #lgSoCratTs# THEN SUBSTR(SO.SO_CRAT_TS, 0, #lgSoCratTs#) ELSE SO.SO_CRAT_TS END AS SO_CRAT_TS
              ,CASE WHEN SO.PSD_DT IS NOT NULL THEN SO.PSD_DT || #valTs# END AS PSD_DT
              ,CASE WHEN SO.RDD_DT IS NOT NULL THEN SO.RDD_DT || #valTs# END AS RDD_DT
              ,SO.DNLD_TM_TS
              ,SO.DROP_SHIP_FLG
              ,SO.PRINT_SCC_LB_FLG
              ,SO.PRINT_UCC_LB_FLG
              ,SO.MIX_PLT_ALLW_FLG
              ,SO.PRINT_PLT_UCC_LB_FLG
              ,SO.PRINT_NON_ASN_UCC_LB_FLG
              ,SO.ASN_REQ_FLG
              ,NVL(SO.UCC_NUM_CD, #val1#) AS UCC_NUM_CD
              ,SO.EDI_TP_CD
              ,SO.CUST_STORE_NUM
              ,SO.SO_DEPT_NUM
              ,CASE WHEN TRUNC(SO.TOT_SHIP_AMT, #val2#) &gt; #maxTotShipAmt# THEN #maxTotShipAmt# ELSE TRUNC(SO.TOT_SHIP_AMT, #val2#) END AS TOT_SHIP_AMT
              ,SO.RTRN_LB_CD
              ,SO.SO_CONFIG_FLG
              ,SO.CARR_ACCT_NUM
              ,SO.WH_CD AS RTL_WH_CD
              ,NVL(SO.SCHD_DELY_DT, SO.RDD_DT) AS SCHD_DELY_DT
              ,NVL(SO.CARR_CD, SO.VND_CD) AS CARR_CD
              ,SO.VND_CD
              ,SO.SHPG_SVC_LVL_CD
              ,SV.SHPG_SVC_LVL_CD AS CONV_SHPG_SVC_LVL_CD
              ,SO.SVC_CONFIG_MSTR_PK
              ,SO.PRE_ISTL_SHOP_RQST_FLG
              ,SO.WMS_RTE_PATH_CD
              ,SO.SRC_ORD_NUM
              ,SO.SCE_ORD_TP_CD
              ,SC.SCE_ORD_TP_CD AS CONV_SCE_ORD_TP_CD
              ,SO.TRX_SRC_TP_CD
              ,OS.TRX_SRC_TP_CD AS CONV_TRX_SRC_TP_CD
              ,SO.FRT_CHRG_TO_CD
              ,SO.FRT_CHRG_METH_CD
              ,ST.FRT_CHRG_TO_CD AS CONV_FRT_CHRG_TO_CD
              ,ST.FRT_CHRG_METH_CD AS CONV_FRT_CHRG_METH_CD
              ,WW.WMS_UNIQ_ID
              ,WW.WMS_SO_DNLD_SO_INTFC_ID
              ,WW.WMS_SO_DNLD_PO_INTFC_ID
              ,WW.WH_CD
              ,CM.S80_CMPY_CD
              ,SC.S80_ORD_TP_CD
              ,SC.S80_TRX_CD
              ,SC.SCE_ORD_TP_NM
              ,OS.S80_ORD_SRC_CD
              ,SV.S80_SHIP_VIA_CD
              ,S8.S80_SHIP_VIA_NM
              ,ST.S80_SHPG_TERM_CD
              ,SS.S80_SHPG_TERM_NM
              ,SUBSTR(OC.DS_ORD_CATG_DESC_TXT, 0, #lgOtbdSrcOrdTpTxt#) AS OTBD_SRC_ORD_TP_TXT
              ,SP.LOC_GRP_CD
              ,SUBSTR(CP_PSN.PSN_FIRST_NM || ' ' || CP_PSN.PSN_LAST_NM, 0, #lgPsnNm#) AS CPO_PSN_NM
              ,SUBSTR(PO_PSN.PSN_FIRST_NM || ' ' || PO_PSN.PSN_LAST_NM, 0, #lgPsnNm#) AS PO_PSN_NM
              ,SUBSTR(SR_PSN.PSN_FIRST_NM || ' ' || SR_PSN.PSN_LAST_NM, 0, #lgPsnNm#) AS SR_PSN_NM
              <!-- START 2017/11/02 S.Katsuma [SOL#170(QC#18624), ADD] -->
              ,SO.DS_CPO_CONFIG_PK
              ,SC.SVC_LB_GRP_REQ_FLG
              <!-- END 2017/11/02 S.Katsuma [SOL#170(QC#18624), ADD] -->
          FROM
               SHPG_ORD        SO
              ,WMS_WH          WW
              ,RTL_WH          RWH
              ,CMPY_CD_CONV    CM
              ,SCE_ORD_TP      SC
              ,ORD_SRC_CONV    OS
              ,SHIP_VIA_CONV   SV
              ,SHPG_METH       SM
              ,S80_SHIP_VIA    S8
              ,SHPG_TERM_CONV  ST
              ,S80_SHPG_TERM   SS
              ,CPO             CP
              ,PO              PO
              ,DS_ORD_CATG     OC
              ,SHIP_TO_CUST    SP
              ,S21_PSN         CP_PSN
              ,S21_PSN         PO_PSN
              ,S21_PSN         SR_PSN
              ,ORG_FUNC_ASG    OG
              <!-- QC#19109 ADD Table -->
              ,TRX_SRC_TP      SCT
         WHERE
               SO.GLBL_CMPY_CD        = #glblCmpyCd#
           AND SO.WMS_DROP_FLG        = #notDrop#
           AND SO.WMS_DROP_RQST_FLG   = #dropReady#
           AND SO.GLBL_CMPY_CD        = WW.GLBL_CMPY_CD
           AND WW.WH_CD          IN
           <iterate property="wmsTrgtWhCd" var="elem[]" open="(" close=")" conjunction=",">
               #elem[]#
           </iterate>
           AND WW.GLBL_CMPY_CD        = RWH.GLBL_CMPY_CD
           AND WW.WH_CD               = RWH.WMS_WH_CD
           AND RWH.RTL_WH_CD          = SO.WH_CD
           AND RWH.WH_SYS_TP_CD       = #wms#
           AND RWH.SO_PRIN_REQ_FLG    = #flgY#
           AND SO.GLBL_CMPY_CD        = CM.GLBL_CMPY_CD(+)
           AND SO.GLBL_CMPY_CD        = SC.GLBL_CMPY_CD(+)
           AND SO.SCE_ORD_TP_CD       = SC.SCE_ORD_TP_CD(+)
           AND SC.INBD_OTBD_CD(+)     = #outbound#
           AND SO.GLBL_CMPY_CD        = OS.GLBL_CMPY_CD(+)
           AND SO.TRX_SRC_TP_CD       = OS.TRX_SRC_TP_CD(+)
           AND SO.GLBL_CMPY_CD        = SV.GLBL_CMPY_CD(+)
           AND SO.SHPG_SVC_LVL_CD     = SV.SHPG_SVC_LVL_CD(+)
           AND SO.GLBL_CMPY_CD        = SM.GLBL_CMPY_CD(+)
           AND SO.EXPT_SHPG_METH_CD   = SM.SHPG_METH_CD(+)
           AND SV.GLBL_CMPY_CD        = S8.GLBL_CMPY_CD(+)
           AND SV.S80_SHIP_VIA_CD     = S8.S80_SHIP_VIA_CD(+)
           AND SO.GLBL_CMPY_CD        = ST.GLBL_CMPY_CD(+)
           AND SO.FRT_CHRG_TO_CD      = ST.FRT_CHRG_TO_CD(+)
           AND SO.FRT_CHRG_METH_CD    = ST.FRT_CHRG_METH_CD(+)
           AND ST.GLBL_CMPY_CD        = SS.GLBL_CMPY_CD(+)
           AND ST.S80_SHPG_TERM_CD    = SS.S80_SHPG_TERM_CD(+)
           AND SO.GLBL_CMPY_CD        = CP.GLBL_CMPY_CD(+)
           AND SO.TRX_HDR_NUM         = CP.CPO_ORD_NUM(+)
           AND CP.GLBL_CMPY_CD        = OC.GLBL_CMPY_CD(+)
           AND CP.DS_ORD_CATG_CD      = OC.DS_ORD_CATG_CD(+)
           AND SO.GLBL_CMPY_CD        = SP.GLBL_CMPY_CD(+)
           AND SO.SHIP_TO_CUST_CD     = SP.SHIP_TO_CUST_CD(+)
           AND CP.GLBL_CMPY_CD        = CP_PSN.GLBL_CMPY_CD(+)
           AND CP.ADMIN_PSN_CD        = CP_PSN.PSN_CD(+)
           AND SO.GLBL_CMPY_CD        = PO.GLBL_CMPY_CD(+)
           AND SO.TRX_HDR_NUM         = PO.PO_ORD_NUM(+)
           AND PO.GLBL_CMPY_CD        = PO_PSN.GLBL_CMPY_CD(+)
           AND PO.PO_SUBMT_PSN_CD     = PO_PSN.PSN_CD(+)
           AND CP.GLBL_CMPY_CD        = OG.GLBL_CMPY_CD(+)
           AND CP.SLS_REP_TOC_CD      = OG.TOC_CD(+)
           AND NVL(OG.EFF_FROM_DT(+), #minDt#) &lt;= #slsDt#
           AND NVL(OG.EFF_THRU_DT(+), #maxDt#) &gt;= #slsDt#
           AND OG.GLBL_CMPY_CD        = SR_PSN.GLBL_CMPY_CD(+)
           AND OG.PSN_CD              = SR_PSN.PSN_CD(+)
           AND SO.GLBL_CMPY_CD        = SCT.GLBL_CMPY_CD (+)
           AND SO.TRX_SRC_TP_CD       = SCT.TRX_SRC_TP_CD (+)
           AND SO.EZCANCELFLAG        = '0'
           AND WW.EZCANCELFLAG        = '0'
           AND RWH.EZCANCELFLAG       = '0'
           AND CM.EZCANCELFLAG(+)     = '0'
           AND SC.EZCANCELFLAG(+)     = '0'
           AND OS.EZCANCELFLAG(+)     = '0'
           AND SV.EZCANCELFLAG(+)     = '0'
           AND SM.EZCANCELFLAG(+)     = '0'
           AND S8.EZCANCELFLAG(+)     = '0'
           AND ST.EZCANCELFLAG(+)     = '0'
           AND SS.EZCANCELFLAG(+)     = '0'
           AND CP.EZCANCELFLAG(+)     = '0'
           AND OC.EZCANCELFLAG(+)     = '0'
           AND SP.EZCANCELFLAG(+)     = '0'
           AND OG.EZCANCELFLAG(+)     = '0'
           AND CP_PSN.EZCANCELFLAG(+) = '0'
           AND PO_PSN.EZCANCELFLAG(+) = '0'
           AND SR_PSN.EZCANCELFLAG(+) = '0'
           AND SCT.EZCANCELFLAG (+)   = '0'
         ORDER BY
               SO.SO_NUM
              ,WW.WH_CD
    </statement>

    <statement id="getSoDtl" parameterClass="Map" resultClass="Map">
        SELECT
               TO_NUMBER(SOD.SO_SLP_NUM) AS SO_SLP_NUM
              ,SOD.MDSE_CD
              ,SOD.CUST_MDSE_CD
              ,SOD.RQST_ORD_QTY
              ,SOD.SHPG_BAL_QTY
              ,SOD.SHPG_QTY
              ,CASE WHEN TRUNC(SOD.UNIT_PRC_AMT, #val2#) &gt; #maxQty# THEN #maxQty# ELSE TRUNC(SOD.UNIT_PRC_AMT, #val2#) END AS UNIT_PRC_AMT
              ,CASE WHEN TRUNC(SOD.DISC_PRC_AMT, #val2#) &gt; #maxQty# THEN #maxQty# ELSE TRUNC(SOD.DISC_PRC_AMT, #val2#) END AS DISC_PRC_AMT
              ,CASE WHEN TRUNC(SOD.DISC_UNIT_PRC_AMT, #val2#) &gt; #maxQty# THEN #maxQty# ELSE TRUNC(SOD.DISC_UNIT_PRC_AMT, #val2#) END AS DISC_UNIT_PRC_AMT
              ,SOD.SER_NUM_TAKE_FLG
              ,SOD.SET_MDSE_CD
              ,SOD.SET_MDSE_NM
              ,SOD.SET_SHPG_QTY
              ,SOD.IN_EACH_QTY
              ,SOD.TOT_SHPG_WT
              ,SOD.TOT_SHPG_VOL
              ,SOD.BAT_NUM_TAKE_FLG
              ,SOD.CONFIG_ITEM_FLG
              ,SOD.RTL_WH_CD
              ,SOD.RTL_SWH_CD
              ,SOD.PICK_SVC_CONFIG_MSTR_PK
              ,SOD.BACK_ORD_IMPCT_TP_CD
              ,SOD.TRX_HDR_NUM
              ,SOD.TRX_LINE_NUM
              ,SOD.TRX_LINE_SUB_NUM
              ,SOD.CONFIG_ITEM_FLG
              ,SOD.RMV_CONFIG_FLG
              ,SOD.FROM_STK_STS_CD
              ,STK_FROM.STK_STS_CD AS CONV_FROM_STK_STS_CD
              ,SOD.TO_STK_STS_CD
              ,STK_TO.STK_STS_CD AS CONV_TO_STK_STS_CD
              ,SOD.PRE_ISTL_SHOP_RQST_FLG
              ,SOD.PRCH_REQ_NUM
              ,STK_FROM.S80_STK_STS_CD AS S80_STK_STS_CD_FROM
              ,STK_TO.S80_STK_STS_CD AS S80_STK_STS_CD_TO
              ,MDS.RTRN_REQ_PRT_FLG
              ,MDS.MDSE_ITEM_TP_CD
              ,CASE WHEN CD.CPO_ORD_NUM  IS NOT NULL THEN CONCAT(CD.DS_ORD_POSN_NUM, '.') || CONCAT(CD.DS_CPO_LINE_NUM, DECODE(CD.DS_CPO_LINE_SUB_NUM, NULL, '', '.')) || CD.DS_CPO_LINE_SUB_NUM
                     WHEN PD.PO_ORD_NUM   IS NOT NULL THEN PD.DISP_PO_DTL_LINE_NUM
                     WHEN SOD.PRCH_REQ_NUM IS NOT NULL THEN TO_CHAR(TO_NUMBER(SOD.PRCH_REQ_LINE_NUM)) || '.' || TO_CHAR(SOD.PRCH_REQ_LINE_SUB_NUM)
                     ELSE TO_CHAR(TO_NUMBER(SOD.TRX_LINE_NUM))
               END                                       AS DPLY_LINE_NUM
          FROM
               SHPG_ORD_DTL             SOD
              ,STK_STS_CONV             STK_FROM
              ,STK_STS_CONV             STK_TO
              ,MDSE                     MDS
              ,PO_DTL                   PD
              ,CPO_DTL                  CD
         WHERE
               SOD.GLBL_CMPY_CD         = #glblCmpyCd#
           AND SOD.SO_NUM               = #soNum#
           AND SOD.RQST_ORD_QTY         &gt; 0
           AND SOD.GLBL_CMPY_CD         = STK_FROM.GLBL_CMPY_CD(+)
           AND SOD.FROM_STK_STS_CD      = STK_FROM.STK_STS_CD(+)
           AND SOD.GLBL_CMPY_CD         = STK_TO.GLBL_CMPY_CD(+)
           AND SOD.TO_STK_STS_CD        = STK_TO.STK_STS_CD(+)
           AND SOD.GLBL_CMPY_CD         = MDS.GLBL_CMPY_CD(+)
           AND SOD.MDSE_CD              = MDS.MDSE_CD(+)
           AND SOD.GLBL_CMPY_CD         = PD.GLBL_CMPY_CD(+)
           AND SOD.TRX_HDR_NUM          = PD.PO_ORD_NUM(+)
           AND SOD.TRX_LINE_NUM         = PD.PO_ORD_DTL_LINE_NUM(+)
           AND SOD.GLBL_CMPY_CD         = CD.GLBL_CMPY_CD(+)
           AND SOD.TRX_HDR_NUM          = CD.CPO_ORD_NUM(+)
           AND SOD.TRX_LINE_NUM         = CD.CPO_DTL_LINE_NUM(+)
           AND SOD.TRX_LINE_SUB_NUM     = CD.CPO_DTL_LINE_SUB_NUM(+)
           AND SOD.EZCANCELFLAG         = '0'
           AND STK_FROM.EZCANCELFLAG(+) = '0'
           AND STK_TO.EZCANCELFLAG(+)   = '0'
           AND MDS.EZCANCELFLAG(+)      = '0'
           AND PD.EZCANCELFLAG(+)       = '0'
           AND CD.EZCANCELFLAG(+)       = '0'
         ORDER BY
               SO_SLP_NUM
    </statement>

    <statement id="getPsnNmByPr" parameterClass="Map" resultClass="String">
        SELECT
              SUBSTR(PS.PSN_FIRST_NM || ' ' || PS.PSN_LAST_NM, 0, #lgPsnNm#) AS PR_PSN_NM
          FROM
               PRCH_REQ        PR
              ,S21_PSN         PS
         WHERE
               PR.GLBL_CMPY_CD            = #glblCmpyCd#
           AND PR.PRCH_REQ_NUM            = #prchReqNum#
           AND PR.GLBL_CMPY_CD            = PS.GLBL_CMPY_CD
           AND PR.PRCH_REQ_RQST_BY_PSN_CD = PS.PSN_CD
           AND PR.EZCANCELFLAG            = '0'
           AND PS.EZCANCELFLAG            = '0'
    </statement>

    <statement id="getCaseAndPallet" parameterClass="Map">
        SELECT
               DECODE(WIM.UNIT_CRTN_QTY, 0, NULL, ROUND(#wmsShipQty#/WIM.UNIT_CRTN_QTY, #qtyDecimalPlace#)) CASES
              ,DECODE(WIM.UNIT_PLT_QTY, 0, NULL, ROUND(#wmsShipQty#/WIM.UNIT_PLT_QTY, #qtyDecimalPlace#)) PALLETS
          FROM
               WMS_INBD_MDSE WIM
         WHERE
               GLBL_CMPY_CD = #glblCmpyCd#
           AND EZCANCELFLAG = '0'
           AND WH_CD        = #whCd#
           AND WMS_MDSE_CD  = #mdseCd#
           AND WMS_SQ_NUM   = (
                   SELECT
                          MAX(WMS_SQ_NUM)
                     FROM
                          WMS_INBD_MDSE WIM2
                    WHERE
                          WIM2.WMS_MDSE_CD  = WIM.WMS_MDSE_CD
                      AND WIM2.GLBL_CMPY_CD = WIM.GLBL_CMPY_CD
                      AND WIM2.WH_CD        = WIM.WH_CD
                      AND WIM2.EZCANCELFLAG = '0'
               )
    </statement>

    <statement id="getHazmatMdse" parameterClass="Map">
        SELECT
               WMS_HAZ_MAT_FLG
          FROM
               WMS_INBD_MDSE WIM
         WHERE
               GLBL_CMPY_CD = #glblCmpyCd#
           AND EZCANCELFLAG = '0'
           AND WH_CD        = #whCd#
           AND WMS_MDSE_CD  = #mdseCd#
           AND WMS_SQ_NUM   = (
                   SELECT
                          MAX(WMS_SQ_NUM)
                     FROM
                          WMS_INBD_MDSE WIM2
                    WHERE
                          WIM2.WMS_MDSE_CD  = WIM.WMS_MDSE_CD
                      AND WIM2.GLBL_CMPY_CD = WIM.GLBL_CMPY_CD
                      AND WIM2.WH_CD        = WIM.WH_CD
                      AND WIM2.EZCANCELFLAG = '0'
               )
           AND WMS_HAZ_MAT_FLG = #wmsHazMatFlg#
    </statement>

    <statement id="getShipVia" parameterClass="Map">
        SELECT
               SHIP.NEW_SHIP_VIA
              ,SHIP.NEW_PRTY_CD
          FROM
               (
                   SELECT
                          CASE
                               WHEN WSVRM.MD_BREAK_TP_CD = #mdBreakTpCd# THEN
                                    CASE
                                         WHEN #wt# &lt;= NVL(WSVRM.PCL_MAX_CAP_NUM,999999) THEN WSVRM.PCL_CARR_CD
                                         WHEN #wt# &lt;= NVL(WSVRM.LTL_MAX_CAP_NUM,999999) THEN WSVRM.LTL_CARR_CD
                                         ELSE WSVRM.TL_CARR_CD
                                    END
                               ELSE WSVRM.RTE_GUIDE_NUM
                           END NEW_SHIP_VIA
                         ,CASE
                               WHEN WSVRM.MD_BREAK_TP_CD = #mdBreakTpCd# THEN
                                    CASE
                                         WHEN #wt# &lt;= NVL(WSVRM.PCL_MAX_CAP_NUM,999999) THEN WSVRM.PCL_PRTY_CD
                                         WHEN #wt# &lt;= NVL(WSVRM.LTL_MAX_CAP_NUM,999999) THEN WSVRM.LTL_PRTY_CD
                                         ELSE WSVRM.TL_PRTY_CD
                                    END
                               ELSE NULL
                           END NEW_PRTY_CD
                     FROM
                          WMS_SHIP_VIA_RTE_MAP WSVRM
                    WHERE
                          WSVRM.GLBL_CMPY_CD = #glblCmpyCd#
                      AND WSVRM.EZCANCELFLAG = '0'
                      AND WSVRM.WH_CD        = #whCd#
                      AND (
                              WSVRM.WMS_SHIP_VIA_TP_CD = #wmsShipViaCd#
                           OR WSVRM.WMS_SHIP_VIA_TP_CD = #wmsShipViaCdAll#
                          )
                    ORDER BY
                          CASE WHEN WSVRM.WMS_SHIP_VIA_TP_CD = #wmsShipViaCdAll# THEN 1
                               ELSE 0
                           END
               ) SHIP
         WHERE
               ROWNUM = 1
    </statement>

    <statement id="getRtrn" parameterClass="Map">
        SELECT
               RTRN.WMS_RTRN_TO_NM_01
              ,RTRN.WMS_RTRN_TO_NM_02
              ,RTRN.RTRN_TO_FIRST_LINE_ADDR
              ,RTRN.RTRN_TO_SCD_LINE_ADDR
              ,RTRN.RTRN_TO_THIRD_LINE_ADDR
              ,RTRN.RTRN_TO_FRTH_LINE_ADDR
              ,RTRN.RTRN_TO_CTY_ADDR
              ,RTRN.RTRN_TO_ST_CD
              ,RTRN.RTRN_TO_POST_CD
              ,RTRN.RTRN_TO_CTRY_CD
              ,RTRN.WMS_RTRN_TO_CTAC_NM
              ,RTRN.RTRN_TO_CTAC_NUM
          FROM
               (
                   SELECT
                          WWRA.WMS_RTRN_TO_NM_01
                         ,WWRA.WMS_RTRN_TO_NM_02
                         ,WWRA.RTRN_TO_FIRST_LINE_ADDR
                         ,WWRA.RTRN_TO_SCD_LINE_ADDR
                         ,WWRA.RTRN_TO_THIRD_LINE_ADDR
                         ,WWRA.RTRN_TO_FRTH_LINE_ADDR
                         ,WWRA.RTRN_TO_CTY_ADDR
                         ,WWRA.RTRN_TO_ST_CD
                         ,WWRA.RTRN_TO_POST_CD
                         ,WWRA.RTRN_TO_CTRY_CD
                         ,WWRA.WMS_RTRN_TO_CTAC_NM
                         ,WWRA.RTRN_TO_CTAC_NUM
                     FROM
                          WMS_WH_RTRN_ADDR WWRA
                    WHERE
                          WWRA.GLBL_CMPY_CD   =  #glblCmpyCd#
                      AND WWRA.EZCANCELFLAG   =  '0'
                      AND WWRA.WMS_RTRN_LB_CD =  NVL(#rtrnLblCd#, #whCd#)
                      AND WWRA.WH_CD          in (#whCdAll#, #whCd#)
                      AND TO_CHAR(SYSDATE, #sysdateFmt#) BETWEEN WWRA.EFF_FROM_DT_TM_TS AND WWRA.EFF_TO_DT_TM_TS
                    ORDER BY
                          DECODE(WWRA.WH_CD, #whCdAll#, 2, 1) ASC
                         ,WWRA.EFF_FROM_DT_TM_TS DESC
               ) RTRN
         WHERE
               ROWNUM &lt;= 1
    </statement>

    <statement id="countWmsInbdSo" parameterClass="Map" resultClass="BigDecimal">
        SELECT
               COUNT(*)
          FROM
               WMS_INBD_SO_HDR WISH
         WHERE
               WISH.GLBL_CMPY_CD = #glblCmpyCd#
           AND WISH.WMS_SO_ID    = #soNum#
           AND WISH.EZCANCELFLAG = '0'
    </statement>

    <statement id="getSoSerList" parameterClass="Map" resultClass="String">
        SELECT
               SER_NUM
          FROM
               SO_SER SS
         WHERE
               SS.GLBL_CMPY_CD = #glblCmpyCd#
           AND SS.SO_NUM       = #soNum#
           AND SS.SO_SLP_NUM   = #soSlpNum#
           AND SS.ORD_ASG_FLG  = #flgY#
           AND SS.EZCANCELFLAG = '0'
    </statement>

    <statement id="getShpippingBackOrderDetailList" parameterClass="Map" resultClass="Map">
        SELECT
             SBOD.EZTABLEID                                            EZTABLEID
            ,SBOD.EZCANCELFLAG                                         EZCANCELFLAG
            ,SBOD.EZINTIME                                             EZINTIME
            ,SBOD.EZINTIMEZONE                                         EZINTIMEZONE
            ,SBOD.EZINCOMPANYCODE                                      EZINCOMPANYCODE
            ,SBOD.EZINUSERID                                           EZINUSERID
            ,SBOD.EZINAPLID                                            EZINAPLID
            ,SBOD.EZUPTIME                                             EZUPTIME
            ,SBOD.EZUPTIMEZONE                                         EZUPTIMEZONE
            ,SBOD.EZUPCOMPANYCODE                                      EZUPCOMPANYCODE
            ,SBOD.EZUPUSERID                                           EZUPUSERID
            ,SBOD.EZUPAPLID                                            EZUPAPLID
            ,SBOD.GLBL_CMPY_CD                                         GLBL_CMPY_CD
            ,SBOD.SO_NUM                                               SO_NUM
            ,SBOD.SO_SLP_NUM                                           SO_SLP_NUM
            ,SBOD.RTL_WH_CD                                            RTL_WH_CD
            ,SBOD.RTL_SWH_CD                                           RTL_SWH_CD
            ,SBOD.INVTY_LOC_CD                                         INVTY_LOC_CD
            ,SBOD.SHIP_TO_RTL_WH_CD                                    SHIP_TO_RTL_WH_CD
            ,SBOD.SHIP_TO_RTL_SWH_CD                                   SHIP_TO_RTL_SWH_CD
            ,SBOD.TO_INVTY_LOC_CD                                      TO_INVTY_LOC_CD
            ,SBOD.SET_MDSE_CD                                          SET_MDSE_CD
            ,SBOD.SET_MDSE_NM                                          SET_MDSE_NM
            ,SBOD.SHPG_PLN_NUM                                         SHPG_PLN_NUM
            ,NVL(OTM.MDSE_CD, SBOD.MDSE_CD)                            MDSE_CD
            ,SBOD.TRX_HDR_NUM                                          TRX_HDR_NUM
            ,SBOD.TRX_LINE_NUM                                         TRX_LINE_NUM
            ,SBOD.TRX_LINE_SUB_NUM                                     TRX_LINE_SUB_NUM
            ,SBOD.PRCH_REQ_NUM                                         PRCH_REQ_NUM
            ,SBOD.PRCH_REQ_LINE_NUM                                    PRCH_REQ_LINE_NUM
            ,SBOD.PRCH_REQ_LINE_SUB_NUM                                PRCH_REQ_LINE_SUB_NUM
            ,SBOD.FROM_STK_STS_CD                                      FROM_STK_STS_CD
            ,SBOD.TO_STK_STS_CD                                        TO_STK_STS_CD
            ,SBOD.TOT_SHPG_VOL                                         TOT_SHPG_VOL
            ,SBOD.TOT_SHPG_WT                                          TOT_SHPG_WT
            ,SBOD.SHPG_PRC_AMT                                         SHPG_PRC_AMT
            ,SBOD.UNIT_PRC_AMT                                         UNIT_PRC_AMT
            ,SBOD.RQST_ORD_QTY                                         RQST_ORD_QTY
            ,SBOD.SHPG_QTY                                             SHPG_QTY
            ,SBOD.SHPG_BAL_QTY                                         SHPG_BAL_QTY
            ,SBOD.BO_QTY                                               BO_QTY
            ,SBOD.CUST_MDSE_CD                                         CUST_MDSE_CD
            ,SBOD.IN_EACH_QTY                                          IN_EACH_QTY
            ,SBOD.CONFIG_ITEM_FLG                                      CONFIG_ITEM_FLG
            ,SBOD.PRE_ISTL_SHOP_RQST_FLG                               PRE_ISTL_SHOP_RQST_FLG
            ,SBOD.BACK_ORD_IMPCT_TP_CD                                 BACK_ORD_IMPCT_TP_CD
            ,SCF.S80_STK_STS_CD                                        S80_FROM_STK_STS_CD
            ,SCT.S80_STK_STS_CD                                        S80_TO_STK_STS_CD
            ,NVL(NVL(M2.SHPG_SER_TAKE_FLG, M1.SHPG_SER_TAKE_FLG), 'N') SHPG_SER_TAKE_FLG
            ,CASE WHEN CD.CPO_ORD_NUM  IS NOT NULL THEN CONCAT(CD.DS_ORD_POSN_NUM, '.') || CONCAT(CD.DS_CPO_LINE_NUM, DECODE(CD.DS_CPO_LINE_SUB_NUM, NULL, '', '.')) || CD.DS_CPO_LINE_SUB_NUM
                     WHEN PD.PO_ORD_NUM   IS NOT NULL THEN PD.DISP_PO_DTL_LINE_NUM
                     WHEN SBOD.PRCH_REQ_NUM IS NOT NULL THEN TO_CHAR(TO_NUMBER(SBOD.PRCH_REQ_LINE_NUM)) || '.' || TO_CHAR(SBOD.PRCH_REQ_LINE_SUB_NUM)
                     ELSE TO_CHAR(TO_NUMBER(SBOD.TRX_LINE_NUM))
              END                                       AS DPLY_LINE_NUM
       FROM  SHPG_BO_DTL SBOD
            ,STK_STS_CONV SCF
            ,STK_STS_CONV SCT
            ,ORD_TAKE_MDSE OTM
            ,MDSE M1
            ,MDSE M2
            ,PO_DTL PD
            ,CPO_DTL CD
       WHERE 
             SBOD.GLBL_CMPY_CD    = #glblCmpyCd#
       AND   SBOD.SO_NUM          = #soNum#
       AND   SBOD.EZCANCELFLAG    = '0'

       AND   SBOD.GLBL_CMPY_CD    = SCF.GLBL_CMPY_CD (+)  
       AND   SBOD.FROM_STK_STS_CD = SCF.STK_STS_CD (+) 
       AND   SCF.EZCANCELFLAG (+) = '0'

       AND   SBOD.GLBL_CMPY_CD    = OTM.GLBL_CMPY_CD (+)  
       AND   SBOD.MDSE_CD         = OTM.ORD_TAKE_MDSE_CD (+) 
       AND   OTM.EZCANCELFLAG (+) = '0'

       AND   SBOD.GLBL_CMPY_CD    = M1.GLBL_CMPY_CD (+)
       AND   SBOD.MDSE_CD         = M1.MDSE_CD (+)
       AND   M1.EZCANCELFLAG (+)  = '0'

       AND   OTM.GLBL_CMPY_CD    = M2.GLBL_CMPY_CD (+)  
       AND   OTM.MDSE_CD         = M2.MDSE_CD (+) 
       AND   M2.EZCANCELFLAG (+) = '0'

       AND   SBOD.GLBL_CMPY_CD    = SCT.GLBL_CMPY_CD (+) 
       AND   SBOD.TO_STK_STS_CD   = SCT.STK_STS_CD (+)
       AND   SCT.EZCANCELFLAG (+) = '0'

       AND   SBOD.GLBL_CMPY_CD      = PD.GLBL_CMPY_CD(+)
       AND   SBOD.TRX_HDR_NUM       = PD.PO_ORD_NUM(+)
       AND   SBOD.TRX_LINE_NUM      = PD.PO_ORD_DTL_LINE_NUM(+)
       AND   PD.EZCANCELFLAG (+)    = '0'

       AND   SBOD.GLBL_CMPY_CD      = CD.GLBL_CMPY_CD(+)
       AND   SBOD.TRX_HDR_NUM       = CD.CPO_ORD_NUM(+)
       AND   SBOD.TRX_LINE_NUM      = CD.CPO_DTL_LINE_NUM(+)
       AND   SBOD.TRX_LINE_SUB_NUM  = CD.CPO_DTL_LINE_SUB_NUM(+)
       AND   CD.EZCANCELFLAG (+)    = '0'
    </statement>

    <statement id="getWmsOrdTpXpndCdForCache" parameterClass="Map" resultClass="Map">
        SELECT
               WOT.INBD_OTBD_CD || WOT.WMS_ORD_TP_CD AS WMS_ORD_TP_CACHE_KEY
             , WOT.WMS_ORD_TP_XPND_CD
          FROM 
               WMS_ORD_TP WOT
         WHERE
               WOT.GLBL_CMPY_CD  = #glblCmpyCd#
           AND WOT.EZCANCELFLAG  = '0'
    </statement>

    <statement id="isExistsSerialSpec" parameterClass="Map" resultClass="BigDecimal">
        SELECT
               COUNT(*)
          FROM
               SO_SER SS
         WHERE
               SS.GLBL_CMPY_CD = #glblCmpyCd#
           AND SS.SO_NUM       = #soNum#
           AND SS.ORD_ASG_FLG  = #flgY#
           AND SS.EZCANCELFLAG = '0'
    </statement>

    <statement id="getSoCustDtl" parameterClass="Map" resultClass="Map">
        SELECT
            SUBSTR(SC.SO_CUST_LINE_LOC_NM_01, 0, #lgLineColNm#) AS SO_CUST_LINE_LOC_NM_01
           ,SUBSTR(SC.SO_CUST_LINE_LOC_NM_02, 0, #lgLineColNm#) AS SO_CUST_LINE_LOC_NM_02
           ,SC.SO_CUST_LINE_ADDR_01
           ,SC.SO_CUST_LINE_ADDR_02
           ,SC.SO_CUST_LINE_ADDR_03
           ,SC.SO_CUST_LINE_ADDR_04
           ,SC.CTY_ADDR
           ,SC.ST_CD
           ,SC.POST_CD
           ,SC.CTRY_CD
           ,SC.CTAC_PTNR_PSN_NM
           ,SUBSTR(SC.CTAC_PTNR_PSN_TEL_NUM, 0, #lgCtacTelNum#) AS CTAC_PTNR_PSN_TEL_NUM
          FROM
               SHPG_ORD_CUST_DTL SC
         WHERE
               SC.GLBL_CMPY_CD        = #glblCmpyCd#
           AND SC.SO_NUM              = #soNum#
           AND SC.SO_CUST_DATA_TP_CD  = #soCustDataTpCd#
           AND SC.EZCANCELFLAG        = '0'
    </statement>

    <statement id="getWmsSoDtl" parameterClass="Map" resultClass="Map">
        SELECT
            WISD.WH_CD
            ,WISD.WMS_SQ_NUM
            ,WISD.WMS_LINE_NUM AS SO_SLP_NUM
            ,WISD.GLBL_CMPY_CD
            ,WISD.INTFC_TP_ID
            ,WISD.INTFC_REC_TP_ID
            ,WISD.INTFC_REC_ACT_CD
            ,WISD.WMS_CMPY_CD
            ,WISD.WMS_SO_ID
            ,WISD.WMS_MDSE_CD AS MDSE_CD
            ,WISD.S80_STK_STS_CD AS S80_STK_STS_CD_FROM
            ,WISD.CUST_MDSE_CD
            ,WISD.WMS_ORD_QTY AS RQST_ORD_QTY
            ,WISD.BACK_ORD_QTY_NUM AS SHPG_BAL_QTY
            ,WISD.WMS_SHIP_QTY AS SHPG_QTY
            ,WISD.UNIT_PRC_AMT_NUM AS UNIT_PRC_AMT
            ,WISD.UNIT_DISC_AMT_NUM AS DISC_PRC_AMT
            ,WISD.UNIT_DISC_PRC_AMT_NUM AS DISC_UNIT_PRC_AMT
            ,WISD.WMS_TOT_AMT_NUM
            ,WISD.IND_SER_ID AS SER_NUM_TAKE_FLG
            ,WISD.IND_VOID_ALLW_FLG
            ,WISD.S80_STK_STS_CD_TO_CD AS S80_STK_STS_CD_TO
            ,WISD.MDSE_CD_SET_CD AS SET_MDSE_CD
            ,WISD.MDSE_CD_SET_DESC_TXT AS SET_MDSE_NM
            ,WISD.SHIP_SET_QTY AS SET_SHPG_QTY
            ,WISD.UNIT_INSD_QTY AS IN_EACH_QTY
            ,WISD.WMS_RESRC_TXT
            ,WISD.ESS_PO_SQ_NUM
            ,WISD.ESS_MDSE_LINE_NUM
            ,WISD.ESS_LINE_NUM
            ,WISD.ESS_MSG_LINE_NUM
            ,WISD.CONSL_SO_ID
            ,WISD.CONSL_LINE_NUM
            ,WISD.ORIG_SO_ID
            ,WISD.ORIG_LINE_NUM
            ,WISD.TOT_SHIP_QTY
            ,WISD.TOT_WT_AMT_NUM AS TOT_SHPG_WT
            ,WISD.TOT_VOL_AMT_NUM AS TOT_SHPG_VOL
            ,WISD.PO_BIN_LOC_CD
            ,WISD.PO_BULK_LOC_CD
            ,WISD.EST_CSE_AMT_NUM AS COL_CASES
            ,WISD.EST_PLT_AMT_NUM AS COL_PALLETS
            ,WISD.SO_MDSE_TP_CD
            ,WISD.WMS_PACK_TP_CD
            ,WISD.BAT_CPTR_REQ_FLG AS BAT_NUM_TAKE_FLG
            ,WISD.IND_CONFIG_FLG AS CONFIG_ITEM_FLG
            ,WISD.WMS_NET_AMT_NUM
            ,WISD.WMS_DISC_AMT_NUM
            ,WISD.WMS_TAX_AMT_NUM
            ,WISD.RTL_WH_CD
            ,WISD.RTL_SWH_CD
            ,WISD.SVC_CONFIG_MSTR_PK AS PICK_SVC_CONFIG_MSTR_PK
            ,WISD.BACK_ORD_IMPCT_TP_CD AS BACK_ORD_IMPCT_TP_CD
            ,WISD.WMS_ORD_UOM_CD
            ,WISD.PO_LINE_TXT AS TRX_LINE_NUM
            ,WISD.USR_CD_ISTL_REF_TXT AS CONFIG_ITEM_FLG
            ,WISD.BACK_ORD_FLG
            ,WISD.RMV_CONFIG_FLG AS RMV_CONFIG_FLG
            ,WISD.ORIG_ORD_QTY
          FROM
               WMS_INBD_SO_DTL WISD
         WHERE
               WISD.GLBL_CMPY_CD        = #glblCmpyCd#
           AND WISD.WMS_SQ_NUM          = #wmsSqNum#
           AND WISD.WH_CD               = #whCd#
           AND WISD.EZCANCELFLAG        = '0'
    </statement>

    <statement id="getWmsSqNum" parameterClass="Map" resultClass="BigDecimal">
        SELECT
               WISH.WMS_SQ_NUM
          FROM
               WMS_INBD_SO_HDR WISH
         WHERE
               WISH.GLBL_CMPY_CD = #glblCmpyCd#
           AND WISH.WMS_SO_ID    = #soNum#
           AND WISH.STAGE_ACT_CD = #stageActCd#
           AND WISH.EZCANCELFLAG = '0'
    </statement>
    <!-- 08/03/2017 CITS S.Endo Add Sol#072(QC#18386) START -->
    <statement id="getPausedPickExptCd" parameterClass="Map" resultClass="String">
        SELECT
           DC.PAU_PICK_EX_CD PAU_PICK_EX_CD
        FROM
            WMS_INBD_SO_DTL WISD
           ,SHPG_ORD_DTL SD
           ,CPO_DTL CD
           ,DS_ORD_LINE_CATG DC
        WHERE
            WISD.WMS_SO_ID         = #soId#
        AND WISD.WMS_LINE_NUM      = #soSlpNum#
        AND WISD.GLBL_CMPY_CD      = #glblCmpyCd#
        AND WISD.WMS_SO_ID         = SD.SO_NUM
        AND WISD.WMS_LINE_NUM      = SD.SO_SLP_NUM
        AND WISD.GLBL_CMPY_CD      = SD.GLBL_CMPY_CD
        AND SD.TRX_HDR_NUM         = CD.CPO_ORD_NUM
        AND SD.TRX_LINE_NUM        = CD.CPO_DTL_LINE_NUM
        AND SD.TRX_LINE_SUB_NUM    = CD.CPO_DTL_LINE_SUB_NUM
        AND SD.GLBL_CMPY_CD        = CD.GLBL_CMPY_CD
        AND CD.DS_ORD_LINE_CATG_CD = DC.DS_ORD_LINE_CATG_CD
        AND CD.GLBL_CMPY_CD        = DC.GLBL_CMPY_CD
        AND WISD.EZCANCELFLAG      = '0'
        AND SD.EZCANCELFLAG        = '0'
        AND CD.EZCANCELFLAG        = '0'
        AND DC.EZCANCELFLAG        = '0'
    </statement>
    <!-- 08/03/2017 CITS S.Endo Add Sol#072(QC#18386) END -->

    <!-- START 2017/11/02 S.Katsuma [SOL#170(QC#18624), ADD] -->
    <statement id="getSoIf1AddValue" parameterClass="Map" resultClass="Map">
        SELECT
            DM.SVC_LB_GRP_CD
           ,MN.T_MDL_NM
        FROM
            DS_CPO_CONFIG DCC
           ,DS_MDL        DM
           ,MDL_NM        MN
        WHERE
            DCC.GLBL_CMPY_CD     = #glblCmpyCd#
        AND DCC.DS_CPO_CONFIG_PK = #dsCpoConfigPk#
        AND DCC.EZCANCELFLAG     = '0'
        AND DCC.GLBL_CMPY_CD     = DM.GLBL_CMPY_CD
        AND DCC.MDL_ID           = DM.MDL_ID
        AND DM.EZCANCELFLAG      = '0'
        AND DCC.GLBL_CMPY_CD     = MN.T_GLBL_CMPY_CD
        AND DM.MDL_ID            = MN.T_MDL_ID
        AND DCC.EZCANCELFLAG     = '0'
    </statement>

    <statement id="getMtrMachFlg" parameterClass="Map" resultClass="String">
        SELECT
            NVL(DM.MTR_REQ_MDL_FLG, 'N') MTR_MACH_FLG
        FROM
             SVC_MACH_MSTR   SMM
            ,SVC_CONFIG_MSTR SCM
            ,DS_MDL          DM
            ,MDSE            M
        WHERE
            SMM.GLBL_CMPY_CD       = #glblCmpyCd#
        AND SMM.SER_NUM            = #serNum#
        AND SMM.GLBL_CMPY_CD       = SCM.GLBL_CMPY_CD
        AND SMM.SVC_CONFIG_MSTR_PK = SCM.SVC_CONFIG_MSTR_PK
        AND SCM.GLBL_CMPY_CD       = DM.GLBL_CMPY_CD
        AND SCM.MDL_ID             = DM.MDL_ID
        AND SMM.GLBL_CMPY_CD       = M.GLBL_CMPY_CD
        AND SMM.MDSE_CD            = M.MDSE_CD
        AND M.MDSE_ITEM_TP_CD      = #mdseItemTpMachine#
        AND SMM.EZCANCELFLAG       = '0'
        AND SCM.EZCANCELFLAG       = '0'
        AND DM.EZCANCELFLAG        = '0'
        AND M.EZCANCELFLAG         = '0'
    </statement>

    <!-- START 2018/05/11 S.Katsuma [QC#24714,ADD] -->
    <statement id="getCarrCdTxtForReman" parameterClass="Map" resultClass="String">
        SELECT
            RO.WH_LOCTR_CD
        FROM
            SHPG_PLN SP
           ,RMNF_ORD RO
        WHERE
            SP.GLBL_CMPY_CD = #glblCmpyCd#
        AND SP.EZCANCELFLAG = '0'
        AND SP.SO_NUM       = #soNum#
        AND SP.GLBL_CMPY_CD = RO.GLBL_CMPY_CD
        AND SP.TRX_HDR_NUM  = RO.RMNF_ORD_NUM
        AND RO.EZCANCELFLAG = '0'
        AND ROWNUM       = 1
    </statement>
    <!-- END 2018/05/11 S.Katsuma [QC#24714,ADD] -->
</sqlMap>
