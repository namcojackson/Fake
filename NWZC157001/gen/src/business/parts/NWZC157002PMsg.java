//This file was automatically generated by Common Business Component Interface Definition Document and XLA200710010.
// Generated on    :20180423115451000
// Velocity macro:EZDMsg.vm V200607010
// Excel Add-in :CommonBusinessComponentInterfaceDefinitionDocumentAddIn_XLS200710010.xla XLA200710010
/*
 *NWZC157002PMsg.java  Copyright  FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */
package business.parts;

import parts.common.*;
import parts.common.EZDSchemaItemDefines;

/**
 * It is NWZC157002 Common Business Component Interface Message class.
 * @author
 * @version XLA200710010
 */
public class NWZC157002PMsg extends EZDPMsg implements EZDSchemaItemDefines {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	// Data Definition
    /** DS_ORD_POSN_NUM*/
	public final EZDPStringItem              dsOrdPosnNum;

    /** TRX_LINE_NUM*/
	public final EZDPStringItem              trxLineNum;

    /** TRX_LINE_SUB_NUM*/
	public final EZDPStringItem              trxLineSubNum;

    /** CONFIG_CATG_CD*/
	public final EZDPStringItem              configCatgCd;

    /** PRC_BASE_DT*/
	public final EZDPDateItem              prcBaseDt;

    /** BILL_TO_CUST_CD*/
	public final EZDPStringItem              billToCustCd;

    /** DS_TAX_GRP_EXEM_CD_B*/
	public final EZDPStringItem              dsTaxGrpExemCd_B;

    /** DS_TAX_GRP_EXEM_RESL_FLG_B*/
	public final EZDPStringItem              dsTaxGrpExemReslFlg_B;

    /** SHIP_TO_CUST_CD*/
	public final EZDPStringItem              shipToCustCd;

    /** DS_TAX_GRP_EXEM_CD_S*/
	public final EZDPStringItem              dsTaxGrpExemCd_S;

    /** DS_TAX_GRP_EXEM_RESL_FLG_S*/
	public final EZDPStringItem              dsTaxGrpExemReslFlg_S;

    /** TAX_AREA_ID_SH*/
	public final EZDPStringItem              taxAreaId_SH;

    /** DS_INSD_CTY_LIMIT_FLG_SH*/
	public final EZDPStringItem              dsInsdCtyLimitFlg_SH;

    /** TAX_AREA_ID_SP*/
	public final EZDPStringItem              taxAreaId_SP;

    /** DS_ACCT_NUM_SH*/
	public final EZDPStringItem              dsAcctNum_SH;

    /** DS_ACCT_NM_SH*/
	public final EZDPStringItem              dsAcctNm_SH;

    /** DS_CUST_SIC_CD_SH*/
	public final EZDPStringItem              dsCustSicCd_SH;

    /** LOC_NUM_SH*/
	public final EZDPStringItem              locNum_SH;

    /** DS_ACCT_CLS_CD_SH*/
	public final EZDPStringItem              dsAcctClsCd_SH;

    /** DS_ACCT_TP_CD_SH*/
	public final EZDPStringItem              dsAcctTpCd_SH;

    /** DS_ACCT_DLR_CD_SH*/
	public final EZDPStringItem              dsAcctDlrCd_SH;

    /** DS_ACCT_GRP_CD_SH*/
	public final EZDPStringItem              dsAcctGrpCd_SH;

    /** COA_CH_CD_SH*/
	public final EZDPStringItem              coaChCd_SH;

    /** DS_TAX_GRP_EXEM_CD_SH*/
	public final EZDPStringItem              dsTaxGrpExemCd_SH;

    /** DS_TAX_GRP_EXEM_RESL_FLG_SH*/
	public final EZDPStringItem              dsTaxGrpExemReslFlg_SH;

    /** DS_ACCT_NUM_BL*/
	public final EZDPStringItem              dsAcctNum_BL;

    /** DS_ACCT_NM_BL*/
	public final EZDPStringItem              dsAcctNm_BL;

    /** DS_CUST_SIC_CD_BL*/
	public final EZDPStringItem              dsCustSicCd_BL;

    /** LOC_NUM_BL*/
	public final EZDPStringItem              locNum_BL;

    /** DS_ACCT_CLS_CD_BL*/
	public final EZDPStringItem              dsAcctClsCd_BL;

    /** DS_ACCT_TP_CD_BL*/
	public final EZDPStringItem              dsAcctTpCd_BL;

    /** DS_ACCT_DLR_CD_BL*/
	public final EZDPStringItem              dsAcctDlrCd_BL;

    /** DS_ACCT_GRP_CD_BL*/
	public final EZDPStringItem              dsAcctGrpCd_BL;

    /** COA_CH_CD_BL*/
	public final EZDPStringItem              coaChCd_BL;

    /** DS_TAX_GRP_EXEM_CD_BL*/
	public final EZDPStringItem              dsTaxGrpExemCd_BL;

    /** DS_TAX_GRP_EXEM_RESL_FLG_BL*/
	public final EZDPStringItem              dsTaxGrpExemReslFlg_BL;

    /** PRC_CATG_CD*/
	public final EZDPStringItem              prcCatgCd;

    /** CSMP_NUM*/
	public final EZDPStringItem              csmpNum;

    /** DLR_REF_NUM*/
	public final EZDPStringItem              dlrRefNum;

    /** PRC_CONTR_NUM*/
	public final EZDPStringItem              prcContrNum;

    /** COA_BR_CD*/
	public final EZDPStringItem              coaBrCd;

    /** CCY_CD*/
	public final EZDPStringItem              ccyCd;

    /** CCY_CD_PC*/
	public final EZDPStringItem              ccyCd_PC;

    /** PMT_TERM_CASH_DISC_CD*/
	public final EZDPStringItem              pmtTermCashDiscCd;

    /** PRC_LIST_EQUIP_CONFIG_NUM*/
	public final EZDPBigDecimalItem              prcListEquipConfigNum;

    /** PRC_MTR_PKG_PK*/
	public final EZDPBigDecimalItem              prcMtrPkgPk;

    /** PRC_RATE_TP_CD*/
	public final EZDPStringItem              prcRateTpCd;

    /** PRC_SVC_PLN_TP_CD*/
	public final EZDPStringItem              prcSvcPlnTpCd;

    /** PRC_SVC_CONTR_TP_CD*/
	public final EZDPStringItem              prcSvcContrTpCd;

    /** MTR_LB_CD*/
	public final EZDPStringItem              mtrLbCd;

    /** MIN_COPY_VOL_CNT*/
	public final EZDPBigDecimalItem              minCopyVolCnt;

    /** MAX_COPY_VOL_CNT*/
	public final EZDPBigDecimalItem              maxCopyVolCnt;

    /** PRC_LIST_BAND_CD*/
	public final EZDPStringItem              prcListBandCd;

    /** CPC_AMT_RATE*/
	public final EZDPBigDecimalItem              cpcAmtRate;

    /** MIN_CPC_AMT_RATE*/
	public final EZDPBigDecimalItem              minCpcAmtRate;

    /** MAX_CPC_AMT_RATE*/
	public final EZDPBigDecimalItem              maxCpcAmtRate;

    /** TERM_FROM_MTH_AOT*/
	public final EZDPBigDecimalItem              termFromMthAot;

    /** TERM_THRU_MTH_AOT*/
	public final EZDPBigDecimalItem              termThruMthAot;

    /** PRC_SVC_ZONE_CD*/
	public final EZDPStringItem              prcSvcZoneCd;

    /** MTR_MULT_RATE*/
	public final EZDPBigDecimalItem              mtrMultRate;

    /** PRC_SVC_TIER_TP_CD*/
	public final EZDPStringItem              prcSvcTierTpCd;

    /** AVG_COPY_VOL_CNT*/
	public final EZDPBigDecimalItem              avgCopyVolCnt;

    /** SPLY_BASE_AMT*/
	public final EZDPBigDecimalItem              splyBaseAmt;

    /** SPLY_AGMT_PLN_PK*/
	public final EZDPBigDecimalItem              splyAgmtPlnPk;

    /** MDSE_CD*/
	public final EZDPStringItem              mdseCd;

    /** ORD_TAKE_MDSE_CD*/
	public final EZDPStringItem              ordTakeMdseCd;

    /** MDSE_NM*/
	public final EZDPStringItem              mdseNm;

    /** ZEROTH_PROD_CTRL_CD*/
	public final EZDPStringItem              zerothProdCtrlCd;

    /** FIRST_PROD_CTRL_CD*/
	public final EZDPStringItem              firstProdCtrlCd;

    /** SCD_PROD_CTRL_CD*/
	public final EZDPStringItem              scdProdCtrlCd;

    /** THIRD_PROD_CTRL_CD*/
	public final EZDPStringItem              thirdProdCtrlCd;

    /** FRTH_PROD_CTRL_CD*/
	public final EZDPStringItem              frthProdCtrlCd;

    /** FIFTH_PROD_CTRL_CD*/
	public final EZDPStringItem              fifthProdCtrlCd;

    /** SLS_MAT_GRP_CD_01*/
	public final EZDPStringItem              slsMatGrpCd_01;

    /** SLS_MAT_GRP_CD_02*/
	public final EZDPStringItem              slsMatGrpCd_02;

    /** SLS_MAT_GRP_CD_03*/
	public final EZDPStringItem              slsMatGrpCd_03;

    /** MDSE_ITEM_TP_CD*/
	public final EZDPStringItem              mdseItemTpCd;

    /** MDSE_ITEM_CLS_TP_CD*/
	public final EZDPStringItem              mdseItemClsTpCd;

    /** COA_MDSE_TP_CD*/
	public final EZDPStringItem              coaMdseTpCd;

    /** COA_PROD_CD*/
	public final EZDPStringItem              coaProdCd;

    /** MKT_MDL_CD*/
	public final EZDPStringItem              mktMdlCd;

    /** MKT_MDL_SEG_CD*/
	public final EZDPStringItem              mktMdlSegCd;

    /** SVC_ALLOC_TP_CD*/
	public final EZDPStringItem              svcAllocTpCd;

    /** SVC_ALLOC_TRX_TP_NM*/
	public final EZDPStringItem              svcAllocTrxTpNm;

    /** TAX_EXEM_TP_CD*/
	public final EZDPStringItem              taxExemTpCd;

    /** BASE_PKG_UOM_CD*/
	public final EZDPStringItem              basePkgUomCd;

    /** PKG_UOM_CD*/
	public final EZDPStringItem              pkgUomCd;

    /** UNIT_NET_WT*/
	public final EZDPBigDecimalItem              unitNetWt;

    /** IN_EACH_QTY*/
	public final EZDPBigDecimalItem              inEachQty;

    /** INVTY_CTRL_FLG*/
	public final EZDPStringItem              invtyCtrlFlg;

    /** ENT_CPO_DTL_DEAL_SLS_AMT*/
	public final EZDPBigDecimalItem              entCpoDtlDealSlsAmt;

    /** DS_ORD_LINE_CATG_CD*/
	public final EZDPStringItem              dsOrdLineCatgCd;

    /** ORD_QTY*/
	public final EZDPBigDecimalItem              ordQty;

    /** ORD_CUST_UOM_QTY*/
	public final EZDPBigDecimalItem              ordCustUomQty;

    /** INV_QTY*/
	public final EZDPBigDecimalItem              invQty;

    /** RTRN_RSN_CD*/
	public final EZDPStringItem              rtrnRsnCd;

    /** MDL_ID*/
	public final EZDPBigDecimalItem              mdlId;

    /** MDL_NM*/
	public final EZDPStringItem              mdlNm;

    /** SVC_CALL_TP_CD*/
	public final EZDPStringItem              svcCallTpCd;

    /** SVC_CALL_INCDT_DT*/
	public final EZDPDateItem              svcCallIncdtDt;

    /** FIRST_LINE_ADDR_SH*/
	public final EZDPStringItem              firstLineAddr_SH;

    /** SCD_LINE_ADDR_SH*/
	public final EZDPStringItem              scdLineAddr_SH;

    /** CTY_ADDR_SH*/
	public final EZDPStringItem              ctyAddr_SH;

    /** ST_CD_SH*/
	public final EZDPStringItem              stCd_SH;

    /** CNTY_NM_SH*/
	public final EZDPStringItem              cntyNm_SH;

    /** POST_CD_SH*/
	public final EZDPStringItem              postCd_SH;

    /** CTRY_CD_SH*/
	public final EZDPStringItem              ctryCd_SH;

    /** SLS_REP_OR_SLS_TEAM_TOC_CD*/
	public final EZDPStringItem              slsRepOrSlsTeamTocCd;

    /** TAX_AREA_ID_SR*/
	public final EZDPStringItem              taxAreaId_SR;

    /** DS_INSD_CTY_LIMIT_FLG_SR*/
	public final EZDPStringItem              dsInsdCtyLimitFlg_SR;

    /** FIRST_LINE_ADDR_SR*/
	public final EZDPStringItem              firstLineAddr_SR;

    /** SCD_LINE_ADDR_SR*/
	public final EZDPStringItem              scdLineAddr_SR;

    /** CTY_ADDR_SR*/
	public final EZDPStringItem              ctyAddr_SR;

    /** ST_CD_SR*/
	public final EZDPStringItem              stCd_SR;

    /** CNTY_NM_SR*/
	public final EZDPStringItem              cntyNm_SR;

    /** POST_CD_SR*/
	public final EZDPStringItem              postCd_SR;

    /** CTRY_CD_SR*/
	public final EZDPStringItem              ctryCd_SR;

    /** RTL_WH_CD*/
	public final EZDPStringItem              rtlWhCd;

    /** RTL_SWH_CD*/
	public final EZDPStringItem              rtlSwhCd;

    /** TAX_AREA_ID_SF*/
	public final EZDPStringItem              taxAreaId_SF;

    /** FIRST_LINE_ADDR_SF*/
	public final EZDPStringItem              firstLineAddr_SF;

    /** SCD_LINE_ADDR_SF*/
	public final EZDPStringItem              scdLineAddr_SF;

    /** CTY_ADDR_SF*/
	public final EZDPStringItem              ctyAddr_SF;

    /** ST_CD_SF*/
	public final EZDPStringItem              stCd_SF;

    /** CNTY_NM_SF*/
	public final EZDPStringItem              cntyNm_SF;

    /** POST_CD_SF*/
	public final EZDPStringItem              postCd_SF;

    /** CTRY_CD_SF*/
	public final EZDPStringItem              ctryCd_SF;

    /** FRT_COND_CD*/
	public final EZDPStringItem              frtCondCd;

    /** SHPG_SVC_LVL_CD*/
	public final EZDPStringItem              shpgSvcLvlCd;

    /** FRT_CHRG_TO_CD*/
	public final EZDPStringItem              frtChrgToCd;

    /** FRT_CHRG_METH_CD*/
	public final EZDPStringItem              frtChrgMethCd;

    /** XX_PRC_CLO_FLG*/
	public final EZDPStringItem              xxPrcCloFlg;

    /** COA_EXTN_CD*/
	public final EZDPStringItem              coaExtnCd;

    /** PRC_COND_MAN_ENTRY_FLG*/
	public final EZDPStringItem              prcCondManEntryFlg;

    /** XX_UNIT_PRC*/
	public final EZDPBigDecimalItem              xxUnitPrc;

    /** XX_ERR_FLG*/
	public final EZDPStringItem              xxErrFlg;

    /** xxMsgIdList*/
	public final business.parts.NWZC157002_xxMsgIdListPMsgArray              xxMsgIdList;

    /** $$NWZC157003PMsg*/
	public final business.parts.NWZC157003PMsgArray              NWZC157003PMsg;


	/**
	 * NWZC157002PMsg is constructor.
	 * The initialization when the instance of NWZC157002PMsg is generated.
	 */
	public NWZC157002PMsg() {
		this(false, -1);
	}

	/**
	 * NWZC157002PMsg is constructor.
	 * The initialization when the instance of NWZC157002PMsg is generated.
	 * @param child  Flag whether it is child message
	 * @param eleNo  Index Number of array
	 */
	public NWZC157002PMsg(boolean child, int eleNo) {
		super(child, eleNo);

		// Initialization of item

		dsOrdPosnNum = (EZDPStringItem)newItem("dsOrdPosnNum");
		trxLineNum = (EZDPStringItem)newItem("trxLineNum");
		trxLineSubNum = (EZDPStringItem)newItem("trxLineSubNum");
		configCatgCd = (EZDPStringItem)newItem("configCatgCd");
		prcBaseDt = (EZDPDateItem)newItem("prcBaseDt");
		billToCustCd = (EZDPStringItem)newItem("billToCustCd");
		dsTaxGrpExemCd_B = (EZDPStringItem)newItem("dsTaxGrpExemCd_B");
		dsTaxGrpExemReslFlg_B = (EZDPStringItem)newItem("dsTaxGrpExemReslFlg_B");
		shipToCustCd = (EZDPStringItem)newItem("shipToCustCd");
		dsTaxGrpExemCd_S = (EZDPStringItem)newItem("dsTaxGrpExemCd_S");
		dsTaxGrpExemReslFlg_S = (EZDPStringItem)newItem("dsTaxGrpExemReslFlg_S");
		taxAreaId_SH = (EZDPStringItem)newItem("taxAreaId_SH");
		dsInsdCtyLimitFlg_SH = (EZDPStringItem)newItem("dsInsdCtyLimitFlg_SH");
		taxAreaId_SP = (EZDPStringItem)newItem("taxAreaId_SP");
		dsAcctNum_SH = (EZDPStringItem)newItem("dsAcctNum_SH");
		dsAcctNm_SH = (EZDPStringItem)newItem("dsAcctNm_SH");
		dsCustSicCd_SH = (EZDPStringItem)newItem("dsCustSicCd_SH");
		locNum_SH = (EZDPStringItem)newItem("locNum_SH");
		dsAcctClsCd_SH = (EZDPStringItem)newItem("dsAcctClsCd_SH");
		dsAcctTpCd_SH = (EZDPStringItem)newItem("dsAcctTpCd_SH");
		dsAcctDlrCd_SH = (EZDPStringItem)newItem("dsAcctDlrCd_SH");
		dsAcctGrpCd_SH = (EZDPStringItem)newItem("dsAcctGrpCd_SH");
		coaChCd_SH = (EZDPStringItem)newItem("coaChCd_SH");
		dsTaxGrpExemCd_SH = (EZDPStringItem)newItem("dsTaxGrpExemCd_SH");
		dsTaxGrpExemReslFlg_SH = (EZDPStringItem)newItem("dsTaxGrpExemReslFlg_SH");
		dsAcctNum_BL = (EZDPStringItem)newItem("dsAcctNum_BL");
		dsAcctNm_BL = (EZDPStringItem)newItem("dsAcctNm_BL");
		dsCustSicCd_BL = (EZDPStringItem)newItem("dsCustSicCd_BL");
		locNum_BL = (EZDPStringItem)newItem("locNum_BL");
		dsAcctClsCd_BL = (EZDPStringItem)newItem("dsAcctClsCd_BL");
		dsAcctTpCd_BL = (EZDPStringItem)newItem("dsAcctTpCd_BL");
		dsAcctDlrCd_BL = (EZDPStringItem)newItem("dsAcctDlrCd_BL");
		dsAcctGrpCd_BL = (EZDPStringItem)newItem("dsAcctGrpCd_BL");
		coaChCd_BL = (EZDPStringItem)newItem("coaChCd_BL");
		dsTaxGrpExemCd_BL = (EZDPStringItem)newItem("dsTaxGrpExemCd_BL");
		dsTaxGrpExemReslFlg_BL = (EZDPStringItem)newItem("dsTaxGrpExemReslFlg_BL");
		prcCatgCd = (EZDPStringItem)newItem("prcCatgCd");
		csmpNum = (EZDPStringItem)newItem("csmpNum");
		dlrRefNum = (EZDPStringItem)newItem("dlrRefNum");
		prcContrNum = (EZDPStringItem)newItem("prcContrNum");
		coaBrCd = (EZDPStringItem)newItem("coaBrCd");
		ccyCd = (EZDPStringItem)newItem("ccyCd");
		ccyCd_PC = (EZDPStringItem)newItem("ccyCd_PC");
		pmtTermCashDiscCd = (EZDPStringItem)newItem("pmtTermCashDiscCd");
		prcListEquipConfigNum = (EZDPBigDecimalItem)newItem("prcListEquipConfigNum");
		prcMtrPkgPk = (EZDPBigDecimalItem)newItem("prcMtrPkgPk");
		prcRateTpCd = (EZDPStringItem)newItem("prcRateTpCd");
		prcSvcPlnTpCd = (EZDPStringItem)newItem("prcSvcPlnTpCd");
		prcSvcContrTpCd = (EZDPStringItem)newItem("prcSvcContrTpCd");
		mtrLbCd = (EZDPStringItem)newItem("mtrLbCd");
		minCopyVolCnt = (EZDPBigDecimalItem)newItem("minCopyVolCnt");
		maxCopyVolCnt = (EZDPBigDecimalItem)newItem("maxCopyVolCnt");
		prcListBandCd = (EZDPStringItem)newItem("prcListBandCd");
		cpcAmtRate = (EZDPBigDecimalItem)newItem("cpcAmtRate");
		minCpcAmtRate = (EZDPBigDecimalItem)newItem("minCpcAmtRate");
		maxCpcAmtRate = (EZDPBigDecimalItem)newItem("maxCpcAmtRate");
		termFromMthAot = (EZDPBigDecimalItem)newItem("termFromMthAot");
		termThruMthAot = (EZDPBigDecimalItem)newItem("termThruMthAot");
		prcSvcZoneCd = (EZDPStringItem)newItem("prcSvcZoneCd");
		mtrMultRate = (EZDPBigDecimalItem)newItem("mtrMultRate");
		prcSvcTierTpCd = (EZDPStringItem)newItem("prcSvcTierTpCd");
		avgCopyVolCnt = (EZDPBigDecimalItem)newItem("avgCopyVolCnt");
		splyBaseAmt = (EZDPBigDecimalItem)newItem("splyBaseAmt");
		splyAgmtPlnPk = (EZDPBigDecimalItem)newItem("splyAgmtPlnPk");
		mdseCd = (EZDPStringItem)newItem("mdseCd");
		ordTakeMdseCd = (EZDPStringItem)newItem("ordTakeMdseCd");
		mdseNm = (EZDPStringItem)newItem("mdseNm");
		zerothProdCtrlCd = (EZDPStringItem)newItem("zerothProdCtrlCd");
		firstProdCtrlCd = (EZDPStringItem)newItem("firstProdCtrlCd");
		scdProdCtrlCd = (EZDPStringItem)newItem("scdProdCtrlCd");
		thirdProdCtrlCd = (EZDPStringItem)newItem("thirdProdCtrlCd");
		frthProdCtrlCd = (EZDPStringItem)newItem("frthProdCtrlCd");
		fifthProdCtrlCd = (EZDPStringItem)newItem("fifthProdCtrlCd");
		slsMatGrpCd_01 = (EZDPStringItem)newItem("slsMatGrpCd_01");
		slsMatGrpCd_02 = (EZDPStringItem)newItem("slsMatGrpCd_02");
		slsMatGrpCd_03 = (EZDPStringItem)newItem("slsMatGrpCd_03");
		mdseItemTpCd = (EZDPStringItem)newItem("mdseItemTpCd");
		mdseItemClsTpCd = (EZDPStringItem)newItem("mdseItemClsTpCd");
		coaMdseTpCd = (EZDPStringItem)newItem("coaMdseTpCd");
		coaProdCd = (EZDPStringItem)newItem("coaProdCd");
		mktMdlCd = (EZDPStringItem)newItem("mktMdlCd");
		mktMdlSegCd = (EZDPStringItem)newItem("mktMdlSegCd");
		svcAllocTpCd = (EZDPStringItem)newItem("svcAllocTpCd");
		svcAllocTrxTpNm = (EZDPStringItem)newItem("svcAllocTrxTpNm");
		taxExemTpCd = (EZDPStringItem)newItem("taxExemTpCd");
		basePkgUomCd = (EZDPStringItem)newItem("basePkgUomCd");
		pkgUomCd = (EZDPStringItem)newItem("pkgUomCd");
		unitNetWt = (EZDPBigDecimalItem)newItem("unitNetWt");
		inEachQty = (EZDPBigDecimalItem)newItem("inEachQty");
		invtyCtrlFlg = (EZDPStringItem)newItem("invtyCtrlFlg");
		entCpoDtlDealSlsAmt = (EZDPBigDecimalItem)newItem("entCpoDtlDealSlsAmt");
		dsOrdLineCatgCd = (EZDPStringItem)newItem("dsOrdLineCatgCd");
		ordQty = (EZDPBigDecimalItem)newItem("ordQty");
		ordCustUomQty = (EZDPBigDecimalItem)newItem("ordCustUomQty");
		invQty = (EZDPBigDecimalItem)newItem("invQty");
		rtrnRsnCd = (EZDPStringItem)newItem("rtrnRsnCd");
		mdlId = (EZDPBigDecimalItem)newItem("mdlId");
		mdlNm = (EZDPStringItem)newItem("mdlNm");
		svcCallTpCd = (EZDPStringItem)newItem("svcCallTpCd");
		svcCallIncdtDt = (EZDPDateItem)newItem("svcCallIncdtDt");

		firstLineAddr_SH = (EZDPStringItem)newItem("firstLineAddr_SH");
		scdLineAddr_SH = (EZDPStringItem)newItem("scdLineAddr_SH");
		ctyAddr_SH = (EZDPStringItem)newItem("ctyAddr_SH");
		stCd_SH = (EZDPStringItem)newItem("stCd_SH");
		cntyNm_SH = (EZDPStringItem)newItem("cntyNm_SH");
		postCd_SH = (EZDPStringItem)newItem("postCd_SH");
		ctryCd_SH = (EZDPStringItem)newItem("ctryCd_SH");
		slsRepOrSlsTeamTocCd = (EZDPStringItem)newItem("slsRepOrSlsTeamTocCd");
		taxAreaId_SR = (EZDPStringItem)newItem("taxAreaId_SR");
		dsInsdCtyLimitFlg_SR = (EZDPStringItem)newItem("dsInsdCtyLimitFlg_SR");
		firstLineAddr_SR = (EZDPStringItem)newItem("firstLineAddr_SR");
		scdLineAddr_SR = (EZDPStringItem)newItem("scdLineAddr_SR");
		ctyAddr_SR = (EZDPStringItem)newItem("ctyAddr_SR");
		stCd_SR = (EZDPStringItem)newItem("stCd_SR");
		cntyNm_SR = (EZDPStringItem)newItem("cntyNm_SR");
		postCd_SR = (EZDPStringItem)newItem("postCd_SR");
		ctryCd_SR = (EZDPStringItem)newItem("ctryCd_SR");
		rtlWhCd = (EZDPStringItem)newItem("rtlWhCd");
		rtlSwhCd = (EZDPStringItem)newItem("rtlSwhCd");
		taxAreaId_SF = (EZDPStringItem)newItem("taxAreaId_SF");
		firstLineAddr_SF = (EZDPStringItem)newItem("firstLineAddr_SF");
		scdLineAddr_SF = (EZDPStringItem)newItem("scdLineAddr_SF");
		ctyAddr_SF = (EZDPStringItem)newItem("ctyAddr_SF");
		stCd_SF = (EZDPStringItem)newItem("stCd_SF");
		cntyNm_SF = (EZDPStringItem)newItem("cntyNm_SF");
		postCd_SF = (EZDPStringItem)newItem("postCd_SF");
		ctryCd_SF = (EZDPStringItem)newItem("ctryCd_SF");
		frtCondCd = (EZDPStringItem)newItem("frtCondCd");
		shpgSvcLvlCd = (EZDPStringItem)newItem("shpgSvcLvlCd");
		frtChrgToCd = (EZDPStringItem)newItem("frtChrgToCd");
		frtChrgMethCd = (EZDPStringItem)newItem("frtChrgMethCd");
		xxPrcCloFlg = (EZDPStringItem)newItem("xxPrcCloFlg");
		coaExtnCd = (EZDPStringItem)newItem("coaExtnCd");
		prcCondManEntryFlg = (EZDPStringItem)newItem("prcCondManEntryFlg");
		xxUnitPrc = (EZDPBigDecimalItem)newItem("xxUnitPrc");
		xxErrFlg = (EZDPStringItem)newItem("xxErrFlg");
		xxMsgIdList = (business.parts.NWZC157002_xxMsgIdListPMsgArray)newMsgArray("xxMsgIdList");
		NWZC157003PMsg = (business.parts.NWZC157003PMsgArray)newMsgArray("NWZC157003PMsg");
	}

	/**
	 * get the type of array which is stored
	 * @return NWZC157002PMsgArray
	 */
	public EZDMsgArray getMyArray() {
		return new NWZC157002PMsgArray();
	}

	/**
	 * Definition of Sub class for Schema Item Array(Basic data,Visible Field)
	 */
	private static class NWZC157002PMsgSchemaContents1 {

		/**
		 * Array of Schema Items in Sub class(Basic data)
		 */
		private static final String[][] BASE_CONTENTS = {
		//["key name", "variable", "suffix", "array length", "item type", "digits", "after decimal point degits"] <- This is how to define.
			{"dsOrdPosnNum", "dsOrdPosnNum", null, null, TYPE_HANKAKUEISU, "6", null},
			{"trxLineNum", "trxLineNum", null, null, TYPE_HANKAKUEISU, "3", null},
			{"trxLineSubNum", "trxLineSubNum", null, null, TYPE_HANKAKUEISU, "3", null},
			{"configCatgCd", "configCatgCd", null, null, TYPE_HANKAKUEISU, "2", null},
			{"prcBaseDt", "prcBaseDt", null, null, TYPE_NENTSUKIHI, "8", null},
			{"billToCustCd", "billToCustCd", null, null, TYPE_HANKAKUEISU, "20", null},
			{"dsTaxGrpExemCd_B", "dsTaxGrpExemCd_B", "B", null, TYPE_HANKAKUEISU, "60", null},
			{"dsTaxGrpExemReslFlg_B", "dsTaxGrpExemReslFlg_B", "B", null, TYPE_HANKAKUEISU, "1", null},
			{"shipToCustCd", "shipToCustCd", null, null, TYPE_HANKAKUEISU, "20", null},
			{"dsTaxGrpExemCd_S", "dsTaxGrpExemCd_S", "S", null, TYPE_HANKAKUEISU, "60", null},
			{"dsTaxGrpExemReslFlg_S", "dsTaxGrpExemReslFlg_S", "S", null, TYPE_HANKAKUEISU, "1", null},
			{"taxAreaId_SH", "taxAreaId_SH", "SH", null, TYPE_HANKAKUEISU, "9", null},
			{"dsInsdCtyLimitFlg_SH", "dsInsdCtyLimitFlg_SH", "SH", null, TYPE_HANKAKUEISU, "1", null},
			{"taxAreaId_SP", "taxAreaId_SP", "SP", null, TYPE_HANKAKUEISU, "9", null},
			{"dsAcctNum_SH", "dsAcctNum_SH", "SH", null, TYPE_HANKAKUEISU, "20", null},
			{"dsAcctNm_SH", "dsAcctNm_SH", "SH", null, TYPE_HANKAKUEISU, "360", null},
			{"dsCustSicCd_SH", "dsCustSicCd_SH", "SH", null, TYPE_HANKAKUEISU, "30", null},
			{"locNum_SH", "locNum_SH", "SH", null, TYPE_HANKAKUEISU, "30", null},
			{"dsAcctClsCd_SH", "dsAcctClsCd_SH", "SH", null, TYPE_HANKAKUEISU, "3", null},
			{"dsAcctTpCd_SH", "dsAcctTpCd_SH", "SH", null, TYPE_HANKAKUEISU, "2", null},
			{"dsAcctDlrCd_SH", "dsAcctDlrCd_SH", "SH", null, TYPE_HANKAKUEISU, "20", null},
			{"dsAcctGrpCd_SH", "dsAcctGrpCd_SH", "SH", null, TYPE_HANKAKUEISU, "28", null},
			{"coaChCd_SH", "coaChCd_SH", "SH", null, TYPE_HANKAKUEISU, "3", null},
			{"dsTaxGrpExemCd_SH", "dsTaxGrpExemCd_SH", "SH", null, TYPE_HANKAKUEISU, "60", null},
			{"dsTaxGrpExemReslFlg_SH", "dsTaxGrpExemReslFlg_SH", "SH", null, TYPE_HANKAKUEISU, "1", null},
			{"dsAcctNum_BL", "dsAcctNum_BL", "BL", null, TYPE_HANKAKUEISU, "20", null},
			{"dsAcctNm_BL", "dsAcctNm_BL", "BL", null, TYPE_HANKAKUEISU, "360", null},
			{"dsCustSicCd_BL", "dsCustSicCd_BL", "BL", null, TYPE_HANKAKUEISU, "30", null},
			{"locNum_BL", "locNum_BL", "BL", null, TYPE_HANKAKUEISU, "30", null},
			{"dsAcctClsCd_BL", "dsAcctClsCd_BL", "BL", null, TYPE_HANKAKUEISU, "3", null},
			{"dsAcctTpCd_BL", "dsAcctTpCd_BL", "BL", null, TYPE_HANKAKUEISU, "2", null},
			{"dsAcctDlrCd_BL", "dsAcctDlrCd_BL", "BL", null, TYPE_HANKAKUEISU, "20", null},
			{"dsAcctGrpCd_BL", "dsAcctGrpCd_BL", "BL", null, TYPE_HANKAKUEISU, "28", null},
			{"coaChCd_BL", "coaChCd_BL", "BL", null, TYPE_HANKAKUEISU, "3", null},
			{"dsTaxGrpExemCd_BL", "dsTaxGrpExemCd_BL", "BL", null, TYPE_HANKAKUEISU, "60", null},
			{"dsTaxGrpExemReslFlg_BL", "dsTaxGrpExemReslFlg_BL", "BL", null, TYPE_HANKAKUEISU, "1", null},
			{"prcCatgCd", "prcCatgCd", null, null, TYPE_HANKAKUEISU, "10", null},
			{"csmpNum", "csmpNum", null, null, TYPE_HANKAKUEISU, "15", null},
			{"dlrRefNum", "dlrRefNum", null, null, TYPE_HANKAKUEISU, "20", null},
			{"prcContrNum", "prcContrNum", null, null, TYPE_HANKAKUEISU, "50", null},
			{"coaBrCd", "coaBrCd", null, null, TYPE_HANKAKUEISU, "3", null},
			{"ccyCd", "ccyCd", null, null, TYPE_HANKAKUEISU, "3", null},
			{"ccyCd_PC", "ccyCd_PC", "PC", null, TYPE_HANKAKUEISU, "3", null},
			{"pmtTermCashDiscCd", "pmtTermCashDiscCd", null, null, TYPE_HANKAKUEISU, "2", null},
			{"prcListEquipConfigNum", "prcListEquipConfigNum", null, null, TYPE_SEISU_SYOSU, "3", "0"},
			{"prcMtrPkgPk", "prcMtrPkgPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
			{"prcRateTpCd", "prcRateTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
			{"prcSvcPlnTpCd", "prcSvcPlnTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
			{"prcSvcContrTpCd", "prcSvcContrTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
			{"mtrLbCd", "mtrLbCd", null, null, TYPE_HANKAKUEISU, "2", null},
			{"minCopyVolCnt", "minCopyVolCnt", null, null, TYPE_SEISU_SYOSU, "12", "0"},
			{"maxCopyVolCnt", "maxCopyVolCnt", null, null, TYPE_SEISU_SYOSU, "12", "0"},
			{"prcListBandCd", "prcListBandCd", null, null, TYPE_HANKAKUEISU, "2", null},
			{"cpcAmtRate", "cpcAmtRate", null, null, TYPE_SEISU_SYOSU, "9", "5"},
			{"minCpcAmtRate", "minCpcAmtRate", null, null, TYPE_SEISU_SYOSU, "9", "5"},
			{"maxCpcAmtRate", "maxCpcAmtRate", null, null, TYPE_SEISU_SYOSU, "9", "5"},
			{"termFromMthAot", "termFromMthAot", null, null, TYPE_SEISU_SYOSU, "3", "0"},
			{"termThruMthAot", "termThruMthAot", null, null, TYPE_SEISU_SYOSU, "3", "0"},
			{"prcSvcZoneCd", "prcSvcZoneCd", null, null, TYPE_HANKAKUEISU, "1", null},
			{"mtrMultRate", "mtrMultRate", null, null, TYPE_SEISU_SYOSU, "9", "5"},
			{"prcSvcTierTpCd", "prcSvcTierTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
			{"avgCopyVolCnt", "avgCopyVolCnt", null, null, TYPE_SEISU_SYOSU, "12", "0"},
			{"splyBaseAmt", "splyBaseAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
			{"splyAgmtPlnPk", "splyAgmtPlnPk", null, null, TYPE_SEISU_SYOSU, "28", "0"},
			{"mdseCd", "mdseCd", null, null, TYPE_HANKAKUEISU, "16", null},
			{"ordTakeMdseCd", "ordTakeMdseCd", null, null, TYPE_HANKAKUEISU, "8", null},
			{"mdseNm", "mdseNm", null, null, TYPE_HANKAKUEISU, "30", null},
			{"zerothProdCtrlCd", "zerothProdCtrlCd", null, null, TYPE_HANKAKUEISU, "8", null},
			{"firstProdCtrlCd", "firstProdCtrlCd", null, null, TYPE_HANKAKUEISU, "8", null},
			{"scdProdCtrlCd", "scdProdCtrlCd", null, null, TYPE_HANKAKUEISU, "8", null},
			{"thirdProdCtrlCd", "thirdProdCtrlCd", null, null, TYPE_HANKAKUEISU, "8", null},
			{"frthProdCtrlCd", "frthProdCtrlCd", null, null, TYPE_HANKAKUEISU, "8", null},
			{"fifthProdCtrlCd", "fifthProdCtrlCd", null, null, TYPE_HANKAKUEISU, "8", null},
			{"slsMatGrpCd_01", "slsMatGrpCd_01", "01", null, TYPE_HANKAKUEISU, "3", null},
			{"slsMatGrpCd_02", "slsMatGrpCd_02", "02", null, TYPE_HANKAKUEISU, "3", null},
			{"slsMatGrpCd_03", "slsMatGrpCd_03", "03", null, TYPE_HANKAKUEISU, "3", null},
			{"mdseItemTpCd", "mdseItemTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
			{"mdseItemClsTpCd", "mdseItemClsTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
			{"coaMdseTpCd", "coaMdseTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
			{"coaProdCd", "coaProdCd", null, null, TYPE_HANKAKUEISU, "8", null},
			{"mktMdlCd", "mktMdlCd", null, null, TYPE_HANKAKUEISU, "20", null},
			{"mktMdlSegCd", "mktMdlSegCd", null, null, TYPE_HANKAKUEISU, "20", null},
			{"svcAllocTpCd", "svcAllocTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
			{"svcAllocTrxTpNm", "svcAllocTrxTpNm", null, null, TYPE_HANKAKUEISU, "40", null},
			{"taxExemTpCd", "taxExemTpCd", null, null, TYPE_HANKAKUEISU, "30", null},
			{"basePkgUomCd", "basePkgUomCd", null, null, TYPE_HANKAKUEISU, "4", null},
			{"pkgUomCd", "pkgUomCd", null, null, TYPE_HANKAKUEISU, "4", null},
			{"unitNetWt", "unitNetWt", null, null, TYPE_SEISU_SYOSU, "17", "6"},
			{"inEachQty", "inEachQty", null, null, TYPE_SEISU_SYOSU, "10", "0"},
			{"invtyCtrlFlg", "invtyCtrlFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"entCpoDtlDealSlsAmt", "entCpoDtlDealSlsAmt", null, null, TYPE_SEISU_SYOSU, "19", "4"},
			{"dsOrdLineCatgCd", "dsOrdLineCatgCd", null, null, TYPE_HANKAKUEISU, "4", null},
			{"ordQty", "ordQty", null, null, TYPE_SEISU_SYOSU, "10", "0"},
			{"ordCustUomQty", "ordCustUomQty", null, null, TYPE_SEISU_SYOSU, "10", "0"},
			{"invQty", "invQty", null, null, TYPE_SEISU_SYOSU, "10", "0"},
			{"rtrnRsnCd", "rtrnRsnCd", null, null, TYPE_HANKAKUEISU, "2", null},
			{"mdlId", "mdlId", null, null, TYPE_SEISU_SYOSU, "22", "0"},
			{"mdlNm", "mdlNm", null, null, TYPE_HANKAKUEISU, "50", null},
			{"svcCallTpCd", "svcCallTpCd", null, null, TYPE_HANKAKUEISU, "2", null},
			{"svcCallIncdtDt", "svcCallIncdtDt", null, null, TYPE_NENTSUKIHI, "8", null},
		};

		/**
		 * Array of Schema Items in Sub class(Visible Field)
		 */
		private static final String[][] DISP_CONTENTS = {
		// ["message display string","mandotry item", "minimum", "maximum", "I/O type", "yen", "comma", "zero suppress", "plus display flag", "display length", "display length after decimal point digit", "Dividing date", "Year display pattern", "zero pudding for date", "separator for date"] <- This is how to define
	        {"DS_ORD_POSN_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdPosnNum
	        {"TRX_LINE_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trxLineNum
	        {"TRX_LINE_SUB_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//trxLineSubNum
	        {"CONFIG_CATG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//configCatgCd
	        {"PRC_BASE_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcBaseDt
	        {"BILL_TO_CUST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//billToCustCd
	        {"DS_TAX_GRP_EXEM_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsTaxGrpExemCd_B
	        {"DS_TAX_GRP_EXEM_RESL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsTaxGrpExemReslFlg_B
	        {"SHIP_TO_CUST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shipToCustCd
	        {"DS_TAX_GRP_EXEM_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsTaxGrpExemCd_S
	        {"DS_TAX_GRP_EXEM_RESL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsTaxGrpExemReslFlg_S
	        {"TAX_AREA_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//taxAreaId_SH
	        {"DS_INSD_CTY_LIMIT_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsInsdCtyLimitFlg_SH
	        {"TAX_AREA_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//taxAreaId_SP
	        {"DS_ACCT_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctNum_SH
	        {"DS_ACCT_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctNm_SH
	        {"DS_CUST_SIC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsCustSicCd_SH
	        {"LOC_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//locNum_SH
	        {"DS_ACCT_CLS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctClsCd_SH
	        {"DS_ACCT_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctTpCd_SH
	        {"DS_ACCT_DLR_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctDlrCd_SH
	        {"DS_ACCT_GRP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctGrpCd_SH
	        {"COA_CH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaChCd_SH
	        {"DS_TAX_GRP_EXEM_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsTaxGrpExemCd_SH
	        {"DS_TAX_GRP_EXEM_RESL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsTaxGrpExemReslFlg_SH
	        {"DS_ACCT_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctNum_BL
	        {"DS_ACCT_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctNm_BL
	        {"DS_CUST_SIC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsCustSicCd_BL
	        {"LOC_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//locNum_BL
	        {"DS_ACCT_CLS_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctClsCd_BL
	        {"DS_ACCT_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctTpCd_BL
	        {"DS_ACCT_DLR_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctDlrCd_BL
	        {"DS_ACCT_GRP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsAcctGrpCd_BL
	        {"COA_CH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaChCd_BL
	        {"DS_TAX_GRP_EXEM_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsTaxGrpExemCd_BL
	        {"DS_TAX_GRP_EXEM_RESL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsTaxGrpExemReslFlg_BL
	        {"PRC_CATG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCatgCd
	        {"CSMP_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//csmpNum
	        {"DLR_REF_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dlrRefNum
	        {"PRC_CONTR_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcContrNum
	        {"COA_BR_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaBrCd
	        {"CCY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ccyCd
	        {"CCY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ccyCd_PC
	        {"PMT_TERM_CASH_DISC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//pmtTermCashDiscCd
	        {"PRC_LIST_EQUIP_CONFIG_NUM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcListEquipConfigNum
	        {"PRC_MTR_PKG_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcMtrPkgPk
	        {"PRC_RATE_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcRateTpCd
	        {"PRC_SVC_PLN_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcSvcPlnTpCd
	        {"PRC_SVC_CONTR_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcSvcContrTpCd
	        {"MTR_LB_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrLbCd
	        {"MIN_COPY_VOL_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//minCopyVolCnt
	        {"MAX_COPY_VOL_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//maxCopyVolCnt
	        {"PRC_LIST_BAND_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcListBandCd
	        {"CPC_AMT_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cpcAmtRate
	        {"MIN_CPC_AMT_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//minCpcAmtRate
	        {"MAX_CPC_AMT_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//maxCpcAmtRate
	        {"TERM_FROM_MTH_AOT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//termFromMthAot
	        {"TERM_THRU_MTH_AOT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//termThruMthAot
	        {"PRC_SVC_ZONE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcSvcZoneCd
	        {"MTR_MULT_RATE",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mtrMultRate
	        {"PRC_SVC_TIER_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcSvcTierTpCd
	        {"AVG_COPY_VOL_CNT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//avgCopyVolCnt
	        {"SPLY_BASE_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//splyBaseAmt
	        {"SPLY_AGMT_PLN_PK",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//splyAgmtPlnPk
	        {"MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseCd
	        {"ORD_TAKE_MDSE_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordTakeMdseCd
	        {"MDSE_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseNm
	        {"ZEROTH_PROD_CTRL_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//zerothProdCtrlCd
	        {"FIRST_PROD_CTRL_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//firstProdCtrlCd
	        {"SCD_PROD_CTRL_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//scdProdCtrlCd
	        {"THIRD_PROD_CTRL_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//thirdProdCtrlCd
	        {"FRTH_PROD_CTRL_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//frthProdCtrlCd
	        {"FIFTH_PROD_CTRL_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//fifthProdCtrlCd
	        {"SLS_MAT_GRP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//slsMatGrpCd_01
	        {"SLS_MAT_GRP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//slsMatGrpCd_02
	        {"SLS_MAT_GRP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//slsMatGrpCd_03
	        {"MDSE_ITEM_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseItemTpCd
	        {"MDSE_ITEM_CLS_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdseItemClsTpCd
	        {"COA_MDSE_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaMdseTpCd
	        {"COA_PROD_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaProdCd
	        {"MKT_MDL_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mktMdlCd
	        {"MKT_MDL_SEG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mktMdlSegCd
	        {"SVC_ALLOC_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcAllocTpCd
	        {"SVC_ALLOC_TRX_TP_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcAllocTrxTpNm
	        {"TAX_EXEM_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//taxExemTpCd
	        {"BASE_PKG_UOM_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//basePkgUomCd
	        {"PKG_UOM_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//pkgUomCd
	        {"UNIT_NET_WT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//unitNetWt
	        {"IN_EACH_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//inEachQty
	        {"INVTY_CTRL_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invtyCtrlFlg
	        {"ENT_CPO_DTL_DEAL_SLS_AMT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//entCpoDtlDealSlsAmt
	        {"DS_ORD_LINE_CATG_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsOrdLineCatgCd
	        {"ORD_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordQty
	        {"ORD_CUST_UOM_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ordCustUomQty
	        {"INV_QTY",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//invQty
	        {"RTRN_RSN_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtrnRsnCd
	        {"MDL_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdlId
	        {"MDL_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//mdlNm
	        {"SVC_CALL_TP_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcCallTpCd
	        {"SVC_CALL_INCDT_DT",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//svcCallIncdtDt
		};

	}

	private static class NWZC157002PMsgSchemaContents2 {

		/**
		 * Array of Schema Items in Sub class(Basic data)
		 */
		private static final String[][] BASE_CONTENTS = {
		//["key name", "variable", "suffix", "array length", "item type", "digits", "after decimal point degits"] <- This is how to define.
			{"firstLineAddr_SH", "firstLineAddr_SH", "SH", null, TYPE_HANKAKUEISU, "60", null},
			{"scdLineAddr_SH", "scdLineAddr_SH", "SH", null, TYPE_HANKAKUEISU, "60", null},
			{"ctyAddr_SH", "ctyAddr_SH", "SH", null, TYPE_HANKAKUEISU, "25", null},
			{"stCd_SH", "stCd_SH", "SH", null, TYPE_HANKAKUEISU, "2", null},
			{"cntyNm_SH", "cntyNm_SH", "SH", null, TYPE_HANKAKUEISU, "30", null},
			{"postCd_SH", "postCd_SH", "SH", null, TYPE_HANKAKUEISU, "15", null},
			{"ctryCd_SH", "ctryCd_SH", "SH", null, TYPE_HANKAKUEISU, "3", null},
			{"slsRepOrSlsTeamTocCd", "slsRepOrSlsTeamTocCd", null, null, TYPE_HANKAKUEISU, "8", null},
			{"taxAreaId_SR", "taxAreaId_SR", "SR", null, TYPE_HANKAKUEISU, "9", null},
			{"dsInsdCtyLimitFlg_SR", "dsInsdCtyLimitFlg_SR", "SR", null, TYPE_HANKAKUEISU, "1", null},
			{"firstLineAddr_SR", "firstLineAddr_SR", "SR", null, TYPE_HANKAKUEISU, "60", null},
			{"scdLineAddr_SR", "scdLineAddr_SR", "SR", null, TYPE_HANKAKUEISU, "60", null},
			{"ctyAddr_SR", "ctyAddr_SR", "SR", null, TYPE_HANKAKUEISU, "25", null},
			{"stCd_SR", "stCd_SR", "SR", null, TYPE_HANKAKUEISU, "2", null},
			{"cntyNm_SR", "cntyNm_SR", "SR", null, TYPE_HANKAKUEISU, "30", null},
			{"postCd_SR", "postCd_SR", "SR", null, TYPE_HANKAKUEISU, "15", null},
			{"ctryCd_SR", "ctryCd_SR", "SR", null, TYPE_HANKAKUEISU, "3", null},
			{"rtlWhCd", "rtlWhCd", null, null, TYPE_HANKAKUEISU, "20", null},
			{"rtlSwhCd", "rtlSwhCd", null, null, TYPE_HANKAKUEISU, "20", null},
			{"taxAreaId_SF", "taxAreaId_SF", "SF", null, TYPE_HANKAKUEISU, "9", null},
			{"firstLineAddr_SF", "firstLineAddr_SF", "SF", null, TYPE_HANKAKUEISU, "60", null},
			{"scdLineAddr_SF", "scdLineAddr_SF", "SF", null, TYPE_HANKAKUEISU, "60", null},
			{"ctyAddr_SF", "ctyAddr_SF", "SF", null, TYPE_HANKAKUEISU, "25", null},
			{"stCd_SF", "stCd_SF", "SF", null, TYPE_HANKAKUEISU, "2", null},
			{"cntyNm_SF", "cntyNm_SF", "SF", null, TYPE_HANKAKUEISU, "30", null},
			{"postCd_SF", "postCd_SF", "SF", null, TYPE_HANKAKUEISU, "15", null},
			{"ctryCd_SF", "ctryCd_SF", "SF", null, TYPE_HANKAKUEISU, "3", null},
			{"frtCondCd", "frtCondCd", null, null, TYPE_HANKAKUEISU, "3", null},
			{"shpgSvcLvlCd", "shpgSvcLvlCd", null, null, TYPE_HANKAKUEISU, "2", null},
			{"frtChrgToCd", "frtChrgToCd", null, null, TYPE_HANKAKUEISU, "1", null},
			{"frtChrgMethCd", "frtChrgMethCd", null, null, TYPE_HANKAKUEISU, "1", null},
			{"xxPrcCloFlg", "xxPrcCloFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"coaExtnCd", "coaExtnCd", null, null, TYPE_HANKAKUEISU, "3", null},
			{"prcCondManEntryFlg", "prcCondManEntryFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"xxUnitPrc", "xxUnitPrc", null, null, TYPE_SEISU_SYOSU, "19", "4"},
			{"xxErrFlg", "xxErrFlg", null, null, TYPE_HANKAKUEISU, "1", null},
			{"xxMsgIdList", "xxMsgIdList", null, "10", "business.parts.NWZC157002_xxMsgIdListPMsgArray", null, null},
			{"NWZC157003PMsg", "NWZC157003PMsg", null, "20", "business.parts.NWZC157003PMsgArray", null, null},
		};

		/**
		 * Array of Schema Items in Sub class(Visible Field)
		 */
		private static final String[][] DISP_CONTENTS = {
		// ["message display string","mandotry item", "minimum", "maximum", "I/O type", "yen", "comma", "zero suppress", "plus display flag", "display length", "display length after decimal point digit", "Dividing date", "Year display pattern", "zero pudding for date", "separator for date"] <- This is how to define
	        {"FIRST_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//firstLineAddr_SH
	        {"SCD_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//scdLineAddr_SH
	        {"CTY_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ctyAddr_SH
	        {"ST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//stCd_SH
	        {"CNTY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cntyNm_SH
	        {"POST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//postCd_SH
	        {"CTRY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ctryCd_SH
	        {"SLS_REP_OR_SLS_TEAM_TOC_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//slsRepOrSlsTeamTocCd
	        {"TAX_AREA_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//taxAreaId_SR
	        {"DS_INSD_CTY_LIMIT_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//dsInsdCtyLimitFlg_SR
	        {"FIRST_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//firstLineAddr_SR
	        {"SCD_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//scdLineAddr_SR
	        {"CTY_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ctyAddr_SR
	        {"ST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//stCd_SR
	        {"CNTY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cntyNm_SR
	        {"POST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//postCd_SR
	        {"CTRY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ctryCd_SR
	        {"RTL_WH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlWhCd
	        {"RTL_SWH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//rtlSwhCd
	        {"TAX_AREA_ID",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//taxAreaId_SF
	        {"FIRST_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//firstLineAddr_SF
	        {"SCD_LINE_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//scdLineAddr_SF
	        {"CTY_ADDR",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ctyAddr_SF
	        {"ST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//stCd_SF
	        {"CNTY_NM",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//cntyNm_SF
	        {"POST_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//postCd_SF
	        {"CTRY_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//ctryCd_SF
	        {"FRT_COND_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//frtCondCd
	        {"SHPG_SVC_LVL_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//shpgSvcLvlCd
	        {"FRT_CHRG_TO_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//frtChrgToCd
	        {"FRT_CHRG_METH_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//frtChrgMethCd
	        {"XX_PRC_CLO_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxPrcCloFlg
	        {"COA_EXTN_CD",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//coaExtnCd
	        {"PRC_COND_MAN_ENTRY_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//prcCondManEntryFlg
	        {"XX_UNIT_PRC",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxUnitPrc
	        {"XX_ERR_FLG",  NO,  null,null,null, NO, NO, NO, NO,null,null,null, null,  NO,  NO},	//xxErrFlg
			null,	//xxMsgIdList
			null,	//NWZC157003PMsg
		};

	}


	/**
	 * Array of schema data(Basic data)
	 */
	private static final String[][] BASE_CONTENTS = new String[138][NWZC157002PMsgSchemaContents1.BASE_CONTENTS[0].length];
	static {
		int arcpStartPoint=0;
	System.arraycopy(NWZC157002PMsgSchemaContents1.BASE_CONTENTS, 0, BASE_CONTENTS, arcpStartPoint, NWZC157002PMsgSchemaContents1.BASE_CONTENTS.length);
	arcpStartPoint = arcpStartPoint + NWZC157002PMsgSchemaContents1.BASE_CONTENTS.length;
	System.arraycopy(NWZC157002PMsgSchemaContents2.BASE_CONTENTS, 0, BASE_CONTENTS, arcpStartPoint, NWZC157002PMsgSchemaContents2.BASE_CONTENTS.length);
	arcpStartPoint = arcpStartPoint + NWZC157002PMsgSchemaContents2.BASE_CONTENTS.length;
	}

	/**
	 * Array of schema data(Visible Field)
	 */
	private static final String[][] DISP_CONTENTS = new String[138][15];
	static {
		int arcpStartPoint=0;
		System.arraycopy(NWZC157002PMsgSchemaContents1.DISP_CONTENTS, 0, DISP_CONTENTS, arcpStartPoint, NWZC157002PMsgSchemaContents1.DISP_CONTENTS.length);
		arcpStartPoint = arcpStartPoint + NWZC157002PMsgSchemaContents1.DISP_CONTENTS.length;
		System.arraycopy(NWZC157002PMsgSchemaContents2.DISP_CONTENTS, 0, DISP_CONTENTS, arcpStartPoint, NWZC157002PMsgSchemaContents2.DISP_CONTENTS.length);
		arcpStartPoint = arcpStartPoint + NWZC157002PMsgSchemaContents2.DISP_CONTENTS.length;
	}

	/**
	 * get Array of common (basic) data.
	 * @return Array of common (basis) data
	 */
	protected String[][] getBaseContents() {
		return BASE_CONTENTS;
	}

	/**
	 * get Array of Display Field.
	 * @return Array of  Display  Fields
	 */
	protected String[][] getDispContents() {
		return DISP_CONTENTS;
	}

}

