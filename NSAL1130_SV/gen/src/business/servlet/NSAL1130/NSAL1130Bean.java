// This file was automatically generated by Screen Field Definition Document and XLA200710010
// Generated on    :20170919111142000
// Velocity Macro:svltdatabean.vm V200604010
// Excel Add-in :ScreenFieldDefinitionDocument_AddIn_XLS200710010.xla XLA200710010
/*
 *NSAL1130Bean.java Copyright FUJITSU LIMITED 2007
 *Outline :
 *    1.
 *Release:
 *    No.  Date  Ver  Updater  Content
 *    1
 *
 */

package  business.servlet.NSAL1130;

import parts.servletcommon.EZDCommonDataBean;

/*
 * NSAL1130 is data bean class.
 */
public class NSAL1130Bean extends EZDCommonDataBean {

	// Serial Version UID
	private static final long serialVersionUID = 1L;

	//Constant Definition Area
	/** GLBL_CMPY_CD*/
	public static final String glblCmpyCd = "glblCmpyCd";

	/** SLS_DT*/
	public static final String slsDt = "slsDt";

	/** SVC_MACH_MSTR_PK*/
	public static final String svcMachMstrPk = "svcMachMstrPk";

	/** MTR_LB_CD_SV*/
	public static final String mtrLbCd_SV = "mtrLbCd_SV";

	/** MTR_LB_CD_CD*/
	public static final String mtrLbCd_CD = "mtrLbCd_CD";

	/** MTR_LB_DESC_TXT_SC*/
	public static final String mtrLbDescTxt_SC = "mtrLbDescTxt_SC";

	/** EFF_FROM_DT_SC*/
	public static final String effFromDt_SC = "effFromDt_SC";

	/** EFF_THRU_DT_SC*/
	public static final String effThruDt_SC = "effThruDt_SC";

	/** XX_PAGE_SHOW_FROM_NUM*/
	public static final String xxPageShowFromNum = "xxPageShowFromNum";

	/** XX_PAGE_SHOW_TO_NUM*/
	public static final String xxPageShowToNum = "xxPageShowToNum";

	/** XX_PAGE_SHOW_OF_NUM*/
	public static final String xxPageShowOfNum = "xxPageShowOfNum";

	/** XX_ROW_NUM*/
	public static final String xxRowNum = "xxRowNum";

	/** XX_SORT_TBL_NM*/
	public static final String xxSortTblNm = "xxSortTblNm";

	/** XX_SORT_ITEM_NM*/
	public static final String xxSortItemNm = "xxSortItemNm";

	/** XX_SORT_ORD_BY_TXT*/
	public static final String xxSortOrdByTxt = "xxSortOrdByTxt";

	/** A*/
	public static final String A = "A";

	/** END_MTR_READ_DT*/
	public static final String endMtrReadDt = "endMtrReadDt";

	/** MTR_LB_DESC_TXT*/
	public static final String mtrLbDescTxt = "mtrLbDescTxt";

	/** OLD_END_READ_MTR_CNT*/
	public static final String oldEndReadMtrCnt = "oldEndReadMtrCnt";

	/** OLD_TEST_MTR_CNT*/
	public static final String oldTestMtrCnt = "oldTestMtrCnt";

	/** NEW_END_READ_MTR_CNT*/
	public static final String newEndReadMtrCnt = "newEndReadMtrCnt";

	/** NEW_TEST_MTR_CNT*/
	public static final String newTestMtrCnt = "newTestMtrCnt";

	/**
	 * Method name:NSAL1130 is Bean's Constructor.
	 * <dd>method explanation:Initialization when instance of NSAL1130Bean is generated
	 * <dd>Remarks:
	 */
	public NSAL1130Bean() {
		super("business.servlet.NSAL1130.NSAL1130BMsg");
	}

	/**
	 * get  GLBL_CMPY_CD.
	 * @return GLBL_CMPY_CD
	 */
	public String getGlblCmpyCd() {
		return outputValue(glblCmpyCd);
	}

	/**
	 * set  GLBL_CMPY_CD.
	 * @param data GLBL_CMPY_CD
	 */
	public void setGlblCmpyCd(String data) {
		inputValue(glblCmpyCd,data);
	}

	/**
	 * get  SLS_DT.
	 * @return SLS_DT
	 */
	public String getSlsDt() {
		return outputValue(slsDt, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  SLS_DT.
	 * @param data SLS_DT
	 */
	public void setSlsDt(String data) {
		inputValue(slsDt, data, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * get  SVC_MACH_MSTR_PK.
	 * @return SVC_MACH_MSTR_PK
	 */
	public String getSvcMachMstrPk() {
		return outputValue(svcMachMstrPk);
	}

	/**
	 * set  SVC_MACH_MSTR_PK.
	 * @param data SVC_MACH_MSTR_PK
	 */
	public void setSvcMachMstrPk(String data) {
		inputValue(svcMachMstrPk,data);
	}

	/**
	 * get  MTR_LB_CD_SV.
	 * @return MTR_LB_CD_SV
	 */
	public String getMtrLbCd_SV() {
		return outputValue(mtrLbCd_SV);
	}

	/**
	 * set  MTR_LB_CD_SV.
	 * @param data MTR_LB_CD_SV
	 */
	public void setMtrLbCd_SV(String data) {
		inputValue(mtrLbCd_SV,data);
	}

	/**
	 * get  MTR_LB_CD_CD.
	 * @param idx1 Index Number
	 * @return MTR_LB_CD_CD
	 */
	public String getMtrLbCd_CD(int idx1) {
	 	 return outputValue(mtrLbCd_CD, idx1);
	}

	/**
	 * get  MTR_LB_DESC_TXT_SC.
	 * @param idx1 Index Number
	 * @return MTR_LB_DESC_TXT_SC
	 */
	public String getMtrLbDescTxt_SC(int idx1) {
	 	 return outputValue(mtrLbDescTxt_SC, idx1);
	}

	/**
	 * get  EFF_FROM_DT_SC.
	 * @return EFF_FROM_DT_SC
	 */
	public String getEffFromDt_SC() {
		return outputValue(effFromDt_SC, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  EFF_FROM_DT_SC.
	 * @param data EFF_FROM_DT_SC
	 */
	public void setEffFromDt_SC(String data) {
		inputValue(effFromDt_SC, data, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * get  EFF_THRU_DT_SC.
	 * @return EFF_THRU_DT_SC
	 */
	public String getEffThruDt_SC() {
		return outputValue(effThruDt_SC, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  EFF_THRU_DT_SC.
	 * @param data EFF_THRU_DT_SC
	 */
	public void setEffThruDt_SC(String data) {
		inputValue(effThruDt_SC, data, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * get  XX_PAGE_SHOW_FROM_NUM.
	 * @return XX_PAGE_SHOW_FROM_NUM
	 */
	public String getXxPageShowFromNum() {
		return outputValue(xxPageShowFromNum);
	}

	/**
	 * set  XX_PAGE_SHOW_FROM_NUM.
	 * @param data XX_PAGE_SHOW_FROM_NUM
	 */
	public void setXxPageShowFromNum(String data) {
		inputValue(xxPageShowFromNum,data);
	}

	/**
	 * get  XX_PAGE_SHOW_TO_NUM.
	 * @return XX_PAGE_SHOW_TO_NUM
	 */
	public String getXxPageShowToNum() {
		return outputValue(xxPageShowToNum);
	}

	/**
	 * set  XX_PAGE_SHOW_TO_NUM.
	 * @param data XX_PAGE_SHOW_TO_NUM
	 */
	public void setXxPageShowToNum(String data) {
		inputValue(xxPageShowToNum,data);
	}

	/**
	 * get  XX_PAGE_SHOW_OF_NUM.
	 * @return XX_PAGE_SHOW_OF_NUM
	 */
	public String getXxPageShowOfNum() {
		return outputValue(xxPageShowOfNum);
	}

	/**
	 * set  XX_PAGE_SHOW_OF_NUM.
	 * @param data XX_PAGE_SHOW_OF_NUM
	 */
	public void setXxPageShowOfNum(String data) {
		inputValue(xxPageShowOfNum,data);
	}

	/**
	 * get  XX_ROW_NUM.
	 * @return XX_ROW_NUM
	 */
	public String getXxRowNum() {
		return outputValue(xxRowNum);
	}

	/**
	 * set  XX_ROW_NUM.
	 * @param data XX_ROW_NUM
	 */
	public void setXxRowNum(String data) {
		inputValue(xxRowNum,data);
	}

	/**
	 * get  XX_SORT_TBL_NM.
	 * @return XX_SORT_TBL_NM
	 */
	public String getXxSortTblNm() {
		return outputValue(xxSortTblNm);
	}

	/**
	 * set  XX_SORT_TBL_NM.
	 * @param data XX_SORT_TBL_NM
	 */
	public void setXxSortTblNm(String data) {
		inputValue(xxSortTblNm,data);
	}

	/**
	 * get  XX_SORT_ITEM_NM.
	 * @return XX_SORT_ITEM_NM
	 */
	public String getXxSortItemNm() {
		return outputValue(xxSortItemNm);
	}

	/**
	 * set  XX_SORT_ITEM_NM.
	 * @param data XX_SORT_ITEM_NM
	 */
	public void setXxSortItemNm(String data) {
		inputValue(xxSortItemNm,data);
	}

	/**
	 * get  XX_SORT_ORD_BY_TXT.
	 * @return XX_SORT_ORD_BY_TXT
	 */
	public String getXxSortOrdByTxt() {
		return outputValue(xxSortOrdByTxt);
	}

	/**
	 * set  XX_SORT_ORD_BY_TXT.
	 * @param data XX_SORT_ORD_BY_TXT
	 */
	public void setXxSortOrdByTxt(String data) {
		inputValue(xxSortOrdByTxt,data);
	}

	/**
	 * get  END_MTR_READ_DT.
	 * @param idx1 List Number
	 * @return END_MTR_READ_DT
	 */
	public String getEndMtrReadDt(int idx1) {
		return outputValue(A, idx1, endMtrReadDt, VALUE_YEAR_MONTH_DAY);
	}

	/**
	 * set  END_MTR_READ_DT.
	 * @param data END_MTR_READ_DTArray
	 */
	public void setEndMtrReadDt(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i,  endMtrReadDt, data[j], VALUE_YEAR_MONTH_DAY);
		}
	}

	/**
	 * get  MTR_LB_DESC_TXT.
	 * @param idx1 List Number
	 * @return MTR_LB_DESC_TXT
	 */
	public String getMtrLbDescTxt(int idx1) {
		return outputValue(A, idx1, mtrLbDescTxt);
	}

	/**
	 * set  MTR_LB_DESC_TXT.
	 * @param data MTR_LB_DESC_TXTArray
	 */
	public void setMtrLbDescTxt(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, mtrLbDescTxt, data[j]);
		}
	}

	/**
	 * get  OLD_END_READ_MTR_CNT.
	 * @param idx1 List Number
	 * @return OLD_END_READ_MTR_CNT
	 */
	public String getOldEndReadMtrCnt(int idx1) {
		return outputValue(A, idx1, oldEndReadMtrCnt);
	}

	/**
	 * set  OLD_END_READ_MTR_CNT.
	 * @param data OLD_END_READ_MTR_CNTArray
	 */
	public void setOldEndReadMtrCnt(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, oldEndReadMtrCnt, data[j]);
		}
	}

	/**
	 * get  OLD_TEST_MTR_CNT.
	 * @param idx1 List Number
	 * @return OLD_TEST_MTR_CNT
	 */
	public String getOldTestMtrCnt(int idx1) {
		return outputValue(A, idx1, oldTestMtrCnt);
	}

	/**
	 * set  OLD_TEST_MTR_CNT.
	 * @param data OLD_TEST_MTR_CNTArray
	 */
	public void setOldTestMtrCnt(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, oldTestMtrCnt, data[j]);
		}
	}

	/**
	 * get  NEW_END_READ_MTR_CNT.
	 * @param idx1 List Number
	 * @return NEW_END_READ_MTR_CNT
	 */
	public String getNewEndReadMtrCnt(int idx1) {
		return outputValue(A, idx1, newEndReadMtrCnt);
	}

	/**
	 * set  NEW_END_READ_MTR_CNT.
	 * @param data NEW_END_READ_MTR_CNTArray
	 */
	public void setNewEndReadMtrCnt(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, newEndReadMtrCnt, data[j]);
		}
	}

	/**
	 * get  NEW_TEST_MTR_CNT.
	 * @param idx1 List Number
	 * @return NEW_TEST_MTR_CNT
	 */
	public String getNewTestMtrCnt(int idx1) {
		return outputValue(A, idx1, newTestMtrCnt);
	}

	/**
	 * set  NEW_TEST_MTR_CNT.
	 * @param data NEW_TEST_MTR_CNTArray
	 */
	public void setNewTestMtrCnt(String[] data) {
		int i,j;
		int startPoint = getDisplayStartPoint(A);
		for(i = startPoint, j = 0; i < (startPoint + data.length); i++, j++) {
			inputValue(A, i, newTestMtrCnt, data[j]);
		}
	}

}

