<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<sqlMap namespace="ZZZL0040Query">

<!--	<statement id="getData" parameterClass="Map" resultClass="Map">
		SELECT	*
		FROM	(
		        SELECT  GLBL_CMPY_CD,
		        		JVM_NM,
		        		BIZ_ID,
		        		SCR_APP_ID,
		        		BIZ_ELPS_TM_TXT,
		        		GLBL_AREA_DATA_CNT       		
		        FROM    ONL_PROC_LOG
		        WHERE   EZCANCELFLAG  = '0'
		        AND		(SUBSTR(ERR_MSG_CD, LENGTH(ERR_MSG_CD),1) != 'E' OR ERR_MSG_CD IS NULL)
		        <isNotNull property="cMsg.jvmNm_S">
		        AND     JVM_NM        = #cMsg.jvmNm_S#
		        </isNotNull>
		        <isNotNull property="cMsg.glblCmpyCd">
		        AND     GLBL_CMPY_CD  = #cMsg.glblCmpyCd#
		        </isNotNull>
		        <isNotNull property="cMsg.bizStartTs">
				AND 	OPS_TS 		  &gt;= #cMsg.bizStartTs#
				</isNotNull>
				<isNotNull property="cMsg.bizEndTs">
				AND 	OPS_TS 		  &lt;= #cMsg.bizEndTs#
				</isNotNull>
		        ORDER BY
		        	BIZ_ID ASC,
		        	SCR_APP_ID ASC,
		        	OPS_TS ASC
				)
		WHERE	ROWNUM &lt;= 30001
	</statement>-->
	
	<statement id="getAvrgBizProcTmRank" parameterClass="Map" resultClass="Map">
		SELECT	*
		FROM	(
      			SELECT	RANK() OVER (ORDER BY to_number(BIZ_ELPS_TM_AVG) DESC) AS RANK,
              			GLBL_CMPY_CD			AS GLBL_CMPY_CD,
              			BIZ_ID					AS BIZ_ID,
              			SCR_APP_ID				AS SCR_APP_ID,
              			BIZ_ELPS_TM_AVG			AS BIZ_ELPS_TM_TXT,
              			TROUGHPUT_AVG			AS TROUGHPUT,
              			GLBL_AREA_DATA_CNT_AVG	AS GLBL_AREA_DATA_CNT,
              			SAMPLE_CNT				AS SAMPLE_CNT,
              			STDEV_BIZTM				AS STDEV_BIZTM,
              			STDEV_SMSGSIZE			AS STDEV_SMSGSIZE
      			FROM	(
            			SELECT	DISTINCT SCR_APP_ID,
                    			GLBL_CMPY_CD,
                    			BIZ_ID,
                    			BIZ_ELPS_TM_AVG,
                    			TROUGHPUT_AVG,
                    			GLBL_AREA_DATA_CNT_AVG,
                    			SAMPLE_CNT,
                    			STDEV_BIZTM,
                    			STDEV_SMSGSIZE                   
            			FROM	( 
                  				SELECT  GLBL_CMPY_CD 																								AS GLBL_CMPY_CD, 
                          				BIZ_ID 																										AS BIZ_ID,
                          				SCR_APP_ID 																									AS SCR_APP_ID,
                          				ROUND(AVG((to_number(BIZ_ELPS_TM_TXT)/1000000)) OVER (PARTITION BY SCR_APP_ID),2) 							AS BIZ_ELPS_TM_AVG,
                          				ROUND(AVG((GLBL_AREA_DATA_CNT/(to_number(BIZ_ELPS_TM_TXT)/1000000000))) OVER (PARTITION BY SCR_APP_ID) ,2)	AS TROUGHPUT_AVG,
                          				ROUND((AVG(GLBL_AREA_DATA_CNT) OVER (PARTITION BY SCR_APP_ID)), 0) 											AS GLBL_AREA_DATA_CNT_AVG,
                          				COUNT (BIZ_ELPS_TM_TXT) OVER (PARTITION BY SCR_APP_ID) 														AS SAMPLE_CNT,
                          				ROUND((STDDEV(to_number(BIZ_ELPS_TM_TXT)/1000000) OVER (PARTITION BY SCR_APP_ID)),2) 						AS STDEV_BIZTM,
                          				ROUND((STDDEV(GLBL_AREA_DATA_CNT) OVER (PARTITION BY SCR_APP_ID)),2) 										AS STDEV_SMSGSIZE
                  				FROM	ONL_PROC_LOG
                  				WHERE   EZCANCELFLAG  = '0'
		        				AND		(SUBSTR(ERR_MSG_CD, LENGTH(ERR_MSG_CD),1) != 'E' OR ERR_MSG_CD IS NULL)
								AND    	BIZ_ELPS_TM_TXT  != '0' AND	BIZ_ELPS_TM_TXT IS NOT NULL 
		        				<isNotNull property="cMsg.jvmNm_S">
		        				AND     JVM_NM			= #cMsg.jvmNm_S#
						        </isNotNull>
						        <isNotNull property="cMsg.glblCmpyCd">
						        AND     GLBL_CMPY_CD	= #cMsg.glblCmpyCd#
						        </isNotNull>
						        <isNotNull property="cMsg.bizStartTs">
								AND 	OPS_TS		&gt;= #cMsg.bizStartTs#
								</isNotNull>
								<isNotNull property="cMsg.bizEndTs">
								AND 	OPS_TS 		&lt;= #cMsg.bizEndTs#
								</isNotNull>                    
            			)
      			)
		)
		WHERE ROWNUM &lt;= 201
	</statement>
	
	<statement id="getAvrgThroughputRank" parameterClass="Map" resultClass="Map">
		SELECT	*
		FROM	(
      			SELECT	RANK() OVER (ORDER BY TROUGHPUT_AVG ASC) AS RANK,
              			GLBL_CMPY_CD			AS GLBL_CMPY_CD,
              			BIZ_ID					AS BIZ_ID,
              			SCR_APP_ID				AS SCR_APP_ID,
              			BIZ_ELPS_TM_AVG			AS BIZ_ELPS_TM_TXT,
              			TROUGHPUT_AVG			AS TROUGHPUT,
              			GLBL_AREA_DATA_CNT_AVG	AS GLBL_AREA_DATA_CNT,
              			SAMPLE_CNT				AS SAMPLE_CNT,
              			STDEV_BIZTM				AS STDEV_BIZTM,
              			STDEV_SMSGSIZE			AS STDEV_SMSGSIZE
      			FROM	(
            			SELECT	DISTINCT SCR_APP_ID,
                    			GLBL_CMPY_CD,
                    			BIZ_ID,
                    			BIZ_ELPS_TM_AVG,
                    			TROUGHPUT_AVG,
                    			GLBL_AREA_DATA_CNT_AVG,
                    			SAMPLE_CNT,
                    			STDEV_BIZTM,
                    			STDEV_SMSGSIZE                   
            			FROM	( 
                  				SELECT  GLBL_CMPY_CD 																								AS GLBL_CMPY_CD, 
                          				BIZ_ID 																										AS BIZ_ID,
                          				SCR_APP_ID 																									AS SCR_APP_ID,
                          				ROUND(AVG((to_number(BIZ_ELPS_TM_TXT)/1000000)) OVER (PARTITION BY SCR_APP_ID),2) 							AS BIZ_ELPS_TM_AVG,
                          				ROUND(AVG((GLBL_AREA_DATA_CNT/(to_number(BIZ_ELPS_TM_TXT)/1000000000))) OVER (PARTITION BY SCR_APP_ID) ,2)	AS TROUGHPUT_AVG,
                          				ROUND((AVG(GLBL_AREA_DATA_CNT) OVER (PARTITION BY SCR_APP_ID)), 0) 											AS GLBL_AREA_DATA_CNT_AVG,
                          				COUNT (BIZ_ELPS_TM_TXT) OVER (PARTITION BY SCR_APP_ID) 														AS SAMPLE_CNT,
                          				ROUND((STDDEV(to_number(BIZ_ELPS_TM_TXT)/1000000) OVER (PARTITION BY SCR_APP_ID)),2) 						AS STDEV_BIZTM,
                          				ROUND((STDDEV(GLBL_AREA_DATA_CNT) OVER (PARTITION BY SCR_APP_ID)),2) 										AS STDEV_SMSGSIZE
                  				FROM	ONL_PROC_LOG
                  				WHERE   EZCANCELFLAG  = '0'
		        				AND		(SUBSTR(ERR_MSG_CD, LENGTH(ERR_MSG_CD),1) != 'E' OR ERR_MSG_CD IS NULL)
		        				AND    	BIZ_ELPS_TM_TXT  != '0' AND	BIZ_ELPS_TM_TXT IS NOT NULL  
		         				AND    	GLBL_AREA_DATA_CNT  != '0'
		        				<isNotNull property="cMsg.jvmNm_S">
		        				AND     JVM_NM			= #cMsg.jvmNm_S#
						        </isNotNull>
						        <isNotNull property="cMsg.glblCmpyCd">
						        AND     GLBL_CMPY_CD	= #cMsg.glblCmpyCd#
						        </isNotNull>
						        <isNotNull property="cMsg.bizStartTs">
								AND 	OPS_TS		&gt;= #cMsg.bizStartTs#
								</isNotNull>
								<isNotNull property="cMsg.bizEndTs">
								AND 	OPS_TS 		&lt;= #cMsg.bizEndTs#
								</isNotNull>                    
            			)
      			)
		)
		WHERE ROWNUM &lt;= 201
	</statement>

	<statement id="getAvrgGlblAreaSizeRank" parameterClass="Map" resultClass="Map">
		SELECT	*
		FROM	(
      			SELECT	RANK() OVER (ORDER BY GLBL_AREA_DATA_CNT_AVG DESC) AS RANK,
              			GLBL_CMPY_CD			AS GLBL_CMPY_CD,
            			BIZ_ID					AS BIZ_ID,
              			SCR_APP_ID				AS SCR_APP_ID,
              			BIZ_ELPS_TM_AVG			AS BIZ_ELPS_TM_TXT,
              			TROUGHPUT_AVG			AS TROUGHPUT,
              			GLBL_AREA_DATA_CNT_AVG	AS GLBL_AREA_DATA_CNT,
              			SAMPLE_CNT				AS SAMPLE_CNT,
              			STDEV_BIZTM				AS STDEV_BIZTM,
              			STDEV_SMSGSIZE			AS STDEV_SMSGSIZE
      			FROM	(
            			SELECT	DISTINCT SCR_APP_ID,
                    			GLBL_CMPY_CD,
                    			BIZ_ID,
                    			BIZ_ELPS_TM_AVG,
                    			TROUGHPUT_AVG,
                    			GLBL_AREA_DATA_CNT_AVG,
                    			SAMPLE_CNT,
                    			STDEV_BIZTM,
                    			STDEV_SMSGSIZE                   
            			FROM	( 
                  				SELECT  GLBL_CMPY_CD 																								AS GLBL_CMPY_CD, 
                          				BIZ_ID 																										AS BIZ_ID,
                          				SCR_APP_ID 																									AS SCR_APP_ID,
                          				ROUND(AVG((to_number(BIZ_ELPS_TM_TXT)/1000000)) OVER (PARTITION BY SCR_APP_ID),2) 							AS BIZ_ELPS_TM_AVG,
                          				ROUND(AVG((GLBL_AREA_DATA_CNT/(to_number(BIZ_ELPS_TM_TXT)/1000000000))) OVER (PARTITION BY SCR_APP_ID) ,2)	AS TROUGHPUT_AVG,
                          				ROUND((AVG(GLBL_AREA_DATA_CNT) OVER (PARTITION BY SCR_APP_ID)), 0) 											AS GLBL_AREA_DATA_CNT_AVG,
                          				COUNT (BIZ_ELPS_TM_TXT) OVER (PARTITION BY SCR_APP_ID) 														AS SAMPLE_CNT,
                          				ROUND((STDDEV(to_number(BIZ_ELPS_TM_TXT)/1000000) OVER (PARTITION BY SCR_APP_ID)),2) 						AS STDEV_BIZTM,
                          				ROUND((STDDEV(GLBL_AREA_DATA_CNT) OVER (PARTITION BY SCR_APP_ID)),2) 										AS STDEV_SMSGSIZE
                  				FROM	ONL_PROC_LOG
                  				WHERE   EZCANCELFLAG  = '0'
		        				AND		(SUBSTR(ERR_MSG_CD, LENGTH(ERR_MSG_CD),1) != 'E' OR ERR_MSG_CD IS NULL)
		         				AND    	GLBL_AREA_DATA_CNT  != '0'
		        				<isNotNull property="cMsg.jvmNm_S">
		        				AND     JVM_NM			= #cMsg.jvmNm_S#
						        </isNotNull>
						        <isNotNull property="cMsg.glblCmpyCd">
						        AND     GLBL_CMPY_CD	= #cMsg.glblCmpyCd#
						        </isNotNull>
						        <isNotNull property="cMsg.bizStartTs">
								AND 	OPS_TS		&gt;= #cMsg.bizStartTs#
								</isNotNull>
								<isNotNull property="cMsg.bizEndTs">
								AND 	OPS_TS 		&lt;= #cMsg.bizEndTs#
								</isNotNull>                    
            			)
      			)
		)
		WHERE ROWNUM &lt;= 201
	</statement>	
	
	<statement id="getBizProcTmRank" parameterClass="Map" resultClass="Map">
		SELECT * 
		FROM	(
				SELECT	RANK() OVER (ORDER BY to_number(BIZ_ELPS_TM_TXT) DESC) AS RANK,
						GLBL_CMPY_CD,
						JVM_NM,
						OPS_USR_ID,
		        		BIZ_ID,
		        		SCR_APP_ID,
		        		BIZ_ELPS_TM_TXT,
		            	TROUGHPUT,
		        		GLBL_AREA_DATA_CNT,
		            	SAMPLE_CNT,
		            	STDEV_BIZTM,
		            	STDEV_SMSGSIZE 
				FROM	(
							SELECT * 
						 	FROM	(
						 				SELECT	RANK() OVER (PARTITION BY SCR_APP_ID ORDER BY to_number(BIZ_ELPS_TM_TXT) DESC)			AS RANK,
		            							GLBL_CMPY_CD 																			AS GLBL_CMPY_CD,
		            							JVM_NM 																					AS JVM_NM,
				        						OPS_USR_ID 																				AS OPS_USR_ID,
				        						BIZ_ID 																					AS BIZ_ID,
				        						SCR_APP_ID 																				AS SCR_APP_ID,
				        						ROUND(to_number(BIZ_ELPS_TM_TXT)/1000000,2) 											AS BIZ_ELPS_TM_TXT,
				            					ROUND((GLBL_AREA_DATA_CNT/(to_number(BIZ_ELPS_TM_TXT)/1000000000)),2) 					AS TROUGHPUT,
				        						GLBL_AREA_DATA_CNT 																		AS GLBL_AREA_DATA_CNT,
				            					COUNT (BIZ_ELPS_TM_TXT) OVER (PARTITION BY SCR_APP_ID) 									AS SAMPLE_CNT,
				            					ROUND((STDDEV(to_number(BIZ_ELPS_TM_TXT)/1000000) OVER (PARTITION BY SCR_APP_ID)),2)	AS STDEV_BIZTM,
				            					ROUND((STDDEV(GLBL_AREA_DATA_CNT) OVER (PARTITION BY SCR_APP_ID)),2) 					AS STDEV_SMSGSIZE
				         				 From 	ONL_PROC_LOG
				         				 WHERE  EZCANCELFLAG  = '0'
				         				 AND	(SUBSTR(ERR_MSG_CD, LENGTH(ERR_MSG_CD),1) != 'E' OR ERR_MSG_CD IS NULL)
				         				 AND    BIZ_ELPS_TM_TXT  != '0' AND	BIZ_ELPS_TM_TXT IS NOT NULL
				        				 <isNotNull property="cMsg.jvmNm_S">
		        						 AND    JVM_NM        = #cMsg.jvmNm_S#
		        						 </isNotNull>
		        						 <isNotNull property="cMsg.glblCmpyCd">
		        						 AND    GLBL_CMPY_CD  = #cMsg.glblCmpyCd#
		        						 </isNotNull>
				        				 <isNotNull property="cMsg.bizStartTs">
										 AND 	OPS_TS	  &gt;= #cMsg.bizStartTs#
										 </isNotNull>
										 <isNotNull property="cMsg.bizEndTs">
										 AND 	OPS_TS    &lt;= #cMsg.bizEndTs#
										 </isNotNull>
									 )
							<isNotNull property="cMsg.xxTotCnt">		 
		  				  	WHERE RANK &lt;= #cMsg.xxTotCnt#
		  				  	</isNotNull>
		  				 )
				)
  		WHERE	ROWNUM &lt;= 201
	</statement>
	
	<statement id="getThroughputRank" parameterClass="Map" resultClass="Map">
		SELECT *
		FROM	(
				SELECT	RANK() OVER (ORDER BY TROUGHPUT ASC) AS RANK,
						GLBL_CMPY_CD,
						JVM_NM,
		        		OPS_USR_ID,
		        		BIZ_ID,
		        		SCR_APP_ID,
		        		BIZ_ELPS_TM_TXT,
		            	TROUGHPUT,
		        		GLBL_AREA_DATA_CNT,
		            	SAMPLE_CNT,
		            	STDEV_BIZTM,
		            	STDEV_SMSGSIZE 
				FROM	(
							SELECT * 
						 	FROM	(
						 				SELECT	RANK() OVER (PARTITION BY SCR_APP_ID ORDER BY ROUND((GLBL_AREA_DATA_CNT/(to_number(BIZ_ELPS_TM_TXT)/1000000000)),2) ASC)	AS RANK,
		            							GLBL_CMPY_CD 																										AS GLBL_CMPY_CD,
		            							JVM_NM 																												AS JVM_NM,
				        						OPS_USR_ID 																											AS OPS_USR_ID,
				        						BIZ_ID 																												AS BIZ_ID,
				        						SCR_APP_ID 																											AS SCR_APP_ID,
				        						ROUND(to_number(BIZ_ELPS_TM_TXT)/1000000,2) 																		AS BIZ_ELPS_TM_TXT,
				            					ROUND((GLBL_AREA_DATA_CNT/(to_number(BIZ_ELPS_TM_TXT)/1000000000)),2) 												AS TROUGHPUT,
				        						GLBL_AREA_DATA_CNT 																									AS GLBL_AREA_DATA_CNT,
				            					COUNT (BIZ_ELPS_TM_TXT) OVER (PARTITION BY SCR_APP_ID) 																AS SAMPLE_CNT,
				            					ROUND((STDDEV(to_number(BIZ_ELPS_TM_TXT)/1000000) OVER (PARTITION BY SCR_APP_ID)),2) 								AS STDEV_BIZTM,
				            					ROUND((STDDEV(GLBL_AREA_DATA_CNT) OVER (PARTITION BY SCR_APP_ID)),2) 												AS STDEV_SMSGSIZE
				         				 From 	ONL_PROC_LOG
				         				 WHERE  EZCANCELFLAG  = '0'
				         				 AND	(SUBSTR(ERR_MSG_CD, LENGTH(ERR_MSG_CD),1) != 'E' OR ERR_MSG_CD IS NULL)
				         				 AND    BIZ_ELPS_TM_TXT  != '0' AND	BIZ_ELPS_TM_TXT IS NOT NULL  
		         						 AND    GLBL_AREA_DATA_CNT  != '0'
				        				 <isNotNull property="cMsg.jvmNm_S">
		        						 AND    JVM_NM        = #cMsg.jvmNm_S#
		        						 </isNotNull>
		        						 <isNotNull property="cMsg.glblCmpyCd">
		        						 AND    GLBL_CMPY_CD  = #cMsg.glblCmpyCd#
		        						 </isNotNull>
				        				 <isNotNull property="cMsg.bizStartTs">
										 AND 	OPS_TS	  &gt;= #cMsg.bizStartTs#
										 </isNotNull>
										 <isNotNull property="cMsg.bizEndTs">
										 AND 	OPS_TS    &lt;= #cMsg.bizEndTs#
										 </isNotNull>
									 )
							<isNotNull property="cMsg.xxTotCnt">		 
		  				  	WHERE RANK &lt;= #cMsg.xxTotCnt#
		  				  	</isNotNull>
		  				 )
				)  				 
  		WHERE	ROWNUM &lt;= 201
	</statement>
	
	<statement id="getGlblAreaSizeRank" parameterClass="Map" resultClass="Map">
		SELECT *
		FROM	(
				SELECT	RANK() OVER (ORDER BY GLBL_AREA_DATA_CNT DESC) AS RANK,
						GLBL_CMPY_CD,
						JVM_NM,
						OPS_USR_ID,
		        		BIZ_ID,
		        		SCR_APP_ID,
		        		BIZ_ELPS_TM_TXT,
		            	TROUGHPUT,
		        		GLBL_AREA_DATA_CNT,
		            	SAMPLE_CNT,
		            	STDEV_BIZTM,
		            	STDEV_SMSGSIZE 
				FROM	(
							SELECT * 
						 	FROM	(
						 				SELECT	RANK() OVER (PARTITION BY SCR_APP_ID ORDER BY GLBL_AREA_DATA_CNT DESC)					AS RANK,
		            							GLBL_CMPY_CD 																			AS GLBL_CMPY_CD,
		            							JVM_NM 																					AS JVM_NM,
		            							OPS_USR_ID 																				AS OPS_USR_ID,
				        						BIZ_ID 																					AS BIZ_ID,
				        						SCR_APP_ID 																				AS SCR_APP_ID,
				        						ROUND(to_number(BIZ_ELPS_TM_TXT)/1000000,2) 											AS BIZ_ELPS_TM_TXT,
				            					ROUND((GLBL_AREA_DATA_CNT/(to_number(BIZ_ELPS_TM_TXT)/1000000000)),2) 					AS TROUGHPUT,
				        						GLBL_AREA_DATA_CNT 																		AS GLBL_AREA_DATA_CNT,
				            					COUNT (BIZ_ELPS_TM_TXT) OVER (PARTITION BY SCR_APP_ID) 									AS SAMPLE_CNT,
				            					ROUND((STDDEV(to_number(BIZ_ELPS_TM_TXT)/1000000) OVER (PARTITION BY SCR_APP_ID)),2) 	AS STDEV_BIZTM,
				            					ROUND((STDDEV(GLBL_AREA_DATA_CNT) OVER (PARTITION BY SCR_APP_ID)),2) 					AS STDEV_SMSGSIZE
				         				 From 	ONL_PROC_LOG
				         				 WHERE  EZCANCELFLAG  = '0'
				         				 AND	(SUBSTR(ERR_MSG_CD, LENGTH(ERR_MSG_CD),1) != 'E' OR ERR_MSG_CD IS NULL)
		         						 AND    GLBL_AREA_DATA_CNT  != '0'
				        				 <isNotNull property="cMsg.jvmNm_S">
		        						 AND    JVM_NM        = #cMsg.jvmNm_S#
		        						 </isNotNull>
		        						 <isNotNull property="cMsg.glblCmpyCd">
		        						 AND    GLBL_CMPY_CD  = #cMsg.glblCmpyCd#
		        						 </isNotNull>
				        				 <isNotNull property="cMsg.bizStartTs">
										 AND 	OPS_TS	  &gt;= #cMsg.bizStartTs#
										 </isNotNull>
										 <isNotNull property="cMsg.bizEndTs">
										 AND 	OPS_TS    &lt;= #cMsg.bizEndTs#
										 </isNotNull>
									 )
							<isNotNull property="cMsg.xxTotCnt">		 
		  				  	WHERE RANK &lt;= #cMsg.xxTotCnt#
		  				  	</isNotNull>
		  				 )
				)  				 
  		WHERE	ROWNUM &lt;= 201
	</statement>
	
	<statement id="getJvmNm" parameterClass="Map" resultClass="Map">
        SELECT  JVM_NM    		
        FROM    ONL_PROC_CONFIG
        WHERE   EZCANCELFLAG  = '0'
        AND     GLBL_CMPY_CD  = #cMsg.glblCmpyCd#
        ORDER BY
        	JVM_NM ASC
	</statement>
	
	<statement id="getDataForExportExcel" parameterClass="Map" resultClass="Map">
		SELECT
		  	LOGA.BIZ_ID AS BUSINESS_ID,
			AP_NM1.BIZ_APP_NM AS BUSINESS_NAME,
			LOGA.SCR_APP_ID AS EVENT_NAME,
			ROUND(TO_NUMBER(LOGA.BIZ_ELPS_TM_TXT)/1000000000, 3) AS EVENT_ELAPSED_TIME,
			BIZ.CNT AS NUM_OF_EXECUTIONS,
			LOGA.GLBL_AREA_DATA_CNT AS SMSG_SIZE,
			LOGA.EZINUSERID AS USER_ID,
			AUTH_PSN.FIRST_NM || ' ' ||  AUTH_PSN.MID_NM || ' ' || AUTH_PSN.LAST_NM AS USER_NAME,
			LOGA.OPS_TS AS OPERATION_DATE,
			LOGA.JVM_NM
		FROM
			ONL_PROC_LOG LOGA,
			AUTH_PSN,
		  	(SELECT 
		      	C1.SCR_APP_ID AS ID,
		      	COUNT(C1.SCR_APP_ID) AS CNT
		  	FROM 
		      	ONL_PROC_LOG C1
		  	WHERE
		      	C1.EZCANCELFLAG = '0'
		  	AND C1.GLBL_CMPY_CD = #cMsg.glblCmpyCd#
		  	AND C1.OPS_TS     &gt;= #cMsg.bizStartTs#
		  	AND C1.OPS_TS     &lt; #cMsg.bizEndTs#
	      	GROUP BY C1.SCR_APP_ID) BIZ,
			(SELECT
		     	UP_TAB.BIZ_APP_ID,
		        UP_TAB.BIZ_APP_NM
		     FROM
		        UP_TAB
		     UNION
		        SELECT
		        	BIZ_APP_ID,
		            BIZ_APP_NM
		        FROM
		            CD_MENU_TBL
			) AP_NM1
		WHERE
		 	LOGA.EZCANCELFLAG = '0'
		    AND LOGA.GLBL_CMPY_CD = #cMsg.glblCmpyCd#
		    AND AP_NM1.BIZ_APP_ID (+)= LOGA.BIZ_ID
		    AND AUTH_PSN.USR_NM = LOGA.OPS_USR_ID
		    AND BIZ.ID = LOGA.SCR_APP_ID
		    AND LOGA.OPS_TS     &gt;= #cMsg.bizStartTs#
		    AND LOGA.OPS_TS     &lt; #cMsg.bizEndTs#
		    AND	(SUBSTR(LOGA.ERR_MSG_CD, LENGTH(LOGA.ERR_MSG_CD),1) != 'E' OR LOGA.ERR_MSG_CD IS NULL)
			AND LOGA.BIZ_ELPS_TM_TXT  != '0' 
			AND	LOGA.BIZ_ELPS_TM_TXT IS NOT NULL
		ORDER BY
			TO_NUMBER(LOGA.BIZ_ELPS_TM_TXT) DESC
	</statement>
</sqlMap>